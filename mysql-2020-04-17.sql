-- MySQL dump 10.13  Distrib 5.7.29, for Linux (x86_64)
--
-- Host: 177.104.62.5    Database: DB_MCTest
-- ------------------------------------------------------
-- Server version	5.7.29-0ubuntu0.18.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `account_user`
--

DROP TABLE IF EXISTS `account_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `account_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(15) NOT NULL,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(30) NOT NULL,
  `email` varchar(255) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  `is_trusty` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`),
  UNIQUE KEY `email` (`email`)
) ENGINE=InnoDB AUTO_INCREMENT=82 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `account_user`
--

LOCK TABLES `account_user` WRITE;
/*!40000 ALTER TABLE `account_user` DISABLE KEYS */;
INSERT INTO `account_user` VALUES (1,'pbkdf2_sha256$150000$EjhA4GupQhAI$n/i1LnFVELpAuABsFTlJr4v87awrFbiReV39hya/fyE=','2020-04-16 12:13:17.460516',1,'fzampirolli','Francisco','Zampirolli','fzampirolli@ufabc.edu.br',1,1,'2019-01-14 18:03:04.000000',0),(2,'pbkdf2_sha256$150000$CU4kOd96rDb0$ovrFlhWgQ+AhPW+BFKLUkaPH+ujM4UAZFLtZZAzOa0c=',NULL,0,'rafaela.rocha','Rafaela','Rocha','rafaela.rocha@ufabc.edu.br',0,1,'2019-01-21 21:43:46.000000',0),(6,'pbkdf2_sha256$150000$YPzcidBEa9hZ$jUnFJMNK/6WPsc1A8SqwF5Q5uM/gc2C2LUB8SRqd5JY=','2019-04-22 12:34:09.996320',0,'alexandre.doniz','ALEXANDRE','ALVES','alexandre.donizeti@ufabc.edu.br',0,1,'2019-01-22 20:08:22.093718',0),(7,'pbkdf2_sha256$150000$wDjSdmMZyj5q$thJYaH3FZZy3UhW/QlYSi+xCuDjJLYzW8KWZ48wFek8=','2019-04-22 19:21:48.751101',0,'alexandre.noma','ALEXANDRE','NOMA','alexandre.noma@ufabc.edu.br',0,1,'2019-01-22 20:08:24.751924',0),(14,'pbkdf2_sha256$150000$YBs8unxyjZHW$Tqi8RBjQ31pcQAC59Y0KMKX9Ta0wTfbMQ+Pja/CIOqM=','2020-02-03 11:38:57.173621',0,'celso.kurashima','CELSO','KURASHIMA','celso.kurashima@ufabc.edu.br',0,1,'2019-01-22 20:08:25.698649',0),(17,'pbkdf2_sha256$150000$Cav95nkEXS9n$7nuDOV/P6N5ntQlMhQx/1Xv557qdJLyN7sbjdTI96bI=','2019-04-29 21:37:37.892032',0,'daniel.boari','DANIEL','COELHO','daniel.boari@ufabc.edu.br',0,1,'2019-01-22 20:08:26.000054',0),(20,'pbkdf2_sha256$150000$KdkWsLU0SUVr$DK6+i153AIUaBDPE7y4zMVyqcpKbElQWV8NhuJ8J/nQ=','2020-03-11 14:40:21.277952',0,'edson.pimentel','Edson','Pimentel','edson.pimentel@ufabc.edu.br',0,1,'2019-01-22 20:08:26.267693',0),(22,'pbkdf2_sha256$150000$eakTSn2561mB$PdgopIijCkxsEt04l31yY3J3oVwMI4yzkLXJaznl6T4=','2019-04-18 12:43:34.984477',0,'folivetti','FABRÍCIO','FRANÇA','folivetti@ufabc.edu.br',0,1,'2019-01-22 20:08:26.435470',0),(23,'',NULL,0,'fernando.teubl','Fernando','Teuble','fernando.teubl@ufabc.edu.br',0,1,'2019-01-22 20:08:26.000000',0),(25,'pbkdf2_sha256$150000$LvGqiCg2snfO$pMI6k6V48vaipijIqOcYznQbHuJ82O0KQjZMB4uX9M4=','2019-05-13 20:40:27.208410',0,'francisco.fraga','FRANCISCO','SILVA','francisco.fraga@ufabc.edu.br',0,1,'2019-01-22 20:08:26.695363',0),(31,'pbkdf2_sha256$150000$5Kx34HLhRxwH$3eH8CUlPpLTSIglYOG7xXJ3bU/lt5QD/JA2TXtpQdww=','2019-03-02 02:35:04.565260',0,'john.sims','JOHN','SIMS','john.sims@ufabc.edu.br',0,1,'2019-01-22 20:08:27.315990',0),(33,'pbkdf2_sha256$150000$ofoSeP1ewgIi$HiJVbg7g9aJ9dCpiiKalIsGr906coOIe9Umjn7bX7po=','2019-04-16 17:18:28.576088',0,'luiz.rozante','Luiz','Rozante','luiz.rozante@ufabc.edu.br',0,1,'2019-01-22 20:08:27.516826',0),(34,'pbkdf2_sha256$150000$zzrVuNclk6JE$3z67KaGO5BGguyjdpv/ryagHgCq5e3OQs+Mk1AQUrdw=','2019-03-13 14:24:35.521451',0,'luneque.junior','LUNEQUE','JÚNIOR','luneque.junior@ufabc.edu.br',0,1,'2019-01-22 20:08:27.617383',0),(36,'pbkdf2_sha256$150000$omcd60w8U6U4$v9Z9N8tRb1ixVLr0GrERzBQCt/Yt8cHAZRqxJ+m3lrA=','2019-04-22 18:50:55.747739',0,'marcio.oikawa','MÁRCIO','OIKAWA','marcio.oikawa@ufabc.edu.br',0,1,'2019-01-22 20:08:27.778569',0),(39,'',NULL,0,'mirtha.lina','MIRTHA','VENERO','mirtha.lina@ufabc.edu.br',0,1,'2019-01-22 20:08:28.054774',0),(41,'pbkdf2_sha256$150000$wOF0RNOQPFoB$epZdxNksqhlI+IOPVgx0FKe/JGD9gJfJu+RZaEiRL6o=','2019-04-21 20:47:40.241906',0,'natalia.emelian','NATALIA','EMELIANOVA','natalia.emelianova@ufabc.edu.br',0,1,'2019-01-22 20:08:28.239100',0),(42,'pbkdf2_sha256$150000$xdOGuVjZPN6L$vijefAx8x8bnBWmiMHesKD6ngNfh3ZEMwgd3xgnTCjM=','2019-05-16 17:38:30.636625',0,'paulo.pisani','PAULO','PISANI','paulo.pisani@ufabc.edu.br',0,1,'2019-01-22 20:08:28.330685',0),(48,'pbkdf2_sha256$150000$rwQklkEbmgfR$q1lP2QuwyfCaPg7Emtk+sKGWhfiLWueSuyOHvkeHSQw=','2019-08-28 16:13:39.017737',0,'valerio.batista','VALÉRIO','BATISTA','valerio.batista@ufabc.edu.br',0,1,'2019-01-22 20:08:28.968681',0),(49,'pbkdf2_sha256$150000$3jVaubI4Nvtq$gl8hrnx/gCJxsoZl+XIs80XDsCRBebIlNFmKWY0/p5k=','2020-03-11 17:59:57.543839',0,'vera.nagamuta','VERA','ARAUJO','vera.nagamuta@ufabc.edu.br',0,1,'2019-01-22 20:08:29.077165',0),(52,'pbkdf2_sha256$150000$FDQMRYJXK5qs$MSXLQsU0GHc6eluxOIadG4DncgIEGo4dzoL8mE00cYo=','2019-01-31 16:34:56.000000',0,'aline.lima','Aline','Lima','aline.lima@mj.gov.br',0,1,'2019-01-30 17:20:23.000000',0),(53,'pbkdf2_sha256$150000$TfG2rPAWXJ4W$yg4R9hd45Q2oXBof8oJdNSEwW22ZIpgMjjUtnhSboig=','2019-10-08 12:50:30.939996',0,'fzstudent','Francisco','Estudante','fzstudent@ufabc.edu.br',0,1,'2019-01-31 07:27:04.065858',0),(54,'pbkdf2_sha256$150000$XEJRukPAPa3N$aSq9YDlJxKJwYwwXxxVNZfrY5bXpKB6YGXuZNaN8PNE=','2019-04-29 22:15:16.830300',0,'fabio.souza','FABIO','SOUZA','fabio.souza@ufabc.edu.br',0,1,'2019-02-08 12:59:26.185264',0),(55,'pbkdf2_sha256$150000$1710ZUPAXZwj$isf10gf+E/6giNj/GYHPBW3JDeHUWcVXVT6yZJ84tbI=','2020-03-04 12:55:01.064162',0,'steil','Leonardo','Steil','steil@ufabc.edu.br',0,1,'2019-02-15 14:20:55.000000',0),(56,'pbkdf2_sha256$150000$HjbZxHGaMgYp$zSg8IKtVQFTz/fDHHNGoFjKVMpj3HMSwhZvqS0qz/aQ=','2019-02-15 21:48:09.000000',0,'sandra.trevisan','Sandra','Trevisan','sandra.trevisan@ufabc.edu.br',0,1,'2019-02-15 18:24:13.000000',0),(57,'pbkdf2_sha256$150000$F29DWYuOp7g4$1jCq/EGyzYSojoouyZgMJfDgkcX+WKa1d8IXuiZNXdc=','2019-08-07 20:07:53.145144',0,'luciana.milena','Luciana','Milena','luciana.milena@ufabc.edu.br',0,1,'2019-03-14 23:54:46.000000',0),(58,'pbkdf2_sha256$150000$oSUXUuOttoe4$frP78AU1/KyRhsMfeeaaR5Q21wjj6ggGHihUkYhyU/s=','2019-08-07 19:52:28.377167',0,'ana.muta','Ana','Muta','ana.muta@ufabc.edu.br',0,1,'2019-03-15 18:38:33.000000',0),(59,'pbkdf2_sha256$150000$WdRY3y5LxksJ$ncmEqCwBghElhbhHzhR0nSz245MC/AthLJ4D7MjdiBw=','2019-04-23 17:27:47.078880',0,'r.fernando','Rafael','Pereira','r.fernando@ufabc.edu.br',0,1,'2019-04-23 17:21:40.099257',0),(60,'pbkdf2_sha256$150000$bSfKIjX97nSz$fChlvTg/HE05OcAf5geq0q7PfeDqBJqjGOb5NIjtULo=','2019-12-20 18:04:50.416695',0,'guiou','Guiou','Kobayashi','guiou.kobayashi@ufabc.edu.br',0,1,'2019-05-21 10:06:10.000000',0),(61,'pbkdf2_sha256$150000$Fy3XvIxJxDGJ$l0WcTxnvGuDtv5R6idtul694pKEbjl3whY24gbU8Hl0=',NULL,0,'ercilio.silva','Ercílio','Silva','ercilio.silva@ufabc.edu.br',0,1,'2019-05-21 10:07:30.000000',0),(62,'pbkdf2_sha256$150000$JanQtbVyJY4V$zRWnsRieGxUHvfP7dLGjbTZVzxu2LOj3qkplGFreZ8I=',NULL,0,'joao.moreira','João','Moreira','joao.moreira@ufabc.edu.br',0,1,'2019-05-21 10:08:42.000000',0),(63,'pbkdf2_sha256$150000$uEM9DqluU08R$mQhN5MGyOHcxLC2529nv1fOgDsoStdZbj+ekCizO+sQ=','2020-03-13 19:25:00.066379',0,'jorge.tomioka','Jorge','Tomioka','jorge.tomioka@ufabc.edu.br',0,1,'2019-05-21 10:09:41.000000',0),(64,'pbkdf2_sha256$150000$JSmC0aBQoDju$gGJmjnRO+7+sIhlxIfss3XDqs4QkWNHyxVC7ZNoTSdM=','2020-02-17 19:58:47.841660',0,'leandro.teodoro','Leandro','Teodoro','leandro.teodoro@ufabc.edu.br',0,1,'2019-06-01 17:23:22.000000',0),(65,'pbkdf2_sha256$150000$B7gmfw6Nt7Wu$eZzFtZC4rmAJcwOWwTQ4K5jelEaWNGVe9HUj+FUkM58=','2020-02-14 15:23:11.856853',0,'fzprof','Francisco','Professor','fzprof@ufabc.edu.br',0,1,'2019-09-02 20:48:18.000000',0),(66,'pbkdf2_sha256$150000$loJpGkavan86$hjvnLzl0tR+fOUw7gyoBxXTL8Qnqeg/mfyun2AIbULA=',NULL,0,'fzcoord','Francisco','Coordenador','fzcoord@ufabc.edu.br',0,1,'2019-09-02 20:49:06.000000',0),(67,'pbkdf2_sha256$150000$Df5NM3EbyayI$Yk1/r3bLCYi5/11DGgRfhiM/68yM9fqJ3EKTaUUBuhk=','2019-12-10 14:00:17.976719',0,'g.aldeia','Guilherme','Aldeia','g.aldeia@ufabc.edu.br',0,1,'2019-10-08 12:00:16.000000',0),(68,'pbkdf2_sha256$150000$ur7KW2LfeVtz$Y8Q/2vlAhNraxOgz4tUIxEoWU/sjGtCWQrioQqdf8z4=','2019-10-10 04:14:57.518661',0,'renato.coutinho','Renato','Coutinho','renato.coutinho@ufabc.edu.br',0,1,'2019-10-09 17:59:36.000000',0),(69,'pbkdf2_sha256$150000$CFMS9DVUw8fu$jpUsQ0gz5lhTusE6ay8zrT3UwoK9CSov/jlzwFtzAiE=',NULL,0,'irineu.antunes','Irineu','Antunes Junior','irineu.antunes@ufabc.edu.br',0,1,'2019-10-14 18:51:10.102531',0),(70,'pbkdf2_sha256$150000$87IRTO5WQ22A$vWCVsITP/OLMaWCnLZZkeYbCAfWtsvLFV0819+3wMqE=','2019-10-19 22:13:15.559998',0,'juliana.braga','Juliana','Braga','juliana.braga@ufabc.edu.br',0,1,'2019-10-19 14:01:19.353704',0),(71,'pbkdf2_sha256$150000$sapzlErsqboH$4Y8YTl2yI06H0PwR2o48iwwFxRXtXtKZUqTg5+DHjZ0=',NULL,0,'manic.gordana','Gordana','Manic','manic.gordana@ufabc.edu.br',0,1,'2019-10-20 12:30:38.306199',0),(72,'pbkdf2_sha256$150000$4XAMV3JeW7Z2$iI944G38teC7A2ppB8MwEFpK1yL9qURaw8+38aNcGFA=','2019-11-18 22:21:45.000000',0,'wcosta','Wellington','Costa','wcosta@ufabc.edu.br',0,1,'2019-11-18 22:21:09.000000',0),(74,'pbkdf2_sha256$150000$HmHtMVsFQDil$ZuNegD1OGJvTEKZUxdM9cFEI6G5xGbsOPl4uXNhXiJ0=','2019-12-01 13:47:47.044159',0,'thiago.covoes','Thiago','Covões','thiago.covoes@ufabc.edu.br',0,1,'2019-12-01 13:47:02.669037',0),(75,'pbkdf2_sha256$150000$fJWgLWicZGeF$QssEPTkAOONQjbxdYA2Qwfa/aFLyBk7WziA8g5y/6LY=','2020-02-18 18:15:48.154176',0,'heitor.rodrigue','Heitor','Rodrigues','heitor.rodrigues@aluno.ufabc.edu.br',0,1,'2020-02-18 17:40:30.000000',0),(76,'',NULL,0,'itana','Itana','Stiubiener','itana@ufabc.edu.br',0,1,'2020-02-19 23:29:22.986491',0),(77,'',NULL,0,'joao.gois','João','Gois','joao.gois@ufabc.edu.br',0,1,'2020-02-19 23:29:23.000000',0),(78,'pbkdf2_sha256$150000$F4E7lSVuGHFy$VgsRzbp3vX/xzTgw34WCtb3bjgKu04CWCRJmedBW4IM=',NULL,0,'edson.iriarte','Edson','Iriarte','edson.iriarte@ufabc.edu.br',0,1,'2020-03-10 22:44:45.000000',0),(79,'pbkdf2_sha256$150000$Np56QahfIHtK$YHDvS19E8POadqbNbtttXFxoIxyb7E2WSUriMB3jbAo=','2020-03-12 19:49:40.468233',0,'denise.goya','Denise','Goya','denise.goya@ufabc.edu.br',0,1,'2020-03-12 11:40:12.000000',0),(80,'pbkdf2_sha256$150000$SEfSxlhjPtBv$Fi0p/IQw1tLB+nBkGbC3z7ujDrenVtVZFjAz9dDy230=','2020-03-21 10:57:03.509456',0,'ugo.ibusuki','Ugo','Ibusuki','ugo.ibusuki@ufabc.edu.br',0,1,'2020-03-19 19:51:18.000000',0),(81,'pbkdf2_sha256$150000$p0YNj2LRVP39$Vid7b9O6mFIPD+7YzzxCshDGK/lN9XXSvIWUaAKFp7w=','2020-04-08 13:07:51.842432',0,'diego.ferruzzo','Diego','Ferruzzo','diego.ferruzzo@ufabc.edu.br',0,1,'2020-04-08 13:07:22.314598',0);
/*!40000 ALTER TABLE `account_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `account_user_groups`
--

DROP TABLE IF EXISTS `account_user_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `account_user_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `account_user_groups_user_id_group_id_4d09af3e_uniq` (`user_id`,`group_id`),
  KEY `account_user_groups_group_id_6c71f749_fk_auth_group_id` (`group_id`),
  CONSTRAINT `account_user_groups_group_id_6c71f749_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `account_user_groups_user_id_14345e7b_fk_account_user_id` FOREIGN KEY (`user_id`) REFERENCES `account_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=83 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `account_user_groups`
--

LOCK TABLES `account_user_groups` WRITE;
/*!40000 ALTER TABLE `account_user_groups` DISABLE KEYS */;
INSERT INTO `account_user_groups` VALUES (4,1,2),(2,2,2),(9,6,2),(10,7,2),(17,14,2),(20,17,2),(23,20,2),(25,22,2),(26,23,2),(28,25,2),(34,31,2),(36,33,2),(37,34,2),(39,36,2),(42,39,2),(44,41,2),(45,42,2),(51,48,2),(52,49,2),(56,52,2),(57,54,2),(60,55,2),(58,56,2),(63,57,2),(64,58,2),(65,60,2),(66,61,2),(67,62,2),(68,63,2),(69,64,2),(71,65,2),(70,66,2),(72,67,2),(73,68,2),(79,70,2),(76,71,2),(74,72,2),(75,75,2),(77,76,2),(78,77,2),(80,78,2),(81,79,2),(82,80,2);
/*!40000 ALTER TABLE `account_user_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `account_user_user_permissions`
--

DROP TABLE IF EXISTS `account_user_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `account_user_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `account_user_user_permis_user_id_permission_id_48bdd28b_uniq` (`user_id`,`permission_id`),
  KEY `account_user_user_pe_permission_id_66c44191_fk_auth_perm` (`permission_id`),
  CONSTRAINT `account_user_user_pe_permission_id_66c44191_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `account_user_user_pe_user_id_cc42d270_fk_account_u` FOREIGN KEY (`user_id`) REFERENCES `account_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `account_user_user_permissions`
--

LOCK TABLES `account_user_user_permissions` WRITE;
/*!40000 ALTER TABLE `account_user_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `account_user_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(150) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
INSERT INTO `auth_group` VALUES (1,'coordenador'),(2,'professor');
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=78 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
INSERT INTO `auth_group_permissions` VALUES (38,1,21),(39,1,22),(40,1,23),(1,1,24),(2,1,25),(3,1,26),(4,1,27),(5,1,28),(6,1,29),(7,1,30),(8,1,31),(9,1,32),(10,1,33),(34,1,35),(11,1,37),(12,1,41),(35,1,42),(36,1,43),(37,1,44),(13,1,45),(14,1,46),(15,1,47),(16,1,48),(17,1,49),(18,1,50),(19,1,51),(20,1,52),(21,1,53),(22,1,54),(23,1,55),(24,1,56),(25,1,57),(26,1,58),(27,1,59),(28,1,60),(29,1,61),(30,1,62),(31,1,63),(32,1,64),(33,1,65),(74,2,17),(75,2,18),(76,2,19),(77,2,20),(41,2,24),(42,2,25),(43,2,26),(44,2,27),(45,2,28),(46,2,29),(47,2,30),(48,2,31),(49,2,32),(50,2,33),(51,2,37),(52,2,41),(53,2,45),(54,2,46),(55,2,47),(56,2,48),(57,2,49),(58,2,50),(59,2,51),(60,2,52),(61,2,53),(62,2,54),(63,2,55),(64,2,56),(65,2,57),(66,2,58),(67,2,59),(68,2,60),(69,2,61),(70,2,62),(71,2,63),(72,2,64),(73,2,65);
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=74 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can view log entry',1,'view_logentry'),(5,'Can add permission',2,'add_permission'),(6,'Can change permission',2,'change_permission'),(7,'Can delete permission',2,'delete_permission'),(8,'Can view permission',2,'view_permission'),(9,'Can add group',3,'add_group'),(10,'Can change group',3,'change_group'),(11,'Can delete group',3,'delete_group'),(12,'Can view group',3,'view_group'),(13,'Can add content type',4,'add_contenttype'),(14,'Can change content type',4,'change_contenttype'),(15,'Can delete content type',4,'delete_contenttype'),(16,'Can view content type',4,'view_contenttype'),(17,'Can add session',5,'add_session'),(18,'Can change session',5,'change_session'),(19,'Can delete session',5,'delete_session'),(20,'Can view session',5,'view_session'),(21,'Can add topic',6,'add_topic'),(22,'Can change topic',6,'change_topic'),(23,'Can delete topic',6,'delete_topic'),(24,'Can view topic',6,'view_topic'),(25,'Can add question',7,'add_question'),(26,'Can change question',7,'change_question'),(27,'Can delete question',7,'delete_question'),(28,'Can view question',7,'view_question'),(29,'Set question as validated',7,'can_mark_update'),(30,'Can add answer',8,'add_answer'),(31,'Can change answer',8,'change_answer'),(32,'Can delete answer',8,'delete_answer'),(33,'Can view answer',8,'view_answer'),(34,'Can add course',9,'add_course'),(35,'Can change course',9,'change_course'),(36,'Can delete course',9,'delete_course'),(37,'Can view course',9,'view_course'),(38,'Can add institute',10,'add_institute'),(39,'Can change institute',10,'change_institute'),(40,'Can delete institute',10,'delete_institute'),(41,'Can view institute',10,'view_institute'),(42,'Can add discipline',11,'add_discipline'),(43,'Can change discipline',11,'change_discipline'),(44,'Can delete discipline',11,'delete_discipline'),(45,'Can view discipline',11,'view_discipline'),(46,'Can add classroom',12,'add_classroom'),(47,'Can change classroom',12,'change_classroom'),(48,'Can delete classroom',12,'delete_classroom'),(49,'Can view classroom',12,'view_classroom'),(50,'Can add exam',13,'add_exam'),(51,'Can change exam',13,'change_exam'),(52,'Can delete exam',13,'delete_exam'),(53,'Can view exam',13,'view_exam'),(54,'Can add student exam',14,'add_studentexam'),(55,'Can change student exam',14,'change_studentexam'),(56,'Can delete student exam',14,'delete_studentexam'),(57,'Can view student exam',14,'view_studentexam'),(58,'Can add student exam question',15,'add_studentexamquestion'),(59,'Can change student exam question',15,'change_studentexamquestion'),(60,'Can delete student exam question',15,'delete_studentexamquestion'),(61,'Can view student exam question',15,'view_studentexamquestion'),(62,'Can add student',16,'add_student'),(63,'Can change student',16,'change_student'),(64,'Can delete student',16,'delete_student'),(65,'Can view student',16,'view_student'),(66,'Can add user',17,'add_user'),(67,'Can change user',17,'change_user'),(68,'Can delete user',17,'delete_user'),(69,'Can view user',17,'view_user'),(70,'Can add classroom exam',18,'add_classroomexam'),(71,'Can change classroom exam',18,'change_classroomexam'),(72,'Can delete classroom exam',18,'delete_classroomexam'),(73,'Can view classroom exam',18,'view_classroomexam');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_classroom`
--

DROP TABLE IF EXISTS `course_classroom`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_classroom` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `classroom_code` varchar(20) NOT NULL,
  `classroom_room` varchar(20) NOT NULL,
  `classroom_days` varchar(20) NOT NULL,
  `classroom_type` varchar(6) NOT NULL,
  `discipline_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `course_classroom_discipline_id_6c1c6c02_fk_course_discipline_id` (`discipline_id`),
  CONSTRAINT `course_classroom_discipline_id_6c1c6c02_fk_course_discipline_id` FOREIGN KEY (`discipline_id`) REFERENCES `course_discipline` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=347 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_classroom`
--

LOCK TABLES `course_classroom` WRITE;
/*!40000 ALTER TABLE `course_classroom` DISABLE KEYS */;
INSERT INTO `course_classroom` VALUES (3,'teste','s123','','PClass',2),(73,'G001-0','001-0','','TClass',5),(152,'teste','s123','','PClass',12),(153,'teste','s123','','PClass',11),(155,'A-101-0','A-101-0','','PClass',12),(156,'A-104-0','A-104-0','','PClass',12),(157,'A-102-0','A-102-0','','PClass',12),(158,'A-112-0','A-112-0','','PClass',12),(159,'A-114-0','A-114-0','','PClass',12),(160,'A2-S104','A2-S104','','PClass',12),(161,'A2-S105','A2-S105','','PClass',12),(162,'A1-S203','A1-S203','','PClass',12),(163,'NA2','s103-0','','TClass',14),(164,'AC-teste','sala','','TClass',15),(171,'EA-102-0','EA-102-0','','PClass',13),(172,'EA-112-0','EA-112-0','','PClass',13),(173,'EA1-S203','EA1-S203','','PClass',13),(174,'EA2-S104','EA2-S104','','PClass',13),(175,'teste','teste','','PClass',13),(203,'teste2alunos','s123','','PClass',33),(204,'DAESTO013-17SA','SL10','','PClass',33),(205,'NAESTO013-17SA','SL212','','PClass',33),(206,'06-08_TARDE','A-104-0 (Bloco A)','','PClass',12),(207,'06-08_NOITE','407 (Bloco B)','','PClass',12),(208,'EEteste','sala 123','','PClass',20),(209,'A1SA08h','A1','','PClass',20),(210,'A2SA19h','A2','','PClass',20),(211,'A3SB08h','A3sb','','PClass',20),(212,'A3SB10h','A3sb','','PClass',20),(219,'MCTA007','teorica','','TClass',19),(223,'CN 2019.3 SA N B','N','','PClass',36),(224,'PI-EAD-2019-Q3-S1','204-0','','TClass',1),(225,'PI-EAD-2019-Q3-S2','205-0','','TClass',1),(236,'DAESTO013-17-Mat-108','SL108','','PClass',33),(237,'DAESTO013-17-2019-3Q','Sala 108','','PClass',33),(238,'NAESTO013-17-2019-3Q','214','','PClass',33),(239,'A Diu SA 2019-3','S 302-3','','TClass',15),(240,'A Not SA 2019-3','S 213-0','','TClass',15),(244,'NAESTG025-17SB','Alfa 2 SL307','','PClass',37),(245,'NAESTG025-17SB','A2 SL307','','PClass',37),(246,'NAESTG025-17SB2','A2 SL307','','PClass',37),(247,'NAESTG025-17SB3','Alfa 2 SL307','','PClass',37),(248,'NAESTG025-17SB','A2 SL307','','PClass',37),(249,'DAESTO013-17P2_3Q','Sala 108','','PClass',33),(250,'ESTG010-17P2_3Q','Sala 214','','PClass',33),(251,'NAESTO013-17SP2-3Q','Sala 214','','PClass',33),(252,'ESTO013-17 Sub P1MAT','SL108','','PClass',33),(253,'ESTO013-17 Sub P1NOT','SL214','','PClass',33),(254,'DAESTO013-17 3Q SP2','SL108','','PClass',33),(255,'NAESTG013-17SP2','SL214','','PClass',33),(256,'DAESTO013-17 ER','SL','','PClass',33),(257,'A SUBS SA 2019-3','SA','','TClass',15),(258,'A REC SA 2019-3','SA','','TClass',15),(294,'teste CE','sa','','PClass',3),(295,'S006-0','006-0','','TClass',5),(296,'S008-0','008-0','','TClass',5),(297,'A101-0','101-0','','TClass',5),(299,'A103-0','103-0','','TClass',5),(300,'A104-0','104-0','','TClass',5),(301,'A105-0','105-0','','TClass',5),(302,'A106-0','106-0','','TClass',5),(303,'A107-0','107-0','','TClass',5),(304,'A108-0','108-0','','TClass',5),(305,'A109-0','109-0','','TClass',5),(306,'A110-0','110-0','','TClass',5),(307,'A111-0','111-0','','TClass',5),(308,'A112-0','112-0','','TClass',5),(309,'A113-0','113-0','','TClass',5),(310,'A114-0','114-0','','TClass',5),(311,'S204-0','204-0','','TClass',5),(312,'S205-0','205-0','','TClass',5),(313,'S206-0','206-0','','TClass',5),(314,'S207-0','207-0','','TClass',5),(315,'S208-0','208-0','','TClass',5),(316,'S211-0','211-0','','TClass',5),(317,'S212-0','212-0','','TClass',5),(318,'S213-0','213-0','','TClass',5),(319,'S214-0','214-0','','TClass',5),(320,'S301-2','301-2','','TClass',5),(321,'S302-2','302-2','','TClass',5),(322,'S311-2','311-2','','TClass',5),(323,'S407-2','407-2','','TClass',5),(326,'A102-0','102-0','','TClass',5),(328,'0001-0','0001-0','','TClass',5),(329,'turma - PI-DESENV','sala x','','PClass',35),(330,'L402-2','L402-2','','PClass',1),(331,'L403-2','L403-2','','PClass',1),(332,'L404-2','L404-2','','PClass',1),(333,'A1-L101','A1-L101','','PClass',1),(334,'L407-2','L407-2','','PClass',1),(335,'L409-2','L409-2','','PClass',1),(336,'A1-L102','A1-L102','','PClass',1),(337,'PI-teste','s123','','PClass',1),(338,'piTeste2020','s123','','PClass',1),(339,'piTeste2020b','s321','','PClass',1),(340,'fuv2020','s105','','PClass',18),(341,'SD-2019q1-dia','dia','','TClass',39),(342,'NAESTG025-17SB','SL102','','PClass',33),(343,'NAESTG013-17-1Q-2020','Alfa 2 SL102','','PClass',33),(344,'ESTG016-17','1Q2020','','TClass',40),(345,'teste-imagem','123','','PClass',38),(346,'Imagem 2020','123','','PClass',38);
/*!40000 ALTER TABLE `course_classroom` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_classroom_classroom_profs`
--

DROP TABLE IF EXISTS `course_classroom_classroom_profs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_classroom_classroom_profs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `classroom_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `course_classroom_classro_classroom_id_user_id_da4a3ce2_uniq` (`classroom_id`,`user_id`),
  KEY `course_classroom_cla_user_id_3d589b69_fk_account_u` (`user_id`),
  CONSTRAINT `course_classroom_cla_classroom_id_f7438abe_fk_course_cl` FOREIGN KEY (`classroom_id`) REFERENCES `course_classroom` (`id`),
  CONSTRAINT `course_classroom_cla_user_id_3d589b69_fk_account_u` FOREIGN KEY (`user_id`) REFERENCES `account_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=334 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_classroom_classroom_profs`
--

LOCK TABLES `course_classroom_classroom_profs` WRITE;
/*!40000 ALTER TABLE `course_classroom_classroom_profs` DISABLE KEYS */;
INSERT INTO `course_classroom_classroom_profs` VALUES (5,3,2),(6,3,39),(166,152,58),(169,153,58),(170,155,58),(171,156,58),(172,157,58),(173,158,58),(174,159,58),(175,160,58),(176,161,58),(177,162,58),(178,163,1),(256,164,60),(183,171,58),(184,172,58),(185,173,58),(186,174,58),(187,175,1),(188,175,58),(222,203,63),(223,204,63),(224,205,63),(225,206,58),(226,207,58),(229,209,62),(230,210,62),(231,211,62),(232,212,62),(233,219,48),(235,223,68),(237,224,20),(238,224,23),(251,224,39),(250,224,70),(249,224,71),(243,225,20),(245,225,23),(253,225,39),(244,225,70),(252,225,71),(255,237,63),(254,238,63),(258,239,60),(257,240,60),(259,258,60),(298,330,1),(304,330,20),(260,330,23),(299,330,33),(300,330,70),(301,330,71),(302,330,76),(303,330,77),(261,331,1),(308,331,20),(309,331,23),(283,331,70),(305,331,71),(306,331,76),(307,331,77),(310,332,1),(315,332,20),(316,332,23),(311,332,33),(312,332,70),(262,332,71),(313,332,76),(314,332,77),(284,333,1),(289,333,20),(290,333,23),(285,333,33),(286,333,70),(287,333,71),(263,333,76),(288,333,77),(317,334,1),(322,334,20),(323,334,23),(318,334,33),(319,334,70),(320,334,71),(321,334,76),(264,334,77),(324,335,1),(328,335,20),(329,335,23),(265,335,70),(325,335,71),(326,335,76),(327,335,77),(291,336,1),(296,336,20),(297,336,23),(266,336,33),(292,336,70),(293,336,71),(294,336,76),(295,336,77),(275,338,1),(281,338,20),(282,338,23),(276,338,33),(277,338,70),(278,338,71),(279,338,76),(280,338,77),(267,339,1),(273,339,20),(274,339,23),(268,339,33),(269,339,70),(270,339,71),(271,339,76),(272,339,77),(330,340,78),(331,344,80),(332,345,1),(333,346,1);
/*!40000 ALTER TABLE `course_classroom_classroom_profs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_classroom_students`
--

DROP TABLE IF EXISTS `course_classroom_students`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_classroom_students` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `classroom_id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `course_classroom_students_classroom_id_student_id_08ea9b73_uniq` (`classroom_id`,`student_id`),
  KEY `course_classroom_stu_student_id_4e5d6532_fk_student_s` (`student_id`),
  CONSTRAINT `course_classroom_stu_classroom_id_63b3b2e3_fk_course_cl` FOREIGN KEY (`classroom_id`) REFERENCES `course_classroom` (`id`),
  CONSTRAINT `course_classroom_stu_student_id_4e5d6532_fk_student_s` FOREIGN KEY (`student_id`) REFERENCES `student_student` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=42031 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_classroom_students`
--

LOCK TABLES `course_classroom_students` WRITE;
/*!40000 ALTER TABLE `course_classroom_students` DISABLE KEYS */;
INSERT INTO `course_classroom_students` VALUES (5,3,1),(6,3,2),(4,3,3),(37250,73,15996),(16706,155,6300),(16707,155,6301),(16708,155,6302),(16709,155,6303),(16710,155,6304),(16711,155,6305),(16712,155,6306),(16713,155,6307),(16714,155,6308),(16715,155,6309),(16716,155,6310),(16717,155,6311),(16718,155,6312),(16719,155,6313),(16720,155,6314),(16721,155,6315),(16722,155,6316),(16723,155,6317),(16724,155,6318),(16725,155,6319),(16726,155,6320),(16727,155,6321),(16728,155,6322),(16729,155,6323),(16730,155,6324),(16731,155,6325),(16732,155,6326),(16733,155,6327),(16734,155,6328),(16735,155,6329),(16736,155,6330),(16737,155,6331),(16738,155,6332),(16739,155,6333),(16740,155,6334),(16741,155,6335),(16742,155,6336),(16743,155,6337),(16744,155,6338),(16745,155,6339),(16746,155,6340),(16747,155,6341),(16748,155,6342),(16749,155,6343),(16750,155,6344),(16751,155,6345),(16752,155,6346),(16753,155,6347),(16754,155,6348),(16755,155,6349),(16756,155,6350),(16757,155,6351),(16758,155,6352),(16759,155,6353),(16760,155,6354),(16761,155,6355),(16762,155,6356),(16763,155,6357),(16764,155,6358),(16765,155,6359),(16766,155,6360),(16767,155,6361),(16768,155,6362),(16769,155,6363),(16770,155,6364),(16771,155,6365),(16772,155,6366),(16773,155,6367),(16774,155,6368),(16775,155,6369),(16776,155,6370),(16777,155,6371),(16778,155,6372),(16779,155,6373),(16780,155,6374),(16781,155,6375),(16782,155,6376),(16783,155,6377),(16784,155,6378),(16785,155,6379),(16786,155,6380),(17313,155,6905),(16787,156,6381),(16788,156,6382),(16789,156,6383),(16790,156,6384),(16791,156,6385),(16792,156,6386),(16793,156,6387),(16794,156,6388),(16795,156,6389),(16796,156,6390),(16797,156,6391),(16798,156,6392),(16800,156,6394),(16801,156,6395),(16802,156,6396),(16803,156,6397),(16804,156,6398),(16805,156,6399),(16806,156,6400),(16807,156,6401),(16808,156,6402),(16809,156,6403),(16810,156,6404),(16811,156,6405),(16812,156,6406),(16813,156,6407),(16814,156,6408),(16815,156,6409),(16816,156,6410),(16817,156,6411),(16818,156,6412),(16819,156,6413),(16820,156,6414),(16821,156,6415),(16822,156,6416),(16823,156,6417),(16824,156,6418),(16825,156,6419),(16826,156,6420),(16827,156,6421),(16828,156,6422),(16829,156,6423),(16830,156,6424),(16831,156,6425),(16832,156,6426),(16833,156,6427),(16834,156,6428),(16835,156,6429),(16836,156,6430),(16837,156,6431),(16838,156,6432),(16839,156,6433),(16840,156,6434),(16841,156,6435),(16842,156,6436),(16843,156,6437),(16844,156,6438),(16845,156,6439),(16846,156,6440),(16847,156,6441),(16848,156,6442),(16849,156,6443),(16850,156,6444),(16851,156,6445),(16852,156,6446),(16853,156,6447),(16854,156,6448),(16855,156,6449),(16856,156,6450),(16857,156,6451),(16859,156,6453),(16860,156,6454),(16861,156,6455),(16862,156,6456),(16863,156,6457),(16864,156,6458),(16865,156,6459),(16866,156,6460),(16867,156,6461),(16868,156,6462),(16869,156,6463),(16871,157,6465),(16872,157,6466),(16873,157,6467),(16874,157,6468),(16875,157,6469),(16876,157,6470),(16877,157,6471),(16878,157,6472),(16879,157,6473),(16880,157,6474),(16881,157,6475),(16882,157,6476),(16883,157,6477),(16884,157,6478),(16885,157,6479),(16886,157,6480),(16887,157,6481),(16888,157,6482),(16889,157,6483),(16890,157,6484),(16891,157,6485),(16892,157,6486),(16893,157,6487),(16894,157,6488),(16895,157,6489),(16896,157,6490),(16897,157,6491),(16898,157,6492),(16899,157,6493),(16900,157,6494),(16901,157,6495),(16902,157,6496),(16903,157,6497),(16904,157,6498),(16905,157,6499),(16906,157,6500),(16907,157,6501),(16908,157,6502),(16909,157,6503),(16910,157,6504),(16911,157,6505),(16912,157,6506),(16913,157,6507),(16914,157,6508),(16915,157,6509),(16916,157,6510),(16917,157,6511),(16918,157,6512),(16919,157,6513),(16920,157,6514),(16921,157,6515),(16922,157,6516),(16923,157,6517),(16924,157,6518),(16925,157,6519),(16926,157,6520),(16927,157,6521),(16928,157,6522),(16929,157,6523),(16930,157,6524),(16931,157,6525),(16932,157,6526),(16933,157,6527),(16934,157,6528),(16935,157,6529),(16936,157,6530),(16937,157,6531),(16938,157,6532),(16939,157,6533),(16940,157,6534),(16941,157,6535),(16942,157,6536),(16943,157,6537),(16944,157,6538),(16945,157,6539),(16946,157,6540),(16947,157,6541),(16948,157,6542),(16949,157,6543),(16950,157,6544),(16951,157,6545),(16952,157,6546),(16953,157,6547),(16954,157,6548),(16955,157,6549),(16956,158,6550),(16957,158,6551),(16958,158,6552),(16959,158,6553),(16960,158,6554),(16961,158,6555),(16962,158,6556),(16963,158,6557),(16964,158,6558),(16965,158,6559),(16966,158,6560),(16967,158,6561),(16968,158,6562),(16969,158,6563),(16970,158,6564),(16971,158,6565),(16972,158,6566),(16973,158,6567),(16974,158,6568),(16975,158,6569),(16976,158,6570),(16977,158,6571),(16978,158,6572),(16979,158,6573),(16980,158,6574),(16981,158,6575),(16982,158,6576),(16983,158,6577),(16984,158,6578),(16985,158,6579),(16986,158,6580),(16987,158,6581),(16988,158,6582),(16989,158,6583),(16990,158,6584),(16991,158,6585),(16992,158,6586),(16993,158,6587),(16994,158,6588),(16995,158,6589),(16996,158,6590),(16997,158,6591),(16998,158,6592),(16999,158,6593),(17000,158,6594),(17001,158,6595),(17002,158,6596),(17003,158,6597),(17004,158,6598),(17005,158,6599),(17006,158,6600),(17007,158,6601),(17008,158,6602),(17009,158,6603),(17010,158,6604),(17011,158,6605),(17012,158,6606),(17013,158,6607),(17014,158,6608),(17015,158,6609),(17016,158,6610),(17017,158,6611),(17018,158,6612),(17019,158,6613),(17020,158,6614),(17021,158,6615),(17022,158,6616),(17023,158,6617),(17024,158,6618),(17025,158,6619),(17026,158,6620),(17027,158,6621),(17028,158,6622),(17029,158,6623),(17030,158,6624),(17031,159,6625),(17032,159,6626),(17033,159,6627),(17034,159,6628),(17035,159,6629),(17036,159,6630),(17037,159,6631),(17038,159,6632),(17039,159,6633),(17040,159,6634),(17041,159,6635),(17042,159,6636),(17043,159,6637),(17044,159,6638),(17045,159,6639),(17046,159,6640),(17047,159,6641),(17048,159,6642),(17049,159,6643),(17050,159,6644),(17051,159,6645),(17052,159,6646),(17053,159,6647),(17054,159,6648),(17055,159,6649),(17056,159,6650),(17057,159,6651),(17058,159,6652),(17059,159,6653),(17060,159,6654),(17061,159,6655),(17062,159,6656),(17063,159,6657),(17064,159,6658),(17065,159,6659),(17066,159,6660),(17067,159,6661),(17068,159,6662),(17069,159,6663),(17070,159,6664),(17071,159,6665),(17072,159,6666),(17073,159,6667),(17074,159,6668),(17076,159,6670),(17077,159,6671),(17078,159,6672),(17079,159,6673),(17080,159,6674),(17081,159,6675),(17082,159,6676),(17083,159,6677),(17084,159,6678),(17085,159,6679),(17086,159,6680),(17087,159,6681),(17088,159,6682),(17089,159,6683),(17090,159,6684),(17091,159,6685),(17092,159,6686),(17093,159,6687),(17094,159,6688),(17095,159,6689),(17096,159,6690),(17097,159,6691),(17098,159,6692),(17099,160,6693),(17100,160,6694),(17101,160,6695),(17102,160,6696),(17103,160,6697),(17104,160,6698),(17105,160,6699),(17106,160,6700),(17107,160,6701),(17108,160,6702),(17109,160,6703),(17110,160,6704),(17111,160,6705),(17112,160,6706),(17113,160,6707),(17114,160,6708),(17115,160,6709),(17116,160,6710),(17117,160,6711),(17118,160,6712),(17119,160,6713),(17120,160,6714),(17143,160,6737),(17144,160,6738),(17145,160,6739),(17146,160,6740),(17147,160,6741),(17148,160,6742),(17149,160,6743),(17150,160,6744),(17151,160,6745),(17152,160,6746),(17153,160,6747),(17154,160,6748),(17155,160,6749),(17156,160,6750),(17157,160,6751),(17158,160,6752),(17159,160,6753),(17160,160,6754),(17161,160,6755),(17162,160,6756),(17163,160,6757),(17164,160,6758),(17165,160,6759),(17166,160,6760),(17167,160,6761),(17168,160,6762),(17169,160,6763),(17170,160,6764),(17171,160,6765),(17172,160,6766),(17173,160,6767),(17174,160,6768),(17175,160,6769),(17176,160,6770),(17177,160,6771),(17178,160,6772),(17179,160,6773),(17180,160,6774),(17181,160,6775),(17182,160,6776),(17183,160,6777),(17184,160,6778),(17185,160,6779),(17186,160,6780),(17187,160,6781),(17121,161,6715),(17122,161,6716),(17123,161,6717),(17124,161,6718),(17125,161,6719),(17126,161,6720),(17127,161,6721),(17128,161,6722),(17129,161,6723),(17130,161,6724),(17131,161,6725),(17132,161,6726),(17133,161,6727),(17134,161,6728),(17135,161,6729),(17136,161,6730),(17137,161,6731),(17138,161,6732),(17139,161,6733),(17140,161,6734),(17141,161,6735),(17142,161,6736),(17189,161,6783),(17190,161,6784),(17191,161,6785),(17192,161,6786),(17193,161,6787),(17194,161,6788),(17195,161,6789),(17196,161,6790),(17197,161,6791),(17198,161,6792),(17199,161,6793),(17200,161,6794),(17201,161,6795),(17202,161,6796),(17203,161,6797),(17204,161,6798),(17205,161,6799),(17206,161,6800),(17207,161,6801),(17208,161,6802),(17209,161,6803),(17210,161,6804),(17211,161,6805),(17212,161,6806),(17213,161,6807),(17214,161,6808),(17215,161,6809),(17216,161,6810),(17217,161,6811),(17218,161,6812),(17219,161,6813),(17220,161,6814),(17221,161,6815),(17222,161,6816),(17223,161,6817),(17224,161,6818),(17225,161,6819),(17226,161,6820),(17227,161,6821),(17228,161,6822),(17229,161,6823),(17230,162,6824),(17231,162,6825),(17232,162,6826),(17233,162,6827),(17234,162,6828),(17235,162,6829),(17236,162,6830),(17237,162,6831),(17238,162,6832),(17239,162,6833),(17240,162,6834),(17241,162,6835),(17242,162,6836),(17243,162,6837),(17244,162,6838),(17245,162,6839),(17246,162,6840),(17247,162,6841),(17248,162,6842),(17249,162,6843),(17250,162,6844),(17251,162,6845),(17252,162,6846),(17253,162,6847),(17254,162,6848),(17255,162,6849),(17256,162,6850),(17257,162,6851),(17258,162,6852),(17259,162,6853),(17260,162,6854),(17261,162,6855),(17262,162,6856),(17263,162,6857),(17264,162,6858),(17265,162,6859),(17266,162,6860),(17267,162,6861),(17268,162,6862),(17269,162,6863),(17270,162,6864),(17271,162,6865),(17272,162,6866),(17273,162,6867),(17274,162,6868),(17275,162,6869),(17276,162,6870),(17277,162,6871),(17278,162,6872),(17279,162,6873),(17281,162,6875),(17282,162,6876),(17283,162,6877),(17284,162,6878),(17285,162,6879),(17286,162,6880),(17287,162,6881),(17288,162,6882),(17289,162,6883),(17290,162,6884),(17291,162,6885),(17292,162,6886),(17294,162,6888),(17295,162,6889),(17296,162,6890),(17297,162,6891),(17298,162,6892),(17299,162,6893),(17300,162,6894),(17301,162,6895),(17302,162,6896),(17303,162,6897),(17304,162,6898),(17305,162,6899),(17306,162,6900),(17307,162,6901),(17308,162,6902),(17309,162,6903),(17310,162,6904),(17316,163,6906),(17317,163,6907),(17318,163,6908),(17319,163,6909),(17320,163,6910),(17321,163,6911),(17322,163,6912),(17323,163,6913),(17324,163,6914),(17325,163,6915),(17326,163,6916),(17327,163,6917),(17328,163,6918),(17329,163,6919),(17330,163,6920),(17331,163,6921),(17332,163,6922),(17333,163,6923),(17335,163,6925),(17336,163,6926),(17338,163,6927),(17339,163,6928),(17340,163,6929),(17341,163,6930),(17342,163,6931),(17343,163,6932),(17344,163,6933),(17345,163,6934),(17346,163,6935),(17347,163,6936),(17348,163,6937),(17350,163,6939),(17351,163,6940),(17352,163,6941),(17353,163,6942),(17354,163,6943),(17355,163,6944),(17356,163,6945),(17357,163,6946),(17358,163,6947),(17359,163,6948),(17360,163,6949),(17361,163,6950),(17362,163,6951),(17363,163,6952),(17364,163,6953),(17365,163,6954),(17366,163,6955),(17367,163,6956),(17368,163,6957),(17369,163,6958),(17370,163,6959),(17371,163,6960),(17372,163,6961),(17373,163,6962),(17374,163,6963),(17375,163,6964),(17376,163,6965),(17377,163,6966),(17378,163,6967),(17379,163,6968),(17380,163,6969),(17381,163,6970),(17382,163,6971),(17383,163,6972),(17384,163,6973),(17385,163,6974),(33900,164,2912),(18370,171,6385),(18349,171,6402),(18375,171,6414),(18361,171,6424),(18351,171,6429),(18406,171,6463),(18386,171,6472),(18382,171,6483),(18394,171,6497),(18364,171,6510),(18353,171,6512),(18384,171,6514),(18402,171,6654),(18385,171,6723),(18374,171,6731),(18392,171,6732),(18360,171,6792),(18339,171,7095),(18340,171,7096),(18341,171,7097),(18342,171,7098),(18343,171,7099),(18344,171,7100),(18345,171,7101),(18346,171,7102),(18347,171,7103),(18348,171,7104),(18350,171,7105),(18352,171,7106),(18354,171,7107),(18355,171,7108),(18356,171,7109),(18357,171,7110),(18358,171,7111),(18362,171,7113),(18363,171,7114),(18365,171,7115),(18366,171,7116),(18367,171,7117),(18368,171,7118),(18369,171,7119),(18371,171,7120),(18372,171,7121),(18373,171,7122),(18376,171,7123),(18377,171,7124),(18378,171,7125),(18379,171,7126),(18380,171,7127),(18381,171,7128),(18383,171,7129),(18387,171,7130),(18388,171,7131),(18389,171,7132),(18390,171,7133),(18391,171,7134),(18393,171,7135),(18395,171,7136),(18397,171,7138),(18398,171,7139),(18399,171,7140),(18400,171,7141),(18401,171,7142),(18403,171,7143),(18404,171,7144),(18405,171,7145),(18407,171,7146),(18408,171,7147),(18409,171,7148),(18410,171,7149),(18411,171,7150),(18413,172,6437),(18429,172,6499),(18425,172,6564),(18416,172,6565),(18436,172,6581),(18441,172,6625),(18418,172,6652),(18424,172,6661),(18449,172,6673),(18426,172,6678),(18430,172,6686),(18444,172,6688),(18442,172,6795),(18417,172,6829),(18412,172,7151),(18414,172,7152),(18415,172,7153),(18419,172,7154),(18420,172,7155),(18421,172,7156),(18422,172,7157),(18423,172,7158),(18427,172,7159),(18428,172,7160),(18431,172,7161),(18432,172,7162),(18433,172,7163),(18434,172,7164),(18435,172,7165),(18438,172,7167),(18439,172,7168),(18440,172,7169),(18443,172,7170),(18445,172,7171),(18446,172,7172),(18447,172,7173),(18448,172,7174),(18450,172,7175),(18451,172,7176),(18472,173,6456),(18465,173,6613),(18463,173,6674),(18470,173,6826),(18460,173,6835),(18461,173,6862),(18467,173,6870),(18452,173,6895),(18453,173,7177),(18454,173,7178),(18455,173,7179),(18456,173,7180),(18457,173,7181),(18458,173,7182),(18459,173,7183),(18462,173,7184),(18464,173,7185),(18466,173,7186),(18468,173,7187),(18469,173,7188),(18471,173,7189),(18473,173,7190),(18503,174,6400),(18475,174,6408),(18500,174,6451),(18501,174,6549),(18487,174,6586),(18524,174,6588),(18494,174,6735),(18484,174,6746),(18506,174,6747),(18488,174,6767),(18479,174,6769),(18493,174,6783),(18521,174,6793),(18497,174,6799),(18489,174,6800),(18510,174,6801),(18492,174,6807),(18519,174,6808),(18520,174,6812),(18505,174,6816),(18478,174,6884),(18474,174,7191),(18476,174,7192),(18480,174,7194),(18481,174,7195),(18482,174,7196),(18483,174,7197),(18485,174,7198),(18486,174,7199),(18490,174,7200),(18491,174,7201),(18495,174,7202),(18496,174,7203),(18498,174,7204),(18499,174,7205),(18502,174,7206),(18504,174,7207),(18507,174,7208),(18508,174,7209),(18509,174,7210),(18511,174,7211),(18512,174,7212),(18513,174,7213),(18514,174,7214),(18515,174,7215),(18516,174,7216),(18517,174,7217),(18518,174,7218),(18522,174,7219),(18523,174,7220),(18525,174,7221),(18526,174,7222),(40845,203,20479),(34160,204,15957),(34161,204,15958),(30514,206,13650),(30515,206,13651),(30516,206,13652),(30517,206,13653),(30518,206,13654),(30519,206,13655),(30520,206,13656),(30521,206,13657),(30522,206,13658),(30523,206,13659),(30524,206,13660),(30525,206,13661),(30526,206,13662),(30527,206,13663),(30528,206,13664),(30529,206,13665),(30530,206,13666),(30531,206,13667),(30532,206,13668),(30533,206,13669),(30534,206,13670),(30535,206,13671),(30536,206,13672),(30537,206,13673),(30538,206,13674),(30539,206,13675),(30540,206,13676),(30541,206,13677),(30542,206,13678),(30543,206,13679),(30544,206,13680),(30545,206,13681),(30546,206,13682),(30547,206,13683),(30548,206,13684),(30549,206,13685),(30550,206,13686),(30551,206,13687),(30552,206,13688),(30553,206,13689),(30554,206,13690),(30555,207,13691),(30556,207,13692),(30557,207,13693),(30558,207,13694),(30559,207,13695),(30560,207,13696),(30561,207,13697),(30562,207,13698),(30563,207,13699),(30564,207,13700),(30565,207,13701),(30566,207,13702),(30567,207,13703),(30568,207,13704),(30569,207,13705),(30570,207,13706),(30571,207,13707),(30572,207,13708),(30573,207,13709),(30574,207,13710),(30575,207,13711),(30576,207,13712),(30577,207,13713),(30578,207,13714),(30579,207,13715),(30580,207,13716),(30581,207,13717),(30582,207,13718),(30583,207,13719),(30584,207,13720),(30585,207,13721),(30586,207,13722),(30587,207,13723),(30588,207,13724),(30589,207,13725),(30590,207,13726),(30591,207,13727),(32450,208,15248),(32451,208,15249),(32452,208,15250),(32453,208,15251),(32449,208,15524),(30594,209,13728),(30595,209,13729),(30596,209,13730),(30597,209,13731),(30598,209,13732),(30600,209,13734),(30601,209,13735),(30602,209,13736),(30603,209,13737),(30604,209,13738),(30605,209,13739),(30606,209,13740),(30607,209,13741),(30608,209,13742),(30609,209,13743),(30610,209,13744),(30611,209,13745),(30612,209,13746),(30613,209,13747),(30614,209,13748),(30615,209,13749),(30617,209,13751),(30618,209,13752),(30619,209,13753),(30621,209,13755),(30623,209,13757),(30624,209,13758),(30625,209,13759),(30626,209,13760),(30627,209,13761),(30628,209,13762),(30629,209,13763),(30630,209,13764),(30631,209,13765),(30633,209,13767),(30634,209,13768),(30635,209,13769),(30636,209,13770),(30637,209,13771),(30638,209,13772),(30639,209,13773),(30640,209,13774),(30641,209,13775),(30642,209,13776),(30643,209,13777),(30644,209,13778),(30645,209,13779),(30646,209,13780),(30647,209,13781),(30648,209,13782),(30649,209,13783),(30650,209,13784),(30652,209,13786),(30653,209,13787),(30654,209,13788),(30655,209,13789),(30656,209,13790),(30657,209,13791),(30658,209,13792),(30659,209,13793),(30660,209,13794),(30661,209,13795),(30662,209,13796),(30663,209,13797),(30664,209,13798),(30665,209,13799),(30666,209,13800),(30667,209,13801),(30668,209,13802),(30669,209,13803),(30670,209,13804),(30671,209,13805),(30672,209,13806),(30673,209,13807),(30674,209,13808),(30675,209,13809),(30676,209,13810),(30677,209,13811),(30678,209,13812),(30679,209,13813),(30680,209,13814),(30681,209,13815),(30682,210,13816),(30683,210,13817),(30684,210,13818),(30685,210,13819),(30686,210,13820),(30687,210,13821),(30688,210,13822),(30689,210,13823),(30690,210,13824),(30691,210,13825),(30692,210,13826),(30693,210,13827),(30694,210,13828),(30695,210,13829),(30696,210,13830),(30697,210,13831),(30698,210,13832),(30699,210,13833),(30700,210,13834),(30701,210,13835),(30702,210,13836),(30703,210,13837),(30704,210,13838),(30706,210,13840),(30707,210,13841),(30708,210,13842),(30709,210,13843),(30710,210,13844),(30711,210,13845),(30712,210,13846),(30713,210,13847),(30714,210,13848),(30715,210,13849),(30716,210,13850),(30717,210,13851),(30718,210,13852),(30719,210,13853),(30720,210,13854),(30721,210,13855),(30722,210,13856),(30723,210,13857),(30724,210,13858),(30725,210,13859),(30726,210,13860),(30728,210,13862),(30729,210,13863),(30730,210,13864),(30731,210,13865),(30732,210,13866),(30733,210,13867),(30734,210,13868),(30735,210,13869),(30736,210,13870),(30737,210,13871),(30738,210,13872),(30739,210,13873),(30740,210,13874),(30741,210,13875),(30742,210,13876),(30743,210,13877),(30744,210,13878),(30745,210,13879),(30746,210,13880),(30747,210,13881),(30748,210,13882),(30750,210,13884),(30751,210,13885),(30752,210,13886),(30753,210,13887),(30754,210,13888),(30755,210,13889),(30756,210,13890),(30757,210,13891),(30758,210,13892),(30759,210,13893),(30760,210,13894),(30761,210,13895),(30762,210,13896),(30763,210,13897),(30764,210,13898),(30765,210,13899),(30766,210,13900),(30767,210,13901),(30768,211,13902),(30769,211,13903),(30770,211,13904),(30771,211,13905),(30772,211,13906),(30773,211,13907),(30774,211,13908),(30775,211,13909),(30776,211,13910),(30777,211,13911),(30778,211,13912),(30779,211,13913),(30780,211,13914),(30781,211,13915),(30782,211,13916),(30783,211,13917),(30784,211,13918),(30785,211,13919),(30786,212,13920),(30787,212,13921),(30788,212,13922),(30789,212,13923),(30790,212,13924),(30791,212,13925),(30792,212,13926),(30793,212,13927),(30794,212,13928),(30795,212,13929),(30796,212,13930),(30797,212,13931),(30798,212,13932),(30799,212,13933),(30800,212,13934),(32500,223,10159),(32482,223,10291),(32490,223,10302),(32541,223,10384),(32480,223,10873),(32458,223,11042),(32535,223,11153),(32531,223,11249),(32494,223,11298),(32502,223,11300),(32478,223,11411),(32473,223,11502),(32499,223,12765),(32527,223,12789),(32516,223,13496),(32467,223,13545),(32498,223,13586),(32485,223,13836),(32491,223,15417),(32511,223,15513),(32459,223,15525),(32460,223,15526),(32461,223,15527),(32462,223,15528),(32463,223,15529),(32464,223,15530),(32465,223,15531),(32466,223,15532),(32468,223,15533),(32469,223,15534),(32470,223,15535),(32471,223,15536),(32472,223,15537),(32474,223,15538),(32475,223,15539),(32476,223,15540),(32477,223,15541),(32479,223,15542),(32481,223,15543),(32483,223,15544),(32484,223,15545),(32487,223,15547),(32488,223,15548),(32489,223,15549),(32492,223,15550),(32493,223,15551),(32495,223,15552),(32496,223,15553),(32497,223,15554),(32501,223,15555),(32503,223,15556),(32504,223,15557),(32505,223,15558),(32506,223,15559),(32507,223,15560),(32508,223,15561),(32509,223,15562),(32510,223,15563),(32512,223,15564),(32513,223,15565),(32514,223,15566),(32515,223,15567),(32517,223,15568),(32518,223,15569),(32519,223,15570),(32520,223,15571),(32521,223,15572),(32522,223,15573),(32523,223,15574),(32524,223,15575),(32525,223,15576),(32526,223,15577),(32528,223,15578),(32529,223,15579),(32530,223,15580),(32532,223,15581),(32533,223,15582),(32534,223,15583),(32536,223,15584),(32537,223,15585),(32539,223,15586),(32540,223,15587),(32542,223,15588),(32543,223,15589),(33811,236,10115),(33754,236,10150),(33779,236,10160),(33750,236,10179),(33756,236,10183),(33772,236,10188),(33791,236,10194),(33793,236,10195),(33802,236,10201),(33768,236,10297),(33770,236,10299),(33775,236,10313),(33808,236,10436),(33763,236,11016),(33787,236,11027),(33807,236,11098),(33751,236,11225),(33810,236,11248),(33771,236,11295),(33759,236,11382),(33762,236,11385),(33753,236,11441),(33778,236,11450),(33797,236,11457),(33755,236,11561),(33801,236,11576),(33815,236,11585),(33752,236,11671),(33757,236,11672),(33769,236,11678),(33792,236,11689),(33777,236,11714),(33761,236,11768),(33782,236,12767),(33766,236,13451),(33812,236,13523),(33803,236,13792),(33809,236,15617),(33795,236,15632),(33760,236,15645),(33764,236,15646),(33765,236,15647),(33767,236,15648),(33773,236,15649),(33774,236,15650),(33776,236,15651),(33780,236,15652),(33781,236,15653),(33783,236,15654),(33784,236,15655),(33785,236,15656),(33786,236,15657),(33788,236,15658),(33789,236,15659),(33790,236,15660),(33794,236,15661),(33796,236,15662),(33798,236,15663),(33799,236,15664),(33800,236,15665),(33804,236,15666),(33805,236,15667),(33806,236,15668),(33813,236,15669),(33745,237,10115),(33688,237,10150),(33713,237,10160),(33684,237,10179),(33690,237,10183),(33706,237,10188),(33725,237,10194),(33727,237,10195),(33736,237,10201),(33702,237,10297),(33704,237,10299),(33709,237,10313),(33742,237,10436),(33697,237,11016),(33721,237,11027),(33741,237,11098),(33685,237,11225),(33744,237,11248),(33705,237,11295),(33693,237,11382),(33696,237,11385),(33687,237,11441),(33712,237,11450),(33731,237,11457),(33689,237,11561),(33735,237,11576),(33749,237,11585),(33686,237,11671),(33691,237,11672),(33703,237,11678),(33726,237,11689),(33711,237,11714),(33695,237,11768),(33716,237,12767),(33700,237,13451),(33746,237,13523),(33737,237,13792),(33743,237,15617),(33729,237,15632),(33694,237,15645),(33698,237,15646),(33699,237,15647),(33701,237,15648),(33707,237,15649),(33708,237,15650),(33710,237,15651),(33714,237,15652),(33715,237,15653),(33717,237,15654),(33718,237,15655),(33719,237,15656),(33720,237,15657),(33722,237,15658),(33723,237,15659),(33724,237,15660),(33728,237,15661),(33730,237,15662),(33732,237,15663),(33733,237,15664),(33734,237,15665),(33738,237,15666),(33739,237,15667),(33740,237,15668),(33747,237,15669),(34295,238,10144),(34223,238,10149),(34264,238,10158),(34302,238,10235),(34235,238,10239),(34227,238,10269),(34269,238,10327),(34277,238,10346),(34285,238,10888),(34250,238,11020),(34256,238,11084),(34233,238,11128),(34261,238,11137),(34266,238,11139),(34290,238,11247),(34244,238,11292),(34238,238,11348),(34232,238,11408),(34293,238,11493),(34226,238,11527),(34241,238,11530),(34253,238,11536),(34239,238,11600),(34286,238,12727),(34298,238,12736),(34262,238,13584),(34275,238,15424),(34279,238,15612),(34288,238,15667),(34224,238,15670),(34225,238,15671),(34228,238,15673),(34230,238,15674),(34231,238,15675),(34234,238,15676),(34236,238,15677),(34237,238,15678),(34240,238,15679),(34242,238,15680),(34243,238,15681),(34245,238,15682),(34246,238,15683),(34247,238,15684),(34248,238,15685),(34251,238,15687),(34252,238,15688),(34254,238,15689),(34255,238,15690),(34257,238,15691),(34258,238,15692),(34259,238,15693),(34260,238,15694),(34263,238,15695),(34265,238,15696),(34267,238,15697),(34270,238,15698),(34271,238,15699),(34272,238,15700),(34273,238,15701),(34274,238,15702),(34276,238,15703),(34278,238,15705),(34280,238,15706),(34281,238,15707),(34282,238,15708),(34283,238,15709),(34287,238,15711),(34289,238,15713),(34291,238,15714),(34292,238,15715),(34294,238,15716),(34296,238,15717),(34301,238,15718),(34299,238,15719),(34300,238,15720),(34554,239,11429),(34523,239,11676),(34525,239,11677),(34528,239,13460),(34547,239,13491),(34546,239,15464),(34512,239,15542),(34520,239,15545),(34501,239,15721),(34502,239,15722),(34503,239,15723),(34504,239,15724),(34505,239,15725),(34506,239,15726),(34507,239,15727),(34508,239,15728),(34509,239,15729),(34510,239,15730),(34511,239,15731),(34513,239,15732),(34514,239,15733),(34515,239,15734),(34516,239,15735),(34517,239,15736),(34518,239,15737),(34519,239,15738),(34521,239,15739),(34522,239,15740),(34524,239,15741),(34526,239,15742),(34527,239,15743),(34529,239,15744),(34530,239,15745),(34531,239,15746),(34532,239,15747),(34533,239,15748),(34534,239,15749),(34535,239,15750),(34536,239,15751),(34537,239,15752),(34538,239,15753),(34539,239,15754),(34540,239,15755),(34541,239,15756),(34542,239,15757),(34543,239,15758),(34544,239,15759),(34545,239,15760),(34548,239,15761),(34549,239,15762),(34550,239,15763),(34551,239,15764),(34552,239,15765),(34553,239,15766),(34555,239,15768),(34556,239,15769),(34557,239,15770),(34558,239,15771),(34559,239,15772),(34560,239,15773),(34561,239,15774),(34562,239,15775),(34563,239,15776),(34564,239,15777),(34565,239,15778),(34566,239,15779),(34567,239,15780),(34568,239,15781),(34569,239,15782),(34570,239,15783),(34571,239,15784),(34572,239,15785),(34573,239,15786),(34574,239,15787),(34575,239,15788),(34576,239,15789),(34577,239,15790),(34578,239,15791),(34587,240,6912),(34589,240,6913),(34590,240,6914),(34619,240,6928),(34629,240,6935),(34663,240,6959),(34665,240,6962),(34584,240,10270),(34614,240,11873),(34604,240,13554),(34638,240,15511),(34686,240,15584),(34655,240,15767),(34579,240,15792),(34580,240,15793),(34581,240,15794),(34582,240,15795),(34583,240,15796),(34585,240,15797),(34586,240,15798),(34588,240,15799),(34591,240,15800),(34592,240,15801),(34593,240,15802),(34594,240,15803),(34595,240,15804),(34596,240,15805),(34597,240,15806),(34598,240,15807),(34599,240,15808),(34600,240,15809),(34601,240,15810),(34602,240,15811),(34603,240,15812),(34605,240,15813),(34606,240,15814),(34607,240,15815),(34608,240,15816),(34609,240,15817),(34610,240,15818),(34611,240,15819),(34612,240,15820),(34613,240,15821),(34615,240,15822),(34616,240,15823),(34617,240,15824),(34618,240,15825),(34620,240,15826),(34621,240,15827),(34622,240,15828),(34623,240,15829),(34624,240,15830),(34625,240,15831),(34626,240,15832),(34627,240,15833),(34628,240,15834),(34630,240,15835),(34631,240,15836),(34632,240,15837),(34633,240,15838),(34634,240,15839),(34635,240,15840),(34636,240,15841),(34637,240,15842),(34639,240,15843),(34640,240,15844),(34641,240,15845),(34642,240,15846),(34643,240,15847),(34644,240,15848),(34645,240,15849),(34646,240,15850),(34647,240,15851),(34648,240,15852),(34649,240,15853),(34650,240,15854),(34651,240,15855),(34652,240,15856),(34653,240,15857),(34654,240,15858),(34656,240,15859),(34657,240,15860),(34658,240,15861),(34659,240,15862),(34660,240,15863),(34661,240,15864),(34662,240,15865),(34664,240,15866),(34666,240,15867),(34667,240,15868),(34668,240,15869),(34669,240,15870),(34670,240,15871),(34671,240,15872),(34672,240,15873),(34673,240,15874),(34674,240,15875),(34675,240,15876),(34676,240,15877),(34677,240,15878),(34678,240,15879),(34679,240,15880),(34680,240,15881),(34681,240,15882),(34682,240,15883),(34683,240,15884),(34684,240,15885),(34685,240,15886),(34687,240,15887),(34688,240,15888),(34689,240,15889),(34690,240,15890),(34691,240,15891),(34692,240,15892),(34693,240,15893),(34096,244,15894),(34097,244,15895),(34098,244,15896),(34099,244,15897),(34100,244,15898),(34101,244,15899),(34102,244,15900),(34103,244,15901),(34104,244,15902),(34106,244,15903),(34107,244,15904),(34108,244,15905),(34109,244,15906),(34110,244,15907),(34111,244,15908),(34112,244,15909),(34113,244,15910),(34114,244,15911),(34115,244,15912),(34116,244,15913),(34117,244,15914),(34118,244,15915),(34119,244,15916),(34120,244,15917),(34121,244,15918),(34122,244,15919),(34123,244,15920),(34124,244,15921),(34125,244,15922),(34126,244,15923),(34127,244,15924),(34128,244,15925),(34129,244,15926),(34130,244,15927),(34131,244,15928),(34132,244,15929),(34133,244,15930),(34134,244,15931),(34135,244,15932),(34136,244,15933),(34137,244,15934),(34138,244,15935),(34139,244,15936),(34140,244,15937),(34141,244,15938),(34142,244,15939),(34143,244,15940),(34144,244,15941),(34145,244,15942),(34146,244,15943),(34147,244,15944),(34148,244,15945),(34149,244,15946),(34150,244,15947),(34151,244,15948),(34152,244,15949),(34153,244,15950),(34154,244,15951),(34155,244,15952),(34156,244,15953),(34157,244,15954),(34158,244,15955),(34159,244,15956),(34162,246,15957),(34163,246,15958),(34164,247,15894),(34166,247,15895),(34167,247,15896),(34168,247,15897),(34169,247,15898),(34170,247,15899),(34171,247,15900),(34172,247,15901),(34173,247,15902),(34175,247,15903),(34176,247,15904),(34177,247,15905),(34178,247,15906),(34179,247,15907),(34180,247,15908),(34181,247,15909),(34182,247,15911),(34183,247,15912),(34184,247,15913),(34185,247,15915),(34186,247,15916),(34187,247,15917),(34188,247,15918),(34189,247,15919),(34190,247,15920),(34191,247,15921),(34192,247,15922),(34193,247,15923),(34194,247,15924),(34196,247,15925),(34197,247,15928),(34198,247,15929),(34199,247,15930),(34200,247,15931),(34201,247,15933),(34202,247,15934),(34203,247,15935),(34204,247,15936),(34205,247,15937),(34206,247,15938),(34207,247,15939),(34208,247,15940),(34209,247,15941),(34210,247,15942),(34211,247,15943),(34212,247,15944),(34213,247,15945),(34214,247,15946),(34215,247,15947),(34216,247,15950),(34217,247,15951),(34218,247,15952),(34219,247,15953),(34220,247,15954),(34221,247,15955),(34222,247,15956),(34165,247,15957),(34195,247,15958),(34444,249,10115),(34387,249,10150),(34413,249,10160),(34383,249,10179),(34389,249,10183),(34406,249,10188),(34425,249,10194),(34427,249,10195),(34436,249,10201),(34402,249,10297),(34404,249,10299),(34409,249,10313),(34441,249,10436),(34397,249,11016),(34421,249,11027),(34440,249,11098),(34384,249,11225),(34443,249,11248),(34405,249,11295),(34393,249,11382),(34396,249,11385),(34386,249,11441),(34412,249,11450),(34431,249,11457),(34388,249,11561),(34435,249,11576),(34447,249,11585),(34385,249,11671),(34390,249,11672),(34403,249,11678),(34426,249,11689),(34411,249,11714),(34395,249,11768),(34416,249,12767),(34400,249,13451),(34437,249,13792),(34442,249,15617),(34429,249,15632),(34391,249,15644),(34394,249,15645),(34398,249,15646),(34399,249,15647),(34401,249,15648),(34407,249,15649),(34408,249,15650),(34410,249,15651),(34414,249,15652),(34415,249,15653),(34417,249,15654),(34418,249,15655),(34419,249,15656),(34420,249,15657),(34422,249,15658),(34423,249,15659),(34424,249,15660),(34428,249,15661),(34430,249,15662),(34432,249,15663),(34433,249,15664),(34434,249,15665),(34438,249,15666),(34439,249,15668),(34445,249,15669),(34375,251,10144),(34303,251,10149),(34344,251,10158),(34382,251,10235),(34315,251,10239),(34307,251,10269),(34349,251,10327),(34357,251,10346),(34365,251,10888),(34330,251,11020),(34336,251,11084),(34313,251,11128),(34341,251,11137),(34346,251,11139),(34370,251,11247),(34324,251,11292),(34318,251,11348),(34312,251,11408),(34373,251,11493),(34306,251,11527),(34321,251,11530),(34333,251,11536),(34319,251,11600),(34366,251,12727),(34378,251,12736),(34342,251,13584),(34355,251,15424),(34359,251,15612),(34368,251,15667),(34304,251,15670),(34305,251,15671),(34308,251,15673),(34310,251,15674),(34311,251,15675),(34314,251,15676),(34316,251,15677),(34317,251,15678),(34320,251,15679),(34322,251,15680),(34323,251,15681),(34325,251,15682),(34326,251,15683),(34327,251,15684),(34328,251,15685),(34331,251,15687),(34332,251,15688),(34334,251,15689),(34335,251,15690),(34337,251,15691),(34338,251,15692),(34339,251,15693),(34340,251,15694),(34343,251,15695),(34345,251,15696),(34347,251,15697),(34350,251,15698),(34351,251,15699),(34352,251,15700),(34353,251,15701),(34354,251,15702),(34356,251,15703),(34358,251,15705),(34360,251,15706),(34361,251,15707),(34362,251,15708),(34363,251,15709),(34367,251,15711),(34369,251,15713),(34371,251,15714),(34372,251,15715),(34374,251,15716),(34376,251,15717),(34381,251,15718),(34379,251,15719),(34380,251,15720),(34481,252,10150),(34483,252,10297),(34492,252,10888),(34485,252,11295),(34488,252,11457),(34484,252,11678),(34482,252,11768),(34493,252,12727),(34489,252,13792),(34486,252,15650),(34487,252,15658),(34490,252,15669),(34498,253,10179),(34499,253,11225),(34500,253,11671),(34494,253,15673),(34495,253,15683),(34735,254,10201),(34729,254,11016),(34732,254,11027),(34738,254,11084),(34730,254,11678),(34742,254,11689),(34743,254,11714),(34733,254,15661),(34734,254,15664),(34736,254,15669),(34740,254,15675),(34739,254,15719),(34710,255,11084),(34711,255,15612),(34714,255,15661),(34715,255,15664),(34707,255,15673),(34709,255,15675),(34712,255,15719),(34750,256,10201),(34744,256,11016),(34747,256,11027),(34753,256,11084),(34745,256,11678),(34757,256,11689),(34758,256,11714),(34748,256,15661),(34749,256,15664),(34751,256,15669),(34755,256,15675),(34754,256,15719),(34765,257,6914),(34766,257,11873),(34760,257,15728),(34759,257,15754),(34763,257,15767),(34761,257,15792),(34767,257,15828),(34768,257,15837),(34762,257,15851),(34769,257,15870),(34764,257,15883),(34795,258,6959),(34774,258,11677),(34776,258,13491),(34800,258,15584),(34770,258,15728),(34771,258,15729),(34772,258,15730),(34773,258,15735),(34775,258,15754),(34777,258,15765),(34778,258,15780),(34779,258,15781),(34780,258,15782),(34781,258,15787),(34782,258,15791),(34783,258,15792),(34784,258,15803),(34785,258,15804),(34786,258,15815),(34787,258,15821),(34788,258,15827),(34789,258,15831),(34790,258,15837),(34791,258,15841),(34792,258,15844),(34793,258,15847),(34794,258,15858),(34796,258,15870),(34797,258,15872),(34798,258,15882),(34799,258,15886),(37249,294,15968),(38438,295,2923),(38439,295,2924),(38443,295,2928),(38449,295,2933),(38454,295,2939),(38464,295,2950),(38467,295,3010),(38458,295,3078),(38434,295,15968),(38435,295,15969),(38437,295,15971),(38440,295,15972),(38441,295,15973),(38442,295,15974),(38444,295,15975),(38445,295,15976),(38446,295,15977),(38447,295,15978),(38448,295,15979),(38450,295,15980),(38451,295,15981),(38452,295,15982),(38455,295,15984),(38456,295,15985),(38457,295,15986),(38459,295,15988),(38460,295,15989),(38461,295,15990),(38462,295,15991),(38463,295,15992),(38466,295,15994),(38468,295,15995),(38436,295,19342),(38453,295,19343),(38465,295,19344),(38469,296,4134),(37258,297,2959),(37266,297,2969),(37274,297,2977),(37281,297,2983),(37293,297,2998),(37295,297,3004),(37302,297,3014),(37308,297,3018),(37317,297,3021),(37321,297,3029),(37335,297,3086),(37251,297,18298),(37252,297,18299),(37253,297,18300),(37254,297,18301),(37255,297,18302),(37256,297,18303),(37257,297,18304),(37259,297,18305),(37260,297,18306),(37261,297,18307),(37262,297,18308),(37263,297,18309),(37264,297,18310),(37265,297,18311),(37267,297,18312),(37268,297,18313),(37269,297,18314),(37270,297,18315),(37271,297,18316),(37272,297,18317),(37273,297,18318),(37275,297,18319),(37276,297,18320),(37277,297,18321),(37278,297,18322),(37279,297,18323),(37280,297,18324),(37282,297,18325),(37283,297,18326),(37284,297,18327),(37285,297,18328),(37286,297,18329),(37287,297,18330),(37288,297,18331),(37289,297,18332),(37290,297,18333),(37291,297,18334),(37292,297,18335),(37294,297,18336),(37296,297,18337),(37297,297,18338),(37298,297,18339),(37299,297,18340),(37300,297,18341),(37301,297,18342),(37303,297,18343),(37304,297,18344),(37305,297,18345),(37306,297,18346),(37307,297,18347),(37309,297,18348),(37310,297,18349),(37311,297,18350),(37312,297,18351),(37313,297,18352),(37314,297,18353),(37315,297,18354),(37316,297,18355),(37318,297,18356),(37319,297,18357),(37320,297,18358),(37322,297,18359),(37323,297,18360),(37324,297,18361),(37325,297,18362),(37326,297,18363),(37327,297,18364),(37328,297,18365),(37329,297,18366),(37330,297,18367),(37331,297,18368),(37332,297,18369),(37333,297,18370),(37334,297,18371),(37336,297,18372),(37337,297,18373),(37338,297,18374),(37339,297,18375),(37340,297,18376),(37341,297,18377),(37342,297,18378),(37343,297,18379),(37344,297,18380),(37424,299,3169),(37437,299,3174),(37443,299,3179),(37444,299,3180),(37445,299,3183),(37456,299,3198),(37469,299,3207),(37481,299,3217),(37482,299,3219),(37485,299,3222),(37486,299,3224),(37487,299,3225),(37497,299,3239),(37501,299,3242),(37506,299,3244),(37510,299,3250),(37423,299,18445),(37425,299,18446),(37426,299,18447),(37427,299,18448),(37428,299,18449),(37429,299,18450),(37430,299,18451),(37431,299,18452),(37432,299,18453),(37433,299,18454),(37434,299,18455),(37435,299,18456),(37436,299,18457),(37438,299,18458),(37439,299,18459),(37440,299,18460),(37441,299,18461),(37442,299,18462),(37446,299,18463),(37447,299,18464),(37448,299,18465),(37449,299,18466),(37450,299,18467),(37451,299,18468),(37452,299,18469),(37453,299,18470),(37454,299,18471),(37455,299,18472),(37457,299,18473),(37458,299,18474),(37459,299,18475),(37460,299,18476),(37461,299,18477),(37462,299,18478),(37463,299,18479),(37464,299,18480),(37465,299,18481),(37466,299,18482),(37467,299,18483),(37468,299,18484),(37470,299,18485),(37471,299,18486),(37472,299,18487),(37473,299,18488),(37474,299,18489),(37475,299,18490),(37476,299,18491),(37477,299,18492),(37478,299,18493),(37479,299,18494),(37480,299,18495),(37483,299,18496),(37484,299,18497),(37488,299,18498),(37489,299,18499),(37490,299,18500),(37491,299,18501),(37492,299,18502),(37493,299,18503),(37494,299,18504),(37495,299,18505),(37496,299,18506),(37498,299,18507),(37499,299,18508),(37500,299,18509),(37502,299,18510),(37503,299,18511),(37504,299,18512),(37505,299,18513),(37507,299,18514),(37508,299,18515),(37509,299,18516),(37530,300,3257),(37539,300,3262),(37541,300,3264),(37548,300,3271),(37557,300,3277),(37561,300,3287),(37570,300,3294),(37573,300,3296),(37575,300,3298),(37580,300,3302),(37600,300,3338),(37511,300,18517),(37512,300,18518),(37513,300,18519),(37514,300,18520),(37515,300,18521),(37516,300,18522),(37517,300,18523),(37518,300,18524),(37519,300,18525),(37520,300,18526),(37521,300,18527),(37522,300,18528),(37523,300,18529),(37524,300,18530),(37525,300,18531),(37526,300,18532),(37527,300,18533),(37528,300,18534),(37529,300,18535),(37531,300,18536),(37532,300,18537),(37533,300,18538),(37534,300,18539),(37535,300,18540),(37536,300,18541),(37537,300,18542),(37538,300,18543),(37540,300,18544),(37542,300,18545),(37543,300,18546),(37544,300,18547),(37545,300,18548),(37546,300,18549),(37547,300,18550),(37549,300,18551),(37550,300,18552),(37551,300,18553),(37552,300,18554),(37553,300,18555),(37554,300,18556),(37555,300,18557),(37556,300,18558),(37558,300,18559),(37559,300,18560),(37560,300,18561),(37562,300,18562),(37563,300,18563),(37564,300,18564),(37565,300,18565),(37566,300,18566),(37567,300,18567),(37568,300,18568),(37569,300,18569),(37571,300,18570),(37572,300,18571),(37574,300,18572),(37576,300,18573),(37577,300,18574),(37578,300,18575),(37579,300,18576),(37581,300,18577),(37582,300,18578),(37583,300,18579),(37584,300,18580),(37585,300,18581),(37586,300,18582),(37587,300,18583),(37588,300,18584),(37589,300,18585),(37590,300,18586),(37591,300,18587),(37592,300,18588),(37593,300,18589),(37594,300,18590),(37595,300,18591),(37596,300,18592),(37597,300,18593),(37598,300,18594),(37599,300,18595),(37601,300,18596),(37602,300,18597),(37604,301,3343),(37605,301,3344),(37621,301,3358),(37622,301,3360),(37639,301,3378),(37642,301,3383),(37647,301,3390),(37650,301,3393),(37662,301,3409),(37669,301,3412),(37677,301,3420),(37690,301,3442),(37603,301,18598),(37606,301,18599),(37607,301,18600),(37608,301,18601),(37609,301,18602),(37610,301,18603),(37611,301,18604),(37612,301,18605),(37613,301,18606),(37614,301,18607),(37615,301,18608),(37616,301,18609),(37617,301,18610),(37618,301,18611),(37619,301,18612),(37620,301,18613),(37623,301,18614),(37624,301,18615),(37625,301,18616),(37626,301,18617),(37627,301,18618),(37628,301,18619),(37629,301,18620),(37630,301,18621),(37631,301,18622),(37632,301,18623),(37633,301,18624),(37634,301,18625),(37635,301,18626),(37636,301,18627),(37637,301,18628),(37638,301,18629),(37640,301,18630),(37641,301,18631),(37643,301,18632),(37644,301,18633),(37645,301,18634),(37646,301,18635),(37648,301,18636),(37649,301,18637),(37651,301,18638),(37652,301,18639),(37653,301,18640),(37654,301,18641),(37655,301,18642),(37656,301,18643),(37657,301,18644),(37658,301,18645),(37659,301,18646),(37660,301,18647),(37661,301,18648),(37663,301,18649),(37664,301,18650),(37665,301,18651),(37666,301,18652),(37667,301,18653),(37668,301,18654),(37670,301,18655),(37671,301,18656),(37672,301,18657),(37673,301,18658),(37674,301,18659),(37675,301,18660),(37676,301,18661),(37678,301,18662),(37679,301,18663),(37680,301,18664),(37681,301,18665),(37682,301,18666),(37683,301,18667),(37684,301,18668),(37685,301,18669),(37686,301,18670),(37687,301,18671),(37688,301,18672),(37689,301,18673),(37708,302,3455),(37715,302,3461),(37716,302,3462),(37729,302,3478),(37738,302,3488),(37746,302,3496),(37749,302,3501),(37751,302,3504),(37752,302,3507),(37763,302,3517),(37691,302,18674),(37692,302,18675),(37693,302,18676),(37694,302,18677),(37695,302,18678),(37696,302,18679),(37697,302,18680),(37698,302,18681),(37699,302,18682),(37700,302,18683),(37701,302,18684),(37702,302,18685),(37703,302,18686),(37704,302,18687),(37705,302,18688),(37706,302,18689),(37707,302,18690),(37709,302,18691),(37710,302,18692),(37711,302,18693),(37712,302,18694),(37713,302,18695),(37714,302,18696),(37717,302,18697),(37718,302,18698),(37719,302,18699),(37720,302,18700),(37721,302,18701),(37722,302,18702),(37723,302,18703),(37724,302,18704),(37725,302,18705),(37726,302,18706),(37727,302,18707),(37728,302,18708),(37730,302,18709),(37731,302,18710),(37732,302,18711),(37733,302,18712),(37734,302,18713),(37735,302,18714),(37736,302,18715),(37737,302,18716),(37739,302,18717),(37740,302,18718),(37741,302,18719),(37742,302,18720),(37743,302,18721),(37744,302,18722),(37745,302,18723),(37747,302,18724),(37748,302,18725),(37750,302,18726),(37753,302,18727),(37754,302,18728),(37755,302,18729),(37756,302,18730),(37757,302,18731),(37758,302,18732),(37759,302,18733),(37760,302,18734),(37761,302,18735),(37762,302,18736),(37764,302,18737),(37765,302,18738),(37766,302,18739),(37767,302,18740),(37768,302,18741),(37769,302,18742),(37770,302,18743),(37771,302,18744),(37772,302,18745),(37773,302,18746),(37774,302,18747),(37775,303,3534),(37794,303,3562),(37804,303,3572),(37838,303,3612),(37840,303,3616),(37847,303,3620),(37855,303,3623),(37776,303,18748),(37777,303,18749),(37778,303,18750),(37779,303,18751),(37780,303,18752),(37781,303,18753),(37782,303,18754),(37783,303,18755),(37784,303,18756),(37785,303,18757),(37786,303,18758),(37787,303,18759),(37788,303,18760),(37789,303,18761),(37790,303,18762),(37791,303,18763),(37792,303,18764),(37793,303,18765),(37795,303,18766),(37796,303,18767),(37797,303,18768),(37798,303,18769),(37799,303,18770),(37800,303,18771),(37801,303,18772),(37802,303,18773),(37803,303,18774),(37805,303,18775),(37806,303,18776),(37807,303,18777),(37808,303,18778),(37809,303,18779),(37810,303,18780),(37811,303,18781),(37812,303,18782),(37813,303,18783),(37814,303,18784),(37815,303,18785),(37816,303,18786),(37817,303,18787),(37818,303,18788),(37819,303,18789),(37820,303,18790),(37821,303,18791),(37822,303,18792),(37823,303,18793),(37824,303,18794),(37825,303,18795),(37826,303,18796),(37827,303,18797),(37828,303,18798),(37829,303,18799),(37830,303,18800),(37831,303,18801),(37832,303,18802),(37833,303,18803),(37834,303,18804),(37835,303,18805),(37836,303,18806),(37837,303,18807),(37839,303,18808),(37841,303,18809),(37842,303,18810),(37843,303,18811),(37844,303,18812),(37845,303,18813),(37846,303,18814),(37848,303,18815),(37849,303,18816),(37850,303,18817),(37851,303,18818),(37852,303,18819),(37853,303,18820),(37854,303,18821),(37856,303,18822),(37857,303,18823),(37867,304,3631),(37883,304,3660),(37888,304,3674),(37894,304,3683),(37908,304,3690),(37910,304,3693),(37919,304,3700),(37926,304,3712),(37934,304,3717),(37937,304,3721),(37942,304,3727),(37953,304,3741),(37858,304,18824),(37859,304,18825),(37860,304,18826),(37861,304,18827),(37862,304,18828),(37863,304,18829),(37864,304,18830),(37865,304,18831),(37866,304,18832),(37868,304,18833),(37869,304,18834),(37870,304,18835),(37871,304,18836),(37872,304,18837),(37873,304,18838),(37874,304,18839),(37875,304,18840),(37876,304,18841),(37877,304,18842),(37878,304,18843),(37879,304,18844),(37880,304,18845),(37881,304,18846),(37882,304,18847),(37884,304,18848),(37885,304,18849),(37886,304,18850),(37887,304,18851),(37889,304,18852),(37890,304,18853),(37891,304,18854),(37892,304,18855),(37893,304,18856),(37895,304,18857),(37896,304,18858),(37897,304,18859),(37898,304,18860),(37899,304,18861),(37900,304,18862),(37901,304,18863),(37902,304,18864),(37903,304,18865),(37904,304,18866),(37905,304,18867),(37906,304,18868),(37907,304,18869),(37909,304,18870),(37911,304,18871),(37912,304,18872),(37913,304,18873),(37914,304,18874),(37915,304,18875),(37916,304,18876),(37917,304,18877),(37918,304,18878),(37920,304,18879),(37921,304,18880),(37922,304,18881),(37923,304,18882),(37924,304,18883),(37925,304,18884),(37927,304,18885),(37928,304,18886),(37929,304,18887),(37930,304,18888),(37931,304,18889),(37932,304,18890),(37933,304,18891),(37935,304,18892),(37936,304,18893),(37938,304,18894),(37939,304,18895),(37940,304,18896),(37941,304,18897),(37943,304,18898),(37944,304,18899),(37945,304,18900),(37946,304,18901),(37947,304,18902),(37948,304,18903),(37949,304,18904),(37950,304,18905),(37951,304,18906),(37952,304,18907),(37954,304,18908),(37955,304,18909),(37956,304,18910),(37957,304,18911),(40300,305,3746),(40311,305,3764),(40309,305,3766),(40288,305,18912),(40289,305,18913),(40290,305,18914),(40291,305,18915),(40292,305,18916),(40293,305,18917),(40294,305,18918),(40295,305,18919),(40296,305,18920),(40297,305,18921),(40298,305,18922),(40299,305,18923),(40301,305,18924),(40302,305,18925),(40303,305,18926),(40304,305,18927),(40305,305,18928),(40306,305,18929),(40307,305,18930),(40308,305,18931),(40310,305,18932),(40312,305,18933),(40313,305,18934),(40314,305,18935),(40315,305,18936),(40316,305,18937),(40317,305,18938),(40318,305,18939),(40319,305,18940),(40320,305,18941),(40321,305,18942),(40323,305,18944),(40324,305,18945),(40325,305,18946),(40326,305,18947),(40327,305,18948),(40328,305,18949),(40329,305,18950),(40330,305,18951),(40331,305,18952),(40332,305,18953),(40333,305,18954),(40334,305,18955),(40322,305,20289),(38039,306,3821),(38005,306,18956),(38006,306,18957),(38007,306,18958),(38008,306,18959),(38009,306,18960),(38010,306,18961),(38011,306,18962),(38012,306,18963),(38013,306,18964),(38014,306,18965),(38015,306,18966),(38016,306,18967),(38017,306,18968),(38018,306,18969),(38019,306,18970),(38020,306,18971),(38021,306,18972),(38022,306,18973),(38023,306,18974),(38024,306,18975),(38025,306,18976),(38026,306,18977),(38027,306,18978),(38028,306,18979),(38029,306,18980),(38030,306,18981),(38031,306,18982),(38032,306,18983),(38033,306,18984),(38034,306,18985),(38035,306,18986),(38036,306,18987),(38037,306,18988),(38038,306,18989),(38040,306,18990),(38041,306,18991),(38042,306,18992),(38043,306,18993),(38044,306,18994),(38045,306,18995),(38046,306,18996),(38047,306,18997),(38048,306,18998),(38049,306,18999),(38050,306,19000),(38051,306,19001),(40342,307,3841),(40348,307,3847),(40354,307,3852),(40358,307,3859),(40372,307,3872),(40397,307,4160),(40399,307,4161),(40404,307,4167),(40407,307,4171),(40422,307,4184),(40425,307,4186),(40426,307,4188),(40437,307,4201),(40335,307,19002),(40336,307,19003),(40337,307,19004),(40338,307,19005),(40339,307,19006),(40340,307,19007),(40341,307,19008),(40343,307,19009),(40344,307,19010),(40345,307,19011),(40346,307,19012),(40347,307,19013),(40349,307,19014),(40350,307,19015),(40351,307,19016),(40352,307,19017),(40353,307,19018),(40355,307,19019),(40356,307,19020),(40357,307,19021),(40359,307,19022),(40360,307,19023),(40361,307,19024),(40362,307,19025),(40363,307,19026),(40364,307,19027),(40365,307,19028),(40367,307,19030),(40368,307,19031),(40369,307,19032),(40370,307,19033),(40371,307,19034),(40373,307,19035),(40374,307,19036),(40375,307,19037),(40376,307,19038),(40377,307,19039),(40378,307,19040),(40379,307,19041),(40380,307,19042),(40381,307,19043),(40382,307,19044),(40383,307,19045),(40384,307,19046),(40385,307,19047),(40386,307,19048),(40387,307,19049),(40388,307,19050),(40389,307,19051),(40390,307,19052),(40391,307,19053),(40392,307,19054),(40393,307,19055),(40394,307,19056),(40395,307,19057),(40396,307,19058),(40398,307,19059),(40400,307,19060),(40401,307,19061),(40402,307,19062),(40403,307,19063),(40405,307,19064),(40406,307,19065),(40408,307,19066),(40409,307,19067),(40410,307,19068),(40411,307,19069),(40412,307,19070),(40413,307,19071),(40414,307,19072),(40415,307,19073),(40416,307,19074),(40417,307,19075),(40418,307,19076),(40419,307,19077),(40420,307,19078),(40421,307,19079),(40423,307,19080),(40424,307,19081),(40427,307,19082),(40428,307,19083),(40429,307,19084),(40430,307,19085),(40431,307,19086),(40432,307,19087),(40433,307,19088),(40434,307,19089),(40435,307,19090),(40436,307,19091),(40438,307,19092),(40439,307,19093),(40440,307,19094),(40441,307,19095),(40442,307,19096),(40443,307,19097),(40444,307,19098),(40445,307,19099),(40446,307,19100),(40447,307,19101),(40448,307,19102),(40449,307,19103),(40366,307,20290),(38169,308,4209),(38175,308,4216),(38186,308,4223),(38195,308,4233),(38196,308,4234),(38199,308,4238),(38203,308,4243),(38206,308,4244),(38221,308,4263),(38233,308,4285),(38242,308,4290),(38254,308,4299),(38265,308,4312),(38267,308,4314),(38167,308,19104),(38168,308,19105),(38170,308,19106),(38171,308,19107),(38172,308,19108),(38173,308,19109),(38174,308,19110),(38176,308,19111),(38177,308,19112),(38178,308,19113),(38179,308,19114),(38180,308,19115),(38181,308,19116),(38182,308,19117),(38183,308,19118),(38184,308,19119),(38185,308,19120),(38187,308,19121),(38188,308,19122),(38189,308,19123),(38190,308,19124),(38191,308,19125),(38192,308,19126),(38193,308,19127),(38194,308,19128),(38197,308,19129),(38198,308,19130),(38200,308,19131),(38201,308,19132),(38202,308,19133),(38204,308,19134),(38205,308,19135),(38207,308,19136),(38208,308,19137),(38209,308,19138),(38210,308,19139),(38211,308,19140),(38212,308,19141),(38213,308,19142),(38214,308,19143),(38215,308,19144),(38216,308,19145),(38217,308,19146),(38218,308,19147),(38219,308,19148),(38220,308,19149),(38222,308,19150),(38223,308,19151),(38224,308,19152),(38225,308,19153),(38226,308,19154),(38227,308,19155),(38228,308,19156),(38229,308,19157),(38230,308,19158),(38231,308,19159),(38232,308,19160),(38234,308,19161),(38235,308,19162),(38236,308,19163),(38237,308,19164),(38238,308,19165),(38239,308,19166),(38240,308,19167),(38241,308,19168),(38243,308,19169),(38244,308,19170),(38245,308,19171),(38246,308,19172),(38247,308,19173),(38248,308,19174),(38249,308,19175),(38250,308,19176),(38251,308,19177),(38252,308,19178),(38253,308,19179),(38255,308,19180),(38256,308,19181),(38257,308,19182),(38258,308,19183),(38259,308,19184),(38260,308,19185),(38261,308,19186),(38262,308,19187),(38263,308,19188),(38264,308,19189),(38266,308,19190),(38268,308,19191),(38269,308,19192),(38270,308,19193),(38271,308,19194),(38272,308,19195),(38273,308,19196),(38274,308,19197),(38275,308,19198),(38276,308,19199),(38277,308,19200),(38278,308,19201),(38279,308,19202),(38280,308,19203),(38281,308,19204),(38287,309,4346),(38295,309,4354),(38318,309,4370),(38326,309,4386),(38328,309,4389),(38331,309,4395),(38334,309,4400),(38282,309,19205),(38283,309,19206),(38284,309,19207),(38285,309,19208),(38286,309,19209),(38288,309,19210),(38289,309,19211),(38290,309,19212),(38291,309,19213),(38292,309,19214),(38293,309,19215),(38294,309,19216),(38296,309,19217),(38297,309,19218),(38298,309,19219),(38299,309,19220),(38300,309,19221),(38301,309,19222),(38302,309,19223),(38303,309,19224),(38304,309,19225),(38305,309,19226),(38306,309,19227),(38307,309,19228),(38308,309,19229),(38309,309,19230),(38310,309,19231),(38311,309,19232),(38312,309,19233),(38313,309,19234),(38314,309,19235),(38315,309,19236),(38316,309,19237),(38317,309,19238),(38319,309,19239),(38320,309,19240),(38321,309,19241),(38322,309,19242),(38323,309,19243),(38324,309,19244),(38325,309,19245),(38327,309,19246),(38329,309,19247),(38330,309,19248),(38332,309,19249),(38333,309,19250),(38335,309,19251),(38336,309,19252),(38337,309,19253),(38338,309,19254),(38339,309,19255),(38340,309,19256),(38341,309,19257),(38342,309,19258),(38343,309,19259),(38344,309,19260),(38345,309,19261),(38346,309,19262),(38347,309,19263),(38348,309,19264),(38349,309,19265),(38350,309,19266),(38351,309,19267),(38352,309,19268),(38353,309,19269),(38354,309,19270),(38355,309,19271),(38356,309,19272),(38357,309,19273),(38363,310,4422),(38377,310,4436),(38389,310,4444),(38402,310,4461),(38406,310,4466),(38417,310,4484),(38420,310,4489),(38432,310,4503),(38358,310,19274),(38359,310,19275),(38360,310,19276),(38361,310,19277),(38362,310,19278),(38364,310,19279),(38365,310,19280),(38366,310,19281),(38367,310,19282),(38368,310,19283),(38369,310,19284),(38370,310,19285),(38371,310,19286),(38372,310,19287),(38373,310,19288),(38374,310,19289),(38375,310,19290),(38376,310,19291),(38378,310,19292),(38379,310,19293),(38380,310,19294),(38381,310,19295),(38382,310,19296),(38383,310,19297),(38384,310,19298),(38385,310,19299),(38386,310,19300),(38387,310,19301),(38388,310,19302),(38390,310,19303),(38391,310,19304),(38392,310,19305),(38393,310,19306),(38394,310,19307),(38395,310,19308),(38396,310,19309),(38397,310,19310),(38398,310,19311),(38399,310,19312),(38400,310,19313),(38401,310,19314),(38403,310,19315),(38404,310,19316),(38405,310,19317),(38407,310,19318),(38408,310,19319),(38409,310,19320),(38410,310,19321),(38411,310,19322),(38412,310,19323),(38413,310,19324),(38414,310,19325),(38415,310,19326),(38416,310,19327),(38418,310,19328),(38419,310,19329),(38421,310,19330),(38422,310,19331),(38423,310,19332),(38424,310,19333),(38425,310,19334),(38426,310,19335),(38427,310,19336),(38428,310,19337),(38429,310,19338),(38430,310,19339),(38431,310,19340),(38433,310,19341),(38470,311,4505),(38501,311,4536),(38504,311,4538),(38521,311,4555),(38534,311,4573),(38535,311,4574),(38545,311,4588),(38549,311,4591),(38551,311,4592),(38557,311,4601),(38563,311,4615),(38580,311,4628),(38471,311,19345),(38472,311,19346),(38473,311,19347),(38474,311,19348),(38475,311,19349),(38476,311,19350),(38477,311,19351),(38478,311,19352),(38479,311,19353),(38480,311,19354),(38481,311,19355),(38482,311,19356),(38483,311,19357),(38484,311,19358),(38485,311,19359),(38486,311,19360),(38487,311,19361),(38488,311,19362),(38489,311,19363),(38490,311,19364),(38491,311,19365),(38492,311,19366),(38493,311,19367),(38494,311,19368),(38495,311,19369),(38496,311,19370),(38497,311,19371),(38498,311,19372),(38499,311,19373),(38500,311,19374),(38502,311,19375),(38503,311,19376),(38505,311,19377),(38506,311,19378),(38507,311,19379),(38508,311,19380),(38509,311,19381),(38510,311,19382),(38511,311,19383),(38512,311,19384),(38513,311,19385),(38514,311,19386),(38515,311,19387),(38516,311,19388),(38517,311,19389),(38518,311,19390),(38519,311,19391),(38520,311,19392),(38522,311,19393),(38523,311,19394),(38524,311,19395),(38525,311,19396),(38526,311,19397),(38527,311,19398),(38528,311,19399),(38529,311,19400),(38530,311,19401),(38531,311,19402),(38532,311,19403),(38533,311,19404),(38536,311,19405),(38537,311,19406),(38538,311,19407),(38539,311,19408),(38540,311,19409),(38541,311,19410),(38542,311,19411),(38543,311,19412),(38544,311,19413),(38546,311,19414),(38547,311,19415),(38548,311,19416),(38550,311,19417),(38552,311,19418),(38553,311,19419),(38554,311,19420),(38555,311,19421),(38556,311,19422),(38558,311,19423),(38559,311,19424),(38560,311,19425),(38561,311,19426),(38562,311,19427),(38564,311,19428),(38565,311,19429),(38566,311,19430),(38567,311,19431),(38568,311,19432),(38569,311,19433),(38570,311,19434),(38571,311,19435),(38572,311,19436),(38573,311,19437),(38574,311,19438),(38575,311,19439),(38576,311,19440),(38577,311,19441),(38578,311,19442),(38579,311,19443),(38581,311,19444),(38582,311,19445),(38583,311,19446),(38584,311,19447),(38657,312,3883),(38662,312,3890),(38587,312,4632),(38593,312,4638),(38594,312,4640),(38602,312,4648),(38608,312,4658),(38634,312,4677),(38639,312,4680),(38641,312,4684),(38646,312,4688),(38648,312,4692),(38585,312,19448),(38586,312,19449),(38588,312,19450),(38589,312,19451),(38590,312,19452),(38591,312,19453),(38592,312,19454),(38595,312,19455),(38596,312,19456),(38597,312,19457),(38598,312,19458),(38599,312,19459),(38600,312,19460),(38601,312,19461),(38603,312,19462),(38604,312,19463),(38605,312,19464),(38606,312,19465),(38607,312,19466),(38609,312,19467),(38610,312,19468),(38611,312,19469),(38612,312,19470),(38613,312,19471),(38614,312,19472),(38615,312,19473),(38616,312,19474),(38617,312,19475),(38618,312,19476),(38619,312,19477),(38620,312,19478),(38621,312,19479),(38622,312,19480),(38623,312,19481),(38624,312,19482),(38625,312,19483),(38626,312,19484),(38627,312,19485),(38628,312,19486),(38629,312,19487),(38630,312,19488),(38631,312,19489),(38632,312,19490),(38633,312,19491),(38635,312,19492),(38636,312,19493),(38637,312,19494),(38638,312,19495),(38640,312,19496),(38642,312,19497),(38643,312,19498),(38644,312,19499),(38645,312,19500),(38647,312,19501),(38649,312,19502),(38650,312,19503),(38651,312,19504),(38652,312,19505),(38653,312,19506),(38654,312,19507),(38655,312,19508),(38656,312,19509),(38658,312,19510),(38659,312,19511),(38660,312,19512),(38661,312,19513),(38663,312,19514),(38664,312,19515),(38665,312,19516),(38666,312,19517),(38667,312,19518),(38668,312,19519),(38669,312,19520),(38670,312,19521),(38671,312,19522),(38672,312,19523),(38673,312,19524),(38674,312,19525),(38675,312,19526),(38676,312,19527),(38677,312,19528),(38678,312,19529),(38679,312,19530),(38680,312,19531),(38681,312,19532),(38682,312,19533),(38716,313,3932),(38720,313,3942),(38724,313,3952),(38735,313,3965),(38738,313,3967),(38753,313,3986),(38759,313,3993),(38683,313,19534),(38684,313,19535),(38685,313,19536),(38686,313,19537),(38687,313,19538),(38688,313,19539),(38689,313,19540),(38690,313,19541),(38691,313,19542),(38692,313,19543),(38693,313,19544),(38694,313,19545),(38695,313,19546),(38696,313,19547),(38697,313,19548),(38698,313,19549),(38699,313,19550),(38700,313,19551),(38701,313,19552),(38702,313,19553),(38703,313,19554),(38704,313,19555),(38705,313,19556),(38706,313,19557),(38707,313,19558),(38708,313,19559),(38709,313,19560),(38710,313,19561),(38711,313,19562),(38712,313,19563),(38713,313,19564),(38714,313,19565),(38715,313,19566),(38717,313,19567),(38718,313,19568),(38719,313,19569),(38721,313,19570),(38722,313,19571),(38723,313,19572),(38725,313,19573),(38726,313,19574),(38727,313,19575),(38728,313,19576),(38729,313,19577),(38730,313,19578),(38731,313,19579),(38732,313,19580),(38733,313,19581),(38734,313,19582),(38736,313,19583),(38737,313,19584),(38739,313,19585),(38740,313,19586),(38741,313,19587),(38742,313,19588),(38743,313,19589),(38744,313,19590),(38745,313,19591),(38746,313,19592),(38747,313,19593),(38748,313,19594),(38749,313,19595),(38750,313,19596),(38751,313,19597),(38752,313,19598),(38754,313,19599),(38755,313,19600),(38756,313,19601),(38757,313,19602),(38758,313,19603),(38760,313,19604),(38761,313,19605),(38762,313,19606),(38763,313,19607),(38764,313,19608),(38765,313,19609),(38766,313,19610),(40462,314,4012),(40465,314,4013),(40474,314,4017),(40476,314,4019),(40480,314,4027),(40489,314,4032),(40490,314,4034),(40493,314,4037),(40501,314,4040),(40509,314,4052),(40518,314,4066),(40519,314,4067),(40534,314,4084),(40450,314,19611),(40451,314,19612),(40452,314,19613),(40453,314,19614),(40454,314,19615),(40455,314,19616),(40456,314,19617),(40457,314,19618),(40458,314,19619),(40459,314,19620),(40460,314,19621),(40461,314,19622),(40463,314,19623),(40464,314,19624),(40466,314,19625),(40467,314,19626),(40468,314,19627),(40469,314,19628),(40470,314,19629),(40471,314,19630),(40472,314,19631),(40473,314,19632),(40475,314,19633),(40477,314,19634),(40478,314,19635),(40479,314,19636),(40481,314,19637),(40482,314,19638),(40483,314,19639),(40484,314,19640),(40485,314,19641),(40486,314,19642),(40487,314,19643),(40488,314,19644),(40492,314,19646),(40494,314,19647),(40495,314,19648),(40496,314,19649),(40497,314,19650),(40498,314,19651),(40499,314,19652),(40500,314,19653),(40502,314,19654),(40503,314,19655),(40504,314,19656),(40505,314,19657),(40506,314,19658),(40507,314,19659),(40508,314,19660),(40510,314,19661),(40511,314,19662),(40512,314,19663),(40513,314,19664),(40514,314,19665),(40515,314,19666),(40516,314,19667),(40517,314,19668),(40520,314,19669),(40521,314,19670),(40522,314,19671),(40523,314,19672),(40524,314,19673),(40525,314,19674),(40526,314,19675),(40527,314,19676),(40528,314,19677),(40529,314,19678),(40530,314,19679),(40531,314,19680),(40532,314,19681),(40533,314,19682),(40535,314,19683),(40491,314,20291),(38859,315,4090),(38872,315,4101),(38878,315,4698),(38889,315,4711),(38893,315,4714),(38896,315,4718),(38898,315,4722),(38900,315,4723),(38901,315,4724),(38905,315,4727),(38916,315,4735),(38921,315,4741),(38923,315,4752),(38937,315,4754),(38941,315,4762),(38853,315,19684),(38854,315,19685),(38855,315,19686),(38856,315,19687),(38857,315,19688),(38858,315,19689),(38860,315,19690),(38861,315,19691),(38862,315,19692),(38863,315,19693),(38864,315,19694),(38865,315,19695),(38866,315,19696),(38867,315,19697),(38868,315,19698),(38869,315,19699),(38870,315,19700),(38871,315,19701),(38873,315,19702),(38874,315,19703),(38875,315,19704),(38876,315,19705),(38877,315,19706),(38879,315,19707),(38880,315,19708),(38881,315,19709),(38882,315,19710),(38883,315,19711),(38884,315,19712),(38885,315,19713),(38886,315,19714),(38887,315,19715),(38888,315,19716),(38890,315,19717),(38891,315,19718),(38892,315,19719),(38894,315,19720),(38895,315,19721),(38897,315,19722),(38899,315,19723),(38902,315,19724),(38903,315,19725),(38904,315,19726),(38906,315,19727),(38907,315,19728),(38908,315,19729),(38909,315,19730),(38910,315,19731),(38911,315,19732),(38912,315,19733),(38913,315,19734),(38914,315,19735),(38915,315,19736),(38917,315,19737),(38918,315,19738),(38919,315,19739),(38920,315,19740),(38922,315,19741),(38924,315,19742),(38925,315,19743),(38926,315,19744),(38927,315,19745),(38928,315,19746),(38929,315,19747),(38930,315,19748),(38931,315,19749),(38932,315,19750),(38933,315,19751),(38934,315,19752),(38935,315,19753),(38936,315,19754),(38938,315,19755),(38939,315,19756),(38940,315,19757),(38942,315,19758),(38943,315,19759),(38944,315,19760),(38945,315,19761),(38946,315,19762),(38947,315,19763),(38948,315,19764),(38949,315,19765),(38950,315,19766),(38951,315,19767),(38952,315,19768),(38953,316,4771),(38954,316,4772),(38960,316,4787),(38962,316,4793),(38964,316,4795),(38965,316,4796),(38970,316,4798),(38989,316,4814),(38990,316,4815),(38992,316,4817),(38997,316,4823),(39011,316,4828),(39018,316,4845),(39047,316,4870),(39053,316,4876),(39059,316,4884),(38955,316,19769),(38956,316,19770),(38957,316,19771),(38958,316,19772),(38959,316,19773),(38961,316,19774),(38963,316,19775),(38966,316,19776),(38967,316,19777),(38968,316,19778),(38969,316,19779),(38971,316,19780),(38972,316,19781),(38973,316,19782),(38974,316,19783),(38975,316,19784),(38976,316,19785),(38977,316,19786),(38978,316,19787),(38979,316,19788),(38980,316,19789),(38981,316,19790),(38982,316,19791),(38983,316,19792),(38984,316,19793),(38985,316,19794),(38986,316,19795),(38987,316,19796),(38988,316,19797),(38991,316,19798),(38993,316,19799),(38994,316,19800),(38995,316,19801),(38996,316,19802),(38998,316,19803),(38999,316,19804),(39000,316,19805),(39001,316,19806),(39002,316,19807),(39003,316,19808),(39004,316,19809),(39005,316,19810),(39006,316,19811),(39007,316,19812),(39008,316,19813),(39009,316,19814),(39010,316,19815),(39012,316,19816),(39013,316,19817),(39014,316,19818),(39015,316,19819),(39016,316,19820),(39017,316,19821),(39019,316,19822),(39020,316,19823),(39021,316,19824),(39022,316,19825),(39023,316,19826),(39024,316,19827),(39025,316,19828),(39026,316,19829),(39027,316,19830),(39028,316,19831),(39029,316,19832),(39030,316,19833),(39031,316,19834),(39032,316,19835),(39033,316,19836),(39034,316,19837),(39035,316,19838),(39036,316,19839),(39037,316,19840),(39038,316,19841),(39039,316,19842),(39040,316,19843),(39041,316,19844),(39042,316,19845),(39043,316,19846),(39044,316,19847),(39045,316,19848),(39046,316,19849),(39048,316,19850),(39049,316,19851),(39050,316,19852),(39051,316,19853),(39052,316,19854),(39054,316,19855),(39055,316,19856),(39056,316,19857),(39057,316,19858),(39058,316,19859),(39060,316,19860),(39061,316,19861),(39062,316,19862),(39063,316,19863),(39064,316,19864),(39065,316,19865),(39066,316,19866),(39087,317,4910),(39096,317,4980),(39099,317,4987),(39102,317,4992),(39104,317,4995),(39108,317,5003),(39116,317,5014),(39117,317,5017),(39126,317,5026),(39142,317,5102),(39147,317,5107),(39156,317,5118),(39165,317,5124),(39166,317,5127),(39067,317,19867),(39068,317,19868),(39069,317,19869),(39070,317,19870),(39071,317,19871),(39072,317,19872),(39073,317,19873),(39074,317,19874),(39075,317,19875),(39076,317,19876),(39077,317,19877),(39078,317,19878),(39079,317,19879),(39080,317,19880),(39081,317,19881),(39082,317,19882),(39083,317,19883),(39084,317,19884),(39085,317,19885),(39086,317,19886),(39088,317,19887),(39089,317,19888),(39090,317,19889),(39091,317,19890),(39092,317,19891),(39093,317,19892),(39094,317,19893),(39095,317,19894),(39097,317,19895),(39098,317,19896),(39100,317,19897),(39101,317,19898),(39103,317,19899),(39105,317,19900),(39106,317,19901),(39107,317,19902),(39109,317,19903),(39110,317,19904),(39111,317,19905),(39112,317,19906),(39113,317,19907),(39114,317,19908),(39115,317,19909),(39118,317,19910),(39119,317,19911),(39120,317,19912),(39121,317,19913),(39122,317,19914),(39123,317,19915),(39124,317,19916),(39125,317,19917),(39127,317,19918),(39128,317,19919),(39129,317,19920),(39130,317,19921),(39131,317,19922),(39132,317,19923),(39133,317,19924),(39134,317,19925),(39135,317,19926),(39136,317,19927),(39137,317,19928),(39138,317,19929),(39139,317,19930),(39140,317,19931),(39141,317,19932),(39143,317,19933),(39144,317,19934),(39145,317,19935),(39146,317,19936),(39148,317,19937),(39149,317,19938),(39150,317,19939),(39151,317,19940),(39152,317,19941),(39153,317,19942),(39154,317,19943),(39155,317,19944),(39157,317,19945),(39158,317,19946),(39159,317,19947),(39160,317,19948),(39161,317,19949),(39162,317,19950),(39163,317,19951),(39164,317,19952),(39167,317,19953),(39168,317,19954),(39169,317,19955),(39170,317,19956),(39171,317,19957),(39172,317,19958),(39173,317,19959),(39174,317,19960),(39175,317,19961),(39176,317,19962),(39177,317,19963),(39178,317,19964),(39179,317,19965),(39186,318,5181),(39198,318,5193),(39204,318,5196),(39229,318,5214),(39234,318,5257),(39235,318,5259),(39180,318,19966),(39181,318,19967),(39182,318,19968),(39183,318,19969),(39184,318,19970),(39185,318,19971),(39187,318,19972),(39188,318,19973),(39189,318,19974),(39190,318,19975),(39191,318,19976),(39192,318,19977),(39193,318,19978),(39194,318,19979),(39195,318,19980),(39196,318,19981),(39197,318,19982),(39199,318,19983),(39200,318,19984),(39201,318,19985),(39202,318,19986),(39203,318,19987),(39205,318,19988),(39206,318,19989),(39207,318,19990),(39208,318,19991),(39209,318,19992),(39210,318,19993),(39211,318,19994),(39212,318,19995),(39213,318,19996),(39214,318,19997),(39215,318,19998),(39216,318,19999),(39217,318,20000),(39218,318,20001),(39219,318,20002),(39220,318,20003),(39221,318,20004),(39222,318,20005),(39223,318,20006),(39224,318,20007),(39225,318,20008),(39226,318,20009),(39227,318,20010),(39228,318,20011),(39230,318,20012),(39231,318,20013),(39232,318,20014),(39233,318,20015),(39236,318,20016),(39237,318,20017),(39238,318,20018),(39239,318,20019),(39240,318,20020),(39241,318,20021),(39242,318,20022),(39243,318,20023),(39244,318,20024),(39245,318,20025),(39246,318,20026),(39247,318,20027),(39248,318,20028),(39249,318,20029),(39250,318,20030),(39251,318,20031),(39252,318,20032),(39253,318,20033),(39254,318,20034),(39255,318,20035),(39256,318,20036),(39327,319,4917),(39259,319,5282),(39270,319,5291),(39272,319,5296),(39277,319,5301),(39280,319,5304),(39293,319,5319),(39296,319,5322),(39309,319,5338),(39314,319,5347),(39257,319,20037),(39258,319,20038),(39260,319,20039),(39261,319,20040),(39262,319,20041),(39263,319,20042),(39264,319,20043),(39265,319,20044),(39266,319,20045),(39267,319,20046),(39268,319,20047),(39269,319,20048),(39271,319,20049),(39273,319,20050),(39274,319,20051),(39275,319,20052),(39276,319,20053),(39278,319,20054),(39279,319,20055),(39281,319,20056),(39282,319,20057),(39283,319,20058),(39284,319,20059),(39285,319,20060),(39286,319,20061),(39287,319,20062),(39288,319,20063),(39289,319,20064),(39290,319,20065),(39291,319,20066),(39292,319,20067),(39294,319,20068),(39295,319,20069),(39297,319,20070),(39298,319,20071),(39299,319,20072),(39300,319,20073),(39301,319,20074),(39302,319,20075),(39303,319,20076),(39304,319,20077),(39305,319,20078),(39306,319,20079),(39307,319,20080),(39308,319,20081),(39310,319,20082),(39311,319,20083),(39312,319,20084),(39313,319,20085),(39315,319,20086),(39316,319,20087),(39317,319,20088),(39318,319,20089),(39319,319,20090),(39320,319,20091),(39321,319,20092),(39322,319,20093),(39323,319,20094),(39324,319,20095),(39325,319,20096),(39326,319,20097),(39328,319,20098),(39329,319,20099),(39330,319,20100),(39331,319,20101),(39332,319,20102),(39333,319,20103),(39334,320,4928),(39344,320,4936),(39347,320,4939),(39350,320,4946),(39352,320,4951),(39358,320,4955),(39366,320,4958),(39376,320,4974),(39386,320,5053),(39335,320,20104),(39336,320,20105),(39337,320,20106),(39338,320,20107),(39339,320,20108),(39340,320,20109),(39341,320,20110),(39342,320,20111),(39343,320,20112),(39345,320,20113),(39346,320,20114),(39348,320,20115),(39349,320,20116),(39351,320,20117),(39353,320,20118),(39354,320,20119),(39355,320,20120),(39356,320,20121),(39357,320,20122),(39359,320,20123),(39360,320,20124),(39361,320,20125),(39362,320,20126),(39363,320,20127),(39364,320,20128),(39365,320,20129),(39367,320,20130),(39368,320,20131),(39369,320,20132),(39370,320,20133),(39371,320,20134),(39372,320,20135),(39373,320,20136),(39374,320,20137),(39375,320,20138),(39377,320,20139),(39378,320,20140),(39379,320,20141),(39380,320,20142),(39381,320,20143),(39382,320,20144),(39383,320,20145),(39384,320,20146),(39385,320,20147),(39387,320,20148),(39388,320,20149),(39389,320,20150),(39390,320,20151),(39391,320,20152),(39392,320,20153),(39393,320,20154),(39394,320,20155),(39395,320,20156),(39396,320,20157),(39397,320,20158),(39398,320,20159),(39399,321,5070),(39403,321,5071),(39404,321,5073),(39412,321,5080),(39427,321,5136),(39436,321,5146),(39446,321,5153),(39400,321,20160),(39401,321,20161),(39402,321,20162),(39405,321,20163),(39406,321,20164),(39407,321,20165),(39408,321,20166),(39409,321,20167),(39410,321,20168),(39411,321,20169),(39413,321,20170),(39414,321,20171),(39415,321,20172),(39416,321,20173),(39417,321,20174),(39418,321,20175),(39419,321,20176),(39420,321,20177),(39421,321,20178),(39422,321,20179),(39423,321,20180),(39424,321,20181),(39425,321,20182),(39426,321,20183),(39428,321,20184),(39429,321,20185),(39430,321,20186),(39431,321,20187),(39432,321,20188),(39433,321,20189),(39434,321,20190),(39435,321,20191),(39437,321,20192),(39438,321,20193),(39439,321,20194),(39440,321,20195),(39441,321,20196),(39442,321,20197),(39443,321,20198),(39444,321,20199),(39445,321,20200),(39447,321,20201),(39448,321,20202),(39449,321,20203),(39450,321,20204),(39451,321,20205),(39452,321,20206),(39453,321,20207),(39454,321,20208),(39455,321,20209),(39456,321,20210),(39457,321,20211),(39458,321,20212),(39459,321,20213),(39460,321,20214),(39461,321,20215),(39474,322,5233),(39463,322,5358),(39465,322,5364),(39466,322,5368),(39508,322,5385),(39516,322,5390),(39517,322,5391),(39526,322,5400),(39462,322,20216),(39464,322,20217),(39467,322,20218),(39468,322,20219),(39469,322,20220),(39470,322,20221),(39471,322,20222),(39472,322,20223),(39473,322,20224),(39475,322,20225),(39476,322,20226),(39477,322,20227),(39478,322,20228),(39479,322,20229),(39480,322,20230),(39481,322,20231),(39482,322,20232),(39483,322,20233),(39484,322,20234),(39485,322,20235),(39486,322,20236),(39487,322,20237),(39488,322,20238),(39489,322,20239),(39490,322,20240),(39491,322,20241),(39492,322,20242),(39493,322,20243),(39494,322,20244),(39495,322,20245),(39496,322,20246),(39497,322,20247),(39498,322,20248),(39499,322,20249),(39500,322,20250),(39501,322,20251),(39502,322,20252),(39503,322,20253),(39504,322,20254),(39505,322,20255),(39506,322,20256),(39507,322,20257),(39509,322,20258),(39510,322,20259),(39511,322,20260),(39512,322,20261),(39513,322,20262),(39514,322,20263),(39515,322,20264),(39518,322,20265),(39519,322,20266),(39520,322,20267),(39521,322,20268),(39522,322,20269),(39523,322,20270),(39524,322,20271),(39525,322,20272),(39527,323,4109),(39531,323,4114),(39528,323,20273),(39529,323,20274),(39530,323,20275),(39532,323,20276),(39533,323,20277),(39534,323,20278),(39535,323,20279),(39536,323,20280),(39537,323,20281),(39538,323,20282),(39539,323,20283),(39540,323,20284),(39541,323,20285),(40215,326,3062),(40232,326,3071),(40236,326,3072),(40237,326,3073),(40238,326,3075),(40229,326,3088),(40246,326,3102),(40248,326,3108),(40255,326,3119),(40256,326,3120),(40258,326,3125),(40272,326,3150),(40274,326,3152),(40275,326,3155),(40208,326,18381),(40209,326,18382),(40210,326,18383),(40211,326,18384),(40212,326,18385),(40213,326,18386),(40214,326,18387),(40216,326,18388),(40217,326,18389),(40218,326,18390),(40219,326,18391),(40220,326,18392),(40221,326,18393),(40222,326,18394),(40223,326,18395),(40224,326,18396),(40225,326,18397),(40226,326,18398),(40227,326,18399),(40228,326,18400),(40230,326,18401),(40231,326,18402),(40234,326,18404),(40235,326,18405),(40239,326,18406),(40240,326,18407),(40241,326,18408),(40242,326,18409),(40243,326,18410),(40244,326,18411),(40245,326,18412),(40249,326,18413),(40250,326,18414),(40251,326,18415),(40252,326,18416),(40253,326,18417),(40254,326,18418),(40257,326,18419),(40259,326,18420),(40260,326,18421),(40261,326,18422),(40262,326,18423),(40263,326,18424),(40264,326,18425),(40265,326,18426),(40266,326,18427),(40267,326,18428),(40268,326,18429),(40269,326,18430),(40270,326,18431),(40271,326,18432),(40273,326,18433),(40276,326,18434),(40277,326,18435),(40278,326,18436),(40279,326,18437),(40280,326,18438),(40281,326,18439),(40282,326,18440),(40283,326,18441),(40284,326,18442),(40285,326,18443),(40287,326,18444),(40247,326,20286),(40286,326,20287),(40233,326,20288),(40561,328,4133),(40559,328,19567),(40562,328,20014),(40557,328,20292),(40558,328,20293),(40560,328,20294),(40563,328,20295),(40564,328,20296),(40565,328,20297),(40575,329,15968),(40576,329,15969),(40577,329,15998),(40578,329,15999),(41664,330,20777),(41665,330,20778),(41666,330,20779),(41667,330,20780),(41668,330,20781),(41669,330,20782),(41670,330,20783),(41671,330,20784),(41672,330,20785),(41673,330,20786),(41674,330,20787),(41675,330,20788),(41676,330,20789),(41677,330,20790),(41678,330,20791),(41679,330,20792),(41680,330,20793),(41681,330,20794),(41682,330,20795),(41683,330,20796),(41684,330,20797),(41685,330,20798),(41686,330,20799),(41687,330,20800),(41688,330,20801),(41689,330,20802),(41690,330,20803),(41691,330,20804),(41692,331,20805),(41693,331,20806),(41694,331,20807),(41695,331,20808),(41696,331,20809),(41697,331,20810),(41698,331,20811),(41699,331,20812),(41700,331,20813),(41701,331,20814),(41702,331,20815),(41703,331,20816),(41704,331,20817),(41705,331,20818),(41706,331,20819),(41707,331,20820),(41708,331,20821),(41709,331,20822),(41710,331,20823),(41711,331,20824),(41712,331,20825),(41713,331,20826),(41714,331,20827),(41715,331,20828),(41716,331,20829),(41717,331,20830),(41718,331,20831),(41719,332,20832),(41720,332,20833),(41721,332,20834),(41722,332,20835),(41723,332,20836),(41724,332,20837),(41725,332,20838),(41726,332,20839),(41727,332,20840),(41728,332,20841),(41729,332,20842),(41730,332,20843),(41731,332,20844),(41732,332,20845),(41733,332,20846),(41734,332,20847),(41735,332,20848),(41736,332,20849),(41737,332,20850),(41738,332,20851),(41739,332,20852),(41740,332,20853),(41741,332,20854),(41742,332,20855),(41743,332,20856),(41744,332,20857),(41745,332,20858),(41746,332,20859),(41747,332,20860),(41748,332,20861),(41749,332,20862),(41750,332,20863),(41751,332,20864),(41752,332,20865),(41753,332,20866),(41754,332,20867),(41755,332,20868),(41756,332,20869),(41757,332,20870),(41758,332,20871),(41759,332,20872),(41609,333,20722),(41610,333,20723),(41611,333,20724),(41612,333,20725),(41613,333,20726),(41614,333,20727),(41615,333,20728),(41616,333,20729),(41617,333,20730),(41618,333,20731),(41619,333,20732),(41620,333,20733),(41621,333,20734),(41622,333,20735),(41623,333,20736),(41624,333,20737),(41625,333,20738),(41626,333,20739),(41627,333,20740),(41628,333,20741),(41629,333,20742),(41630,333,20743),(41631,333,20744),(41632,333,20745),(41633,333,20746),(41634,333,20747),(41635,333,20748),(41760,334,20873),(41761,334,20874),(41762,334,20875),(41763,334,20876),(41764,334,20877),(41765,334,20878),(41766,334,20879),(41767,334,20880),(41768,334,20881),(41769,334,20882),(41770,334,20883),(41771,334,20884),(41772,334,20885),(41773,334,20886),(41774,334,20887),(41775,334,20888),(41776,334,20889),(41777,334,20890),(41778,334,20891),(41779,334,20892),(41780,334,20893),(41781,334,20894),(41782,334,20895),(41783,334,20896),(41784,334,20897),(41785,334,20898),(41786,334,20899),(41787,334,20900),(41788,334,20901),(41789,334,20902),(41790,334,20903),(41791,334,20904),(41792,334,20905),(41793,334,20906),(41794,334,20907),(41795,334,20908),(41796,334,20909),(41797,334,20910),(41798,334,20911),(41799,334,20912),(41800,334,20913),(41801,334,20914),(41802,335,20915),(41803,335,20916),(41804,335,20917),(41805,335,20918),(41806,335,20919),(41807,335,20920),(41808,335,20921),(41809,335,20922),(41810,335,20923),(41811,335,20924),(41812,335,20925),(41813,335,20926),(41814,335,20927),(41815,335,20928),(41816,335,20929),(41817,335,20930),(41818,335,20931),(41819,335,20932),(41820,335,20933),(41821,335,20934),(41822,335,20935),(41823,335,20936),(41824,335,20937),(41825,335,20938),(41826,335,20939),(41827,335,20940),(41828,335,20941),(41829,335,20942),(41830,335,20943),(41831,335,20944),(41832,335,20945),(41833,335,20946),(41834,335,20947),(41835,335,20948),(41836,335,20949),(41837,335,20950),(41838,335,20951),(41636,336,20749),(41637,336,20750),(41638,336,20751),(41639,336,20752),(41640,336,20753),(41641,336,20754),(41642,336,20755),(41643,336,20756),(41644,336,20757),(41645,336,20758),(41646,336,20759),(41647,336,20760),(41648,336,20761),(41649,336,20762),(41650,336,20763),(41651,336,20764),(41652,336,20765),(41653,336,20766),(41654,336,20767),(41655,336,20768),(41656,336,20769),(41657,336,20770),(41658,336,20771),(41659,336,20772),(41660,336,20773),(41661,336,20774),(41662,336,20775),(41663,336,20776),(41841,339,15968),(41842,339,15998),(41839,340,15968),(41840,340,15998),(41844,341,6911),(41881,341,10380),(41858,341,13460),(41872,341,13502),(41865,341,15464),(41845,341,15724),(41846,341,15727),(41849,341,15732),(41851,341,15734),(41853,341,15736),(41855,341,15739),(41857,341,15743),(41863,341,15758),(41864,341,15760),(41867,341,15761),(41871,341,15764),(41876,341,15774),(41879,341,15779),(41882,341,15783),(41885,341,15788),(41888,341,15790),(41860,341,15827),(41843,341,20952),(41847,341,20953),(41848,341,20954),(41850,341,20955),(41852,341,20956),(41854,341,20957),(41856,341,20958),(41859,341,20959),(41861,341,20960),(41862,341,20961),(41866,341,20962),(41868,341,20963),(41869,341,20964),(41870,341,20965),(41873,341,20966),(41874,341,20967),(41875,341,20968),(41877,341,20969),(41878,341,20970),(41880,341,20971),(41883,341,20972),(41884,341,20973),(41886,341,20974),(41887,341,20975),(41889,341,20976),(41945,343,10140),(41947,343,10254),(41972,343,10263),(41913,343,10305),(41935,343,10330),(41944,343,10345),(41914,343,10403),(41930,343,10413),(41943,343,10858),(41966,343,10866),(41905,343,11050),(41891,343,11467),(41921,343,11507),(41948,343,11651),(41949,343,11652),(41963,343,11662),(41899,343,11674),(41898,343,11704),(41920,343,11713),(41890,343,11738),(41893,343,11989),(41901,343,15621),(41961,343,20747),(41892,343,20977),(41894,343,20978),(41895,343,20979),(41896,343,20980),(41897,343,20981),(41900,343,20982),(41902,343,20983),(41903,343,20984),(41904,343,20985),(41906,343,20986),(41907,343,20987),(41908,343,20988),(41909,343,20989),(41910,343,20990),(41911,343,20991),(41912,343,20992),(41915,343,20993),(41916,343,20994),(41917,343,20995),(41918,343,20996),(41919,343,20997),(41922,343,20998),(41923,343,20999),(41924,343,21000),(41925,343,21001),(41926,343,21002),(41927,343,21003),(41928,343,21004),(41929,343,21005),(41931,343,21006),(41932,343,21007),(41933,343,21008),(41934,343,21009),(41936,343,21010),(41937,343,21011),(41938,343,21012),(41939,343,21013),(41940,343,21014),(41941,343,21015),(41942,343,21016),(41946,343,21017),(41950,343,21018),(41951,343,21019),(41952,343,21020),(41953,343,21021),(41954,343,21022),(41955,343,21023),(41956,343,21024),(41957,343,21025),(41958,343,21026),(41959,343,21027),(41960,343,21028),(41962,343,21029),(41964,343,21030),(41965,343,21031),(41967,343,21032),(41968,343,21033),(41969,343,21034),(41970,343,21035),(41971,343,21036),(41973,343,21037),(41974,343,21038),(41975,343,21039),(41976,343,21040),(41977,343,21041),(41978,343,21042),(41979,343,21043),(41980,343,21044),(41981,344,15998),(41982,345,20472),(41984,345,20831),(41993,346,6920),(41998,346,6925),(42011,346,6948),(42025,346,11217),(42005,346,11645),(41999,346,11995),(42013,346,13607),(42024,346,13626),(42012,346,15608),(41991,346,15677),(41989,346,15722),(42014,346,15766),(41994,346,15812),(42027,346,15891),(42029,346,20831),(41985,346,21045),(41986,346,21046),(41987,346,21047),(41988,346,21048),(41990,346,21049),(41992,346,21050),(41995,346,21051),(41996,346,21052),(41997,346,21053),(42000,346,21054),(42001,346,21055),(42002,346,21056),(42003,346,21057),(42004,346,21058),(42006,346,21059),(42007,346,21060),(42008,346,21061),(42009,346,21062),(42010,346,21063),(42015,346,21064),(42016,346,21065),(42017,346,21066),(42018,346,21067),(42019,346,21068),(42020,346,21069),(42021,346,21070),(42022,346,21071),(42023,346,21072),(42026,346,21073),(42028,346,21074),(42030,346,21075);
/*!40000 ALTER TABLE `course_classroom_students` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_course`
--

DROP TABLE IF EXISTS `course_course`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_course` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `course_name` varchar(100) NOT NULL,
  `course_code` varchar(20) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_course`
--

LOCK TABLES `course_course` WRITE;
/*!40000 ALTER TABLE `course_course` DISABLE KEYS */;
INSERT INTO `course_course` VALUES (1,'Bacharelado em Ciência e Tecnologia','BCT'),(2,'Tecnologias e Sistemas de Informação','TSI'),(3,'Curso Exemplo','CE'),(5,'Escola Preparatória','EP'),(6,'Relações Internacionais','ARI'),(7,'Bacharelado em Ciência da Computação','BCC'),(8,'Engenharia de Gestão','EG'),(9,'Engenharia de Energia','EE'),(10,'Bacharelado em Matemática','BMat');
/*!40000 ALTER TABLE `course_course` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_course_course_coords`
--

DROP TABLE IF EXISTS `course_course_course_coords`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_course_course_coords` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `course_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `course_course_course_coords_course_id_user_id_3c160231_uniq` (`course_id`,`user_id`),
  KEY `course_course_course_coords_user_id_53b67b4c_fk_account_user_id` (`user_id`),
  CONSTRAINT `course_course_course_coords_user_id_53b67b4c_fk_account_user_id` FOREIGN KEY (`user_id`) REFERENCES `account_user` (`id`),
  CONSTRAINT `course_course_course_course_id_27d06245_fk_course_co` FOREIGN KEY (`course_id`) REFERENCES `course_course` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_course_course_coords`
--

LOCK TABLES `course_course_course_coords` WRITE;
/*!40000 ALTER TABLE `course_course_course_coords` DISABLE KEYS */;
/*!40000 ALTER TABLE `course_course_course_coords` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_course_course_profs`
--

DROP TABLE IF EXISTS `course_course_course_profs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_course_course_profs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `course_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `course_course_course_profs_course_id_user_id_ae382174_uniq` (`course_id`,`user_id`),
  KEY `course_course_course_profs_user_id_0905c765_fk_account_user_id` (`user_id`),
  CONSTRAINT `course_course_course_course_id_413fe2f9_fk_course_co` FOREIGN KEY (`course_id`) REFERENCES `course_course` (`id`),
  CONSTRAINT `course_course_course_profs_user_id_0905c765_fk_account_user_id` FOREIGN KEY (`user_id`) REFERENCES `account_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_course_course_profs`
--

LOCK TABLES `course_course_course_profs` WRITE;
/*!40000 ALTER TABLE `course_course_course_profs` DISABLE KEYS */;
/*!40000 ALTER TABLE `course_course_course_profs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_course_institutes`
--

DROP TABLE IF EXISTS `course_course_institutes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_course_institutes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `course_id` int(11) NOT NULL,
  `institute_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `course_course_institutes_course_id_institute_id_b41037d4_uniq` (`course_id`,`institute_id`),
  KEY `course_course_instit_institute_id_9fa7b95c_fk_course_in` (`institute_id`),
  CONSTRAINT `course_course_instit_institute_id_9fa7b95c_fk_course_in` FOREIGN KEY (`institute_id`) REFERENCES `course_institute` (`id`),
  CONSTRAINT `course_course_institutes_course_id_4721f5a6_fk_course_course_id` FOREIGN KEY (`course_id`) REFERENCES `course_course` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_course_institutes`
--

LOCK TABLES `course_course_institutes` WRITE;
/*!40000 ALTER TABLE `course_course_institutes` DISABLE KEYS */;
INSERT INTO `course_course_institutes` VALUES (1,1,1),(2,2,1),(3,3,2),(5,5,1),(6,6,1),(7,7,1),(8,8,1),(9,9,1),(10,10,1);
/*!40000 ALTER TABLE `course_course_institutes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_discipline`
--

DROP TABLE IF EXISTS `course_discipline`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_discipline` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `discipline_name` varchar(100) NOT NULL,
  `discipline_code` varchar(20) NOT NULL,
  `discipline_objective` longtext NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_discipline`
--

LOCK TABLES `course_discipline` WRITE;
/*!40000 ALTER TABLE `course_discipline` DISABLE KEYS */;
INSERT INTO `course_discipline` VALUES (1,'Processamento da Informação','BCM0505','Ementa: Introdução a algoritmos. Variáveis e tipos de dados. Operadores aritméticos, lógicos e precedência. Métodos/Funções e parâmetros. Estruturas de seleção. Estruturas de repetição. Vetores. Matrizes. Entrada e saída de dados. Depuração. Melhores práticas de programação.\r\n\r\nObjetivo gerais: Apresentar os fundamentos sobre manipulação e tratamento da Informação, principalmente por meio da explicação e experimentação dos conceitos e do uso prático da lógica de programação.\r\n\r\nObjetivos específicos: Que o aluno seja capaz de compreender os conceitos fundamentais a respeito da manipulação e tratamento da Informação. Que o aluno entenda a lógica de programação de computadores e adquira a habilidade prática de desenvolver algoritmos básicos para modelar e solucionar problemas de natureza técnico-científica, independentemente de uma linguagem ou de um paradigma de programação específicos.'),(2,'Gestão e Governança de TI','GestGovTI',''),(3,'Disciplina Exemplo','Ex','Esta disciplina TEMPLATE tem como objetivo disponibilizar questões para servirem de modelo. Seria interessante deixar uma questão de cada modelo. Por exemplo, uma questão paramétrica para o problema do Movimento Retilíneo Uniforme; Uma questão para gráficos automáticos; Uma questão para imagem; etc.\r\nATENÇÃO: (1) Todas as questões de múltipla escolha de um Exame precisam ter o mesmo número de alternativas; (2) Os professores cadastrados em TURMAS irão aparecer no cabeçalho da prova.'),(5,'PROVA DE SELEÇÃO DE 2020','EP-sel',''),(6,'Simulados','EP-sim1',''),(11,'Curso de Italiano Presencial','CIP',''),(12,'Curso de Língua Inglesa Presencial','CLIP',''),(13,'Curso Presencial de Espanhol','CPE',''),(14,'Engenharia de Software','MCTA033',''),(15,'Arquitetura de Computadores','MCTA004-17',''),(16,'Inovação Tecnológica','ESTG010-17',''),(17,'Bases Computacionais da Ciência','BC0005',''),(18,'Funções de Uma Variável','BCN0402',''),(19,'Natureza da Informação','BCM0504',''),(20,'Bases Conceituais da Energia','BIJ0207',''),(21,'Geometria Analítica','GA',''),(22,'Gestão de Projetos e Qualidade de Software','GestPQSw',''),(23,'Internet e Tecnologias Web','ITW',''),(24,'Projeto de Sistemas','ProjSis',''),(25,'Sistemas Computacionais','SisCom',''),(26,'Tecnologias Multimídia','TecMult',''),(27,'Sistemas Corporativos da Informação','SisCor',''),(28,'Metodologia Científica','MetCient',''),(29,'Modelagem de Dados','ModDad',''),(30,'Software Livre','SoftLivre',''),(31,'Segurança da Informação: Dados, Redes e Sistemas','SegInfo',''),(32,'Computação Móvel','CompMov',''),(33,'Engenharia Econômica','EESTO013-17',''),(34,'Compiladores','Comp',''),(35,'Processamento de Informação - DESENVOLVIMENTO','BCM0505-DESENV','Esta disciplina de PI em DESENVOLVIMENTO tem como objetivo criar questões novas pelos monitores, tem os mesmos tópicos que a disciplina de produção (BCM0505), com um sufixo _desenv, exemplo vetor_desenv. \r\n\r\nApós validar cada questão criada pelos monitores, estas questões serão movidas para BCM0505, bastando alterar o tópico, por exemplo, vetor_desenv para vetor.\r\n\r\nOs monitores têm acesso apenas às questões nesta disciplina DESENVOLVIMENTO.'),(36,'Cálculo Numérico','CN',''),(37,'Propriedade Intelectual','ESTG025-17',''),(38,'Processamento Digital de Imagens','MCZA018-17','Introdução. Sistema visual humano. Dispositivos de aquisição e apresentação de imagens. Representação de imagens. Amostragem e quantização. Técnicas de reconstrução de imagens. Armazenagem. Compressão e recuperação de imagens. Tratamento de ruídos em imagens; Filtragem espacial e convolução. Técnicas de realce e restauração de imagens; Técnicas de segmentação e representação.'),(39,'Segurança de Dados','MCTA023-13',''),(40,'Qualidade em Sistemas','ESTG016-17','');
/*!40000 ALTER TABLE `course_discipline` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_discipline_courses`
--

DROP TABLE IF EXISTS `course_discipline_courses`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_discipline_courses` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `discipline_id` int(11) NOT NULL,
  `course_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `course_discipline_courses_discipline_id_course_id_ae298cd6_uniq` (`discipline_id`,`course_id`),
  KEY `course_discipline_courses_course_id_9b08f936_fk_course_course_id` (`course_id`),
  CONSTRAINT `course_discipline_co_discipline_id_58803173_fk_course_di` FOREIGN KEY (`discipline_id`) REFERENCES `course_discipline` (`id`),
  CONSTRAINT `course_discipline_courses_course_id_9b08f936_fk_course_course_id` FOREIGN KEY (`course_id`) REFERENCES `course_course` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=43 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_discipline_courses`
--

LOCK TABLES `course_discipline_courses` WRITE;
/*!40000 ALTER TABLE `course_discipline_courses` DISABLE KEYS */;
INSERT INTO `course_discipline_courses` VALUES (1,1,1),(2,2,2),(3,3,3),(5,5,5),(6,6,5),(11,11,6),(12,12,6),(13,13,6),(15,14,7),(16,15,7),(17,16,8),(18,17,1),(19,18,1),(20,19,1),(21,20,9),(22,21,1),(23,22,2),(24,23,2),(25,24,2),(26,25,2),(27,26,2),(28,27,2),(29,28,2),(30,29,2),(31,30,2),(32,31,2),(33,32,2),(34,33,8),(35,34,7),(39,35,1),(37,36,10),(38,37,8),(40,38,7),(41,39,7),(42,40,8);
/*!40000 ALTER TABLE `course_discipline_courses` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_discipline_discipline_coords`
--

DROP TABLE IF EXISTS `course_discipline_discipline_coords`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_discipline_discipline_coords` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `discipline_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `course_discipline_discip_discipline_id_user_id_b9c7dd19_uniq` (`discipline_id`,`user_id`),
  KEY `course_discipline_di_user_id_1b546641_fk_account_u` (`user_id`),
  CONSTRAINT `course_discipline_di_discipline_id_dffbcc8f_fk_course_di` FOREIGN KEY (`discipline_id`) REFERENCES `course_discipline` (`id`),
  CONSTRAINT `course_discipline_di_user_id_1b546641_fk_account_u` FOREIGN KEY (`user_id`) REFERENCES `account_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=66 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_discipline_discipline_coords`
--

LOCK TABLES `course_discipline_discipline_coords` WRITE;
/*!40000 ALTER TABLE `course_discipline_discipline_coords` DISABLE KEYS */;
INSERT INTO `course_discipline_discipline_coords` VALUES (3,1,1),(4,2,2),(5,3,1),(47,3,66),(56,5,1),(15,5,55),(55,5,64),(54,6,55),(17,11,1),(16,12,1),(19,12,58),(18,13,1),(20,14,1),(21,15,60),(22,16,63),(23,17,25),(59,18,1),(24,18,61),(58,18,78),(25,19,48),(48,19,60),(43,20,1),(26,20,62),(40,21,1),(27,21,48),(28,22,60),(29,23,60),(30,24,60),(31,25,60),(32,26,60),(33,27,60),(34,28,60),(35,29,60),(36,30,60),(37,31,60),(62,31,79),(38,32,60),(42,33,1),(41,33,63),(46,34,1),(44,34,48),(49,35,1),(50,36,1),(51,36,68),(52,37,63),(57,38,1),(61,39,1),(60,39,79),(65,40,1),(64,40,80);
/*!40000 ALTER TABLE `course_discipline_discipline_coords` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_discipline_discipline_profs`
--

DROP TABLE IF EXISTS `course_discipline_discipline_profs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_discipline_discipline_profs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `discipline_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `course_discipline_discip_discipline_id_user_id_d73b9cdc_uniq` (`discipline_id`,`user_id`),
  KEY `course_discipline_di_user_id_af64824b_fk_account_u` (`user_id`),
  CONSTRAINT `course_discipline_di_discipline_id_8f7f8690_fk_course_di` FOREIGN KEY (`discipline_id`) REFERENCES `course_discipline` (`id`),
  CONSTRAINT `course_discipline_di_user_id_af64824b_fk_account_u` FOREIGN KEY (`user_id`) REFERENCES `account_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=280 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_discipline_discipline_profs`
--

LOCK TABLES `course_discipline_discipline_profs` WRITE;
/*!40000 ALTER TABLE `course_discipline_discipline_profs` DISABLE KEYS */;
INSERT INTO `course_discipline_discipline_profs` VALUES (1,1,1),(108,1,6),(109,1,7),(116,1,14),(118,1,17),(121,1,20),(123,1,22),(124,1,23),(126,1,25),(130,1,31),(132,1,33),(133,1,34),(135,1,36),(138,1,41),(139,1,42),(145,1,48),(146,1,49),(122,1,54),(261,1,69),(272,1,70),(269,1,71),(270,1,76),(271,1,77),(49,2,1),(50,2,2),(51,2,39),(52,3,1),(53,3,2),(56,3,6),(57,3,7),(64,3,14),(67,3,17),(70,3,20),(72,3,22),(73,3,23),(75,3,25),(81,3,31),(83,3,33),(84,3,34),(86,3,36),(89,3,39),(91,3,41),(92,3,42),(98,3,48),(99,3,49),(104,3,52),(237,3,54),(238,3,55),(239,3,56),(240,3,58),(241,3,60),(242,3,61),(250,3,62),(243,3,63),(249,3,64),(252,3,65),(253,3,66),(262,3,69),(267,5,1),(156,5,55),(155,5,56),(266,5,64),(236,6,1),(244,6,55),(245,6,64),(162,11,57),(167,11,58),(177,12,1),(161,12,57),(168,12,58),(179,13,1),(163,13,57),(169,13,58),(174,14,1),(235,15,1),(183,15,60),(231,16,1),(184,16,63),(187,17,1),(185,17,25),(190,18,1),(189,18,61),(274,18,78),(233,19,1),(191,19,48),(254,19,60),(232,20,1),(194,20,62),(234,21,2),(196,21,48),(225,22,1),(199,22,60),(226,23,1),(201,23,60),(227,24,1),(203,24,60),(228,25,1),(209,26,1),(206,26,25),(208,26,60),(210,27,1),(212,27,60),(213,28,1),(215,28,60),(217,29,1),(229,30,1),(220,31,1),(277,31,79),(224,32,1),(222,32,49),(248,33,1),(247,33,63),(251,34,48),(255,35,1),(256,35,42),(260,35,65),(257,35,67),(265,35,72),(268,35,75),(258,36,1),(259,36,68),(264,37,1),(263,37,63),(273,38,1),(276,39,1),(275,39,79),(278,40,1),(279,40,80);
/*!40000 ALTER TABLE `course_discipline_discipline_profs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_institute`
--

DROP TABLE IF EXISTS `course_institute`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_institute` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `institute_name` varchar(50) NOT NULL,
  `institute_code` varchar(20) NOT NULL,
  `institute_logo` varchar(20) NOT NULL,
  `institute_url` varchar(20) NOT NULL,
  `institute_exams_generated` int(11) NOT NULL,
  `institute_exams_corrected` int(11) NOT NULL,
  `institute_questions_corrected` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_institute`
--

LOCK TABLES `course_institute` WRITE;
/*!40000 ALTER TABLE `course_institute` DISABLE KEYS */;
INSERT INTO `course_institute` VALUES (1,'Universidade Federal do ABC','UFABC','ufabc','www.ufabc.edu.br',60354,14422,630175),(2,'Instituto Exemplo','IE','webMCTest1','www.ufabc.edu.br',940,540,15039);
/*!40000 ALTER TABLE `course_institute` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_institute_institute_coords`
--

DROP TABLE IF EXISTS `course_institute_institute_coords`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_institute_institute_coords` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `institute_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `course_institute_institu_institute_id_user_id_0b9d4aa2_uniq` (`institute_id`,`user_id`),
  KEY `course_institute_ins_user_id_f3a649aa_fk_account_u` (`user_id`),
  CONSTRAINT `course_institute_ins_institute_id_c82b8224_fk_course_in` FOREIGN KEY (`institute_id`) REFERENCES `course_institute` (`id`),
  CONSTRAINT `course_institute_ins_user_id_f3a649aa_fk_account_u` FOREIGN KEY (`user_id`) REFERENCES `account_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_institute_institute_coords`
--

LOCK TABLES `course_institute_institute_coords` WRITE;
/*!40000 ALTER TABLE `course_institute_institute_coords` DISABLE KEYS */;
/*!40000 ALTER TABLE `course_institute_institute_coords` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_institute_institute_profs`
--

DROP TABLE IF EXISTS `course_institute_institute_profs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_institute_institute_profs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `institute_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `course_institute_institu_institute_id_user_id_93b32325_uniq` (`institute_id`,`user_id`),
  KEY `course_institute_ins_user_id_f4e4ff24_fk_account_u` (`user_id`),
  CONSTRAINT `course_institute_ins_institute_id_b610787d_fk_course_in` FOREIGN KEY (`institute_id`) REFERENCES `course_institute` (`id`),
  CONSTRAINT `course_institute_ins_user_id_f4e4ff24_fk_account_u` FOREIGN KEY (`user_id`) REFERENCES `account_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_institute_institute_profs`
--

LOCK TABLES `course_institute_institute_profs` WRITE;
/*!40000 ALTER TABLE `course_institute_institute_profs` DISABLE KEYS */;
/*!40000 ALTER TABLE `course_institute_institute_profs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk_account_user_id` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_account_user_id` FOREIGN KEY (`user_id`) REFERENCES `account_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=387 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2019-01-22 19:23:32.936912','1','coordenador',1,'[{\"added\": {}}]',3,1),(2,'2019-01-22 19:24:16.435423','1','coordenador',2,'[{\"changed\": {\"fields\": [\"permissions\"]}}]',3,1),(3,'2019-01-22 19:25:07.076121','2','professor',1,'[{\"added\": {}}]',3,1),(4,'2019-01-22 19:25:20.297401','2','rafaela.rocha@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(5,'2019-01-22 19:25:32.975848','1','fzampirolli@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(6,'2019-01-22 19:25:43.488692','2','rafaela.rocha@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(7,'2019-01-22 19:28:34.037321','4','fzcoord@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(8,'2019-01-24 13:02:05.530940','5','fzstudent@ufabc.edu.br',3,'',17,1),(9,'2019-01-24 13:02:05.560157','51','fzstudent1@ufabc.edu.br',3,'',17,1),(10,'2019-01-24 14:02:05.888518','2','rafaela.rocha@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(11,'2019-01-24 18:25:59.327593','4','BCM0505 - 08h-SA-DA1,10h-SB-DA2 - teste1',3,'',13,1),(12,'2019-01-24 18:25:59.362338','5','BCM0505 - 08h-SA-DA1,10h-SB-DA2 - teste2',3,'',13,1),(13,'2019-01-24 18:25:59.446145','4','BCM0505 - 08h-SA-DA1,10h-SB-DA2 - teste1',3,'',13,1),(14,'2019-01-24 18:25:59.522979','5','BCM0505 - 08h-SA-DA1,10h-SB-DA2 - teste2',3,'',13,1),(15,'2019-01-24 19:12:40.362145','8','BCM0505 - 08h-SA-DA1,10h-SB-DA2 - Prova 1',3,'',13,1),(16,'2019-01-24 19:12:40.418037','8','BCM0505 - 08h-SA-DA1,10h-SB-DA2 - Prova 1',3,'',13,1),(17,'2019-01-30 17:20:49.242258','52','aline.lima@mj.gov.br',2,'[{\"changed\": {\"fields\": [\"groups\", \"last_login\"]}}]',17,1),(18,'2019-01-30 18:20:32.423858','52','aline.lima@mj.gov.br',2,'[{\"changed\": {\"fields\": [\"first_name\", \"last_name\"]}}]',17,1),(19,'2019-01-31 07:47:32.415595','52','aline.lima@mj.gov.br',2,'[{\"changed\": {\"fields\": [\"first_name\", \"last_name\"]}}]',17,1),(20,'2019-02-08 15:41:19.643541','9','BCM0505 - teste_teo - Prova 1',3,'',13,1),(21,'2019-02-15 09:29:46.933262','2','rafaela.rocha@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(22,'2019-02-15 09:30:53.816549','52','aline.lima@mj.gov.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(23,'2019-02-15 18:45:46.958843','56','sandra.trevisan@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"last_name\", \"groups\"]}}]',17,1),(24,'2019-02-15 18:46:35.130867','55','steil@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"last_name\", \"groups\"]}}]',17,1),(25,'2019-02-15 18:56:29.867630','56','sandra.trevisan@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(26,'2019-02-15 19:48:47.789421','1','fzampirolli@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"last_name\"]}}]',17,1),(27,'2019-02-15 20:08:36.803986','77','EP-sel - A101_0',3,'',12,1),(28,'2019-02-15 20:08:36.833140','78','EP-sel - A102_0',3,'',12,1),(29,'2019-02-15 20:08:36.907370','79','EP-sel - A103_0',3,'',12,1),(30,'2019-02-15 20:08:36.934386','80','EP-sel - A104_0',3,'',12,1),(31,'2019-02-15 20:08:36.959398','81','EP-sel - A105_0',3,'',12,1),(32,'2019-02-15 20:08:36.984403','82','EP-sel - A106_0',3,'',12,1),(33,'2019-02-15 20:08:37.009643','83','EP-sel - A107_0',3,'',12,1),(34,'2019-02-15 20:08:37.034791','84','EP-sel - A108_0',3,'',12,1),(35,'2019-02-15 20:08:37.059953','85','EP-sel - A109_0',3,'',12,1),(36,'2019-02-15 20:08:37.085045','86','EP-sel - A110_0',3,'',12,1),(37,'2019-02-15 20:08:37.110298','87','EP-sel - A113_0',3,'',12,1),(38,'2019-02-15 20:08:37.136677','88','EP-sel - A114_0',3,'',12,1),(39,'2019-02-15 20:08:37.170114','89','EP-sel - A211_0',3,'',12,1),(40,'2019-02-15 20:08:37.203358','90','EP-sel - A212_0',3,'',12,1),(41,'2019-02-15 20:08:37.237182','91','EP-sel - L407_2',3,'',12,1),(42,'2019-02-15 20:08:37.270679','76','EP-sel - S006_0',3,'',12,1),(43,'2019-02-15 20:10:06.938040','92','EP-sel - S204_0',3,'',12,1),(44,'2019-02-15 20:10:06.971833','93','EP-sel - S205_0',3,'',12,1),(45,'2019-02-15 20:10:07.005895','94','EP-sel - S206_0',3,'',12,1),(46,'2019-02-15 20:10:07.039355','95','EP-sel - S207_0',3,'',12,1),(47,'2019-02-15 20:10:07.072883','96','EP-sel - S208_0',3,'',12,1),(48,'2019-02-15 20:10:07.106354','97','EP-sel - S209_0',3,'',12,1),(49,'2019-02-15 20:10:07.205222','98','EP-sel - S210_0',3,'',12,1),(50,'2019-02-15 20:10:07.240315','99','EP-sel - S213_0',3,'',12,1),(51,'2019-02-15 20:10:07.273834','100','EP-sel - S214_0',3,'',12,1),(52,'2019-02-15 20:10:07.307455','101','EP-sel - S301_1',3,'',12,1),(53,'2019-02-15 20:10:07.332730','102','EP-sel - S301_2',3,'',12,1),(54,'2019-02-15 20:10:07.357921','103','EP-sel - S302_1',3,'',12,1),(55,'2019-02-15 20:10:07.383048','104','EP-sel - S302_2',3,'',12,1),(56,'2019-02-15 20:10:07.408181','105','EP-sel - S305_1',3,'',12,1),(57,'2019-02-15 20:10:07.433367','106','EP-sel - S305_2',3,'',12,1),(58,'2019-02-15 20:10:07.458545','107','EP-sel - S306_1',3,'',12,1),(59,'2019-02-15 20:10:07.483667','108','EP-sel - S307_1',3,'',12,1),(60,'2019-02-15 20:10:07.508831','109','EP-sel - S307_2',3,'',12,1),(61,'2019-02-15 20:10:07.534002','110','EP-sel - S308_1',3,'',12,1),(62,'2019-02-15 20:10:07.559525','111','EP-sel - S311_1',3,'',12,1),(63,'2019-02-15 20:10:07.584245','112','EP-sel - S311_2',3,'',12,1),(64,'2019-02-15 20:15:28.304630','56','sandra.trevisan@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(65,'2019-02-15 20:16:00.801282','56','sandra.trevisan@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(66,'2019-02-18 10:58:51.380289','56','sandra.trevisan@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(67,'2019-02-18 10:59:16.292014','55','steil@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(68,'2019-02-18 10:59:34.612433','1','fzampirolli@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"last_name\"]}}]',17,1),(69,'2019-03-14 23:54:46.882266','57','',1,'[{\"added\": {}}]',17,1),(70,'2019-03-14 23:55:31.595784','57','luciana.milena@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"first_name\", \"last_name\", \"email\", \"groups\"]}}]',17,1),(71,'2019-03-15 18:42:54.887408','58','ana.muta@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"last_name\"]}}]',17,1),(72,'2019-03-15 19:02:05.860439','3','fzprof@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"last_name\"]}}]',17,1),(73,'2019-03-15 20:44:40.419255','58','ana.muta@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(74,'2019-03-15 21:20:22.208327','6905','Nathalia Florencio Peres-nathaliafperes@gmail.com',1,'[{\"added\": {}}]',16,1),(75,'2019-03-15 21:22:37.366841','155','CLIP - A-101-0',2,'[{\"changed\": {\"fields\": [\"students\"]}}]',12,1),(76,'2019-03-15 23:08:02.648837','163','MCTA033 - NA2',2,'[{\"changed\": {\"fields\": [\"classroom_profs\"]}}]',12,1),(77,'2019-04-08 13:18:01.049208','3','fzprof@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"last_name\"]}}]',17,1),(78,'2019-05-21 10:06:11.081053','60','',1,'[{\"added\": {}}]',17,1),(79,'2019-05-21 10:06:33.798719','60','guiou@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"first_name\", \"last_name\", \"email\", \"groups\"]}}]',17,1),(80,'2019-05-21 10:07:30.677483','61','',1,'[{\"added\": {}}]',17,1),(81,'2019-05-21 10:07:52.547935','61','ercilio.silva@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"first_name\", \"last_name\", \"email\", \"groups\"]}}]',17,1),(82,'2019-05-21 10:08:42.624964','62','',1,'[{\"added\": {}}]',17,1),(83,'2019-05-21 10:08:55.897412','62','joao.moreira@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"first_name\", \"last_name\", \"email\", \"groups\"]}}]',17,1),(84,'2019-05-21 10:09:41.490384','63','',1,'[{\"added\": {}}]',17,1),(85,'2019-05-21 10:09:57.324343','63','jorge.tomioka@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"first_name\", \"last_name\", \"email\", \"groups\"]}}]',17,1),(86,'2019-05-21 10:40:11.681851','45','[BCM0505]<repeticao>',2,'[{\"changed\": {\"fields\": [\"discipline\"]}}]',6,1),(87,'2019-05-21 10:42:14.840986','45','[BCM0505]<repeticao>',3,'',6,1),(88,'2019-05-22 12:17:03.128571','20','BCM0505 - test-teo - Prova 1 teo3a08h',2,'[{\"changed\": {\"fields\": [\"classrooms\"]}}]',13,1),(89,'2019-05-22 12:19:02.357147','55','BCM0505 - test-lab - P2-B3B4-SB',2,'[{\"changed\": {\"fields\": [\"classrooms\"]}}]',13,1),(90,'2019-05-22 12:34:55.425091','11',' -  - Ciclo 45',3,'',13,1),(91,'2019-05-22 12:36:46.565051','35',' -  - Nivelamento',3,'',13,1),(92,'2019-05-22 12:43:11.370550','28','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 1 lab10h',3,'',13,1),(93,'2019-05-22 12:43:11.418738','65','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 2',3,'',13,1),(94,'2019-05-22 12:43:11.468597','28','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 1 lab10h',3,'',13,1),(95,'2019-05-22 12:43:11.511198','65','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 2',3,'',13,1),(96,'2019-05-22 12:43:11.551911','28','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 1 lab10h',3,'',13,1),(97,'2019-05-22 12:43:11.593804','65','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 2',3,'',13,1),(98,'2019-05-22 12:43:11.658753','28','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 1 lab10h',3,'',13,1),(99,'2019-05-22 12:43:11.711856','65','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 2',3,'',13,1),(100,'2019-05-22 12:43:11.752903','28','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 1 lab10h',3,'',13,1),(101,'2019-05-22 12:43:11.795100','65','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 2',3,'',13,1),(102,'2019-05-22 12:43:11.836464','28','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 1 lab10h',3,'',13,1),(103,'2019-05-22 12:43:11.879955','65','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 2',3,'',13,1),(104,'2019-05-22 12:43:11.921421','28','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 1 lab10h',3,'',13,1),(105,'2019-05-22 12:43:11.962955','65','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 2',3,'',13,1),(106,'2019-05-22 12:43:12.005240','28','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 1 lab10h',3,'',13,1),(107,'2019-05-22 12:43:12.046910','65','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 2',3,'',13,1),(108,'2019-05-22 12:43:12.089301','28','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 1 lab10h',3,'',13,1),(109,'2019-05-22 12:43:12.131792','65','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 2',3,'',13,1),(110,'2019-05-22 12:43:12.173089','28','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 1 lab10h',3,'',13,1),(111,'2019-05-22 12:43:12.214520','65','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 2',3,'',13,1),(112,'2019-05-22 12:43:12.256641','28','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 1 lab10h',3,'',13,1),(113,'2019-05-22 12:43:12.298554','65','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 2',3,'',13,1),(114,'2019-05-22 12:43:12.340281','28','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 1 lab10h',3,'',13,1),(115,'2019-05-22 12:43:12.381534','65','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 2',3,'',13,1),(116,'2019-05-22 12:43:12.423527','28','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 1 lab10h',3,'',13,1),(117,'2019-05-22 12:43:12.465622','65','BCM0505 - 10-DA1-SA,10-DA1-SB,10-DA2-SA,10-DA2-SB,10-DA3-SA,10-DA3-SB,10-DA4-SA,10-DA4-SB,10-DA5-SA,10-DA6-SA,10-DA7-SA,10-DA8-SA,10-DA9-SA - Prova 2',3,'',13,1),(118,'2019-05-22 12:43:12.502693','29','BCM0505 - 19-NB1-SA,19-NB1-SB,19-NB2-SB,19-NB4-SA,19-NB5-SA,19-NB7-SA,19-NB8-SA,19-NB9-SA - Prova 1 lab19h',3,'',13,1),(119,'2019-05-22 12:43:12.545017','29','BCM0505 - 19-NB1-SA,19-NB1-SB,19-NB2-SB,19-NB4-SA,19-NB5-SA,19-NB7-SA,19-NB8-SA,19-NB9-SA - Prova 1 lab19h',3,'',13,1),(120,'2019-05-22 12:43:12.581387','22','BCM0505 - 19-NB12-SB,19-NB145-SA,19-NB789-SA - Prova 1 teo3a19h',3,'',13,1),(121,'2019-05-22 12:43:12.617103','22','BCM0505 - 19-NB12-SB,19-NB145-SA,19-NB789-SA - Prova 1 teo3a19h',3,'',13,1),(122,'2019-05-22 12:43:12.664531','29','BCM0505 - 19-NB1-SA,19-NB1-SB,19-NB2-SB,19-NB4-SA,19-NB5-SA,19-NB7-SA,19-NB8-SA,19-NB9-SA - Prova 1 lab19h',3,'',13,1),(123,'2019-05-22 12:43:12.703648','29','BCM0505 - 19-NB1-SA,19-NB1-SB,19-NB2-SB,19-NB4-SA,19-NB5-SA,19-NB7-SA,19-NB8-SA,19-NB9-SA - Prova 1 lab19h',3,'',13,1),(124,'2019-05-22 12:43:12.745340','29','BCM0505 - 19-NB1-SA,19-NB1-SB,19-NB2-SB,19-NB4-SA,19-NB5-SA,19-NB7-SA,19-NB8-SA,19-NB9-SA - Prova 1 lab19h',3,'',13,1),(125,'2019-05-22 12:43:12.787300','29','BCM0505 - 19-NB1-SA,19-NB1-SB,19-NB2-SB,19-NB4-SA,19-NB5-SA,19-NB7-SA,19-NB8-SA,19-NB9-SA - Prova 1 lab19h',3,'',13,1),(126,'2019-05-22 12:43:12.824384','22','BCM0505 - 19-NB12-SB,19-NB145-SA,19-NB789-SA - Prova 1 teo3a19h',3,'',13,1),(127,'2019-05-22 12:43:12.864908','29','BCM0505 - 19-NB1-SA,19-NB1-SB,19-NB2-SB,19-NB4-SA,19-NB5-SA,19-NB7-SA,19-NB8-SA,19-NB9-SA - Prova 1 lab19h',3,'',13,1),(128,'2019-05-22 12:43:12.904489','29','BCM0505 - 19-NB1-SA,19-NB1-SB,19-NB2-SB,19-NB4-SA,19-NB5-SA,19-NB7-SA,19-NB8-SA,19-NB9-SA - Prova 1 lab19h',3,'',13,1),(129,'2019-05-22 12:43:13.035817','30','BCM0505 - 21-NA1-SA,21-NA1-SB,21-NA2-SA,21-NA2-SB,21-NA3-SA,21-NA3-SB,21-NA4-SA,21-NA4-SB,21-NA5-SA,21-NA6-SA,21-NA7-SA,21-NA8-SA,21-NA9-SA - Prova 1 lab21h',3,'',13,1),(130,'2019-05-22 12:43:13.084158','30','BCM0505 - 21-NA1-SA,21-NA1-SB,21-NA2-SA,21-NA2-SB,21-NA3-SA,21-NA3-SB,21-NA4-SA,21-NA4-SB,21-NA5-SA,21-NA6-SA,21-NA7-SA,21-NA8-SA,21-NA9-SA - Prova 1 lab21h',3,'',13,1),(131,'2019-05-22 12:43:13.134671','30','BCM0505 - 21-NA1-SA,21-NA1-SB,21-NA2-SA,21-NA2-SB,21-NA3-SA,21-NA3-SB,21-NA4-SA,21-NA4-SB,21-NA5-SA,21-NA6-SA,21-NA7-SA,21-NA8-SA,21-NA9-SA - Prova 1 lab21h',3,'',13,1),(132,'2019-05-22 12:43:13.184835','30','BCM0505 - 21-NA1-SA,21-NA1-SB,21-NA2-SA,21-NA2-SB,21-NA3-SA,21-NA3-SB,21-NA4-SA,21-NA4-SB,21-NA5-SA,21-NA6-SA,21-NA7-SA,21-NA8-SA,21-NA9-SA - Prova 1 lab21h',3,'',13,1),(133,'2019-05-22 12:43:13.234396','30','BCM0505 - 21-NA1-SA,21-NA1-SB,21-NA2-SA,21-NA2-SB,21-NA3-SA,21-NA3-SB,21-NA4-SA,21-NA4-SB,21-NA5-SA,21-NA6-SA,21-NA7-SA,21-NA8-SA,21-NA9-SA - Prova 1 lab21h',3,'',13,1),(134,'2019-05-22 12:43:13.284270','30','BCM0505 - 21-NA1-SA,21-NA1-SB,21-NA2-SA,21-NA2-SB,21-NA3-SA,21-NA3-SB,21-NA4-SA,21-NA4-SB,21-NA5-SA,21-NA6-SA,21-NA7-SA,21-NA8-SA,21-NA9-SA - Prova 1 lab21h',3,'',13,1),(135,'2019-05-22 12:43:13.334680','30','BCM0505 - 21-NA1-SA,21-NA1-SB,21-NA2-SA,21-NA2-SB,21-NA3-SA,21-NA3-SB,21-NA4-SA,21-NA4-SB,21-NA5-SA,21-NA6-SA,21-NA7-SA,21-NA8-SA,21-NA9-SA - Prova 1 lab21h',3,'',13,1),(136,'2019-05-22 12:43:13.384620','30','BCM0505 - 21-NA1-SA,21-NA1-SB,21-NA2-SA,21-NA2-SB,21-NA3-SA,21-NA3-SB,21-NA4-SA,21-NA4-SB,21-NA5-SA,21-NA6-SA,21-NA7-SA,21-NA8-SA,21-NA9-SA - Prova 1 lab21h',3,'',13,1),(137,'2019-05-22 12:43:13.435239','30','BCM0505 - 21-NA1-SA,21-NA1-SB,21-NA2-SA,21-NA2-SB,21-NA3-SA,21-NA3-SB,21-NA4-SA,21-NA4-SB,21-NA5-SA,21-NA6-SA,21-NA7-SA,21-NA8-SA,21-NA9-SA - Prova 1 lab21h',3,'',13,1),(138,'2019-05-22 12:43:13.485211','30','BCM0505 - 21-NA1-SA,21-NA1-SB,21-NA2-SA,21-NA2-SB,21-NA3-SA,21-NA3-SB,21-NA4-SA,21-NA4-SB,21-NA5-SA,21-NA6-SA,21-NA7-SA,21-NA8-SA,21-NA9-SA - Prova 1 lab21h',3,'',13,1),(139,'2019-05-22 12:43:13.538301','30','BCM0505 - 21-NA1-SA,21-NA1-SB,21-NA2-SA,21-NA2-SB,21-NA3-SA,21-NA3-SB,21-NA4-SA,21-NA4-SB,21-NA5-SA,21-NA6-SA,21-NA7-SA,21-NA8-SA,21-NA9-SA - Prova 1 lab21h',3,'',13,1),(140,'2019-05-22 12:43:13.577346','30','BCM0505 - 21-NA1-SA,21-NA1-SB,21-NA2-SA,21-NA2-SB,21-NA3-SA,21-NA3-SB,21-NA4-SA,21-NA4-SB,21-NA5-SA,21-NA6-SA,21-NA7-SA,21-NA8-SA,21-NA9-SA - Prova 1 lab21h',3,'',13,1),(141,'2019-05-22 12:43:13.627637','30','BCM0505 - 21-NA1-SA,21-NA1-SB,21-NA2-SA,21-NA2-SB,21-NA3-SA,21-NA3-SB,21-NA4-SA,21-NA4-SB,21-NA5-SA,21-NA6-SA,21-NA7-SA,21-NA8-SA,21-NA9-SA - Prova 1 lab21h',3,'',13,1),(142,'2019-05-22 19:06:27.652279','53','BCM0505 - 08-DB1-SA',3,'',12,1),(143,'2019-05-22 19:06:27.682203','54','BCM0505 - 08-DB1-SB',3,'',12,1),(144,'2019-05-22 19:06:27.707490','20','BCM0505 - 08-DB12-SB',3,'',12,1),(145,'2019-05-22 19:06:27.732893','19','BCM0505 - 08-DB123-SA',3,'',12,1),(146,'2019-05-22 19:06:27.757914','57','BCM0505 - 08-DB2-SA',3,'',12,1),(147,'2019-05-22 19:06:27.783016','58','BCM0505 - 08-DB2-SB',3,'',12,1),(148,'2019-05-22 19:06:27.816616','60','BCM0505 - 08-DB3-SA',3,'',12,1),(149,'2019-05-22 19:06:27.850182','61','BCM0505 - 08-DB3-SB',3,'',12,1),(150,'2019-05-22 19:06:27.883671','185','BCM0505 - 08-DB34-SB',3,'',12,1),(151,'2019-05-22 19:06:27.917255','62','BCM0505 - 08-DB4-SA',3,'',12,1),(152,'2019-05-22 19:06:27.950728','63','BCM0505 - 08-DB4-SB',3,'',12,1),(153,'2019-05-22 19:06:27.984130','24','BCM0505 - 08-DB458-SA',3,'',12,1),(154,'2019-05-22 19:06:28.017581','65','BCM0505 - 08-DB5-SA',3,'',12,1),(155,'2019-05-22 19:06:28.051096','68','BCM0505 - 08-DB8-SA',3,'',12,1),(156,'2019-05-22 19:06:28.084646','27','BCM0505 - 10-DA1-SA',3,'',12,1),(157,'2019-05-22 19:06:28.118057','28','BCM0505 - 10-DA1-SB',3,'',12,1),(158,'2019-05-22 19:06:28.151581','10','BCM0505 - 10-DA12-SB',3,'',12,1),(159,'2019-05-22 19:06:28.233317','9','BCM0505 - 10-DA123-SA',3,'',12,1),(160,'2019-05-22 19:06:28.269066','31','BCM0505 - 10-DA2-SA',3,'',12,1),(161,'2019-05-22 19:06:28.302614','32','BCM0505 - 10-DA2-SB',3,'',12,1),(162,'2019-05-22 19:06:28.335932','35','BCM0505 - 10-DA3-SA',3,'',12,1),(163,'2019-05-22 19:06:28.369317','36','BCM0505 - 10-DA3-SB',3,'',12,1),(164,'2019-05-22 19:06:28.403773','13','BCM0505 - 10-DA34-SB',3,'',12,1),(165,'2019-05-22 19:06:28.436706','39','BCM0505 - 10-DA4-SA',3,'',12,1),(166,'2019-05-22 19:06:28.469766','40','BCM0505 - 10-DA4-SB',3,'',12,1),(167,'2019-05-22 19:06:28.503210','15','BCM0505 - 10-DA456-SA',3,'',12,1),(168,'2019-05-22 19:06:28.536679','43','BCM0505 - 10-DA5-SA',3,'',12,1),(169,'2019-05-22 19:06:28.570198','45','BCM0505 - 10-DA6-SA',3,'',12,1),(170,'2019-05-22 19:06:28.603672','47','BCM0505 - 10-DA7-SA',3,'',12,1),(171,'2019-05-22 19:06:28.637215','17','BCM0505 - 10-DA789-SA',3,'',12,1),(172,'2019-05-22 19:06:28.670678','49','BCM0505 - 10-DA8-SA',3,'',12,1),(173,'2019-05-22 19:06:28.704191','51','BCM0505 - 10-DA9-SA',3,'',12,1),(174,'2019-05-22 19:06:28.737741','55','BCM0505 - 19-NB1-SA',3,'',12,1),(175,'2019-05-22 19:06:28.771127','56','BCM0505 - 19-NB1-SB',3,'',12,1),(176,'2019-05-22 19:06:28.805705','22','BCM0505 - 19-NB12-SB',3,'',12,1),(177,'2019-05-22 19:06:28.839333','21','BCM0505 - 19-NB145-SA',3,'',12,1),(178,'2019-05-22 19:06:28.872837','59','BCM0505 - 19-NB2-SB',3,'',12,1),(179,'2019-05-22 19:06:28.906316','64','BCM0505 - 19-NB4-SA',3,'',12,1),(180,'2019-05-22 19:06:28.931479','66','BCM0505 - 19-NB5-SA',3,'',12,1),(181,'2019-05-22 19:06:28.956523','67','BCM0505 - 19-NB7-SA',3,'',12,1),(182,'2019-05-22 19:06:28.981806','25','BCM0505 - 19-NB789-SA',3,'',12,1),(183,'2019-05-22 19:06:29.006957','69','BCM0505 - 19-NB8-SA',3,'',12,1),(184,'2019-05-22 19:06:29.032087','70','BCM0505 - 19-NB9-SA',3,'',12,1),(185,'2019-05-22 19:06:29.057196','29','BCM0505 - 21-NA1-SA',3,'',12,1),(186,'2019-05-22 19:06:29.082382','30','BCM0505 - 21-NA1-SB',3,'',12,1),(187,'2019-05-22 19:06:29.107553','12','BCM0505 - 21-NA12-SB',3,'',12,1),(188,'2019-05-22 19:06:29.132721','11','BCM0505 - 21-NA123-SA',3,'',12,1),(189,'2019-05-22 19:06:29.157831','33','BCM0505 - 21-NA2-SA',3,'',12,1),(190,'2019-05-22 19:06:29.182809','34','BCM0505 - 21-NA2-SB',3,'',12,1),(191,'2019-05-22 19:06:29.208073','37','BCM0505 - 21-NA3-SA',3,'',12,1),(192,'2019-05-22 19:06:29.233242','38','BCM0505 - 21-NA3-SB',3,'',12,1),(193,'2019-05-22 19:06:29.292202','14','BCM0505 - 21-NA34-SB',3,'',12,1),(194,'2019-05-22 19:06:29.325706','41','BCM0505 - 21-NA4-SA',3,'',12,1),(195,'2019-05-22 19:06:29.359117','42','BCM0505 - 21-NA4-SB',3,'',12,1),(196,'2019-05-22 19:06:29.392705','18','BCM0505 - 21-NA789-SA',3,'',12,1),(197,'2019-05-22 19:06:29.426830','50','BCM0505 - 21-NA8-SA',3,'',12,1),(198,'2019-05-22 19:06:29.459730','52','BCM0505 - 21-NA9-SA',3,'',12,1),(199,'2019-05-22 19:06:29.493234','26','BCM0505 - DEaD-SA-SB',3,'',12,1),(200,'2019-05-22 19:06:29.526703','165','BCM0505 - NA2BCM0505',3,'',12,1),(201,'2019-05-22 19:06:29.560104','187','BCM0505 - NA4BCM0505-15SA',3,'',12,1),(202,'2019-05-22 19:06:29.593585','176','BCM0505 - PI-EaD-SA',3,'',12,1),(203,'2019-05-22 19:06:29.627085','71','BCM0505 - PI-EaD-SA-212',3,'',12,1),(204,'2019-05-22 19:06:29.660490','151','BCM0505 - PI-EaD-SA-213',3,'',12,1),(205,'2019-05-22 19:06:29.694107','179','BCM0505 - PI-EaD-SA-L404',3,'',12,1),(206,'2019-05-22 19:06:29.727538','180','BCM0505 - PI-EaD-SA-L407',3,'',12,1),(207,'2019-05-22 19:06:29.761155','181','BCM0505 - PI-EaD-SA-L409',3,'',12,1),(208,'2019-05-22 19:06:29.794511','72','BCM0505 - PI-EaD-SB',3,'',12,1),(209,'2019-05-22 19:06:29.828075','182','BCM0505 - PI-EaD-SB-A1L102',3,'',12,1),(210,'2019-05-22 19:08:15.100044','68',' -  - BCM0505-10-NA3-SB',3,'',13,1),(211,'2019-05-22 19:08:15.127453','69',' -  - BCM0505-21-NA3-SB',3,'',13,1),(212,'2019-05-22 19:08:15.152982','67',' -  - BCM0505-DB4SB-Pratic',3,'',13,1),(213,'2019-05-22 19:08:15.178902','42',' -  - P1-DA1-SB',3,'',13,1),(214,'2019-05-22 19:08:15.212478','39',' -  - P1-DB1-SB',3,'',13,1),(215,'2019-05-22 19:08:15.246071','44',' -  - P1-NA1-SB',3,'',13,1),(216,'2019-05-22 19:08:15.279530','43',' -  - P1-NB1-SB',3,'',13,1),(217,'2019-05-22 19:08:15.313015','60',' -  - P2-DA1-SB',3,'',13,1),(218,'2019-05-22 19:08:15.346213','62',' -  - P2-DB1-SB',3,'',13,1),(219,'2019-05-22 19:08:15.377782','63',' -  - P2-NA1-SB',3,'',13,1),(220,'2019-05-22 19:08:15.402867','61',' -  - P2-NB1-SB',3,'',13,1),(221,'2019-05-22 19:08:15.428010','47',' -  - Prova 1',3,'',13,1),(222,'2019-05-22 19:08:15.453180','46',' -  - Prova 1',3,'',13,1),(223,'2019-05-22 19:08:15.478275','27',' -  - Prova 1 lab08h',3,'',13,1),(224,'2019-05-22 19:08:15.503467','21',' -  - Prova 1 teo3a10h',3,'',13,1),(225,'2019-05-22 19:08:15.528649','19',' -  - Prova 1 teo3a21hquiz',3,'',13,1),(226,'2019-05-22 19:08:15.553754','13',' -  - Prova 1 teo4a17h',3,'',13,1),(227,'2019-05-22 19:08:15.578899','32',' -  - Prova 1 teoSA17h',3,'',13,1),(228,'2019-05-22 19:08:15.604060','58',' -  - Prova 2',3,'',13,1),(229,'2019-05-22 19:08:15.637541','54',' -  - Prova 2',3,'',13,1),(230,'2019-05-22 19:08:15.662736','53',' -  - Prova 2',3,'',13,1),(231,'2019-05-22 19:08:15.696238','51',' -  - Prova 2',3,'',13,1),(232,'2019-05-22 19:08:15.730932','56',' -  - Prova 2 lab19h',3,'',13,1),(233,'2019-05-22 19:08:15.764444','57',' -  - Prova 2 lab21h',3,'',13,1),(234,'2019-05-22 19:08:15.797890','66',' -  - REC-PI-2019',3,'',13,1),(235,'2019-05-26 10:23:43.890253','65',' -  - teste2',3,'',13,1),(236,'2019-05-31 22:11:36.884097','18',' -  - Simulado 2a',3,'',13,1),(237,'2019-06-01 12:51:09.381924','52','aline.lima@mj.gov.br',2,'[{\"changed\": {\"fields\": [\"last_name\"]}}]',17,1),(238,'2019-06-01 12:51:35.156476','58','ana.muta@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"last_name\"]}}]',17,1),(239,'2019-06-01 12:52:00.549952','57','luciana.milena@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"last_name\"]}}]',17,1),(240,'2019-06-01 12:52:14.690788','56','sandra.trevisan@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"last_name\"]}}]',17,1),(241,'2019-06-01 12:52:30.878745','55','steil@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"last_name\"]}}]',17,1),(242,'2019-06-01 17:37:21.270013','64','leandro.teodoro@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(243,'2019-06-08 12:20:09.750787','4','fzcoord@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(244,'2019-06-08 15:21:45.900938','5','[BCM0505]<matriz>',2,'[{\"changed\": {\"fields\": [\"discipline\"]}}]',6,1),(245,'2019-06-10 11:18:17.272940','1','fzampirolli@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(246,'2019-06-27 21:34:54.271540','65','fz1@ufabc.edu.br',3,'',17,1),(247,'2019-07-12 15:01:38.113174','77','EE - DAESTO013-17SA - P1',3,'',13,1),(248,'2019-07-19 19:35:40.811259','2','professor',2,'[{\"changed\": {\"fields\": [\"permissions\"]}}]',3,1),(249,'2019-07-19 19:54:29.008045','10','gabriel.santiago@ufabc.edu.br',3,'',17,1),(250,'2019-07-19 19:55:20.055646','45','ronaldo.prati@ufabc.edu.br',3,'',17,1),(251,'2019-07-19 19:58:28.893230','8','aline.panazio@ufabc.edu.br',3,'',17,1),(252,'2019-07-19 19:58:28.923986','9','ana.simoes@ufabc.edu.br',3,'',17,1),(253,'2019-07-19 19:58:28.957460','11','aritanan.gruber@ufabc.edu.br',3,'',17,1),(254,'2019-07-19 19:58:28.990949','15','c.sato@ufabc.edu.br',3,'',17,1),(255,'2019-07-19 19:58:29.024415','12','carla.negri@ufabc.edu.br',3,'',17,1),(256,'2019-07-19 19:58:29.057899','13','carlos.ssantos@ufabc.edu.br',3,'',17,1),(257,'2019-07-19 19:58:29.091428','18','daniel.martin@ufabc.edu.br',3,'',17,1),(258,'2019-07-19 19:58:29.124897','24','francisco.massetto@ufabc.edu.br',3,'',17,1),(259,'2019-07-19 19:58:29.158372','37','graca.marietto@ufabc.edu.br',3,'',17,1),(260,'2019-07-19 19:58:29.191891','27','itana.stiubiener@ufabc.edu.br',3,'',17,1),(261,'2019-07-19 19:58:29.226606','30','joao.gois@ufabc.edu.br',3,'',17,1),(262,'2019-07-19 19:58:29.251755','28','joao.kleinschmidt@ufabc.edu.br',3,'',17,1),(263,'2019-07-19 19:58:29.276894','32','juliana.braga@ufabc.edu.br',3,'',17,1),(264,'2019-07-19 19:58:29.302001','26','manic.gordana@ufabc.edu.br',3,'',17,1),(265,'2019-07-19 19:58:29.327188','43','paulo.joia@ufabc.edu.br',3,'',17,1),(266,'2019-07-19 19:58:29.352319','19','santana.martins@ufabc.edu.br',3,'',17,1),(267,'2019-07-19 19:58:29.377456','46','saul.leite@ufabc.edu.br',3,'',17,1),(268,'2019-07-19 19:58:29.402610','47','thiago.covoes@ufabc.edu.br',3,'',17,1),(269,'2019-07-19 19:58:29.427723','50','wagner.tanaka@ufabc.edu.br',3,'',17,1),(270,'2019-07-19 19:59:43.589006','16','cristiane.salum@ufabc.edu.br',3,'',17,1),(271,'2019-07-19 19:59:43.623621','21','elizabeth.teodorov@ufabc.edu.br',3,'',17,1),(272,'2019-07-19 19:59:43.657088','38','mario.gazziro@ufabc.edu.br',3,'',17,1),(273,'2019-07-19 19:59:43.690591','44','ricardo.suyama@ufabc.edu.br',3,'',17,1),(274,'2019-07-19 20:00:18.416246','35','magda.miyashiro@ufabc.edu.br',3,'',17,1),(275,'2019-07-19 20:00:18.448048','29','marcelo.josko@ufabc.edu.br',3,'',17,1),(276,'2019-07-19 20:00:18.481526','40','ribeiro.pinheiro@ufabc.edu.br',3,'',17,1),(277,'2019-07-30 19:09:58.300978','79',' -  - Prova 1 SL108',3,'',13,1),(278,'2019-07-30 19:09:58.335992','80',' -  - Prova 1 SL212',3,'',13,1),(279,'2019-07-30 19:45:59.799132','7223','-',3,'',16,1),(280,'2019-07-30 19:48:17.157291','12682','11122215-Leandro Teodoro-teoolt.bio@gmail.com',2,'[{\"changed\": {\"fields\": [\"student_ID\", \"student_email\"]}}]',16,1),(281,'2019-07-30 19:48:25.564468','12681','31201910037-Artur Teles Barbosa-arturtelesbarbosa@gmail.com',2,'[{\"changed\": {\"fields\": [\"student_ID\", \"student_email\"]}}]',16,1),(282,'2019-07-30 19:57:08.316176','13642','111; nome 111; ufabc.tomioka@gmail.com',2,'[{\"changed\": {\"fields\": [\"student_name\", \"student_ID\"]}}]',16,1),(283,'2019-07-30 19:57:20.325771','13643','222; nome 222; ufabc.tomioka@gmail.com',2,'[{\"changed\": {\"fields\": [\"student_name\", \"student_ID\"]}}]',16,1),(284,'2019-07-30 19:59:29.820344','13642','111; 111 nome; ufabc.tomioka@gmail.com',2,'[{\"changed\": {\"fields\": [\"student_name\"]}}]',16,1),(285,'2019-07-30 19:59:48.143850','13644','111; 111 nome; ufabc.tomioka@gmail.com',2,'[{\"changed\": {\"fields\": [\"student_name\"]}}]',16,1),(286,'2019-07-30 20:00:17.180130','13643','222; 222 nome; ufabc.tomioka@gmail.com',2,'[{\"changed\": {\"fields\": [\"student_name\"]}}]',16,1),(287,'2019-07-30 20:00:25.017534','13645','222; 222 nome; ufabc.tomioka@gmail.com',2,'[{\"changed\": {\"fields\": [\"student_name\"]}}]',16,1),(288,'2019-07-30 20:00:34.679186','13645','222; 222 nome; ufabc.tomioka@gmail.com',2,'[]',16,1),(289,'2019-07-30 20:01:23.332128','13642','111; 111 nome; ufabc.tomioka@gmail.com',3,'',16,1),(290,'2019-07-30 20:01:23.356365','13643','222; 222 nome; ufabc.tomioka@gmail.com',3,'',16,1),(291,'2019-07-30 20:02:06.322293','13644','01; 01 nome; ufabc.tomioka@gmail.com',2,'[{\"changed\": {\"fields\": [\"student_name\", \"student_ID\"]}}]',16,1),(292,'2019-07-30 20:02:15.206635','13645','02; 02 nome; ufabc.tomioka@gmail.com',2,'[{\"changed\": {\"fields\": [\"student_name\", \"student_ID\"]}}]',16,1),(293,'2019-08-01 11:17:30.835134','1','ClassroomExam object (1)',1,'[{\"added\": {}}]',18,1),(294,'2019-08-02 22:39:33.118452','64','[BIJ0207]<SistemasEnergia>',2,'[{\"changed\": {\"fields\": [\"topic_text\"]}}]',6,1),(295,'2019-08-16 20:03:04.869184','17',' -  - EP2019 - Sim 1',3,'',13,1),(296,'2019-08-16 20:03:04.906468','71',' -  - Simulado 1 teste2',3,'',13,1),(297,'2019-08-16 20:03:04.940817','50',' -  - test',3,'',13,1),(298,'2019-08-16 20:03:04.974817','75',' -  - test-coord',3,'',13,1),(299,'2019-08-16 20:03:05.008217','72',' -  - test2',3,'',13,1),(300,'2019-08-16 20:03:05.041651','83',' -  - teste4',3,'',13,1),(301,'2019-09-02 15:23:07.181675','4','fzcoord@ufabc.edu.br',3,'',17,1),(302,'2019-09-02 15:23:07.183747','3','fzprof@ufabc.edu.br',3,'',17,1),(303,'2019-09-02 20:49:29.124744','66','fzcoord@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(304,'2019-09-02 20:49:38.734116','65','fzprof@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(305,'2019-09-10 16:57:09.324219','60','guiou.kobayashi@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"email\"]}}]',17,1),(306,'2019-10-08 12:07:17.669713','67','g.aldeia@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(307,'2019-10-09 20:22:16.478531','68','renato.coutinho@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(308,'2019-10-19 14:41:43.753581','23','Prova 1 teo3a21h',3,'',13,1),(309,'2019-10-19 14:52:45.367296','97','P1-2019.Q3',2,'[{\"changed\": {\"fields\": [\"classrooms\"]}}]',13,1),(310,'2019-10-19 14:54:46.936902','76','P1 EaD - 19.2',2,'[{\"changed\": {\"fields\": [\"classrooms\"]}}]',13,1),(311,'2019-10-19 14:58:43.000524','49','Prova 2 teo3a21hquiz',2,'[{\"changed\": {\"fields\": [\"classrooms\"]}}]',13,1),(312,'2019-10-22 18:01:25.674736','203','EE - teste2alunos',2,'[{\"changed\": {\"fields\": [\"students\"]}}]',12,1),(313,'2019-10-23 20:45:17.758291','100','P1',3,'',13,1),(314,'2019-10-23 20:45:17.792677','99','P1',3,'',13,1),(315,'2019-10-31 13:56:05.038064','38','Prova 1',3,'',13,1),(316,'2019-11-22 12:04:58.960241','72','wcosta@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(317,'2019-11-22 12:08:49.322189','73','aldeia@ufabc.edu.br',3,'',17,1),(318,'2020-02-14 12:27:08.950536','114','EP-sel - A101-0',3,'',12,1),(319,'2020-02-14 12:27:08.961045','115','EP-sel - A102-0',3,'',12,1),(320,'2020-02-14 12:27:08.969801','116','EP-sel - A103-0',3,'',12,1),(321,'2020-02-14 12:27:08.978110','117','EP-sel - A104-0',3,'',12,1),(322,'2020-02-14 12:27:08.985993','118','EP-sel - A105-0',3,'',12,1),(323,'2020-02-14 12:27:08.993717','119','EP-sel - A106-0',3,'',12,1),(324,'2020-02-14 12:27:09.001642','120','EP-sel - A107-0',3,'',12,1),(325,'2020-02-14 12:27:09.009000','121','EP-sel - A108-0',3,'',12,1),(326,'2020-02-14 12:27:09.016316','122','EP-sel - A109-0',3,'',12,1),(327,'2020-02-14 12:27:09.023805','123','EP-sel - A110-0',3,'',12,1),(328,'2020-02-14 12:27:09.031351','292','EP-sel - A111-0',3,'',12,1),(329,'2020-02-14 12:27:09.038943','293','EP-sel - A112-0',3,'',12,1),(330,'2020-02-14 12:27:09.046650','124','EP-sel - A113-0',3,'',12,1),(331,'2020-02-14 12:27:09.054271','125','EP-sel - A114-0',3,'',12,1),(332,'2020-02-14 12:27:09.062007','126','EP-sel - A211-0',3,'',12,1),(333,'2020-02-14 12:27:09.069472','127','EP-sel - A212-0',3,'',12,1),(334,'2020-02-14 12:27:09.077157','128','EP-sel - L407-2',3,'',12,1),(335,'2020-02-14 12:27:09.084702','113','EP-sel - S006-0',3,'',12,1),(336,'2020-02-14 12:27:09.092292','291','EP-sel - S008-0',3,'',12,1),(337,'2020-02-14 12:27:09.099694','129','EP-sel - S204-0',3,'',12,1),(338,'2020-02-14 12:27:09.107377','130','EP-sel - S205-0',3,'',12,1),(339,'2020-02-14 12:27:09.115106','131','EP-sel - S206-0',3,'',12,1),(340,'2020-02-14 12:27:09.122898','132','EP-sel - S207-0',3,'',12,1),(341,'2020-02-14 12:27:09.130509','133','EP-sel - S208-0',3,'',12,1),(342,'2020-02-14 12:27:09.138006','134','EP-sel - S209-0',3,'',12,1),(343,'2020-02-14 12:27:09.145688','135','EP-sel - S210-0',3,'',12,1),(344,'2020-02-14 12:27:09.153272','136','EP-sel - S213-0',3,'',12,1),(345,'2020-02-14 12:27:09.160929','137','EP-sel - S214-0',3,'',12,1),(346,'2020-02-14 12:27:09.168587','138','EP-sel - S301-1',3,'',12,1),(347,'2020-02-14 12:27:09.176068','139','EP-sel - S301-2',3,'',12,1),(348,'2020-02-14 12:27:09.183618','140','EP-sel - S302-1',3,'',12,1),(349,'2020-02-14 12:27:09.191388','141','EP-sel - S302-2',3,'',12,1),(350,'2020-02-14 12:27:09.199159','142','EP-sel - S305-1',3,'',12,1),(351,'2020-02-14 12:27:09.207055','143','EP-sel - S305-2',3,'',12,1),(352,'2020-02-14 12:27:09.214818','144','EP-sel - S306-1',3,'',12,1),(353,'2020-02-14 12:27:09.222337','145','EP-sel - S307-1',3,'',12,1),(354,'2020-02-14 12:27:09.230052','146','EP-sel - S307-2',3,'',12,1),(355,'2020-02-14 12:27:09.239434','147','EP-sel - S308-1',3,'',12,1),(356,'2020-02-14 12:27:09.248496','148','EP-sel - S311-1',3,'',12,1),(357,'2020-02-14 12:27:09.256273','149','EP-sel - S311-2',3,'',12,1),(358,'2020-02-14 15:20:56.835545','17','[]<6 - Contra Inteligência>',3,'',6,1),(359,'2020-02-14 15:29:58.680723','1','ClassroomExam object (1)',1,'[{\"added\": {}}]',18,1),(360,'2020-02-14 15:31:15.026413','90','CE-exame teste',3,'',13,1),(361,'2020-02-14 15:31:15.030474','95','Exam Test',3,'',13,1),(362,'2020-02-14 15:31:15.033246','14','RECUPERAÇÃO',3,'',13,1),(363,'2020-02-14 15:31:15.035080','96','teste',3,'',13,1),(364,'2020-02-14 15:31:15.037918','107','teste-vcpi',3,'',13,1),(365,'2020-02-18 17:43:10.913004','75','heitor.rodrigues@aluno.ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"username\", \"email\"]}}]',17,1),(366,'2020-02-18 17:43:32.177026','75','heitor.rodrigues@aluno.ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(367,'2020-02-18 17:57:08.474604','126','exame - heitor',3,'',13,1),(368,'2020-02-19 23:29:51.964594','77','joao.gois@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"first_name\"]}}]',17,1),(369,'2020-02-19 23:37:13.030548','64','BCM0505-15-SBC',3,'',13,1),(370,'2020-02-19 23:37:13.036494','73','P1 EaD',3,'',13,1),(371,'2020-02-19 23:37:13.040261','76','P1 EaD - 19.2',3,'',13,1),(372,'2020-02-19 23:37:13.044066','74','P2 EaD',3,'',13,1),(373,'2020-02-19 23:37:13.047514','20','Prova 1 2020',3,'',13,1),(374,'2020-02-19 23:37:13.050859','102','PI-EAD-2019-Q3- P1',3,'',13,1),(375,'2020-02-19 23:37:13.054300','102','PI-EAD-2019-Q3- P1',3,'',13,1),(376,'2020-02-19 23:41:02.687822','55','P2-B3B4-SB',3,'',13,1),(377,'2020-02-19 23:41:02.693392','36','Prova 1 lab10.b',3,'',13,1),(378,'2020-02-19 23:41:02.697752','15','Prova 1 quiz',3,'',13,1),(379,'2020-02-19 23:41:02.701769','49','Prova 2 teo3a21hquiz',3,'',13,1),(380,'2020-02-19 23:41:02.705769','123','teste',3,'',13,1),(381,'2020-02-19 23:41:02.710608','127','exame-test-heitor',3,'',13,1),(382,'2020-03-07 11:20:38.550073','23','fernando.teubl@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"first_name\", \"last_name\"]}}]',17,1),(383,'2020-03-10 22:45:37.126735','78','edson.iriarte@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(384,'2020-03-12 16:35:20.278694','79','denise.goya@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(385,'2020-03-19 20:58:30.544149','80','ugo.ibusuki@ufabc.edu.br',2,'[{\"changed\": {\"fields\": [\"groups\"]}}]',17,1),(386,'2020-04-15 17:02:11.947711','21075','11020215; Mauro Mascarenhas; mauro.mascarenhas@aluno.ufabc.edu.br',1,'[{\"added\": {}}]',16,1);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (17,'account','user'),(1,'admin','logentry'),(3,'auth','group'),(2,'auth','permission'),(4,'contenttypes','contenttype'),(12,'course','classroom'),(9,'course','course'),(11,'course','discipline'),(10,'course','institute'),(18,'exam','classroomexam'),(13,'exam','exam'),(14,'exam','studentexam'),(15,'exam','studentexamquestion'),(5,'sessions','session'),(16,'student','student'),(8,'topic','answer'),(7,'topic','question'),(6,'topic','topic');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2019-01-14 18:01:58.050393'),(2,'contenttypes','0002_remove_content_type_name','2019-01-14 18:01:58.807552'),(3,'auth','0001_initial','2019-01-14 18:02:01.560553'),(4,'auth','0002_alter_permission_name_max_length','2019-01-14 18:02:01.644818'),(5,'auth','0003_alter_user_email_max_length','2019-01-14 18:02:01.674140'),(6,'auth','0004_alter_user_username_opts','2019-01-14 18:02:01.708541'),(7,'auth','0005_alter_user_last_login_null','2019-01-14 18:02:01.741010'),(8,'auth','0006_require_contenttypes_0002','2019-01-14 18:02:01.770593'),(9,'auth','0007_alter_validators_add_error_messages','2019-01-14 18:02:01.799339'),(10,'auth','0008_alter_user_username_max_length','2019-01-14 18:02:01.833219'),(11,'auth','0009_alter_user_last_name_max_length','2019-01-14 18:02:01.866606'),(12,'account','0001_initial','2019-01-14 18:02:04.996024'),(13,'admin','0001_initial','2019-01-14 18:02:06.435302'),(14,'admin','0002_logentry_remove_auto_add','2019-01-14 18:02:06.475307'),(15,'admin','0003_logentry_add_action_flag_choices','2019-01-14 18:02:06.510048'),(16,'student','0001_initial','2019-01-14 18:02:06.748331'),(17,'course','0001_initial','2019-01-14 18:02:23.528385'),(18,'topic','0001_initial','2019-01-14 18:02:27.206037'),(19,'exam','0001_initial','2019-01-14 18:02:34.008320'),(20,'sessions','0001_initial','2019-01-14 18:02:34.430247'),(21,'exam','0002_auto_20190516_1209','2019-05-16 15:10:06.040410'),(22,'exam','0003_auto_20190516_1212','2019-05-16 15:13:03.506141'),(23,'exam','0004_auto_20190516_1218','2019-05-16 15:18:27.574141'),(24,'exam','0005_auto_20190516_1221','2019-05-16 15:21:24.027940'),(25,'exam','0006_auto_20190516_1225','2019-05-16 15:25:54.076721'),(26,'exam','0007_auto_20190516_1701','2019-05-16 20:01:41.733709'),(27,'auth','0010_alter_group_name_max_length','2019-09-02 13:17:15.440985'),(28,'auth','0011_update_proxy_permissions','2019-09-02 13:17:15.486559'),(29,'account','0001_squashed_0001_initial','2019-09-02 13:17:15.489816');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('0qdusfl3bg8se0ssn7ixz1pj808roojw','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-05-01 00:15:36.826273'),('2eld9vg7ar9565jsvgxokk4dsmpo8478','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 06:22:24.131959'),('3pwwokzdzotoijxesawmw6zzmqzufn12','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 11:01:14.219086'),('4f4ja6hko86kycky58we74rro7it1lmi','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 10:39:31.279946'),('6494g1l7hj3ijeoa9qu46gv9ixi54peg','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 22:42:53.050436'),('66rwh545yxfcpz2eto49817rcl8au58h','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 06:24:34.751832'),('6mpfv6nywgki6tbfw0rl5t8k9fb5i4x7','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 07:55:32.643158'),('8flkchkuynat2k7th7w34lhy085uy30l','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 11:07:15.202204'),('99mv3b8htcetphozdv9lg7hfru86e54v','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-05-01 01:37:39.421130'),('9iqy19dbsf6bdqlhqn8r81ijjyg38n6k','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 10:52:31.216588'),('ae0pgfrly8loxqbq4otzi9bvra517uc3','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-05-01 04:38:15.340088'),('akk4a3ljmld0m9bunh0hgtec71wkxn2k','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 20:29:38.910311'),('cyfe7xttkb6g1jio932luut4awd9ycxr','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 06:57:37.280133'),('enfq747rx8utd0anrh9w9ht1afvfpqvv','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 11:07:13.438968'),('f1uowkjxqbzo5qeypetyw82iu1a41hgd','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 23:04:40.125993'),('f1v4idj1gezl7ntg1rt6yrb9w39v0nx2','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 20:10:12.768550'),('f7ms3f0ugrz013b0hy98g40h66wpcd5e','YjkzM2VkYWNlODQxZDQ1NTEzODgzYjg1Yjc3MTdlYzFhNzFiYzQxNTp7Im51bV92aXNpdHMiOjIsIl9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjMDhmNDM2N2NhYmRhMzBlYTZhNzBjZDdkODg4NmUyMmU4YzkzYWRmIn0=','2020-04-30 12:13:17.546780'),('fo1gp9mi3hf5vpxnntvlotpaz8snyofo','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 06:35:01.364718'),('fz75wpoqjglm9pb8x2q4ifvcca8osgcb','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 07:26:11.360759'),('gk3idnhzlok9joyhslzxruwqukkwsb1w','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 06:34:52.100185'),('gmohd7d4bs71xseuddrtfplboavm3q8t','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 13:57:36.234229'),('habcqhiykk5ou09x5hmk3uz7l8c451be','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-05-01 04:08:42.773520'),('p1ux86fdnypq24ihf5vnsjklz3640pu8','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 23:49:50.384510'),('rzpoutd9nl4t27c46f8mgy2obj943ckv','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-05-01 02:43:23.972926'),('tuducftddg8w9jih39rlymffx4xlke30','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 17:10:44.834208'),('usjwku07fbny4wg8cegs3q9bpw1jeb5q','MmUzN2EzYWJjY2VlOTkzY2M1NzgxOTMwNGFjM2Q2MTE2ZWM1NWYzMDp7Im51bV92aXNpdHMiOjF9','2020-04-30 16:08:52.113239');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `exam_classroomexam`
--

DROP TABLE IF EXISTS `exam_classroomexam`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `exam_classroomexam` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `grade` varchar(20) NOT NULL,
  `exam_id` int(11) DEFAULT NULL,
  `classroom_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `exam_id` (`exam_id`),
  KEY `classroom_id` (`classroom_id`),
  CONSTRAINT `exam_classroomexam_ibfk_1` FOREIGN KEY (`exam_id`) REFERENCES `exam_exam` (`id`),
  CONSTRAINT `exam_classroomexam_ibfk_2` FOREIGN KEY (`classroom_id`) REFERENCES `course_classroom` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `exam_classroomexam`
--

LOCK TABLES `exam_classroomexam` WRITE;
/*!40000 ALTER TABLE `exam_classroomexam` DISABLE KEYS */;
/*!40000 ALTER TABLE `exam_classroomexam` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `exam_exam`
--

DROP TABLE IF EXISTS `exam_exam`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `exam_exam` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `exam_name` varchar(20) DEFAULT NULL,
  `exam_number_of_questions_var1` varchar(3) NOT NULL,
  `exam_number_of_questions_var2` varchar(3) NOT NULL,
  `exam_number_of_questions_var3` varchar(3) NOT NULL,
  `exam_number_of_questions_var4` varchar(3) NOT NULL,
  `exam_number_of_questions_var5` varchar(3) NOT NULL,
  `exam_number_of_anwsers_question` varchar(2) NOT NULL,
  `exam_number_of_questions_text` varchar(3) NOT NULL,
  `exam_variations` varchar(3) NOT NULL,
  `exam_max_questions_square` varchar(2) NOT NULL,
  `exam_max_squares_horizontal` varchar(2) NOT NULL,
  `exam_stylesheet` varchar(3) NOT NULL,
  `exam_print` varchar(4) NOT NULL,
  `exam_print_eco` varchar(3) NOT NULL,
  `exam_student_feedback` varchar(3) NOT NULL,
  `exam_room` varchar(20) DEFAULT NULL,
  `exam_hour` datetime(6) NOT NULL,
  `exam_term` varchar(2) NOT NULL,
  `exam_instructions` longtext NOT NULL,
  `exam_who_created_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `exam_exam_exam_who_created_id_de138c84_fk_account_user_id` (`exam_who_created_id`),
  CONSTRAINT `exam_exam_exam_who_created_id_de138c84_fk_account_user_id` FOREIGN KEY (`exam_who_created_id`) REFERENCES `account_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=139 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `exam_exam`
--

LOCK TABLES `exam_exam` WRITE;
/*!40000 ALTER TABLE `exam_exam` DISABLE KEYS */;
INSERT INTO `exam_exam` VALUES (3,'teste','15','0','0','0','0','4','0','2','15','2','Hor','both','yes','no',NULL,'2019-01-24 02:00:00.000000','t1','\\item desligar o celular',2),(16,'Seleção','50','0','0','0','0','5','0','1','25','4','Hor','answ','yes','no',NULL,'2020-02-16 03:00:00.000000','t1','\\item Confira o número do seu RG no campo ID/RA (Letras e outros caracteres foram suprimidos);\r\n\\item Marque as respostas neste CARTÃO-RESPOSTA, no campo correspondente a cada questão;\r\n\\item O CARTÃO-RESPOSTA é o único documento que será utilizado para a correção de sua prova. Não amasse, não dobre nem rasure\r\neste CARTÃO-RESPOSTA. As marcações no CARTÃO-RESPOSTA só podem ser feitas com caneta esferográfica de tinta preta. Não é\r\npermitido o uso de lápis e/ou lapiseira (grafite);\r\n\\item Em nenhuma hipótese haverá substituição deste CARTÃO-RESPOSTA por erro de preenchimento do(a) candidato(a);\r\n\\item Não é permitida marca identificadora nesta parte do CARTÃO-RESPOSTA;\r\n\\item A marcação dos círculos correspondentes às respostas deve ser feita PREENCHENDO TODO O ESPAÇO COMPREENDIDO PELO CÍRCULO e NÃO PODE PINTAR FORA DO CÍRCULO, PINTAR DE FORMA CONTÍNUA E DENSA. A leitora ótica é sensível a marcas escuras; portanto, preencha os campos de marcação completamente, sem deixar espaços claros;\r\n\\item O que NÃO pode fazer: passar branquinho -\r\nex.1 \\includegraphics[scale=0.25]{./figs/error_01} - \r\nex.2 \\includegraphics[scale=0.12]{./figs/error_02}; desenhar fora do círculo - \r\nex.3 \\includegraphics[scale=0.15]{./figs/error_03}; usar a parte do gabarito acima como rascunho.',55),(33,'Nivelamento','80','0','0','0','0','3','0','1','10','4','Ver','answ','yes','no',NULL,'2019-03-14 03:00:00.000000','t1','\\item desligar o celular  \r\n\\item o que o aluno NÃO pode fazer: passar branquinho -\r\nex.1 \\includegraphics[scale=0.25]{./figs/error_01} - \r\nex.2 \\includegraphics[scale=0.12]{./figs/error_02}; desenhar fora do círculo - \r\nex.3 \\includegraphics[scale=0.15]{./figs/error_03}',57),(34,'Nivelamento','250','0','0','0','0','3','0','2','50','5','Ver','answ','yes','no',NULL,'2019-03-14 03:00:00.000000','t1','',58),(37,'Nivelamento - Inglês','250','0','0','0','0','3','0','1','50','5','Ver','answ','yes','no',NULL,'2019-03-19 03:00:00.000000','t1','\\item desligar o celular  \r\n\\item o que o aluno NÃO pode fazer: passar branquinho -\r\nex.1 \\includegraphics[scale=0.25]{./figs/error_01} - \r\nex.2 \\includegraphics[scale=0.12]{./figs/error_02}; desenhar fora do círculo - \r\nex.3 \\includegraphics[scale=0.15]{./figs/error_03}',58),(48,'Nivel. - Espanhol','175','0','0','0','0','4','0','2','35','5','Ver','answ','yes','no',NULL,'2019-03-22 03:00:00.000000','t1','\\item desligar o celular  \r\n\\item o que o aluno NÃO pode fazer: passar branquinho -\r\nex.1 \\includegraphics[scale=0.25]{./figs/error_01} - \r\nex.2 \\includegraphics[scale=0.12]{./figs/error_02}; desenhar fora do círculo - \r\nex.3 \\includegraphics[scale=0.15]{./figs/error_03}',58),(52,'Prova 2','5','5','0','0','0','5','1','55','5','4','Ver','both','yes','no',NULL,'2019-04-16 03:00:00.000000','t1','\\item Desligar o celular;\r\n\\item Assinar TODAS as folhas de prova;\r\n\\item O que NÃO pode fazer: passar branquinho -\r\nex.1 \\includegraphics[scale=0.25]{./figs/error_01} - \r\nex.2 \\includegraphics[scale=0.12]{./figs/error_02}; desenhar fora do círculo - \r\nex.3 \\includegraphics[scale=0.15]{./figs/error_03}; usar a parte do gabarito acima como rascunho.',1),(59,'Recuperação','6','3','1','0','0','5','1','5','5','4','Ver','both','yes','yes',NULL,'2019-05-08 03:00:00.000000','t1','\\item Desligar o celular;\r\n\\item Assinar TODAS as folhas de prova;\r\n\\item O que NÃO pode fazer: passar branquinho -\r\nex.1 \\includegraphics[scale=0.25]{./figs/error_01} - \r\nex.2 \\includegraphics[scale=0.12]{./figs/error_02}; desenhar fora do círculo - \r\nex.3 \\includegraphics[scale=0.15]{./figs/error_03}; usar a parte do gabarito acima como rascunho.',1),(81,'Prova 1','0','0','0','0','0','5','10','50','10','5','Hor','ques','yes','no',NULL,'2019-10-23 03:00:00.000000','t3','Utilizar apenas lápis, caneta, borracha e calculadora científica. As correções serão validadas com as devidas resoluções.',63),(82,'Niv_Ing_Mobilidade','250','0','0','0','0','3','0','1','50','5','Ver','answ','yes','no',NULL,'2019-08-01 03:00:00.000000','t2','\\item o que o aluno NÃO pode fazer: passar branquinho -\r\nex.1 \\includegraphics[scale=0.25]{./figs/error_01} - \r\nex.2 \\includegraphics[scale=0.12]{./figs/error_02}; desenhar fora do círculo - \r\nex.3 \\includegraphics[scale=0.15]{./figs/error_03}',58),(84,'Avaliação 1','10','0','0','0','0','5','0','10','27','1','Hor','both','yes','no',NULL,'2019-08-07 03:00:00.000000','t2','\\item Assinale a alternativa MAIS correta (apenas uma), exceto em caso de instruções em contrário.\r\n\\item  Prova SEM consulta de qualquer espécie.\r\n\\item  A interpretação da questão faz parte da prova.\r\n\\item  A cola, ou a sua tentativa, será punida com conceito F, incluindo quem passar a cola.',62),(85,'nivelamento horizont','250','0','0','0','0','3','0','2','25','2','Hor','answ','yes','no',NULL,'2019-08-07 03:00:00.000000','t1','\\item desligar o celular',58),(87,'sn','10','0','0','0','0','4','0','10','10','1','Hor','both','yes','no',NULL,'2019-08-23 03:00:00.000000','t1','\\item Veja Mensagem do Tidia no Tel\\~ao',48),(88,'sn','10','0','0','0','0','4','0','5','10','1','Hor','both','yes','no',NULL,'2019-08-23 03:00:00.000000','t1','\\item desligar o celular',48),(89,'Recuperação','0','0','0','0','0','5','5','100','10','1','Hor','ques','yes','no',NULL,'2019-09-03 03:00:00.000000','t2','\\item desligar o celular. Usar apenas lápis, caneta, borracha e calculadora científica.',63),(91,'Recuperação','0','0','0','0','0','5','5','10','10','1','Hor','ques','yes','no',NULL,'2019-09-03 03:00:00.000000','t2','',63),(92,'Sub P1','0','0','0','0','0','5','3','20','10','1','Hor','ques','yes','no',NULL,'2019-08-27 03:00:00.000000','t1','\\item desligar o celular',63),(93,'Sub P2','0','0','0','0','0','5','5','20','10','1','Hor','ques','yes','no',NULL,'2019-12-11 03:00:00.000000','t3','\\item desligar o celular',63),(94,'Sub P2','3','0','0','0','0','5','0','20','10','1','Hor','both','yes','no',NULL,'2019-08-29 03:00:00.000000','t2','\\item desligar o celular',63),(98,'Exame 1','3','0','0','0','0','5','0','2','10','1','Hor','both','yes','no',NULL,'2019-10-09 03:00:00.000000','t1','\\item desligar o celular',68),(103,'Prova 1','18','0','0','0','0','5','0','10','20','1','Hor','both','yes','no',NULL,'2019-11-01 03:00:00.000000','t3','\\item Assinale a alternativa correta (apenas uma), exceto em caso de instruções em contrário.\r\n\\item Prova SEM consulta de qualquer espécie.\r\n\\item A interpretação da questão faz parte da prova.\r\n\\item A cola, ou a sua tentativa, será punida com conceito F, incluindo quem passar a cola.',60),(104,'Prova P1','18','0','0','0','0','5','0','80','20','1','Hor','both','yes','no',NULL,'2019-11-01 03:00:00.000000','t3','1. Assinale a alternativa correta (apenas uma), exceto em caso de instruções em contrário.\r\n2. Prova SEM consulta de qualquer espécie.\r\n3. A interpretação da questão faz parte da prova.\r\n4. A cola, ou a sua tentativa, será punida com conceito F, incluindo quem passar a cola.',60),(105,'P1','12','0','0','0','0','5','0','40','4','5','Hor','both','yes','no',NULL,'2019-11-05 03:00:00.000000','t3','\\item desligar o celular. Usar somente: caneta, lápis e borracha. Não rasurar a área de resposta.',63),(106,'P1','12','0','0','0','0','5','0','10','4','5','Hor','both','yes','no',NULL,'2019-11-05 03:00:00.000000','t1','\\item desligar o celular',63),(108,'P2','13','0','0','0','0','5','0','60','5','5','Hor','both','yes','no',NULL,'2019-12-03 03:00:00.000000','t3','\\item desligar o celular',63),(109,'P2','5','0','0','0','0','5','0','50','5','5','Hor','both','yes','no',NULL,'2019-12-04 03:00:00.000000','t3','\\item Desligar o celular',63),(110,'P2','0','0','0','0','0','5','5','20','10','1','Hor','ques','yes','no',NULL,'2019-12-11 03:00:00.000000','t3','\\item desligar o celular',63),(111,'Sub P1','0','0','0','0','0','5','5','10','10','1','Hor','ques','yes','no',NULL,'2019-12-06 03:00:00.000000','t3','\\item desligar o celular',63),(112,'Sub P1','0','0','0','0','0','5','5','10','10','1','Hor','ques','yes','no',NULL,'2019-12-06 03:00:00.000000','t3','\\item desligar o celular',63),(113,'Prova P2','18','0','0','0','0','5','0','80','18','1','Hor','both','yes','no',NULL,'2019-12-10 03:00:00.000000','t3','1. Assinale a alternativa correta (apenas uma), exceto em caso de instruções em contrario. 2. Prova SEM consulta de qualquer especie. 3. A interpretação da questão faz parte da prova. 4. A cola, ou a sua tentativa, será punida com conceito F, incluindo quem passar a cola',60),(115,'Sub P2','20','0','0','0','0','5','0','2','10','1','Hor','answ','yes','no',NULL,'2019-12-10 05:00:00.000000','t1','\\item desligar o celular',63),(116,'Sub P2','20','0','0','0','0','5','0','2','10','1','Hor','answ','yes','no',NULL,'2019-12-10 05:00:00.000000','t1','\\item desligar o celular',63),(117,'Sub P2','0','0','0','0','0','5','5','20','10','1','Hor','ques','yes','no',NULL,'2019-12-11 03:00:00.000000','t3','\\item desligar o celular',63),(118,'Exame de Recuperação','0','0','0','0','0','5','5','10','5','5','Hor','ques','yes','no',NULL,'2019-12-13 03:00:00.000000','t3','\\item desligar o celular',63),(119,'Subs','18','0','0','0','0','5','0','12','18','1','Hor','both','yes','no',NULL,'2019-12-13 03:00:00.000000','t3','1. Assinale a alternativa correta (apenas uma), exceto em caso de instruções em contrario. 2. Prova SEM consulta de qualquer especie. 3. A interpretação da questão faz parte da prova. 4. A cola, ou a sua tentativa, será punida com conceito F, incluindo quem passar a cola',60),(120,'Recup','18','0','0','0','0','5','0','80','18','1','Hor','both','yes','no',NULL,'2019-12-18 03:00:00.000000','t3','1. Assinale a alternativa correta (apenas uma), exceto em caso de instruções em contrario. 2. Prova SEM consulta de qualquer especie. 3. A interpretação da questão faz parte da prova. 4. A cola, ou a sua tentativa, será punida com conceito F, incluindo quem passar a cola',60),(125,'Processo Seletivo EP','50','0','0','0','0','5','0','1','25','2','Hor','answ','yes','no',NULL,'2020-02-16 03:00:00.000000','t1','\\item Confira o número de seu RG em ID/RA;\r\n\\item Marque as respostas neste CARTÃO-RESPOSTA, no campo correspondente a cada questão;\r\n\\item O CARTÃO-RESPOSTA é o único documento que será utilizado para a correção de sua prova. Não AMASSE, não DOBRE e nem RASURE este CARTÃO-RESPOSTA. As marcações no CARTÃO-RESPOSTA só podem ser feitas com caneta esferográfica de tinta preta. A utilização de outros utensílios (lapiseiras, lápis) e de canetas de outras colorações de tinta (azul, vermelho e afins), DESCLASSIFICAM AUTOMATICAMENTE o candidato;\r\n\\item Em nenhuma hipótese haverá substituição deste CARTÃO-RESPOSTA por erro de preenchimento do candidato;\r\n\\item Não é permitida marca identificadora nesta parte do CARTÃO-RESPOSTA;\r\n \\item A marcação dos círculos correspondentes às respostas deve ser feita PREENCHENDO TODO O ESPAÇO COMPREENDIDO PELO CÍRCULO. Marcações feitas fora do espaço impedirão a leitura da resposta. O preenchimento deve ser realizado de forma CONTÍNUA E DENSA.',64),(128,'Exame1 PI 2020','0','0','0','0','0','5','3','3','10','1','Hor','ques','no','no',NULL,'2020-03-05 03:00:00.000000','t1','\\item \\textbf{Pesos Orientativos para o conceito P1:}  questão 1 (peso 3); questão 2 (peso 5); questão 3 (peso 2);\r\n\\item No Moodle tem uma ÚNICA atividade para as questões 1 e 2, que será aberta no início da aula e será  fechada 10 minutos antes do término; Devolver a(s) folha(s) de questões com a sua assinatura a tinta;\r\n\\item Todos os programas devem ser escritos na linguagem de programação Portugol e convertidos para Java;\r\n\\item Somente serão corrigidos arquivos na linguagem definida, legíveis, entregues com sucesso no ambiente Moodle; Você é responsável por conferir a entrega;\r\n\\item A solução de cada questão deverá ser submetida na mesma Atividade. Essa atividade aceita dois arquivos com nomes \\textbf{\"Q1.java\"} e \\textbf{\"Q2.java\"};\r\n\\item Soluções que não compilam, receberão no máximo conceito C. DICA: Vá construindo cada programa por partes (blocos) e compilando. Ou seja, você não precisa esperar terminar todo o programa para compilar. Elimine erros de compilação à medida que se vai construindo o programa;\r\n\\item Plágio e soluções copiadas de outros colegas, implicarão conceito F para todos os envolvidos;',1),(129,'Exame1 PI 2020-simQ1','0','0','0','0','0','5','1','1','10','1','Hor','ques','no','no',NULL,'2020-03-09 03:00:00.000000','t1','\\item \\textbf{Pesos Orientativos para o conceito P1:}  questão 1 (peso 3); questão 2 (peso 5); questão 3 (peso 2);\r\n\\item No Moodle tem uma ÚNICA atividade para as questões 1 e 2, que será aberta no início da aula e será  fechada 10 minutos antes do término; Devolver a(s) folha(s) de questões com a sua assinatura a tinta;\r\n\\item Todos os programas devem ser escritos na linguagem de programação Portugol e convertidos para Java;\r\n\\item Somente serão corrigidos arquivos na linguagem definida, legíveis, entregues com sucesso no ambiente Moodle; Você é responsável por conferir a entrega;\r\n\\item A solução de cada questão deverá ser submetida na mesma Atividade. Essa atividade aceita dois arquivos com nomes \\textbf{\"Q1.java\"} e \\textbf{\"Q2.java\"};\r\n\\item Soluções que não compilam, receberão no máximo conceito C. DICA: Vá construindo cada programa por partes (blocos) e compilando. Ou seja, você não precisa esperar terminar todo o programa para compilar. Elimine erros de compilação à medida que se vai construindo o programa;\r\n\\item Plágio e soluções copiadas de outros colegas, implicarão conceito F para todos os envolvidos;',1),(130,'Exame1 PI 2020-simQ2','0','0','0','0','0','5','1','1','10','1','Hor','ques','yes','no',NULL,'2020-03-09 03:00:00.000000','t1','\\item \\textbf{Pesos Orientativos para o conceito P1:}  questão 1 (peso 3); questão 2 (peso 5); questão 3 (peso 2);\r\n\\item No Moodle tem uma ÚNICA atividade para as questões 1 e 2, que será aberta no início da aula e será  fechada 10 minutos antes do término; Devolver a(s) folha(s) de questões com a sua assinatura a tinta;\r\n\\item Todos os programas devem ser escritos na linguagem de programação Portugol e convertidos para Java;\r\n\\item Somente serão corrigidos arquivos na linguagem definida, legíveis, entregues com sucesso no ambiente Moodle; Você é responsável por conferir a entrega;\r\n\\item A solução de cada questão deverá ser submetida na mesma Atividade. Essa atividade aceita dois arquivos com nomes \\textbf{\"Q1.java\"} e \\textbf{\"Q2.java\"};\r\n\\item Soluções que não compilam, receberão no máximo conceito C. DICA: Vá construindo cada programa por partes (blocos) e compilando. Ou seja, você não precisa esperar terminar todo o programa para compilar. Elimine erros de compilação à medida que se vai construindo o programa;\r\n\\item Plágio e soluções copiadas de outros colegas, implicarão conceito F para todos os envolvidos;',1),(131,'Exame1 PI 2020q1','0','0','0','0','0','5','1','4','10','1','Hor','ques','no','no',NULL,'2020-03-12 03:00:00.000000','t1','\\item \\textbf{QUESTÃO Q1}  - Seleção Encadeada - Peso 3 (peso orientativo)\r\n\\item \\textbf{REGRAS GERAIS} \r\n\\begin{itemize}\r\n\\item Devolver a(s) folha(s) de questões com a sua assinatura a tinta;\r\n\\item Não é permitido o uso de qualquer dispositivo eletrônico, incluindo celular (DESLIGUE-O) e nem fones de ouvido;\r\n\\item A prova é individual e sem consulta a materiais (única exceção: help do portugol ou netbeans);\r\n\\item Não é permitido o uso de quaisquer dispositivos eletrônicos diferentes dos fornecidos em laboratório;\r\n\\item Não é permitido o uso de Pen-drive SEM autorização ou acompanhamento do professor ou monitor;\r\n\\item A compreensão e interpretação do(s) enunciado(s) é parte integrante da avaliação;\r\n\\item Plágio e soluções copiadas de outros colegas, implicarão conceito F para todos os envolvidos.\r\n\\end{itemize}\r\n\\item \\textbf{ORIENTAÇÕES GERAIS}\r\n\\begin{itemize}\r\n\\item Faça o download do Portujava em: portujava.wordpress.com;\r\n\\item O algoritmo pode ser escrito em Portugol ou diretamente em Java (Netbeans ou CodingGround);\r\n\\item Caso a solução seja feita em Portugol pode-se (e deve-se) usar o PortuJava para gerar a versão Java: É obrigatória a submissão da versão Java para AVALIAÇÃO AUTOMÁTICA;\r\n\\item A versão Portugol (para quem usar o PortuJava) também pode ser submetida (mas isso não é obrigatório).\r\n\\end{itemize}\r\n\\item \\textbf{PRAZOS E SUBMISSÕES}\r\n\\begin{itemize}\r\n\\item Localize no MoodleCMCC (moodlecmcc.ufabc.edu.br): PROVAS (Seções do Curso);\r\n\\item O prazo para submeter as respostas no MoodleCMCC será até às \\textbf{18h55}. O sistema está configurado para aceitar até 19h00 (Considere os 5 minutos de tolerância como a possível diferença entre o seu relógio e o do servidor);\r\n\\item O MoodleCMCC só deve ser usado para a submissão e/ou avaliação do programa (correção automática). Não deve ser usado para consultas a atividades anteriores e nem ao material;\r\n\\item Você  é responsável por conferir se os arquivos foram efetivamente enviados (salvos) no Moodle.\r\n\\end{itemize}',20),(132,'Exame1 PI 2020q2','0','0','0','0','0','5','1','4','10','1','Hor','ques','no','no',NULL,'2020-03-12 03:00:00.000000','t1','\\item \\textbf{QUESTÃO Q2}  - Repetição - Peso 5 (peso orientativo)\r\n\\item \\textbf{ATENÇÃO:}  Note que esta questão tem, no seu enunciado, \\textbf{elementos da QUESTÃO Q1}, mas há diferenças. \r\n\\begin{itemize}\r\n\\item O Objetivo é que você não tenha que pensar um \"novo problema\" (e contexto) do zero.\r\n\\item Você pode (e deve) aproveitar a sua solução da QUESTÃO Q1 e fazer as adequações e incrementos necessários de acordo com o enunciado.\r\n\\item O mero envio da solução da QUESTÃO Q1 como resposta dessa questão (sem adequações e incrementos) será desconsiderado.\r\n\\end{itemize}\r\n\\item \\textbf{REGRAS GERAIS} \r\n\\begin{itemize}\r\n\\item Devolver a(s) folha(s) de questões com a sua assinatura a tinta;\r\n\\item Todas as \\textbf{REGRAS GERAIS} que constam na QUESTÃO Q1 valem para essa questão;\r\n\\end{itemize}\r\n\\item \\textbf{ORIENTAÇÕES GERAIS}\r\n\\begin{itemize}\r\n\\item Todas as \\textbf{ORIENTAÇÕES GERAIS} que constam na QUESTÃO Q1 valem para essa questão;\r\n\\end{itemize}\r\n\\item \\textbf{PRAZOS E SUBMISSÕES}\r\n\\begin{itemize}\r\n\\item Localize no MoodleCMCC (moodlecmcc.ufabc.edu.br): PROVAS (Seções do Curso);\r\n\\item O prazo para submeter as respostas no MoodleCMCC será até às \\textbf{18h55}. O sistema está configurado para aceitar até 19h00 (Considere os 5 minutos de tolerância como a possível diferença entre o seu relógio e o do servidor);\r\n\\item O MoodleCMCC só deve ser usado para a submissão e/ou avaliação do programa (correção automática). Não deve ser usado para consultas a atividades anteriores e nem ao material;\r\n\\item Você  é responsável por conferir se os arquivos foram efetivamente enviados (salvos) no Moodle.\r\n\\end{itemize}',20),(133,'Exame1 PI 2020q3','0','0','0','0','0','5','1','4','10','1','Hor','ques','no','no',NULL,'2020-03-12 03:00:00.000000','t1','\\item \\textbf{QUESTÃO Q3}  - Teste de Mesa - Peso 2 (peso orientativo)\r\n\\item \\textbf{ORIENTAÇÕES GERAIS}\r\n\\begin{itemize}\r\n\\item  Esta questão deverá ser resolvida nesta folha (à mão). \r\n\\item  Você NÃO deve digitar este programa e executá-lo. Nem para conferência! \r\n\\end{itemize}\r\n\\item \\textbf{PRAZOS} - O prazo para entrega das folhas de prova (assinadas) para o professor é até às \\textbf{19h00}. \r\n\\item \\textbf{REGRAS GERAIS} \r\n\\begin{itemize}\r\n\\item Devolver a(s) folha(s) de questões com a sua assinatura a tinta;\r\n\\item Não é permitido o uso de qualquer dispositivo eletrônico, incluindo celular (DESLIGUE-O) e nem fones de ouvido;\r\n\\item A prova é individual e sem consulta a materiais (única exceção: help do portugol ou netbeans);\r\n\\item Não é permitido o uso de quaisquer dispositivos eletrônicos diferentes dos fornecidos em laboratório. \r\n\\item Não é permitido o uso de Pen-drive SEM autorização ou acompanhamento do professor ou monitor;\r\n\\item A compreensão e interpretação do(s) enunciado(s) é parte integrante da avaliação.\r\n\\item Plágio e soluções copiadas de outros colegas, implicarão conceito F para todos os envolvidos; \r\n\\end{itemize}',20),(134,'Exame1','1','1','1','1','0','3','1','2','5','1','Hor','both','yes','no',NULL,'2020-03-10 03:00:00.000000','t1','\\item desligar o celular',78),(135,'exame-template','3','0','0','0','0','5','0','1','10','1','Hor','both','yes','no',NULL,'2020-03-11 03:00:00.000000','t1','\\item desligar o celular',1),(136,'Prova P1','0','0','0','0','0','5','5','50','3','5','Hor','ques','yes','no',NULL,'2020-03-16 03:00:00.000000','t1','\\item Use apenas lápis, borracha, caneta e calculadora científica\r\n\\item Cada questão vale 1,00',63),(137,'Prova teste','0','0','0','0','0','5','2','2','10','1','Hor','ques','yes','no',NULL,'2020-03-20 03:00:00.000000','t1','\\item desligar o celular',80),(138,'Atividade 3','0','0','0','0','0','5','1','49','10','1','Hor','ques','yes','no',NULL,'2020-05-10 03:00:00.000000','t1','\\item Esta é a Atividade 3 do ECE, para ser enviada pelo Moodle.\r\n\\item Esta é uma atividade individual, foram geradas mais de 50 variações desta questão e cada aluno vai receber uma questão distinta.\r\n\\item Sugestão: resolver o problema primeiro para dimensões pequenas, para facilitar a validação do seu código.\r\n\\item Antes de submeter, valide o seu código em IDE\'s com Jupyter Notebook, ou  \\url{https://repl.it/languages/python3}',1);
/*!40000 ALTER TABLE `exam_exam` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `exam_exam_classrooms`
--

DROP TABLE IF EXISTS `exam_exam_classrooms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `exam_exam_classrooms` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `exam_id` int(11) NOT NULL,
  `classroom_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `exam_exam_classrooms_exam_id_classroom_id_c4ecc31d_uniq` (`exam_id`,`classroom_id`),
  KEY `exam_exam_classrooms_classroom_id_6435a4cf_fk_course_cl` (`classroom_id`),
  CONSTRAINT `exam_exam_classrooms_classroom_id_6435a4cf_fk_course_cl` FOREIGN KEY (`classroom_id`) REFERENCES `course_classroom` (`id`),
  CONSTRAINT `exam_exam_classrooms_exam_id_edf09d98_fk_exam_exam_id` FOREIGN KEY (`exam_id`) REFERENCES `exam_exam` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2907 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `exam_exam_classrooms`
--

LOCK TABLES `exam_exam_classrooms` WRITE;
/*!40000 ALTER TABLE `exam_exam_classrooms` DISABLE KEYS */;
INSERT INTO `exam_exam_classrooms` VALUES (1874,3,3),(2613,16,73),(1025,33,153),(1519,34,152),(1220,37,152),(1221,37,155),(1222,37,156),(1223,37,157),(1224,37,158),(1225,37,159),(1216,37,160),(1217,37,161),(1218,37,162),(1219,37,171),(1187,48,171),(1188,48,172),(1189,48,173),(1190,48,174),(2474,52,163),(1341,59,163),(2415,81,236),(2036,82,207),(2273,84,209),(2274,84,210),(2275,84,211),(2276,84,212),(2035,85,152),(2075,87,219),(2076,88,219),(2254,89,205),(2256,91,205),(2214,92,204),(2573,93,254),(2237,94,204),(2307,98,223),(2433,103,164),(2447,104,239),(2446,104,240),(2467,105,244),(2471,106,246),(2504,108,247),(2527,109,249),(2566,110,251),(2534,111,253),(2536,112,253),(2560,113,239),(2559,113,240),(2561,115,204),(2562,116,254),(2569,117,255),(2581,118,256),(2583,119,257),(2587,120,258),(2717,125,328),(2866,128,339),(2768,129,339),(2770,130,339),(2836,131,330),(2837,131,331),(2838,131,332),(2839,131,333),(2840,131,334),(2841,131,335),(2842,131,336),(2843,132,330),(2844,132,331),(2845,132,332),(2846,132,333),(2847,132,334),(2848,132,335),(2849,132,336),(2850,133,330),(2851,133,331),(2852,133,332),(2853,133,333),(2854,133,334),(2855,133,335),(2856,133,336),(2860,134,340),(2865,135,294),(2874,136,343),(2880,137,344),(2906,138,346);
/*!40000 ALTER TABLE `exam_exam_classrooms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `exam_exam_questions`
--

DROP TABLE IF EXISTS `exam_exam_questions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `exam_exam_questions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `exam_id` int(11) NOT NULL,
  `question_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `exam_exam_questions_exam_id_question_id_fb2c5892_uniq` (`exam_id`,`question_id`),
  KEY `exam_exam_questions_question_id_cc6e86f0_fk_topic_question_id` (`question_id`),
  CONSTRAINT `exam_exam_questions_exam_id_74f97ebb_fk_exam_exam_id` FOREIGN KEY (`exam_id`) REFERENCES `exam_exam` (`id`),
  CONSTRAINT `exam_exam_questions_question_id_cc6e86f0_fk_topic_question_id` FOREIGN KEY (`question_id`) REFERENCES `topic_question` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12782 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `exam_exam_questions`
--

LOCK TABLES `exam_exam_questions` WRITE;
/*!40000 ALTER TABLE `exam_exam_questions` DISABLE KEYS */;
INSERT INTO `exam_exam_questions` VALUES (5926,3,11),(5927,3,12),(5928,3,13),(5929,3,14),(5930,3,15),(5931,3,16),(5932,3,17),(5933,3,18),(5934,3,19),(5935,3,20),(5936,3,21),(5937,3,22),(5938,3,23),(5939,3,24),(5940,3,25),(5941,3,26),(5942,3,27),(5943,3,28),(5944,3,29),(5945,3,30),(5946,3,31),(5947,3,32),(5948,3,33),(5949,3,34),(5950,3,35),(5951,3,36),(5952,3,37),(5953,3,38),(5954,3,39),(5955,3,40),(5956,3,41),(5957,3,42),(5958,3,43),(10901,52,155),(10902,52,156),(10903,52,157),(10904,52,158),(10905,52,159),(10906,52,160),(10907,52,161),(10908,52,163),(10909,52,164),(10910,52,166),(10911,52,167),(10912,52,168),(10913,52,169),(10914,52,170),(10915,52,171),(10916,52,172),(10917,52,173),(10918,52,174),(10919,52,175),(10920,52,176),(10921,52,177),(10922,52,178),(10923,52,179),(10924,52,185),(10925,52,332),(10926,52,333),(10927,52,334),(10928,52,335),(10929,52,337),(10930,52,338),(4067,59,148),(4068,59,150),(4069,59,151),(4070,59,152),(4071,59,153),(4072,59,154),(4073,59,155),(4074,59,156),(4075,59,157),(4076,59,158),(4077,59,159),(4078,59,160),(4079,59,161),(4080,59,163),(4081,59,164),(4082,59,166),(4083,59,167),(4084,59,168),(4085,59,169),(4086,59,170),(4087,59,171),(4088,59,172),(4089,59,173),(4090,59,174),(4091,59,175),(4092,59,176),(4093,59,177),(4094,59,178),(4095,59,179),(4096,59,184),(4097,59,186),(4098,59,187),(4099,59,188),(4100,59,189),(4101,59,190),(4102,59,191),(4103,59,192),(4104,59,193),(4105,59,195),(4106,59,196),(4107,59,197),(4108,59,198),(4109,59,199),(4110,59,200),(4111,59,201),(4112,59,202),(4113,59,332),(4114,59,333),(4115,59,334),(4116,59,335),(4117,59,337),(4118,59,338),(9538,81,1169),(8901,84,657),(8902,84,658),(8903,84,659),(8904,84,660),(8905,84,661),(8906,84,662),(8907,84,663),(8908,84,664),(8909,84,665),(8910,84,666),(8911,84,667),(8912,84,668),(8913,84,1084),(8914,84,1085),(8915,84,1086),(8916,84,1087),(8917,84,1088),(8918,84,1089),(8919,84,1090),(8920,84,1091),(8921,84,1092),(8922,84,1093),(8923,84,1094),(8924,84,1095),(8925,84,1096),(8926,84,1097),(8927,84,1098),(8928,84,1099),(8929,84,1100),(8930,84,1101),(8931,84,1102),(8932,84,1103),(8933,84,1104),(8934,84,1105),(8935,84,1106),(8936,84,1107),(8937,84,1108),(8938,84,1109),(8939,84,1110),(8940,84,1114),(6746,87,1124),(6747,87,1125),(6748,87,1126),(6749,87,1127),(6750,87,1128),(6751,87,1129),(6752,87,1130),(6753,87,1131),(6754,87,1132),(6755,87,1133),(6756,88,1124),(6757,88,1125),(6758,88,1126),(6759,88,1127),(6760,88,1128),(6761,88,1129),(6762,88,1130),(6763,88,1131),(6764,88,1132),(6765,88,1133),(8724,89,1199),(8725,89,1200),(8716,89,1221),(8717,89,1222),(8718,89,1223),(8719,89,1225),(8720,89,1226),(8721,89,1230),(8722,89,1231),(8723,89,1232),(8744,91,1199),(8745,91,1200),(8736,91,1221),(8737,91,1222),(8738,91,1223),(8739,91,1225),(8740,91,1226),(8741,91,1230),(8742,91,1231),(8743,91,1232),(8093,92,1075),(8094,92,1079),(8087,92,1221),(8088,92,1222),(8089,92,1223),(8090,92,1225),(8091,92,1226),(8092,92,1228),(12201,93,1199),(12202,93,1200),(12203,93,1201),(12199,93,1221),(12200,93,1222),(12198,93,1377),(8307,94,1213),(8308,94,1214),(8309,94,1215),(8305,94,1216),(8306,94,1217),(8954,98,1243),(8955,98,1244),(8956,98,1245),(10094,103,1247),(10095,103,1248),(10096,103,1249),(10097,103,1250),(10098,103,1251),(10099,103,1252),(10100,103,1253),(10101,103,1254),(10102,103,1255),(10103,103,1256),(10104,103,1257),(10105,103,1258),(10106,103,1259),(10107,103,1260),(10108,103,1261),(10109,103,1262),(10110,103,1263),(10111,103,1264),(10112,103,1265),(10113,103,1266),(10114,103,1267),(10115,103,1268),(10116,103,1269),(10117,103,1270),(10118,103,1271),(10119,103,1272),(10120,103,1273),(10121,103,1274),(10122,103,1275),(10123,103,1276),(10124,103,1277),(10125,103,1278),(10126,103,1279),(10085,103,1280),(10086,103,1281),(10087,103,1282),(10088,103,1283),(10089,103,1284),(10090,103,1285),(10091,103,1286),(10092,103,1287),(10093,103,1288),(10350,104,1247),(10351,104,1248),(10352,104,1249),(10353,104,1250),(10354,104,1251),(10355,104,1252),(10356,104,1253),(10357,104,1254),(10358,104,1255),(10359,104,1256),(10360,104,1257),(10361,104,1258),(10362,104,1259),(10363,104,1260),(10364,104,1261),(10365,104,1262),(10366,104,1263),(10367,104,1264),(10368,104,1265),(10369,104,1266),(10370,104,1267),(10371,104,1268),(10372,104,1269),(10373,104,1270),(10374,104,1271),(10375,104,1272),(10376,104,1273),(10377,104,1274),(10378,104,1275),(10379,104,1276),(10380,104,1277),(10381,104,1278),(10382,104,1279),(10341,104,1280),(10342,104,1281),(10343,104,1282),(10344,104,1283),(10345,104,1284),(10346,104,1285),(10347,104,1286),(10348,104,1287),(10349,104,1288),(10766,105,1289),(10767,105,1290),(10768,105,1291),(10769,105,1292),(10770,105,1293),(10771,105,1294),(10772,105,1295),(10773,105,1296),(10774,105,1297),(10775,105,1298),(10776,105,1299),(10777,105,1300),(10778,105,1301),(10779,105,1302),(10780,105,1303),(10781,105,1304),(10782,105,1305),(10783,105,1306),(10784,105,1307),(10785,105,1308),(10786,105,1309),(10787,105,1310),(10788,105,1311),(10789,105,1312),(10790,105,1313),(10791,105,1314),(10792,105,1315),(10793,105,1316),(10794,105,1317),(10795,105,1318),(10796,105,1319),(10797,105,1320),(10798,105,1321),(10865,106,1289),(10866,106,1290),(10867,106,1291),(10868,106,1292),(10869,106,1293),(10870,106,1294),(10871,106,1295),(10872,106,1296),(10873,106,1297),(10874,106,1298),(10875,106,1299),(10876,106,1300),(10877,106,1301),(10878,106,1302),(10879,106,1303),(10880,106,1304),(10881,106,1305),(10882,106,1306),(10883,106,1307),(10884,106,1308),(10885,106,1309),(10886,106,1310),(10887,106,1311),(10888,106,1312),(10889,106,1313),(10890,106,1314),(10891,106,1315),(10892,106,1316),(10893,106,1317),(10894,106,1318),(10895,106,1319),(10896,106,1320),(10897,106,1321),(11378,108,1322),(11379,108,1323),(11380,108,1324),(11381,108,1325),(11382,108,1326),(11383,108,1327),(11384,108,1328),(11385,108,1329),(11386,108,1330),(11387,108,1332),(11388,108,1333),(11389,108,1334),(11390,108,1335),(11391,108,1336),(11392,108,1337),(11393,108,1338),(11394,108,1339),(11395,108,1340),(11396,108,1341),(11397,108,1342),(11398,108,1343),(11399,108,1344),(11400,108,1345),(11401,108,1346),(11402,108,1347),(11403,108,1348),(11671,109,1168),(11672,109,1170),(11673,109,1171),(11669,109,1188),(11670,109,1189),(12167,110,1199),(12168,110,1200),(12169,110,1201),(12165,110,1221),(12166,110,1222),(12164,110,1377),(11710,111,1221),(11711,111,1223),(11712,111,1224),(11713,111,1225),(11714,111,1226),(11715,111,1228),(11716,111,1230),(11717,111,1231),(11718,111,1232),(11728,112,1221),(11729,112,1223),(11730,112,1224),(11731,112,1225),(11732,112,1226),(11733,112,1228),(11734,112,1230),(11735,112,1231),(11736,112,1232),(12106,113,402),(12107,113,403),(12108,113,404),(12109,113,405),(12110,113,406),(12111,113,407),(12112,113,408),(12113,113,409),(12114,113,410),(12115,113,411),(12116,113,412),(12117,113,413),(12118,113,414),(12119,113,415),(12120,113,416),(12121,113,417),(12122,113,418),(12123,113,419),(12124,113,420),(12125,113,421),(12126,113,422),(12127,113,423),(12128,113,424),(12129,113,425),(12130,113,426),(12131,113,427),(12132,113,428),(12133,113,429),(12134,113,430),(12135,113,431),(12136,113,432),(12137,113,433),(12138,113,434),(12139,113,435),(12140,113,436),(12141,113,437),(12142,113,438),(12177,117,1199),(12178,117,1200),(12179,117,1201),(12176,117,1221),(12175,117,1377),(12351,118,1199),(12352,118,1200),(12353,118,1201),(12341,118,1221),(12342,118,1223),(12343,118,1224),(12344,118,1225),(12345,118,1226),(12346,118,1227),(12347,118,1228),(12348,118,1230),(12349,118,1231),(12350,118,1232),(12340,118,1377),(12354,119,439),(12355,119,440),(12356,119,441),(12357,119,442),(12358,119,443),(12359,119,444),(12360,119,445),(12361,119,446),(12362,119,447),(12363,119,448),(12364,119,449),(12365,119,450),(12366,119,451),(12367,119,452),(12368,119,453),(12369,119,454),(12370,119,455),(12371,119,456),(12372,119,457),(12373,119,458),(12374,119,459),(12375,119,460),(12376,119,461),(12377,119,462),(12378,119,463),(12379,119,464),(12380,119,465),(12381,119,466),(12382,119,467),(12383,119,468),(12384,119,469),(12385,119,470),(12386,119,471),(12420,120,439),(12421,120,440),(12422,120,441),(12423,120,442),(12424,120,443),(12425,120,444),(12426,120,445),(12427,120,446),(12428,120,447),(12429,120,448),(12430,120,449),(12431,120,450),(12432,120,451),(12433,120,452),(12434,120,453),(12435,120,454),(12436,120,455),(12437,120,456),(12438,120,457),(12439,120,458),(12440,120,459),(12441,120,460),(12442,120,461),(12443,120,462),(12444,120,463),(12445,120,464),(12446,120,465),(12447,120,466),(12448,120,467),(12449,120,468),(12450,120,469),(12451,120,470),(12452,120,471),(12660,128,86),(12661,128,87),(12657,128,102),(12662,128,1240),(12658,128,1384),(12659,128,1385),(12569,129,1386),(12570,130,1387),(12622,131,1384),(12623,132,1385),(12624,133,1240),(12638,134,1389),(12639,134,1390),(12640,134,1391),(12641,134,1392),(12642,134,1393),(12654,135,1234),(12655,135,1237),(12656,135,1239),(12735,136,1221),(12736,136,1222),(12737,136,1223),(12738,136,1224),(12739,136,1225),(12740,136,1226),(12741,136,1228),(12742,136,1230),(12743,136,1231),(12755,137,1394),(12756,137,1395),(12781,138,1398);
/*!40000 ALTER TABLE `exam_exam_questions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `exam_studentexam`
--

DROP TABLE IF EXISTS `exam_studentexam`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `exam_studentexam` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `grade` varchar(20) NOT NULL,
  `exam_id` int(11) DEFAULT NULL,
  `student_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `exam_studentexam_exam_id_b33d0b66_fk_exam_exam_id` (`exam_id`),
  KEY `exam_studentexam_student_id_b67a86ca_fk_student_student_id` (`student_id`),
  CONSTRAINT `exam_studentexam_exam_id_b33d0b66_fk_exam_exam_id` FOREIGN KEY (`exam_id`) REFERENCES `exam_exam` (`id`),
  CONSTRAINT `exam_studentexam_student_id_b67a86ca_fk_student_student_id` FOREIGN KEY (`student_id`) REFERENCES `student_student` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13900 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `exam_studentexam`
--

LOCK TABLES `exam_studentexam` WRITE;
/*!40000 ALTER TABLE `exam_studentexam` DISABLE KEYS */;
INSERT INTO `exam_studentexam` VALUES (162,'18',16,4915),(163,'13',16,4916),(164,'29',16,4917),(165,'28',16,4918),(166,'19',16,4919),(167,'26',16,4920),(168,'22',16,4922),(169,'23',16,4923),(170,'33',16,4924),(171,'16',16,4926),(172,'19',16,4927),(173,'30',16,4928),(174,'25',16,4929),(175,'33',16,4930),(176,'31',16,4931),(177,'26',16,4932),(178,'20',16,4934),(179,'25',16,4936),(180,'32',16,4938),(181,'32',16,4939),(182,'17',16,4940),(183,'18',16,4941),(184,'22',16,4942),(185,'20',16,4943),(186,'18',16,4945),(187,'23',16,4946),(188,'26',16,4947),(189,'17',16,4948),(190,'35',16,4949),(191,'34',16,4950),(192,'34',16,4951),(193,'28',16,4952),(194,'30',16,4953),(195,'31',16,4954),(196,'21',16,4955),(197,'24',16,4956),(198,'29',16,4958),(199,'21',16,4959),(200,'10',16,4960),(201,'32',16,4961),(202,'22',16,4962),(203,'16',16,4963),(204,'23',16,4964),(205,'11',16,4966),(206,'27',16,4968),(207,'28',16,4969),(208,'25',16,4971),(209,'42',16,4972),(210,'22',16,4973),(211,'17',16,4974),(213,'0',16,4921),(214,'0',16,4933),(215,'0',16,4935),(216,'0',16,4937),(217,'0',16,4944),(218,'0',16,4957),(219,'0',16,4965),(220,'0',16,4967),(221,'0',16,4970),(223,'25',16,5097),(224,'37',16,5098),(225,'0',16,5099),(226,'0',16,5100),(227,'0',16,5101),(228,'19',16,5102),(229,'21',16,5103),(230,'26',16,5104),(231,'17',16,5105),(232,'27',16,5106),(233,'25',16,5107),(234,'31',16,5108),(235,'0',16,5109),(236,'31',16,5110),(237,'19',16,5111),(238,'0',16,5112),(239,'25',16,5113),(240,'28',16,5114),(241,'25',16,5115),(242,'33',16,5116),(243,'0',16,5117),(244,'19',16,5118),(245,'14',16,5120),(246,'22',16,5121),(247,'20',16,5122),(248,'21',16,5123),(249,'22',16,5124),(250,'25',16,5125),(251,'17',16,5126),(252,'25',16,5127),(253,'16',16,5128),(254,'17',16,5129),(256,'31',16,5130),(257,'0',16,5131),(258,'30',16,5132),(259,'18',16,5133),(260,'33',16,5134),(261,'0',16,5135),(262,'26',16,5136),(263,'30',16,5137),(264,'27',16,5138),(265,'0',16,5139),(266,'26',16,5140),(267,'0',16,5141),(268,'26',16,5142),(269,'34',16,5143),(270,'25',16,5144),(271,'27',16,5145),(272,'19',16,5146),(273,'22',16,5147),(274,'11',16,5148),(275,'17',16,5149),(276,'0',16,5150),(277,'20',16,5152),(278,'29',16,5153),(279,'41',16,5154),(280,'18',16,5155),(281,'19',16,5156),(282,'0',16,5157),(283,'26',16,5158),(284,'31',16,5159),(286,'27',16,5160),(287,'0',16,5161),(288,'25',16,5162),(289,'27',16,5163),(290,'33',16,5164),(291,'0',16,5165),(292,'29',16,5166),(293,'0',16,5167),(294,'27',16,5168),(295,'30',16,5169),(296,'0',16,5170),(297,'13',16,5171),(298,'20',16,5172),(299,'13',16,5173),(300,'17',16,5174),(301,'32',16,5175),(302,'22',16,5176),(303,'23',16,5177),(304,'27',16,5178),(305,'0',16,5179),(306,'31',16,5180),(307,'33',16,5181),(308,'28',16,5182),(309,'16',16,5183),(310,'17',16,5185),(311,'0',16,5184),(312,'0',16,5186),(313,'27',16,5187),(314,'19',16,5188),(315,'12',16,5189),(316,'14',16,5190),(317,'6',16,5191),(318,'30',16,5192),(319,'28',16,5193),(387,'25',16,5194),(388,'21',16,5195),(389,'31',16,5196),(390,'31',16,5197),(391,'0',16,5198),(392,'20',16,5199),(393,'0',16,5200),(394,'31',16,5201),(395,'28',16,5202),(396,'17',16,5203),(397,'28',16,5204),(398,'35',16,5205),(399,'0',16,5206),(400,'0',16,5207),(401,'21',16,5208),(402,'30',16,5209),(403,'14',16,5210),(404,'32',16,5211),(405,'27',16,5212),(406,'0',16,5213),(407,'8',16,5214),(409,'0',16,5215),(410,'0',16,5226),(411,'25',16,5216),(412,'22',16,5227),(413,'35',16,5217),(414,'0',16,5228),(415,'9',16,5218),(416,'32',16,5229),(417,'0',16,5219),(418,'14',16,5230),(419,'20',16,5220),(420,'0',16,5231),(421,'27',16,5221),(422,'18',16,5232),(423,'0',16,5222),(424,'30',16,5233),(425,'0',16,5234),(426,'16',16,5223),(427,'34',16,5235),(428,'12',16,5224),(429,'0',16,5236),(430,'35',16,5225),(431,'31',16,5237),(432,'17',16,5238),(433,'20',16,5239),(434,'17',16,5240),(435,'0',16,5241),(436,'0',16,5242),(437,'29',16,5243),(438,'34',16,5244),(439,'42',16,5245),(440,'0',16,5246),(441,'16',16,5247),(442,'37',16,5248),(443,'41',16,5249),(444,'21',16,5250),(445,'21',16,5251),(446,'0',16,5252),(447,'29',16,5253),(449,'21',16,5254),(450,'26',16,5255),(451,'18',16,5256),(452,'23',16,5257),(453,'0',16,5258),(454,'8',16,5259),(455,'22',16,5260),(456,'20',16,5261),(457,'13',16,5262),(458,'0',16,5263),(459,'22',16,5264),(460,'0',16,5265),(461,'41',16,5266),(462,'18',16,5267),(463,'30',16,5268),(464,'38',16,5269),(465,'28',16,5270),(466,'31',16,5271),(467,'36',16,5272),(468,'22',16,5273),(469,'23',16,5274),(470,'25',16,5275),(471,'22',16,5276),(472,'24',16,5277),(473,'27',16,5278),(474,'44',16,5279),(475,'21',16,5280),(476,'21',16,5281),(477,'32',16,5282),(478,'30',16,5283),(479,'0',16,5284),(480,'0',16,5285),(482,'29',16,5286),(483,'20',16,5287),(484,'35',16,5288),(485,'20',16,5289),(486,'25',16,5290),(487,'31',16,5291),(488,'0',16,5292),(489,'25',16,5293),(490,'0',16,5294),(491,'25',16,5295),(492,'29',16,5296),(493,'25',16,5297),(494,'0',16,5298),(495,'27',16,5299),(496,'18',16,5300),(497,'30',16,5301),(498,'42',16,5302),(499,'22',16,5303),(500,'29',16,5304),(501,'17',16,5305),(502,'36',16,5306),(503,'31',16,5307),(504,'16',16,5308),(505,'17',16,5309),(506,'18',16,5310),(507,'0',16,5311),(508,'10',16,5312),(509,'0',16,5313),(510,'23',16,5314),(511,'16',16,5315),(512,'22',16,5316),(513,'24',16,5317),(514,'19',16,5318),(515,'28',16,5319),(516,'38',16,5320),(517,'19',16,5321),(518,'28',16,5322),(519,'0',16,5323),(520,'15',16,5324),(521,'0',16,5325),(522,'12',16,5326),(523,'22',16,5327),(524,'25',16,5328),(525,'0',16,5329),(526,'28',16,5330),(527,'23',16,5331),(528,'17',16,5332),(529,'11',16,5333),(530,'0',16,5334),(531,'23',16,5335),(532,'32',16,5336),(533,'0',16,5337),(534,'22',16,5338),(535,'20',16,5339),(536,'19',16,5340),(537,'26',16,5341),(538,'30',16,5342),(539,'26',16,5343),(540,'18',16,5344),(541,'0',16,5345),(542,'32',16,5346),(543,'31',16,5347),(544,'20',16,5348),(545,'20',16,5349),(546,'18',16,5350),(548,'16',16,4109),(549,'13',16,4110),(550,'0',16,4111),(551,'13',16,4112),(552,'8',16,4113),(553,'14',16,4114),(554,'7',16,4115),(555,'0',16,4116),(556,'11',16,4117),(557,'0',16,4118),(558,'14',16,4119),(559,'10',16,4120),(560,'0',16,4121),(561,'15',16,4122),(562,'20',16,4123),(563,'10',16,4124),(564,'8',16,4125),(565,'0',16,4126),(566,'12',16,4127),(567,'12',16,4128),(568,'10',16,4129),(569,'0',16,4130),(570,'9',16,4131),(571,'14',16,4132),(572,'0',16,4133),(574,'20',16,4698),(575,'14',16,4699),(576,'34',16,4700),(577,'28',16,4701),(578,'24',16,4702),(579,'14',16,4703),(580,'14',16,4704),(581,'28',16,4705),(582,'25',16,4706),(583,'30',16,4707),(584,'11',16,4708),(585,'23',16,4709),(586,'39',16,4711),(587,'30',16,4712),(588,'24',16,4713),(589,'32',16,4714),(590,'27',16,4715),(591,'23',16,4716),(592,'27',16,4717),(593,'41',16,4718),(594,'40',16,4719),(595,'21',16,4721),(596,'26',16,4722),(597,'27',16,4723),(598,'30',16,4724),(599,'30',16,4725),(600,'27',16,4726),(601,'28',16,4727),(602,'28',16,4728),(603,'26',16,4730),(604,'19',16,4731),(605,'24',16,4732),(606,'19',16,4733),(607,'25',16,4735),(608,'16',16,4736),(609,'28',16,4738),(610,'36',16,4739),(611,'36',16,4740),(612,'14',16,4741),(613,'17',16,4742),(614,'32',16,4745),(615,'23',16,4746),(616,'22',16,4747),(617,'7',16,4748),(618,'31',16,4760),(619,'35',16,4751),(620,'23',16,4753),(621,'34',16,4754),(622,'10',16,4755),(623,'27',16,4756),(624,'21',16,4757),(625,'35',16,4750),(626,'39',16,4758),(627,'13',16,4759),(628,'18',16,4761),(629,'32',16,4762),(630,'24',16,4763),(631,'27',16,4764),(632,'26',16,4765),(633,'18',16,4766),(634,'10',16,4769),(635,'30',16,4772),(636,'12',16,4773),(637,'19',16,4767),(638,'24',16,4768),(639,'33',16,4771),(640,'12',16,4774),(641,'0',16,4710),(642,'0',16,4720),(643,'0',16,4729),(644,'0',16,4734),(645,'0',16,4737),(646,'0',16,4744),(647,'0',16,4749),(648,'0',16,4770),(650,'28',16,4517),(651,'9',16,4516),(652,'24',16,4518),(653,'27',16,4519),(654,'33',16,4520),(655,'0',16,4521),(656,'32',16,4522),(657,'0',16,4523),(658,'34',16,4524),(659,'15',16,4525),(660,'21',16,4526),(661,'41',16,4527),(662,'0',16,4528),(663,'23',16,4529),(664,'18',16,4530),(665,'32',16,4531),(666,'33',16,4532),(667,'34',16,4533),(668,'34',16,4534),(669,'0',16,4535),(670,'25',16,4536),(671,'21',16,4537),(672,'24',16,4538),(673,'0',16,4539),(674,'22',16,4540),(675,'0',16,4541),(676,'0',16,4542),(677,'31',16,4543),(678,'0',16,4544),(679,'0',16,4545),(680,'0',16,4546),(681,'0',16,4547),(682,'30',16,4548),(683,'38',16,4549),(684,'0',16,4550),(685,'0',16,4551),(686,'0',16,4552),(687,'27',16,4554),(688,'31',16,4553),(689,'36',16,4555),(690,'30',16,4556),(691,'0',16,4557),(692,'29',16,4564),(693,'29',16,4558),(694,'16',16,4559),(695,'12',16,4560),(696,'29',16,4561),(697,'17',16,4562),(698,'0',16,4563),(699,'38',16,4565),(700,'31',16,4566),(701,'17',16,4567),(702,'29',16,4568),(703,'0',16,4569),(704,'0',16,4570),(705,'20',16,4571),(706,'32',16,4572),(707,'34',16,4573),(708,'22',16,4574),(709,'42',16,4575),(710,'0',16,4576),(711,'36',16,4577),(712,'32',16,4578),(713,'27',16,4579),(714,'29',16,4580),(715,'30',16,4581),(716,'29',16,4582),(717,'29',16,4583),(718,'31',16,4584),(719,'0',16,4585),(720,'28',16,4586),(721,'19',16,4587),(722,'24',16,4588),(723,'22',16,4589),(724,'21',16,4590),(725,'25',16,4591),(726,'23',16,4592),(727,'22',16,4593),(728,'21',16,4594),(729,'24',16,4595),(730,'19',16,4596),(731,'34',16,4597),(732,'28',16,4598),(733,'0',16,4599),(734,'29',16,4600),(735,'24',16,4601),(736,'20',16,4602),(737,'31',16,4603),(738,'21',16,4607),(739,'22',16,4604),(740,'23',16,4605),(741,'33',16,4608),(742,'0',16,4609),(743,'19',16,4610),(744,'15',16,4611),(745,'0',16,4612),(747,'22',16,3684),(748,'26',16,3685),(749,'34',16,3686),(750,'13',16,3687),(751,'33',16,3688),(752,'21',16,3689),(753,'36',16,3690),(754,'0',16,3691),(756,'23',16,3693),(757,'18',16,3694),(758,'20',16,3695),(759,'23',16,3696),(760,'32',16,3697),(761,'31',16,3698),(762,'20',16,3699),(763,'27',16,3700),(764,'26',16,3701),(765,'0',16,3702),(766,'25',16,3703),(767,'18',16,3704),(768,'0',16,3705),(769,'31',16,3706),(770,'24',16,3707),(771,'15',16,3708),(772,'15',16,3709),(773,'22',16,3710),(774,'32',16,3711),(775,'24',16,3712),(776,'24',16,3713),(777,'0',16,3714),(778,'36',16,3715),(779,'25',16,3716),(780,'37',16,3717),(781,'23',16,3718),(782,'22',16,3719),(783,'26',16,3720),(784,'29',16,3721),(785,'0',16,3722),(786,'0',16,3723),(787,'22',16,3724),(788,'23',16,3725),(790,'16',16,3370),(791,'25',16,3362),(792,'22',16,3363),(793,'25',16,3364),(794,'19',16,3365),(795,'23',16,3367),(796,'29',16,3369),(797,'35',16,3371),(798,'15',16,3372),(799,'41',16,3373),(800,'24',16,3374),(801,'35',16,3375),(802,'22',16,3376),(803,'18',16,3377),(804,'38',16,3378),(805,'28',16,3379),(806,'35',16,3381),(807,'17',16,3383),(808,'17',16,3384),(809,'32',16,3385),(810,'21',16,3386),(811,'12',16,3387),(812,'22',16,3388),(813,'24',16,3389),(814,'34',16,3390),(815,'38',16,3391),(816,'19',16,3392),(817,'27',16,3393),(818,'25',16,3396),(819,'24',16,3397),(820,'27',16,3398),(821,'33',16,3399),(822,'28',16,3400),(823,'32',16,3401),(824,'30',16,3402),(825,'34',16,3403),(826,'11',16,3404),(827,'31',16,3405),(828,'31',16,3406),(829,'30',16,3407),(830,'20',16,3408),(831,'29',16,3409),(832,'31',16,3410),(833,'27',16,3411),(834,'30',16,3412),(835,'21',16,3413),(836,'35',16,3415),(837,'24',16,3416),(838,'31',16,3417),(839,'11',16,3418),(840,'24',16,3419),(841,'23',16,3420),(842,'27',16,3421),(843,'21',16,3422),(844,'26',16,3423),(845,'27',16,3425),(846,'10',16,3426),(847,'22',16,3427),(848,'35',16,3429),(849,'37',16,3430),(850,'15',16,3431),(851,'28',16,3432),(852,'39',16,3433),(853,'26',16,3434),(854,'23',16,3436),(855,'30',16,3438),(856,'25',16,3442),(857,'23',16,3443),(858,'9',16,3445),(859,'28',16,3446),(860,'23',16,3447),(861,'0',16,3366),(862,'0',16,3368),(863,'0',16,3380),(864,'0',16,3382),(865,'0',16,3394),(866,'0',16,3414),(867,'0',16,3424),(868,'0',16,3428),(869,'0',16,3435),(870,'0',16,3437),(871,'0',16,3439),(872,'0',16,3440),(873,'0',16,3441),(874,'0',16,3444),(967,'0',16,3184),(968,'24',16,4134),(969,'31',16,3185),(970,'22',16,3186),(971,'0',16,3187),(972,'31',16,3188),(973,'27',16,3189),(974,'19',16,3190),(975,'0',16,3191),(976,'27',16,3192),(977,'0',16,3193),(978,'38',16,3194),(979,'0',16,3195),(980,'28',16,3196),(981,'16',16,3197),(982,'17',16,3198),(983,'30',16,3199),(984,'0',16,3200),(985,'31',16,3201),(986,'21',16,3202),(987,'20',16,3203),(988,'38',16,3204),(989,'30',16,3205),(990,'40',16,3206),(991,'37',16,3207),(992,'26',16,3208),(993,'21',16,3209),(994,'30',16,3210),(995,'11',16,3211),(996,'29',16,3212),(997,'25',16,3213),(998,'22',16,3214),(999,'43',16,3215),(1000,'21',16,3216),(1001,'33',16,3217),(1002,'27',16,3218),(1003,'34',16,3219),(1004,'20',16,3220),(1005,'28',16,3221),(1006,'25',16,3222),(1007,'27',16,3225),(1008,'21',16,3227),(1009,'22',16,3229),(1010,'39',16,3230),(1011,'0',16,3231),(1012,'30',16,3232),(1013,'33',16,3233),(1014,'26',16,3234),(1015,'34',16,3223),(1016,'37',16,3224),(1017,'33',16,3228),(1018,'19',16,3235),(1019,'0',16,3236),(1020,'0',16,3237),(1021,'38',16,3238),(1022,'26',16,3239),(1023,'20',16,3240),(1024,'0',16,3241),(1025,'26',16,3242),(1026,'23',16,3243),(1027,'38',16,3244),(1028,'27',16,3245),(1029,'26',16,3246),(1030,'0',16,3247),(1031,'28',16,3248),(1032,'42',16,3249),(1033,'39',16,3250),(1034,'26',16,3251),(1035,'23',16,3252),(1036,'16',16,3253),(1037,'41',16,3254),(1038,'23',16,3255),(1039,'31',16,3256),(1040,'29',16,3257),(1041,'0',16,3258),(1042,'22',16,3259),(1043,'26',16,3260),(1044,'31',16,3263),(1045,'0',16,3261),(1046,'29',16,3262),(1047,'29',16,3264),(1048,'17',16,3265),(1049,'0',16,3266),(1050,'42',16,3267),(1051,'28',16,3268),(1052,'38',16,3273),(1053,'0',16,3269),(1054,'27',16,3270),(1055,'36',16,3271),(1056,'21',16,3272),(1119,'0',16,4976),(1120,'50',16,4977),(1121,'50',16,4978),(1182,'24',16,4981),(1183,'25',16,4982),(1184,'23',16,4983),(1185,'24',16,4984),(1186,'0',16,4985),(1187,'12',16,4986),(1188,'23',16,4987),(1189,'22',16,4988),(1190,'0',16,4989),(1191,'20',16,4990),(1192,'23',16,4991),(1193,'16',16,4992),(1194,'0',16,4993),(1195,'22',16,4994),(1196,'24',16,4995),(1197,'0',16,4996),(1198,'16',16,4997),(1199,'24',16,4998),(1200,'22',16,4999),(1201,'24',16,5000),(1202,'0',16,5001),(1203,'18',16,5002),(1204,'19',16,5003),(1205,'24',16,5004),(1206,'0',16,5005),(1207,'25',16,5006),(1208,'0',16,5007),(1209,'22',16,5008),(1210,'19',16,5009),(1211,'20',16,5010),(1212,'21',16,5011),(1213,'25',16,5012),(1214,'22',16,5013),(1215,'22',16,5014),(1216,'16',16,5015),(1217,'24',16,5016),(1218,'19',16,5017),(1219,'0',16,5018),(1220,'25',16,5019),(1221,'25',16,5020),(1222,'18',16,5021),(1223,'22',16,5022),(1224,'0',16,5023),(1225,'22',16,5024),(1226,'22',16,5025),(1227,'16',16,5026),(1228,'15',16,5027),(1229,'0',16,5028),(1230,'15',16,5029),(1231,'0',16,5030),(1232,'23',16,5031),(1233,'21',16,5032),(1234,'18',16,5033),(1235,'0',16,5034),(1236,'0',16,5035),(1237,'22',16,5036),(1239,'24',16,2912),(1240,'26',16,2913),(1241,'26',16,2914),(1242,'42',16,2915),(1243,'35',16,2916),(1244,'16',16,2917),(1245,'0',16,2918),(1246,'0',16,2919),(1247,'28',16,2920),(1248,'36',16,2921),(1249,'0',16,2922),(1250,'31',16,2923),(1251,'15',16,2924),(1252,'11',16,2925),(1253,'0',16,2926),(1254,'0',16,2927),(1255,'25',16,2928),(1256,'0',16,2929),(1257,'37',16,2930),(1258,'18',16,2931),(1259,'21',16,2932),(1260,'31',16,2933),(1261,'19',16,2934),(1262,'28',16,2935),(1263,'23',16,2936),(1264,'25',16,2937),(1265,'0',16,2938),(1266,'17',16,2939),(1267,'0',16,2940),(1268,'36',16,2941),(1269,'0',16,2942),(1270,'23',16,2943),(1271,'26',16,2944),(1272,'31',16,3078),(1273,'8',16,2946),(1274,'29',16,2947),(1275,'0',16,2948),(1276,'29',16,2949),(1277,'30',16,2950),(1278,'19',16,2951),(1279,'0',16,2952),(1280,'16',16,2953),(1281,'36',16,3079),(1282,'14',16,2955),(1283,'25',16,2956),(1284,'35',16,2957),(1285,'16',16,2958),(1286,'39',16,2959),(1287,'0',16,2960),(1288,'29',16,2961),(1289,'17',16,2962),(1290,'23',16,2963),(1291,'23',16,2964),(1292,'0',16,2965),(1293,'0',16,2966),(1294,'22',16,2967),(1295,'18',16,2968),(1296,'26',16,2969),(1297,'24',16,2970),(1298,'0',16,3080),(1299,'35',16,2972),(1300,'0',16,2973),(1301,'25',16,3081),(1302,'36',16,2975),(1303,'25',16,2976),(1304,'35',16,2977),(1305,'29',16,2978),(1306,'30',16,2979),(1307,'27',16,2980),(1308,'23',16,2981),(1309,'15',16,2982),(1310,'21',16,2983),(1311,'0',16,2984),(1312,'0',16,2986),(1313,'33',16,2987),(1314,'23',16,2988),(1315,'0',16,2989),(1316,'24',16,2990),(1317,'20',16,2991),(1318,'38',16,2992),(1319,'26',16,2993),(1320,'26',16,2994),(1321,'24',16,2995),(1322,'19',16,2996),(1323,'27',16,2998),(1324,'43',16,2999),(1325,'23',16,3000),(1326,'27',16,3001),(1327,'23',16,3002),(1328,'15',16,3003),(1329,'26',16,3004),(1330,'32',16,3005),(1331,'29',16,3006),(1332,'22',16,3082),(1333,'19',16,3008),(1334,'0',16,3009),(1335,'33',16,3010),(1336,'0',16,3011),(1337,'0',16,3012),(1420,'0',16,3013),(1421,'27',16,3014),(1422,'27',16,3015),(1423,'0',16,3083),(1424,'18',16,3017),(1425,'30',16,3018),(1427,'18',16,3019),(1428,'17',16,3104),(1429,'27',16,3020),(1430,'40',16,3105),(1431,'23',16,3021),(1432,'34',16,3106),(1433,'18',16,3022),(1434,'17',16,3107),(1435,'21',16,3023),(1436,'14',16,3108),(1437,'31',16,3024),(1438,'15',16,3109),(1439,'22',16,3025),(1440,'0',16,3110),(1441,'23',16,3026),(1442,'0',16,3111),(1443,'28',16,3027),(1444,'0',16,3112),(1445,'0',16,3113),(1446,'0',16,3028),(1447,'23',16,3114),(1448,'34',16,3029),(1449,'25',16,3115),(1450,'0',16,3030),(1451,'18',16,3116),(1452,'14',16,3084),(1453,'26',16,3117),(1454,'26',16,3032),(1455,'31',16,3118),(1456,'0',16,3033),(1457,'29',16,3119),(1458,'20',16,3034),(1459,'25',16,3120),(1460,'0',16,3035),(1461,'26',16,3121),(1462,'15',16,3036),(1463,'26',16,3122),(1464,'38',16,3037),(1465,'32',16,3123),(1466,'33',16,3038),(1467,'28',16,3124),(1468,'32',16,3039),(1469,'29',16,3125),(1470,'0',16,3040),(1471,'37',16,3126),(1472,'32',16,3041),(1473,'0',16,3127),(1474,'29',16,3042),(1475,'36',16,3128),(1476,'0',16,3043),(1478,'22',16,3174),(1479,'33',16,3085),(1481,'21',16,3045),(1482,'10',16,3129),(1483,'15',16,3086),(1484,'0',16,3130),(1485,'24',16,3047),(1486,'0',16,3131),(1487,'0',16,3048),(1488,'0',16,3132),(1489,'33',16,3133),(1490,'28',16,3049),(1491,'30',16,3134),(1492,'20',16,3050),(1493,'33',16,3135),(1494,'24',16,3051),(1495,'28',16,3136),(1496,'30',16,3052),(1497,'0',16,3137),(1498,'22',16,3053),(1499,'25',16,3138),(1500,'31',16,3054),(1501,'26',16,3139),(1502,'0',16,3055),(1503,'0',16,3140),(1504,'28',16,3056),(1505,'21',16,3141),(1506,'0',16,3057),(1507,'25',16,3142),(1508,'0',16,3058),(1509,'24',16,3143),(1510,'0',16,3059),(1511,'0',16,3144),(1512,'24',16,3060),(1513,'28',16,3145),(1514,'20',16,3087),(1515,'25',16,3146),(1516,'27',16,3062),(1517,'25',16,3147),(1518,'19',16,3063),(1519,'34',16,3148),(1520,'19',16,3064),(1521,'19',16,3149),(1522,'18',16,3065),(1523,'22',16,3150),(1524,'20',16,3066),(1525,'0',16,3151),(1526,'13',16,3088),(1527,'27',16,3152),(1528,'30',16,3068),(1529,'0',16,3069),(1530,'18',16,3154),(1531,'40',16,3070),(1532,'21',16,3155),(1533,'28',16,3071),(1534,'11',16,3156),(1535,'33',16,3072),(1536,'38',16,3157),(1537,'45',16,3073),(1538,'17',16,3158),(1539,'32',16,3074),(1540,'21',16,3159),(1541,'29',16,3075),(1542,'0',16,3160),(1543,'31',16,3076),(1544,'28',16,3161),(1545,'30',16,3077),(1546,'21',16,3162),(1547,'0',16,3089),(1548,'24',16,3163),(1549,'18',16,3090),(1550,'0',16,3164),(1551,'0',16,3091),(1552,'30',16,3165),(1553,'30',16,3092),(1554,'27',16,3166),(1555,'40',16,3093),(1556,'18',16,3167),(1557,'31',16,3094),(1558,'30',16,3168),(1559,'27',16,3095),(1560,'23',16,3169),(1561,'31',16,3096),(1562,'29',16,3170),(1563,'41',16,3097),(1564,'34',16,3171),(1565,'25',16,3098),(1566,'16',16,3172),(1567,'29',16,3099),(1568,'40',16,3173),(1569,'19',16,3100),(1570,'35',16,3175),(1571,'17',16,3101),(1572,'0',16,3176),(1573,'27',16,3102),(1574,'32',16,3177),(1575,'26',16,3103),(1576,'22',16,3178),(1577,'24',16,3179),(1578,'31',16,3180),(1579,'38',16,3181),(1580,'19',16,3182),(1581,'32',16,3183),(1584,'0',16,4979),(1585,'19',16,4980),(1587,'0',16,3274),(1588,'22',16,3275),(1589,'26',16,3276),(1590,'36',16,3277),(1591,'0',16,3278),(1592,'0',16,3279),(1593,'32',16,3281),(1594,'0',16,3282),(1595,'21',16,3283),(1596,'25',16,3284),(1597,'0',16,3285),(1598,'23',16,3286),(1599,'27',16,3287),(1600,'0',16,3288),(1601,'30',16,3289),(1602,'0',16,3290),(1603,'30',16,3291),(1604,'0',16,3292),(1605,'24',16,3293),(1606,'36',16,3294),(1607,'23',16,3295),(1608,'41',16,3296),(1609,'0',16,3297),(1610,'21',16,3298),(1611,'45',16,3299),(1612,'13',16,3300),(1613,'0',16,3301),(1614,'19',16,3302),(1615,'0',16,3303),(1616,'15',16,3304),(1617,'35',16,3305),(1618,'19',16,3306),(1619,'12',16,3307),(1620,'0',16,3308),(1621,'23',16,3309),(1622,'33',16,3310),(1623,'14',16,3311),(1624,'16',16,3312),(1625,'42',16,3313),(1626,'26',16,3314),(1627,'19',16,3315),(1628,'13',16,3316),(1629,'14',16,3317),(1630,'22',16,3318),(1631,'25',16,3319),(1632,'30',16,3320),(1633,'30',16,3321),(1634,'20',16,3322),(1635,'23',16,3323),(1636,'26',16,3324),(1637,'22',16,3325),(1638,'0',16,3326),(1639,'30',16,3327),(1640,'24',16,3328),(1641,'0',16,3329),(1642,'14',16,3330),(1643,'0',16,3331),(1644,'25',16,3332),(1645,'0',16,3333),(1646,'12',16,3334),(1647,'31',16,3335),(1648,'28',16,3336),(1649,'19',16,3337),(1650,'26',16,3338),(1651,'32',16,3339),(1652,'26',16,3340),(1653,'0',16,3341),(1654,'24',16,3342),(1655,'40',16,3343),(1656,'34',16,3344),(1657,'19',16,3345),(1658,'0',16,3346),(1659,'0',16,3347),(1660,'20',16,3348),(1661,'37',16,3349),(1662,'0',16,3350),(1663,'21',16,3351),(1664,'32',16,3352),(1665,'31',16,3353),(1666,'23',16,3354),(1667,'32',16,3355),(1668,'27',16,3356),(1669,'0',16,3357),(1670,'16',16,3358),(1671,'0',16,3359),(1672,'26',16,3360),(1673,'19',16,3361),(1675,'24',16,3448),(1676,'28',16,3449),(1677,'41',16,3450),(1678,'16',16,3451),(1679,'23',16,3452),(1680,'30',16,3453),(1681,'21',16,3454),(1682,'19',16,3455),(1683,'17',16,3456),(1684,'44',16,3457),(1685,'0',16,3458),(1686,'0',16,3459),(1687,'33',16,3460),(1688,'20',16,3461),(1689,'33',16,3462),(1690,'0',16,3463),(1691,'25',16,3464),(1692,'31',16,3465),(1693,'23',16,3466),(1694,'0',16,3467),(1695,'0',16,3468),(1696,'28',16,3469),(1697,'12',16,3470),(1698,'14',16,3471),(1699,'17',16,3472),(1700,'22',16,3473),(1701,'26',16,3474),(1702,'24',16,3475),(1703,'21',16,3476),(1704,'17',16,3477),(1705,'31',16,3478),(1706,'21',16,3480),(1707,'0',16,3481),(1708,'22',16,3482),(1709,'25',16,3483),(1710,'20',16,3484),(1711,'32',16,3485),(1712,'39',16,3486),(1713,'29',16,3487),(1714,'17',16,3488),(1715,'0',16,3489),(1716,'16',16,3490),(1717,'0',16,3491),(1718,'0',16,3492),(1719,'17',16,3493),(1720,'30',16,3494),(1721,'35',16,3496),(1722,'31',16,3497),(1723,'18',16,3498),(1724,'0',16,3499),(1725,'25',16,3500),(1726,'22',16,3501),(1727,'31',16,3502),(1728,'28',16,3503),(1729,'35',16,3504),(1730,'26',16,3505),(1731,'35',16,3506),(1732,'37',16,3507),(1733,'26',16,3508),(1734,'0',16,3509),(1735,'24',16,3510),(1736,'29',16,3511),(1737,'40',16,3512),(1738,'28',16,3513),(1739,'0',16,3514),(1740,'17',16,3515),(1741,'21',16,3516),(1742,'27',16,3517),(1743,'34',16,3518),(1744,'33',16,3519),(1745,'17',16,3520),(1746,'29',16,3521),(1747,'29',16,3522),(1748,'27',16,3523),(1749,'21',16,3524),(1750,'22',16,3525),(1751,'21',16,3526),(1752,'29',16,3527),(1753,'23',16,3528),(1754,'39',16,3529),(1755,'38',16,3530),(1756,'42',16,3531),(1757,'33',16,3532),(1758,'24',16,3534),(1759,'35',16,3535),(1761,'25',16,3536),(1762,'24',16,3537),(1763,'34',16,3538),(1764,'15',16,3539),(1765,'0',16,3540),(1766,'27',16,3541),(1768,'31',16,3543),(1769,'38',16,3544),(1770,'26',16,3545),(1771,'35',16,3546),(1772,'27',16,3547),(1773,'16',16,3548),(1774,'21',16,3549),(1775,'24',16,3550),(1776,'0',16,3551),(1777,'0',16,3552),(1778,'16',16,3553),(1779,'31',16,3554),(1780,'0',16,3555),(1781,'20',16,3556),(1782,'23',16,3557),(1783,'0',16,3558),(1784,'27',16,3559),(1785,'28',16,3560),(1786,'23',16,3561),(1787,'32',16,3562),(1788,'22',16,3564),(1789,'40',16,3565),(1790,'31',16,3566),(1791,'0',16,3567),(1792,'0',16,3568),(1793,'25',16,3569),(1794,'9',16,3570),(1795,'20',16,3571),(1796,'39',16,3572),(1797,'0',16,3573),(1798,'23',16,3574),(1799,'0',16,3575),(1800,'0',16,3576),(1801,'32',16,3577),(1802,'23',16,3578),(1803,'15',16,3579),(1804,'16',16,3580),(1805,'14',16,3581),(1806,'22',16,3582),(1807,'0',16,3583),(1808,'27',16,3584),(1809,'32',16,3585),(1810,'28',16,3586),(1811,'28',16,3587),(1812,'25',16,3588),(1813,'25',16,3589),(1814,'23',16,3590),(1815,'22',16,3591),(1816,'0',16,3592),(1817,'0',16,3593),(1818,'37',16,3594),(1819,'18',16,3595),(1820,'26',16,3596),(1821,'29',16,3597),(1822,'31',16,3598),(1823,'34',16,3599),(1824,'32',16,3600),(1825,'0',16,3601),(1826,'36',16,3602),(1827,'17',16,3603),(1828,'17',16,3604),(1829,'9',16,3605),(1830,'22',16,3606),(1831,'23',16,3607),(1832,'21',16,3608),(1833,'22',16,3609),(1834,'26',16,3610),(1836,'30',16,3612),(1837,'37',16,3613),(1838,'0',16,3614),(1839,'26',16,3615),(1840,'42',16,3616),(1841,'25',16,3617),(1842,'25',16,3618),(1843,'31',16,3619),(1844,'43',16,3620),(1845,'21',16,3621),(1846,'31',16,3622),(1847,'28',16,3623),(1848,'21',16,3624),(1849,'38',16,3625),(1850,'20',16,3626),(1851,'47',16,3627),(1852,'22',16,3628),(1853,'23',16,3629),(1854,'15',16,3630),(1855,'34',16,3631),(1856,'28',16,3632),(1857,'27',16,3633),(1858,'26',16,3634),(1859,'27',16,3635),(1860,'17',16,3636),(1861,'30',16,3637),(1862,'0',16,3638),(1863,'23',16,3639),(1865,'24',16,3726),(1866,'30',16,3728),(1867,'30',16,3727),(1868,'26',16,3729),(1869,'29',16,3730),(1870,'20',16,3731),(1871,'0',16,3732),(1872,'23',16,3733),(1873,'0',16,3734),(1874,'20',16,3735),(1875,'29',16,3736),(1876,'7',16,3737),(1877,'18',16,3738),(1878,'27',16,3739),(1879,'33',16,3740),(1880,'29',16,3741),(1881,'26',16,3742),(1882,'0',16,3743),(1883,'26',16,3744),(1884,'30',16,3745),(1885,'23',16,3746),(1886,'22',16,3747),(1887,'20',16,3748),(1888,'23',16,3749),(1889,'16',16,3750),(1890,'25',16,3751),(1891,'14',16,3752),(1892,'38',16,3753),(1893,'25',16,3755),(1894,'0',16,3756),(1895,'36',16,3757),(1896,'0',16,3758),(1897,'21',16,3759),(1898,'34',16,3760),(1899,'23',16,3761),(1900,'34',16,3762),(1901,'0',16,3763),(1902,'32',16,3764),(1903,'17',16,3765),(1904,'25',16,3766),(1905,'36',16,3767),(1906,'13',16,3768),(1907,'26',16,3769),(1908,'40',16,3770),(1909,'23',16,3771),(1910,'29',16,3773),(1911,'27',16,3772),(1912,'37',16,3774),(1913,'28',16,3775),(1914,'0',16,3776),(1915,'32',16,3777),(1916,'0',16,3778),(1917,'40',16,3779),(1918,'25',16,3780),(1919,'30',16,3781),(1920,'27',16,3782),(1921,'24',16,3783),(1922,'38',16,3784),(1923,'32',16,3785),(1924,'33',16,3786),(1925,'26',16,3787),(1926,'34',16,3788),(1927,'17',16,3789),(1928,'25',16,3790),(1929,'0',16,3791),(1930,'0',16,3792),(1931,'10',16,3793),(1932,'28',16,3794),(1933,'32',16,3795),(1934,'14',16,3796),(1935,'41',16,3797),(1936,'35',16,3798),(1937,'34',16,3799),(1939,'38',16,3800),(1940,'29',16,3801),(1941,'26',16,3802),(1942,'22',16,3803),(1943,'30',16,3804),(1944,'0',16,3805),(1945,'34',16,3806),(1946,'0',16,3807),(1947,'17',16,3808),(1948,'21',16,3809),(1949,'29',16,3810),(1950,'30',16,3811),(1951,'26',16,3812),(1952,'29',16,3813),(1953,'24',16,3814),(1954,'23',16,3815),(1955,'19',16,3816),(1956,'0',16,3817),(1957,'0',16,3818),(1958,'37',16,3819),(1959,'28',16,3820),(1960,'32',16,3821),(1961,'29',16,3822),(1962,'27',16,3823),(1963,'0',16,3824),(1964,'33',16,3825),(1965,'32',16,3826),(1966,'0',16,3827),(1967,'18',16,3828),(1968,'30',16,3829),(1969,'24',16,3830),(1970,'26',16,3831),(1971,'33',16,3832),(1972,'0',16,3833),(1973,'30',16,3834),(1974,'22',16,3835),(1975,'27',16,3836),(1976,'15',16,3837),(1977,'36',16,3838),(1978,'0',16,3839),(1979,'0',16,3840),(1980,'28',16,3841),(1981,'21',16,3842),(1982,'28',16,3843),(1983,'0',16,3844),(1984,'18',16,3845),(1985,'21',16,3846),(1986,'33',16,3847),(1987,'0',16,3848),(1988,'33',16,3849),(1989,'32',16,3850),(1990,'28',16,3851),(1991,'39',16,3852),(1992,'26',16,3853),(1993,'27',16,3854),(1994,'0',16,3855),(1995,'31',16,3856),(1996,'0',16,3857),(1997,'35',16,3858),(1998,'23',16,3859),(1999,'13',16,3860),(2000,'26',16,3861),(2001,'0',16,3862),(2002,'34',16,3863),(2003,'21',16,3864),(2004,'19',16,3865),(2005,'18',16,3866),(2006,'0',16,3867),(2007,'25',16,3868),(2008,'27',16,3869),(2009,'40',16,3870),(2010,'39',16,3871),(2011,'24',16,3872),(2012,'25',16,3873),(2013,'27',16,3874),(2015,'22',16,3640),(2016,'24',16,3641),(2017,'0',16,3642),(2018,'28',16,3643),(2019,'20',16,3644),(2020,'17',16,3645),(2021,'0',16,3646),(2022,'0',16,3647),(2023,'23',16,3648),(2024,'25',16,3649),(2025,'31',16,3650),(2026,'27',16,3651),(2027,'31',16,3652),(2028,'16',16,3653),(2029,'17',16,3654),(2030,'28',16,3655),(2031,'0',16,3656),(2032,'0',16,3657),(2033,'18',16,3658),(2034,'26',16,3659),(2035,'28',16,3660),(2036,'0',16,3661),(2037,'21',16,3662),(2038,'15',16,3663),(2039,'25',16,3664),(2040,'35',16,3665),(2041,'36',16,3666),(2042,'0',16,3667),(2043,'18',16,3668),(2044,'38',16,3669),(2045,'13',16,3670),(2046,'10',16,3671),(2047,'22',16,3672),(2048,'13',16,3673),(2049,'34',16,3674),(2050,'32',16,3675),(2051,'29',16,3676),(2052,'21',16,3677),(2053,'27',16,3678),(2054,'0',16,3679),(2055,'25',16,3680),(2056,'0',16,3681),(2057,'24',16,3682),(2058,'20',16,3683),(2177,'27',16,4135),(2178,'23',16,4136),(2179,'28',16,4137),(2180,'0',16,4138),(2181,'26',16,4139),(2182,'27',16,4140),(2183,'18',16,4141),(2184,'35',16,4142),(2185,'40',16,4143),(2186,'37',16,4144),(2187,'21',16,4145),(2188,'0',16,4146),(2189,'18',16,4147),(2190,'0',16,4148),(2191,'26',16,4149),(2192,'24',16,4150),(2193,'22',16,4151),(2194,'18',16,4152),(2195,'0',16,4153),(2196,'25',16,4154),(2197,'0',16,4156),(2198,'24',16,4155),(2199,'35',16,4157),(2200,'31',16,4158),(2201,'28',16,4159),(2202,'29',16,4160),(2203,'30',16,4161),(2204,'21',16,4162),(2205,'22',16,4163),(2206,'28',16,4165),(2207,'17',16,4166),(2208,'26',16,4167),(2209,'23',16,4168),(2210,'25',16,4169),(2211,'0',16,4170),(2212,'25',16,4171),(2213,'28',16,4172),(2214,'22',16,4173),(2215,'23',16,4174),(2216,'32',16,4175),(2217,'0',16,4176),(2218,'27',16,4177),(2219,'19',16,4178),(2220,'0',16,4179),(2221,'35',16,4180),(2222,'22',16,4181),(2223,'20',16,4182),(2224,'0',16,4183),(2225,'31',16,4184),(2226,'26',16,4186),(2227,'21',16,4185),(2228,'34',16,4189),(2229,'0',16,4187),(2230,'18',16,4188),(2231,'18',16,4190),(2232,'22',16,4191),(2233,'22',16,4192),(2234,'19',16,4193),(2235,'0',16,4194),(2236,'0',16,4195),(2237,'35',16,4196),(2238,'24',16,4197),(2239,'36',16,4198),(2240,'31',16,4199),(2241,'0',16,4200),(2242,'30',16,4201),(2243,'0',16,4202),(2244,'0',16,4203),(2245,'20',16,4205),(2246,'0',16,4204),(2247,'0',16,4208),(2248,'13',16,4206),(2249,'43',16,4207),(2250,'31',16,4209),(2251,'28',16,4210),(2252,'32',16,4211),(2253,'17',16,4212),(2254,'37',16,4213),(2255,'32',16,4214),(2256,'33',16,4215),(2257,'26',16,4216),(2258,'28',16,4217),(2259,'20',16,4218),(2260,'37',16,4219),(2261,'0',16,4220),(2262,'0',16,4221),(2263,'36',16,4222),(2264,'28',16,4223),(2265,'28',16,4224),(2266,'16',16,4225),(2267,'0',16,4226),(2268,'27',16,4227),(2269,'0',16,4228),(2270,'18',16,4164),(2271,'20',16,4229),(2272,'15',16,4230),(2273,'31',16,4231),(2274,'21',16,4232),(2275,'21',16,4233),(2276,'31',16,4234),(2277,'0',16,4235),(2278,'14',16,4236),(2279,'22',16,4237),(2280,'32',16,4238),(2281,'31',16,4239),(2282,'31',16,4240),(2283,'0',16,4241),(2284,'24',16,4242),(2285,'18',16,4243),(2286,'20',16,4244),(2287,'23',16,4245),(2288,'25',16,4247),(2289,'21',16,4246),(2290,'31',16,4248),(2291,'11',16,4249),(2292,'0',16,4251),(2294,'19',16,4348),(2295,'18',16,4349),(2296,'24',16,4350),(2297,'28',16,4351),(2298,'8',16,4352),(2299,'0',16,4353),(2300,'21',16,4354),(2301,'22',16,4355),(2302,'24',16,4356),(2303,'21',16,4357),(2304,'29',16,4358),(2305,'26',16,4359),(2306,'34',16,4360),(2307,'25',16,4361),(2308,'26',16,4362),(2309,'35',16,4363),(2310,'22',16,4364),(2311,'19',16,4365),(2312,'33',16,4366),(2313,'0',16,4367),(2314,'30',16,4368),(2315,'0',16,4369),(2316,'21',16,4370),(2317,'17',16,4371),(2318,'27',16,4372),(2319,'19',16,4373),(2320,'11',16,4374),(2321,'0',16,4375),(2322,'21',16,4376),(2323,'40',16,4377),(2324,'21',16,4378),(2325,'19',16,4379),(2326,'20',16,4380),(2327,'0',16,4381),(2328,'26',16,4382),(2329,'15',16,4383),(2330,'14',16,4384),(2331,'34',16,4385),(2332,'20',16,4386),(2333,'26',16,4387),(2334,'0',16,4388),(2335,'38',16,4389),(2336,'20',16,4390),(2337,'24',16,4391),(2338,'22',16,4392),(2339,'23',16,4393),(2340,'0',16,4394),(2341,'29',16,4395),(2342,'26',16,4396),(2343,'20',16,4397),(2344,'35',16,4398),(2345,'19',16,4399),(2346,'31',16,4400),(2347,'28',16,4401),(2348,'0',16,4402),(2349,'0',16,4403),(2350,'0',16,4404),(2351,'24',16,4405),(2352,'21',16,4406),(2353,'23',16,4407),(2354,'0',16,4408),(2355,'34',16,4409),(2356,'0',16,4410),(2357,'0',16,4411),(2358,'0',16,4412),(2359,'22',16,4413),(2360,'26',16,4414),(2361,'21',16,4415),(2362,'20',16,4416),(2363,'23',16,4417),(2364,'25',16,4418),(2365,'22',16,4419),(2366,'16',16,4420),(2367,'20',16,4421),(2368,'34',16,4422),(2369,'36',16,4424),(2370,'21',16,4425),(2371,'36',16,4426),(2372,'0',16,4427),(2373,'13',16,4428),(2374,'21',16,4429),(2461,'18',16,4431),(2462,'21',16,4432),(2464,'25',16,4433),(2465,'29',16,4613),(2466,'22',16,4434),(2467,'26',16,4614),(2468,'30',16,4615),(2469,'21',16,4436),(2470,'0',16,4616),(2471,'37',16,4437),(2472,'26',16,4617),(2473,'20',16,4438),(2474,'20',16,4618),(2475,'19',16,4439),(2476,'29',16,4440),(2477,'27',16,4620),(2478,'27',16,4441),(2479,'30',16,4621),(2480,'33',16,4442),(2481,'0',16,4622),(2482,'30',16,4444),(2483,'23',16,4623),(2484,'31',16,4445),(2485,'16',16,4624),(2486,'28',16,4446),(2487,'34',16,4625),(2488,'14',16,4447),(2489,'36',16,4626),(2490,'18',16,4448),(2491,'22',16,4627),(2492,'39',16,4450),(2493,'40',16,4628),(2494,'18',16,4451),(2495,'20',16,4629),(2496,'21',16,4453),(2497,'0',16,4630),(2498,'12',16,4454),(2499,'20',16,4631),(2500,'27',16,4456),(2501,'28',16,4632),(2502,'9',16,4457),(2503,'26',16,4633),(2504,'17',16,4458),(2505,'19',16,4634),(2506,'24',16,4460),(2507,'23',16,4635),(2508,'27',16,4461),(2509,'15',16,4636),(2510,'11',16,4463),(2511,'32',16,4637),(2512,'33',16,4465),(2513,'31',16,4638),(2514,'23',16,4466),(2515,'20',16,4639),(2516,'23',16,4467),(2517,'30',16,4640),(2518,'31',16,4468),(2519,'25',16,4641),(2520,'29',16,4470),(2521,'25',16,4642),(2522,'26',16,4471),(2523,'25',16,4643),(2524,'27',16,4472),(2525,'0',16,4644),(2526,'40',16,4475),(2527,'22',16,4645),(2528,'13',16,4476),(2529,'0',16,4646),(2530,'19',16,4477),(2531,'36',16,4647),(2532,'32',16,4478),(2533,'31',16,4648),(2534,'22',16,4480),(2535,'29',16,4649),(2536,'28',16,4481),(2537,'20',16,4650),(2538,'23',16,4483),(2539,'31',16,4651),(2540,'25',16,4484),(2541,'0',16,4652),(2542,'21',16,4485),(2543,'32',16,4653),(2544,'19',16,4486),(2545,'0',16,4654),(2546,'27',16,4487),(2547,'26',16,4655),(2548,'24',16,4488),(2549,'28',16,4489),(2550,'28',16,4490),(2551,'25',16,4491),(2552,'23',16,4492),(2553,'24',16,4493),(2554,'24',16,4494),(2555,'33',16,4495),(2556,'21',16,4496),(2557,'24',16,4498),(2558,'34',16,4499),(2559,'16',16,4500),(2560,'28',16,4501),(2561,'29',16,4502),(2562,'19',16,4503),(2563,'21',16,4504),(2564,'36',16,4505),(2565,'23',16,4506),(2566,'17',16,4507),(2567,'24',16,4509),(2568,'30',16,4510),(2569,'11',16,4512),(2570,'20',16,4513),(2571,'19',16,4514),(2572,'40',16,4515),(2573,'0',16,4443),(2574,'0',16,4449),(2575,'0',16,4452),(2576,'0',16,4455),(2577,'0',16,4459),(2578,'0',16,4462),(2579,'0',16,4464),(2580,'0',16,4469),(2581,'0',16,4473),(2582,'0',16,4474),(2583,'0',16,4479),(2584,'0',16,4482),(2585,'0',16,4497),(2586,'0',16,4508),(2587,'0',16,4511),(2589,'29',16,4663),(2590,'25',16,4688),(2591,'23',16,4670),(2592,'21',16,4656),(2593,'20',16,4676),(2594,'25',16,4687),(2595,'24',16,4690),(2596,'31',16,4682),(2597,'30',16,4686),(2598,'29',16,4662),(2599,'27',16,4678),(2600,'35',16,4657),(2601,'15',16,4664),(2602,'22',16,4684),(2603,'22',16,4685),(2604,'34',16,4667),(2605,'28',16,4660),(2606,'35',16,4692),(2607,'32',16,4689),(2608,'41',16,4693),(2609,'25',16,4672),(2610,'14',16,4673),(2611,'30',16,4658),(2612,'35',16,4671),(2613,'32',16,4674),(2614,'26',16,4666),(2615,'15',16,4697),(2616,'31',16,4680),(2617,'31',16,4675),(2618,'24',16,4679),(2619,'25',16,4677),(2620,'0',16,4659),(2621,'0',16,4661),(2622,'0',16,4665),(2623,'0',16,4668),(2624,'0',16,4669),(2625,'0',16,4681),(2626,'0',16,4683),(2627,'0',16,4691),(2628,'0',16,4694),(2629,'0',16,4695),(2630,'0',16,4696),(2632,'18',16,3989),(2633,'21',16,3990),(2634,'19',16,3991),(2635,'31',16,3992),(2636,'29',16,3993),(2637,'0',16,3994),(2638,'35',16,3995),(2639,'23',16,3996),(2640,'28',16,3997),(2641,'21',16,3998),(2642,'35',16,3999),(2643,'0',16,4000),(2644,'36',16,4001),(2645,'0',16,4002),(2646,'23',16,4003),(2647,'24',16,4004),(2648,'37',16,4005),(2649,'23',16,4006),(2650,'34',16,4007),(2651,'21',16,4008),(2652,'21',16,4009),(2653,'29',16,4010),(2654,'32',16,4011),(2655,'36',16,4012),(2656,'37',16,4013),(2657,'23',16,4014),(2658,'21',16,4015),(2659,'39',16,4016),(2660,'0',16,4017),(2661,'33',16,4018),(2662,'30',16,4019),(2663,'0',16,4020),(2664,'21',16,4021),(2665,'0',16,4022),(2666,'24',16,4023),(2667,'30',16,4024),(2668,'24',16,4025),(2669,'32',16,4026),(2670,'34',16,4027),(2671,'26',16,4028),(2672,'22',16,4029),(2673,'30',16,4030),(2674,'42',16,4031),(2675,'31',16,4032),(2676,'31',16,4033),(2677,'29',16,4034),(2678,'31',16,4035),(2679,'29',16,4036),(2680,'25',16,4037),(2681,'32',16,4038),(2682,'22',16,4039),(2683,'20',16,4040),(2684,'21',16,4041),(2685,'20',16,4042),(2686,'0',16,4043),(2687,'0',16,4044),(2688,'39',16,4045),(2689,'0',16,4046),(2690,'35',16,4047),(2691,'14',16,4048),(2692,'20',16,4049),(2693,'22',16,4050),(2694,'42',16,4051),(2695,'24',16,4052),(2696,'25',16,4053),(2697,'0',16,4054),(2698,'26',16,4055),(2699,'32',16,4056),(2700,'0',16,4057),(2701,'15',16,4058),(2702,'42',16,4059),(2703,'25',16,4060),(2704,'22',16,4061),(2705,'0',16,4062),(2706,'0',16,4063),(2707,'0',16,4064),(2708,'32',16,4065),(2709,'28',16,4066),(2710,'25',16,4067),(2711,'18',16,4068),(2712,'30',16,4069),(2713,'37',16,4070),(2714,'20',16,4071),(2715,'19',16,4072),(2716,'19',16,4073),(2717,'14',16,4074),(2718,'18',16,4075),(2719,'31',16,4076),(2720,'18',16,4077),(2721,'33',16,4078),(2722,'0',16,4079),(2723,'32',16,4080),(2724,'40',16,4081),(2725,'31',16,4082),(2726,'22',16,4083),(2727,'23',16,4084),(2728,'28',16,4085),(2729,'0',16,4086),(2730,'35',16,4087),(2731,'35',16,4088),(2732,'30',16,4089),(2733,'30',16,4090),(2734,'22',16,4091),(2735,'22',16,4092),(2736,'42',16,4093),(2737,'0',16,4094),(2738,'0',16,4095),(2739,'15',16,4096),(2740,'18',16,4097),(2741,'31',16,4098),(2742,'37',16,4099),(2743,'22',16,4100),(2744,'26',16,4101),(2745,'23',16,4102),(2746,'12',16,4103),(2747,'13',16,4104),(2748,'29',16,4105),(2749,'0',16,4106),(2750,'37',16,4107),(2751,'0',16,4108),(2753,'20',16,4775),(2754,'13',16,4776),(2755,'33',16,4777),(2756,'19',16,4778),(2757,'28',16,4779),(2758,'33',16,4780),(2759,'0',16,4781),(2760,'22',16,4782),(2761,'29',16,4783),(2762,'31',16,4784),(2763,'13',16,4785),(2764,'17',16,4786),(2765,'25',16,4787),(2766,'29',16,4788),(2767,'24',16,4789),(2768,'28',16,4790),(2769,'24',16,4791),(2770,'14',16,4792),(2771,'31',16,4793),(2772,'39',16,4794),(2773,'27',16,4795),(2774,'24',16,4796),(2775,'23',16,4797),(2776,'25',16,4798),(2777,'25',16,4799),(2778,'24',16,4800),(2779,'19',16,4801),(2780,'30',16,4802),(2781,'23',16,4803),(2782,'14',16,4804),(2783,'20',16,4805),(2784,'20',16,4806),(2785,'19',16,4807),(2786,'0',16,4808),(2787,'32',16,4809),(2788,'34',16,4810),(2789,'0',16,4811),(2790,'22',16,4812),(2791,'14',16,4813),(2792,'30',16,4814),(2793,'32',16,4815),(2794,'31',16,4816),(2795,'31',16,4817),(2796,'0',16,4818),(2797,'33',16,4819),(2798,'0',16,4820),(2799,'40',16,4821),(2800,'0',16,4822),(2801,'11',16,4823),(2802,'0',16,4824),(2803,'22',16,4825),(2804,'29',16,4826),(2805,'37',16,4828),(2806,'25',16,4829),(2807,'22',16,4830),(2808,'15',16,4831),(2809,'24',16,4832),(2810,'14',16,4833),(2811,'22',16,4834),(2812,'18',16,4835),(2813,'22',16,4836),(2814,'24',16,4837),(2815,'21',16,4838),(2816,'35',16,4839),(2817,'0',16,4840),(2818,'30',16,4841),(2819,'19',16,4842),(2820,'0',16,4843),(2821,'29',16,4844),(2822,'27',16,4845),(2823,'23',16,4846),(2824,'27',16,4847),(2825,'39',16,4848),(2826,'24',16,4849),(2827,'0',16,4850),(2829,'0',16,3875),(2830,'0',16,3877),(2831,'0',16,3885),(2832,'0',16,3889),(2833,'0',16,3891),(2834,'0',16,3899),(2835,'0',16,3906),(2836,'0',16,3908),(2837,'0',16,3909),(2838,'0',16,3918),(2839,'0',16,3930),(2840,'0',16,3940),(2841,'0',16,3948),(2842,'0',16,3954),(2843,'0',16,3966),(2844,'0',16,3969),(2845,'0',16,3975),(2846,'0',16,3981),(2847,'0',16,3985),(2848,'0',16,3986),(2849,'35',16,3876),(2850,'31',16,3878),(2851,'29',16,3879),(2852,'23',16,3880),(2853,'27',16,3881),(2854,'27',16,3882),(2855,'34',16,3883),(2856,'32',16,3884),(2857,'21',16,3886),(2858,'27',16,3887),(2859,'35',16,3888),(2860,'43',16,3890),(2861,'36',16,3892),(2862,'28',16,3893),(2863,'24',16,3894),(2864,'28',16,3895),(2865,'26',16,3896),(2866,'22',16,3897),(2867,'30',16,3898),(2868,'10',16,3900),(2869,'20',16,3901),(2870,'10',16,3902),(2871,'21',16,3903),(2872,'19',16,3904),(2873,'33',16,3905),(2874,'24',16,3907),(2875,'25',16,3910),(2876,'33',16,3911),(2877,'39',16,3912),(2878,'31',16,3914),(2879,'36',16,3915),(2880,'20',16,3916),(2881,'20',16,3917),(2882,'24',16,3919),(2883,'22',16,3921),(2884,'31',16,3922),(2885,'36',16,3923),(2886,'21',16,3920),(2887,'27',16,3924),(2888,'25',16,3925),(2889,'26',16,3926),(2890,'26',16,3927),(2891,'29',16,3928),(2892,'33',16,3929),(2893,'25',16,3931),(2894,'21',16,3932),(2895,'15',16,3933),(2896,'18',16,3934),(2897,'27',16,3935),(2898,'30',16,3936),(2899,'30',16,3937),(2900,'17',16,3938),(2901,'24',16,3939),(2902,'28',16,3941),(2903,'16',16,3942),(2904,'31',16,3943),(2905,'31',16,3944),(2906,'30',16,3945),(2907,'20',16,3946),(2908,'26',16,3947),(2909,'23',16,3949),(2910,'27',16,3950),(2911,'26',16,3951),(2912,'19',16,3952),(2913,'25',16,3953),(2914,'22',16,3955),(2915,'28',16,3956),(2916,'34',16,3957),(2917,'21',16,3958),(2918,'31',16,3959),(2919,'45',16,3960),(2920,'16',16,3961),(2921,'34',16,3962),(2922,'21',16,3963),(2923,'20',16,3964),(2924,'33',16,3965),(2925,'35',16,3967),(2926,'40',16,3968),(2927,'27',16,3970),(2928,'36',16,3971),(2929,'39',16,3972),(2930,'39',16,3973),(2931,'13',16,3974),(2932,'23',16,3976),(2933,'8',16,3977),(2934,'19',16,3978),(2935,'18',16,3979),(2936,'19',16,3980),(2937,'30',16,3982),(2938,'15',16,3983),(2939,'18',16,3984),(2940,'30',16,3987),(2941,'6',16,3988),(2943,'0',16,4851),(2944,'28',16,4852),(2945,'29',16,4853),(2946,'29',16,4854),(2947,'0',16,4855),(2948,'19',16,4856),(2949,'19',16,4857),(2950,'21',16,4858),(2951,'21',16,4859),(2952,'27',16,4860),(2953,'17',16,4861),(2954,'10',16,4862),(2955,'17',16,4863),(2956,'16',16,4864),(2957,'19',16,4865),(2958,'26',16,4866),(2959,'26',16,4867),(2960,'28',16,4868),(2961,'0',16,4869),(2962,'21',16,4870),(2963,'0',16,4871),(2964,'0',16,4872),(2965,'41',16,4873),(2966,'28',16,4874),(2967,'33',16,4875),(2968,'34',16,4876),(2969,'28',16,4877),(2970,'13',16,4878),(2971,'31',16,4879),(2972,'32',16,4880),(2973,'37',16,4881),(2974,'19',16,4882),(2975,'0',16,4883),(2976,'21',16,4884),(2977,'36',16,4885),(2978,'19',16,4886),(2979,'0',16,4887),(2980,'20',16,4888),(2981,'25',16,4889),(2982,'30',16,4890),(2983,'0',16,4891),(2984,'21',16,4892),(2985,'31',16,4893),(2986,'0',16,4894),(2987,'29',16,4895),(2988,'38',16,4896),(2989,'22',16,4897),(2990,'17',16,4898),(2991,'0',16,4899),(2992,'0',16,4900),(2993,'0',16,4901),(2994,'36',16,4902),(2995,'0',16,4903),(2996,'36',16,4904),(2997,'10',16,4905),(2998,'33',16,4906),(2999,'21',16,4907),(3000,'23',16,4908),(3001,'39',16,4909),(3002,'35',16,4910),(3003,'35',16,4911),(3004,'30',16,4912),(3005,'24',16,4913),(3006,'14',16,4914),(3008,'20',16,5037),(3009,'20',16,5038),(3010,'0',16,5039),(3011,'21',16,5040),(3012,'0',16,5041),(3013,'34',16,5042),(3014,'24',16,5043),(3015,'32',16,5044),(3016,'30',16,5045),(3017,'44',16,5046),(3018,'24',16,5047),(3019,'40',16,5048),(3020,'30',16,5049),(3021,'25',16,5050),(3022,'0',16,5051),(3023,'28',16,5052),(3024,'35',16,5053),(3025,'25',16,5054),(3026,'26',16,5055),(3027,'13',16,5056),(3028,'0',16,5057),(3029,'21',16,5058),(3030,'0',16,5059),(3031,'0',16,5060),(3032,'28',16,5061),(3033,'16',16,5062),(3034,'33',16,5063),(3035,'0',16,5064),(3036,'23',16,5065),(3037,'33',16,5066),(3038,'26',16,5067),(3039,'20',16,5068),(3040,'0',16,5069),(3041,'36',16,5070),(3042,'32',16,5071),(3043,'36',16,5072),(3044,'32',16,5073),(3045,'38',16,5074),(3046,'38',16,5075),(3047,'39',16,5076),(3048,'31',16,5077),(3049,'39',16,5078),(3050,'24',16,5079),(3051,'37',16,5080),(3052,'22',16,5081),(3053,'0',16,5082),(3054,'39',16,5083),(3055,'0',16,5084),(3056,'13',16,5085),(3057,'45',16,5086),(3058,'30',16,5087),(3059,'14',16,5088),(3060,'32',16,5089),(3061,'30',16,5090),(3062,'25',16,5091),(3063,'31',16,5092),(3064,'31',16,5093),(3065,'33',16,5094),(3066,'24',16,5095),(3067,'40',16,5096),(3069,'0',16,5351),(3070,'0',16,5363),(3071,'0',16,5369),(3072,'0',16,5375),(3073,'0',16,5381),(3074,'0',16,5386),(3075,'0',16,5389),(3076,'0',16,5399),(3077,'0',16,5404),(3078,'35',16,5352),(3079,'16',16,5353),(3080,'28',16,5354),(3081,'15',16,5355),(3082,'23',16,5356),(3083,'31',16,5357),(3084,'11',16,5358),(3085,'24',16,5359),(3086,'27',16,5360),(3087,'34',16,5361),(3088,'37',16,5362),(3089,'30',16,5364),(3090,'24',16,5365),(3091,'27',16,5366),(3092,'23',16,5367),(3093,'25',16,5368),(3094,'26',16,5370),(3095,'32',16,5371),(3096,'30',16,5372),(3097,'13',16,5373),(3098,'20',16,5374),(3099,'32',16,5376),(3100,'20',16,5377),(3101,'39',16,5378),(3102,'31',16,5379),(3103,'31',16,5380),(3104,'20',16,5382),(3105,'32',16,5383),(3106,'26',16,5384),(3107,'31',16,5385),(3108,'16',16,5387),(3109,'27',16,5388),(3110,'17',16,5390),(3111,'28',16,5391),(3112,'25',16,5392),(3113,'19',16,5393),(3114,'37',16,5394),(3115,'26',16,5395),(3116,'20',16,5396),(3117,'30',16,5397),(3118,'19',16,5398),(3119,'25',16,5400),(3120,'27',16,5401),(3121,'33',16,5402),(3122,'27',16,5403),(3123,'32',16,5405),(3194,'25',16,3153),(3195,'42',16,3280),(3204,'24',16,4606),(3207,'14',16,4827),(3211,'30',16,3395),(3214,'26',16,4619),(3435,'4',3,3),(3436,'3',3,1),(3437,'4',3,2),(3441,'0',16,2985),(3442,'25',16,3479),(3443,'16',16,3495),(3444,'23',16,3533),(3445,'0',16,3542),(3446,'36',16,3563),(3447,'20',16,3692),(3448,'0',16,3754),(3449,'16',16,4423),(3450,'25',16,3913),(3451,'23',16,4752),(3452,'0',16,4975),(3453,'32',16,5119),(3455,'32',16,4252),(3456,'19',16,4253),(3457,'19',16,4254),(3458,'0',16,4255),(3459,'25',16,4256),(3460,'0',16,4257),(3461,'18',16,4258),(3462,'0',16,4259),(3463,'21',16,4260),(3464,'16',16,4261),(3465,'20',16,4262),(3466,'21',16,4263),(3467,'6',16,4264),(3468,'28',16,4265),(3469,'0',16,4266),(3470,'0',16,4267),(3471,'0',16,4268),(3472,'20',16,4269),(3473,'30',16,4270),(3474,'10',16,4271),(3475,'34',16,4272),(3476,'0',16,4273),(3477,'24',16,4274),(3478,'24',16,4275),(3479,'24',16,4276),(3480,'10',16,4277),(3481,'15',16,4278),(3482,'16',16,4279),(3483,'27',16,4280),(3484,'31',16,4281),(3485,'42',16,4282),(3486,'33',16,4283),(3487,'0',16,4284),(3488,'21',16,4285),(3489,'25',16,4286),(3490,'0',16,4287),(3491,'0',16,4288),(3492,'34',16,4289),(3493,'32',16,4290),(3494,'14',16,4291),(3495,'28',16,4292),(3496,'28',16,4293),(3497,'30',16,4294),(3498,'36',16,4295),(3499,'30',16,4296),(3500,'25',16,4297),(3501,'30',16,4298),(3502,'20',16,4299),(3503,'24',16,4300),(3504,'0',16,4301),(3505,'23',16,4302),(3506,'37',16,4303),(3507,'0',16,4304),(3508,'0',16,4305),(3509,'22',16,4306),(3510,'0',16,4307),(3511,'26',16,4308),(3512,'33',16,4309),(3513,'28',16,4310),(3514,'17',16,4311),(3515,'35',16,4312),(3516,'33',16,4313),(3517,'26',16,4314),(3518,'0',16,4315),(3519,'23',16,4316),(3520,'0',16,4317),(3521,'0',16,4318),(3522,'19',16,4319),(3523,'0',16,4320),(3524,'20',16,4321),(3525,'25',16,4322),(3526,'18',16,4323),(3527,'12',16,4324),(3528,'31',16,4325),(3529,'37',16,4326),(3530,'27',16,4327),(3531,'0',16,4328),(3532,'0',16,4329),(3533,'30',16,4330),(3534,'21',16,4331),(3535,'37',16,4332),(3536,'33',16,4333),(3537,'0',16,4334),(3538,'21',16,4335),(3540,'30',16,4337),(3541,'25',16,4338),(3542,'25',16,4339),(3543,'28',16,4340),(3544,'38',16,4341),(3545,'18',16,4342),(3546,'40',16,4343),(3547,'25',16,4344),(3548,'27',16,4345),(3549,'42',16,4346),(3550,'0',16,4347),(3555,'26',16,4336),(3557,'17',16,3226),(3613,'0',16,2911),(3614,'34',16,3611),(4217,'165',37,6879),(4218,'190',37,6857),(4219,'170',37,6860),(4220,'235',37,6884),(4221,'202',37,6824),(4222,'0',37,6856),(4223,'169',37,6863),(4224,'176',37,6868),(4225,'98',37,6825),(4226,'204',37,6827),(4227,'226',37,6900),(4229,'0',37,6898),(4230,'187',37,6834),(4231,'209',37,6902),(4232,'197',37,6862),(4233,'210',37,6866),(4234,'150',37,6889),(4235,'205',37,6832),(4236,'209',37,6852),(4237,'147',37,6878),(4238,'218',37,6877),(4239,'194',37,6892),(4240,'206',37,6890),(4241,'222',37,6861),(4242,'184',37,6858),(4243,'148',37,6903),(4244,'184',37,6837),(4245,'222',37,6865),(4246,'186',37,6893),(4247,'150',37,6886),(4248,'122',37,6838),(4249,'117',37,6842),(4250,'202',37,6855),(4251,'215',37,6848),(4254,'197',37,6700),(4255,'187',37,6764),(4256,'190',37,6781),(4257,'137',37,6706),(4258,'168',37,6757),(4259,'119',37,6697),(4260,'233',37,6768),(4261,'235',37,6695),(4262,'212',37,6756),(4263,'195',37,6742),(4264,'212',37,6769),(4265,'206',37,6748),(4266,'234',37,6765),(4267,'207',37,6775),(4268,'189',37,6746),(4269,'193',37,6767),(4270,'220',37,6779),(4271,'183',37,6750),(4272,'105',37,6708),(4273,'211',37,6776),(4274,'216',37,6703),(4275,'190',37,6707),(4276,'202',37,6745),(4277,'241',37,6773),(4278,'168',37,6751),(4279,'173',37,6710),(4280,'157',37,6704),(4281,'114',37,6714),(4282,'226',37,6696),(4283,'151',37,6743),(4284,'225',37,6761),(4285,'185',37,6711),(4286,'224',37,6705),(4287,'202',37,6739),(4288,'207',37,6741),(4289,'216',37,6712),(4290,'221',37,6693),(4291,'161',37,6759),(4292,'166',37,6749),(4293,'214',37,6747),(4294,'158',37,6738),(4295,'221',37,6752),(4296,'88',37,6760),(4297,'158',37,6699),(4298,'211',37,6780),(4299,'149',37,6763),(4300,'87',37,6777),(4302,'212',37,6817),(4303,'209',37,6814),(4304,'175',37,6803),(4305,'142',37,6719),(4306,'0',37,6815),(4307,'203',37,6785),(4308,'207',37,6730),(4309,'219',37,6724),(4310,'175',37,6733),(4311,'224',37,6726),(4312,'0',37,6728),(4313,'115',37,6796),(4314,'0',37,6807),(4315,'227',37,6731),(4316,'0',37,6735),(4317,'191',37,6786),(4318,'239',37,6802),(4319,'204',37,6791),(4320,'191',37,6790),(4321,'201',37,6718),(4322,'225',37,6734),(4323,'124',37,6732),(4324,'217',37,6787),(4325,'193',37,6795),(4326,'171',37,6725),(4327,'214',37,6801),(4328,'0',37,6811),(4329,'155',37,6716),(4330,'125',37,6798),(4331,'113',37,6806),(4332,'166',37,6823),(4333,'209',37,6808),(4334,'238',37,6717),(4335,'0',37,6812),(4336,'88',37,6821),(4337,'203',37,6715),(4338,'208',37,6804),(4339,'150',37,6736),(4340,'189',37,6830),(4342,'210',37,6316),(4343,'63',37,6302),(4344,'210',37,6349),(4345,'215',37,6301),(4346,'183',37,6375),(4347,'215',37,6343),(4348,'0',37,6348),(4349,'87',37,6339),(4350,'220',37,6374),(4351,'207',37,6357),(4352,'217',37,6369),(4353,'174',37,6322),(4354,'207',37,6315),(4355,'104',37,6334),(4356,'156',37,6328),(4357,'155',37,6347),(4358,'198',37,6364),(4359,'199',37,6355),(4360,'225',37,6309),(4361,'217',37,6341),(4362,'193',37,6365),(4363,'212',37,6373),(4364,'193',37,6353),(4365,'0',37,6371),(4366,'222',37,6378),(4367,'138',37,6351),(4368,'186',37,6319),(4369,'0',37,6360),(4370,'206',37,6324),(4371,'193',37,6307),(4372,'155',37,6377),(4373,'177',37,6380),(4374,'73',37,6359),(4375,'220',37,6366),(4376,'218',37,6329),(4377,'0',37,6336),(4378,'217',37,6342),(4379,'25',37,6300),(4380,'161',37,6372),(4381,'191',37,6358),(4382,'63',37,6379),(4383,'197',37,6354),(4384,'233',37,6370),(4385,'213',37,6318),(4386,'232',37,6308),(4387,'203',37,6325),(4388,'157',37,6313),(4389,'174',37,6361),(4390,'151',37,6306),(4391,'100',37,6323),(4392,'214',37,6320),(4393,'202',37,6350),(4394,'191',37,6311),(4395,'226',37,6367),(4396,'167',37,6303),(4397,'218',37,6356),(4398,'208',37,6346),(4400,'168',37,6496),(4401,'188',37,6511),(4402,'225',37,6520),(4403,'110',37,6545),(4404,'0',37,6481),(4405,'161',37,6525),(4406,'211',37,6490),(4407,'197',37,6512),(4408,'0',37,6532),(4409,'187',37,6522),(4410,'190',37,6548),(4411,'167',37,6530),(4412,'177',37,6547),(4413,'173',37,6482),(4414,'84',37,6510),(4415,'177',37,6477),(4416,'124',37,6501),(4417,'187',37,6469),(4418,'190',37,6486),(4419,'150',37,6506),(4420,'0',37,6523),(4421,'227',37,6499),(4422,'176',37,6489),(4423,'175',37,6533),(4424,'128',37,6528),(4425,'187',37,6498),(4426,'197',37,6483),(4427,'220',37,6514),(4428,'189',37,6493),(4429,'211',37,6472),(4430,'152',37,6527),(4431,'201',37,6470),(4432,'225',37,6466),(4433,'109',37,6505),(4434,'227',37,6543),(4435,'208',37,6495),(4436,'187',37,6485),(4437,'169',37,6475),(4438,'227',37,6500),(4439,'220',37,6478),(4440,'0',37,6535),(4441,'224',37,6465),(4442,'185',37,6513),(4443,'157',37,6491),(4444,'220',37,6479),(4445,'81',37,6518),(4446,'122',37,6480),(4447,'224',37,6531),(4448,'169',37,6508),(4449,'224',37,6521),(4450,'174',37,6468),(4451,'161',37,6502),(4452,'94',37,6517),(4453,'133',37,6473),(4455,'117',37,6408),(4456,'102',37,6437),(4457,'195',37,6418),(4458,'200',37,6402),(4459,'157',37,6429),(4460,'221',37,6398),(4461,'205',37,6384),(4462,'158',37,6422),(4463,'0',37,6411),(4464,'197',37,6424),(4465,'224',37,6406),(4466,'0',37,6455),(4467,'236',37,6434),(4468,'210',37,6416),(4469,'165',37,6385),(4470,'229',37,6383),(4471,'210',37,6415),(4472,'224',37,6413),(4473,'176',37,6419),(4474,'208',37,6395),(4475,'0',37,6432),(4476,'161',37,6414),(4477,'169',37,6410),(4479,'228',37,6386),(4480,'193',37,6387),(4481,'168',37,6461),(4482,'201',37,6388),(4483,'200',37,6457),(4484,'209',37,6397),(4485,'219',37,6420),(4486,'107',37,6428),(4487,'207',37,6449),(4488,'164',37,6394),(4489,'82',37,6417),(4490,'238',37,6435),(4491,'173',37,6404),(4492,'216',37,6448),(4493,'147',37,6403),(4494,'173',37,6421),(4495,'234',37,6396),(4496,'198',37,6463),(4497,'221',37,6409),(4498,'185',37,6401),(4499,'206',37,6454),(4500,'224',37,6433),(4501,'167',37,6450),(4502,'235',37,6456),(4503,'52',37,6425),(4504,'165',37,6446),(4506,'176',37,6582),(4507,'204',37,6603),(4508,'198',37,6622),(4509,'207',37,6565),(4510,'0',37,6593),(4511,'226',37,6575),(4512,'134',37,6560),(4513,'179',37,6605),(4514,'231',37,6561),(4515,'220',37,6607),(4516,'202',37,6553),(4517,'58',37,6572),(4518,'213',37,6615),(4519,'228',37,6624),(4520,'211',37,6604),(4521,'186',37,6551),(4522,'206',37,6556),(4523,'151',37,6587),(4524,'225',37,6591),(4525,'145',37,6571),(4526,'105',37,6567),(4527,'199',37,6599),(4528,'0',37,6583),(4529,'104',37,6578),(4530,'223',37,6618),(4531,'180',37,6566),(4532,'0',37,6570),(4533,'215',37,6563),(4534,'219',37,6606),(4535,'195',37,6597),(4536,'167',37,6577),(4537,'64',37,6580),(4538,'207',37,6600),(4539,'218',37,6585),(4540,'215',37,6588),(4541,'99',37,6620),(4542,'195',37,6554),(4543,'0',37,6676),(4544,'199',37,6633),(4546,'185',37,6658),(4547,'101',37,6652),(4548,'191',37,6641),(4549,'169',37,6647),(4550,'216',37,6653),(4551,'101',37,6668),(4552,'168',37,6657),(4553,'204',37,6631),(4554,'184',37,6661),(4555,'208',37,6636),(4556,'195',37,6645),(4557,'205',37,6689),(4558,'199',37,6681),(4559,'209',37,6667),(4560,'212',37,6686),(4561,'212',37,6637),(4562,'200',37,6646),(4563,'217',37,6628),(4564,'212',37,6692),(4565,'234',37,6682),(4566,'202',37,6648),(4567,'170',37,6674),(4568,'229',37,6627),(4569,'0',37,6630),(4570,'178',37,6625),(4571,'214',37,6635),(4572,'206',37,6639),(4573,'212',37,6654),(4574,'67',37,6663),(4575,'184',37,6684),(4576,'186',37,6675),(4577,'214',37,6673),(4578,'208',37,6638),(4579,'189',37,6656),(4659,'147',48,6408),(4661,'114',48,6884),(4662,'132',48,7194),(4663,'0',48,7197),(4664,'154',48,7198),(4665,'95',48,7199),(4666,'86',48,6767),(4667,'125',48,6800),(4668,'123',48,7200),(4669,'0',48,6807),(4670,'151',48,6735),(4671,'79',48,7203),(4672,'136',48,7205),(4673,'73',48,7206),(4674,'89',48,6400),(4675,'119',48,7207),(4676,'96',48,6816),(4677,'118',48,6747),(4678,'89',48,7208),(4679,'80',48,7210),(4680,'143',48,6801),(4681,'117',48,7212),(4682,'126',48,7213),(4683,'90',48,7214),(4684,'0',48,7217),(4685,'121',48,6808),(4686,'117',48,7219),(4687,'125',48,6588),(4688,'131',48,7221),(4689,'130',48,7222),(4691,'101',48,7097),(4692,'91',48,7098),(4693,'120',48,7099),(4694,'137',48,7101),(4695,'132',48,7102),(4696,'144',48,6402),(4697,'109',48,7105),(4698,'125',48,6429),(4699,'132',48,6512),(4700,'121',48,7107),(4701,'52',48,7108),(4702,'86',48,7110),(4703,'123',48,7111),(4704,'143',48,6792),(4705,'109',48,6424),(4706,'134',48,7113),(4707,'91',48,7114),(4708,'0',48,6510),(4709,'0',48,7118),(4710,'114',48,7120),(4711,'108',48,7121),(4712,'152',48,7122),(4713,'104',48,6731),(4714,'141',48,7124),(4715,'125',48,7128),(4716,'128',48,6483),(4717,'108',48,7129),(4718,'111',48,6514),(4719,'114',48,6472),(4720,'0',48,7130),(4721,'138',48,7132),(4722,'103',48,7133),(4723,'70',48,6497),(4724,'30',48,7136),(4726,'126',48,7139),(4727,'106',48,7144),(4728,'51',48,7146),(4729,'136',48,7147),(4730,'151',48,7148),(4731,'92',48,7149),(4732,'90',48,7150),(4754,'101',48,7151),(4755,'77',48,6437),(4756,'118',48,6565),(4757,'160',48,7155),(4758,'55',48,7156),(4759,'120',48,7157),(4760,'118',48,7158),(4761,'105',48,6661),(4762,'110',48,6499),(4763,'132',48,6686),(4764,'0',48,7095),(4765,'127',48,7161),(4766,'140',48,7179),(4767,'135',48,7180),(4769,'141',48,7183),(4770,'53',48,7168),(4771,'101',48,6862),(4772,'78',48,7169),(4773,'122',48,6674),(4774,'120',48,6625),(4775,'129',48,7185),(4776,'98',48,7186),(4777,'117',48,7171),(4778,'67',48,7187),(4779,'107',48,7172),(4780,'115',48,7174),(4781,'149',48,6673),(4869,'5',52,6910),(4870,'8',52,6946),(4871,'10',52,6971),(4872,'8',52,6944),(4873,'5',52,6943),(4874,'4',52,6917),(4875,'7',52,6907),(4876,'8',52,6947),(4877,'5',52,6909),(4878,'7',52,6942),(4879,'6',52,6962),(4880,'5',52,6941),(4881,'4',52,6916),(4882,'6',52,6931),(4883,'4',52,6926),(4884,'5',52,6972),(4885,'7',52,6948),(4886,'7',52,6913),(4887,'3',52,6958),(4888,'5',52,6934),(4889,'6',52,6955),(4890,'7',52,6936),(4891,'6',52,6911),(4892,'2',52,6967),(4893,'8',52,6969),(4894,'6',52,6959),(4896,'6',52,6925),(4897,'3',52,6921),(4898,'7',52,6912),(4899,'7',52,6968),(4900,'9',52,6973),(4901,'8',52,6908),(4902,'7',52,6906),(4903,'6',52,6928),(4904,'6',52,6960),(4906,'8',52,6952),(4907,'6',52,6957),(4908,'8',52,6949),(4909,'7',52,6920),(4910,'7',52,6954),(4911,'8',52,6935),(4912,'3',52,6961),(4913,'7',52,6929),(4914,'6',52,6918),(4915,'6',52,6963),(4916,'8',52,6956),(4919,'8',52,6914),(4920,'8',52,6939),(4922,'5',52,6919),(5017,'0',59,6906),(5019,'3',59,6914),(5020,'6',59,6958),(5021,'9',59,6917),(5022,'6',59,6961),(5023,'6',59,6955),(5024,'5',59,6967),(5025,'9',59,6942),(5026,'7',59,6919),(5058,'6',59,6916),(7798,'4',81,13585),(7799,'2',81,13587),(7801,'3',81,13547),(7804,'4',81,13548),(7805,'4',81,13544),(7807,'4',81,13545),(7809,'2',81,13593),(7813,'4',81,13539),(7815,'3',81,13557),(7816,'3',81,13630),(7818,'4',81,13619),(7820,'3',81,13608),(7822,'3',81,13626),(7823,'4',81,13601),(7824,'3',81,13551),(7825,'4',81,13629),(7826,'3',81,13604),(7829,'4',81,13576),(7830,'4',81,13569),(7831,'4',81,13586),(7832,'4',81,13607),(7834,'4',81,13554),(7836,'4',81,13562),(7839,'3',81,13603),(7841,'4',81,13561),(7842,'4',81,13581),(7843,'4',81,13616),(7844,'3',81,13546),(7845,'4',81,13550),(7846,'3',81,13632),(7849,'3',81,13595),(7850,'0',81,13621),(7851,'4',81,13636),(7853,'4',81,13615),(7854,'4',81,13594),(7857,'4',81,13567),(7858,'4',81,13614),(7866,'4',81,13611),(7867,'4',81,13620),(7869,'4',81,13577),(7870,'4',81,13542),(7871,'4',81,13600),(7874,'4',81,13606),(7875,'4',81,13622),(7878,'4',81,13638),(7879,'2',81,13578),(7883,'3',81,13633),(7884,'4',81,13538),(7885,'4',81,13566),(7886,'3',81,13612),(7887,'4',81,13635),(7888,'4',81,13568),(7889,'3',81,13482),(7890,'3',81,13440),(7894,'0',81,13458),(7897,'2',81,13476),(7898,'4',81,13528),(7899,'4',81,13468),(7900,'4',81,13444),(7901,'4',81,13471),(7902,'3',81,13498),(7903,'3',81,13513),(7905,'3',81,13494),(7907,'3',81,13459),(7909,'1',81,13509),(7910,'4',81,13450),(7911,'4',81,13460),(7912,'0',81,13505),(7913,'3',81,13479),(7914,'4',81,13483),(7916,'4',81,13443),(7918,'2',81,13504),(7921,'3',81,13486),(7923,'2',81,13487),(7925,'4',81,13496),(7926,'3',81,13511),(7927,'4',81,13447),(7928,'4',81,13502),(7929,'0',81,13467),(7930,'3',81,13492),(7931,'3',81,13462),(7932,'4',81,13503),(7933,'2',81,13501),(7935,'4',81,13514),(7936,'4',81,13484),(7937,'4',81,13506),(7939,'3',81,13456),(7940,'3',81,13516),(7941,'4',81,13445),(7943,'3',81,13432),(7945,'4',81,13455),(7946,'3',81,13475),(7947,'4',81,13520),(7948,'4',81,13472),(7949,'4',81,13441),(7952,'4',81,13433),(7954,'4',81,13510),(7955,'2',81,13473),(7956,'4',81,13439),(7957,'4',81,13477),(7960,'0',81,13519),(7961,'4',81,13525),(7964,'4',81,13431),(7965,'4',81,13508),(7966,'4',81,13463),(7967,'4',81,13497),(7969,'4',81,13491),(7970,'3',81,13454),(7971,'2',84,13728),(7972,'0',84,13729),(8110,'170',82,13650),(8111,'172',82,13652),(8112,'182',82,13654),(8113,'155',82,13655),(8114,'164',82,13656),(8115,'141',82,13657),(8116,'174',82,13658),(8117,'151',82,13660),(8118,'153',82,13661),(8119,'185',82,13662),(8120,'169',82,13663),(8121,'178',82,13664),(8122,'173',82,13666),(8123,'176',82,13667),(8124,'145',82,13668),(8125,'195',82,13669),(8126,'162',82,13670),(8127,'167',82,13672),(8128,'160',82,13673),(8129,'177',82,13674),(8130,'106',82,13675),(8131,'106',82,13677),(8132,'0',82,13678),(8133,'192',82,13679),(8134,'164',82,13681),(8135,'169',82,13682),(8136,'178',82,13683),(8137,'186',82,13684),(8138,'188',82,13685),(8139,'130',82,13686),(8140,'172',82,13687),(8141,'170',82,13689),(8142,'162',82,13690),(8143,'0',82,13649),(8144,'108',82,13691),(8145,'144',82,13692),(8146,'84',82,13693),(8147,'180',82,13694),(8148,'167',82,13695),(8149,'177',82,13697),(8150,'183',82,13698),(8151,'177',82,13699),(8152,'150',82,13700),(8153,'157',82,13701),(8154,'166',82,13702),(8155,'190',82,13703),(8156,'179',82,13704),(8157,'169',82,13705),(8158,'139',82,13706),(8159,'171',82,13707),(8160,'173',82,13708),(8161,'139',82,13709),(8162,'154',82,13710),(8163,'190',82,13712),(8164,'150',82,13713),(8165,'159',82,13714),(8166,'65',82,13715),(8167,'179',82,13716),(8168,'80',82,13717),(8169,'163',82,13718),(8170,'101',82,13720),(8171,'175',82,13721),(8172,'158',82,13722),(8173,'137',82,13723),(8174,'169',82,13724),(8175,'0',82,13725),(8176,'84',82,13726),(8177,'166',82,13727),(8698,'0',89,13458),(8699,'5',89,13494),(8700,'7',89,13432),(8701,'7',89,13431),(8702,'8',89,13433),(8703,'4',89,13528),(8707,'6',89,13513),(8708,'5',89,13502),(8709,'4',89,13526),(8710,'5',89,13505),(8711,'6',89,13506),(8712,'8',89,13516),(8713,'6',89,13504),(8714,'8',89,13525),(8716,'7',89,13503),(8718,'4',89,13501),(8721,'7',89,13520),(8722,'5',89,13514),(8723,'7',89,13508),(8724,'2',89,13509),(8726,'9',89,13460),(8728,'8',89,13450),(8729,'9',89,13468),(8732,'7',89,13482),(8735,'7',89,13471),(8736,'6',89,13439),(8737,'7',89,13462),(8738,'6',89,13475),(8739,'7',89,13444),(8740,'9',89,13477),(8741,'8',89,13498),(8742,'9',89,13486),(8743,'6',89,13447),(8745,'3',89,13441),(8748,'5',89,13445),(8750,'7',89,13455),(8751,'5',89,13484),(8752,'6',89,13459),(8753,'8',89,13496),(8755,'5',89,13467),(8759,'5',89,13473),(8760,'7',89,13472),(8761,'6',89,13463),(8762,'8',89,13476),(8764,'8',89,13492),(8765,'4',89,13487),(8767,'4',89,13456),(8769,'5',89,13491),(8770,'3',89,13483),(8773,'5',89,13451),(8774,'2',89,13485),(8778,'8',89,13594),(8779,'6',89,13547),(8780,'5',89,13581),(8781,'7',89,13551),(8784,'5',89,13545),(8786,'2',89,13611),(8787,'6',89,13607),(8789,'7',89,13569),(8792,'6',89,13626),(8793,'4',89,13554),(8794,'6',89,13604),(8798,'9',89,13561),(8799,'6',89,13601),(8800,'7',89,13577),(8802,'6',89,13586),(8804,'2',89,13630),(8809,'7',89,13583),(8810,'7',89,13539),(8812,'5',89,13568),(8813,'9',89,13608),(8815,'5',89,13620),(8816,'5',89,13546),(8820,'5',89,13557),(8821,'6',89,13629),(8826,'7',89,13550),(8828,'4',89,13576),(8830,'8',89,13603),(8831,'7',89,13548),(8832,'8',89,13566),(8834,'9',89,13615),(8835,'7',89,13567),(8836,'6',89,13600),(8837,'8',89,13544),(8838,'5',89,13606),(8839,'8',89,13632),(8841,'8',89,13619),(8843,'6',89,13635),(8844,'5',89,13616),(8846,'5',89,13587),(8847,'6',89,13636),(8849,'4',89,13562),(8850,'7',89,13538),(8851,'4',89,13633),(8852,'7',89,13622),(8853,'7',89,13612),(8861,'6',89,13595),(8862,'6',89,13497),(8863,'5',89,13454),(8864,'7',89,13511),(8865,'6',89,13443),(8866,'7',89,13479),(8868,'8',89,13585),(8869,'3',89,13638),(8870,'6',89,13614),(8961,'10',87,15247),(8962,'10',87,15248),(8963,'8',87,15251),(8965,'8',87,15250),(8967,'9',87,15249),(9441,'3',103,2912),(9736,'9',104,15752),(9737,'5',104,15743),(9738,'9',104,15764),(9739,'7',104,11429),(9740,'12',104,15725),(9741,'8',104,15756),(9742,'11',104,15768),(9743,'7',104,15749),(9744,'14',104,15762),(9745,'8',104,15785),(9746,'8',104,15783),(9747,'12',104,15734),(9748,'8',104,13460),(9749,'8',104,15790),(9750,'9',104,15757),(9751,'10',104,15776),(9752,'4',104,15748),(9753,'6',104,15784),(9754,'9',104,15777),(9755,'8',104,15742),(9756,'10',104,15545),(9757,'11',104,15755),(9758,'8',104,11676),(9759,'12',104,15771),(9760,'11',104,15758),(9761,'12',104,15738),(9762,'12',104,15464),(9763,'8',104,15736),(9764,'12',104,15760),(9765,'11',104,15779),(9766,'5',104,15754),(9767,'7',104,15761),(9768,'2',104,11677),(9769,'11',104,15775),(9770,'8',104,15763),(9771,'10',104,15726),(9772,'8',104,15723),(9773,'8',104,15722),(9774,'9',104,15769),(9775,'9',104,15747),(9776,'9',104,15789),(9777,'10',104,15744),(9778,'8',104,15759),(9779,'3',104,15786),(9780,'13',104,15741),(9781,'8',104,15782),(9782,'8',104,15780),(9783,'7',104,15781),(9784,'6',104,15727),(9785,'8',104,15788),(9786,'5',104,15729),(9787,'8',104,15787),(9788,'11',104,15739),(9789,'5',104,15778),(9790,'12',104,15542),(9791,'8',104,15721),(9792,'4',104,15730),(9793,'8',104,15765),(9794,'4',104,15735),(9795,'5',104,13491),(9796,'10',104,15728),(9797,'8',104,15791),(9798,'6',104,15737),(9799,'7',104,15732),(9800,'5',104,15770),(9801,'9',104,15733),(9802,'13',104,15731),(9803,'8',104,15772),(9804,'9',104,15724),(9805,'12',104,15740),(9806,'8',104,15746),(9807,'6',104,15753),(9808,'0',104,15745),(9809,'0',104,15750),(9810,'0',104,15751),(9811,'0',104,15766),(9812,'0',104,15767),(9813,'0',104,15773),(9814,'0',104,15774),(9935,'8',104,15881),(9936,'4',104,15809),(9937,'5',104,15855),(9938,'6',104,15870),(9939,'10',104,15845),(9940,'7',104,15841),(9941,'8',104,15885),(9942,'12',104,6935),(9943,'9',104,15807),(9944,'7',104,15858),(9945,'7',104,15795),(9946,'12',104,15878),(9947,'9',104,15816),(9948,'7',104,15863),(9949,'10',104,15838),(9950,'9',104,15824),(9951,'8',104,15893),(9952,'12',104,15832),(9953,'12',104,15805),(9954,'5',104,15821),(9955,'11',104,15819),(9956,'7',104,15814),(9957,'6',104,15792),(9958,'7',104,15880),(9959,'8',104,15833),(9960,'9',104,15842),(9961,'9',104,15826),(9962,'13',104,6962),(9963,'13',104,15829),(9964,'5',104,15827),(9965,'8',104,15876),(9966,'5',104,15886),(9967,'12',104,15850),(9968,'5',104,13554),(9969,'9',104,15837),(9970,'8',104,15891),(9971,'9',104,15839),(9972,'7',104,15793),(9973,'7',104,15866),(9974,'3',104,15847),(9975,'11',104,15796),(9976,'9',104,15852),(9977,'6',104,15889),(9978,'8',104,15811),(9979,'5',104,15840),(9980,'13',104,15865),(9981,'11',104,15802),(9982,'4',104,15831),(9983,'4',104,15828),(9984,'6',104,6959),(9985,'5',104,15872),(9986,'7',104,15836),(9987,'8',104,15835),(9988,'7',104,15869),(9989,'8',104,15854),(9990,'5',104,11873),(9991,'7',104,15871),(9992,'8',104,15511),(9993,'10',104,15830),(9994,'9',104,15853),(9995,'9',104,15794),(9996,'9',104,15862),(9997,'12',104,15860),(9998,'9',104,15859),(9999,'7',104,15800),(10000,'9',104,10270),(10001,'0',104,6912),(10002,'0',104,6913),(10003,'0',104,6914),(10004,'0',104,15806),(10005,'0',104,15817),(10006,'0',104,15818),(10007,'0',104,15823),(10008,'0',104,15834),(10009,'0',104,15848),(10010,'0',104,15851),(10011,'0',104,15861),(10012,'0',104,15864),(10013,'0',104,15868),(10014,'0',104,15873),(10015,'0',104,15874),(10016,'0',104,15875),(10017,'0',104,15879),(10018,'0',104,15883),(10019,'0',104,15884),(10020,'10',104,15812),(10021,'11',104,15822),(10022,'10',104,15892),(10023,'11',104,15810),(10024,'10',104,15856),(10025,'7',104,15798),(10026,'9',104,15890),(10027,'5',104,15844),(10028,'8',104,15867),(10029,'10',104,15849),(10030,'4',104,15803),(10031,'6',104,15799),(10032,'8',104,15825),(10033,'7',104,15846),(10034,'11',104,15801),(10035,'12',104,15813),(10036,'10',104,6928),(10037,'9',104,15804),(10038,'8',104,15820),(10039,'5',104,15857),(10040,'7',104,15877),(10041,'6',104,15797),(10042,'4',104,15882),(10043,'9',104,15888),(10044,'11',104,15843),(10045,'8',104,15887),(10046,'3',104,15815),(10047,'6',104,15808),(10048,'2',104,15584),(10373,'4',105,15897),(10374,'7',105,15898),(10375,'8',105,15899),(10376,'10',105,15900),(10377,'9',105,15901),(10378,'6',105,15902),(10380,'6',105,15903),(10381,'8',105,15904),(10382,'7',105,15905),(10383,'6',105,15906),(10384,'7',105,15907),(10385,'5',105,15908),(10386,'5',105,15909),(10387,'5',105,15911),(10388,'10',105,15912),(10389,'4',105,15913),(10390,'4',105,15915),(10391,'6',105,15916),(10392,'8',105,15917),(10393,'6',105,15918),(10394,'8',105,15919),(10395,'6',105,15921),(10396,'10',105,15922),(10397,'8',105,15923),(10398,'4',105,15924),(10399,'6',105,15925),(10400,'8',105,15928),(10401,'7',105,15929),(10402,'4',105,15930),(10403,'6',105,15931),(10404,'9',105,15933),(10405,'8',105,15934),(10406,'7',105,15935),(10407,'8',105,15936),(10408,'4',105,15937),(10409,'5',105,15938),(10410,'4',105,15939),(10411,'8',105,15940),(10412,'5',105,15941),(10413,'8',105,15942),(10414,'5',105,15943),(10415,'7',105,15944),(10416,'6',105,15945),(10417,'7',105,15946),(10418,'6',105,15947),(10419,'7',105,15950),(10420,'2',105,15951),(10421,'7',105,15952),(10422,'5',105,15954),(10423,'10',105,15955),(10424,'7',105,15956),(10437,'8',105,15894),(10438,'5',105,15895),(10439,'9',105,15896),(10967,'4',108,15938),(10968,'7',108,15911),(10969,'7',108,15902),(10970,'8',108,15909),(10971,'9',108,15897),(10972,'6',108,15942),(10973,'9',108,15930),(10974,'9',108,15919),(10975,'9',108,15950),(10976,'9',108,15952),(10977,'6',108,15918),(10978,'5',108,15954),(10979,'10',108,15939),(10980,'10',108,15934),(10981,'8',108,15899),(10982,'6',108,15921),(10983,'6',108,15943),(10984,'7',108,15895),(10985,'7',108,15923),(10987,'9',108,15924),(10988,'12',108,15955),(10989,'9',108,15946),(10990,'8',108,15958),(10991,'8',108,15922),(10992,'12',108,15929),(10993,'7',108,15896),(10994,'5',108,15916),(10995,'8',108,15894),(10996,'10',108,15917),(10997,'11',108,15908),(10998,'8',108,15941),(10999,'10',108,15920),(11000,'11',108,15906),(11001,'6',108,15903),(11002,'10',108,15900),(11003,'11',108,15936),(11004,'10',108,15925),(11005,'12',108,15956),(11006,'9',108,15945),(11007,'11',108,15913),(11008,'9',108,15904),(11009,'8',108,15931),(11010,'7',108,15953),(11011,'8',108,15901),(11012,'7',108,15898),(11013,'8',108,15915),(11014,'7',108,15935),(11015,'10',108,15907),(11016,'8',108,15957),(11017,'10',108,15937),(11018,'10',108,15933),(11019,'10',108,15905),(11020,'8',108,15912),(11021,'7',108,15951),(11022,'11',108,15928),(11023,'10',108,15940),(11024,'8',108,15947),(11132,'2',109,11457),(11133,'4',109,13792),(11134,'3',109,11678),(11135,'4',109,10115),(11136,'4',109,15656),(11137,'3',109,15648),(11138,'5',109,15646),(11139,'1',109,10150),(11140,'2',109,11248),(11141,'5',109,15652),(11142,'4',109,10179),(11143,'2',109,11561),(11144,'2',109,10201),(11145,'2',109,10188),(11146,'4',109,15617),(11147,'4',109,15658),(11148,'0',109,15660),(11149,'3',109,10297),(11150,'2',109,10160),(11151,'4',109,10183),(11152,'5',109,15647),(11153,'3',109,15663),(11154,'4',109,11576),(11155,'4',109,11027),(11156,'2',109,11098),(11157,'0',109,13451),(11158,'3',109,11441),(11159,'4',109,15666),(11160,'5',109,10194),(11161,'3',109,15653),(11162,'0',109,15661),(11163,'3',109,10313),(11164,'5',109,15654),(11165,'3',109,11295),(11167,'4',109,11671),(11168,'3',109,15632),(11169,'2',109,11585),(11170,'0',109,15669),(11171,'4',109,11385),(11172,'3',109,11768),(11173,'3',109,10436),(11174,'4',109,15662),(11175,'1',109,15655),(11177,'2',109,15651),(11178,'4',109,15645),(11179,'0',109,11016),(11180,'3',109,10299),(11181,'2',109,15664),(11182,'1',109,15668),(11250,'5',109,15671),(11251,'2',109,15683),(11252,'3',109,11408),(11253,'2',109,15719),(11254,'0',109,15675),(11255,'3',109,11536),(11256,'4',109,10149),(11257,'3',109,15693),(11258,'3',109,15678),(11259,'4',109,15680),(11260,'3',109,15674),(11261,'1',109,15703),(11262,'3',109,15720),(11263,'3',109,11348),(11265,'3',109,11137),(11266,'3',109,15679),(11267,'4',109,15714),(11268,'2',109,15696),(11269,'4',109,15676),(11270,'0',109,13584),(11271,'4',109,11128),(11272,'3',109,15695),(11273,'3',109,10158),(11274,'2',109,15690),(11275,'5',109,15708),(11277,'4',109,11139),(11278,'4',109,15717),(11279,'3',109,10327),(11280,'3',109,10144),(11281,'1',109,15667),(11282,'2',109,15677),(11283,'4',109,11530),(11284,'3',109,15697),(11285,'2',109,15670),(11286,'4',109,15713),(11287,'2',109,11600),(11288,'2',109,10269),(11289,'2',109,10239),(11290,'3',109,15699),(11291,'0',109,15715),(11293,'5',109,15716),(11294,'1',109,15718),(11296,'2',109,11292),(11297,'4',109,11020),(11298,'4',109,15691),(11299,'2',109,15700),(11301,'1',109,15424),(11302,'3',109,15709),(11303,'3',109,15698),(11304,'5',109,15682),(11305,'5',109,15702),(11306,'2',109,15707),(11307,'2',109,15688),(11308,'4',109,15681),(11309,'4',109,15711),(11310,'1',109,15673),(11311,'2',109,12736),(11312,'1',109,15687),(11313,'0',109,15612),(11314,'3',109,10235),(11315,'2',109,11084),(11316,'3',109,15694),(11317,'13',113,15752),(11318,'13',113,15725),(11319,'10',113,15743),(11320,'10',113,15764),(11321,'9',113,15785),(11322,'8',113,11429),(11323,'13',113,15783),(11324,'10',113,15757),(11325,'11',113,15734),(11326,'6',113,15749),(11327,'9',113,13460),(11328,'12',113,15756),(11329,'13',113,15762),(11330,'7',113,15742),(11331,'14',113,15768),(11332,'4',113,11676),(11333,'6',113,15776),(11334,'11',113,15464),(11335,'10',113,15741),(11336,'10',113,15779),(11337,'8',113,15748),(11338,'5',113,11677),(11339,'8',113,15722),(11340,'5',113,15790),(11341,'10',113,15771),(11372,'4',113,15781),(11373,'9',113,15786),(11374,'9',113,15755),(11375,'9',113,15735),(11376,'10',113,15545),(11377,'10',113,15759),(11378,'7',113,15738),(11379,'10',113,15761),(11380,'6',113,15770),(11381,'8',113,15784),(11382,'10',113,15769),(11383,'6',113,15724),(11384,'6',113,15730),(11385,'12',113,15726),(11386,'10',113,15727),(11387,'12',113,15747),(11388,'14',113,15760),(11389,'2',113,15782),(11390,'4',113,15791),(11391,'10',113,15763),(11392,'11',113,15736),(11393,'7',113,15772),(11394,'6',113,15780),(11395,'9',113,13491),(11396,'5',113,15787),(11397,'12',113,15744),(11398,'8',113,15777),(11399,'12',113,15775),(11400,'9',113,15788),(11401,'12',113,15789),(11402,'8',113,15733),(11403,'8',113,15723),(11404,'6',113,15721),(11405,'8',113,15731),(11406,'8',113,15758),(11407,'7',113,15737),(11408,'6',113,15746),(11409,'8',113,15778),(11410,'3',113,15765),(11411,'5',113,15542),(11412,'11',113,15732),(11413,'8',113,15739),(11414,'3',113,15729),(11415,'8',113,15753),(11416,'8',113,15740),(11417,'0',113,15728),(11418,'0',113,15745),(11419,'0',113,15750),(11420,'0',113,15751),(11421,'0',113,15754),(11422,'0',113,15766),(11423,'0',113,15773),(11424,'0',113,15774),(11425,'9',113,15793),(11426,'7',113,15827),(11427,'8',113,15892),(11428,'12',113,15876),(11429,'13',113,15798),(11430,'9',113,15854),(11431,'13',113,15829),(11432,'12',113,15865),(11433,'5',113,15584),(11434,'8',113,15831),(11435,'9',113,15891),(11436,'7',113,15889),(11437,'13',113,15812),(11438,'10',113,15836),(11439,'10',113,15839),(11440,'9',113,15802),(11441,'9',113,15800),(11443,'9',113,15872),(11444,'11',113,15796),(11445,'7',113,15803),(11446,'5',113,15844),(11447,'10',113,15853),(11448,'11',113,15810),(11449,'7',113,15881),(11450,'9',113,15856),(11451,'10',113,15877),(11452,'10',113,6914),(11453,'13',113,15822),(11454,'9',113,15850),(11455,'7',113,15878),(11456,'12',113,15866),(11457,'7',113,15871),(11458,'8',113,13554),(11459,'6',113,15797),(11460,'10',113,15860),(11461,'8',113,15811),(11462,'9',113,15890),(11463,'9',113,15885),(11464,'11',113,15838),(11465,'12',113,15869),(11466,'5',113,15847),(11467,'6',113,15887),(11468,'9',113,15830),(11469,'10',113,15855),(11470,'13',113,15888),(11471,'9',113,15767),(11472,'8',113,15867),(11473,'5',113,6959),(11474,'8',113,15833),(11475,'10',113,15799),(11476,'11',113,15835),(11477,'12',113,15880),(11478,'8',113,15511),(11479,'9',113,15851),(11480,'7',113,15886),(11481,'11',113,6928),(11482,'11',113,15809),(11483,'6',113,15804),(11484,'4',113,15821),(11485,'5',113,15841),(11486,'7',113,15815),(11487,'7',113,15857),(11488,'7',113,15846),(11489,'10',113,6935),(11490,'11',113,15813),(11491,'9',113,15843),(11493,'7',113,15882),(11495,'9',113,15807),(11496,'10',113,15816),(11497,'10',113,15795),(11498,'6',113,15862),(11499,'9',113,15883),(11500,'14',113,15893),(11501,'7',113,15858),(11502,'12',113,15849),(11503,'6',113,10270),(11504,'9',113,15819),(11505,'11',113,15859),(11506,'10',113,6962),(11507,'12',113,15845),(11508,'7',113,15842),(11509,'7',113,15794),(11510,'8',113,15808),(11511,'7',113,15825),(11512,'11',113,15824),(11513,'8',113,15814),(11514,'5',113,15805),(11515,'9',113,15832),(11516,'0',113,15792),(11517,'0',113,15806),(11518,'0',113,11873),(11519,'0',113,15823),(11520,'0',113,15828),(11521,'0',113,15837),(11522,'0',113,15848),(11523,'0',113,15870),(11524,'0',113,6912),(11525,'0',113,6913),(11526,'0',113,15817),(11527,'0',113,15818),(11528,'0',113,15834),(11529,'0',113,15861),(11530,'0',113,15864),(11531,'0',113,15868),(11532,'0',113,15873),(11533,'0',113,15874),(11534,'0',113,15875),(11535,'0',113,15879),(11536,'0',113,15884),(11537,'9',113,15820),(11538,'15',113,15840),(11539,'10',113,15801),(11544,'0',113,15826),(11545,'0',113,15863),(11546,'2',113,15852),(11547,'4',119,15792),(11548,'5',119,6914),(11549,'9',119,15754),(11550,'7',119,15851),(11551,'8',119,15767),(11552,'6',119,15883),(11553,'0',119,11873),(11554,'0',119,15828),(11555,'0',119,15837),(11556,'0',119,15870),(11557,'7',120,15584),(11558,'5',120,15870),(11559,'11',120,11677),(11560,'13',120,15792),(11561,'24',125,4134),(11597,'0',125,15968),(11598,'40',125,15969),(11599,'25',125,20294),(11600,'14',125,15971),(11601,'38',125,2923),(11602,'30',125,2924),(11603,'16',125,15972),(11604,'25',125,15973),(11605,'0',125,15974),(11606,'24',125,2928),(11607,'19',125,15975),(11608,'27',125,15976),(11609,'35',125,15977),(11610,'0',125,15978),(11611,'16',125,15979),(11612,'39',125,2933),(11613,'22',125,15980),(11614,'33',125,15981),(11615,'0',125,15982),(11616,'30',125,19343),(11617,'17',125,2939),(11618,'0',125,15984),(11619,'19',125,15985),(11620,'26',125,15986),(11621,'36',125,3078),(11622,'12',125,15988),(11623,'0',125,15989),(11624,'33',125,15990),(11625,'29',125,15991),(11626,'19',125,15992),(11627,'31',125,2950),(11628,'43',125,19344),(11629,'16',125,15994),(11630,'35',125,3010),(11631,'0',125,15995),(11632,'39',125,18298),(11633,'21',125,18299),(11634,'24',125,18300),(11635,'25',125,18301),(11636,'0',125,18302),(11637,'0',125,18303),(11638,'35',125,18304),(11639,'39',125,2959),(11640,'0',125,18305),(11641,'29',125,18306),(11642,'26',125,18307),(11643,'35',125,18308),(11644,'37',125,18309),(11645,'16',125,18310),(11646,'18',125,18311),(11647,'21',125,2969),(11648,'21',125,18312),(11649,'31',125,18313),(11650,'33',125,18314),(11651,'20',125,18315),(11652,'13',125,18316),(11653,'29',125,18317),(11654,'0',125,18318),(11655,'41',125,2977),(11656,'26',125,18319),(11657,'22',125,18320),(11658,'0',125,18321),(11659,'34',125,18322),(11660,'20',125,18323),(11661,'40',125,18324),(11662,'24',125,2983),(11663,'34',125,18325),(11664,'0',125,18326),(11665,'32',125,18327),(11666,'26',125,18328),(11667,'32',125,18329),(11668,'23',125,18330),(11669,'0',125,18331),(11670,'29',125,18332),(11671,'29',125,18333),(11672,'22',125,18334),(11673,'28',125,18335),(11674,'35',125,2998),(11675,'34',125,18336),(11676,'30',125,3004),(11677,'23',125,18337),(11678,'0',125,18338),(11679,'36',125,18339),(11680,'29',125,18340),(11681,'20',125,18341),(11682,'28',125,18342),(11683,'31',125,3014),(11684,'35',125,18343),(11685,'28',125,18344),(11686,'35',125,18345),(11687,'26',125,18346),(11688,'37',125,18347),(11689,'31',125,3018),(11690,'24',125,18348),(11691,'0',125,18349),(11692,'30',125,18350),(11693,'26',125,18351),(11694,'14',125,18352),(11695,'24',125,18353),(11696,'0',125,18354),(11697,'32',125,18355),(11698,'0',125,3021),(11699,'34',125,18356),(11700,'17',125,20296),(11701,'26',125,18357),(11702,'26',125,18358),(11703,'39',125,3029),(11704,'31',125,18359),(11705,'43',125,18360),(11706,'25',125,18361),(11707,'12',125,18362),(11708,'0',125,18363),(11709,'33',125,18364),(11710,'0',125,18365),(11711,'37',125,18366),(11712,'35',125,18367),(11713,'39',125,18368),(11714,'29',125,18369),(11715,'33',125,18370),(11716,'19',125,18371),(11717,'0',125,3086),(11718,'25',125,18372),(11719,'25',125,18373),(11720,'0',125,18374),(11721,'26',125,18375),(11722,'27',125,18376),(11723,'22',125,18377),(11724,'19',125,18378),(11725,'33',125,18379),(11726,'30',125,18380),(11727,'32',125,18381),(11728,'24',125,18382),(11729,'26',125,18383),(11730,'35',125,18384),(11731,'35',125,18385),(11732,'26',125,18386),(11733,'27',125,18387),(11734,'33',125,3062),(11735,'26',125,18388),(11736,'26',125,18389),(11737,'0',125,18390),(11738,'20',125,18391),(11739,'25',125,18392),(11740,'37',125,18393),(11741,'0',125,18394),(11742,'27',125,18395),(11743,'25',125,18396),(11744,'24',125,18397),(11745,'0',125,18398),(11746,'22',125,18399),(11747,'25',125,18400),(11748,'19',125,3088),(11749,'38',125,18401),(11750,'23',125,18402),(11751,'38',125,3071),(11752,'17',125,20288),(11753,'22',125,18404),(11754,'0',125,18405),(11755,'37',125,3072),(11756,'0',125,3073),(11757,'33',125,3075),(11758,'29',125,18406),(11759,'0',125,18407),(11760,'21',125,18408),(11761,'24',125,18409),(11762,'27',125,18410),(11763,'21',125,18411),(11764,'32',125,18412),(11765,'0',125,3102),(11766,'0',125,20286),(11767,'23',125,3108),(11768,'27',125,18413),(11769,'27',125,18414),(11770,'31',125,18415),(11771,'20',125,18416),(11772,'24',125,18417),(11773,'33',125,18418),(11774,'34',125,3119),(11775,'32',125,3120),(11776,'32',125,18419),(11777,'0',125,3125),(11778,'26',125,18420),(11779,'30',125,18421),(11780,'0',125,18422),(11781,'18',125,18423),(11782,'39',125,18424),(11783,'33',125,18425),(11784,'32',125,18426),(11785,'41',125,18427),(11786,'23',125,18428),(11787,'26',125,18429),(11788,'31',125,18430),(11789,'14',125,18431),(11790,'34',125,18432),(11791,'18',125,3150),(11792,'17',125,18433),(11793,'24',125,3152),(11794,'26',125,3155),(11795,'0',125,18434),(11796,'34',125,18435),(11797,'34',125,18436),(11798,'35',125,18437),(11799,'0',125,18438),(11800,'0',125,18439),(11801,'26',125,18440),(11802,'24',125,18441),(11803,'28',125,18442),(11804,'0',125,18443),(11805,'0',125,20287),(11806,'0',125,18444),(11807,'33',125,18445),(11808,'28',125,3169),(11809,'13',125,18446),(11810,'0',125,18447),(11811,'17',125,18448),(11812,'40',125,18449),(11813,'26',125,18450),(11814,'0',125,18451),(11816,'0',125,18453),(11817,'26',125,18454),(11818,'37',125,18455),(11819,'25',125,18456),(11820,'30',125,18457),(11821,'35',125,3174),(11822,'22',125,18458),(11823,'38',125,18459),(11824,'0',125,18460),(11825,'0',125,18461),(11826,'21',125,18462),(11827,'0',125,3179),(11828,'28',125,3180),(11829,'0',125,3183),(11830,'31',125,18463),(11831,'42',125,18464),(11832,'22',125,18465),(11833,'38',125,18466),(11834,'0',125,18467),(11835,'27',125,18468),(11836,'37',125,18469),(11837,'26',125,18470),(11838,'32',125,18471),(11839,'37',125,18472),(11840,'20',125,3198),(11841,'40',125,18473),(11842,'33',125,18474),(11843,'24',125,18475),(11844,'20',125,18476),(11845,'19',125,18477),(11846,'27',125,18478),(11847,'0',125,18479),(11848,'32',125,18480),(11849,'28',125,18481),(11850,'21',125,18482),(11851,'16',125,18483),(11852,'0',125,18484),(11853,'0',125,3207),(11854,'27',125,18485),(11855,'30',125,18486),(11856,'31',125,18487),(11857,'38',125,18488),(11858,'32',125,18489),(11859,'0',125,18490),(11860,'31',125,18491),(11861,'41',125,18492),(11862,'0',125,18493),(11863,'0',125,18494),(11864,'20',125,18495),(11865,'0',125,3217),(11866,'0',125,3219),(11867,'25',125,18496),(11868,'38',125,18497),(11869,'35',125,3222),(11870,'39',125,3224),(11871,'34',125,3225),(11872,'18',125,18498),(11873,'29',125,18499),(11874,'33',125,18500),(11875,'36',125,18501),(11876,'0',125,18502),(11877,'16',125,18503),(11878,'29',125,18504),(11879,'37',125,18505),(11880,'32',125,18506),(11881,'0',125,3239),(11882,'29',125,18507),(11883,'34',125,18508),(11884,'0',125,18509),(11885,'31',125,3242),(11886,'14',125,18510),(11887,'0',125,18511),(11888,'33',125,18512),(11889,'29',125,18513),(11890,'42',125,3244),(11891,'29',125,18514),(11892,'28',125,18515),(11893,'27',125,18516),(11894,'35',125,3250),(11895,'14',125,18517),(11896,'21',125,18518),(11897,'19',125,18519),(11898,'18',125,18520),(11899,'27',125,18521),(11900,'26',125,18522),(11901,'36',125,18523),(11902,'15',125,18524),(11903,'38',125,18525),(11904,'30',125,18526),(11905,'26',125,18527),(11906,'31',125,18528),(11907,'30',125,18529),(11908,'25',125,18530),(11909,'38',125,18531),(11910,'21',125,18532),(11911,'32',125,18533),(11912,'18',125,18534),(11913,'29',125,18535),(11914,'30',125,3257),(11915,'26',125,18536),(11916,'25',125,18537),(11917,'34',125,18538),(11918,'23',125,18539),(11919,'14',125,18540),(11920,'15',125,18541),(11921,'28',125,18542),(11922,'39',125,3262),(11923,'0',125,18544),(11924,'30',125,3264),(11925,'0',125,18545),(11926,'38',125,18546),(11927,'0',125,18547),(11928,'0',125,18548),(11929,'29',125,18549),(11930,'36',125,18550),(11931,'33',125,3271),(11932,'30',125,18551),(11933,'0',125,18552),(11934,'0',125,18553),(11935,'19',125,18554),(11936,'29',125,18555),(11937,'36',125,18556),(11938,'39',125,18557),(11939,'34',125,18558),(11940,'37',125,3277),(11941,'0',125,18559),(11942,'22',125,18560),(11943,'38',125,18561),(11944,'38',125,3287),(11945,'21',125,18562),(11946,'30',125,20297),(11947,'20',125,18563),(11948,'24',125,18564),(11949,'31',125,18565),(11950,'27',125,18566),(11951,'28',125,18567),(11952,'27',125,18568),(11953,'28',125,18569),(11954,'34',125,18570),(11955,'36',125,3294),(11956,'37',125,18571),(11957,'0',125,3296),(11958,'29',125,18572),(11959,'19',125,3298),(11960,'15',125,18573),(11961,'42',125,18574),(11962,'15',125,18575),(11963,'0',125,18576),(11964,'27',125,3302),(11965,'39',125,18577),(11966,'25',125,18578),(11967,'32',125,18579),(11968,'35',125,18580),(11969,'22',125,18581),(11970,'35',125,18582),(11971,'0',125,18583),(11972,'14',125,18584),(11973,'29',125,18585),(11974,'0',125,18586),(11975,'33',125,18587),(11976,'27',125,18588),(11977,'36',125,18589),(11978,'0',125,18590),(11979,'23',125,18591),(11980,'0',125,18592),(11981,'40',125,18593),(11982,'0',125,18594),(11983,'29',125,18595),(11984,'36',125,3338),(11985,'32',125,18596),(11986,'16',125,18597),(11987,'0',125,18598),(11988,'44',125,3343),(11989,'28',125,3344),(11990,'32',125,18599),(11991,'0',125,18600),(11992,'32',125,18601),(11993,'28',125,18602),(11994,'0',125,18603),(11995,'45',125,18604),(11996,'38',125,18605),(11997,'0',125,18606),(11998,'30',125,18607),(11999,'39',125,18608),(12000,'0',125,18609),(12001,'0',125,18610),(12002,'24',125,18611),(12003,'28',125,18612),(12004,'42',125,18613),(12005,'18',125,3358),(12006,'36',125,3360),(12007,'0',125,18614),(12008,'0',125,18615),(12009,'33',125,18616),(12010,'46',125,18617),(12011,'35',125,18618),(12012,'0',125,18619),(12013,'0',125,18620),(12014,'36',125,18621),(12015,'30',125,18622),(12016,'26',125,18623),(12017,'0',125,18624),(12018,'26',125,18625),(12019,'0',125,18626),(12020,'17',125,18627),(12021,'38',125,18628),(12022,'25',125,18629),(12023,'41',125,3378),(12024,'31',125,18630),(12025,'0',125,18631),(12026,'23',125,3383),(12027,'38',125,18632),(12028,'27',125,18633),(12029,'0',125,18634),(12030,'19',125,18635),(12031,'39',125,3390),(12032,'36',125,18636),(12033,'17',125,18637),(12034,'32',125,3393),(12035,'0',125,18638),(12036,'21',125,18639),(12037,'0',125,18640),(12038,'19',125,18641),(12039,'29',125,18642),(12040,'31',125,18643),(12041,'31',125,18644),(12042,'32',125,18645),(12043,'35',125,18646),(12044,'21',125,18647),(12045,'0',125,18648),(12046,'33',125,3409),(12047,'42',125,18649),(12048,'0',125,18650),(12049,'0',125,18651),(12050,'19',125,18652),(12051,'0',125,18653),(12052,'0',125,18654),(12053,'38',125,3412),(12054,'35',125,18655),(12055,'42',125,18656),(12056,'33',125,18657),(12057,'30',125,18658),(12058,'17',125,18659),(12059,'23',125,18660),(12060,'41',125,18661),(12061,'24',125,3420),(12062,'31',125,18663),(12063,'39',125,18664),(12064,'0',125,18665),(12065,'0',125,18666),(12066,'0',125,18667),(12067,'28',125,18668),(12068,'0',125,18669),(12069,'0',125,18670),(12070,'31',125,18671),(12071,'25',125,18672),(12072,'33',125,18673),(12073,'31',125,3442),(12074,'32',125,18674),(12075,'30',125,18675),(12076,'22',125,18676),(12077,'0',125,18677),(12078,'0',125,18678),(12079,'21',125,18679),(12080,'37',125,18680),(12081,'36',125,18681),(12082,'29',125,18682),(12083,'41',125,18683),(12084,'29',125,18684),(12085,'0',125,18685),(12086,'29',125,18686),(12087,'0',125,18687),(12088,'30',125,18688),(12089,'43',125,18689),(12090,'32',125,18690),(12091,'19',125,3455),(12092,'0',125,18691),(12093,'27',125,18692),(12094,'25',125,18693),(12095,'0',125,18694),(12096,'7',125,18695),(12097,'27',125,18696),(12098,'34',125,3461),(12099,'30',125,3462),(12100,'30',125,18697),(12101,'28',125,18698),(12102,'36',125,18699),(12103,'28',125,18700),(12104,'30',125,18701),(12105,'26',125,18702),(12106,'29',125,18703),(12107,'21',125,18704),(12108,'35',125,18705),(12109,'32',125,18706),(12110,'0',125,18707),(12111,'26',125,18708),(12112,'0',125,3478),(12113,'37',125,18709),(12114,'0',125,18710),(12115,'17',125,18711),(12116,'28',125,18712),(12117,'20',125,18713),(12118,'40',125,18714),(12119,'40',125,18715),(12120,'38',125,18716),(12121,'0',125,3488),(12122,'35',125,18717),(12123,'0',125,18718),(12124,'35',125,18719),(12125,'20',125,18720),(12126,'22',125,18721),(12127,'30',125,18722),(12128,'17',125,18723),(12129,'40',125,3496),(12130,'39',125,18724),(12131,'32',125,18725),(12132,'23',125,3501),(12133,'30',125,18726),(12134,'41',125,3504),(12135,'0',125,3507),(12136,'33',125,18727),(12137,'0',125,18728),(12138,'0',125,18729),(12139,'38',125,18730),(12140,'14',125,18731),(12141,'44',125,18732),(12142,'26',125,18733),(12143,'46',125,18734),(12144,'40',125,18735),(12145,'25',125,18736),(12146,'0',125,3517),(12147,'38',125,18737),(12148,'19',125,18738),(12149,'28',125,18739),(12150,'37',125,18740),(12151,'0',125,18741),(12152,'43',125,18742),(12153,'21',125,18743),(12154,'25',125,18744),(12155,'0',125,18745),(12156,'28',125,18746),(12157,'13',125,18747),(12158,'30',125,3534),(12159,'19',125,18748),(12160,'26',125,18749),(12161,'21',125,18750),(12162,'16',125,18751),(12163,'21',125,18752),(12164,'32',125,18753),(12165,'20',125,18754),(12166,'35',125,18755),(12167,'35',125,18756),(12168,'16',125,18757),(12169,'22',125,18758),(12170,'0',125,18759),(12171,'16',125,18760),(12172,'25',125,18761),(12173,'33',125,18762),(12174,'24',125,18763),(12175,'37',125,18764),(12176,'0',125,18765),(12177,'40',125,3562),(12178,'25',125,18766),(12179,'30',125,18767),(12180,'28',125,18768),(12181,'29',125,18769),(12182,'24',125,18770),(12183,'38',125,18771),(12184,'0',125,18772),(12185,'24',125,18773),(12186,'19',125,18774),(12187,'39',125,3572),(12188,'38',125,18775),(12189,'16',125,18776),(12190,'36',125,18777),(12191,'31',125,18778),(12192,'0',125,18779),(12193,'32',125,18780),(12194,'36',125,18782),(12195,'0',125,18783),(12196,'24',125,18784),(12197,'34',125,18785),(12198,'0',125,18786),(12199,'0',125,18787),(12200,'19',125,18788),(12201,'31',125,18789),(12202,'32',125,18790),(12203,'20',125,18791),(12204,'0',125,18792),(12205,'0',125,18793),(12206,'34',125,18794),(12207,'38',125,18795),(12208,'27',125,18796),(12209,'20',125,18797),(12210,'14',125,18798),(12211,'25',125,18799),(12212,'32',125,18800),(12213,'24',125,18801),(12214,'39',125,18802),(12215,'32',125,18803),(12216,'0',125,18804),(12217,'36',125,18805),(12218,'17',125,18806),(12219,'17',125,18807),(12220,'35',125,3612),(12221,'0',125,18808),(12222,'44',125,3616),(12223,'28',125,18809),(12224,'31',125,18810),(12225,'29',125,18811),(12226,'20',125,18812),(12227,'0',125,18813),(12228,'0',125,18814),(12229,'46',125,3620),(12230,'38',125,18815),(12231,'28',125,18816),(12232,'0',125,18817),(12233,'18',125,18818),(12234,'24',125,18819),(12236,'23',125,18821),(12237,'37',125,3623),(12238,'0',125,18822),(12239,'27',125,18823),(12240,'0',125,18912),(12241,'29',125,18913),(12242,'18',125,18914),(12243,'27',125,18915),(12244,'28',125,18916),(12245,'30',125,18917),(12246,'19',125,18918),(12247,'22',125,18919),(12248,'24',125,18920),(12249,'32',125,18921),(12250,'30',125,18922),(12251,'26',125,18923),(12252,'25',125,3746),(12253,'35',125,18924),(12254,'35',125,18925),(12255,'0',125,18926),(12256,'24',125,18927),(12257,'27',125,18928),(12258,'0',125,18929),(12259,'31',125,18930),(12260,'19',125,18931),(12261,'31',125,3766),(12262,'28',125,18932),(12263,'30',125,3764),(12264,'0',125,18933),(12265,'30',125,18934),(12266,'41',125,18935),(12267,'27',125,18936),(12268,'28',125,18937),(12269,'39',125,18938),(12270,'39',125,18939),(12271,'34',125,18940),(12272,'33',125,18941),(12273,'0',125,18942),(12274,'28',125,20289),(12275,'0',125,18944),(12276,'30',125,18945),(12277,'0',125,18946),(12278,'0',125,18947),(12279,'42',125,18948),(12280,'39',125,18949),(12281,'36',125,18950),(12282,'34',125,18951),(12283,'0',125,18952),(12284,'30',125,18953),(12285,'32',125,18954),(12286,'21',125,18955),(12287,'21',125,18824),(12288,'21',125,18825),(12289,'27',125,18826),(12290,'33',125,18827),(12291,'22',125,18828),(12292,'22',125,18829),(12293,'25',125,18830),(12294,'19',125,18831),(12295,'14',125,18832),(12296,'32',125,3631),(12297,'17',125,18833),(12298,'33',125,18834),(12299,'28',125,18835),(12300,'18',125,18836),(12301,'19',125,18837),(12302,'25',125,18838),(12303,'20',125,18839),(12304,'18',125,18840),(12305,'13',125,18841),(12306,'32',125,18842),(12307,'0',125,18843),(12308,'26',125,18844),(12309,'28',125,18845),(12310,'22',125,18846),(12311,'16',125,18847),(12312,'36',125,3660),(12313,'14',125,18848),(12314,'29',125,18849),(12315,'0',125,18850),(12316,'30',125,18851),(12317,'29',125,3674),(12318,'0',125,18852),(12319,'25',125,18853),(12320,'0',125,18854),(12321,'16',125,18855),(12322,'17',125,18856),(12323,'22',125,3683),(12324,'0',125,18857),(12325,'15',125,18858),(12326,'31',125,18859),(12327,'35',125,18860),(12328,'26',125,18861),(12329,'27',125,18862),(12330,'27',125,18863),(12331,'0',125,18864),(12332,'36',125,18865),(12333,'0',125,18866),(12334,'26',125,18867),(12335,'38',125,18868),(12336,'0',125,18869),(12337,'42',125,3690),(12338,'27',125,18870),(12339,'0',125,3693),(12340,'18',125,18871),(12341,'0',125,18872),(12342,'36',125,18873),(12343,'21',125,18874),(12344,'0',125,18875),(12345,'42',125,18876),(12346,'0',125,18877),(12347,'38',125,18878),(12348,'26',125,3700),(12349,'23',125,18879),(12350,'32',125,18880),(12351,'32',125,18881),(12352,'29',125,18882),(12353,'0',125,18883),(12354,'24',125,18884),(12355,'0',125,3712),(12356,'29',125,18885),(12357,'23',125,18886),(12358,'47',125,18887),(12359,'24',125,18888),(12360,'31',125,18889),(12361,'22',125,18890),(12362,'0',125,18891),(12363,'35',125,3717),(12364,'34',125,18892),(12365,'30',125,18893),(12366,'30',125,3721),(12367,'29',125,18894),(12368,'28',125,18895),(12369,'30',125,18896),(12370,'25',125,18897),(12371,'24',125,3727),(12372,'29',125,18898),(12373,'25',125,18899),(12374,'29',125,18900),(12375,'27',125,18901),(12376,'29',125,18902),(12377,'0',125,18903),(12378,'34',125,18904),(12379,'37',125,18905),(12380,'0',125,18906),(12381,'34',125,18907),(12382,'32',125,3741),(12383,'38',125,18908),(12384,'0',125,18909),(12385,'28',125,18910),(12386,'15',125,18911),(12387,'25',125,18956),(12388,'0',125,18957),(12389,'35',125,18958),(12390,'31',125,18959),(12391,'34',125,18960),(12392,'32',125,18961),(12393,'40',125,18962),(12394,'29',125,18963),(12395,'0',125,18964),(12396,'27',125,18965),(12397,'0',125,18966),(12398,'34',125,18967),(12399,'38',125,18968),(12400,'40',125,18969),(12401,'27',125,18970),(12402,'27',125,18971),(12403,'36',125,18972),(12404,'30',125,18973),(12405,'36',125,18974),(12406,'42',125,18975),(12407,'39',125,18976),(12408,'0',125,18977),(12409,'23',125,18978),(12410,'28',125,18979),(12411,'0',125,18980),(12412,'40',125,18981),(12413,'0',125,18982),(12414,'29',125,18983),(12415,'32',125,18984),(12416,'35',125,18985),(12417,'0',125,18986),(12418,'37',125,18987),(12419,'22',125,18988),(12420,'0',125,18989),(12421,'26',125,3821),(12422,'36',125,18990),(12423,'23',125,18991),(12424,'39',125,18992),(12425,'40',125,18993),(12426,'27',125,18994),(12427,'24',125,18995),(12428,'30',125,18996),(12429,'41',125,18997),(12430,'17',125,18998),(12431,'16',125,18999),(12432,'26',125,19000),(12433,'28',125,19001),(12434,'28',125,19002),(12435,'20',125,19003),(12436,'0',125,19004),(12437,'28',125,19005),(12438,'17',125,19006),(12439,'15',125,19007),(12440,'42',125,19008),(12441,'21',125,3841),(12442,'26',125,19009),(12443,'31',125,19010),(12444,'27',125,19011),(12445,'0',125,19012),(12446,'28',125,19013),(12447,'29',125,3847),(12448,'35',125,19014),(12449,'44',125,19015),(12450,'34',125,19016),(12451,'31',125,19017),(12452,'32',125,19018),(12453,'37',125,3852),(12454,'28',125,19019),(12455,'38',125,19020),(12456,'24',125,19021),(12457,'39',125,3859),(12458,'25',125,19022),(12459,'0',125,19023),(12460,'40',125,19024),(12461,'27',125,19025),(12462,'25',125,19026),(12463,'36',125,19027),(12464,'32',125,19028),(12465,'33',125,20290),(12466,'38',125,19030),(12467,'22',125,19031),(12468,'32',125,19032),(12469,'0',125,19033),(12470,'27',125,19034),(12471,'29',125,3872),(12472,'38',125,19035),(12473,'28',125,19036),(12474,'0',125,19037),(12475,'11',125,19038),(12476,'0',125,19039),(12477,'40',125,19040),(12478,'35',125,19041),(12479,'14',125,19042),(12480,'28',125,19043),(12481,'35',125,19044),(12482,'34',125,19045),(12483,'17',125,19046),(12484,'28',125,19047),(12485,'31',125,19048),(12486,'33',125,19049),(12487,'0',125,19050),(12488,'0',125,19051),(12489,'0',125,19052),(12490,'29',125,19053),(12491,'34',125,19054),(12492,'0',125,19055),(12493,'32',125,19056),(12494,'38',125,19057),(12495,'31',125,19058),(12496,'38',125,4160),(12497,'29',125,19059),(12498,'35',125,4161),(12499,'0',125,19060),(12500,'22',125,19061),(12501,'18',125,19062),(12502,'0',125,19063),(12503,'28',125,4167),(12504,'0',125,19064),(12505,'28',125,19065),(12506,'23',125,4171),(12507,'28',125,19066),(12508,'22',125,19067),(12509,'25',125,19068),(12510,'30',125,19069),(12511,'26',125,19070),(12512,'35',125,19071),(12513,'0',125,19072),(12514,'31',125,19073),(12515,'0',125,19074),(12516,'0',125,19075),(12517,'28',125,19076),(12518,'34',125,19077),(12519,'35',125,19078),(12520,'0',125,19079),(12521,'0',125,4184),(12522,'0',125,19080),(12523,'32',125,19081),(12524,'36',125,4186),(12525,'29',125,4188),(12526,'37',125,19082),(12527,'40',125,19083),(12528,'35',125,19084),(12529,'26',125,19085),(12530,'20',125,19086),(12531,'30',125,19087),(12532,'28',125,19088),(12533,'0',125,19089),(12534,'26',125,19090),(12535,'37',125,19091),(12536,'27',125,4201),(12537,'0',125,19092),(12538,'31',125,19093),(12539,'38',125,19094),(12540,'0',125,19095),(12541,'34',125,19096),(12542,'29',125,19097),(12543,'37',125,19098),(12544,'41',125,19099),(12545,'31',125,19100),(12546,'29',125,19101),(12547,'28',125,19102),(12548,'25',125,19103),(12549,'24',125,19104),(12550,'32',125,19105),(12551,'32',125,4209),(12552,'0',125,19106),(12553,'18',125,19107),(12554,'23',125,19108),(12555,'27',125,19109),(12556,'28',125,19110),(12557,'33',125,4216),(12558,'38',125,19111),(12559,'14',125,19112),(12560,'0',125,19113),(12561,'21',125,19114),(12562,'28',125,19115),(12563,'19',125,19116),(12564,'20',125,19117),(12565,'32',125,19118),(12566,'27',125,19119),(12567,'32',125,19120),(12568,'35',125,4223),(12569,'0',125,19121),(12570,'0',125,19122),(12571,'34',125,19123),(12572,'0',125,19124),(12573,'19',125,19125),(12574,'40',125,19126),(12575,'29',125,19127),(12576,'0',125,19128),(12577,'25',125,4233),(12578,'37',125,4234),(12579,'8',125,19129),(12580,'0',125,19130),(12581,'35',125,4238),(12582,'0',125,19131),(12583,'32',125,19132),(12584,'25',125,19133),(12585,'20',125,4243),(12586,'32',125,19134),(12587,'26',125,19135),(12588,'18',125,4244),(12589,'35',125,19136),(12590,'32',125,19137),(12591,'30',125,19138),(12592,'35',125,19139),(12593,'32',125,19140),(12594,'31',125,19141),(12595,'0',125,19142),(12596,'30',125,19143),(12597,'23',125,19144),(12598,'19',125,19145),(12599,'29',125,19146),(12600,'29',125,19148),(12601,'40',125,19149),(12602,'0',125,4263),(12603,'26',125,19150),(12604,'0',125,19151),(12605,'27',125,19152),(12606,'26',125,19154),(12607,'35',125,19155),(12608,'19',125,19156),(12609,'30',125,19157),(12610,'29',125,19158),(12611,'30',125,19159),(12612,'33',125,19160),(12613,'22',125,4285),(12614,'37',125,19161),(12615,'33',125,19162),(12616,'22',125,19163),(12617,'32',125,19164),(12618,'34',125,19165),(12619,'44',125,19166),(12620,'37',125,19167),(12621,'33',125,19168),(12622,'0',125,4290),(12623,'34',125,19169),(12624,'21',125,19170),(12625,'28',125,19171),(12626,'26',125,19172),(12627,'40',125,19173),(12628,'37',125,19174),(12629,'33',125,19175),(12630,'33',125,19176),(12631,'35',125,19177),(12632,'0',125,19178),(12633,'20',125,19179),(12634,'25',125,4299),(12635,'26',125,19180),(12636,'14',125,19181),(12637,'20',125,19182),(12638,'0',125,19183),(12639,'39',125,19184),(12640,'35',125,19185),(12641,'40',125,19186),(12642,'27',125,19187),(12643,'0',125,19188),(12644,'34',125,19189),(12645,'35',125,4312),(12646,'35',125,19190),(12647,'33',125,4314),(12648,'23',125,19191),(12649,'25',125,19192),(12650,'42',125,19193),(12651,'33',125,19194),(12652,'0',125,19195),(12653,'26',125,19196),(12654,'33',125,19197),(12655,'30',125,19198),(12656,'41',125,19199),(12657,'35',125,19200),(12658,'24',125,19201),(12659,'0',125,19202),(12660,'41',125,19203),(12661,'16',125,19204),(12662,'15',125,19205),(12663,'34',125,19206),(12664,'33',125,19207),(12665,'0',125,19208),(12666,'33',125,19209),(12667,'0',125,4346),(12668,'31',125,19210),(12669,'41',125,19211),(12670,'14',125,19212),(12671,'36',125,19213),(12672,'0',125,19214),(12673,'40',125,19215),(12674,'0',125,19216),(12675,'26',125,4354),(12676,'35',125,19217),(12677,'34',125,19218),(12678,'37',125,19219),(12679,'31',125,19220),(12680,'32',125,19221),(12681,'24',125,19222),(12682,'23',125,19223),(12683,'0',125,19224),(12684,'28',125,19225),(12685,'32',125,19226),(12686,'0',125,19227),(12687,'18',125,19228),(12688,'33',125,19229),(12689,'29',125,19230),(12690,'0',125,19231),(12691,'28',125,19232),(12692,'14',125,19233),(12693,'28',125,19234),(12694,'31',125,20293),(12695,'21',125,19235),(12696,'32',125,19236),(12697,'30',125,19237),(12698,'34',125,19238),(12699,'25',125,4370),(12700,'28',125,19239),(12701,'26',125,19240),(12702,'28',125,19241),(12703,'32',125,19242),(12704,'36',125,19243),(12705,'29',125,19244),(12706,'34',125,19245),(12707,'23',125,4386),(12708,'32',125,19246),(12709,'0',125,4389),(12710,'33',125,19247),(12711,'33',125,19248),(12712,'34',125,4395),(12713,'22',125,19249),(12714,'19',125,19250),(12715,'34',125,4400),(12716,'26',125,19251),(12717,'30',125,19252),(12718,'0',125,19253),(12719,'16',125,19254),(12720,'24',125,19255),(12721,'0',125,19256),(12722,'0',125,19257),(12723,'31',125,19258),(12724,'32',125,19259),(12725,'30',125,19260),(12726,'25',125,19261),(12727,'0',125,19262),(12728,'26',125,19263),(12729,'15',125,19264),(12730,'35',125,19265),(12731,'23',125,19266),(12732,'29',125,19267),(12733,'35',125,19268),(12734,'38',125,19269),(12735,'0',125,19270),(12736,'31',125,19271),(12737,'0',125,19272),(12738,'0',125,19273),(12739,'23',125,19274),(12740,'40',125,19275),(12741,'34',125,19276),(12742,'26',125,19277),(12743,'29',125,19278),(12744,'36',125,4422),(12745,'15',125,19279),(12746,'28',125,19280),(12747,'29',125,19281),(12748,'0',125,19282),(12749,'24',125,19283),(12750,'0',125,19284),(12751,'19',125,19285),(12752,'34',125,19286),(12753,'26',125,19287),(12754,'0',125,19288),(12755,'33',125,19289),(12756,'34',125,19290),(12757,'36',125,19291),(12758,'19',125,4436),(12759,'29',125,19292),(12760,'23',125,19293),(12761,'28',125,19294),(12762,'23',125,19295),(12763,'33',125,19296),(12764,'35',125,19297),(12765,'0',125,19298),(12766,'35',125,19299),(12767,'0',125,19300),(12768,'36',125,19301),(12769,'29',125,19302),(12770,'27',125,4444),(12771,'0',125,19303),(12772,'30',125,19304),(12773,'15',125,19305),(12774,'37',125,19306),(12775,'42',125,19307),(12776,'0',125,19308),(12777,'0',125,19309),(12778,'34',125,19310),(12779,'32',125,19311),(12780,'24',125,19312),(12781,'22',125,19313),(12782,'29',125,19314),(12783,'29',125,4461),(12784,'29',125,19315),(12785,'17',125,19316),(12786,'22',125,19317),(12787,'26',125,4466),(12788,'29',125,19318),(12789,'0',125,19319),(12790,'0',125,19320),(12791,'36',125,19321),(12792,'0',125,19322),(12793,'30',125,19323),(12794,'0',125,19324),(12795,'0',125,19325),(12796,'31',125,19326),(12797,'38',125,19327),(12798,'27',125,4484),(12799,'41',125,19328),(12800,'25',125,19329),(12801,'30',125,4489),(12802,'32',125,19330),(12803,'14',125,19331),(12804,'36',125,19332),(12805,'20',125,19333),(12806,'18',125,19334),(12807,'22',125,20292),(12808,'20',125,19335),(12809,'11',125,19336),(12810,'32',125,19337),(12811,'23',125,19338),(12812,'24',125,19339),(12813,'21',125,19340),(12814,'0',125,4503),(12815,'0',125,19341),(12816,'41',125,4505),(12817,'23',125,19345),(12818,'0',125,19346),(12819,'29',125,19347),(12820,'20',125,19348),(12821,'24',125,19349),(12822,'26',125,19351),(12823,'34',125,19353),(12824,'0',125,19354),(12825,'32',125,19355),(12826,'0',125,19356),(12827,'31',125,19357),(12828,'5',125,19352),(12829,'38',125,19350),(12830,'0',125,19358),(12831,'32',125,19359),(12832,'26',125,19360),(12833,'24',125,19361),(12834,'32',125,19362),(12835,'0',125,19363),(12836,'0',125,19364),(12837,'33',125,19365),(12838,'22',125,19366),(12839,'23',125,19367),(12840,'31',125,19368),(12841,'32',125,19369),(12842,'31',125,19370),(12843,'41',125,19371),(12844,'0',125,19372),(12845,'29',125,19373),(12846,'35',125,19374),(12847,'33',125,4536),(12848,'41',125,19375),(12849,'0',125,19376),(12850,'30',125,4538),(12851,'21',125,19377),(12852,'29',125,19379),(12853,'21',125,19378),(12854,'27',125,19380),(12855,'0',125,19381),(12856,'19',125,19382),(12857,'33',125,19383),(12858,'0',125,19384),(12859,'34',125,19385),(12860,'38',125,19386),(12861,'29',125,19387),(12862,'33',125,19388),(12863,'0',125,19389),(12864,'34',125,19390),(12865,'27',125,19391),(12866,'24',125,19392),(12867,'37',125,4555),(12868,'38',125,19393),(12869,'30',125,19394),(12870,'31',125,19395),(12871,'0',125,19396),(12872,'33',125,19397),(12873,'41',125,19398),(12874,'12',125,19399),(12875,'38',125,19400),(12876,'34',125,19401),(12877,'36',125,19402),(12878,'25',125,19403),(12879,'32',125,19404),(12880,'0',125,4573),(12881,'29',125,4574),(12882,'35',125,19405),(12883,'40',125,19406),(12884,'35',125,19407),(12885,'18',125,19408),(12886,'39',125,19409),(12887,'0',125,19410),(12888,'28',125,19411),(12889,'16',125,19412),(12890,'0',125,19413),(12891,'41',125,4588),(12892,'32',125,19414),(12893,'30',125,19415),(12894,'20',125,19416),(12895,'24',125,4591),(12896,'29',125,19417),(12897,'32',125,4592),(12898,'29',125,19418),(12899,'0',125,19419),(12900,'0',125,19420),(12901,'31',125,19421),(12902,'28',125,19422),(12903,'20',125,4601),(12904,'27',125,19423),(12905,'0',125,19424),(12906,'21',125,19425),(12907,'0',125,19426),(12908,'33',125,19427),(12909,'25',125,4615),(12910,'40',125,19428),(12911,'29',125,19429),(12912,'0',125,19430),(12913,'31',125,19431),(12914,'38',125,19432),(12915,'20',125,19433),(12916,'32',125,19434),(12917,'33',125,19435),(12918,'0',125,19436),(12919,'31',125,19437),(12920,'29',125,19438),(12921,'30',125,19439),(12922,'0',125,19440),(12923,'40',125,19441),(12924,'25',125,19442),(12925,'21',125,19443),(12926,'40',125,4628),(12927,'30',125,19444),(12928,'29',125,19445),(12929,'25',125,19446),(12930,'0',125,19447),(12931,'0',125,19448),(12932,'35',125,19449),(12933,'0',125,4632),(12934,'36',125,19450),(12935,'24',125,19451),(12936,'30',125,19452),(12937,'19',125,19453),(12938,'24',125,19454),(12939,'32',125,4638),(12940,'33',125,4640),(12941,'29',125,19455),(12942,'17',125,19456),(12943,'18',125,19457),(12944,'0',125,19458),(12945,'27',125,19459),(12946,'24',125,19460),(12947,'0',125,19461),(12948,'0',125,4648),(12949,'37',125,19462),(12950,'29',125,19463),(12952,'34',125,19465),(12953,'0',125,19466),(12954,'0',125,4658),(12955,'0',125,19467),(12956,'31',125,19468),(12957,'21',125,19469),(12958,'31',125,19470),(12959,'26',125,19471),(12960,'31',125,19472),(12961,'0',125,19473),(12962,'22',125,19474),(12963,'30',125,19475),(12964,'36',125,19476),(12965,'0',125,19477),(12966,'36',125,19478),(12967,'33',125,19479),(12968,'24',125,19480),(12969,'35',125,19481),(12970,'32',125,19482),(12971,'31',125,19483),(12972,'36',125,19484),(12973,'39',125,19485),(12974,'26',125,19486),(12975,'33',125,19487),(12976,'34',125,19488),(12977,'0',125,19489),(12978,'35',125,19490),(12979,'15',125,19491),(12980,'0',125,4677),(12981,'35',125,19492),(12982,'0',125,19493),(12983,'0',125,19494),(12984,'30',125,19495),(12985,'0',125,4680),(12986,'30',125,19496),(12987,'25',125,4684),(12988,'32',125,19497),(12989,'0',125,19498),(12990,'0',125,19499),(12991,'30',125,19500),(12992,'39',125,4688),(12993,'37',125,19501),(12994,'39',125,4692),(12995,'0',125,19502),(12996,'33',125,19503),(12997,'31',125,19504),(12998,'30',125,19505),(12999,'28',125,19506),(13000,'35',125,19507),(13001,'39',125,19508),(13002,'42',125,19509),(13003,'0',125,3883),(13004,'17',125,19510),(13005,'28',125,19511),(13006,'12',125,19512),(13007,'23',125,19513),(13008,'0',125,3890),(13009,'39',125,19514),(13010,'34',125,19515),(13011,'36',125,19516),(13012,'22',125,19517),(13013,'44',125,19518),(13014,'21',125,19519),(13015,'33',125,19520),(13016,'0',125,19521),(13017,'45',125,19522),(13018,'35',125,19523),(13019,'0',125,19524),(13020,'0',125,19525),(13021,'0',125,19526),(13022,'0',125,19527),(13023,'0',125,19528),(13024,'0',125,19529),(13025,'29',125,19530),(13026,'28',125,19531),(13027,'0',125,19532),(13028,'31',125,19533),(13029,'0',125,19534),(13030,'41',125,19535),(13031,'29',125,19536),(13032,'38',125,19537),(13033,'34',125,19538),(13034,'34',125,19539),(13035,'39',125,19540),(13036,'36',125,19541),(13037,'24',125,19542),(13038,'27',125,19543),(13039,'32',125,19544),(13040,'20',125,19545),(13041,'0',125,19546),(13042,'38',125,19547),(13043,'0',125,19548),(13044,'37',125,19549),(13045,'30',125,19561),(13046,'0',125,19562),(13047,'0',125,19563),(13048,'42',125,19564),(13049,'0',125,19565),(13050,'15',125,19566),(13051,'27',125,3932),(13052,'20',125,19567),(13053,'0',125,19568),(13054,'38',125,19569),(13055,'41',125,19550),(13056,'29',125,19551),(13057,'43',125,19552),(13058,'35',125,19553),(13059,'32',125,19554),(13060,'40',125,19555),(13061,'37',125,19556),(13062,'0',125,19557),(13063,'38',125,19558),(13064,'37',125,19559),(13065,'0',125,19560),(13066,'20',125,3942),(13067,'18',125,19570),(13068,'39',125,19571),(13069,'36',125,19572),(13070,'0',125,3952),(13071,'26',125,19573),(13072,'23',125,19574),(13073,'19',125,19575),(13074,'29',125,19576),(13075,'23',125,19577),(13076,'44',125,19578),(13077,'41',125,19579),(13078,'29',125,19580),(13079,'0',125,19581),(13080,'26',125,19582),(13081,'36',125,3965),(13082,'29',125,19583),(13083,'33',125,19584),(13084,'31',125,3967),(13085,'40',125,19585),(13086,'0',125,19586),(13087,'26',125,19587),(13088,'36',125,19588),(13089,'26',125,19589),(13090,'37',125,19590),(13091,'0',125,19591),(13092,'37',125,19592),(13093,'32',125,19593),(13094,'33',125,19594),(13095,'0',125,19595),(13096,'0',125,19596),(13097,'37',125,19597),(13098,'25',125,19598),(13099,'28',125,3986),(13100,'44',125,19599),(13101,'0',125,19600),(13102,'18',125,19601),(13103,'29',125,19602),(13104,'0',125,19603),(13105,'27',125,3993),(13106,'24',125,19604),(13107,'37',125,19605),(13108,'30',125,19606),(13109,'34',125,19607),(13110,'21',125,19608),(13111,'20',125,19609),(13112,'21',125,19610),(13113,'36',125,19611),(13114,'38',125,19612),(13115,'30',125,19613),(13116,'0',125,19614),(13117,'19',125,19615),(13118,'35',125,19616),(13119,'38',125,19617),(13120,'30',125,19618),(13121,'27',125,19619),(13122,'0',125,19620),(13123,'25',125,19621),(13124,'16',125,19622),(13125,'38',125,4012),(13126,'32',125,19623),(13127,'11',125,19624),(13128,'36',125,4013),(13129,'34',125,19625),(13130,'0',125,19626),(13131,'0',125,19627),(13132,'22',125,19628),(13133,'24',125,19629),(13134,'34',125,19630),(13135,'17',125,19631),(13136,'22',125,19632),(13137,'38',125,4017),(13138,'23',125,19633),(13139,'39',125,4019),(13140,'27',125,19634),(13141,'29',125,19635),(13142,'29',125,19636),(13143,'0',125,4027),(13144,'23',125,19637),(13145,'23',125,19638),(13146,'28',125,19639),(13147,'24',125,19640),(13148,'35',125,19641),(13149,'33',125,19642),(13150,'25',125,19643),(13151,'34',125,19644),(13152,'35',125,4032),(13153,'0',125,4034),(13154,'35',125,20291),(13155,'0',125,4037),(13156,'34',125,19646),(13157,'0',125,19647),(13158,'0',125,19648),(13159,'14',125,19649),(13160,'34',125,19650),(13161,'37',125,19651),(13162,'35',125,19652),(13163,'28',125,19653),(13164,'0',125,4040),(13165,'23',125,19654),(13166,'0',125,19655),(13167,'19',125,19656),(13168,'26',125,19657),(13169,'18',125,19658),(13170,'38',125,19659),(13171,'32',125,19660),(13172,'0',125,4052),(13173,'30',125,19661),(13174,'16',125,19662),(13175,'37',125,19663),(13176,'29',125,19664),(13177,'0',125,19665),(13178,'39',125,19666),(13179,'11',125,19667),(13180,'26',125,19668),(13181,'28',125,4066),(13182,'0',125,4067),(13183,'16',125,19669),(13184,'41',125,19670),(13185,'0',125,19671),(13186,'0',125,19672),(13187,'35',125,19673),(13188,'0',125,19674),(13189,'0',125,19675),(13190,'22',125,19676),(13191,'36',125,19678),(13192,'24',125,19679),(13193,'0',125,19680),(13194,'27',125,19681),(13195,'34',125,19682),(13196,'30',125,4084),(13197,'25',125,19683),(13198,'0',125,19684),(13199,'20',125,19685),(13200,'33',125,19686),(13201,'29',125,19687),(13202,'37',125,19688),(13203,'24',125,19689),(13204,'32',125,4090),(13205,'35',125,19690),(13206,'24',125,19691),(13207,'0',125,19692),(13208,'34',125,19693),(13209,'0',125,19694),(13210,'32',125,19695),(13211,'35',125,19696),(13212,'33',125,19697),(13213,'34',125,19698),(13214,'45',125,19699),(13215,'0',125,19700),(13216,'31',125,19701),(13217,'0',125,4101),(13218,'27',125,19702),(13219,'0',125,19703),(13220,'0',125,19704),(13221,'0',125,19705),(13222,'30',125,19706),(13223,'23',125,4698),(13225,'22',125,19708),(13226,'16',125,19709),(13227,'25',125,19710),(13228,'35',125,19711),(13229,'18',125,19712),(13230,'31',125,19713),(13231,'30',125,19714),(13232,'35',125,19715),(13233,'46',125,19716),(13234,'42',125,4711),(13235,'0',125,19717),(13236,'25',125,19718),(13237,'21',125,19719),(13238,'36',125,4714),(13239,'32',125,19720),(13240,'37',125,19721),(13241,'0',125,4718),(13242,'32',125,19722),(13243,'31',125,4722),(13244,'23',125,19723),(13245,'0',125,4723),(13246,'34',125,4724),(13247,'25',125,19724),(13248,'27',125,19725),(13249,'25',125,19726),(13250,'0',125,4727),(13251,'21',125,19727),(13252,'32',125,19728),(13253,'37',125,19729),(13254,'26',125,19730),(13255,'15',125,19731),(13256,'32',125,19732),(13257,'21',125,19733),(13258,'36',125,19734),(13259,'20',125,19735),(13260,'21',125,19736),(13261,'32',125,4735),(13262,'35',125,19737),(13263,'0',125,19738),(13264,'26',125,19739),(13265,'31',125,19740),(13266,'0',125,4741),(13267,'24',125,19741),(13268,'0',125,4752),(13269,'0',125,19742),(13270,'32',125,19743),(13271,'0',125,19744),(13272,'0',125,19745),(13273,'24',125,19746),(13274,'25',125,19747),(13275,'25',125,19748),(13276,'35',125,19749),(13277,'0',125,19750),(13278,'38',125,19751),(13279,'35',125,19752),(13280,'0',125,19753),(13281,'36',125,19754),(13282,'39',125,4754),(13283,'42',125,19755),(13284,'20',125,19756),(13285,'36',125,19757),(13286,'38',125,4762),(13287,'31',125,19758),(13288,'0',125,19759),(13289,'0',125,19760),(13290,'26',125,19761),(13291,'0',125,19762),(13292,'0',125,19763),(13293,'24',125,19764),(13294,'30',125,19765),(13295,'0',125,19766),(13296,'17',125,19767),(13297,'26',125,19768),(13298,'37',125,4771),(13299,'21',125,4772),(13300,'42',125,19769),(13301,'37',125,19770),(13302,'21',125,19771),(13303,'26',125,19772),(13304,'0',125,19773),(13305,'29',125,4787),(13306,'26',125,19774),(13307,'0',125,4793),(13308,'31',125,19775),(13309,'36',125,4795),(13310,'28',125,4796),(13311,'0',125,19776),(13312,'33',125,19777),(13313,'0',125,19778),(13314,'21',125,19780),(13315,'36',125,19779),(13316,'19',125,19795),(13317,'0',125,19797),(13318,'42',125,4814),(13319,'31',125,4815),(13320,'0',125,19798),(13321,'42',125,4817),(13322,'44',125,19799),(13323,'0',125,19800),(13324,'40',125,19801),(13325,'41',125,19802),(13326,'0',125,4823),(13327,'15',125,19803),(13328,'32',125,19804),(13329,'33',125,19805),(13330,'0',125,19806),(13331,'31',125,19807),(13332,'30',125,19808),(13333,'38',125,19809),(13334,'12',125,19810),(13335,'0',125,4798),(13336,'39',125,19781),(13337,'13',125,19782),(13338,'0',125,19783),(13339,'31',125,19784),(13340,'27',125,19785),(13341,'10',125,19786),(13342,'23',125,19787),(13343,'24',125,19788),(13344,'0',125,19789),(13345,'9',125,19790),(13346,'38',125,19791),(13347,'29',125,20295),(13348,'0',125,19792),(13349,'0',125,19793),(13350,'38',125,19794),(13351,'38',125,19796),(13352,'0',125,19811),(13353,'16',125,19813),(13354,'0',125,19814),(13355,'33',125,19815),(13356,'0',125,4828),(13357,'30',125,19812),(13358,'31',125,19816),(13359,'14',125,19817),(13360,'36',125,19818),(13361,'0',125,19819),(13362,'29',125,19820),(13363,'30',125,19821),(13364,'36',125,4845),(13365,'33',125,19822),(13366,'31',125,19823),(13367,'31',125,19824),(13368,'41',125,19826),(13369,'30',125,19825),(13370,'33',125,19827),(13371,'39',125,19828),(13372,'27',125,19829),(13373,'15',125,19830),(13374,'31',125,19831),(13375,'0',125,19832),(13376,'26',125,19833),(13377,'14',125,19834),(13378,'26',125,19835),(13379,'0',125,19836),(13380,'25',125,19837),(13381,'33',125,19838),(13382,'19',125,19839),(13383,'28',125,19840),(13384,'20',125,19841),(13385,'0',125,19842),(13386,'38',125,19843),(13387,'29',125,19844),(13388,'0',125,19845),(13389,'26',125,19846),(13390,'0',125,19847),(13391,'0',125,19848),(13392,'32',125,19849),(13393,'27',125,4870),(13394,'32',125,19850),(13395,'0',125,19851),(13396,'39',125,19852),(13397,'15',125,19853),(13398,'35',125,19854),(13399,'37',125,4876),(13400,'37',125,19855),(13401,'14',125,19856),(13402,'37',125,19857),(13403,'27',125,19858),(13404,'0',125,19859),(13405,'22',125,4884),(13406,'30',125,19860),(13407,'0',125,19861),(13408,'30',125,19862),(13409,'30',125,19863),(13410,'37',125,19864),(13411,'28',125,19865),(13412,'25',125,19866),(13413,'0',125,19867),(13414,'32',125,19868),(13415,'42',125,19869),(13416,'23',125,19870),(13417,'24',125,19871),(13418,'40',125,19872),(13419,'26',125,19873),(13420,'35',125,19874),(13421,'30',125,19875),(13422,'36',125,19876),(13423,'27',125,19877),(13424,'38',125,19878),(13425,'22',125,19879),(13426,'36',125,19880),(13427,'33',125,19881),(13428,'44',125,19882),(13429,'24',125,19883),(13430,'0',125,19884),(13431,'39',125,19885),(13432,'24',125,19886),(13433,'39',125,4910),(13434,'0',125,19887),(13435,'19',125,19888),(13436,'39',125,19889),(13437,'18',125,19890),(13438,'42',125,19891),(13439,'28',125,19892),(13440,'36',125,19893),(13441,'25',125,19894),(13442,'40',125,4980),(13443,'0',125,19895),(13444,'0',125,19896),(13445,'35',125,4987),(13446,'16',125,19897),(13447,'36',125,19898),(13448,'0',125,4992),(13449,'44',125,19899),(13450,'37',125,4995),(13451,'38',125,19900),(13452,'17',125,19901),(13453,'31',125,19902),(13454,'34',125,5003),(13455,'22',125,19903),(13456,'27',125,19904),(13457,'40',125,19905),(13458,'34',125,19906),(13459,'18',125,19907),(13460,'0',125,19908),(13461,'24',125,19909),(13462,'31',125,5014),(13463,'16',125,5017),(13464,'0',125,19910),(13465,'34',125,19911),(13466,'0',125,19912),(13467,'20',125,19913),(13468,'29',125,19914),(13469,'24',125,19915),(13470,'29',125,19916),(13471,'36',125,19917),(13472,'21',125,5026),(13473,'32',125,19918),(13474,'35',125,19919),(13475,'31',125,19920),(13476,'20',125,19921),(13477,'33',125,19922),(13478,'37',125,19923),(13479,'0',125,19924),(13480,'38',125,19925),(13481,'32',125,19926),(13482,'0',125,19927),(13483,'0',125,19928),(13484,'0',125,19929),(13485,'23',125,19930),(13486,'22',125,19931),(13487,'0',125,19932),(13488,'0',125,5102),(13489,'20',125,19933),(13490,'18',125,19934),(13491,'24',125,19935),(13492,'37',125,19936),(13493,'36',125,5107),(13494,'37',125,19937),(13495,'18',125,19938),(13496,'27',125,19939),(13497,'26',125,19940),(13498,'41',125,19941),(13499,'37',125,19942),(13500,'35',125,19943),(13501,'14',125,19944),(13502,'21',125,5118),(13503,'32',125,19945),(13504,'36',125,19946),(13505,'35',125,19947),(13506,'28',125,19948),(13507,'30',125,19949),(13508,'28',125,19950),(13509,'0',125,19951),(13510,'27',125,19952),(13511,'28',125,5124),(13512,'33',125,5127),(13513,'26',125,19953),(13514,'33',125,19954),(13515,'31',125,19955),(13516,'0',125,19956),(13517,'28',125,19957),(13518,'22',125,19958),(13519,'0',125,19959),(13520,'27',125,19960),(13521,'18',125,19961),(13522,'31',125,19962),(13523,'28',125,19963),(13524,'31',125,19964),(13525,'35',125,19965),(13526,'33',125,19966),(13527,'30',125,19967),(13528,'33',125,19968),(13529,'43',125,19969),(13530,'24',125,19970),(13531,'32',125,19971),(13532,'37',125,5181),(13533,'0',125,19974),(13534,'25',125,19975),(13535,'24',125,19972),(13536,'0',125,19973),(13537,'36',125,19976),(13538,'28',125,19977),(13539,'28',125,19978),(13540,'0',125,19980),(13541,'36',125,19982),(13542,'36',125,19983),(13543,'36',125,5193),(13544,'28',125,19979),(13545,'0',125,19984),(13546,'36',125,19981),(13547,'23',125,19985),(13548,'0',125,19986),(13549,'24',125,19987),(13550,'29',125,5196),(13551,'33',125,19988),(13552,'25',125,19989),(13553,'18',125,19990),(13554,'0',125,19991),(13555,'24',125,19992),(13556,'24',125,19993),(13557,'29',125,19994),(13558,'27',125,19995),(13559,'0',125,19996),(13560,'0',125,19997),(13561,'28',125,19998),(13562,'16',125,19999),(13563,'0',125,20000),(13564,'25',125,20001),(13565,'37',125,20002),(13566,'0',125,20003),(13567,'28',125,20004),(13568,'27',125,20005),(13569,'28',125,20006),(13570,'0',125,20007),(13571,'28',125,20008),(13572,'27',125,20009),(13573,'20',125,20010),(13574,'0',125,20011),(13575,'19',125,5214),(13576,'29',125,20012),(13577,'0',125,20013),(13579,'20',125,20014),(13580,'26',125,20015),(13581,'21',125,5257),(13582,'0',125,20016),(13583,'28',125,20017),(13584,'0',125,20019),(13585,'35',125,20018),(13586,'0',125,20020),(13587,'10',125,5259),(13588,'33',125,20021),(13589,'23',125,20022),(13590,'20',125,20023),(13591,'20',125,20024),(13592,'24',125,20025),(13593,'31',125,20026),(13594,'22',125,20027),(13595,'32',125,20029),(13596,'35',125,20030),(13597,'33',125,20031),(13598,'27',125,20028),(13599,'29',125,20032),(13600,'41',125,20034),(13601,'21',125,20033),(13602,'0',125,20035),(13603,'0',125,20036),(13604,'33',125,20037),(13605,'24',125,20038),(13606,'33',125,5282),(13607,'33',125,20039),(13608,'31',125,20040),(13609,'23',125,20041),(13610,'27',125,20042),(13611,'26',125,20043),(13612,'20',125,20044),(13613,'38',125,20045),(13614,'26',125,20046),(13615,'25',125,20047),(13616,'36',125,20048),(13617,'0',125,5291),(13618,'39',125,20049),(13619,'0',125,5296),(13620,'37',125,20050),(13621,'31',125,20051),(13622,'32',125,20052),(13623,'29',125,20053),(13624,'31',125,5301),(13625,'0',125,20054),(13626,'25',125,20055),(13627,'28',125,5304),(13628,'13',125,20056),(13629,'30',125,20057),(13630,'38',125,20058),(13631,'22',125,20059),(13632,'0',125,20060),(13633,'0',125,20061),(13634,'31',125,20062),(13635,'34',125,20063),(13636,'30',125,20064),(13637,'37',125,20065),(13638,'35',125,20066),(13639,'0',125,20067),(13640,'35',125,5319),(13641,'36',125,20068),(13642,'38',125,20069),(13643,'35',125,5322),(13644,'17',125,20070),(13645,'36',125,20071),(13646,'24',125,20072),(13647,'38',125,20073),(13648,'36',125,20074),(13649,'42',125,20075),(13650,'23',125,20076),(13651,'41',125,20077),(13652,'18',125,20078),(13653,'16',125,20079),(13654,'23',125,20080),(13655,'26',125,20081),(13656,'0',125,5338),(13657,'0',125,20082),(13658,'35',125,20083),(13659,'27',125,20084),(13660,'0',125,20085),(13661,'0',125,5347),(13662,'21',125,20086),(13663,'13',125,20087),(13664,'0',125,20088),(13665,'26',125,20089),(13666,'24',125,20090),(13667,'22',125,20091),(13668,'34',125,20092),(13669,'0',125,20093),(13670,'30',125,20094),(13671,'23',125,20095),(13672,'0',125,20096),(13673,'41',125,20097),(13674,'29',125,4917),(13675,'24',125,20098),(13676,'19',125,20099),(13677,'23',125,20100),(13678,'0',125,20101),(13679,'0',125,20102),(13680,'0',125,20103),(13681,'29',125,4928),(13682,'0',125,20104),(13683,'13',125,20105),(13684,'19',125,20106),(13685,'38',125,20107),(13686,'35',125,20108),(13687,'15',125,20109),(13688,'0',125,20110),(13689,'18',125,20111),(13690,'23',125,20112),(13691,'37',125,4936),(13692,'28',125,20113),(13693,'31',125,20114),(13694,'35',125,4939),(13695,'23',125,20115),(13696,'27',125,20116),(13697,'25',125,4946),(13698,'20',125,20117),(13699,'38',125,4951),(13700,'0',125,20118),(13701,'45',125,20119),(13702,'31',125,20120),(13703,'30',125,20121),(13704,'0',125,20122),(13705,'0',125,4955),(13706,'44',125,20123),(13707,'36',125,20124),(13708,'39',125,20125),(13709,'23',125,20126),(13710,'0',125,20127),(13711,'29',125,20128),(13712,'0',125,20129),(13713,'37',125,4958),(13714,'0',125,20130),(13715,'21',125,20131),(13716,'30',125,20132),(13717,'35',125,20133),(13718,'22',125,20134),(13719,'31',125,20135),(13720,'21',125,20136),(13721,'30',125,20137),(13722,'0',125,20138),(13723,'30',125,4974),(13724,'0',125,20139),(13725,'33',125,20140),(13726,'36',125,20141),(13727,'28',125,20142),(13728,'43',125,20143),(13729,'22',125,20144),(13730,'43',125,20145),(13731,'13',125,20146),(13732,'0',125,20147),(13733,'39',125,5053),(13734,'0',125,20148),(13735,'31',125,20149),(13736,'17',125,20150),(13737,'0',125,20151),(13738,'24',125,20152),(13739,'34',125,20153),(13740,'0',125,20154),(13741,'17',125,20155),(13742,'0',125,20156),(13743,'20',125,20157),(13744,'25',125,20158),(13745,'0',125,20159),(13746,'37',125,5070),(13747,'37',125,20160),(13748,'17',125,20161),(13749,'0',125,20162),(13750,'42',125,5071),(13751,'0',125,5073),(13752,'25',125,20163),(13753,'0',125,20164),(13754,'0',125,20165),(13755,'42',125,20166),(13756,'15',125,20167),(13757,'34',125,20168),(13758,'0',125,20169),(13759,'38',125,5080),(13760,'36',125,20170),(13761,'27',125,20171),(13762,'38',125,20172),(13763,'0',125,20173),(13764,'0',125,20174),(13765,'30',125,20175),(13766,'31',125,20176),(13767,'30',125,20177),(13768,'34',125,20178),(13769,'24',125,20179),(13770,'30',125,20180),(13771,'27',125,20181),(13772,'21',125,20182),(13773,'43',125,20183),(13774,'38',125,5136),(13775,'33',125,20184),(13776,'33',125,20185),(13777,'38',125,20186),(13778,'0',125,20187),(13779,'23',125,20188),(13780,'32',125,20189),(13781,'24',125,20190),(13782,'27',125,20191),(13783,'20',125,5146),(13784,'0',125,20192),(13785,'32',125,20193),(13786,'0',125,20194),(13787,'38',125,20195),(13788,'29',125,20196),(13789,'32',125,20197),(13790,'34',125,20198),(13791,'31',125,20199),(13792,'42',125,20200),(13793,'39',125,5153),(13794,'23',125,20201),(13795,'38',125,20202),(13796,'32',125,20203),(13797,'23',125,20204),(13798,'28',125,20205),(13799,'0',125,20206),(13800,'25',125,20207),(13801,'32',125,20208),(13802,'0',125,20209),(13803,'29',125,20210),(13804,'20',125,20211),(13805,'25',125,20212),(13806,'38',125,20213),(13807,'0',125,20214),(13808,'0',125,20215),(13809,'29',125,20216),(13810,'0',125,5358),(13811,'13',125,20217),(13812,'40',125,5364),(13813,'35',125,5368),(13814,'32',125,20218),(13815,'23',125,20219),(13816,'0',125,20220),(13817,'21',125,20221),(13818,'0',125,20222),(13819,'32',125,20223),(13820,'0',125,20224),(13821,'0',125,5233),(13823,'28',125,20226),(13824,'27',125,20227),(13825,'28',125,20228),(13826,'0',125,20229),(13827,'28',125,20230),(13828,'34',125,20231),(13829,'22',125,20232),(13830,'25',125,20233),(13831,'0',125,20234),(13832,'15',125,20235),(13833,'32',125,20236),(13834,'38',125,20237),(13835,'40',125,20238),(13836,'40',125,20239),(13837,'0',125,20240),(13838,'32',125,20241),(13839,'23',125,20242),(13840,'30',125,20243),(13841,'30',125,20244),(13842,'30',125,20245),(13843,'29',125,20246),(13844,'30',125,20247),(13845,'42',125,20248),(13846,'0',125,20249),(13847,'0',125,20250),(13848,'26',125,20251),(13849,'22',125,20252),(13850,'19',125,20253),(13851,'34',125,20254),(13852,'24',125,20255),(13853,'28',125,20256),(13854,'44',125,20257),(13855,'35',125,5385),(13856,'29',125,20258),(13857,'30',125,20259),(13858,'16',125,20260),(13859,'24',125,20261),(13860,'25',125,20262),(13861,'31',125,20263),(13862,'25',125,20264),(13863,'14',125,5390),(13864,'37',125,5391),(13865,'34',125,20265),(13866,'26',125,20266),(13867,'23',125,20267),(13868,'27',125,20268),(13869,'25',125,20269),(13870,'0',125,20270),(13871,'0',125,20271),(13872,'0',125,20272),(13873,'0',125,5400),(13874,'9',125,4109),(13875,'0',125,20273),(13876,'0',125,20274),(13877,'0',125,20275),(13878,'9',125,4114),(13879,'14',125,20276),(13880,'13',125,20277),(13881,'9',125,20278),(13882,'0',125,20279),(13883,'12',125,20280),(13884,'7',125,20281),(13885,'13',125,20282),(13886,'0',125,20283),(13887,'8',125,20284),(13888,'12',125,20285),(13889,'6',125,4133),(13890,'23',125,18452),(13891,'23',125,18820),(13892,'22',125,19464),(13893,'30',125,19677),(13894,'38',125,19707),(13897,'33',125,20225),(13898,'4',134,15968),(13899,'2',134,15998);
/*!40000 ALTER TABLE `exam_studentexam` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `exam_studentexamquestion`
--

DROP TABLE IF EXISTS `exam_studentexamquestion`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `exam_studentexamquestion` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `studentAnswer` varchar(2) NOT NULL,
  `answersOrder` varchar(10) NOT NULL,
  `question_id` int(11) DEFAULT NULL,
  `studentExam_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `exam_studentexamques_question_id_f120cc5c_fk_topic_que` (`question_id`),
  KEY `exam_studentexamques_studentExam_id_0fcf82a2_fk_exam_stud` (`studentExam_id`),
  CONSTRAINT `exam_studentexamques_question_id_f120cc5c_fk_topic_que` FOREIGN KEY (`question_id`) REFERENCES `topic_question` (`id`),
  CONSTRAINT `exam_studentexamques_studentExam_id_0fcf82a2_fk_exam_stud` FOREIGN KEY (`studentExam_id`) REFERENCES `exam_studentexam` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=46440 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `exam_studentexamquestion`
--

LOCK TABLES `exam_studentexamquestion` WRITE;
/*!40000 ALTER TABLE `exam_studentexamquestion` DISABLE KEYS */;
INSERT INTO `exam_studentexamquestion` VALUES (466,'A','1320',24,3435),(467,'A','0321',35,3435),(468,'A','3120',13,3435),(469,'A','0132',20,3435),(470,'A','2130',41,3435),(471,'A','3201',34,3435),(472,'A','1203',37,3435),(473,'A','0132',29,3435),(474,'A','1203',33,3435),(475,'A','1023',43,3435),(476,'A','1302',39,3435),(477,'A','2031',36,3435),(478,'A','0231',31,3435),(479,'A','1203',32,3435),(480,'A','1032',30,3435),(481,'B','3210',42,3436),(482,'B','1023',18,3436),(483,'B','3120',24,3436),(484,'B','3021',33,3436),(485,'B','1320',36,3436),(486,'B','0231',32,3436),(487,'B','0321',20,3436),(488,'B','1230',31,3436),(489,'B','0312',30,3436),(490,'B','0132',43,3436),(491,'B','2301',26,3436),(492,'B','2013',35,3436),(493,'B','0123',40,3436),(494,'B','0123',37,3436),(495,'B','0321',39,3436),(496,'A','1320',24,3437),(497,'A','0321',35,3437),(498,'A','3120',13,3437),(499,'A','0132',20,3437),(500,'A','2130',41,3437),(501,'A','3201',34,3437),(502,'A','1203',37,3437),(503,'A','0132',29,3437),(504,'A','1203',33,3437),(505,'A','1023',43,3437),(506,'A','1302',39,3437),(507,'A','2031',36,3437),(508,'A','0231',31,3437),(509,'A','1203',32,3437),(510,'A','1032',30,3437),(7969,'A','13204',169,4869),(7970,'E','21340',178,4869),(7971,'C','23041',170,4869),(7972,'D','43102',172,4869),(7973,'E','41230',174,4869),(7974,'B','04231',158,4869),(7975,'D','43012',161,4869),(7976,'A','03412',155,4869),(7977,'C','21304',159,4869),(7978,'C','43210',333,4869),(7979,'B','20314',168,4870),(7980,'A','02431',174,4870),(7981,'A','03142',172,4870),(7982,'B','10234',175,4870),(7983,'C','41032',178,4870),(7984,'C','31420',163,4870),(7985,'C','14023',338,4870),(7986,'A','04231',335,4870),(7987,'D','41203',337,4870),(7988,'B','24130',332,4870),(7989,'D','43201',168,4871),(7990,'D','12403',177,4871),(7991,'C','42031',169,4871),(7992,'C','21034',172,4871),(7993,'A','01243',170,4871),(7994,'E','13240',156,4871),(7995,'E','34120',333,4871),(7996,'B','30241',160,4871),(7997,'E','43120',157,4871),(7998,'B','20413',167,4871),(7999,'D','42103',171,4872),(8000,'E','31240',178,4872),(8001,'D','12403',179,4872),(8002,'B','20413',169,4872),(8003,'A','42103',176,4872),(8004,'D','24031',338,4872),(8005,'B','30241',155,4872),(8006,'E','21340',164,4872),(8007,'C','23014',332,4872),(8008,'B','10432',163,4872),(8009,'C','43201',174,4873),(8010,'D','12034',170,4873),(8011,'E','34120',176,4873),(8012,'D','34201',175,4873),(8013,'E','14302',171,4873),(8014,'C','02431',337,4873),(8015,'D','14023',334,4873),(8016,'B','30412',160,4873),(8017,'C','34012',333,4873),(8018,'C','24013',167,4873),(8019,'D','43201',168,4874),(8020,'A','12403',177,4874),(8021,'C','42031',169,4874),(8022,'C','21034',172,4874),(8023,'E','01243',170,4874),(8024,'A','13240',156,4874),(8025,'B','34120',333,4874),(8026,'E','30241',160,4874),(8027,'E','43120',157,4874),(8028,'D','20413',167,4874),(8029,'E','32041',171,4875),(8030,'C','42301',170,4875),(8031,'A','04123',169,4875),(8032,'D','32401',168,4875),(8033,'E','24130',179,4875),(8034,'D','41032',338,4875),(8035,'A','02431',157,4875),(8036,'E','24130',164,4875),(8037,'C','14032',163,4875),(8038,'D','21304',167,4875),(8039,'C','34012',173,4876),(8040,'B','20134',174,4876),(8041,'E','13420',168,4876),(8042,'D','12403',169,4876),(8043,'D','41302',175,4876),(8044,'A','04231',333,4876),(8045,'B','03214',158,4876),(8046,'D','02341',155,4876),(8047,'B','20341',337,4876),(8048,'E','31420',163,4876),(8049,'E','23401',176,4877),(8050,'C','10423',168,4877),(8051,'B','40321',170,4877),(8052,'A','12430',171,4877),(8053,'C','43021',172,4877),(8054,'B','10342',158,4877),(8055,'E','24031',161,4877),(8056,'B','42301',335,4877),(8057,'E','31240',332,4877),(8058,'C','14023',163,4877),(8059,'B','23104',179,4878),(8060,'B','10324',174,4878),(8061,'A','03142',169,4878),(8062,'C','31042',168,4878),(8063,'B','10342',176,4878),(8064,'D','23014',161,4878),(8065,'E','13240',155,4878),(8066,'A','03421',156,4878),(8067,'D','32104',333,4878),(8068,'A','31420',160,4878),(8069,'D','41302',177,4879),(8070,'D','43102',178,4879),(8071,'D','32104',169,4879),(8072,'C','20413',168,4879),(8073,'D','43201',179,4879),(8074,'E','14023',161,4879),(8075,'E','13240',163,4879),(8076,'A','31042',158,4879),(8077,'B','32104',155,4879),(8078,'D','14302',334,4879),(8079,'D','30412',171,4880),(8080,'E','04213',177,4880),(8081,'B','30241',173,4880),(8082,'D','43201',179,4880),(8083,'E','31240',178,4880),(8084,'E','20134',160,4880),(8085,'A','20413',337,4880),(8086,'D','31402',333,4880),(8087,'D','04321',159,4880),(8088,'C','32041',335,4880),(8089,'C','01342',174,4881),(8090,'C','23140',173,4881),(8091,'A','01234',178,4881),(8092,'A','03142',179,4881),(8093,'A','42310',168,4881),(8094,'B','02134',166,4881),(8095,'E','41032',335,4881),(8096,'B','40312',167,4881),(8097,'B','04312',160,4881),(8098,'D','31402',158,4881),(8099,'B','14203',171,4882),(8100,'C','01342',177,4882),(8101,'E','34120',168,4882),(8102,'B','40312',176,4882),(8103,'C','32014',174,4882),(8104,'A','20134',159,4882),(8105,'D','34102',332,4882),(8106,'C','43021',335,4882),(8107,'E','13240',334,4882),(8108,'B','24130',333,4882),(8109,'B','23014',175,4883),(8110,'B','20413',177,4883),(8111,'A','04213',168,4883),(8112,'E','14023',170,4883),(8113,'E','43120',173,4883),(8114,'D','24013',334,4883),(8115,'B','20314',159,4883),(8116,'B','03214',166,4883),(8117,'C','40312',333,4883),(8118,'A','14032',163,4883),(8119,'D','21304',179,4884),(8120,'E','40123',171,4884),(8121,'A','40231',170,4884),(8122,'A','02143',172,4884),(8123,'E','03124',175,4884),(8124,'C','21034',332,4884),(8125,'C','21043',333,4884),(8126,'B','40213',334,4884),(8127,'B','14320',337,4884),(8128,'A','41023',335,4884),(8129,'A','34012',170,4885),(8130,'C','43012',169,4885),(8131,'B','10234',168,4885),(8132,'E','12340',172,4885),(8133,'D','42103',174,4885),(8134,'A','30124',338,4885),(8135,'D','23104',159,4885),(8136,'C','23041',164,4885),(8137,'C','31024',334,4885),(8138,'E','12043',161,4885),(8139,'B','30412',173,4886),(8140,'E','13420',179,4886),(8141,'C','02431',176,4886),(8142,'E','24103',171,4886),(8143,'D','43201',169,4886),(8144,'E','43210',338,4886),(8145,'B','43201',160,4886),(8146,'A','03142',332,4886),(8147,'A','01234',163,4886),(8148,'D','43201',164,4886),(8149,'B','10432',169,4887),(8150,'A','01324',168,4887),(8151,'A','42310',170,4887),(8152,'B','10324',172,4887),(8153,'D','40132',173,4887),(8154,'C','23140',157,4887),(8155,'D','20143',337,4887),(8156,'A','14230',156,4887),(8157,'D','14023',155,4887),(8158,'B','43201',333,4887),(8159,'A','02134',178,4888),(8160,'A','01243',174,4888),(8161,'B','20413',179,4888),(8162,'A','01423',176,4888),(8163,'D','43210',171,4888),(8164,'A','41230',166,4888),(8165,'D','03241',155,4888),(8166,'C','40213',334,4888),(8167,'A','24103',163,4888),(8168,'E','42130',332,4888),(8169,'C','10423',175,4889),(8170,'C','21043',177,4889),(8171,'E','03214',168,4889),(8172,'E','43210',173,4889),(8173,'B','30214',174,4889),(8174,'A','42013',337,4889),(8175,'A','04132',338,4889),(8176,'B','10234',167,4889),(8177,'C','30241',335,4889),(8178,'B','10243',160,4889),(8179,'E','41320',179,4890),(8180,'D','24103',175,4890),(8181,'C','31024',172,4890),(8182,'B','10423',176,4890),(8183,'D','43201',169,4890),(8184,'C','24130',334,4890),(8185,'E','12403',166,4890),(8186,'D','34012',167,4890),(8187,'E','21340',156,4890),(8188,'A','03421',163,4890),(8189,'A','01243',177,4891),(8190,'D','13240',170,4891),(8191,'C','20341',174,4891),(8192,'B','24103',171,4891),(8193,'E','21340',176,4891),(8194,'C','43021',332,4891),(8195,'D','24301',334,4891),(8196,'E','23410',156,4891),(8197,'E','30412',160,4891),(8198,'E','13240',167,4891),(8199,'A','30412',173,4892),(8200,'E','13420',179,4892),(8201,'B','02431',176,4892),(8202,'C','24103',171,4892),(8203,'D','43201',169,4892),(8204,'A','43210',338,4892),(8205,'E','43201',160,4892),(8206,'D','03142',332,4892),(8207,'B','01234',163,4892),(8208,'C','43201',164,4892),(8209,'D','43102',168,4893),(8210,'A','03241',177,4893),(8211,'A','41203',170,4893),(8212,'B','30421',169,4893),(8213,'A','02413',172,4893),(8214,'A','42103',155,4893),(8215,'D','31204',161,4893),(8216,'E','42130',337,4893),(8217,'C','43012',333,4893),(8218,'A','02341',163,4893),(8219,'B','30412',172,4894),(8220,'E','30124',169,4894),(8221,'D','41230',173,4894),(8222,'C','42013',168,4894),(8223,'B','20314',178,4894),(8224,'A','01342',155,4894),(8225,'E','21034',167,4894),(8226,'C','01432',159,4894),(8227,'D','41203',158,4894),(8228,'B','20314',161,4894),(8239,'B','20143',175,4896),(8240,'A','14230',171,4896),(8241,'D','13402',177,4896),(8242,'B','20314',172,4896),(8243,'D','21304',168,4896),(8244,'B','10342',164,4896),(8245,'A','03412',157,4896),(8246,'D','21340',155,4896),(8247,'C','02431',334,4896),(8248,'A','30214',338,4896),(8249,'D','12403',168,4897),(8250,'C','01423',174,4897),(8251,'E','43102',171,4897),(8252,'C','43012',177,4897),(8253,'D','32041',172,4897),(8254,'B','30214',157,4897),(8255,'A','43012',158,4897),(8256,'A','10324',332,4897),(8257,'B','34201',338,4897),(8258,'C','20431',334,4897),(8259,'E','04123',175,4898),(8260,'C','23014',168,4898),(8261,'D','34201',178,4898),(8262,'E','14320',172,4898),(8263,'B','40123',179,4898),(8264,'D','31204',163,4898),(8265,'E','30214',161,4898),(8266,'B','20143',160,4898),(8267,'D','24103',159,4898),(8268,'A','21034',335,4898),(8269,'C','42031',171,4899),(8270,'B','40123',169,4899),(8271,'D','10324',176,4899),(8272,'E','21340',168,4899),(8273,'A','04123',172,4899),(8274,'C','24013',332,4899),(8275,'E','40231',333,4899),(8276,'A','10432',156,4899),(8277,'B','30412',334,4899),(8278,'A','04312',338,4899),(8279,'E','41320',175,4900),(8280,'D','14203',179,4900),(8281,'E','12430',174,4900),(8282,'A','03214',176,4900),(8283,'E','13420',172,4900),(8284,'E','12340',335,4900),(8285,'D','32401',159,4900),(8286,'A','03124',155,4900),(8287,'A','30142',164,4900),(8288,'A','01324',158,4900),(8289,'D','41302',177,4901),(8290,'D','43102',178,4901),(8291,'D','32104',169,4901),(8292,'C','20413',168,4901),(8293,'D','43201',179,4901),(8294,'C','14023',161,4901),(8295,'E','13240',163,4901),(8296,'C','31042',158,4901),(8297,'D','32104',155,4901),(8298,'B','14302',334,4901),(8299,'A','04123',176,4902),(8300,'C','24013',175,4902),(8301,'D','21403',172,4902),(8302,'A','42103',168,4902),(8303,'E','30214',171,4902),(8304,'D','32401',163,4902),(8305,'C','13024',333,4902),(8306,'B','30124',161,4902),(8307,'A','01234',338,4902),(8308,'D','42031',157,4902),(8309,'C','23041',172,4903),(8310,'A','02143',177,4903),(8311,'D','12403',176,4903),(8312,'A','04231',179,4903),(8313,'D','34201',175,4903),(8314,'C','32041',156,4903),(8315,'C','10432',167,4903),(8316,'B','01423',161,4903),(8317,'E','20314',332,4903),(8318,'B','14302',159,4903),(8319,'A','04123',176,4904),(8320,'D','24013',175,4904),(8321,'D','21403',172,4904),(8322,'D','42103',168,4904),(8323,'B','30214',171,4904),(8324,'D','32401',163,4904),(8325,'C','13024',333,4904),(8326,'A','30124',161,4904),(8327,'D','01234',338,4904),(8328,'E','42031',157,4904),(8339,'B','10342',171,4906),(8340,'B','30421',173,4906),(8341,'C','31042',170,4906),(8342,'E','41320',169,4906),(8343,'A','01234',172,4906),(8344,'E','13420',164,4906),(8345,'B','14023',159,4906),(8346,'E','24130',160,4906),(8347,'D','23410',163,4906),(8348,'A','04132',156,4906),(8349,'D','14203',169,4907),(8350,'B','12430',172,4907),(8351,'E','32014',171,4907),(8352,'E','13420',175,4907),(8353,'B','43021',170,4907),(8354,'E','13420',166,4907),(8355,'C','32104',156,4907),(8356,'A','03214',164,4907),(8357,'C','43012',163,4907),(8358,'C','23041',334,4907),(8359,'A','04213',173,4908),(8360,'D','13204',168,4908),(8361,'A','43210',174,4908),(8362,'A','03421',178,4908),(8363,'B','30241',170,4908),(8364,'A','01342',158,4908),(8365,'A','02341',332,4908),(8366,'C','41032',338,4908),(8367,'A','03124',163,4908),(8368,'A','41023',337,4908),(8369,'D','34102',176,4909),(8370,'C','32014',169,4909),(8371,'A','04312',178,4909),(8372,'A','41023',168,4909),(8373,'E','31420',170,4909),(8374,'D','02413',155,4909),(8375,'E','20413',338,4909),(8376,'C','34021',164,4909),(8377,'C','24013',163,4909),(8378,'D','42301',161,4909),(8379,'E','42301',171,4910),(8380,'B','20341',179,4910),(8381,'A','43021',177,4910),(8382,'E','24130',175,4910),(8383,'A','02413',169,4910),(8384,'E','21340',158,4910),(8385,'B','30412',163,4910),(8386,'D','23041',157,4910),(8387,'C','21043',335,4910),(8388,'A','02431',167,4910),(8389,'E','13204',174,4911),(8390,'B','40321',177,4911),(8391,'B','30412',178,4911),(8392,'D','12403',168,4911),(8393,'C','24013',170,4911),(8394,'A','04231',334,4911),(8395,'A','02143',337,4911),(8396,'B','42130',335,4911),(8397,'A','01234',333,4911),(8398,'D','24301',156,4911),(8399,'B','32041',171,4912),(8400,'C','42301',170,4912),(8401,'A','04123',169,4912),(8402,'D','32401',168,4912),(8403,'B','24130',179,4912),(8404,'D','41032',338,4912),(8405,'E','02431',157,4912),(8406,'A','24130',164,4912),(8407,'C','14032',163,4912),(8408,'E','21304',167,4912),(8409,'A','03214',178,4913),(8410,'D','41302',176,4913),(8411,'E','13204',169,4913),(8412,'C','43012',172,4913),(8413,'D','34201',177,4913),(8414,'A','04132',156,4913),(8415,'D','23041',337,4913),(8416,'C','41032',155,4913),(8417,'B','20143',334,4913),(8418,'E','03124',167,4913),(8419,'B','21304',179,4914),(8420,'B','40123',171,4914),(8421,'B','40231',170,4914),(8422,'A','02143',172,4914),(8423,'A','03124',175,4914),(8424,'C','21034',332,4914),(8425,'A','21043',333,4914),(8426,'D','40213',334,4914),(8427,'E','14320',337,4914),(8428,'D','41023',335,4914),(8429,'D','23401',176,4915),(8430,'B','10423',168,4915),(8431,'C','40321',170,4915),(8432,'A','12430',171,4915),(8433,'C','43021',172,4915),(8434,'B','10342',158,4915),(8435,'D','24031',161,4915),(8436,'B','42301',335,4915),(8437,'E','31240',332,4915),(8438,'C','14023',163,4915),(8439,'A','14230',171,4916),(8440,'B','30214',168,4916),(8441,'D','41203',172,4916),(8442,'D','32401',179,4916),(8443,'D','14302',170,4916),(8444,'B','10432',159,4916),(8445,'D','32104',156,4916),(8446,'A','01423',164,4916),(8447,'E','24130',157,4916),(8448,'E','23041',334,4916),(8469,'C','42031',171,4919),(8470,'B','40123',169,4919),(8471,'B','10324',176,4919),(8472,'E','21340',168,4919),(8473,'A','04123',172,4919),(8474,'B','24013',332,4919),(8475,'B','40231',333,4919),(8476,'B','10432',156,4919),(8477,'B','30412',334,4919),(8478,'B','04312',338,4919),(8479,'C','43021',168,4920),(8480,'D','30214',174,4920),(8481,'A','40213',176,4920),(8482,'D','21304',169,4920),(8483,'A','04123',177,4920),(8484,'C','42013',159,4920),(8485,'E','34210',160,4920),(8486,'C','34021',158,4920),(8487,'C','21034',161,4920),(8488,'E','34210',155,4920),(8499,'A','41320',175,4922),(8500,'D','14203',179,4922),(8501,'C','12430',174,4922),(8502,'D','03214',176,4922),(8503,'E','13420',172,4922),(8504,'A','12340',335,4922),(8505,'D','32401',159,4922),(8506,'A','03124',155,4922),(8507,'B','30142',164,4922),(8508,'C','01324',158,4922),(9780,'0','34210',193,5017),(9781,'0','24013',201,5017),(9782,'0','10324',195,5017),(9783,'0','23041',186,5017),(9784,'0','12340',154,5017),(9785,'0','34120',196,5017),(9786,'0','43120',333,5017),(9787,'0','01324',334,5017),(9788,'0','23401',156,5017),(9789,'0','10432',187,5017),(9800,'A','01234',190,5019),(9801,'D','24310',201,5019),(9802,'A','12430',193,5019),(9803,'E','32401',148,5019),(9804,'C','02134',176,5019),(9805,'E','43120',199,5019),(9806,'E','32041',157,5019),(9807,'D','20413',337,5019),(9808,'A','02143',161,5019),(9809,'C','41203',189,5019),(9810,'D','23401',168,5020),(9811,'D','42013',153,5020),(9812,'B','30142',188,5020),(9813,'A','03124',193,5020),(9814,'B','10432',175,5020),(9815,'E','21340',195,5020),(9816,'E','13204',163,5020),(9817,'D','14230',157,5020),(9818,'D','12403',338,5020),(9819,'0','34210',150,5020),(9820,'D','21403',200,5021),(9821,'D','13402',193,5021),(9822,'A','03142',178,5021),(9823,'E','12340',192,5021),(9824,'A','01423',199,5021),(9825,'D','12403',201,5021),(9826,'D','04123',335,5021),(9827,'A','03214',337,5021),(9828,'E','34120',159,5021),(9829,'E','42130',151,5021),(9830,'E','34210',193,5022),(9831,'C','24013',201,5022),(9832,'B','10324',195,5022),(9833,'C','23041',186,5022),(9834,'A','12340',154,5022),(9835,'E','34120',196,5022),(9836,'E','43120',333,5022),(9837,'B','01324',334,5022),(9838,'E','23401',156,5022),(9839,'A','10432',187,5022),(9840,'A','12340',169,5023),(9841,'B','20413',152,5023),(9842,'E','21430',191,5023),(9843,'B','10423',177,5023),(9844,'A','20143',176,5023),(9845,'D','42301',178,5023),(9846,'A','10324',161,5023),(9847,'C','23041',164,5023),(9848,'A','01324',163,5023),(9849,'B','42310',187,5023),(9850,'D','21403',200,5024),(9851,'D','13402',193,5024),(9852,'B','03142',178,5024),(9853,'E','12340',192,5024),(9854,'A','01423',199,5024),(9855,'D','12403',201,5024),(9856,'D','04123',335,5024),(9857,'B','03214',337,5024),(9858,'A','34120',159,5024),(9859,'C','42130',151,5024),(9860,'D','21403',200,5025),(9861,'D','13402',193,5025),(9862,'A','03142',178,5025),(9863,'E','12340',192,5025),(9864,'A','01423',199,5025),(9865,'D','12403',201,5025),(9866,'A','04123',335,5025),(9867,'A','03214',337,5025),(9868,'E','34120',159,5025),(9869,'A','42130',151,5025),(9870,'E','01234',190,5026),(9871,'E','24310',201,5026),(9872,'C','12430',193,5026),(9873,'D','32401',148,5026),(9874,'A','02134',176,5026),(9875,'E','43120',199,5026),(9876,'C','32041',157,5026),(9877,'B','20413',337,5026),(9878,'D','02143',161,5026),(9879,'D','41203',189,5026),(10250,'E','34210',193,5058),(10251,'C','24013',201,5058),(10252,'B','10324',195,5058),(10253,'A','23041',186,5058),(10254,'B','12340',154,5058),(10255,'E','34120',196,5058),(10256,'E','43120',333,5058),(10257,'B','01324',334,5058),(10258,'D','23401',156,5058),(10259,'E','10432',187,5058),(13924,'D','14203',1071,7798),(13925,'C','12043',1078,7798),(13926,'A','01234',1077,7798),(13927,'C','42013',1075,7798),(13928,'A','01342',1072,7799),(13929,'C','23401',1077,7799),(13930,'D','31204',1078,7799),(13931,'A','24310',1079,7799),(13936,'B','30142',1078,7801),(13937,'C','14032',1071,7801),(13938,'A','01423',1072,7801),(13939,'E','21034',1079,7801),(13948,'D','21304',1077,7804),(13949,'D','42103',1072,7804),(13950,'A','02134',1078,7804),(13951,'D','41302',1075,7804),(13952,'C','43012',1077,7805),(13953,'B','10234',1078,7805),(13954,'E','14320',1072,7805),(13955,'C','14023',1079,7805),(13957,'C','14032',1072,7807),(13958,'B','10234',1071,7807),(13959,'A','04312',1077,7807),(13960,'E','13420',1079,7807),(13965,'A','10342',1078,7809),(13966,'D','24103',1072,7809),(13967,'C','14023',1071,7809),(13968,'B','32140',1079,7809),(13981,'E','42310',1071,7813),(13982,'B','30124',1078,7813),(13983,'A','01432',1077,7813),(13984,'B','30124',1079,7813),(13989,'C','23014',1078,7815),(13990,'D','21304',1077,7815),(13991,'C','42013',1072,7815),(13992,'B','41023',1079,7815),(13993,'E','21430',1077,7816),(13994,'C','43021',1071,7816),(13995,'D','41203',1078,7816),(13996,'E','04321',1079,7816),(14001,'E','31420',1077,7818),(14002,'A','03142',1072,7818),(14003,'D','21304',1078,7818),(14004,'E','34120',1079,7818),(14009,'0','12304',1077,7820),(14010,'C','34021',1072,7820),(14011,'B','40132',1071,7820),(14012,'C','24031',1075,7820),(14017,'A','03412',1078,7822),(14018,'B','40123',1077,7822),(14019,'D','13204',1072,7822),(14020,'2','43012',1079,7822),(14021,'D','34102',1078,7823),(14022,'E','21340',1072,7823),(14023,'D','34201',1077,7823),(14024,'D','34102',1075,7823),(14025,'B','30421',1078,7824),(14026,'C','14032',1071,7824),(14027,'B','30142',1077,7824),(14028,'D','40213',1075,7824),(14029,'B','10423',1077,7825),(14030,'B','30124',1078,7825),(14031,'B','10432',1071,7825),(14032,'E','42310',1079,7825),(14033,'C','12043',1072,7826),(14034,'E','24130',1077,7826),(14035,'E','21340',1078,7826),(14036,'B','31402',1079,7826),(14045,'C','13024',1078,7829),(14046,'A','03142',1071,7829),(14047,'E','32140',1072,7829),(14048,'B','40213',1075,7829),(14049,'C','14023',1071,7830),(14050,'E','32140',1072,7830),(14051,'D','13402',1077,7830),(14052,'D','31402',1075,7830),(14053,'B','10234',1077,7831),(14054,'E','43210',1072,7831),(14055,'C','42013',1078,7831),(14056,'E','31420',1079,7831),(14057,'E','31240',1072,7832),(14058,'B','20143',1071,7832),(14059,'B','20314',1077,7832),(14060,'B','30142',1079,7832),(14065,'A','02143',1072,7834),(14066,'B','40213',1071,7834),(14067,'C','43012',1078,7834),(14068,'B','10234',1079,7834),(14073,'B','20413',1072,7836),(14074,'B','20413',1078,7836),(14075,'C','43021',1077,7836),(14076,'E','21340',1079,7836),(14085,'D','21403',1078,7839),(14086,'C','23041',1072,7839),(14087,'A','04132',1077,7839),(14088,'A','34210',1075,7839),(14093,'C','23014',1072,7841),(14094,'C','13024',1077,7841),(14095,'D','41203',1071,7841),(14096,'C','31042',1075,7841),(14097,'B','30421',1071,7842),(14098,'E','41320',1078,7842),(14099,'B','30142',1072,7842),(14100,'E','24130',1075,7842),(14101,'B','40132',1072,7843),(14102,'C','41023',1077,7843),(14103,'D','21403',1071,7843),(14104,'E','21430',1075,7843),(14105,'E','34120',1078,7844),(14106,'A','43021',1071,7844),(14107,'C','24031',1072,7844),(14108,'E','34210',1075,7844),(14109,'C','42031',1077,7845),(14110,'D','12304',1072,7845),(14111,'D','42103',1071,7845),(14112,'D','32104',1079,7845),(14113,'D','12304',1071,7846),(14114,'D','23401',1078,7846),(14115,'A','04231',1077,7846),(14116,'C','01234',1079,7846),(14125,'E','03241',1072,7849),(14126,'D','32401',1078,7849),(14127,'B','30412',1077,7849),(14128,'E','23140',1075,7849),(14129,'C','30412',1072,7850),(14130,'E','14203',1077,7850),(14131,'D','01234',1071,7850),(14132,'B','13402',1079,7850),(14133,'E','42310',1071,7851),(14134,'B','30124',1078,7851),(14135,'A','01432',1077,7851),(14136,'B','30124',1079,7851),(14141,'D','13402',1078,7853),(14142,'C','13024',1071,7853),(14143,'C','12043',1077,7853),(14144,'C','41023',1079,7853),(14145,'B','40312',1072,7854),(14146,'C','43012',1077,7854),(14147,'C','34012',1078,7854),(14148,'B','10342',1075,7854),(14157,'A','02314',1078,7857),(14158,'A','04123',1077,7857),(14159,'B','20314',1071,7857),(14160,'C','42031',1075,7857),(14161,'A','04321',1078,7858),(14162,'E','23410',1077,7858),(14163,'A','01342',1072,7858),(14164,'D','34201',1075,7858),(14193,'E','31240',1072,7866),(14194,'E','41230',1071,7866),(14195,'B','30124',1078,7866),(14196,'D','34102',1079,7866),(14197,'E','42310',1078,7867),(14198,'E','34120',1077,7867),(14199,'B','20134',1071,7867),(14200,'A','03421',1079,7867),(14205,'C','14023',1071,7869),(14206,'C','23041',1078,7869),(14207,'D','31402',1072,7869),(14208,'B','10234',1075,7869),(14209,'C','31024',1071,7870),(14210,'C','14023',1072,7870),(14211,'C','31024',1077,7870),(14212,'C','14032',1075,7870),(14213,'B','20134',1071,7871),(14214,'A','03142',1072,7871),(14215,'B','20341',1077,7871),(14216,'A','04213',1079,7871),(14225,'D','32104',1077,7874),(14226,'C','32041',1078,7874),(14227,'D','23104',1072,7874),(14228,'E','31420',1075,7874),(14229,'B','30421',1071,7875),(14230,'D','31204',1072,7875),(14231,'E','24130',1077,7875),(14232,'A','03412',1075,7875),(14241,'E','12430',1077,7878),(14242,'A','02413',1078,7878),(14243,'C','13042',1071,7878),(14244,'B','30421',1075,7878),(14245,'E','12430',1071,7879),(14246,'C','13240',1072,7879),(14247,'A','04231',1077,7879),(14248,'B','41230',1075,7879),(14261,'D','34102',1072,7883),(14262,'B','30241',1078,7883),(14263,'B','20314',1077,7883),(14264,'E','43012',1075,7883),(14265,'A','04321',1071,7884),(14266,'D','32104',1072,7884),(14267,'E','23140',1077,7884),(14268,'A','03412',1075,7884),(14269,'D','13204',1072,7885),(14270,'B','10342',1071,7885),(14271,'A','01423',1077,7885),(14272,'E','24130',1075,7885),(14273,'E','14230',1078,7886),(14274,'B','20314',1072,7886),(14275,'B','30412',1077,7886),(14276,'0','31042',1075,7886),(14277,'A','04321',1071,7887),(14278,'D','32104',1072,7887),(14279,'E','23140',1077,7887),(14280,'A','03412',1075,7887),(14281,'E','31420',1071,7888),(14282,'B','20143',1078,7888),(14283,'D','23104',1077,7888),(14284,'E','12340',1075,7888),(14285,'B','30241',1071,7889),(14286,'D','43201',1078,7889),(14287,'E','24130',1072,7889),(14288,'0','01234',1079,7889),(14289,'D','32104',1078,7890),(14290,'B','40321',1072,7890),(14291,'D','24301',1071,7890),(14292,'D','32014',1079,7890),(14305,'0','41032',1071,7894),(14306,'0','12304',1078,7894),(14307,'0','21304',1077,7894),(14308,'0','40213',1079,7894),(14317,'C','13024',1078,7897),(14318,'A','03142',1071,7897),(14319,'D','32140',1072,7897),(14320,'0','40213',1075,7897),(14321,'B','40312',1071,7898),(14322,'D','23104',1077,7898),(14323,'A','01243',1078,7898),(14324,'A','01432',1075,7898),(14325,'E','31420',1071,7899),(14326,'B','20143',1078,7899),(14327,'D','23104',1077,7899),(14328,'E','12340',1075,7899),(14329,'D','43102',1077,7900),(14330,'A','01423',1078,7900),(14331,'B','40231',1071,7900),(14332,'E','32410',1075,7900),(14333,'B','20134',1078,7901),(14334,'A','02341',1072,7901),(14335,'D','41203',1077,7901),(14336,'A','01234',1075,7901),(14337,'B','34210',1071,7902),(14338,'D','23401',1077,7902),(14339,'C','41032',1072,7902),(14340,'B','20341',1075,7902),(14341,'E','42130',1077,7903),(14342,'A','14320',1072,7903),(14343,'C','13042',1078,7903),(14344,'A','01423',1075,7903),(14349,'2','40312',1072,7905),(14350,'C','43012',1077,7905),(14351,'C','34012',1078,7905),(14352,'B','10342',1075,7905),(14357,'E','23140',1077,7907),(14358,'B','20341',1072,7907),(14359,'D','23104',1078,7907),(14360,'B','42013',1075,7907),(14365,'C','43021',1078,7909),(14366,'0','04231',1071,7909),(14367,'0','32014',1077,7909),(14368,'0','23401',1075,7909),(14369,'B','30421',1078,7910),(14370,'C','14032',1071,7910),(14371,'B','30142',1077,7910),(14372,'B','40213',1075,7910),(14373,'C','12034',1071,7911),(14374,'A','03241',1077,7911),(14375,'C','42013',1072,7911),(14376,'D','32401',1079,7911),(14377,'0','43201',1077,7912),(14378,'0','20341',1071,7912),(14379,'0','23410',1072,7912),(14380,'0','21043',1079,7912),(14381,'D','14203',1077,7913),(14382,'D','23104',1078,7913),(14383,'D','24130',1072,7913),(14384,'B','40231',1079,7913),(14385,'D','13402',1072,7914),(14386,'B','30142',1077,7914),(14387,'B','20314',1078,7914),(14388,'E','24310',1075,7914),(14393,'E','34120',1078,7916),(14394,'C','43021',1071,7916),(14395,'C','24031',1072,7916),(14396,'E','34210',1075,7916),(14401,'D','12043',1072,7918),(14402,'E','24130',1077,7918),(14403,'B','21340',1078,7918),(14404,'D','31402',1079,7918),(14413,'B','10234',1077,7921),(14414,'D','43210',1072,7921),(14415,'C','42013',1078,7921),(14416,'E','31420',1079,7921),(14421,'C','01342',1072,7923),(14422,'D','23401',1077,7923),(14423,'D','31204',1078,7923),(14424,'A','24310',1079,7923),(14429,'C','13024',1078,7925),(14430,'C','23014',1071,7925),(14431,'A','03421',1077,7925),(14432,'A','03421',1075,7925),(14433,'E','31240',1072,7926),(14434,'E','41230',1071,7926),(14435,'B','30124',1078,7926),(14436,'A','34102',1079,7926),(14437,'D','21304',1077,7927),(14438,'D','42103',1072,7927),(14439,'A','02134',1078,7927),(14440,'D','41302',1075,7927),(14441,'B','20134',1077,7928),(14442,'B','30142',1078,7928),(14443,'E','42130',1071,7928),(14444,'A','01432',1075,7928),(14445,'[]','02314',1078,7929),(14446,'C','32041',1077,7930),(14447,'C','13024',1078,7930),(14448,'B','41230',1071,7930),(14449,'E','42130',1079,7930),(14450,'B','20413',1072,7931),(14451,'B','20413',1078,7931),(14452,'C','43021',1077,7931),(14453,'C','21340',1079,7931),(14454,'D','21403',1078,7932),(14455,'C','23041',1072,7932),(14456,'A','04132',1077,7932),(14457,'E','34210',1075,7932),(14458,'B','34102',1078,7933),(14459,'E','21340',1072,7933),(14460,'D','34201',1077,7933),(14461,'A','34102',1075,7933),(14466,'A','04321',1078,7935),(14467,'E','23410',1077,7935),(14468,'A','01342',1072,7935),(14469,'D','34201',1075,7935),(14470,'D','43201',1077,7936),(14471,'C','34012',1078,7936),(14472,'A','01432',1072,7936),(14473,'D','23401',1075,7936),(14474,'D','32104',1077,7937),(14475,'C','32041',1078,7937),(14476,'D','23104',1072,7937),(14477,'E','31420',1075,7937),(14482,'C','23014',1078,7939),(14483,'D','21304',1077,7939),(14484,'E','42013',1072,7939),(14485,'C','41023',1079,7939),(14486,'A','40132',1072,7940),(14487,'C','41023',1077,7940),(14488,'D','21403',1071,7940),(14489,'E','21430',1075,7940),(14490,'A','02431',1072,7941),(14491,'B','40321',1071,7941),(14492,'D','34201',1077,7941),(14493,'D','41302',1075,7941),(14498,'D','12304',1071,7943),(14499,'D','23401',1078,7943),(14500,'A','04231',1077,7943),(14501,'C','01234',1079,7943),(14506,'E','43120',1077,7945),(14507,'E','21430',1078,7945),(14508,'A','03142',1072,7945),(14509,'C','12043',1075,7945),(14510,'A','02314',1077,7946),(14511,'A','03142',1072,7946),(14512,'B','24103',1078,7946),(14513,'D','31402',1075,7946),(14514,'E','42310',1078,7947),(14515,'E','34120',1077,7947),(14516,'B','20134',1071,7947),(14517,'A','03421',1079,7947),(14518,'E','32410',1072,7948),(14519,'D','13402',1071,7948),(14520,'D','43201',1078,7948),(14521,'E','21340',1075,7948),(14522,'C','43012',1077,7949),(14523,'B','10234',1078,7949),(14524,'E','14320',1072,7949),(14525,'C','14023',1079,7949),(14534,'D','34102',1072,7952),(14535,'B','30241',1078,7952),(14536,'B','20314',1077,7952),(14537,'C','43012',1075,7952),(14542,'D','12304',1072,7954),(14543,'A','03142',1071,7954),(14544,'D','23401',1078,7954),(14545,'C','14023',1075,7954),(14546,'D','13402',1077,7955),(14547,'B','34201',1071,7955),(14548,'A','04312',1078,7955),(14549,'A','10423',1079,7955),(14550,'C','31024',1071,7956),(14551,'C','14023',1072,7956),(14552,'C','31024',1077,7956),(14553,'C','14032',1075,7956),(14554,'C','14023',1071,7957),(14555,'C','23041',1078,7957),(14556,'D','31402',1072,7957),(14557,'B','10234',1075,7957),(14566,'B','31420',1077,7960),(14567,'D','03142',1072,7960),(14568,'C','21304',1078,7960),(14569,'D','34120',1079,7960),(14570,'C','41032',1071,7961),(14571,'C','21043',1077,7961),(14572,'C','21043',1078,7961),(14573,'E','13240',1075,7961),(14582,'C','21034',1077,7964),(14583,'B','20134',1071,7964),(14584,'A','01342',1072,7964),(14585,'E','42130',1075,7964),(14586,'D','12304',1077,7965),(14587,'C','34021',1072,7965),(14588,'B','40132',1071,7965),(14589,'C','24031',1075,7965),(14590,'D','31402',1078,7966),(14591,'E','34120',1071,7966),(14592,'E','13420',1072,7966),(14593,'D','43102',1075,7966),(14594,'C','34021',1071,7967),(14595,'C','12043',1078,7967),(14596,'C','12034',1072,7967),(14597,'E','42130',1075,7967),(14602,'A','03124',1072,7969),(14603,'C','41023',1071,7969),(14604,'C','34012',1078,7969),(14605,'C','24013',1075,7969),(14606,'B','40231',1078,7970),(14607,'A','04312',1072,7970),(14608,'B','10324',1077,7970),(14609,'D','21340',1075,7970),(14610,'A','31240',1085,7971),(14611,'B','31402',1087,7971),(14612,'C','23140',1102,7971),(14613,'D','34012',1107,7971),(14614,'E','42130',1122,7971),(14615,'D','03421',1112,7971),(14616,'0','34012',1109,7971),(14617,'B','40312',1097,7971),(14618,'A','31204',1100,7971),(14619,'A','41320',1116,7971),(14620,'0','32140',1091,7972),(14621,'0','01432',1085,7972),(14622,'0','10324',1117,7972),(14623,'0','31420',1113,7972),(14624,'0','04213',1103,7972),(14625,'0','32140',1122,7972),(14626,'0','13204',1097,7972),(14627,'0','24013',1109,7972),(14628,'0','32140',1100,7972),(14629,'0','13042',1106,7972),(19828,'0','23104',1185,8698),(19829,'0','02134',1170,8698),(19830,'0','43102',1188,8698),(19831,'0','30241',1168,8698),(19832,'0','14032',1175,8698),(19833,'0','30142',1171,8698),(19834,'0','10243',1182,8698),(19835,'0','23140',1174,8698),(19836,'0','01243',1186,8698),(19837,'0','14023',1172,8698),(19838,'E','24130',1168,8699),(19839,'D','01423',1165,8699),(19840,'E','24130',1171,8699),(19841,'B','03142',1186,8699),(19842,'A','04132',1183,8699),(19843,'C','34210',1188,8699),(19844,'A','20341',1177,8699),(19845,'E','42013',1173,8699),(19846,'A','02413',1180,8699),(19847,'C','34021',1189,8699),(19848,'D','41203',1177,8700),(19849,'C','12034',1167,8700),(19850,'E','32140',1181,8700),(19851,'B','41023',1169,8700),(19852,'D','31204',1171,8700),(19853,'B','43210',1186,8700),(19854,'E','34210',1176,8700),(19855,'D','41302',1168,8700),(19856,'D','20143',1173,8700),(19857,'B','40312',1179,8700),(19858,'E','12430',1166,8701),(19859,'E','13042',1185,8701),(19860,'E','43120',1188,8701),(19861,'E','04132',1165,8701),(19862,'C','02143',1169,8701),(19863,'D','13402',1180,8701),(19864,'E','32410',1179,8701),(19865,'E','42310',1176,8701),(19866,'A','01243',1171,8701),(19867,'C','32014',1181,8701),(19868,'D','31204',1181,8702),(19869,'B','20143',1184,8702),(19870,'B','20341',1170,8702),(19871,'E','24310',1172,8702),(19872,'C','34012',1177,8702),(19873,'D','34102',1166,8702),(19874,'D','23401',1165,8702),(19875,'C','12043',1183,8702),(19876,'B','04132',1186,8702),(19877,'B','14302',1174,8702),(19878,'E','12034',1186,8703),(19879,'C','24310',1170,8703),(19880,'C','34021',1165,8703),(19881,'E','03241',1169,8703),(19882,'E','43210',1188,8703),(19883,'B','01324',1174,8703),(19884,'D','10342',1173,8703),(19885,'A','01243',1177,8703),(19886,'C','31402',1175,8703),(19887,'D','23401',1180,8703),(19918,'D','14302',1189,8707),(19919,'B','10324',1182,8707),(19920,'D','01243',1173,8707),(19921,'D','12340',1170,8707),(19922,'D','42301',1179,8707),(19923,'A','23104',1181,8707),(19924,'C','14023',1176,8707),(19925,'A','02341',1165,8707),(19926,'E','12403',1186,8707),(19927,'B','20413',1171,8707),(19928,'B','40231',1176,8708),(19929,'C','42031',1188,8708),(19930,'C','41023',1166,8708),(19931,'B','40213',1175,8708),(19932,'B','31402',1169,8708),(19933,'C','34021',1187,8708),(19934,'B','24103',1186,8708),(19935,'A','31024',1185,8708),(19936,'A','41032',1181,8708),(19937,'E','32014',1173,8708),(19938,'B','01234',1169,8709),(19939,'B','20431',1183,8709),(19940,'D','43201',1170,8709),(19941,'D','13420',1172,8709),(19942,'E','21340',1177,8709),(19943,'A','41032',1173,8709),(19944,'D','42031',1187,8709),(19945,'C','40132',1175,8709),(19946,'D','24103',1184,8709),(19947,'0','42031',1167,8709),(19948,'A','04123',1181,8710),(19949,'D','42301',1184,8710),(19950,'D','12304',1165,8710),(19951,'E','14320',1189,8710),(19952,'E','34210',1174,8710),(19953,'D','31420',1178,8710),(19954,'D','23014',1169,8710),(19955,'A','42031',1183,8710),(19956,'B','04123',1173,8710),(19957,'C','40321',1167,8710),(19958,'B','04231',1180,8711),(19959,'E','23140',1184,8711),(19960,'A','02341',1177,8711),(19961,'E','02314',1183,8711),(19962,'C','43021',1170,8711),(19963,'B','40321',1176,8711),(19964,'D','02143',1173,8711),(19965,'E','24130',1168,8711),(19966,'E','10243',1167,8711),(19967,'A','01423',1188,8711),(19968,'C','42031',1180,8712),(19969,'C','14023',1176,8712),(19970,'D','41302',1189,8712),(19971,'D','02413',1187,8712),(19972,'E','42130',1175,8712),(19973,'E','43210',1179,8712),(19974,'E','23014',1173,8712),(19975,'A','04123',1167,8712),(19976,'B','20314',1172,8712),(19977,'C','42031',1177,8712),(19978,'C','20143',1176,8713),(19979,'A','32140',1172,8713),(19980,'A','01324',1178,8713),(19981,'E','31042',1173,8713),(19982,'A','20413',1177,8713),(19983,'D','14302',1183,8713),(19984,'B','10342',1185,8713),(19985,'D','21403',1167,8713),(19986,'E','12340',1181,8713),(19987,'B','40213',1175,8713),(19988,'D','34201',1165,8714),(19989,'A','01234',1179,8714),(19990,'A','02341',1183,8714),(19991,'C','23014',1184,8714),(19992,'A','02143',1181,8714),(19993,'E','20341',1186,8714),(19994,'E','21430',1171,8714),(19995,'B','20431',1188,8714),(19996,'C','31042',1172,8714),(19997,'E','01234',1170,8714),(20008,'B','43021',1182,8716),(20009,'C','41023',1177,8716),(20010,'C','32014',1171,8716),(20011,'E','41320',1189,8716),(20012,'D','04321',1185,8716),(20013,'B','40132',1188,8716),(20014,'C','01324',1184,8716),(20015,'C','32041',1176,8716),(20016,'D','24103',1170,8716),(20017,'C','21043',1179,8716),(20028,'A','01243',1166,8718),(20029,'B','23014',1187,8718),(20030,'D','30214',1174,8718),(20031,'A','04321',1188,8718),(20032,'E','40132',1173,8718),(20033,'C','30241',1185,8718),(20034,'C','43021',1178,8718),(20035,'D','31420',1172,8718),(20036,'C','13042',1170,8718),(20037,'A','34012',1186,8718),(20058,'A','01432',1184,8721),(20059,'C','13024',1166,8721),(20060,'A','23140',1178,8721),(20061,'E','23410',1176,8721),(20062,'C','12043',1188,8721),(20063,'D','01423',1174,8721),(20064,'B','20341',1189,8721),(20065,'E','21430',1181,8721),(20066,'E','21043',1170,8721),(20067,'D','12304',1183,8721),(20068,'B','23401',1169,8722),(20069,'B','01243',1187,8722),(20070,'D','10243',1173,8722),(20071,'A','04231',1176,8722),(20072,'B','30214',1166,8722),(20073,'B','03214',1184,8722),(20074,'D','43102',1168,8722),(20075,'E','24310',1179,8722),(20076,'E','43021',1170,8722),(20077,'A','02143',1174,8722),(20078,'A','01342',1172,8723),(20079,'A','43210',1182,8723),(20080,'C','12043',1189,8723),(20081,'B','30214',1168,8723),(20082,'E','34120',1174,8723),(20083,'B','12043',1173,8723),(20084,'E','13420',1175,8723),(20085,'D','14203',1171,8723),(20086,'B','32041',1178,8723),(20087,'C','42031',1180,8723),(20088,'A','02413',1168,8724),(20089,'D','10243',1170,8724),(20090,'E','13024',1188,8724),(20091,'E','43021',1183,8724),(20092,'C','43120',1182,8724),(20093,'D','02431',1184,8724),(20094,'C','34021',1189,8724),(20095,'A','20413',1169,8724),(20096,'D','10243',1174,8724),(20097,'E','04312',1173,8724),(20108,'B','10234',1180,8726),(20109,'B','20341',1172,8726),(20110,'B','20341',1179,8726),(20111,'A','42013',1185,8726),(20112,'C','41023',1178,8726),(20113,'C','41032',1176,8726),(20114,'B','40312',1166,8726),(20115,'A','02143',1188,8726),(20116,'A','03421',1189,8726),(20117,'D','14203',1165,8726),(20128,'D','13402',1168,8728),(20129,'A','13204',1186,8728),(20130,'E','12340',1179,8728),(20131,'E','41320',1180,8728),(20132,'B','10432',1171,8728),(20133,'D','40231',1167,8728),(20134,'A','02143',1172,8728),(20135,'C','13024',1176,8728),(20136,'B','40213',1175,8728),(20137,'B','10324',1170,8728),(20138,'A','04312',1179,8729),(20139,'C','43021',1188,8729),(20140,'C','12043',1165,8729),(20141,'E','23410',1185,8729),(20142,'C','42031',1171,8729),(20143,'B','30214',1180,8729),(20144,'C','02413',1186,8729),(20145,'B','10423',1170,8729),(20146,'C','43012',1174,8729),(20147,'E','31240',1166,8729),(20168,'E','41230',1182,8732),(20169,'B','34120',1189,8732),(20170,'A','02413',1176,8732),(20171,'E','12430',1179,8732),(20172,'D','41203',1188,8732),(20173,'C','14032',1184,8732),(20174,'E','13240',1175,8732),(20175,'D','41203',1171,8732),(20176,'A','24103',1172,8732),(20177,'B','34012',1166,8732),(20198,'B','01342',1169,8735),(20199,'C','31024',1175,8735),(20200,'C','43012',1188,8735),(20201,'D','12304',1172,8735),(20202,'C','12034',1174,8735),(20203,'B','10234',1166,8735),(20204,'A','34012',1167,8735),(20205,'E','31240',1165,8735),(20206,'D','04132',1182,8735),(20207,'A','03241',1179,8735),(20208,'D','40321',1182,8736),(20209,'C','41230',1178,8736),(20210,'B','30241',1170,8736),(20211,'B','20341',1183,8736),(20212,'A','02143',1188,8736),(20213,'D','23401',1176,8736),(20214,'C','23014',1173,8736),(20215,'D','02413',1169,8736),(20216,'E','42103',1186,8736),(20217,'E','31420',1165,8736),(20218,'C','41023',1183,8737),(20219,'A','02413',1184,8737),(20220,'E','01423',1186,8737),(20221,'A','04321',1165,8737),(20222,'B','10423',1180,8737),(20223,'D','23140',1185,8737),(20224,'A','23014',1173,8737),(20225,'C','43021',1188,8737),(20226,'A','04321',1182,8737),(20227,'E','41320',1174,8737),(20228,'B','20134',1177,8738),(20229,'C','02431',1166,8738),(20230,'B','20413',1175,8738),(20231,'A','03124',1188,8738),(20232,'A','12034',1189,8738),(20233,'B','13204',1167,8738),(20234,'E','21340',1187,8738),(20235,'B','10243',1176,8738),(20236,'D','03421',1174,8738),(20237,'C','42031',1165,8738),(20238,'A','03241',1180,8739),(20239,'D','14320',1165,8739),(20240,'C','21043',1184,8739),(20241,'C','43012',1178,8739),(20242,'D','41032',1166,8739),(20243,'D','43201',1176,8739),(20244,'C','20143',1171,8739),(20245,'A','01423',1183,8739),(20246,'B','30412',1189,8739),(20247,'D','41302',1177,8739),(20248,'A','04312',1189,8740),(20249,'D','21304',1171,8740),(20250,'A','01324',1176,8740),(20251,'D','12403',1168,8740),(20252,'D','01243',1187,8740),(20253,'D','21403',1167,8740),(20254,'A','04123',1179,8740),(20255,'C','14032',1174,8740),(20256,'E','12340',1180,8740),(20257,'A','02134',1185,8740),(20258,'C','43012',1176,8741),(20259,'D','32401',1170,8741),(20260,'D','41203',1179,8741),(20261,'A','01243',1172,8741),(20262,'B','40231',1177,8741),(20263,'D','43102',1184,8741),(20264,'C','32140',1186,8741),(20265,'B','40321',1188,8741),(20266,'D','12403',1180,8741),(20267,'E','01342',1178,8741),(20268,'C','12034',1171,8742),(20269,'B','30421',1185,8742),(20270,'D','32104',1176,8742),(20271,'C','31042',1188,8742),(20272,'A','01423',1189,8742),(20273,'E','34210',1168,8742),(20274,'A','10324',1169,8742),(20275,'C','21034',1165,8742),(20276,'A','04321',1166,8742),(20277,'E','12430',1179,8742),(20278,'B','43210',1172,8743),(20279,'B','10243',1179,8743),(20280,'B','23401',1167,8743),(20281,'E','31240',1184,8743),(20282,'B','12034',1173,8743),(20283,'B','10243',1183,8743),(20284,'D','04312',1185,8743),(20285,'C','31024',1189,8743),(20286,'D','43102',1168,8743),(20287,'C','21043',1175,8743),(20298,'A','01324',1177,8745),(20299,'D','41203',1182,8745),(20300,'A','32104',1184,8745),(20301,'D','03214',1165,8745),(20302,'C','24301',1180,8745),(20303,'C','13024',1171,8745),(20304,'A','32041',1189,8745),(20305,'C','04132',1183,8745),(20306,'A','31042',1174,8745),(20327,'B','41032',1177,8748),(20328,'B','20134',1166,8748),(20329,'B','20431',1171,8748),(20330,'C','31042',1181,8748),(20331,'C','42103',1182,8748),(20332,'A','43102',1179,8748),(20333,'E','43120',1184,8748),(20334,'D','01423',1172,8748),(20335,'A','30124',1175,8748),(20336,'A','02341',1176,8748),(20347,'E','34210',1184,8750),(20348,'C','14032',1175,8750),(20349,'E','10432',1178,8750),(20350,'E','04123',1167,8750),(20351,'B','30412',1168,8750),(20352,'A','02143',1172,8750),(20353,'C','31042',1166,8750),(20354,'C','21034',1188,8750),(20355,'E','20143',1170,8750),(20356,'A','02413',1165,8750),(20357,'D','31402',1175,8751),(20358,'C','01342',1182,8751),(20359,'B','10234',1179,8751),(20360,'B','23401',1167,8751),(20361,'C','24031',1188,8751),(20362,'D','10234',1187,8751),(20363,'D','01432',1185,8751),(20364,'E','34120',1178,8751),(20365,'A','13240',1169,8751),(20366,'E','43120',1189,8751),(20367,'C','12034',1166,8752),(20368,'B','41302',1169,8752),(20369,'B','31420',1186,8752),(20370,'A','42130',1182,8752),(20371,'B','20413',1174,8752),(20372,'B','20143',1178,8752),(20373,'D','43102',1176,8752),(20374,'A','01324',1183,8752),(20375,'E','24310',1181,8752),(20376,'B','12403',1185,8752),(20377,'B','40123',1170,8753),(20378,'D','23104',1185,8753),(20379,'A','02431',1177,8753),(20380,'B','40312',1180,8753),(20381,'E','13420',1174,8753),(20382,'C','10342',1184,8753),(20383,'B','30214',1172,8753),(20384,'E','41230',1188,8753),(20385,'A','12430',1175,8753),(20386,'D','31402',1168,8753),(20397,'D','23401',1172,8755),(20398,'D','32401',1168,8755),(20399,'A','01243',1176,8755),(20400,'B','21034',1185,8755),(20401,'A','12430',1169,8755),(20402,'B','04312',1180,8755),(20403,'A','01243',1165,8755),(20404,'D','23014',1173,8755),(20405,'C','23104',1187,8755),(20406,'B','10342',1179,8755),(20437,'D','14230',1187,8759),(20438,'A','01243',1186,8759),(20439,'D','23401',1167,8759),(20440,'C','32401',1173,8759),(20441,'B','30412',1183,8759),(20442,'E','23014',1178,8759),(20443,'A','03142',1179,8759),(20444,'E','14320',1189,8759),(20445,'A','13042',1172,8759),(20446,'D','31240',1182,8759),(20447,'D','32104',1179,8760),(20448,'C','14023',1175,8760),(20449,'E','31240',1181,8760),(20450,'A','01243',1176,8760),(20451,'B','21430',1186,8760),(20452,'D','32401',1187,8760),(20453,'C','12043',1180,8760),(20454,'B','20134',1171,8760),(20455,'A','41032',1173,8760),(20456,'B','03412',1167,8760),(20457,'D','10342',1171,8761),(20458,'B','30142',1170,8761),(20459,'C','21304',1167,8761),(20460,'E','43210',1177,8761),(20461,'A','01432',1187,8761),(20462,'C','01324',1189,8761),(20463,'C','21403',1186,8761),(20464,'E','24130',1165,8761),(20465,'A','02134',1175,8761),(20466,'D','42301',1188,8761),(20467,'A','40123',1183,8762),(20468,'E','12340',1182,8762),(20469,'C','12043',1176,8762),(20470,'A','01423',1175,8762),(20471,'E','21430',1168,8762),(20472,'C','20341',1167,8762),(20473,'D','31204',1171,8762),(20474,'E','24310',1166,8762),(20475,'A','03214',1170,8762),(20476,'D','24301',1172,8762),(20487,'D','32104',1180,8764),(20488,'C','13024',1184,8764),(20489,'D','12403',1185,8764),(20490,'E','40132',1178,8764),(20491,'B','31042',1169,8764),(20492,'D','13402',1174,8764),(20493,'E','41320',1183,8764),(20494,'B','40231',1181,8764),(20495,'D','13204',1189,8764),(20496,'C','14023',1176,8764),(20497,'D','21304',1175,8765),(20498,'D','14023',1172,8765),(20499,'A','04123',1188,8765),(20500,'A','01234',1171,8765),(20501,'B','41032',1179,8765),(20502,'D','02413',1170,8765),(20503,'D','32140',1189,8765),(20504,'A','13024',1169,8765),(20505,'D','24103',1180,8765),(20506,'A','10324',1186,8765),(20517,'C','21043',1183,8767),(20518,'B','10432',1180,8767),(20519,'B','31204',1174,8767),(20520,'E','21304',1185,8767),(20521,'E','03412',1165,8767),(20522,'A','21304',1172,8767),(20523,'E','43210',1179,8767),(20524,'A','34021',1167,8767),(20525,'D','13420',1170,8767),(20526,'D','43201',1177,8767),(20537,'E','21403',1169,8769),(20538,'C','34021',1167,8769),(20539,'C','24103',1175,8769),(20540,'A','04321',1177,8769),(20541,'B','43102',1184,8769),(20542,'B','30421',1174,8769),(20543,'D','20314',1186,8769),(20544,'B','30421',1168,8769),(20545,'C','42031',1179,8769),(20546,'C','42103',1182,8769),(20547,'A','43210',1189,8770),(20548,'E','01423',1165,8770),(20549,'C','13420',1172,8770),(20550,'A','21430',1177,8770),(20551,'E','21340',1178,8770),(20552,'C','23014',1176,8770),(20553,'C','21340',1182,8770),(20554,'B','12430',1171,8770),(20555,'B','12403',1179,8770),(20556,'C','41032',1184,8770),(20577,'A','40132',1188,8773),(20578,'B','10342',1179,8773),(20579,'E','21340',1180,8773),(20580,'B','42301',1171,8773),(20581,'A','31240',1184,8773),(20582,'E','04213',1182,8773),(20583,'A','02341',1176,8773),(20584,'D','34120',1175,8773),(20585,'A','04312',1177,8773),(20586,'E','12430',1181,8773),(20587,'E','04213',1179,8774),(20588,'E','14230',1174,8774),(20589,'B','13420',1187,8774),(20590,'D','23401',1168,8774),(20591,'A','34102',1180,8774),(20592,'B','42130',1186,8774),(20593,'C','43201',1188,8774),(20594,'C','01342',1169,8774),(20595,'D','20341',1172,8774),(20596,'B','43210',1182,8774),(20627,'C','32014',1178,8778),(20628,'B','14032',1185,8778),(20629,'A','01234',1182,8778),(20630,'B','40312',1174,8778),(20631,'C','32041',1172,8778),(20632,'E','14230',1189,8778),(20633,'B','40231',1176,8778),(20634,'D','10243',1173,8778),(20635,'B','30124',1168,8778),(20636,'A','04123',1171,8778),(20637,'E','31420',1176,8779),(20638,'C','32014',1189,8779),(20639,'E','40123',1184,8779),(20640,'E','21034',1181,8779),(20641,'A','04321',1188,8779),(20642,'B','20431',1166,8779),(20643,'D','43120',1175,8779),(20644,'E','03421',1169,8779),(20645,'B','20413',1187,8779),(20646,'C','41023',1185,8779),(20647,'C','43102',1186,8780),(20648,'C','21304',1175,8780),(20649,'C','12043',1189,8780),(20650,'C','41023',1170,8780),(20651,'D','12043',1173,8780),(20652,'D','41032',1167,8780),(20653,'D','10234',1182,8780),(20654,'D','12304',1181,8780),(20655,'C','41032',1174,8780),(20656,'C','24013',1165,8780),(20657,'D','34201',1189,8781),(20658,'E','42130',1168,8781),(20659,'B','31240',1169,8781),(20660,'B','20134',1166,8781),(20661,'A','04213',1183,8781),(20662,'E','14230',1177,8781),(20663,'A','12430',1184,8781),(20664,'D','41302',1175,8781),(20665,'B','42031',1173,8781),(20666,'E','42310',1188,8781),(20687,'B','43012',1167,8784),(20688,'C','23014',1166,8784),(20689,'B','13042',1165,8784),(20690,'C','43201',1177,8784),(20691,'B','43201',1185,8784),(20692,'B','20431',1174,8784),(20693,'E','41320',1180,8784),(20694,'A','42013',1173,8784),(20695,'D','43102',1175,8784),(20696,'B','20143',1172,8784),(20707,'E','23140',1171,8786),(20708,'B','31024',1170,8786),(20709,'D','14230',1167,8786),(20710,'D','20314',1169,8786),(20711,'D','34021',1185,8786),(20712,'B','24103',1181,8786),(20713,'A','32014',1187,8786),(20714,'A','04123',1188,8786),(20715,'E','02314',1173,8786),(20716,'B','43201',1184,8786),(20717,'C','13024',1174,8787),(20718,'E','03142',1178,8787),(20719,'D','43012',1185,8787),(20720,'C','31042',1172,8787),(20721,'C','42103',1169,8787),(20722,'E','42130',1165,8787),(20723,'B','20341',1177,8787),(20724,'E','12340',1168,8787),(20725,'A','03124',1180,8787),(20726,'C','30412',1182,8787),(20737,'C','42103',1186,8789),(20738,'D','12304',1174,8789),(20739,'A','02431',1179,8789),(20740,'B','30421',1181,8789),(20741,'A','01243',1171,8789),(20742,'B','20431',1166,8789),(20743,'B','20413',1165,8789),(20744,'B','41302',1187,8789),(20745,'D','41302',1184,8789),(20746,'E','14023',1177,8789),(20767,'D','40231',1167,8792),(20768,'C','32140',1176,8792),(20769,'C','43021',1166,8792),(20770,'A','41032',1170,8792),(20771,'D','14302',1181,8792),(20772,'B','24310',1183,8792),(20773,'A','02134',1171,8792),(20774,'A','02341',1184,8792),(20775,'A','02341',1175,8792),(20776,'A','01423',1177,8792),(20777,'D','24310',1186,8793),(20778,'B','20314',1188,8793),(20779,'B','30142',1172,8793),(20780,'D','24103',1168,8793),(20781,'A','20143',1185,8793),(20782,'A','04312',1180,8793),(20783,'E','04231',1169,8793),(20784,'D','04213',1177,8793),(20785,'E','14023',1184,8793),(20786,'D','03241',1187,8793),(20787,'C','13420',1183,8794),(20788,'D','13402',1165,8794),(20789,'B','30241',1166,8794),(20790,'0','02413',1182,8794),(20791,'A','34210',1167,8794),(20792,'E','14320',1172,8794),(20793,'E','21304',1170,8794),(20794,'C','31042',1178,8794),(20795,'A','01324',1177,8794),(20796,'A','04231',1180,8794),(20827,'C','23041',1171,8798),(20828,'A','02341',1166,8798),(20829,'D','12304',1175,8798),(20830,'A','03241',1165,8798),(20831,'B','30124',1183,8798),(20832,'D','31204',1182,8798),(20833,'D','21403',1172,8798),(20834,'E','02413',1184,8798),(20835,'E','21430',1178,8798),(20836,'B','30412',1179,8798),(20837,'C','03214',1185,8799),(20838,'E','10423',1187,8799),(20839,'E','02143',1182,8799),(20840,'C','42013',1165,8799),(20841,'D','12034',1167,8799),(20842,'C','32014',1180,8799),(20843,'E','13240',1166,8799),(20844,'A','02431',1177,8799),(20845,'C','23041',1171,8799),(20846,'B','30142',1170,8799),(20847,'C','43021',1171,8800),(20848,'A','31240',1186,8800),(20849,'C','34012',1189,8800),(20850,'B','20143',1183,8800),(20851,'E','32410',1188,8800),(20852,'D','43120',1172,8800),(20853,'B','40123',1182,8800),(20854,'D','32140',1173,8800),(20855,'A','01342',1179,8800),(20856,'C','34021',1178,8800),(20867,'D','03241',1170,8802),(20868,'B','20431',1180,8802),(20869,'E','43210',1189,8802),(20870,'A','43012',1176,8802),(20871,'B','30421',1165,8802),(20872,'B','10423',1184,8802),(20873,'B','23041',1167,8802),(20874,'C','43120',1182,8802),(20875,'D','14302',1179,8802),(20876,'B','30214',1187,8802),(20887,'D','30142',1176,8804),(20888,'C','40123',1174,8804),(20889,'E','12340',1165,8804),(20890,'C','41203',1171,8804),(20891,'D','21430',1186,8804),(20892,'B','31024',1169,8804),(20893,'A','21403',1178,8804),(20894,'D','32104',1175,8804),(20895,'A','43120',1183,8804),(20896,'B','02134',1187,8804),(20937,'C','23041',1176,8809),(20938,'C','40123',1186,8809),(20939,'E','21043',1167,8809),(20940,'B','10432',1188,8809),(20941,'D','34201',1168,8809),(20942,'C','32041',1166,8809),(20943,'A','03124',1171,8809),(20944,'B','20143',1165,8809),(20945,'A','04312',1187,8809),(20946,'B','21403',1182,8809),(20947,'E','13042',1185,8810),(20948,'D','03412',1169,8810),(20949,'D','34201',1188,8810),(20950,'C','13042',1181,8810),(20951,'D','21403',1179,8810),(20952,'B','30412',1166,8810),(20953,'C','42031',1176,8810),(20954,'D','13402',1189,8810),(20955,'B','03241',1182,8810),(20956,'D','12403',1168,8810),(20967,'D','42301',1188,8812),(20968,'D','24103',1171,8812),(20969,'B','10342',1181,8812),(20970,'A','32104',1184,8812),(20971,'C','02143',1169,8812),(20972,'D','13042',1186,8812),(20973,'A','02413',1180,8812),(20974,'B','03241',1182,8812),(20975,'D','14023',1178,8812),(20976,'D','41203',1176,8812),(20977,'A','03241',1181,8813),(20978,'E','14230',1183,8813),(20979,'A','04213',1176,8813),(20980,'B','10324',1166,8813),(20981,'D','13402',1189,8813),(20982,'E','14320',1171,8813),(20983,'B','40312',1165,8813),(20984,'C','40123',1169,8813),(20985,'B','30142',1180,8813),(20986,'C','34021',1188,8813),(20997,'C','43021',1176,8815),(20998,'C','23410',1186,8815),(20999,'E','02413',1170,8815),(21000,'D','23041',1183,8815),(21001,'B','20341',1179,8815),(21002,'B','20143',1172,8815),(21003,'B','34210',1181,8815),(21004,'A','03214',1189,8815),(21005,'E','31420',1165,8815),(21006,'B','41032',1169,8815),(21007,'C','41023',1168,8816),(21008,'C','43210',1173,8816),(21009,'B','23041',1167,8816),(21010,'B','40312',1176,8816),(21011,'C','21430',1170,8816),(21012,'A','03142',1166,8816),(21013,'E','42031',1174,8816),(21014,'B','20341',1171,8816),(21015,'D','23104',1185,8816),(21016,'A','42301',1179,8816),(21047,'B','02431',1178,8820),(21048,'C','01243',1186,8820),(21049,'B','10432',1175,8820),(21050,'E','23014',1173,8820),(21051,'C','12034',1176,8820),(21052,'D','21403',1179,8820),(21053,'E','24013',1182,8820),(21054,'C','21034',1177,8820),(21055,'D','23104',1188,8820),(21056,'B','21034',1187,8820),(21057,'D','23014',1186,8821),(21058,'C','42031',1173,8821),(21059,'B','20413',1188,8821),(21060,'E','41023',1170,8821),(21061,'D','31204',1166,8821),(21062,'A','34120',1177,8821),(21063,'B','10432',1168,8821),(21064,'E','23140',1189,8821),(21065,'B','10342',1176,8821),(21066,'A','13042',1169,8821),(21107,'A','32104',1182,8826),(21108,'D','41302',1176,8826),(21109,'B','30241',1183,8826),(21110,'C','43021',1175,8826),(21111,'B','30421',1166,8826),(21112,'A','31024',1187,8826),(21113,'C','32410',1174,8826),(21114,'A','01234',1189,8826),(21115,'D','23401',1181,8826),(21116,'D','41302',1171,8826),(21127,'C','10423',1170,8828),(21128,'E','10324',1182,8828),(21129,'E','34120',1166,8828),(21130,'A','10432',1172,8828),(21131,'A','42130',1169,8828),(21132,'2','13420',1174,8828),(21133,'E','43120',1180,8828),(21134,'C','32104',1186,8828),(21135,'B','20341',1181,8828),(21136,'B','30421',1189,8828),(21147,'E','43120',1176,8830),(21148,'D','12304',1175,8830),(21149,'A','30412',1186,8830),(21150,'B','40231',1180,8830),(21151,'A','03412',1170,8830),(21152,'D','14203',1171,8830),(21153,'B','20341',1181,8830),(21154,'B','30421',1166,8830),(21155,'E','40213',1167,8830),(21156,'E','13420',1188,8830),(21157,'D','43210',1169,8831),(21158,'E','21430',1179,8831),(21159,'D','34102',1188,8831),(21160,'D','41203',1171,8831),(21161,'D','24103',1177,8831),(21162,'D','21403',1182,8831),(21163,'C','02413',1170,8831),(21164,'A','03214',1187,8831),(21165,'C','12034',1168,8831),(21166,'E','24013',1184,8831),(21167,'C','42013',1168,8832),(21168,'D','14230',1174,8832),(21169,'E','23140',1166,8832),(21170,'B','40213',1184,8832),(21171,'A','04312',1181,8832),(21172,'C','31042',1179,8832),(21173,'B','04312',1173,8832),(21174,'A','04132',1175,8832),(21175,'C','24031',1171,8832),(21176,'A','04321',1189,8832),(21187,'A','04321',1183,8834),(21188,'C','31024',1184,8834),(21189,'D','21304',1187,8834),(21190,'C','42031',1188,8834),(21191,'B','34210',1186,8834),(21192,'E','34210',1176,8834),(21193,'D','31204',1177,8834),(21194,'E','43120',1168,8834),(21195,'C','12034',1165,8834),(21196,'C','14032',1173,8834),(21197,'E','24130',1176,8835),(21198,'B','40213',1178,8835),(21199,'D','24301',1180,8835),(21200,'D','42301',1167,8835),(21201,'C','32041',1189,8835),(21202,'C','01324',1182,8835),(21203,'B','02143',1185,8835),(21204,'E','31240',1166,8835),(21205,'C','13402',1187,8835),(21206,'C','24031',1171,8835),(21207,'A','20143',1173,8836),(21208,'E','02431',1169,8836),(21209,'C','24031',1189,8836),(21210,'C','21043',1168,8836),(21211,'E','24031',1186,8836),(21212,'E','14320',1187,8836),(21213,'C','41023',1183,8836),(21214,'B','03142',1184,8836),(21215,'C','43021',1175,8836),(21216,'D','43102',1171,8836),(21217,'E','41320',1184,8837),(21218,'B','40123',1181,8837),(21219,'C','42013',1178,8837),(21220,'E','41230',1182,8837),(21221,'D','34102',1165,8837),(21222,'C','01423',1173,8837),(21223,'C','13042',1189,8837),(21224,'E','21340',1174,8837),(21225,'C','41032',1172,8837),(21226,'A','10432',1169,8837),(21227,'D','21034',1184,8838),(21228,'E','10324',1181,8838),(21229,'D','41302',1174,8838),(21230,'E','43120',1166,8838),(21231,'E','01243',1170,8838),(21232,'B','32401',1178,8838),(21233,'C','34021',1172,8838),(21234,'E','34210',1171,8838),(21235,'D','14320',1173,8838),(21236,'C','14032',1165,8838),(21237,'B','13240',1186,8839),(21238,'D','34210',1173,8839),(21239,'B','40132',1174,8839),(21240,'A','01243',1181,8839),(21241,'E','24130',1184,8839),(21242,'B','30421',1189,8839),(21243,'E','31240',1171,8839),(21244,'D','13204',1177,8839),(21245,'E','42130',1188,8839),(21246,'C','14023',1172,8839),(21257,'B','30124',1185,8841),(21258,'A','32401',1184,8841),(21259,'A','43102',1173,8841),(21260,'E','31240',1172,8841),(21261,'D','43201',1181,8841),(21262,'B','30214',1187,8841),(21263,'C','31042',1177,8841),(21264,'E','42130',1171,8841),(21265,'A','02143',1168,8841),(21266,'D','31204',1174,8841),(21277,'A','43201',1183,8843),(21278,'A','10324',1187,8843),(21279,'E','43210',1181,8843),(21280,'A','02314',1175,8843),(21281,'D','34102',1174,8843),(21282,'A','03142',1171,8843),(21283,'D','02413',1172,8843),(21284,'C','24031',1176,8843),(21285,'A','32410',1167,8843),(21286,'A','04321',1184,8843),(21287,'A','01432',1174,8844),(21288,'C','34012',1165,8844),(21289,'E','31402',1185,8844),(21290,'C','41032',1188,8844),(21291,'C','23410',1173,8844),(21292,'A','13042',1186,8844),(21293,'E','42130',1172,8844),(21294,'A','41203',1183,8844),(21295,'D','04312',1179,8844),(21296,'E','13240',1171,8844),(21307,'A','31204',1167,8846),(21308,'C','01324',1182,8846),(21309,'B','30421',1171,8846),(21310,'D','31420',1170,8846),(21311,'E','14230',1172,8846),(21312,'E','42130',1176,8846),(21313,'B','23041',1187,8846),(21314,'D','03241',1173,8846),(21315,'B','40321',1179,8846),(21316,'B','40132',1166,8846),(21317,'E','13042',1185,8847),(21318,'A','03412',1169,8847),(21319,'D','34201',1188,8847),(21320,'E','13042',1181,8847),(21321,'D','21403',1179,8847),(21322,'B','30412',1166,8847),(21323,'C','42031',1176,8847),(21324,'D','13402',1189,8847),(21325,'B','03241',1182,8847),(21326,'C','12403',1168,8847),(21337,'C','24013',1189,8849),(21338,'B','20431',1175,8849),(21339,'D','13420',1186,8849),(21340,'C','42103',1169,8849),(21341,'E','43012',1181,8849),(21342,'D','24310',1172,8849),(21343,'A','30241',1174,8849),(21344,'C','32041',1188,8849),(21345,'B','21043',1183,8849),(21346,'D','14302',1180,8849),(21347,'D','43201',1183,8850),(21348,'D','10324',1187,8850),(21349,'A','43210',1181,8850),(21350,'A','02314',1175,8850),(21351,'D','34102',1174,8850),(21352,'A','03142',1171,8850),(21353,'A','02413',1172,8850),(21354,'C','24031',1176,8850),(21355,'A','32410',1167,8850),(21356,'A','04321',1184,8850),(21357,'C','12403',1176,8851),(21358,'B','02134',1181,8851),(21359,'E','24301',1169,8851),(21360,'C','23401',1187,8851),(21361,'D','31402',1186,8851),(21362,'D','01432',1170,8851),(21363,'E','13420',1165,8851),(21364,'E','40231',1173,8851),(21365,'C','23014',1168,8851),(21366,'E','31240',1177,8851),(21367,'E','31240',1177,8852),(21368,'E','13420',1176,8852),(21369,'E','43210',1182,8852),(21370,'D','20134',1167,8852),(21371,'A','01342',1171,8852),(21372,'D','12430',1172,8852),(21373,'C','42013',1188,8852),(21374,'C','10234',1185,8852),(21375,'E','32140',1184,8852),(21376,'E','43210',1166,8852),(21377,'A','01234',1165,8853),(21378,'E','43210',1177,8853),(21379,'D','43201',1185,8853),(21380,'C','10324',1184,8853),(21381,'A','32410',1182,8853),(21382,'C','21043',1174,8853),(21383,'A','04321',1172,8853),(21384,'B','34012',1186,8853),(21385,'C','12034',1173,8853),(21386,'E','34120',1188,8853),(21457,'E','13420',1181,8861),(21458,'C','40123',1186,8861),(21459,'D','34201',1168,8861),(21460,'A','03412',1182,8861),(21461,'B','40321',1184,8861),(21462,'B','40312',1187,8861),(21463,'A','30421',1167,8861),(21464,'E','43210',1170,8861),(21465,'A','12034',1185,8861),(21466,'C','10243',1172,8861),(21467,'D','42031',1182,8862),(21468,'A','31420',1167,8862),(21469,'E','31420',1168,8862),(21470,'A','32041',1187,8862),(21471,'A','34201',1184,8862),(21472,'A','04123',1170,8862),(21473,'C','13024',1189,8862),(21474,'E','14230',1188,8862),(21475,'A','03412',1174,8862),(21476,'C','21034',1181,8862),(21477,'E','34012',1172,8863),(21478,'A','03214',1181,8863),(21479,'A','41032',1189,8863),(21480,'E','01234',1170,8863),(21481,'D','04321',1173,8863),(21482,'D','21304',1184,8863),(21483,'A','02431',1171,8863),(21484,'B','10243',1180,8863),(21485,'B','20314',1177,8863),(21486,'D','31042',1182,8863),(21487,'E','12340',1186,8864),(21488,'D','41302',1185,8864),(21489,'D','23041',1189,8864),(21490,'D','31402',1171,8864),(21491,'D','40312',1169,8864),(21492,'A','01432',1165,8864),(21493,'C','24031',1177,8864),(21494,'D','04231',1170,8864),(21495,'A','04213',1184,8864),(21496,'B','20314',1174,8864),(21497,'D','10342',1186,8865),(21498,'C','23041',1189,8865),(21499,'E','41320',1187,8865),(21500,'B','40312',1180,8865),(21501,'D','31402',1177,8865),(21502,'E','42301',1174,8865),(21503,'D','13042',1173,8865),(21504,'E','03142',1178,8865),(21505,'C','43012',1176,8865),(21506,'B','10432',1184,8865),(21507,'B','32014',1175,8866),(21508,'C','32041',1178,8866),(21509,'E','23410',1179,8866),(21510,'B','20341',1180,8866),(21511,'B','32401',1171,8866),(21512,'C','34012',1166,8866),(21513,'C','12043',1176,8866),(21514,'C','41032',1188,8866),(21515,'B','10423',1165,8866),(21516,'D','21340',1168,8866),(21527,'D','41302',1171,8868),(21528,'A','20314',1178,8868),(21529,'A','03214',1179,8868),(21530,'C','03124',1186,8868),(21531,'E','12340',1183,8868),(21532,'D','12403',1188,8868),(21533,'A','03142',1169,8868),(21534,'B','10324',1167,8868),(21535,'A','01324',1170,8868),(21536,'A','01324',1175,8868),(21537,'D','23410',1189,8869),(21538,'C','30421',1174,8869),(21539,'B','41023',1186,8869),(21540,'E','32014',1179,8869),(21541,'D','13204',1181,8869),(21542,'0','03241',1169,8869),(21543,'A','31402',1182,8869),(21544,'A','01432',1188,8869),(21545,'D','12430',1166,8869),(21546,'D','31402',1168,8869),(21547,'A','01432',1172,8870),(21548,'B','43210',1167,8870),(21549,'A','30124',1184,8870),(21550,'D','10342',1173,8870),(21551,'B','40123',1179,8870),(21552,'E','12430',1188,8870),(21553,'D','43102',1165,8870),(21554,'D','42310',1169,8870),(21555,'D','32104',1174,8870),(21556,'B','30421',1180,8870),(22457,'C','2301',1132,8961),(22458,'D','2130',1128,8961),(22459,'D','1320',1125,8961),(22460,'B','1023',1133,8961),(22461,'B','1032',1124,8961),(22462,'C','3102',1126,8961),(22463,'A','0213',1130,8961),(22464,'B','3012',1127,8961),(22465,'D','3120',1129,8961),(22466,'D','1230',1131,8961),(22467,'C','1203',1126,8962),(22468,'D','3210',1130,8962),(22469,'A','0213',1133,8962),(22470,'A','0132',1131,8962),(22471,'A','0231',1124,8962),(22472,'C','3102',1132,8962),(22473,'D','3120',1128,8962),(22474,'A','0321',1129,8962),(22475,'A','0231',1125,8962),(22476,'A','0312',1127,8962),(22477,'D','3102',1129,8963),(22478,'B','2013',1132,8963),(22479,'A','1320',1131,8963),(22480,'B','1023',1127,8963),(22481,'B','2031',1128,8963),(22482,'B','3012',1125,8963),(22483,'A','0321',1124,8963),(22484,'A','0213',1133,8963),(22485,'B','3021',1126,8963),(22486,'D','3210',1130,8963),(22497,'D','1320',1125,8965),(22498,'B','2013',1132,8965),(22499,'0','1203',1129,8965),(22500,'C','3102',1127,8965),(22501,'D','1320',1130,8965),(22502,'C','1302',1133,8965),(22503,'C','1302',1126,8965),(22504,'A','0321',1131,8965),(22505,'0','2301',1124,8965),(22506,'C','1203',1128,8965),(22517,'C','3201',1132,8967),(22518,'C','3201',1125,8967),(22519,'D','3120',1126,8967),(22520,'B','3021',1124,8967),(22521,'B','3012',1128,8967),(22522,'D','2310',1127,8967),(22523,'A','0321',1131,8967),(22524,'D','1320',1130,8967),(22525,'D','0321',1129,8967),(22526,'C','2301',1133,8967),(22539,'A','42013',1271,9441),(22540,'B','40123',1266,9441),(22541,'C','21430',1274,9441),(22542,'D','20431',1247,9441),(22543,'E','13240',1283,9441),(22544,'E','21403',1261,9441),(22545,'E','31024',1262,9441),(22546,'E','04123',1279,9441),(22547,'E','41320',1255,9441),(22548,'E','41203',1268,9441),(22549,'E','43012',1288,9441),(22550,'E','12043',1264,9441),(22551,'E','01342',1252,9441),(22552,'E','03412',1278,9441),(22553,'E','02134',1273,9441),(22554,'E','34012',1287,9441),(22555,'E','03421',1281,9441),(22556,'E','30214',1263,9441),(27849,'D','04312',1250,9736),(27850,'C','24013',1277,9736),(27851,'C','31420',1257,9736),(27852,'E','13024',1273,9736),(27853,'E','13420',1271,9736),(27854,'D','24301',1259,9736),(27855,'E','21430',1253,9736),(27856,'A','20314',1268,9736),(27857,'B','41203',1286,9736),(27858,'E','41320',1279,9736),(27859,'D','34102',1281,9736),(27860,'D','03142',1278,9736),(27861,'A','24130',1284,9736),(27862,'D','41032',1282,9736),(27863,'D','32014',1283,9736),(27864,'C','14023',1262,9736),(27865,'A','04123',1288,9736),(27866,'A','02134',1263,9736),(27867,'B','23014',1285,9737),(27868,'D','10234',1262,9737),(27869,'C','24130',1256,9737),(27870,'A','13240',1273,9737),(27871,'A','14320',1281,9737),(27872,'D','31204',1261,9737),(27873,'E','31042',1267,9737),(27874,'A','10432',1271,9737),(27875,'D','40132',1247,9737),(27876,'E','01342',1251,9737),(27877,'D','34201',1277,9737),(27878,'E','04123',1278,9737),(27879,'C','43201',1264,9737),(27880,'B','43210',1287,9737),(27881,'C','32041',1263,9737),(27882,'D','21304',1266,9737),(27883,'D','24301',1288,9737),(27884,'C','31402',1279,9737),(27885,'A','01342',1266,9738),(27886,'B','12403',1285,9738),(27887,'B','40213',1273,9738),(27888,'A','01234',1253,9738),(27889,'A','20341',1257,9738),(27890,'E','04312',1260,9738),(27891,'C','43012',1278,9738),(27892,'C','24310',1283,9738),(27893,'A','10324',1247,9738),(27894,'C','03124',1276,9738),(27895,'B','30421',1287,9738),(27896,'A','03214',1279,9738),(27897,'E','13204',1270,9738),(27898,'A','13042',1264,9738),(27899,'D','32014',1271,9738),(27900,'A','02134',1288,9738),(27901,'A','03214',1262,9738),(27902,'B','30142',1282,9738),(27903,'C','12430',1257,9739),(27904,'A','04213',1266,9739),(27905,'C','30412',1262,9739),(27906,'A','10342',1249,9739),(27907,'D','34102',1260,9739),(27908,'D','21403',1279,9739),(27909,'B','40231',1287,9739),(27910,'E','02431',1274,9739),(27911,'A','41023',1281,9739),(27912,'C','13042',1273,9739),(27913,'A','01423',1282,9739),(27914,'D','04312',1270,9739),(27915,'E','20341',1271,9739),(27916,'B','43102',1252,9739),(27917,'E','40231',1288,9739),(27918,'B','43102',1278,9739),(27919,'E','21340',1285,9739),(27920,'E','41023',1283,9739),(27921,'D','13204',1257,9740),(27922,'D','01432',1278,9740),(27923,'D','13204',1247,9740),(27924,'E','02431',1274,9740),(27925,'E','34120',1271,9740),(27926,'B','20134',1266,9740),(27927,'D','21304',1282,9740),(27928,'B','43021',1267,9740),(27929,'E','12430',1284,9740),(27930,'A','03421',1251,9740),(27931,'A','03241',1279,9740),(27932,'A','13042',1272,9740),(27933,'E','41203',1283,9740),(27934,'C','21043',1263,9740),(27935,'D','12043',1287,9740),(27936,'C','31042',1259,9740),(27937,'C','24013',1288,9740),(27938,'D','43102',1281,9740),(27939,'D','21340',1257,9741),(27940,'C','41320',1262,9741),(27941,'C','42103',1282,9741),(27942,'E','01342',1283,9741),(27943,'D','42103',1253,9741),(27944,'C','04132',1247,9741),(27945,'E','14320',1284,9741),(27946,'C','23014',1263,9741),(27947,'D','24301',1286,9741),(27948,'D','21034',1280,9741),(27949,'A','12034',1269,9741),(27950,'D','32401',1260,9741),(27951,'C','02341',1273,9741),(27952,'C','12043',1265,9741),(27953,'D','21304',1264,9741),(27954,'D','32014',1271,9741),(27955,'E','43120',1276,9741),(27956,'E','32104',1288,9741),(27957,'A','10234',1280,9742),(27958,'E','20413',1267,9742),(27959,'A','03214',1276,9742),(27960,'D','12403',1261,9742),(27961,'B','21043',1257,9742),(27962,'E','31420',1288,9742),(27963,'B','10324',1284,9742),(27964,'C','42013',1250,9742),(27965,'D','12403',1263,9742),(27966,'A','41032',1272,9742),(27967,'C','34012',1264,9742),(27968,'E','21430',1252,9742),(27969,'E','32410',1286,9742),(27970,'B','13042',1283,9742),(27971,'E','12340',1271,9742),(27972,'A','01243',1266,9742),(27973,'D','43021',1282,9742),(27974,'A','31024',1262,9742),(27975,'B','10342',1258,9743),(27976,'D','03214',1265,9743),(27977,'D','20413',1257,9743),(27978,'E','42103',1247,9743),(27979,'D','04123',1287,9743),(27980,'E','04312',1269,9743),(27981,'B','10234',1263,9743),(27982,'A','02134',1271,9743),(27983,'D','12043',1282,9743),(27984,'D','21034',1279,9743),(27985,'D','12430',1278,9743),(27986,'A','02143',1276,9743),(27987,'A','14023',1288,9743),(27988,'A','04213',1264,9743),(27989,'A','04123',1262,9743),(27990,'A','34012',1285,9743),(27991,'C','02143',1272,9743),(27992,'C','43012',1251,9743),(27993,'A','02143',1258,9744),(27994,'C','43012',1255,9744),(27995,'A','01234',1272,9744),(27996,'C','04312',1248,9744),(27997,'E','42310',1277,9744),(27998,'B','20314',1282,9744),(27999,'D','32104',1266,9744),(28000,'E','41230',1252,9744),(28001,'A','10423',1269,9744),(28002,'E','21430',1280,9744),(28003,'E','34210',1286,9744),(28004,'B','40321',1284,9744),(28005,'C','13024',1262,9744),(28006,'C','42031',1264,9744),(28007,'E','31240',1263,9744),(28008,'A','03214',1281,9744),(28009,'B','13420',1278,9744),(28010,'C','40312',1283,9744),(28011,'B','32104',1270,9745),(28012,'D','23041',1275,9745),(28013,'B','10324',1285,9745),(28014,'A','13420',1254,9745),(28015,'C','40132',1271,9745),(28016,'E','41320',1287,9745),(28017,'D','32014',1252,9745),(28018,'B','30412',1250,9745),(28019,'E','42130',1261,9745),(28020,'A','23401',1283,9745),(28021,'E','43201',1272,9745),(28022,'E','31240',1282,9745),(28023,'C','34021',1265,9745),(28024,'E','03412',1278,9745),(28025,'C','14023',1281,9745),(28026,'B','41032',1288,9745),(28027,'D','21340',1279,9745),(28028,'D','14203',1264,9745),(28029,'E','42301',1287,9746),(28030,'D','20341',1259,9746),(28031,'E','43012',1256,9746),(28032,'C','31204',1249,9746),(28033,'D','13042',1271,9746),(28034,'D','34102',1266,9746),(28035,'E','40321',1272,9746),(28036,'C','13420',1270,9746),(28037,'E','14230',1280,9746),(28038,'C','30241',1285,9746),(28039,'D','34201',1262,9746),(28040,'C','14032',1275,9746),(28041,'B','24103',1251,9746),(28042,'B','40213',1264,9746),(28043,'A','02341',1282,9746),(28044,'D','30214',1278,9746),(28045,'C','43012',1263,9746),(28046,'B','40321',1281,9746),(28047,'A','03412',1251,9747),(28048,'C','41230',1284,9747),(28049,'E','23140',1286,9747),(28050,'D','43201',1279,9747),(28051,'D','03142',1272,9747),(28052,'E','23410',1262,9747),(28053,'E','04231',1269,9747),(28054,'B','30214',1277,9747),(28055,'C','40132',1288,9747),(28056,'B','40123',1260,9747),(28057,'A','04132',1249,9747),(28058,'B','30421',1263,9747),(28059,'D','32104',1271,9747),(28060,'E','31240',1265,9747),(28061,'E','23104',1282,9747),(28062,'B','30421',1264,9747),(28063,'A','02143',1256,9747),(28064,'E','01423',1278,9747),(28065,'A','40312',1254,9748),(28066,'E','23140',1284,9748),(28067,'B','10324',1250,9748),(28068,'E','03241',1253,9748),(28069,'D','30241',1283,9748),(28070,'A','42310',1282,9748),(28071,'E','40132',1265,9748),(28072,'B','41032',1271,9748),(28073,'B','40321',1288,9748),(28074,'B','42031',1261,9748),(28075,'C','14032',1277,9748),(28076,'A','03241',1280,9748),(28077,'E','41230',1264,9748),(28078,'D','31240',1278,9748),(28079,'D','34102',1273,9748),(28080,'A','04312',1263,9748),(28081,'C','02341',1286,9748),(28082,'A','13042',1268,9748),(28083,'E','24130',1277,9749),(28084,'A','20143',1249,9749),(28085,'B','10342',1260,9749),(28086,'A','40213',1280,9749),(28087,'C','41032',1266,9749),(28088,'C','40213',1286,9749),(28089,'D','41302',1284,9749),(28090,'E','04213',1278,9749),(28091,'C','41032',1269,9749),(28092,'E','10342',1256,9749),(28093,'A','42310',1288,9749),(28094,'C','01432',1262,9749),(28095,'C','23041',1281,9749),(28096,'C','20134',1272,9749),(28097,'B','41302',1252,9749),(28098,'C','41023',1282,9749),(28099,'C','31042',1271,9749),(28100,'A','34210',1283,9749),(28101,'E','32104',1270,9750),(28102,'C','23041',1275,9750),(28103,'A','10324',1285,9750),(28104,'E','13420',1254,9750),(28105,'C','40132',1271,9750),(28106,'C','41320',1287,9750),(28107,'D','32014',1252,9750),(28108,'B','30412',1250,9750),(28109,'E','42130',1261,9750),(28110,'B','23401',1283,9750),(28111,'A','43201',1272,9750),(28112,'E','31240',1282,9750),(28113,'C','34021',1265,9750),(28114,'C','03412',1278,9750),(28115,'C','14023',1281,9750),(28116,'B','41032',1288,9750),(28117,'E','21340',1279,9750),(28118,'D','14203',1264,9750),(28119,'A','10342',1272,9751),(28120,'A','02413',1253,9751),(28121,'C','21034',1261,9751),(28122,'B','32410',1285,9751),(28123,'D','13042',1283,9751),(28124,'D','23104',1277,9751),(28125,'E','24301',1257,9751),(28126,'C','43021',1247,9751),(28127,'D','13420',1279,9751),(28128,'C','43012',1264,9751),(28129,'E','41023',1278,9751),(28130,'D','24301',1281,9751),(28131,'C','04132',1269,9751),(28132,'D','12304',1265,9751),(28133,'A','02314',1263,9751),(28134,'B','30421',1282,9751),(28135,'E','21304',1288,9751),(28136,'D','41203',1286,9751),(28137,'A','10342',1272,9752),(28138,'B','02413',1253,9752),(28139,'A','21034',1261,9752),(28140,'E','32410',1285,9752),(28141,'B','13042',1283,9752),(28142,'B','23104',1277,9752),(28143,'C','24301',1257,9752),(28144,'B','43021',1247,9752),(28145,'A','13420',1279,9752),(28146,'D','43012',1264,9752),(28147,'E','41023',1278,9752),(28148,'D','24301',1281,9752),(28149,'C','04132',1269,9752),(28150,'D','12304',1265,9752),(28151,'A','02314',1263,9752),(28152,'E','30421',1282,9752),(28153,'B','21304',1288,9752),(28154,'E','41203',1286,9752),(28155,'B','40231',1255,9753),(28156,'D','10243',1288,9753),(28157,'D','42013',1272,9753),(28158,'B','23140',1283,9753),(28159,'B','43120',1267,9753),(28160,'D','24103',1259,9753),(28161,'E','42013',1278,9753),(28162,'B','40231',1265,9753),(28163,'C','21340',1286,9753),(28164,'A','23140',1248,9753),(28165,'D','13024',1285,9753),(28166,'D','24130',1277,9753),(28167,'C','03124',1271,9753),(28168,'D','42301',1251,9753),(28169,'C','01324',1281,9753),(28170,'A','12034',1262,9753),(28171,'A','02341',1280,9753),(28172,'B','30412',1263,9753),(28173,'D','43102',1284,9754),(28174,'B','31240',1272,9754),(28175,'A','04231',1265,9754),(28176,'E','01342',1258,9754),(28177,'E','12430',1253,9754),(28178,'E','32401',1271,9754),(28179,'E','34201',1280,9754),(28180,'A','02431',1247,9754),(28181,'A','13402',1288,9754),(28182,'D','41302',1267,9754),(28183,'C','42031',1286,9754),(28184,'B','20413',1276,9754),(28185,'D','41032',1278,9754),(28186,'D','40321',1257,9754),(28187,'E','43021',1264,9754),(28188,'E','34102',1262,9754),(28189,'D','12403',1263,9754),(28190,'A','02413',1281,9754),(28191,'B','30142',1277,9755),(28192,'C','43021',1288,9755),(28193,'D','43120',1284,9755),(28194,'E','24301',1264,9755),(28195,'E','32140',1247,9755),(28196,'B','01234',1269,9755),(28197,'C','01432',1280,9755),(28198,'E','03241',1287,9755),(28199,'C','34012',1262,9755),(28200,'A','01423',1266,9755),(28201,'E','10243',1258,9755),(28202,'C','24013',1273,9755),(28203,'D','13024',1271,9755),(28204,'A','21304',1253,9755),(28205,'B','10243',1254,9755),(28206,'D','24103',1278,9755),(28207,'A','13402',1281,9755),(28208,'B','23410',1283,9755),(28209,'E','30412',1248,9756),(28210,'D','34120',1286,9756),(28211,'C','04321',1270,9756),(28212,'D','40231',1278,9756),(28213,'C','12034',1264,9756),(28214,'C','43012',1276,9756),(28215,'A','03421',1253,9756),(28216,'A','02413',1288,9756),(28217,'A','02341',1281,9756),(28218,'B','01234',1272,9756),(28219,'C','32041',1263,9756),(28220,'B','30124',1258,9756),(28221,'E','31024',1254,9756),(28222,'A','03214',1282,9756),(28223,'A','41032',1271,9756),(28224,'C','14023',1266,9756),(28225,'B','20431',1262,9756),(28226,'D','03412',1285,9756),(28227,'D','42301',1287,9757),(28228,'B','20341',1259,9757),(28229,'D','43012',1256,9757),(28230,'D','31204',1249,9757),(28231,'A','13042',1271,9757),(28232,'D','34102',1266,9757),(28233,'E','40321',1272,9757),(28234,'B','13420',1270,9757),(28235,'E','14230',1280,9757),(28236,'C','30241',1285,9757),(28237,'A','34201',1262,9757),(28238,'C','14032',1275,9757),(28239,'D','24103',1251,9757),(28240,'B','40213',1264,9757),(28241,'A','02341',1282,9757),(28242,'A','30214',1278,9757),(28243,'C','43012',1263,9757),(28244,'B','40321',1281,9757),(28245,'E','10342',1258,9758),(28246,'A','03214',1265,9758),(28247,'D','20413',1257,9758),(28248,'E','42103',1247,9758),(28249,'A','04123',1287,9758),(28250,'E','04312',1269,9758),(28251,'B','10234',1263,9758),(28252,'B','02134',1271,9758),(28253,'D','12043',1282,9758),(28254,'C','21034',1279,9758),(28255,'D','12430',1278,9758),(28256,'A','02143',1276,9758),(28257,'C','14023',1288,9758),(28258,'A','04213',1264,9758),(28259,'E','04123',1262,9758),(28260,'E','34012',1285,9758),(28261,'A','02143',1272,9758),(28262,'A','43012',1251,9758),(28263,'C','23014',1269,9759),(28264,'D','34201',1249,9759),(28265,'B','34021',1253,9759),(28266,'A','03241',1262,9759),(28267,'C','13204',1258,9759),(28268,'B','41032',1275,9759),(28269,'B','30241',1279,9759),(28270,'D','32104',1285,9759),(28271,'A','02431',1264,9759),(28272,'C','12034',1265,9759),(28273,'A','02134',1263,9759),(28274,'B','30421',1286,9759),(28275,'B','30142',1273,9759),(28276,'E','32410',1281,9759),(28277,'C','24130',1255,9759),(28278,'E','01423',1278,9759),(28279,'E','02431',1282,9759),(28280,'E','31240',1288,9759),(28281,'D','31420',1282,9760),(28282,'D','12403',1263,9760),(28283,'E','40231',1253,9760),(28284,'D','13420',1268,9760),(28285,'A','32041',1283,9760),(28286,'B','10324',1275,9760),(28287,'D','23104',1280,9760),(28288,'B','02341',1261,9760),(28289,'E','14230',1286,9760),(28290,'E','31240',1250,9760),(28291,'A','02314',1281,9760),(28292,'E','21340',1266,9760),(28293,'A','04132',1264,9760),(28294,'A','02143',1262,9760),(28295,'C','42031',1288,9760),(28296,'E','12403',1256,9760),(28297,'E','24130',1272,9760),(28298,'E','13024',1284,9760),(28299,'B','20143',1262,9761),(28300,'B','03241',1269,9761),(28301,'B','32041',1248,9761),(28302,'E','21430',1276,9761),(28303,'C','01432',1288,9761),(28304,'D','10243',1273,9761),(28305,'E','34120',1253,9761),(28306,'A','03241',1259,9761),(28307,'C','23014',1287,9761),(28308,'A','02413',1282,9761),(28309,'C','43102',1278,9761),(28310,'A','20341',1271,9761),(28311,'A','03214',1265,9761),(28312,'A','02341',1283,9761),(28313,'C','24013',1257,9761),(28314,'A','04132',1280,9761),(28315,'B','30142',1285,9761),(28316,'C','13042',1263,9761),(28317,'A','04312',1250,9762),(28318,'D','32140',1253,9762),(28319,'C','41032',1286,9762),(28320,'B','41230',1267,9762),(28321,'E','43120',1288,9762),(28322,'E','42310',1265,9762),(28323,'B','01243',1272,9762),(28324,'C','34012',1278,9762),(28325,'D','02143',1259,9762),(28326,'B','40321',1277,9762),(28327,'A','01243',1284,9762),(28328,'D','24103',1263,9762),(28329,'B','30421',1280,9762),(28330,'D','13402',1282,9762),(28331,'B','34012',1254,9762),(28332,'A','01342',1264,9762),(28333,'A','03421',1281,9762),(28334,'C','40321',1283,9762),(28335,'C','12043',1284,9763),(28336,'E','10423',1262,9763),(28337,'C','13024',1277,9763),(28338,'E','14023',1255,9763),(28339,'B','32041',1249,9763),(28340,'D','31402',1287,9763),(28341,'D','40132',1251,9763),(28342,'C','13024',1272,9763),(28343,'D','34210',1282,9763),(28344,'B','32041',1270,9763),(28345,'B','02143',1260,9763),(28346,'E','41320',1280,9763),(28347,'D','02314',1271,9763),(28348,'D','42103',1265,9763),(28349,'C','32401',1281,9763),(28350,'D','14203',1288,9763),(28351,'D','32401',1263,9763),(28352,'E','30421',1283,9763),(28353,'B','14320',1285,9764),(28354,'B','30241',1274,9764),(28355,'D','14302',1287,9764),(28356,'A','04123',1255,9764),(28357,'B','10234',1263,9764),(28358,'D','14302',1273,9764),(28359,'D','41203',1261,9764),(28360,'B','10423',1281,9764),(28361,'D','42013',1247,9764),(28362,'D','43201',1266,9764),(28363,'D','04312',1271,9764),(28364,'C','02134',1252,9764),(28365,'B','30421',1288,9764),(28366,'B','30421',1279,9764),(28367,'A','01432',1278,9764),(28368,'E','42130',1264,9764),(28369,'A','32014',1283,9764),(28370,'B','34012',1270,9764),(28371,'A','02413',1253,9765),(28372,'C','40213',1285,9765),(28373,'C','34021',1271,9765),(28374,'D','24013',1268,9765),(28375,'A','34201',1249,9765),(28376,'D','24130',1276,9765),(28377,'D','23104',1273,9765),(28378,'E','31240',1256,9765),(28379,'A','04231',1287,9765),(28380,'E','12340',1281,9765),(28381,'A','02341',1263,9765),(28382,'D','24130',1278,9765),(28383,'C','34012',1260,9765),(28384,'E','14320',1288,9765),(28385,'D','13402',1266,9765),(28386,'A','10432',1283,9765),(28387,'C','41023',1264,9765),(28388,'E','20431',1280,9765),(28389,'D','04132',1281,9766),(28390,'B','21304',1285,9766),(28391,'A','21043',1248,9766),(28392,'A','30241',1251,9766),(28393,'E','20134',1257,9766),(28394,'E','32041',1264,9766),(28395,'A','23014',1270,9766),(28396,'C','14032',1272,9766),(28397,'A','32140',1278,9766),(28398,'B','12430',1261,9766),(28399,'B','30412',1282,9766),(28400,'A','14203',1275,9766),(28401,'C','12034',1262,9766),(28402,'A','20314',1286,9766),(28403,'E','40321',1271,9766),(28404,'E','10324',1265,9766),(28405,'D','14302',1279,9766),(28406,'D','41302',1263,9766),(28407,'E','24013',1267,9767),(28408,'E','41320',1286,9767),(28409,'D','13204',1264,9767),(28410,'A','02341',1280,9767),(28411,'C','21043',1261,9767),(28412,'D','34102',1275,9767),(28413,'C','20134',1256,9767),(28414,'A','14320',1282,9767),(28415,'E','40123',1283,9767),(28416,'A','34120',1288,9767),(28417,'D','30214',1285,9767),(28418,'E','13240',1262,9767),(28419,'B','02134',1248,9767),(28420,'D','42301',1272,9767),(28421,'E','34021',1278,9767),(28422,'A','10432',1266,9767),(28423,'C','20134',1271,9767),(28424,'B','01423',1253,9767),(28425,'E','12043',1254,9768),(28426,'A','10342',1280,9768),(28427,'D','20134',1288,9768),(28428,'E','21403',1247,9768),(28429,'E','43021',1269,9768),(28430,'C','03241',1278,9768),(28431,'B','34102',1273,9768),(28432,'C','23014',1264,9768),(28433,'E','20134',1260,9768),(28434,'A','43201',1283,9768),(28435,'D','21304',1277,9768),(28436,'C','42103',1262,9768),(28437,'C','30412',1284,9768),(28438,'C','10432',1271,9768),(28439,'C','24103',1263,9768),(28440,'E','02431',1251,9768),(28441,'E','03214',1282,9768),(28442,'C','42130',1281,9768),(28443,'C','10342',1272,9769),(28444,'A','02413',1253,9769),(28445,'C','21034',1261,9769),(28446,'E','32410',1285,9769),(28447,'B','13042',1283,9769),(28448,'B','23104',1277,9769),(28449,'E','24301',1257,9769),(28450,'C','43021',1247,9769),(28451,'E','13420',1279,9769),(28452,'C','43012',1264,9769),(28453,'C','41023',1278,9769),(28454,'A','24301',1281,9769),(28455,'D','04132',1269,9769),(28456,'D','12304',1265,9769),(28457,'A','02314',1263,9769),(28458,'B','30421',1282,9769),(28459,'D','21304',1288,9769),(28460,'C','41203',1286,9769),(28461,'E','04312',1266,9770),(28462,'E','30241',1271,9770),(28463,'C','02143',1288,9770),(28464,'D','14230',1278,9770),(28465,'A','43120',1257,9770),(28466,'D','13402',1279,9770),(28467,'D','43102',1258,9770),(28468,'A','41023',1247,9770),(28469,'B','10432',1284,9770),(28470,'B','21043',1273,9770),(28471,'A','31042',1277,9770),(28472,'E','32140',1262,9770),(28473,'E','13240',1281,9770),(28474,'A','30214',1287,9770),(28475,'C','03241',1267,9770),(28476,'D','43102',1264,9770),(28477,'E','34120',1263,9770),(28478,'C','34021',1251,9770),(28479,'C','12043',1258,9771),(28480,'C','12034',1277,9771),(28481,'B','41032',1273,9771),(28482,'D','34201',1279,9771),(28483,'A','20413',1248,9771),(28484,'E','02341',1271,9771),(28485,'A','10243',1256,9771),(28486,'A','23401',1267,9771),(28487,'E','42310',1252,9771),(28488,'A','03241',1282,9771),(28489,'C','10234',1283,9771),(28490,'D','23104',1264,9771),(28491,'B','30214',1266,9771),(28492,'D','21403',1262,9771),(28493,'B','10243',1263,9771),(28494,'D','24301',1288,9771),(28495,'C','23401',1278,9771),(28496,'B','12304',1284,9771),(28497,'E','02134',1270,9772),(28498,'B','40231',1274,9772),(28499,'A','04132',1261,9772),(28500,'C','04312',1287,9772),(28501,'C','20341',1279,9772),(28502,'B','10243',1265,9772),(28503,'B','10423',1264,9772),(28504,'D','34120',1249,9772),(28505,'E','40123',1282,9772),(28506,'A','14203',1271,9772),(28507,'D','42301',1254,9772),(28508,'A','02341',1273,9772),(28509,'C','01423',1284,9772),(28510,'B','43120',1283,9772),(28511,'B','40312',1251,9772),(28512,'A','40312',1278,9772),(28513,'B','24031',1262,9772),(28514,'D','21304',1263,9772),(28515,'A','41203',1270,9773),(28516,'C','42103',1273,9773),(28517,'D','21304',1261,9773),(28518,'B','30142',1275,9773),(28519,'A','12034',1253,9773),(28520,'A','23014',1257,9773),(28521,'B','12043',1266,9773),(28522,'A','14023',1288,9773),(28523,'B','30142',1283,9773),(28524,'D','10324',1282,9773),(28525,'D','03214',1278,9773),(28526,'C','21043',1264,9773),(28527,'E','34210',1281,9773),(28528,'C','14023',1263,9773),(28529,'E','40231',1250,9773),(28530,'E','24310',1284,9773),(28531,'B','10234',1287,9773),(28532,'B','02134',1271,9773),(28533,'A','30124',1279,9774),(28534,'B','30142',1256,9774),(28535,'C','32041',1264,9774),(28536,'D','31402',1258,9774),(28537,'A','03142',1250,9774),(28538,'A','13420',1273,9774),(28539,'D','14023',1267,9774),(28540,'C','13402',1274,9774),(28541,'D','13024',1251,9774),(28542,'E','21403',1262,9774),(28543,'A','03142',1263,9774),(28544,'B','10243',1287,9774),(28545,'D','02431',1278,9774),(28546,'B','02413',1282,9774),(28547,'A','01432',1284,9774),(28548,'D','20413',1271,9774),(28549,'E','42310',1265,9774),(28550,'B','10234',1281,9774),(28551,'D','32041',1287,9775),(28552,'B','12304',1285,9775),(28553,'B','40132',1259,9775),(28554,'A','03412',1264,9775),(28555,'E','14320',1262,9775),(28556,'D','04312',1252,9775),(28557,'A','01243',1272,9775),(28558,'C','41032',1279,9775),(28559,'E','40132',1255,9775),(28560,'A','04123',1281,9775),(28561,'C','01423',1268,9775),(28562,'E','32140',1274,9775),(28563,'C','32041',1266,9775),(28564,'E','42301',1247,9775),(28565,'A','34012',1283,9775),(28566,'C','12034',1282,9775),(28567,'C','10432',1271,9775),(28568,'E','41023',1278,9775),(28569,'A','03412',1251,9776),(28570,'E','41230',1284,9776),(28571,'E','23140',1286,9776),(28572,'D','43201',1279,9776),(28573,'C','03142',1272,9776),(28574,'B','23410',1262,9776),(28575,'B','04231',1269,9776),(28576,'A','30214',1277,9776),(28577,'C','40132',1288,9776),(28578,'B','40123',1260,9776),(28579,'A','04132',1249,9776),(28580,'B','30421',1263,9776),(28581,'A','32104',1271,9776),(28582,'E','31240',1265,9776),(28583,'D','23104',1282,9776),(28584,'E','30421',1264,9776),(28585,'C','02143',1256,9776),(28586,'C','01423',1278,9776),(28587,'E','31420',1282,9777),(28588,'D','12403',1263,9777),(28589,'E','40231',1253,9777),(28590,'A','13420',1268,9777),(28591,'A','32041',1283,9777),(28592,'B','10324',1275,9777),(28593,'D','23104',1280,9777),(28594,'A','02341',1261,9777),(28595,'C','14230',1286,9777),(28596,'C','31240',1250,9777),(28597,'A','02314',1281,9777),(28598,'A','21340',1266,9777),(28599,'E','04132',1264,9777),(28600,'A','02143',1262,9777),(28601,'C','42031',1288,9777),(28602,'B','12403',1256,9777),(28603,'E','24130',1272,9777),(28604,'C','13024',1284,9777),(28605,'D','23104',1274,9778),(28606,'C','23104',1285,9778),(28607,'B','14302',1288,9778),(28608,'B','03214',1251,9778),(28609,'D','40312',1280,9778),(28610,'B','40231',1261,9778),(28611,'A','03124',1264,9778),(28612,'C','43102',1283,9778),(28613,'D','31402',1271,9778),(28614,'D','10243',1249,9778),(28615,'D','04123',1269,9778),(28616,'C','01234',1256,9778),(28617,'E','40321',1278,9778),(28618,'D','34201',1262,9778),(28619,'B','10234',1263,9778),(28620,'B','10432',1265,9778),(28621,'C','12043',1273,9778),(28622,'C','40213',1282,9778),(28623,'C','31240',1263,9779),(28624,'A','21340',1283,9779),(28625,'A','32041',1284,9779),(28626,'E','04312',1278,9779),(28627,'E','34102',1262,9779),(28628,'B','03124',1274,9779),(28629,'C','10432',1259,9779),(28630,'D','21034',1287,9779),(28631,'B','03412',1256,9779),(28632,'B','02431',1266,9779),(28633,'E','14302',1281,9779),(28634,'E','21340',1268,9779),(28635,'D','24301',1251,9779),(28636,'A','13042',1249,9779),(28637,'B','34012',1279,9779),(28638,'D','04132',1273,9779),(28639,'D','20431',1288,9779),(28640,'C','34021',1282,9779),(28641,'C','24031',1256,9780),(28642,'D','24103',1261,9780),(28643,'E','34012',1262,9780),(28644,'A','01432',1248,9780),(28645,'A','13420',1269,9780),(28646,'B','30142',1263,9780),(28647,'A','01432',1279,9780),(28648,'B','20134',1285,9780),(28649,'E','32410',1253,9780),(28650,'E','31420',1288,9780),(28651,'E','10432',1287,9780),(28652,'B','40132',1282,9780),(28653,'B','30142',1272,9780),(28654,'D','41203',1275,9780),(28655,'A','23410',1278,9780),(28656,'E','01324',1283,9780),(28657,'D','41203',1266,9780),(28658,'D','41302',1264,9780),(28659,'A','10243',1267,9781),(28660,'C','24013',1261,9781),(28661,'A','20143',1254,9781),(28662,'B','30142',1264,9781),(28663,'E','34120',1253,9781),(28664,'A','14032',1287,9781),(28665,'E','42130',1284,9781),(28666,'C','42130',1275,9781),(28667,'B','21304',1266,9781),(28668,'B','21403',1250,9781),(28669,'A','03421',1271,9781),(28670,'C','20134',1282,9781),(28671,'E','24103',1283,9781),(28672,'C','24103',1272,9781),(28673,'A','01243',1262,9781),(28674,'E','43120',1279,9781),(28675,'E','34012',1278,9781),(28676,'B','20314',1263,9781),(28677,'E','31420',1264,9782),(28678,'B','40312',1262,9782),(28679,'A','12304',1253,9782),(28680,'A','03124',1277,9782),(28681,'E','12430',1281,9782),(28682,'D','30142',1268,9782),(28683,'B','02314',1258,9782),(28684,'B','03241',1278,9782),(28685,'C','30124',1273,9782),(28686,'A','02143',1263,9782),(28687,'E','03142',1256,9782),(28688,'B','10243',1266,9782),(28689,'E','32014',1288,9782),(28690,'E','42013',1285,9782),(28691,'A','04312',1249,9782),(28692,'A','30142',1280,9782),(28693,'E','12340',1286,9782),(28694,'A','42013',1283,9782),(28695,'A','40123',1262,9783),(28696,'D','02134',1248,9783),(28697,'C','23140',1266,9783),(28698,'A','03142',1271,9783),(28699,'B','40132',1288,9783),(28700,'C','02143',1269,9783),(28701,'E','20341',1256,9783),(28702,'E','12430',1279,9783),(28703,'A','02431',1263,9783),(28704,'E','01342',1284,9783),(28705,'A','03241',1253,9783),(28706,'B','02431',1258,9783),(28707,'B','03214',1277,9783),(28708,'E','01342',1278,9783),(28709,'B','23401',1283,9783),(28710,'C','21034',1286,9783),(28711,'C','21403',1272,9783),(28712,'E','42310',1282,9783),(28713,'D','12043',1284,9784),(28714,'B','10423',1262,9784),(28715,'B','13024',1277,9784),(28716,'C','14023',1255,9784),(28717,'B','32041',1249,9784),(28718,'E','31402',1287,9784),(28719,'B','40132',1251,9784),(28720,'A','13024',1272,9784),(28721,'E','34210',1282,9784),(28722,'D','32041',1270,9784),(28723,'D','02143',1260,9784),(28724,'C','41320',1280,9784),(28725,'D','02314',1271,9784),(28726,'C','42103',1265,9784),(28727,'D','32401',1281,9784),(28728,'A','14203',1288,9784),(28729,'D','32401',1263,9784),(28730,'E','30421',1283,9784),(28731,'A','32041',1287,9785),(28732,'B','12304',1285,9785),(28733,'B','40132',1259,9785),(28734,'E','03412',1264,9785),(28735,'E','14320',1262,9785),(28736,'A','04312',1252,9785),(28737,'B','01243',1272,9785),(28738,'C','41032',1279,9785),(28739,'E','40132',1255,9785),(28740,'A','04123',1281,9785),(28741,'C','01423',1268,9785),(28742,'E','32140',1274,9785),(28743,'B','32041',1266,9785),(28744,'C','42301',1247,9785),(28745,'A','34012',1283,9785),(28746,'E','12034',1282,9785),(28747,'B','10432',1271,9785),(28748,'C','41023',1278,9785),(28749,'E','40123',1274,9786),(28750,'D','13204',1251,9786),(28751,'B','40213',1265,9786),(28752,'C','43012',1278,9786),(28753,'E','24130',1261,9786),(28754,'D','41032',1255,9786),(28755,'B','04321',1285,9786),(28756,'D','03214',1283,9786),(28757,'D','02143',1271,9786),(28758,'D','01324',1250,9786),(28759,'C','04132',1281,9786),(28760,'D','02431',1269,9786),(28761,'A','10432',1288,9786),(28762,'B','21034',1279,9786),(28763,'B','41023',1273,9786),(28764,'A','31420',1286,9786),(28765,'C','34012',1282,9786),(28766,'E','40213',1262,9786),(28767,'E','41230',1265,9787),(28768,'C','41023',1249,9787),(28769,'A','02134',1264,9787),(28770,'A','02431',1277,9787),(28771,'A','12034',1253,9787),(28772,'C','32104',1278,9787),(28773,'D','32410',1256,9787),(28774,'B','24031',1270,9787),(28775,'C','01342',1281,9787),(28776,'E','13402',1258,9787),(28777,'C','42013',1286,9787),(28778,'B','31402',1272,9787),(28779,'E','03124',1279,9787),(28780,'E','43120',1263,9787),(28781,'C','10243',1284,9787),(28782,'A','01324',1283,9787),(28783,'B','20134',1288,9787),(28784,'C','03412',1262,9787),(28785,'E','14320',1265,9788),(28786,'C','14320',1268,9788),(28787,'C','32014',1260,9788),(28788,'D','32104',1250,9788),(28789,'A','02143',1272,9788),(28790,'C','12034',1286,9788),(28791,'A','23041',1256,9788),(28792,'A','21043',1285,9788),(28793,'E','30421',1276,9788),(28794,'B','23104',1278,9788),(28795,'C','12034',1279,9788),(28796,'E','21340',1253,9788),(28797,'A','42130',1283,9788),(28798,'D','14302',1288,9788),(28799,'D','12304',1281,9788),(28800,'D','34012',1271,9788),(28801,'C','34021',1263,9788),(28802,'D','24301',1264,9788),(28803,'E','20143',1262,9789),(28804,'C','03241',1269,9789),(28805,'C','32041',1248,9789),(28806,'D','21430',1276,9789),(28807,'D','01432',1288,9789),(28808,'A','10243',1273,9789),(28809,'E','34120',1253,9789),(28810,'D','03241',1259,9789),(28811,'C','23014',1287,9789),(28812,'A','02413',1282,9789),(28813,'C','43102',1278,9789),(28814,'E','20341',1271,9789),(28815,'E','03214',1265,9789),(28816,'C','02341',1283,9789),(28817,'B','24013',1257,9789),(28818,'C','04132',1280,9789),(28819,'A','30142',1285,9789),(28820,'C','13042',1263,9789),(28821,'B','40231',1255,9790),(28822,'B','10243',1288,9790),(28823,'C','42013',1272,9790),(28824,'B','23140',1283,9790),(28825,'B','43120',1267,9790),(28826,'E','24103',1259,9790),(28827,'E','42013',1278,9790),(28828,'B','40231',1265,9790),(28829,'E','21340',1286,9790),(28830,'C','23140',1248,9790),(28831,'C','13024',1285,9790),(28832,'E','24130',1277,9790),(28833,'A','03124',1271,9790),(28834,'D','42301',1251,9790),(28835,'A','01324',1281,9790),(28836,'C','12034',1262,9790),(28837,'C','02341',1280,9790),(28838,'B','30412',1263,9790),(28839,'B','10243',1267,9791),(28840,'A','24013',1261,9791),(28841,'D','20143',1254,9791),(28842,'B','30142',1264,9791),(28843,'D','34120',1253,9791),(28844,'A','14032',1287,9791),(28845,'A','42130',1284,9791),(28846,'E','42130',1275,9791),(28847,'D','21304',1266,9791),(28848,'D','21403',1250,9791),(28849,'A','03421',1271,9791),(28850,'E','20134',1282,9791),(28851,'E','24103',1283,9791),(28852,'C','24103',1272,9791),(28853,'E','01243',1262,9791),(28854,'A','43120',1279,9791),(28855,'C','34012',1278,9791),(28856,'B','20314',1263,9791),(28857,'E','31240',1263,9792),(28858,'D','21340',1283,9792),(28859,'D','32041',1284,9792),(28860,'E','04312',1278,9792),(28861,'B','34102',1262,9792),(28862,'C','03124',1274,9792),(28863,'C','10432',1259,9792),(28864,'B','21034',1287,9792),(28865,'A','03412',1256,9792),(28866,'A','02431',1266,9792),(28867,'A','14302',1281,9792),(28868,'B','21340',1268,9792),(28869,'A','24301',1251,9792),(28870,'C','13042',1249,9792),(28871,'D','34012',1279,9792),(28872,'C','04132',1273,9792),(28873,'E','20431',1288,9792),(28874,'A','34021',1282,9792),(28875,'D','12043',1258,9793),(28876,'D','12034',1277,9793),(28877,'C','41032',1273,9793),(28878,'B','34201',1279,9793),(28879,'B','20413',1248,9793),(28880,'A','02341',1271,9793),(28881,'E','10243',1256,9793),(28882,'A','23401',1267,9793),(28883,'E','42310',1252,9793),(28884,'A','03241',1282,9793),(28885,'D','10234',1283,9793),(28886,'C','23104',1264,9793),(28887,'C','30214',1266,9793),(28888,'D','21403',1262,9793),(28889,'B','10243',1263,9793),(28890,'B','24301',1288,9793),(28891,'D','23401',1278,9793),(28892,'B','12304',1284,9793),(28893,'B','21340',1257,9794),(28894,'C','41320',1262,9794),(28895,'E','42103',1282,9794),(28896,'B','01342',1283,9794),(28897,'C','42103',1253,9794),(28898,'B','04132',1247,9794),(28899,'B','14320',1284,9794),(28900,'C','23014',1263,9794),(28901,'D','24301',1286,9794),(28902,'D','21034',1280,9794),(28903,'D','12034',1269,9794),(28904,'D','32401',1260,9794),(28905,'D','02341',1273,9794),(28906,'E','12043',1265,9794),(28907,'B','21304',1264,9794),(28908,'C','32014',1271,9794),(28909,'C','43120',1276,9794),(28910,'E','32104',1288,9794),(28911,'B','04312',1266,9795),(28912,'C','30241',1271,9795),(28913,'A','02143',1288,9795),(28914,'D','14230',1278,9795),(28915,'E','43120',1257,9795),(28916,'B','13402',1279,9795),(28917,'D','43102',1258,9795),(28918,'D','41023',1247,9795),(28919,'A','10432',1284,9795),(28920,'B','21043',1273,9795),(28921,'A','31042',1277,9795),(28922,'A','32140',1262,9795),(28923,'C','13240',1281,9795),(28924,'D','30214',1287,9795),(28925,'C','03241',1267,9795),(28926,'C','43102',1264,9795),(28927,'E','34120',1263,9795),(28928,'C','34021',1251,9795),(28929,'C','14032',1249,9796),(28930,'C','14023',1286,9796),(28931,'A','42103',1269,9796),(28932,'C','32041',1259,9796),(28933,'E','12430',1274,9796),(28934,'D','23014',1272,9796),(28935,'A','40132',1278,9796),(28936,'C','34021',1282,9796),(28937,'D','41023',1256,9796),(28938,'A','04321',1280,9796),(28939,'C','41032',1265,9796),(28940,'D','40213',1271,9796),(28941,'E','12430',1251,9796),(28942,'B','03142',1283,9796),(28943,'A','43201',1288,9796),(28944,'D','14302',1264,9796),(28945,'E','43210',1263,9796),(28946,'A','34120',1281,9796),(28947,'B','40213',1282,9797),(28948,'A','13204',1267,9797),(28949,'E','20341',1276,9797),(28950,'E','20431',1249,9797),(28951,'A','01234',1254,9797),(28952,'A','21304',1260,9797),(28953,'D','34201',1265,9797),(28954,'D','12304',1253,9797),(28955,'C','32014',1263,9797),(28956,'B','13204',1262,9797),(28957,'D','21034',1278,9797),(28958,'B','30124',1272,9797),(28959,'D','31402',1281,9797),(28960,'B','34201',1280,9797),(28961,'E','02134',1283,9797),(28962,'D','23410',1264,9797),(28963,'E','03412',1271,9797),(28964,'C','14032',1288,9797),(28965,'A','13402',1285,9798),(28966,'C','41032',1255,9798),(28967,'C','14203',1261,9798),(28968,'C','10324',1270,9798),(28969,'A','03124',1266,9798),(28970,'D','24031',1273,9798),(28971,'B','23104',1247,9798),(28972,'A','34120',1271,9798),(28973,'B','20341',1276,9798),(28974,'E','34120',1252,9798),(28975,'B','23014',1282,9798),(28976,'C','02314',1281,9798),(28977,'D','43102',1264,9798),(28978,'C','12340',1283,9798),(28979,'A','23041',1278,9798),(28980,'E','14230',1288,9798),(28981,'A','43210',1279,9798),(28982,'A','24103',1286,9798),(28983,'D','23104',1274,9799),(28984,'D','23104',1285,9799),(28985,'B','14302',1288,9799),(28986,'A','03214',1251,9799),(28987,'E','40312',1280,9799),(28988,'A','40231',1261,9799),(28989,'A','03124',1264,9799),(28990,'C','43102',1283,9799),(28991,'B','31402',1271,9799),(28992,'A','10243',1249,9799),(28993,'D','04123',1269,9799),(28994,'C','01234',1256,9799),(28995,'C','40321',1278,9799),(28996,'D','34201',1262,9799),(28997,'B','10234',1263,9799),(28998,'D','10432',1265,9799),(28999,'C','12043',1273,9799),(29000,'C','40213',1282,9799),(29001,'A','21304',1281,9800),(29002,'C','13042',1261,9800),(29003,'A','40132',1257,9800),(29004,'B','04132',1270,9800),(29005,'D','02413',1279,9800),(29006,'B','23014',1283,9800),(29007,'D','42310',1288,9800),(29008,'E','23140',1252,9800),(29009,'B','31042',1262,9800),(29010,'E','34201',1264,9800),(29011,'E','41320',1266,9800),(29012,'E','21340',1274,9800),(29013,'D','23014',1247,9800),(29014,'E','12340',1263,9800),(29015,'A','41320',1282,9800),(29016,'C','02143',1271,9800),(29017,'D','10234',1278,9800),(29018,'D','43210',1287,9800),(29019,'C','12043',1258,9801),(29020,'C','12034',1277,9801),(29021,'B','41032',1273,9801),(29022,'E','34201',1279,9801),(29023,'D','20413',1248,9801),(29024,'E','02341',1271,9801),(29025,'A','10243',1256,9801),(29026,'A','23401',1267,9801),(29027,'E','42310',1252,9801),(29028,'A','03241',1282,9801),(29029,'D','10234',1283,9801),(29030,'D','23104',1264,9801),(29031,'B','30214',1266,9801),(29032,'D','21403',1262,9801),(29033,'B','10243',1263,9801),(29034,'D','24301',1288,9801),(29035,'B','23401',1278,9801),(29036,'B','12304',1284,9801),(29037,'D','23104',1274,9802),(29038,'D','23104',1285,9802),(29039,'A','14302',1288,9802),(29040,'A','03214',1251,9802),(29041,'B','40312',1280,9802),(29042,'B','40231',1261,9802),(29043,'A','03124',1264,9802),(29044,'B','43102',1283,9802),(29045,'B','31402',1271,9802),(29046,'B','10243',1249,9802),(29047,'D','04123',1269,9802),(29048,'A','01234',1256,9802),(29049,'B','40321',1278,9802),(29050,'C','34201',1262,9802),(29051,'B','10234',1263,9802),(29052,'B','10432',1265,9802),(29053,'C','12043',1273,9802),(29054,'B','40213',1282,9802),(29055,'C','32401',1288,9803),(29056,'E','31240',1253,9803),(29057,'D','30214',1275,9803),(29058,'E','01423',1278,9803),(29059,'A','04231',1286,9803),(29060,'C','34120',1285,9803),(29061,'A','14023',1264,9803),(29062,'C','32041',1259,9803),(29063,'E','43210',1254,9803),(29064,'C','42031',1271,9803),(29065,'B','13042',1249,9803),(29066,'E','40231',1272,9803),(29067,'C','20413',1281,9803),(29068,'B','10432',1266,9803),(29069,'D','32410',1268,9803),(29070,'A','02134',1282,9803),(29071,'D','40321',1283,9803),(29072,'E','43210',1263,9803),(29073,'C','23014',1285,9804),(29074,'B','10234',1262,9804),(29075,'C','24130',1256,9804),(29076,'A','13240',1273,9804),(29077,'E','14320',1281,9804),(29078,'D','31204',1261,9804),(29079,'E','31042',1267,9804),(29080,'E','10432',1271,9804),(29081,'B','40132',1247,9804),(29082,'A','01342',1251,9804),(29083,'A','34201',1277,9804),(29084,'C','04123',1278,9804),(29085,'E','43201',1264,9804),(29086,'C','43210',1287,9804),(29087,'C','32041',1263,9804),(29088,'B','21304',1266,9804),(29089,'D','24301',1288,9804),(29090,'D','31402',1279,9804),(29091,'A','02143',1258,9805),(29092,'C','43012',1255,9805),(29093,'B','01234',1272,9805),(29094,'A','04312',1248,9805),(29095,'E','42310',1277,9805),(29096,'B','20314',1282,9805),(29097,'C','32104',1266,9805),(29098,'B','41230',1252,9805),(29099,'B','10423',1269,9805),(29100,'B','21430',1280,9805),(29101,'E','34210',1286,9805),(29102,'B','40321',1284,9805),(29103,'C','13024',1262,9805),(29104,'C','42031',1264,9805),(29105,'E','31240',1263,9805),(29106,'A','03214',1281,9805),(29107,'D','13420',1278,9805),(29108,'D','40312',1283,9805),(29109,'B','14320',1265,9806),(29110,'D','14320',1268,9806),(29111,'C','32014',1260,9806),(29112,'D','32104',1250,9806),(29113,'A','02143',1272,9806),(29114,'C','12034',1286,9806),(29115,'E','23041',1256,9806),(29116,'B','21043',1285,9806),(29117,'E','30421',1276,9806),(29118,'B','23104',1278,9806),(29119,'B','12034',1279,9806),(29120,'B','21340',1253,9806),(29121,'C','42130',1283,9806),(29122,'D','14302',1288,9806),(29123,'D','12304',1281,9806),(29124,'D','34012',1271,9806),(29125,'C','34021',1263,9806),(29126,'D','24301',1264,9806),(29127,'D','24013',1267,9807),(29128,'B','41320',1286,9807),(29129,'D','13204',1264,9807),(29130,'D','02341',1280,9807),(29131,'C','21043',1261,9807),(29132,'A','34102',1275,9807),(29133,'C','20134',1256,9807),(29134,'E','14320',1282,9807),(29135,'D','40123',1283,9807),(29136,'D','34120',1288,9807),(29137,'B','30214',1285,9807),(29138,'E','13240',1262,9807),(29139,'B','02134',1248,9807),(29140,'A','42301',1272,9807),(29141,'B','34021',1278,9807),(29142,'E','10432',1266,9807),(29143,'E','20134',1271,9807),(29144,'A','01423',1253,9807),(29145,'A','31240',1267,9808),(29146,'0','41302',1277,9808),(29147,'0','24301',1262,9808),(29148,'0','14032',1249,9808),(29149,'0','23401',1257,9808),(29150,'0','42301',1265,9808),(29151,'0','14320',1288,9808),(29152,'0','14230',1259,9808),(29153,'0','24130',1273,9808),(29154,'0','34201',1286,9808),(29155,'0','13402',1251,9808),(29156,'0','31420',1263,9808),(29157,'0','24130',1281,9808),(29158,'0','24130',1264,9808),(29159,'0','13204',1271,9808),(29160,'0','12043',1280,9808),(29161,'0','23140',1278,9808),(29162,'A','34012',1282,9808),(29163,'2','42301',1287,9809),(29164,'0','20341',1259,9809),(29165,'0','43012',1256,9809),(29166,'0','31204',1249,9809),(29167,'0','13042',1271,9809),(29168,'0','34102',1266,9809),(29169,'0','40321',1272,9809),(29170,'0','13420',1270,9809),(29171,'0','14230',1280,9809),(29172,'0','30241',1285,9809),(29173,'0','34201',1262,9809),(29174,'0','14032',1275,9809),(29175,'0','24103',1251,9809),(29176,'0','40213',1264,9809),(29177,'0','02341',1282,9809),(29178,'0','30214',1278,9809),(29179,'0','43012',1263,9809),(29180,'2','40321',1281,9809),(29181,'E','02413',1253,9810),(29182,'0','40213',1285,9810),(29183,'0','34021',1271,9810),(29184,'0','24013',1268,9810),(29185,'0','34201',1249,9810),(29186,'0','24130',1276,9810),(29187,'0','23104',1273,9810),(29188,'0','31240',1256,9810),(29189,'0','04231',1287,9810),(29190,'0','12340',1281,9810),(29191,'0','02341',1263,9810),(29192,'0','24130',1278,9810),(29193,'0','34012',1260,9810),(29194,'0','14320',1288,9810),(29195,'0','13402',1266,9810),(29196,'0','10432',1283,9810),(29197,'0','41023',1264,9810),(29198,'E','20431',1280,9810),(29199,'A','31240',1263,9811),(29200,'0','21340',1283,9811),(29201,'0','32041',1284,9811),(29202,'0','04312',1278,9811),(29203,'0','34102',1262,9811),(29204,'0','03124',1274,9811),(29205,'0','10432',1259,9811),(29206,'0','21034',1287,9811),(29207,'0','03412',1256,9811),(29208,'0','02431',1266,9811),(29209,'0','14302',1281,9811),(29210,'0','21340',1268,9811),(29211,'0','24301',1251,9811),(29212,'0','13042',1249,9811),(29213,'0','34012',1279,9811),(29214,'0','04132',1273,9811),(29215,'0','20431',1288,9811),(29216,'A','34021',1282,9811),(29217,'2','13204',1257,9812),(29218,'0','01432',1278,9812),(29219,'0','13204',1247,9812),(29220,'0','02431',1274,9812),(29221,'0','34120',1271,9812),(29222,'0','20134',1266,9812),(29223,'0','21304',1282,9812),(29224,'0','43021',1267,9812),(29225,'0','12430',1284,9812),(29226,'0','03421',1251,9812),(29227,'0','03241',1279,9812),(29228,'0','13042',1272,9812),(29229,'0','41203',1283,9812),(29230,'0','21043',1263,9812),(29231,'0','12043',1287,9812),(29232,'0','31042',1259,9812),(29233,'0','24013',1288,9812),(29234,'2','43102',1281,9812),(29235,'2','02134',1270,9813),(29236,'0','40231',1274,9813),(29237,'0','04132',1261,9813),(29238,'0','04312',1287,9813),(29239,'0','20341',1279,9813),(29240,'0','10243',1265,9813),(29241,'0','10423',1264,9813),(29242,'0','34120',1249,9813),(29243,'0','40123',1282,9813),(29244,'0','14203',1271,9813),(29245,'0','42301',1254,9813),(29246,'0','02341',1273,9813),(29247,'0','01423',1284,9813),(29248,'0','43120',1283,9813),(29249,'0','40312',1251,9813),(29250,'0','40312',1278,9813),(29251,'0','24031',1262,9813),(29252,'2','21304',1263,9813),(29253,'2','20134',1247,9814),(29254,'0','43021',1272,9814),(29255,'0','34102',1257,9814),(29256,'0','13042',1266,9814),(29257,'0','12340',1276,9814),(29258,'0','03142',1269,9814),(29259,'0','12043',1260,9814),(29260,'0','23410',1262,9814),(29261,'0','13420',1264,9814),(29262,'0','12304',1278,9814),(29263,'0','03412',1279,9814),(29264,'0','24310',1251,9814),(29265,'0','42130',1286,9814),(29266,'0','12034',1285,9814),(29267,'0','21043',1282,9814),(29268,'0','20413',1271,9814),(29269,'0','40132',1281,9814),(29270,'2','13402',1263,9814),(31431,'A','31420',1282,9935),(31432,'D','12403',1263,9935),(31433,'B','40231',1253,9935),(31434,'A','13420',1268,9935),(31435,'A','32041',1283,9935),(31436,'B','10324',1275,9935),(31437,'B','23104',1280,9935),(31438,'A','02341',1261,9935),(31439,'A','14230',1286,9935),(31440,'C','31240',1250,9935),(31441,'A','02314',1281,9935),(31442,'E','21340',1266,9935),(31443,'A','04132',1264,9935),(31444,'D','02143',1262,9935),(31445,'C','42031',1288,9935),(31446,'B','12403',1256,9935),(31447,'B','24130',1272,9935),(31448,'D','13024',1284,9935),(31449,'B','32041',1287,9936),(31450,'C','12304',1285,9936),(31451,'A','40132',1259,9936),(31452,'A','03412',1264,9936),(31453,'E','14320',1262,9936),(31454,'D','04312',1252,9936),(31455,'C','01243',1272,9936),(31456,'B','41032',1279,9936),(31457,'E','40132',1255,9936),(31458,'C','04123',1281,9936),(31459,'B','01423',1268,9936),(31460,'A','32140',1274,9936),(31461,'C','32041',1266,9936),(31462,'A','42301',1247,9936),(31463,'B','34012',1283,9936),(31464,'C','12034',1282,9936),(31465,'A','10432',1271,9936),(31466,'D','41023',1278,9936),(31467,'B','23014',1269,9937),(31468,'C','34201',1249,9937),(31469,'E','34021',1253,9937),(31470,'B','03241',1262,9937),(31471,'C','13204',1258,9937),(31472,'B','41032',1275,9937),(31473,'E','30241',1279,9937),(31474,'B','32104',1285,9937),(31475,'A','02431',1264,9937),(31476,'C','12034',1265,9937),(31477,'A','02134',1263,9937),(31478,'D','30421',1286,9937),(31479,'E','30142',1273,9937),(31480,'E','32410',1281,9937),(31481,'D','24130',1255,9937),(31482,'D','01423',1278,9937),(31483,'C','02431',1282,9937),(31484,'E','31240',1288,9937),(31485,'B','23014',1269,9938),(31486,'D','34201',1249,9938),(31487,'E','34021',1253,9938),(31488,'A','03241',1262,9938),(31489,'C','13204',1258,9938),(31490,'B','41032',1275,9938),(31491,'E','30241',1279,9938),(31492,'D','32104',1285,9938),(31493,'B','02431',1264,9938),(31494,'C','12034',1265,9938),(31495,'A','02134',1263,9938),(31496,'E','30421',1286,9938),(31497,'E','30142',1273,9938),(31498,'B','32410',1281,9938),(31499,'A','24130',1255,9938),(31500,'E','01423',1278,9938),(31501,'C','02431',1282,9938),(31502,'E','31240',1288,9938),(31503,'D','31402',1263,9939),(31504,'E','41023',1256,9939),(31505,'B','04312',1273,9939),(31506,'D','21304',1284,9939),(31507,'B','30241',1251,9939),(31508,'A','03124',1286,9939),(31509,'E','30241',1249,9939),(31510,'C','34021',1275,9939),(31511,'D','12304',1261,9939),(31512,'C','40231',1268,9939),(31513,'A','01324',1282,9939),(31514,'E','14230',1281,9939),(31515,'D','12043',1283,9939),(31516,'A','10324',1264,9939),(31517,'D','20413',1288,9939),(31518,'D','24310',1271,9939),(31519,'A','03124',1266,9939),(31520,'C','14032',1262,9939),(31521,'E','40321',1264,9940),(31522,'A','01324',1280,9940),(31523,'E','42031',1267,9940),(31524,'E','31240',1288,9940),(31525,'B','30412',1281,9940),(31526,'A','32104',1278,9940),(31527,'B','20413',1277,9940),(31528,'C','31204',1248,9940),(31529,'A','02413',1252,9940),(31530,'C','13024',1261,9940),(31531,'B','43201',1285,9940),(31532,'A','21403',1271,9940),(31533,'E','31024',1262,9940),(31534,'D','03421',1272,9940),(31535,'C','32041',1266,9940),(31536,'A','14203',1255,9940),(31537,'D','12430',1286,9940),(31538,'B','43201',1283,9940),(31539,'D','40123',1262,9941),(31540,'A','02134',1248,9941),(31541,'D','23140',1266,9941),(31542,'C','03142',1271,9941),(31543,'B','40132',1288,9941),(31544,'E','02143',1269,9941),(31545,'B','20341',1256,9941),(31546,'E','12430',1279,9941),(31547,'A','02431',1263,9941),(31548,'D','01342',1284,9941),(31549,'A','03241',1253,9941),(31550,'B','02431',1258,9941),(31551,'A','03214',1277,9941),(31552,'C','01342',1278,9941),(31553,'B','23401',1283,9941),(31554,'C','21034',1286,9941),(31555,'C','21403',1272,9941),(31556,'B','42310',1282,9941),(31557,'D','02134',1270,9942),(31558,'B','40231',1274,9942),(31559,'A','04132',1261,9942),(31560,'A','04312',1287,9942),(31561,'B','20341',1279,9942),(31562,'B','10243',1265,9942),(31563,'B','10423',1264,9942),(31564,'C','34120',1249,9942),(31565,'B','40123',1282,9942),(31566,'A','14203',1271,9942),(31567,'D','42301',1254,9942),(31568,'A','02341',1273,9942),(31569,'A','01423',1284,9942),(31570,'B','43120',1283,9942),(31571,'B','40312',1251,9942),(31572,'A','40312',1278,9942),(31573,'A','24031',1262,9942),(31574,'D','21304',1263,9942),(31575,'C','31042',1264,9943),(31576,'E','01342',1281,9943),(31577,'B','20431',1247,9943),(31578,'A','40321',1272,9943),(31579,'B','10324',1263,9943),(31580,'A','24013',1262,9943),(31581,'B','43201',1256,9943),(31582,'C','04231',1268,9943),(31583,'C','21043',1286,9943),(31584,'D','42301',1276,9943),(31585,'A','02134',1282,9943),(31586,'A','04321',1266,9943),(31587,'A','20134',1284,9943),(31588,'A','21034',1283,9943),(31589,'C','14032',1260,9943),(31590,'E','24031',1279,9943),(31591,'B','31042',1271,9943),(31592,'A','03241',1251,9943),(31593,'C','23014',1285,9944),(31594,'E','10234',1262,9944),(31595,'A','24130',1256,9944),(31596,'E','13240',1273,9944),(31597,'B','14320',1281,9944),(31598,'D','31204',1261,9944),(31599,'A','31042',1267,9944),(31600,'D','10432',1271,9944),(31601,'D','40132',1247,9944),(31602,'C','01342',1251,9944),(31603,'A','34201',1277,9944),(31604,'C','04123',1278,9944),(31605,'D','43201',1264,9944),(31606,'E','43210',1287,9944),(31607,'C','32041',1263,9944),(31608,'D','21304',1266,9944),(31609,'C','24301',1288,9944),(31610,'E','31402',1279,9944),(31611,'A','04312',1266,9945),(31612,'C','30241',1271,9945),(31613,'C','02143',1288,9945),(31614,'B','14230',1278,9945),(31615,'C','43120',1257,9945),(31616,'A','13402',1279,9945),(31617,'A','43102',1258,9945),(31618,'C','41023',1247,9945),(31619,'B','10432',1284,9945),(31620,'B','21043',1273,9945),(31621,'C','31042',1277,9945),(31622,'E','32140',1262,9945),(31623,'E','13240',1281,9945),(31624,'D','30214',1287,9945),(31625,'E','03241',1267,9945),(31626,'C','43102',1264,9945),(31627,'E','34120',1263,9945),(31628,'A','34021',1251,9945),(31629,'C','04312',1250,9946),(31630,'E','32140',1253,9946),(31631,'E','41032',1286,9946),(31632,'E','41230',1267,9946),(31633,'E','43120',1288,9946),(31634,'E','42310',1265,9946),(31635,'A','01243',1272,9946),(31636,'A','34012',1278,9946),(31637,'A','02143',1259,9946),(31638,'B','40321',1277,9946),(31639,'A','01243',1284,9946),(31640,'A','24103',1263,9946),(31641,'E','30421',1280,9946),(31642,'D','13402',1282,9946),(31643,'C','34012',1254,9946),(31644,'A','01342',1264,9946),(31645,'A','03421',1281,9946),(31646,'C','40321',1283,9946),(31647,'B','40321',1264,9947),(31648,'A','01324',1280,9947),(31649,'D','42031',1267,9947),(31650,'E','31240',1288,9947),(31651,'B','30412',1281,9947),(31652,'A','32104',1278,9947),(31653,'B','20413',1277,9947),(31654,'D','31204',1248,9947),(31655,'D','02413',1252,9947),(31656,'C','13024',1261,9947),(31657,'C','43201',1285,9947),(31658,'B','21403',1271,9947),(31659,'A','31024',1262,9947),(31660,'E','03421',1272,9947),(31661,'C','32041',1266,9947),(31662,'E','14203',1255,9947),(31663,'E','12430',1286,9947),(31664,'B','43201',1283,9947),(31665,'A','04312',1250,9948),(31666,'C','24013',1277,9948),(31667,'D','31420',1257,9948),(31668,'C','13024',1273,9948),(31669,'E','13420',1271,9948),(31670,'B','24301',1259,9948),(31671,'D','21430',1253,9948),(31672,'D','20314',1268,9948),(31673,'D','41203',1286,9948),(31674,'B','41320',1279,9948),(31675,'A','34102',1281,9948),(31676,'B','03142',1278,9948),(31677,'B','24130',1284,9948),(31678,'A','41032',1282,9948),(31679,'A','32014',1283,9948),(31680,'C','14023',1262,9948),(31681,'E','04123',1288,9948),(31682,'A','02134',1263,9948),(31683,'D','10243',1267,9949),(31684,'C','24013',1261,9949),(31685,'B','20143',1254,9949),(31686,'B','30142',1264,9949),(31687,'C','34120',1253,9949),(31688,'C','14032',1287,9949),(31689,'A','42130',1284,9949),(31690,'E','42130',1275,9949),(31691,'D','21304',1266,9949),(31692,'D','21403',1250,9949),(31693,'A','03421',1271,9949),(31694,'C','20134',1282,9949),(31695,'C','24103',1283,9949),(31696,'C','24103',1272,9949),(31697,'E','01243',1262,9949),(31698,'E','43120',1279,9949),(31699,'E','34012',1278,9949),(31700,'B','20314',1263,9949),(31701,'E','30412',1248,9950),(31702,'B','34120',1286,9950),(31703,'B','04321',1270,9950),(31704,'D','40231',1278,9950),(31705,'C','12034',1264,9950),(31706,'C','43012',1276,9950),(31707,'A','03421',1253,9950),(31708,'A','02413',1288,9950),(31709,'A','02341',1281,9950),(31710,'A','01234',1272,9950),(31711,'C','32041',1263,9950),(31712,'E','30124',1258,9950),(31713,'C','31024',1254,9950),(31714,'A','03214',1282,9950),(31715,'B','41032',1271,9950),(31716,'A','14023',1266,9950),(31717,'C','20431',1262,9950),(31718,'E','03412',1285,9950),(31719,'B','20143',1262,9951),(31720,'B','03241',1269,9951),(31721,'C','32041',1248,9951),(31722,'E','21430',1276,9951),(31723,'A','01432',1288,9951),(31724,'D','10243',1273,9951),(31725,'C','34120',1253,9951),(31726,'B','03241',1259,9951),(31727,'C','23014',1287,9951),(31728,'C','02413',1282,9951),(31729,'D','43102',1278,9951),(31730,'E','20341',1271,9951),(31731,'B','03214',1265,9951),(31732,'D','02341',1283,9951),(31733,'A','24013',1257,9951),(31734,'A','04132',1280,9951),(31735,'D','30142',1285,9951),(31736,'C','13042',1263,9951),(31737,'A','04312',1266,9952),(31738,'B','30241',1271,9952),(31739,'A','02143',1288,9952),(31740,'D','14230',1278,9952),(31741,'E','43120',1257,9952),(31742,'D','13402',1279,9952),(31743,'D','43102',1258,9952),(31744,'E','41023',1247,9952),(31745,'B','10432',1284,9952),(31746,'B','21043',1273,9952),(31747,'C','31042',1277,9952),(31748,'E','32140',1262,9952),(31749,'E','13240',1281,9952),(31750,'E','30214',1287,9952),(31751,'D','03241',1267,9952),(31752,'E','43102',1264,9952),(31753,'E','34120',1263,9952),(31754,'C','34021',1251,9952),(31755,'E','42310',1275,9953),(31756,'C','13024',1268,9953),(31757,'A','04321',1284,9953),(31758,'D','31204',1279,9953),(31759,'D','24130',1263,9953),(31760,'E','21430',1265,9953),(31761,'B','30412',1286,9953),(31762,'E','41230',1250,9953),(31763,'E','04321',1252,9953),(31764,'C','23014',1255,9953),(31765,'C','32014',1260,9953),(31766,'A','40213',1262,9953),(31767,'B','40123',1273,9953),(31768,'E','14023',1278,9953),(31769,'D','24130',1283,9953),(31770,'A','04123',1264,9953),(31771,'E','42130',1288,9953),(31772,'A','14032',1271,9953),(31773,'D','41023',1284,9954),(31774,'D','14302',1257,9954),(31775,'D','20341',1282,9954),(31776,'E','13402',1260,9954),(31777,'A','34012',1271,9954),(31778,'B','10324',1266,9954),(31779,'E','14023',1262,9954),(31780,'E','12034',1288,9954),(31781,'D','40312',1247,9954),(31782,'D','21403',1264,9954),(31783,'C','14203',1251,9954),(31784,'E','21340',1269,9954),(31785,'E','03124',1283,9954),(31786,'D','23014',1272,9954),(31787,'A','32014',1281,9954),(31788,'B','03214',1277,9954),(31789,'A','02431',1263,9954),(31790,'C','02431',1280,9954),(31791,'A','30412',1248,9955),(31792,'E','34120',1286,9955),(31793,'C','04321',1270,9955),(31794,'D','40231',1278,9955),(31795,'C','12034',1264,9955),(31796,'C','43012',1276,9955),(31797,'A','03421',1253,9955),(31798,'A','02413',1288,9955),(31799,'A','02341',1281,9955),(31800,'A','01234',1272,9955),(31801,'C','32041',1263,9955),(31802,'D','30124',1258,9955),(31803,'E','31024',1254,9955),(31804,'A','03214',1282,9955),(31805,'E','41032',1271,9955),(31806,'C','14023',1266,9955),(31807,'D','20431',1262,9955),(31808,'A','03412',1285,9955),(31809,'B','10234',1280,9956),(31810,'E','20413',1267,9956),(31811,'B','03214',1276,9956),(31812,'C','12403',1261,9956),(31813,'D','21043',1257,9956),(31814,'C','31420',1288,9956),(31815,'E','10324',1284,9956),(31816,'C','42013',1250,9956),(31817,'B','12403',1263,9956),(31818,'C','41032',1272,9956),(31819,'D','34012',1264,9956),(31820,'E','21430',1252,9956),(31821,'E','32410',1286,9956),(31822,'B','13042',1283,9956),(31823,'B','12340',1271,9956),(31824,'A','01243',1266,9956),(31825,'C','43021',1282,9956),(31826,'A','31024',1262,9956),(31827,'B','01342',1266,9957),(31828,'A','12403',1285,9957),(31829,'E','40213',1273,9957),(31830,'B','01234',1253,9957),(31831,'E','20341',1257,9957),(31832,'A','04312',1260,9957),(31833,'B','43012',1278,9957),(31834,'C','24310',1283,9957),(31835,'C','10324',1247,9957),(31836,'A','03124',1276,9957),(31837,'D','30421',1287,9957),(31838,'D','03214',1279,9957),(31839,'E','13204',1270,9957),(31840,'C','13042',1264,9957),(31841,'C','32014',1271,9957),(31842,'A','02134',1288,9957),(31843,'A','03214',1262,9957),(31844,'E','30142',1282,9957),(31845,'B','20431',1261,9958),(31846,'B','43210',1279,9958),(31847,'C','31204',1250,9958),(31848,'B','42310',1270,9958),(31849,'D','43120',1274,9958),(31850,'A','04123',1253,9958),(31851,'D','30142',1282,9958),(31852,'C','32041',1265,9958),(31853,'B','31402',1264,9958),(31854,'B','10324',1263,9958),(31855,'D','30214',1286,9958),(31856,'E','01243',1254,9958),(31857,'D','24130',1278,9958),(31858,'E','32410',1288,9958),(31859,'E','13240',1272,9958),(31860,'A','02413',1283,9958),(31861,'A','32014',1262,9958),(31862,'C','20413',1284,9958),(31863,'B','24013',1257,9959),(31864,'D','34201',1252,9959),(31865,'B','20134',1250,9959),(31866,'A','32014',1283,9959),(31867,'D','30412',1269,9959),(31868,'C','34012',1275,9959),(31869,'E','31420',1285,9959),(31870,'E','10234',1288,9959),(31871,'A','24310',1271,9959),(31872,'E','31402',1260,9959),(31873,'A','04321',1287,9959),(31874,'B','10432',1266,9959),(31875,'D','23401',1263,9959),(31876,'A','41302',1272,9959),(31877,'D','42130',1262,9959),(31878,'C','21043',1280,9959),(31879,'E','31204',1278,9959),(31880,'B','12043',1281,9959),(31881,'E','41230',1265,9960),(31882,'C','41023',1249,9960),(31883,'C','02134',1264,9960),(31884,'D','02431',1277,9960),(31885,'C','12034',1253,9960),(31886,'A','32104',1278,9960),(31887,'A','32410',1256,9960),(31888,'D','24031',1270,9960),(31889,'A','01342',1281,9960),(31890,'D','13402',1258,9960),(31891,'B','42013',1286,9960),(31892,'B','31402',1272,9960),(31893,'A','03124',1279,9960),(31894,'E','43120',1263,9960),(31895,'B','10243',1284,9960),(31896,'C','01324',1283,9960),(31897,'B','20134',1288,9960),(31898,'B','03412',1262,9960),(31899,'E','14320',1265,9961),(31900,'C','14320',1268,9961),(31901,'C','32014',1260,9961),(31902,'D','32104',1250,9961),(31903,'C','02143',1272,9961),(31904,'C','12034',1286,9961),(31905,'E','23041',1256,9961),(31906,'A','21043',1285,9961),(31907,'B','30421',1276,9961),(31908,'B','23104',1278,9961),(31909,'C','12034',1279,9961),(31910,'E','21340',1253,9961),(31911,'C','42130',1283,9961),(31912,'D','14302',1288,9961),(31913,'E','12304',1281,9961),(31914,'E','34012',1271,9961),(31915,'C','34021',1263,9961),(31916,'E','24301',1264,9961),(31917,'E','31420',1264,9962),(31918,'B','40312',1262,9962),(31919,'A','12304',1253,9962),(31920,'A','03124',1277,9962),(31921,'E','12430',1281,9962),(31922,'B','30142',1268,9962),(31923,'B','02314',1258,9962),(31924,'D','03241',1278,9962),(31925,'B','30124',1273,9962),(31926,'A','02143',1263,9962),(31927,'C','03142',1256,9962),(31928,'B','10243',1266,9962),(31929,'C','32014',1288,9962),(31930,'C','42013',1285,9962),(31931,'A','04312',1249,9962),(31932,'B','30142',1280,9962),(31933,'E','12340',1286,9962),(31934,'E','42013',1283,9962),(31935,'D','13402',1285,9963),(31936,'C','41032',1255,9963),(31937,'D','14203',1261,9963),(31938,'C','10324',1270,9963),(31939,'A','03124',1266,9963),(31940,'B','24031',1273,9963),(31941,'A','23104',1247,9963),(31942,'E','34120',1271,9963),(31943,'B','20341',1276,9963),(31944,'C','34120',1252,9963),(31945,'C','23014',1282,9963),(31946,'A','02314',1281,9963),(31947,'D','43102',1264,9963),(31948,'C','12340',1283,9963),(31949,'C','23041',1278,9963),(31950,'E','14230',1288,9963),(31951,'E','43210',1279,9963),(31952,'D','24103',1286,9963),(31953,'C','14320',1285,9964),(31954,'C','30241',1274,9964),(31955,'E','14302',1287,9964),(31956,'A','04123',1255,9964),(31957,'B','10234',1263,9964),(31958,'A','14302',1273,9964),(31959,'D','41203',1261,9964),(31960,'D','10423',1281,9964),(31961,'B','42013',1247,9964),(31962,'E','43201',1266,9964),(31963,'D','04312',1271,9964),(31964,'C','02134',1252,9964),(31965,'B','30421',1288,9964),(31966,'C','30421',1279,9964),(31967,'D','01432',1278,9964),(31968,'E','42130',1264,9964),(31969,'D','32014',1283,9964),(31970,'B','34012',1270,9964),(31971,'D','10234',1280,9965),(31972,'D','20413',1267,9965),(31973,'A','03214',1276,9965),(31974,'D','12403',1261,9965),(31975,'B','21043',1257,9965),(31976,'D','31420',1288,9965),(31977,'C','10324',1284,9965),(31978,'C','42013',1250,9965),(31979,'D','12403',1263,9965),(31980,'A','41032',1272,9965),(31981,'C','34012',1264,9965),(31982,'B','21430',1252,9965),(31983,'E','32410',1286,9965),(31984,'B','13042',1283,9965),(31985,'B','12340',1271,9965),(31986,'A','01243',1266,9965),(31987,'C','43021',1282,9965),(31988,'A','31024',1262,9965),(31989,'E','24013',1267,9966),(31990,'C','41320',1286,9966),(31991,'D','13204',1264,9966),(31992,'E','02341',1280,9966),(31993,'C','21043',1261,9966),(31994,'D','34102',1275,9966),(31995,'D','20134',1256,9966),(31996,'E','14320',1282,9966),(31997,'E','40123',1283,9966),(31998,'E','34120',1288,9966),(31999,'A','30214',1285,9966),(32000,'B','13240',1262,9966),(32001,'C','02134',1248,9966),(32002,'E','42301',1272,9966),(32003,'B','34021',1278,9966),(32004,'A','10432',1266,9966),(32005,'A','20134',1271,9966),(32006,'B','01423',1253,9966),(32007,'B','40312',1280,9967),(32008,'E','13240',1263,9967),(32009,'A','04132',1247,9967),(32010,'D','24103',1260,9967),(32011,'A','10342',1272,9967),(32012,'B','20314',1251,9967),(32013,'C','40123',1269,9967),(32014,'A','12304',1271,9967),(32015,'B','30142',1255,9967),(32016,'C','10324',1278,9967),(32017,'E','31420',1287,9967),(32018,'A','14032',1285,9967),(32019,'D','14203',1265,9967),(32020,'A','04321',1264,9967),(32021,'D','13402',1282,9967),(32022,'E','41320',1281,9967),(32023,'B','40321',1277,9967),(32024,'E','41203',1262,9967),(32025,'E','42103',1250,9968),(32026,'C','23410',1259,9968),(32027,'A','04231',1263,9968),(32028,'D','12430',1269,9968),(32029,'C','31042',1257,9968),(32030,'D','23014',1280,9968),(32031,'B','41023',1271,9968),(32032,'C','21430',1273,9968),(32033,'B','41023',1288,9968),(32034,'D','41023',1266,9968),(32035,'D','14203',1251,9968),(32036,'C','34120',1287,9968),(32037,'B','03241',1277,9968),(32038,'E','02134',1282,9968),(32039,'E','14230',1283,9968),(32040,'A','01423',1262,9968),(32041,'E','21043',1285,9968),(32042,'A','40312',1278,9968),(32043,'C','40312',1280,9969),(32044,'E','13240',1263,9969),(32045,'A','04132',1247,9969),(32046,'D','24103',1260,9969),(32047,'B','10342',1272,9969),(32048,'A','20314',1251,9969),(32049,'D','40123',1269,9969),(32050,'E','12304',1271,9969),(32051,'B','30142',1255,9969),(32052,'C','10324',1278,9969),(32053,'E','31420',1287,9969),(32054,'A','14032',1285,9969),(32055,'D','14203',1265,9969),(32056,'D','04321',1264,9969),(32057,'D','13402',1282,9969),(32058,'B','41320',1281,9969),(32059,'B','40321',1277,9969),(32060,'E','41203',1262,9969),(32061,'A','30412',1248,9970),(32062,'E','34120',1286,9970),(32063,'C','04321',1270,9970),(32064,'C','40231',1278,9970),(32065,'C','12034',1264,9970),(32066,'C','43012',1276,9970),(32067,'A','03421',1253,9970),(32068,'A','02413',1288,9970),(32069,'A','02341',1281,9970),(32070,'D','01234',1272,9970),(32071,'C','32041',1263,9970),(32072,'D','30124',1258,9970),(32073,'A','31024',1254,9970),(32074,'E','03214',1282,9970),(32075,'D','41032',1271,9970),(32076,'C','14023',1266,9970),(32077,'C','20431',1262,9970),(32078,'D','03412',1285,9970),(32079,'C','40123',1262,9971),(32080,'E','02134',1248,9971),(32081,'E','23140',1266,9971),(32082,'C','03142',1271,9971),(32083,'A','40132',1288,9971),(32084,'A','02143',1269,9971),(32085,'B','20341',1256,9971),(32086,'E','12430',1279,9971),(32087,'A','02431',1263,9971),(32088,'A','01342',1284,9971),(32089,'D','03241',1253,9971),(32090,'B','02431',1258,9971),(32091,'A','03214',1277,9971),(32092,'B','01342',1278,9971),(32093,'B','23401',1283,9971),(32094,'A','21034',1286,9971),(32095,'D','21403',1272,9971),(32096,'E','42310',1282,9971),(32097,'E','42310',1275,9972),(32098,'D','13024',1268,9972),(32099,'B','04321',1284,9972),(32100,'C','31204',1279,9972),(32101,'E','24130',1263,9972),(32102,'E','21430',1265,9972),(32103,'D','30412',1286,9972),(32104,'D','41230',1250,9972),(32105,'E','04321',1252,9972),(32106,'C','23014',1255,9972),(32107,'C','32014',1260,9972),(32108,'B','40213',1262,9972),(32109,'A','40123',1273,9972),(32110,'D','14023',1278,9972),(32111,'D','24130',1283,9972),(32112,'C','04123',1264,9972),(32113,'E','42130',1288,9972),(32114,'A','14032',1271,9972),(32115,'A','40123',1274,9973),(32116,'A','13204',1251,9973),(32117,'C','40213',1265,9973),(32118,'C','43012',1278,9973),(32119,'A','24130',1261,9973),(32120,'C','41032',1255,9973),(32121,'A','04321',1285,9973),(32122,'B','03214',1283,9973),(32123,'C','02143',1271,9973),(32124,'A','01324',1250,9973),(32125,'B','04132',1281,9973),(32126,'A','02431',1269,9973),(32127,'A','10432',1288,9973),(32128,'C','21034',1279,9973),(32129,'B','41023',1273,9973),(32130,'E','31420',1286,9973),(32131,'D','34012',1282,9973),(32132,'A','40213',1262,9973),(32133,'E','21340',1257,9974),(32134,'C','41320',1262,9974),(32135,'E','42103',1282,9974),(32136,'C','01342',1283,9974),(32137,'D','42103',1253,9974),(32138,'A','04132',1247,9974),(32139,'D','14320',1284,9974),(32140,'D','23014',1263,9974),(32141,'C','24301',1286,9974),(32142,'D','21034',1280,9974),(32143,'A','12034',1269,9974),(32144,'B','32401',1260,9974),(32145,'D','02341',1273,9974),(32146,'B','12043',1265,9974),(32147,'B','21304',1264,9974),(32148,'A','32014',1271,9974),(32149,'B','43120',1276,9974),(32150,'E','32104',1288,9974),(32151,'B','30421',1284,9975),(32152,'E','13240',1280,9975),(32153,'B','42130',1249,9975),(32154,'C','24013',1271,9975),(32155,'B','10432',1264,9975),(32156,'E','32410',1254,9975),(32157,'E','42130',1287,9975),(32158,'A','13420',1269,9975),(32159,'A','32104',1265,9975),(32160,'D','32140',1282,9975),(32161,'C','20134',1252,9975),(32162,'A','01324',1259,9975),(32163,'C','42031',1288,9975),(32164,'A','31420',1262,9975),(32165,'D','23401',1263,9975),(32166,'B','10243',1275,9975),(32167,'B','34201',1283,9975),(32168,'E','13420',1272,9975),(32169,'E','40321',1264,9976),(32170,'B','01324',1280,9976),(32171,'C','42031',1267,9976),(32172,'A','31240',1288,9976),(32173,'D','30412',1281,9976),(32174,'A','32104',1278,9976),(32175,'B','20413',1277,9976),(32176,'D','31204',1248,9976),(32177,'A','02413',1252,9976),(32178,'C','13024',1261,9976),(32179,'E','43201',1285,9976),(32180,'E','21403',1271,9976),(32181,'C','31024',1262,9976),(32182,'C','03421',1272,9976),(32183,'C','32041',1266,9976),(32184,'D','14203',1255,9976),(32185,'E','12430',1286,9976),(32186,'C','43201',1283,9976),(32187,'D','40231',1276,9977),(32188,'B','10324',1260,9977),(32189,'D','40132',1281,9977),(32190,'A','31240',1270,9977),(32191,'B','04123',1287,9977),(32192,'A','03241',1254,9977),(32193,'C','04132',1247,9977),(32194,'E','41320',1262,9977),(32195,'B','20143',1263,9977),(32196,'E','32401',1252,9977),(32197,'C','10234',1271,9977),(32198,'B','02143',1284,9977),(32199,'A','13024',1279,9977),(32200,'E','03142',1288,9977),(32201,'D','13204',1273,9977),(32202,'B','32410',1283,9977),(32203,'C','43012',1265,9977),(32204,'D','24013',1264,9977),(32205,'E','31240',1267,9978),(32206,'D','41302',1277,9978),(32207,'B','24301',1262,9978),(32208,'A','14032',1249,9978),(32209,'C','23401',1257,9978),(32210,'E','42301',1265,9978),(32211,'B','14320',1288,9978),(32212,'B','14230',1259,9978),(32213,'C','24130',1273,9978),(32214,'D','34201',1286,9978),(32215,'D','13402',1251,9978),(32216,'E','31420',1263,9978),(32217,'E','24130',1281,9978),(32218,'E','24130',1264,9978),(32219,'A','13204',1271,9978),(32220,'C','12043',1280,9978),(32221,'B','23140',1278,9978),(32222,'D','34012',1282,9978),(32223,'C','30421',1284,9979),(32224,'C','13240',1280,9979),(32225,'B','42130',1249,9979),(32226,'C','24013',1271,9979),(32227,'B','10432',1264,9979),(32228,'A','32410',1254,9979),(32229,'E','42130',1287,9979),(32230,'B','13420',1269,9979),(32231,'C','32104',1265,9979),(32232,'D','32140',1282,9979),(32233,'C','20134',1252,9979),(32234,'E','01324',1259,9979),(32235,'B','42031',1288,9979),(32236,'B','31420',1262,9979),(32237,'D','23401',1263,9979),(32238,'B','10243',1275,9979),(32239,'A','34201',1283,9979),(32240,'C','13420',1272,9979),(32241,'A','02314',1256,9980),(32242,'C','14203',1284,9980),(32243,'A','02134',1282,9980),(32244,'B','30412',1251,9980),(32245,'A','02134',1250,9980),(32246,'A','01243',1262,9980),(32247,'C','34021',1261,9980),(32248,'A','01234',1266,9980),(32249,'A','30214',1278,9980),(32250,'B','40123',1263,9980),(32251,'B','40132',1273,9980),(32252,'D','40231',1283,9980),(32253,'E','32410',1287,9980),(32254,'E','43210',1274,9980),(32255,'B','10423',1281,9980),(32256,'E','23401',1268,9980),(32257,'C','14230',1288,9980),(32258,'E','23410',1264,9980),(32259,'E','24031',1256,9981),(32260,'D','24103',1261,9981),(32261,'C','34012',1262,9981),(32262,'A','01432',1248,9981),(32263,'A','13420',1269,9981),(32264,'B','30142',1263,9981),(32265,'A','01432',1279,9981),(32266,'D','20134',1285,9981),(32267,'E','32410',1253,9981),(32268,'E','31420',1288,9981),(32269,'B','10432',1287,9981),(32270,'B','40132',1282,9981),(32271,'C','30142',1272,9981),(32272,'C','41203',1275,9981),(32273,'B','23410',1278,9981),(32274,'C','01324',1283,9981),(32275,'D','41203',1266,9981),(32276,'D','41302',1264,9981),(32277,'E','10342',1272,9982),(32278,'D','02413',1253,9982),(32279,'C','21034',1261,9982),(32280,'E','32410',1285,9982),(32281,'A','13042',1283,9982),(32282,'D','23104',1277,9982),(32283,'A','24301',1257,9982),(32284,'B','43021',1247,9982),(32285,'E','13420',1279,9982),(32286,'D','43012',1264,9982),(32287,'B','41023',1278,9982),(32288,'E','24301',1281,9982),(32289,'E','04132',1269,9982),(32290,'B','12304',1265,9982),(32291,'E','02314',1263,9982),(32292,'D','30421',1282,9982),(32293,'B','21304',1288,9982),(32294,'B','41203',1286,9982),(32295,'A','31420',1282,9983),(32296,'D','12403',1263,9983),(32297,'D','40231',1253,9983),(32298,'C','13420',1268,9983),(32299,'A','32041',1283,9983),(32300,'B','10324',1275,9983),(32301,'B','23104',1280,9983),(32302,'A','02341',1261,9983),(32303,'D','14230',1286,9983),(32304,'A','31240',1250,9983),(32305,'E','02314',1281,9983),(32306,'B','21340',1266,9983),(32307,'A','04132',1264,9983),(32308,'E','02143',1262,9983),(32309,'E','42031',1288,9983),(32310,'A','12403',1256,9983),(32311,'D','24130',1272,9983),(32312,'E','13024',1284,9983),(32313,'B','03412',1251,9984),(32314,'B','41230',1284,9984),(32315,'A','23140',1286,9984),(32316,'D','43201',1279,9984),(32317,'D','03142',1272,9984),(32318,'A','23410',1262,9984),(32319,'C','04231',1269,9984),(32320,'B','30214',1277,9984),(32321,'A','40132',1288,9984),(32322,'B','40123',1260,9984),(32323,'C','04132',1249,9984),(32324,'B','30421',1263,9984),(32325,'D','32104',1271,9984),(32326,'E','31240',1265,9984),(32327,'A','23104',1282,9984),(32328,'E','30421',1264,9984),(32329,'C','02143',1256,9984),(32330,'B','01423',1278,9984),(32331,'E','31420',1282,9985),(32332,'D','12403',1263,9985),(32333,'E','40231',1253,9985),(32334,'D','13420',1268,9985),(32335,'D','32041',1283,9985),(32336,'E','10324',1275,9985),(32337,'D','23104',1280,9985),(32338,'A','02341',1261,9985),(32339,'C','14230',1286,9985),(32340,'B','31240',1250,9985),(32341,'D','02314',1281,9985),(32342,'E','21340',1266,9985),(32343,'C','04132',1264,9985),(32344,'E','02143',1262,9985),(32345,'E','42031',1288,9985),(32346,'A','12403',1256,9985),(32347,'B','24130',1272,9985),(32348,'D','13024',1284,9985),(32349,'A','02341',1263,9986),(32350,'C','30214',1264,9986),(32351,'C','30124',1273,9986),(32352,'D','41320',1274,9986),(32353,'C','21034',1265,9986),(32354,'B','23401',1250,9986),(32355,'C','12043',1251,9986),(32356,'E','14023',1278,9986),(32357,'C','32410',1283,9986),(32358,'C','41023',1258,9986),(32359,'E','30421',1287,9986),(32360,'B','23410',1254,9986),(32361,'C','10423',1262,9986),(32362,'C','41023',1268,9986),(32363,'E','24301',1271,9986),(32364,'C','42031',1280,9986),(32365,'A','03214',1288,9986),(32366,'A','42103',1282,9986),(32367,'B','20134',1247,9987),(32368,'D','43021',1272,9987),(32369,'E','34102',1257,9987),(32370,'C','13042',1266,9987),(32371,'C','12340',1276,9987),(32372,'D','03142',1269,9987),(32373,'C','12043',1260,9987),(32374,'E','23410',1262,9987),(32375,'E','13420',1264,9987),(32376,'C','12304',1278,9987),(32377,'A','03412',1279,9987),(32378,'A','24310',1251,9987),(32379,'C','42130',1286,9987),(32380,'C','12034',1285,9987),(32381,'A','21043',1282,9987),(32382,'D','20413',1271,9987),(32383,'E','40132',1281,9987),(32384,'D','13402',1263,9987),(32385,'A','23014',1269,9988),(32386,'E','34201',1249,9988),(32387,'D','34021',1253,9988),(32388,'B','03241',1262,9988),(32389,'E','13204',1258,9988),(32390,'B','41032',1275,9988),(32391,'C','30241',1279,9988),(32392,'D','32104',1285,9988),(32393,'D','02431',1264,9988),(32394,'C','12034',1265,9988),(32395,'A','02134',1263,9988),(32396,'B','30421',1286,9988),(32397,'C','30142',1273,9988),(32398,'E','32410',1281,9988),(32399,'E','24130',1255,9988),(32400,'A','01423',1278,9988),(32401,'C','02431',1282,9988),(32402,'B','31240',1288,9988),(32403,'D','04132',1277,9989),(32404,'E','03241',1255,9989),(32405,'D','31402',1268,9989),(32406,'C','12034',1253,9989),(32407,'A','20413',1266,9989),(32408,'E','02314',1247,9989),(32409,'A','42103',1284,9989),(32410,'C','32014',1261,9989),(32411,'D','41032',1279,9989),(32412,'D','13204',1264,9989),(32413,'C','23014',1263,9989),(32414,'D','43210',1287,9989),(32415,'A','43120',1272,9989),(32416,'C','23041',1282,9989),(32417,'D','24301',1288,9989),(32418,'B','13042',1278,9989),(32419,'E','34102',1271,9989),(32420,'B','40312',1262,9989),(32421,'B','31420',1264,9990),(32422,'C','40312',1262,9990),(32423,'A','12304',1253,9990),(32424,'B','03124',1277,9990),(32425,'C','12430',1281,9990),(32426,'C','30142',1268,9990),(32427,'B','02314',1258,9990),(32428,'C','03241',1278,9990),(32429,'C','30124',1273,9990),(32430,'A','02143',1263,9990),(32431,'A','03142',1256,9990),(32432,'B','10243',1266,9990),(32433,'E','32014',1288,9990),(32434,'C','42013',1285,9990),(32435,'E','04312',1249,9990),(32436,'C','30142',1280,9990),(32437,'E','12340',1286,9990),(32438,'E','42013',1283,9990),(32439,'E','21340',1257,9991),(32440,'C','41320',1262,9991),(32441,'C','42103',1282,9991),(32442,'C','01342',1283,9991),(32443,'D','42103',1253,9991),(32444,'A','04132',1247,9991),(32445,'E','14320',1284,9991),(32446,'E','23014',1263,9991),(32447,'D','24301',1286,9991),(32448,'D','21034',1280,9991),(32449,'A','12034',1269,9991),(32450,'D','32401',1260,9991),(32451,'B','02341',1273,9991),(32452,'A','12043',1265,9991),(32453,'D','21304',1264,9991),(32454,'B','32014',1271,9991),(32455,'D','43120',1276,9991),(32456,'2','32104',1288,9991),(32457,'D','24013',1257,9992),(32458,'D','34201',1252,9992),(32459,'B','20134',1250,9992),(32460,'A','32014',1283,9992),(32461,'C','30412',1269,9992),(32462,'C','34012',1275,9992),(32463,'E','31420',1285,9992),(32464,'B','10234',1288,9992),(32465,'D','24310',1271,9992),(32466,'B','31402',1260,9992),(32467,'E','04321',1287,9992),(32468,'E','10432',1266,9992),(32469,'D','23401',1263,9992),(32470,'A','41302',1272,9992),(32471,'B','42130',1262,9992),(32472,'C','21043',1280,9992),(32473,'A','31204',1278,9992),(32474,'C','12043',1281,9992),(32475,'B','40321',1271,9993),(32476,'E','20134',1269,9993),(32477,'B','41203',1279,9993),(32478,'D','14302',1260,9993),(32479,'B','13024',1278,9993),(32480,'C','23041',1284,9993),(32481,'A','32014',1277,9993),(32482,'D','14203',1251,9993),(32483,'A','13402',1264,9993),(32484,'B','10342',1288,9993),(32485,'A','43120',1265,9993),(32486,'D','31204',1287,9993),(32487,'C','41203',1281,9993),(32488,'D','32104',1263,9993),(32489,'A','02134',1273,9993),(32490,'D','41320',1255,9993),(32491,'E','42130',1250,9993),(32492,'B','10243',1262,9993),(32493,'A','32104',1270,9994),(32494,'E','23041',1275,9994),(32495,'E','10324',1285,9994),(32496,'E','13420',1254,9994),(32497,'D','40132',1271,9994),(32498,'E','41320',1287,9994),(32499,'D','32014',1252,9994),(32500,'B','30412',1250,9994),(32501,'E','42130',1261,9994),(32502,'B','23401',1283,9994),(32503,'B','43201',1272,9994),(32504,'A','31240',1282,9994),(32505,'C','34021',1265,9994),(32506,'A','03412',1278,9994),(32507,'C','14023',1281,9994),(32508,'A','41032',1288,9994),(32509,'E','21340',1279,9994),(32510,'D','14203',1264,9994),(32511,'C','23014',1285,9995),(32512,'D','10234',1262,9995),(32513,'D','24130',1256,9995),(32514,'D','13240',1273,9995),(32515,'E','14320',1281,9995),(32516,'D','31204',1261,9995),(32517,'E','31042',1267,9995),(32518,'B','10432',1271,9995),(32519,'B','40132',1247,9995),(32520,'C','01342',1251,9995),(32521,'D','34201',1277,9995),(32522,'E','04123',1278,9995),(32523,'E','43201',1264,9995),(32524,'C','43210',1287,9995),(32525,'C','32041',1263,9995),(32526,'D','21304',1266,9995),(32527,'D','24301',1288,9995),(32528,'C','31402',1279,9995),(32529,'A','02413',1253,9996),(32530,'B','40213',1285,9996),(32531,'A','34021',1271,9996),(32532,'A','24013',1268,9996),(32533,'C','34201',1249,9996),(32534,'E','24130',1276,9996),(32535,'B','23104',1273,9996),(32536,'B','31240',1256,9996),(32537,'E','04231',1287,9996),(32538,'E','12340',1281,9996),(32539,'A','02341',1263,9996),(32540,'A','24130',1278,9996),(32541,'C','34012',1260,9996),(32542,'D','14320',1288,9996),(32543,'D','13402',1266,9996),(32544,'B','10432',1283,9996),(32545,'C','41023',1264,9996),(32546,'C','20431',1280,9996),(32547,'C','12043',1258,9997),(32548,'C','12034',1277,9997),(32549,'A','41032',1273,9997),(32550,'D','34201',1279,9997),(32551,'B','20413',1248,9997),(32552,'A','02341',1271,9997),(32553,'B','10243',1256,9997),(32554,'B','23401',1267,9997),(32555,'E','42310',1252,9997),(32556,'B','03241',1282,9997),(32557,'D','10234',1283,9997),(32558,'D','23104',1264,9997),(32559,'B','30214',1266,9997),(32560,'D','21403',1262,9997),(32561,'B','10243',1263,9997),(32562,'D','24301',1288,9997),(32563,'C','23401',1278,9997),(32564,'B','12304',1284,9997),(32565,'D','20143',1262,9998),(32566,'E','03241',1269,9998),(32567,'B','32041',1248,9998),(32568,'D','21430',1276,9998),(32569,'A','01432',1288,9998),(32570,'B','10243',1273,9998),(32571,'E','34120',1253,9998),(32572,'A','03241',1259,9998),(32573,'D','23014',1287,9998),(32574,'C','02413',1282,9998),(32575,'B','43102',1278,9998),(32576,'B','20341',1271,9998),(32577,'A','03214',1265,9998),(32578,'D','02341',1283,9998),(32579,'B','24013',1257,9998),(32580,'A','04132',1280,9998),(32581,'B','30142',1285,9998),(32582,'C','13042',1263,9998),(32583,'E','41203',1270,9999),(32584,'B','42103',1273,9999),(32585,'A','21304',1261,9999),(32586,'C','30142',1275,9999),(32587,'B','12034',1253,9999),(32588,'C','23014',1257,9999),(32589,'C','12043',1266,9999),(32590,'C','14023',1288,9999),(32591,'A','30142',1283,9999),(32592,'E','10324',1282,9999),(32593,'C','03214',1278,9999),(32594,'B','21043',1264,9999),(32595,'E','34210',1281,9999),(32596,'C','14023',1263,9999),(32597,'E','40231',1250,9999),(32598,'E','24310',1284,9999),(32599,'A','10234',1287,9999),(32600,'A','02134',1271,9999),(32601,'A','04312',1250,10000),(32602,'E','32140',1253,10000),(32603,'C','41032',1286,10000),(32604,'A','41230',1267,10000),(32605,'A','43120',1288,10000),(32606,'E','42310',1265,10000),(32607,'B','01243',1272,10000),(32608,'A','34012',1278,10000),(32609,'A','02143',1259,10000),(32610,'C','40321',1277,10000),(32611,'D','01243',1284,10000),(32612,'D','24103',1263,10000),(32613,'B','30421',1280,10000),(32614,'D','13402',1282,10000),(32615,'A','34012',1254,10000),(32616,'B','01342',1264,10000),(32617,'A','03421',1281,10000),(32618,'C','40321',1283,10000),(32619,'0','23104',1274,10001),(32620,'0','23104',1285,10001),(32621,'0','14302',1288,10001),(32622,'0','03214',1251,10001),(32623,'0','40312',1280,10001),(32624,'0','40231',1261,10001),(32625,'0','03124',1264,10001),(32626,'0','43102',1283,10001),(32627,'0','31402',1271,10001),(32628,'0','10243',1249,10001),(32629,'0','04123',1269,10001),(32630,'0','01234',1256,10001),(32631,'0','40321',1278,10001),(32632,'0','34201',1262,10001),(32633,'0','10234',1263,10001),(32634,'0','10432',1265,10001),(32635,'0','12043',1273,10001),(32636,'0','40213',1282,10001),(32637,'0','24031',1279,10002),(32638,'0','34120',1263,10002),(32639,'0','42103',1271,10002),(32640,'0','01234',1284,10002),(32641,'0','32014',1252,10002),(32642,'0','21430',1267,10002),(32643,'0','12403',1254,10002),(32644,'0','24013',1277,10002),(32645,'0','40132',1250,10002),(32646,'0','14032',1265,10002),(32647,'0','40312',1260,10002),(32648,'0','13240',1283,10002),(32649,'0','21430',1278,10002),(32650,'0','32041',1286,10002),(32651,'0','13204',1281,10002),(32652,'0','14230',1262,10002),(32653,'0','20341',1272,10002),(32654,'0','34102',1264,10002),(32655,'0','12043',1258,10003),(32656,'0','12034',1277,10003),(32657,'0','41032',1273,10003),(32658,'0','34201',1279,10003),(32659,'0','20413',1248,10003),(32660,'0','02341',1271,10003),(32661,'0','10243',1256,10003),(32662,'0','23401',1267,10003),(32663,'0','42310',1252,10003),(32664,'0','03241',1282,10003),(32665,'0','10234',1283,10003),(32666,'0','23104',1264,10003),(32667,'0','30214',1266,10003),(32668,'0','21403',1262,10003),(32669,'0','10243',1263,10003),(32670,'0','24301',1288,10003),(32671,'0','23401',1278,10003),(32672,'0','12304',1284,10003),(32673,'0','42301',1287,10004),(32674,'0','20341',1259,10004),(32675,'0','43012',1256,10004),(32676,'0','31204',1249,10004),(32677,'0','13042',1271,10004),(32678,'0','34102',1266,10004),(32679,'0','40321',1272,10004),(32680,'0','13420',1270,10004),(32681,'0','14230',1280,10004),(32682,'0','30241',1285,10004),(32683,'0','34201',1262,10004),(32684,'0','14032',1275,10004),(32685,'0','24103',1251,10004),(32686,'0','40213',1264,10004),(32687,'0','02341',1282,10004),(32688,'0','30214',1278,10004),(32689,'0','43012',1263,10004),(32690,'0','40321',1281,10004),(32691,'0','31240',1267,10005),(32692,'0','41302',1277,10005),(32693,'0','24301',1262,10005),(32694,'0','14032',1249,10005),(32695,'0','23401',1257,10005),(32696,'0','42301',1265,10005),(32697,'0','14320',1288,10005),(32698,'0','14230',1259,10005),(32699,'0','24130',1273,10005),(32700,'0','34201',1286,10005),(32701,'0','13402',1251,10005),(32702,'0','31420',1263,10005),(32703,'0','24130',1281,10005),(32704,'0','24130',1264,10005),(32705,'0','13204',1271,10005),(32706,'0','12043',1280,10005),(32707,'0','23140',1278,10005),(32708,'0','34012',1282,10005),(32709,'0','31240',1263,10006),(32710,'0','21340',1283,10006),(32711,'0','32041',1284,10006),(32712,'0','04312',1278,10006),(32713,'0','34102',1262,10006),(32714,'0','03124',1274,10006),(32715,'0','10432',1259,10006),(32716,'0','21034',1287,10006),(32717,'0','03412',1256,10006),(32718,'0','02431',1266,10006),(32719,'0','14302',1281,10006),(32720,'0','21340',1268,10006),(32721,'0','24301',1251,10006),(32722,'0','13042',1249,10006),(32723,'0','34012',1279,10006),(32724,'0','04132',1273,10006),(32725,'0','20431',1288,10006),(32726,'0','34021',1282,10006),(32727,'0','30412',1248,10007),(32728,'0','34120',1286,10007),(32729,'0','04321',1270,10007),(32730,'0','40231',1278,10007),(32731,'0','12034',1264,10007),(32732,'0','43012',1276,10007),(32733,'0','03421',1253,10007),(32734,'0','02413',1288,10007),(32735,'0','02341',1281,10007),(32736,'0','01234',1272,10007),(32737,'0','32041',1263,10007),(32738,'0','30124',1258,10007),(32739,'0','31024',1254,10007),(32740,'0','03214',1282,10007),(32741,'0','41032',1271,10007),(32742,'0','14023',1266,10007),(32743,'0','20431',1262,10007),(32744,'0','03412',1285,10007),(32745,'0','10234',1280,10008),(32746,'0','20413',1267,10008),(32747,'0','03214',1276,10008),(32748,'0','12403',1261,10008),(32749,'0','21043',1257,10008),(32750,'0','31420',1288,10008),(32751,'0','10324',1284,10008),(32752,'0','42013',1250,10008),(32753,'0','12403',1263,10008),(32754,'0','41032',1272,10008),(32755,'0','34012',1264,10008),(32756,'0','21430',1252,10008),(32757,'0','32410',1286,10008),(32758,'0','13042',1283,10008),(32759,'0','12340',1271,10008),(32760,'0','01243',1266,10008),(32761,'0','43021',1282,10008),(32762,'0','31024',1262,10008),(32763,'0','40321',1271,10009),(32764,'0','20134',1269,10009),(32765,'0','41203',1279,10009),(32766,'0','14302',1260,10009),(32767,'0','13024',1278,10009),(32768,'0','23041',1284,10009),(32769,'0','32014',1277,10009),(32770,'0','14203',1251,10009),(32771,'0','13402',1264,10009),(32772,'0','10342',1288,10009),(32773,'0','43120',1265,10009),(32774,'0','31204',1287,10009),(32775,'0','41203',1281,10009),(32776,'0','32104',1263,10009),(32777,'0','02134',1273,10009),(32778,'0','41320',1255,10009),(32779,'0','42130',1250,10009),(32780,'0','10243',1262,10009),(32781,'0','12043',1258,10010),(32782,'0','12034',1277,10010),(32783,'0','41032',1273,10010),(32784,'0','34201',1279,10010),(32785,'0','20413',1248,10010),(32786,'0','02341',1271,10010),(32787,'0','10243',1256,10010),(32788,'0','23401',1267,10010),(32789,'0','42310',1252,10010),(32790,'0','03241',1282,10010),(32791,'0','10234',1283,10010),(32792,'0','23104',1264,10010),(32793,'0','30214',1266,10010),(32794,'0','21403',1262,10010),(32795,'0','10243',1263,10010),(32796,'0','24301',1288,10010),(32797,'0','23401',1278,10010),(32798,'0','12304',1284,10010),(32799,'0','23014',1269,10011),(32800,'0','34201',1249,10011),(32801,'0','34021',1253,10011),(32802,'0','03241',1262,10011),(32803,'0','13204',1258,10011),(32804,'0','41032',1275,10011),(32805,'0','30241',1279,10011),(32806,'0','32104',1285,10011),(32807,'0','02431',1264,10011),(32808,'0','12034',1265,10011),(32809,'0','02134',1263,10011),(32810,'0','30421',1286,10011),(32811,'0','30142',1273,10011),(32812,'0','32410',1281,10011),(32813,'0','24130',1255,10011),(32814,'0','01423',1278,10011),(32815,'0','02431',1282,10011),(32816,'0','31240',1288,10011),(32817,'0','21304',1281,10012),(32818,'0','13042',1261,10012),(32819,'0','40132',1257,10012),(32820,'0','04132',1270,10012),(32821,'0','02413',1279,10012),(32822,'0','23014',1283,10012),(32823,'0','42310',1288,10012),(32824,'0','23140',1252,10012),(32825,'0','31042',1262,10012),(32826,'0','34201',1264,10012),(32827,'0','41320',1266,10012),(32828,'0','21340',1274,10012),(32829,'0','23014',1247,10012),(32830,'0','12340',1263,10012),(32831,'0','41320',1282,10012),(32832,'0','02143',1271,10012),(32833,'0','10234',1278,10012),(32834,'0','43210',1287,10012),(32835,'0','34210',1284,10013),(32836,'0','31420',1281,10013),(32837,'0','14320',1260,10013),(32838,'0','31402',1279,10013),(32839,'0','32104',1286,10013),(32840,'0','14230',1268,10013),(32841,'0','10432',1257,10013),(32842,'0','43012',1288,10013),(32843,'0','13024',1252,10013),(32844,'0','34102',1272,10013),(32845,'0','21340',1250,10013),(32846,'0','41032',1264,10013),(32847,'0','10234',1277,10013),(32848,'0','24013',1283,10013),(32849,'0','03124',1263,10013),(32850,'0','23041',1265,10013),(32851,'0','13024',1278,10013),(32852,'0','43201',1271,10013),(32853,'0','40123',1274,10014),(32854,'0','13204',1251,10014),(32855,'0','40213',1265,10014),(32856,'0','43012',1278,10014),(32857,'0','24130',1261,10014),(32858,'0','41032',1255,10014),(32859,'0','04321',1285,10014),(32860,'0','03214',1283,10014),(32861,'0','02143',1271,10014),(32862,'0','01324',1250,10014),(32863,'0','04132',1281,10014),(32864,'0','02431',1269,10014),(32865,'0','10432',1288,10014),(32866,'0','21034',1279,10014),(32867,'0','41023',1273,10014),(32868,'0','31420',1286,10014),(32869,'0','34012',1282,10014),(32870,'0','40213',1262,10014),(32871,'0','12043',1258,10015),(32872,'0','12034',1277,10015),(32873,'0','41032',1273,10015),(32874,'0','34201',1279,10015),(32875,'0','20413',1248,10015),(32876,'0','02341',1271,10015),(32877,'0','10243',1256,10015),(32878,'0','23401',1267,10015),(32879,'0','42310',1252,10015),(32880,'0','03241',1282,10015),(32881,'0','10234',1283,10015),(32882,'0','23104',1264,10015),(32883,'0','30214',1266,10015),(32884,'0','21403',1262,10015),(32885,'0','10243',1263,10015),(32886,'0','24301',1288,10015),(32887,'0','23401',1278,10015),(32888,'0','12304',1284,10015),(32889,'0','40123',1274,10016),(32890,'0','13204',1251,10016),(32891,'0','40213',1265,10016),(32892,'0','43012',1278,10016),(32893,'0','24130',1261,10016),(32894,'0','41032',1255,10016),(32895,'0','04321',1285,10016),(32896,'0','03214',1283,10016),(32897,'0','02143',1271,10016),(32898,'0','01324',1250,10016),(32899,'0','04132',1281,10016),(32900,'0','02431',1269,10016),(32901,'0','10432',1288,10016),(32902,'0','21034',1279,10016),(32903,'0','41023',1273,10016),(32904,'0','31420',1286,10016),(32905,'0','34012',1282,10016),(32906,'0','40213',1262,10016),(32907,'0','34021',1247,10017),(32908,'0','03142',1260,10017),(32909,'0','01324',1288,10017),(32910,'0','23104',1283,10017),(32911,'0','23014',1257,10017),(32912,'0','20314',1274,10017),(32913,'0','30412',1264,10017),(32914,'0','01342',1287,10017),(32915,'0','20413',1270,10017),(32916,'0','43012',1284,10017),(32917,'0','02341',1282,10017),(32918,'0','32140',1272,10017),(32919,'0','23014',1265,10017),(32920,'0','43012',1263,10017),(32921,'0','13042',1271,10017),(32922,'0','43021',1251,10017),(32923,'0','41230',1278,10017),(32924,'0','03241',1262,10017),(32925,'0','32104',1270,10018),(32926,'0','23041',1275,10018),(32927,'0','10324',1285,10018),(32928,'0','13420',1254,10018),(32929,'0','40132',1271,10018),(32930,'0','41320',1287,10018),(32931,'0','32014',1252,10018),(32932,'0','30412',1250,10018),(32933,'0','42130',1261,10018),(32934,'0','23401',1283,10018),(32935,'0','43201',1272,10018),(32936,'0','31240',1282,10018),(32937,'0','34021',1265,10018),(32938,'0','03412',1278,10018),(32939,'0','14023',1281,10018),(32940,'0','41032',1288,10018),(32941,'0','21340',1279,10018),(32942,'0','14203',1264,10018),(32943,'0','04312',1266,10019),(32944,'0','30241',1271,10019),(32945,'0','02143',1288,10019),(32946,'0','14230',1278,10019),(32947,'0','43120',1257,10019),(32948,'0','13402',1279,10019),(32949,'0','43102',1258,10019),(32950,'0','41023',1247,10019),(32951,'0','10432',1284,10019),(32952,'0','21043',1273,10019),(32953,'0','31042',1277,10019),(32954,'0','32140',1262,10019),(32955,'0','13240',1281,10019),(32956,'0','30214',1287,10019),(32957,'0','03241',1267,10019),(32958,'0','43102',1264,10019),(32959,'0','34120',1263,10019),(32960,'0','34021',1251,10019),(32961,'C','40123',1274,10020),(32962,'C','13204',1251,10020),(32963,'B','40213',1265,10020),(32964,'E','43012',1278,10020),(32965,'E','24130',1261,10020),(32966,'C','41032',1255,10020),(32967,'A','04321',1285,10020),(32968,'D','03214',1283,10020),(32969,'A','02143',1271,10020),(32970,'A','01324',1250,10020),(32971,'B','04132',1281,10020),(32972,'E','02431',1269,10020),(32973,'B','10432',1288,10020),(32974,'C','21034',1279,10020),(32975,'A','41023',1273,10020),(32976,'D','31420',1286,10020),(32977,'C','34012',1282,10020),(32978,'B','40213',1262,10020),(32979,'D','32041',1287,10021),(32980,'B','12304',1285,10021),(32981,'B','40132',1259,10021),(32982,'A','03412',1264,10021),(32983,'C','14320',1262,10021),(32984,'A','04312',1252,10021),(32985,'A','01243',1272,10021),(32986,'C','41032',1279,10021),(32987,'B','40132',1255,10021),(32988,'A','04123',1281,10021),(32989,'E','01423',1268,10021),(32990,'E','32140',1274,10021),(32991,'C','32041',1266,10021),(32992,'E','42301',1247,10021),(32993,'A','34012',1283,10021),(32994,'C','12034',1282,10021),(32995,'B','10432',1271,10021),(32996,'E','41023',1278,10021),(32997,'C','31042',1264,10022),(32998,'E','01342',1281,10022),(32999,'B','20431',1247,10022),(33000,'A','40321',1272,10022),(33001,'B','10324',1263,10022),(33002,'E','24013',1262,10022),(33003,'C','43201',1256,10022),(33004,'E','04231',1268,10022),(33005,'C','21043',1286,10022),(33006,'D','42301',1276,10022),(33007,'A','02134',1282,10022),(33008,'A','04321',1266,10022),(33009,'B','20134',1284,10022),(33010,'D','21034',1283,10022),(33011,'C','14032',1260,10022),(33012,'B','24031',1279,10022),(33013,'C','31042',1271,10022),(33014,'E','03241',1251,10022),(33015,'E','40123',1274,10023),(33016,'D','13204',1251,10023),(33017,'B','40213',1265,10023),(33018,'E','43012',1278,10023),(33019,'E','24130',1261,10023),(33020,'C','41032',1255,10023),(33021,'E','04321',1285,10023),(33022,'C','03214',1283,10023),(33023,'A','02143',1271,10023),(33024,'A','01324',1250,10023),(33025,'A','04132',1281,10023),(33026,'B','02431',1269,10023),(33027,'E','10432',1288,10023),(33028,'E','21034',1279,10023),(33029,'C','41023',1273,10023),(33030,'E','31420',1286,10023),(33031,'C','34012',1282,10023),(33032,'B','40213',1262,10023),(33033,'D','12043',1284,10024),(33034,'B','10423',1262,10024),(33035,'C','13024',1277,10024),(33036,'C','14023',1255,10024),(33037,'B','32041',1249,10024),(33038,'D','31402',1287,10024),(33039,'B','40132',1251,10024),(33040,'C','13024',1272,10024),(33041,'C','34210',1282,10024),(33042,'A','32041',1270,10024),(33043,'A','02143',1260,10024),(33044,'D','41320',1280,10024),(33045,'A','02314',1271,10024),(33046,'B','42103',1265,10024),(33047,'D','32401',1281,10024),(33048,'A','14203',1288,10024),(33049,'D','32401',1263,10024),(33050,'D','30421',1283,10024),(33051,'D','34021',1247,10025),(33052,'A','03142',1260,10025),(33053,'A','01324',1288,10025),(33054,'A','23104',1283,10025),(33055,'E','23014',1257,10025),(33056,'E','20314',1274,10025),(33057,'B','30412',1264,10025),(33058,'C','01342',1287,10025),(33059,'E','20413',1270,10025),(33060,'A','43012',1284,10025),(33061,'D','02341',1282,10025),(33062,'C','32140',1272,10025),(33063,'C','23014',1265,10025),(33064,'C','43012',1263,10025),(33065,'A','13042',1271,10025),(33066,'C','43021',1251,10025),(33067,'D','41230',1278,10025),(33068,'A','03241',1262,10025),(33069,'E','14320',1285,10026),(33070,'B','30241',1274,10026),(33071,'C','14302',1287,10026),(33072,'A','04123',1255,10026),(33073,'A','10234',1263,10026),(33074,'B','14302',1273,10026),(33075,'D','41203',1261,10026),(33076,'B','10423',1281,10026),(33077,'B','42013',1247,10026),(33078,'D','43201',1266,10026),(33079,'B','04312',1271,10026),(33080,'A','02134',1252,10026),(33081,'B','30421',1288,10026),(33082,'C','30421',1279,10026),(33083,'A','01432',1278,10026),(33084,'C','42130',1264,10026),(33085,'B','32014',1283,10026),(33086,'D','34012',1270,10026),(33087,'D','12043',1284,10027),(33088,'A','10423',1262,10027),(33089,'C','13024',1277,10027),(33090,'A','14023',1255,10027),(33091,'B','32041',1249,10027),(33092,'B','31402',1287,10027),(33093,'E','40132',1251,10027),(33094,'A','13024',1272,10027),(33095,'C','34210',1282,10027),(33096,'A','32041',1270,10027),(33097,'A','02143',1260,10027),(33098,'B','41320',1280,10027),(33099,'A','02314',1271,10027),(33100,'E','42103',1265,10027),(33101,'D','32401',1281,10027),(33102,'E','14203',1288,10027),(33103,'D','32401',1263,10027),(33104,'D','30421',1283,10027),(33105,'A','04312',1250,10028),(33106,'C','24013',1277,10028),(33107,'D','31420',1257,10028),(33108,'C','13024',1273,10028),(33109,'A','13420',1271,10028),(33110,'B','24301',1259,10028),(33111,'B','21430',1253,10028),(33112,'A','20314',1268,10028),(33113,'D','41203',1286,10028),(33114,'A','41320',1279,10028),(33115,'D','34102',1281,10028),(33116,'B','03142',1278,10028),(33117,'E','24130',1284,10028),(33118,'D','41032',1282,10028),(33119,'A','32014',1283,10028),(33120,'B','14023',1262,10028),(33121,'A','04123',1288,10028),(33122,'A','02134',1263,10028),(33123,'B','10342',1258,10029),(33124,'A','03214',1265,10029),(33125,'B','20413',1257,10029),(33126,'C','42103',1247,10029),(33127,'A','04123',1287,10029),(33128,'E','04312',1269,10029),(33129,'B','10234',1263,10029),(33130,'E','02134',1271,10029),(33131,'D','12043',1282,10029),(33132,'C','21034',1279,10029),(33133,'D','12430',1278,10029),(33134,'A','02143',1276,10029),(33135,'C','14023',1288,10029),(33136,'A','04213',1264,10029),(33137,'B','04123',1262,10029),(33138,'B','34012',1285,10029),(33139,'A','02143',1272,10029),(33140,'E','43012',1251,10029),(33141,'E','24031',1256,10030),(33142,'D','24103',1261,10030),(33143,'B','34012',1262,10030),(33144,'B','01432',1248,10030),(33145,'D','13420',1269,10030),(33146,'C','30142',1263,10030),(33147,'C','01432',1279,10030),(33148,'C','20134',1285,10030),(33149,'E','32410',1253,10030),(33150,'D','31420',1288,10030),(33151,'C','10432',1287,10030),(33152,'A','40132',1282,10030),(33153,'A','30142',1272,10030),(33154,'E','41203',1275,10030),(33155,'B','23410',1278,10030),(33156,'A','01324',1283,10030),(33157,'C','41203',1266,10030),(33158,'D','41302',1264,10030),(33159,'C','23104',1274,10031),(33160,'C','23104',1285,10031),(33161,'C','14302',1288,10031),(33162,'A','03214',1251,10031),(33163,'D','40312',1280,10031),(33164,'B','40231',1261,10031),(33165,'C','03124',1264,10031),(33166,'C','43102',1283,10031),(33167,'B','31402',1271,10031),(33168,'A','10243',1249,10031),(33169,'D','04123',1269,10031),(33170,'B','01234',1256,10031),(33171,'C','40321',1278,10031),(33172,'A','34201',1262,10031),(33173,'B','10234',1263,10031),(33174,'B','10432',1265,10031),(33175,'C','12043',1273,10031),(33176,'B','40213',1282,10031),(33177,'C','31420',1282,10032),(33178,'D','12403',1263,10032),(33179,'E','40231',1253,10032),(33180,'E','13420',1268,10032),(33181,'A','32041',1283,10032),(33182,'B','10324',1275,10032),(33183,'C','23104',1280,10032),(33184,'A','02341',1261,10032),(33185,'E','14230',1286,10032),(33186,'B','31240',1250,10032),(33187,'A','02314',1281,10032),(33188,'A','21340',1266,10032),(33189,'C','04132',1264,10032),(33190,'E','02143',1262,10032),(33191,'C','42031',1288,10032),(33192,'A','12403',1256,10032),(33193,'B','24130',1272,10032),(33194,'C','13024',1284,10032),(33195,'B','40231',1266,10033),(33196,'D','43210',1264,10033),(33197,'A','21043',1252,10033),(33198,'D','14302',1263,10033),(33199,'C','21304',1250,10033),(33200,'D','43102',1262,10033),(33201,'C','41302',1281,10033),(33202,'C','03421',1285,10033),(33203,'B','30124',1286,10033),(33204,'A','42103',1272,10033),(33205,'D','10234',1279,10033),(33206,'A','32041',1270,10033),(33207,'D','01243',1254,10033),(33208,'E','04213',1283,10033),(33209,'D','14320',1275,10033),(33210,'E','41320',1259,10033),(33211,'A','03241',1282,10033),(33212,'E','42310',1288,10033),(33213,'B','30421',1284,10034),(33214,'E','13240',1280,10034),(33215,'C','42130',1249,10034),(33216,'D','24013',1271,10034),(33217,'A','10432',1264,10034),(33218,'E','32410',1254,10034),(33219,'E','42130',1287,10034),(33220,'A','13420',1269,10034),(33221,'D','32104',1265,10034),(33222,'E','32140',1282,10034),(33223,'B','20134',1252,10034),(33224,'A','01324',1259,10034),(33225,'D','42031',1288,10034),(33226,'E','31420',1262,10034),(33227,'D','23401',1263,10034),(33228,'B','10243',1275,10034),(33229,'A','34201',1283,10034),(33230,'A','13420',1272,10034),(33231,'B','40123',1279,10035),(33232,'B','12034',1248,10035),(33233,'A','34102',1283,10035),(33234,'C','13042',1264,10035),(33235,'C','14230',1284,10035),(33236,'C','41302',1256,10035),(33237,'D','14203',1286,10035),(33238,'A','02314',1258,10035),(33239,'A','40321',1270,10035),(33240,'E','42310',1253,10035),(33241,'B','20134',1262,10035),(33242,'D','31204',1275,10035),(33243,'D','42103',1281,10035),(33244,'A','32410',1282,10035),(33245,'A','02431',1288,10035),(33246,'B','10342',1278,10035),(33247,'C','14032',1263,10035),(33248,'B','10423',1265,10035),(33249,'B','02143',1272,10036),(33250,'D','03241',1281,10036),(33251,'E','13420',1263,10036),(33252,'C','24031',1261,10036),(33253,'D','42103',1277,10036),(33254,'D','12403',1279,10036),(33255,'B','02314',1286,10036),(33256,'A','42013',1282,10036),(33257,'B','41032',1267,10036),(33258,'E','42130',1266,10036),(33259,'C','01423',1262,10036),(33260,'B','20314',1250,10036),(33261,'B','43120',1278,10036),(33262,'E','14320',1254,10036),(33263,'B','01243',1253,10036),(33264,'C','14023',1264,10036),(33265,'D','32104',1283,10036),(33266,'C','12043',1285,10036),(33267,'D','31402',1263,10037),(33268,'C','41023',1256,10037),(33269,'B','04312',1273,10037),(33270,'E','21304',1284,10037),(33271,'B','30241',1251,10037),(33272,'A','03124',1286,10037),(33273,'D','30241',1249,10037),(33274,'C','34021',1275,10037),(33275,'E','12304',1261,10037),(33276,'B','40231',1268,10037),(33277,'C','01324',1282,10037),(33278,'D','14230',1281,10037),(33279,'C','12043',1283,10037),(33280,'B','10324',1264,10037),(33281,'E','20413',1288,10037),(33282,'C','24310',1271,10037),(33283,'A','03124',1266,10037),(33284,'A','14032',1262,10037),(33285,'B','10342',1272,10038),(33286,'C','02413',1253,10038),(33287,'C','21034',1261,10038),(33288,'B','32410',1285,10038),(33289,'B','13042',1283,10038),(33290,'D','23104',1277,10038),(33291,'E','24301',1257,10038),(33292,'A','43021',1247,10038),(33293,'E','13420',1279,10038),(33294,'C','43012',1264,10038),(33295,'E','41023',1278,10038),(33296,'D','24301',1281,10038),(33297,'D','04132',1269,10038),(33298,'D','12304',1265,10038),(33299,'A','02314',1263,10038),(33300,'A','30421',1282,10038),(33301,'B','21304',1288,10038),(33302,'E','41203',1286,10038),(33303,'D','02341',1263,10039),(33304,'B','30214',1264,10039),(33305,'B','30124',1273,10039),(33306,'E','41320',1274,10039),(33307,'D','21034',1265,10039),(33308,'D','23401',1250,10039),(33309,'E','12043',1251,10039),(33310,'D','14023',1278,10039),(33311,'B','32410',1283,10039),(33312,'C','41023',1258,10039),(33313,'C','30421',1287,10039),(33314,'C','23410',1254,10039),(33315,'E','10423',1262,10039),(33316,'B','41023',1268,10039),(33317,'A','24301',1271,10039),(33318,'D','42031',1280,10039),(33319,'D','03214',1288,10039),(33320,'E','42103',1282,10039),(33321,'B','24013',1267,10040),(33322,'D','41320',1286,10040),(33323,'A','13204',1264,10040),(33324,'E','02341',1280,10040),(33325,'C','21043',1261,10040),(33326,'C','34102',1275,10040),(33327,'D','20134',1256,10040),(33328,'E','14320',1282,10040),(33329,'C','40123',1283,10040),(33330,'E','34120',1288,10040),(33331,'B','30214',1285,10040),(33332,'D','13240',1262,10040),(33333,'A','02134',1248,10040),(33334,'B','42301',1272,10040),(33335,'A','34021',1278,10040),(33336,'B','10432',1266,10040),(33337,'C','20134',1271,10040),(33338,'A','01423',1253,10040),(33339,'E','10342',1258,10041),(33340,'A','03214',1265,10041),(33341,'A','20413',1257,10041),(33342,'C','42103',1247,10041),(33343,'D','04123',1287,10041),(33344,'A','04312',1269,10041),(33345,'B','10234',1263,10041),(33346,'A','02134',1271,10041),(33347,'B','12043',1282,10041),(33348,'C','21034',1279,10041),(33349,'C','12430',1278,10041),(33350,'C','02143',1276,10041),(33351,'C','14023',1288,10041),(33352,'C','04213',1264,10041),(33353,'C','04123',1262,10041),(33354,'D','34012',1285,10041),(33355,'C','02143',1272,10041),(33356,'B','43012',1251,10041),(33357,'E','21403',1259,10042),(33358,'C','01432',1273,10042),(33359,'A','40123',1270,10042),(33360,'D','10234',1280,10042),(33361,'E','42310',1247,10042),(33362,'A','20341',1288,10042),(33363,'D','23014',1252,10042),(33364,'E','41230',1264,10042),(33365,'E','12304',1287,10042),(33366,'D','42301',1265,10042),(33367,'A','24103',1263,10042),(33368,'C','32041',1275,10042),(33369,'C','02413',1271,10042),(33370,'A','23410',1255,10042),(33371,'C','14302',1278,10042),(33372,'B','21034',1281,10042),(33373,'E','40213',1262,10042),(33374,'D','14032',1285,10042),(33375,'A','20143',1262,10043),(33376,'B','03241',1269,10043),(33377,'C','32041',1248,10043),(33378,'E','21430',1276,10043),(33379,'A','01432',1288,10043),(33380,'A','10243',1273,10043),(33381,'E','34120',1253,10043),(33382,'A','03241',1259,10043),(33383,'C','23014',1287,10043),(33384,'C','02413',1282,10043),(33385,'E','43102',1278,10043),(33386,'B','20341',1271,10043),(33387,'A','03214',1265,10043),(33388,'C','02341',1283,10043),(33389,'D','24013',1257,10043),(33390,'B','04132',1280,10043),(33391,'E','30142',1285,10043),(33392,'C','13042',1263,10043),(33393,'A','31240',1263,10044),(33394,'A','21340',1283,10044),(33395,'C','32041',1284,10044),(33396,'A','04312',1278,10044),(33397,'D','34102',1262,10044),(33398,'A','03124',1274,10044),(33399,'D','10432',1259,10044),(33400,'C','21034',1287,10044),(33401,'D','03412',1256,10044),(33402,'A','02431',1266,10044),(33403,'D','14302',1281,10044),(33404,'E','21340',1268,10044),(33405,'D','24301',1251,10044),(33406,'A','13042',1249,10044),(33407,'B','34012',1279,10044),(33408,'C','04132',1273,10044),(33409,'B','20431',1288,10044),(33410,'C','34021',1282,10044),(33411,'C','01342',1266,10045),(33412,'B','12403',1285,10045),(33413,'A','40213',1273,10045),(33414,'E','01234',1253,10045),(33415,'E','20341',1257,10045),(33416,'E','04312',1260,10045),(33417,'B','43012',1278,10045),(33418,'C','24310',1283,10045),(33419,'B','10324',1247,10045),(33420,'A','03124',1276,10045),(33421,'E','30421',1287,10045),(33422,'B','03214',1279,10045),(33423,'D','13204',1270,10045),(33424,'C','13042',1264,10045),(33425,'C','32014',1271,10045),(33426,'A','02134',1288,10045),(33427,'A','03214',1262,10045),(33428,'B','30142',1282,10045),(33429,'B','12043',1284,10046),(33430,'E','10423',1262,10046),(33431,'C','13024',1277,10046),(33432,'E','14023',1255,10046),(33433,'B','32041',1249,10046),(33434,'C','31402',1287,10046),(33435,'A','40132',1251,10046),(33436,'B','13024',1272,10046),(33437,'B','34210',1282,10046),(33438,'D','32041',1270,10046),(33439,'A','02143',1260,10046),(33440,'C','41320',1280,10046),(33441,'C','02314',1271,10046),(33442,'A','42103',1265,10046),(33443,'B','32401',1281,10046),(33444,'A','14203',1288,10046),(33445,'D','32401',1263,10046),(33446,'A','30421',1283,10046),(33447,'E','04321',1252,10047),(33448,'B','40132',1249,10047),(33449,'D','41230',1278,10047),(33450,'D','14032',1257,10047),(33451,'E','23140',1286,10047),(33452,'C','10324',1274,10047),(33453,'B','30412',1260,10047),(33454,'B','14320',1285,10047),(33455,'C','43120',1271,10047),(33456,'A','34012',1273,10047),(33457,'E','40231',1280,10047),(33458,'A','01243',1265,10047),(33459,'A','24310',1267,10047),(33460,'B','20134',1288,10047),(33461,'E','12340',1263,10047),(33462,'B','21430',1264,10047),(33463,'C','34210',1262,10047),(33464,'A','31042',1283,10047),(33465,'E','34021',1247,10048),(33466,'E','03142',1260,10048),(33467,'D','01324',1288,10048),(33468,'C','23104',1283,10048),(33469,'D','23014',1257,10048),(33470,'C','20314',1274,10048),(33471,'B','30412',1264,10048),(33472,'B','01342',1287,10048),(33473,'C','20413',1270,10048),(33474,'D','43012',1284,10048),(33475,'D','02341',1282,10048),(33476,'D','32140',1272,10048),(33477,'A','23014',1265,10048),(33478,'C','43012',1263,10048),(33479,'A','13042',1271,10048),(33480,'A','43021',1251,10048),(33481,'C','41230',1278,10048),(33482,'B','03241',1262,10048),(36479,'A','41302',1307,10373),(36480,'A','12430',1312,10373),(36481,'A','03241',1314,10373),(36482,'E','02413',1298,10373),(36483,'B','21043',1319,10373),(36484,'B','03124',1316,10373),(36485,'E','41203',1292,10373),(36486,'B','23410',1295,10373),(36487,'B','10234',1294,10373),(36488,'B','10342',1306,10373),(36489,'B','20143',1297,10373),(36490,'E','41032',1318,10373),(36491,'A','43102',1290,10374),(36492,'C','32014',1294,10374),(36493,'A','32041',1318,10374),(36494,'E','23410',1302,10374),(36495,'C','23014',1314,10374),(36496,'A','03412',1296,10374),(36497,'A','24301',1298,10374),(36498,'D','04312',1315,10374),(36499,'D','13204',1305,10374),(36500,'A','10432',1306,10374),(36501,'D','21304',1311,10374),(36502,'D','14302',1309,10374),(36503,'B','10324',1294,10375),(36504,'D','40213',1302,10375),(36505,'A','10324',1309,10375),(36506,'E','21340',1298,10375),(36507,'B','40132',1320,10375),(36508,'C','21043',1291,10375),(36509,'A','03412',1319,10375),(36510,'B','30412',1296,10375),(36511,'E','04213',1295,10375),(36512,'A','41320',1290,10375),(36513,'E','32140',1314,10375),(36514,'A','03124',1297,10375),(36515,'E','23410',1303,10376),(36516,'C','13042',1320,10376),(36517,'D','23401',1312,10376),(36518,'B','01324',1292,10376),(36519,'A','01243',1306,10376),(36520,'A','04123',1315,10376),(36521,'C','14023',1318,10376),(36522,'E','14320',1305,10376),(36523,'B','40213',1304,10376),(36524,'C','13204',1317,10376),(36525,'D','34102',1300,10376),(36526,'D','14203',1302,10376),(36527,'E','20341',1310,10377),(36528,'E','41230',1290,10377),(36529,'C','13042',1321,10377),(36530,'E','14230',1307,10377),(36531,'E','13240',1313,10377),(36532,'A','24103',1302,10377),(36533,'A','13024',1293,10377),(36534,'A','01324',1289,10377),(36535,'A','03214',1316,10377),(36536,'C','21043',1317,10377),(36537,'E','34210',1315,10377),(36538,'A','04321',1300,10377),(36539,'B','10423',1317,10378),(36540,'C','01423',1307,10378),(36541,'D','13024',1320,10378),(36542,'E','42031',1293,10378),(36543,'D','42301',1310,10378),(36544,'E','34120',1309,10378),(36545,'B','20314',1311,10378),(36546,'E','30124',1306,10378),(36547,'D','13204',1314,10378),(36548,'A','04321',1294,10378),(36549,'C','32140',1295,10378),(36550,'A','14203',1318,10378),(36563,'E','10342',1299,10380),(36564,'B','30124',1318,10380),(36565,'E','32140',1317,10380),(36566,'E','03214',1316,10380),(36567,'C','23014',1294,10380),(36568,'A','20143',1292,10380),(36569,'D','21304',1301,10380),(36570,'B','31420',1304,10380),(36571,'E','24130',1293,10380),(36572,'E','40312',1303,10380),(36573,'B','30412',1296,10380),(36574,'C','03142',1309,10380),(36575,'B','23410',1316,10381),(36576,'D','43102',1305,10381),(36577,'E','24130',1302,10381),(36578,'E','34210',1306,10381),(36579,'C','24103',1309,10381),(36580,'C','43012',1298,10381),(36581,'D','02134',1295,10381),(36582,'B','40321',1294,10381),(36583,'A','04213',1318,10381),(36584,'B','30412',1321,10381),(36585,'C','04213',1293,10381),(36586,'B','40321',1304,10381),(36587,'C','13420',1316,10382),(36588,'A','03421',1295,10382),(36589,'E','13240',1300,10382),(36590,'C','34012',1321,10382),(36591,'D','12403',1309,10382),(36592,'C','20431',1314,10382),(36593,'E','43120',1294,10382),(36594,'A','21340',1299,10382),(36595,'E','34120',1319,10382),(36596,'D','03214',1318,10382),(36597,'E','03421',1306,10382),(36598,'D','13204',1305,10382),(36599,'E','12340',1312,10383),(36600,'B','10234',1289,10383),(36601,'B','13402',1319,10383),(36602,'C','40231',1293,10383),(36603,'E','10342',1308,10383),(36604,'D','13204',1301,10383),(36605,'A','32410',1313,10383),(36606,'B','30241',1297,10383),(36607,'B','13042',1292,10383),(36608,'C','41023',1298,10383),(36609,'B','34012',1307,10383),(36610,'D','31204',1316,10383),(36611,'C','30412',1307,10384),(36612,'C','41230',1299,10384),(36613,'C','32104',1291,10384),(36614,'A','01324',1309,10384),(36615,'E','41320',1305,10384),(36616,'E','13402',1300,10384),(36617,'C','31042',1290,10384),(36618,'B','41320',1310,10384),(36619,'B','40312',1297,10384),(36620,'C','14032',1318,10384),(36621,'E','32410',1306,10384),(36622,'C','41023',1294,10384),(36623,'D','14320',1291,10385),(36624,'D','32410',1313,10385),(36625,'B','10234',1302,10385),(36626,'C','41302',1319,10385),(36627,'A','04132',1290,10385),(36628,'A','21403',1300,10385),(36629,'B','20413',1320,10385),(36630,'E','14203',1295,10385),(36631,'D','20314',1315,10385),(36632,'A','04213',1314,10385),(36633,'E','23410',1293,10385),(36634,'E','43201',1309,10385),(36635,'D','42301',1301,10386),(36636,'E','12340',1321,10386),(36637,'A','32014',1314,10386),(36638,'A','23410',1292,10386),(36639,'E','31240',1290,10386),(36640,'C','43201',1299,10386),(36641,'A','14320',1315,10386),(36642,'E','23140',1320,10386),(36643,'D','10432',1295,10386),(36644,'D','32014',1296,10386),(36645,'B','30241',1319,10386),(36646,'A','34210',1304,10386),(36647,'B','30214',1296,10387),(36648,'B','24031',1316,10387),(36649,'E','02134',1292,10387),(36650,'C','41302',1295,10387),(36651,'A','01243',1290,10387),(36652,'D','02431',1313,10387),(36653,'B','10324',1301,10387),(36654,'C','34021',1302,10387),(36655,'A','21034',1299,10387),(36656,'A','01423',1294,10387),(36657,'B','21304',1315,10387),(36658,'D','41032',1319,10387),(36659,'E','12340',1312,10388),(36660,'B','10234',1289,10388),(36661,'D','13402',1319,10388),(36662,'B','40231',1293,10388),(36663,'D','10342',1308,10388),(36664,'D','13204',1301,10388),(36665,'E','32410',1313,10388),(36666,'B','30241',1297,10388),(36667,'E','13042',1292,10388),(36668,'C','41023',1298,10388),(36669,'C','34012',1307,10388),(36670,'D','31204',1316,10388),(36671,'D','23410',1303,10389),(36672,'B','13042',1320,10389),(36673,'D','23401',1312,10389),(36674,'E','01324',1292,10389),(36675,'E','01243',1306,10389),(36676,'B','04123',1315,10389),(36677,'A','14023',1318,10389),(36678,'A','14320',1305,10389),(36679,'D','40213',1304,10389),(36680,'D','13204',1317,10389),(36681,'D','34102',1300,10389),(36682,'D','14203',1302,10389),(36683,'B','42103',1299,10390),(36684,'E','24103',1313,10390),(36685,'D','30214',1296,10390),(36686,'E','01243',1319,10390),(36687,'D','34102',1297,10390),(36688,'A','12430',1293,10390),(36689,'A','03142',1312,10390),(36690,'A','40312',1307,10390),(36691,'D','32041',1294,10390),(36692,'C','32410',1311,10390),(36693,'C','34021',1308,10390),(36694,'B','20341',1298,10390),(36695,'E','32410',1312,10391),(36696,'A','10324',1301,10391),(36697,'C','41203',1313,10391),(36698,'A','03124',1300,10391),(36699,'A','40321',1320,10391),(36700,'D','12043',1307,10391),(36701,'D','12403',1297,10391),(36702,'C','32140',1308,10391),(36703,'E','21340',1293,10391),(36704,'B','20314',1315,10391),(36705,'E','34102',1314,10391),(36706,'E','13420',1298,10391),(36707,'B','30412',1296,10392),(36708,'E','24301',1291,10392),(36709,'E','34120',1298,10392),(36710,'A','14230',1307,10392),(36711,'D','24103',1305,10392),(36712,'E','43120',1300,10392),(36713,'E','14230',1319,10392),(36714,'B','20341',1294,10392),(36715,'C','32041',1320,10392),(36716,'A','10423',1299,10392),(36717,'D','34102',1302,10392),(36718,'B','42103',1304,10392),(36719,'B','10423',1317,10393),(36720,'C','01423',1307,10393),(36721,'B','13024',1320,10393),(36722,'C','42031',1293,10393),(36723,'E','42301',1310,10393),(36724,'C','34120',1309,10393),(36725,'B','20314',1311,10393),(36726,'E','30124',1306,10393),(36727,'D','13204',1314,10393),(36728,'A','04321',1294,10393),(36729,'A','32140',1295,10393),(36730,'D','14203',1318,10393),(36731,'E','12340',1312,10394),(36732,'B','10234',1289,10394),(36733,'D','13402',1319,10394),(36734,'B','40231',1293,10394),(36735,'B','10342',1308,10394),(36736,'D','13204',1301,10394),(36737,'B','32410',1313,10394),(36738,'B','30241',1297,10394),(36739,'E','13042',1292,10394),(36740,'C','41023',1298,10394),(36741,'B','34012',1307,10394),(36742,'A','31204',1316,10394),(36743,'C','23041',1320,10395),(36744,'B','20314',1305,10395),(36745,'B','21403',1309,10395),(36746,'D','43021',1302,10395),(36747,'D','24301',1321,10395),(36748,'B','13420',1292,10395),(36749,'A','13402',1295,10395),(36750,'B','32014',1298,10395),(36751,'E','34120',1290,10395),(36752,'B','03412',1313,10395),(36753,'A','03241',1303,10395),(36754,'A','03214',1318,10395),(36755,'B','40231',1316,10396),(36756,'B','30421',1310,10396),(36757,'A','21340',1315,10396),(36758,'A','01243',1317,10396),(36759,'B','10342',1306,10396),(36760,'E','14230',1297,10396),(36761,'A','43201',1314,10396),(36762,'D','42103',1298,10396),(36763,'E','42130',1296,10396),(36764,'D','42103',1308,10396),(36765,'E','32140',1290,10396),(36766,'E','42130',1313,10396),(36767,'B','40231',1316,10397),(36768,'A','30421',1310,10397),(36769,'E','21340',1315,10397),(36770,'A','01243',1317,10397),(36771,'B','10342',1306,10397),(36772,'E','14230',1297,10397),(36773,'B','43201',1314,10397),(36774,'D','42103',1298,10397),(36775,'E','42130',1296,10397),(36776,'C','42103',1308,10397),(36777,'E','32140',1290,10397),(36778,'B','42130',1313,10397),(36779,'D','41023',1320,10398),(36780,'E','30142',1299,10398),(36781,'D','21340',1307,10398),(36782,'C','13204',1309,10398),(36783,'D','42301',1289,10398),(36784,'D','43120',1300,10398),(36785,'C','34012',1302,10398),(36786,'B','32401',1305,10398),(36787,'D','21403',1321,10398),(36788,'A','34021',1298,10398),(36789,'E','34210',1318,10398),(36790,'C','02431',1303,10398),(36791,'B','23410',1316,10399),(36792,'E','43102',1305,10399),(36793,'E','24130',1302,10399),(36794,'E','34210',1306,10399),(36795,'C','24103',1309,10399),(36796,'C','43012',1298,10399),(36797,'D','02134',1295,10399),(36798,'B','40321',1294,10399),(36799,'A','04213',1318,10399),(36800,'B','30412',1321,10399),(36801,'C','04213',1293,10399),(36802,'E','40321',1304,10399),(36803,'B','20341',1310,10400),(36804,'E','41230',1290,10400),(36805,'C','13042',1321,10400),(36806,'A','14230',1307,10400),(36807,'C','13240',1313,10400),(36808,'D','24103',1302,10400),(36809,'E','13024',1293,10400),(36810,'A','01324',1289,10400),(36811,'B','03214',1316,10400),(36812,'C','21043',1317,10400),(36813,'E','34210',1315,10400),(36814,'A','04321',1300,10400),(36815,'C','12340',1312,10401),(36816,'B','10234',1289,10401),(36817,'D','13402',1319,10401),(36818,'B','40231',1293,10401),(36819,'B','10342',1308,10401),(36820,'A','13204',1301,10401),(36821,'E','32410',1313,10401),(36822,'B','30241',1297,10401),(36823,'E','13042',1292,10401),(36824,'A','41023',1298,10401),(36825,'B','34012',1307,10401),(36826,'D','31204',1316,10401),(36827,'B','31402',1307,10402),(36828,'E','34120',1302,10402),(36829,'D','32401',1301,10402),(36830,'A','13204',1306,10402),(36831,'A','10432',1319,10402),(36832,'C','42013',1289,10402),(36833,'A','21043',1292,10402),(36834,'B','21034',1293,10402),(36835,'A','02143',1312,10402),(36836,'C','01324',1318,10402),(36837,'A','30412',1309,10402),(36838,'B','43201',1314,10402),(36839,'D','31402',1307,10403),(36840,'D','34120',1302,10403),(36841,'D','32401',1301,10403),(36842,'D','13204',1306,10403),(36843,'B','10432',1319,10403),(36844,'C','42013',1289,10403),(36845,'B','21043',1292,10403),(36846,'E','21034',1293,10403),(36847,'E','02143',1312,10403),(36848,'A','01324',1318,10403),(36849,'D','30412',1309,10403),(36850,'A','43201',1314,10403),(36851,'D','24103',1305,10404),(36852,'B','40321',1316,10404),(36853,'D','24103',1318,10404),(36854,'C','21304',1310,10404),(36855,'A','04213',1297,10404),(36856,'B','14230',1290,10404),(36857,'D','32401',1295,10404),(36858,'C','14023',1293,10404),(36859,'A','02341',1299,10404),(36860,'C','42013',1304,10404),(36861,'A','43012',1292,10404),(36862,'D','23401',1302,10404),(36863,'A','03421',1297,10405),(36864,'D','13204',1292,10405),(36865,'C','14032',1298,10405),(36866,'A','24031',1314,10405),(36867,'B','40312',1319,10405),(36868,'B','10324',1290,10405),(36869,'A','31420',1295,10405),(36870,'B','20341',1294,10405),(36871,'A','03142',1303,10405),(36872,'B','42103',1313,10405),(36873,'E','40213',1304,10405),(36874,'C','42013',1311,10405),(36875,'E','12340',1312,10406),(36876,'B','10234',1289,10406),(36877,'B','13402',1319,10406),(36878,'C','40231',1293,10406),(36879,'B','10342',1308,10406),(36880,'D','13204',1301,10406),(36881,'B','32410',1313,10406),(36882,'B','30241',1297,10406),(36883,'E','13042',1292,10406),(36884,'C','41023',1298,10406),(36885,'D','34012',1307,10406),(36886,'D','31204',1316,10406),(36887,'C','31402',1307,10407),(36888,'E','34120',1302,10407),(36889,'D','32401',1301,10407),(36890,'D','13204',1306,10407),(36891,'B','10432',1319,10407),(36892,'C','42013',1289,10407),(36893,'A','21043',1292,10407),(36894,'C','21034',1293,10407),(36895,'B','02143',1312,10407),(36896,'A','01324',1318,10407),(36897,'D','30412',1309,10407),(36898,'D','43201',1314,10407),(36899,'E','14320',1291,10408),(36900,'A','32410',1313,10408),(36901,'C','10234',1302,10408),(36902,'A','41302',1319,10408),(36903,'B','04132',1290,10408),(36904,'D','21403',1300,10408),(36905,'D','20413',1320,10408),(36906,'A','14203',1295,10408),(36907,'B','20314',1315,10408),(36908,'C','04213',1314,10408),(36909,'E','23410',1293,10408),(36910,'E','43201',1309,10408),(36911,'A','03124',1298,10409),(36912,'C','34120',1304,10409),(36913,'B','10234',1295,10409),(36914,'D','34012',1313,10409),(36915,'D','24301',1315,10409),(36916,'A','03124',1311,10409),(36917,'E','42301',1296,10409),(36918,'E','03421',1309,10409),(36919,'D','02143',1302,10409),(36920,'E','10234',1312,10409),(36921,'A','12304',1297,10409),(36922,'C','23041',1290,10409),(36923,'A','43012',1316,10410),(36924,'E','13042',1299,10410),(36925,'C','41032',1291,10410),(36926,'D','13240',1302,10410),(36927,'E','31240',1311,10410),(36928,'C','40312',1319,10410),(36929,'B','41320',1310,10410),(36930,'A','20413',1293,10410),(36931,'D','20431',1313,10410),(36932,'A','34120',1297,10410),(36933,'C','23041',1296,10410),(36934,'B','20431',1301,10410),(36935,'D','42103',1299,10411),(36936,'E','24103',1313,10411),(36937,'B','30214',1296,10411),(36938,'A','01243',1319,10411),(36939,'A','34102',1297,10411),(36940,'E','12430',1293,10411),(36941,'A','03142',1312,10411),(36942,'D','40312',1307,10411),(36943,'A','32041',1294,10411),(36944,'E','32410',1311,10411),(36945,'C','34021',1308,10411),(36946,'B','20341',1298,10411),(36947,'C','23041',1320,10412),(36948,'B','20314',1305,10412),(36949,'A','21403',1309,10412),(36950,'A','43021',1302,10412),(36951,'D','24301',1321,10412),(36952,'D','13420',1292,10412),(36953,'B','13402',1295,10412),(36954,'C','32014',1298,10412),(36955,'E','34120',1290,10412),(36956,'E','03412',1313,10412),(36957,'B','03241',1303,10412),(36958,'B','03214',1318,10412),(36959,'B','30412',1296,10413),(36960,'D','24301',1291,10413),(36961,'E','34120',1298,10413),(36962,'B','14230',1307,10413),(36963,'D','24103',1305,10413),(36964,'E','43120',1300,10413),(36965,'E','14230',1319,10413),(36966,'E','20341',1294,10413),(36967,'C','32041',1320,10413),(36968,'D','10423',1299,10413),(36969,'D','34102',1302,10413),(36970,'B','42103',1304,10413),(36971,'D','23401',1321,10414),(36972,'C','14203',1304,10414),(36973,'A','01234',1293,10414),(36974,'D','03241',1320,10414),(36975,'C','14032',1298,10414),(36976,'C','23104',1318,10414),(36977,'E','13042',1299,10414),(36978,'B','01432',1310,10414),(36979,'D','12034',1291,10414),(36980,'B','31402',1295,10414),(36981,'E','12430',1305,10414),(36982,'C','41023',1317,10414),(36983,'D','30412',1307,10415),(36984,'E','41230',1299,10415),(36985,'A','32104',1291,10415),(36986,'A','01324',1309,10415),(36987,'A','41320',1305,10415),(36988,'D','13402',1300,10415),(36989,'C','31042',1290,10415),(36990,'A','41320',1310,10415),(36991,'B','40312',1297,10415),(36992,'C','14032',1318,10415),(36993,'D','32410',1306,10415),(36994,'C','41023',1294,10415),(36995,'D','41302',1307,10416),(36996,'C','12430',1312,10416),(36997,'C','03241',1314,10416),(36998,'A','02413',1298,10416),(36999,'E','21043',1319,10416),(37000,'A','03124',1316,10416),(37001,'B','41203',1292,10416),(37002,'E','23410',1295,10416),(37003,'B','10234',1294,10416),(37004,'D','10342',1306,10416),(37005,'B','20143',1297,10416),(37006,'D','41032',1318,10416),(37007,'B','40213',1289,10417),(37008,'C','13204',1309,10417),(37009,'A','10342',1315,10417),(37010,'B','30421',1302,10417),(37011,'B','21403',1293,10417),(37012,'A','02413',1300,10417),(37013,'B','10423',1310,10417),(37014,'A','02431',1297,10417),(37015,'A','32041',1314,10417),(37016,'D','32401',1305,10417),(37017,'B','13204',1306,10417),(37018,'E','42310',1301,10417),(37019,'B','30412',1296,10418),(37020,'D','24301',1291,10418),(37021,'E','34120',1298,10418),(37022,'B','14230',1307,10418),(37023,'D','24103',1305,10418),(37024,'A','43120',1300,10418),(37025,'D','14230',1319,10418),(37026,'C','20341',1294,10418),(37027,'C','32041',1320,10418),(37028,'D','10423',1299,10418),(37029,'E','34102',1302,10418),(37030,'D','42103',1304,10418),(37031,'C','24103',1305,10419),(37032,'E','40321',1316,10419),(37033,'D','24103',1318,10419),(37034,'D','21304',1310,10419),(37035,'A','04213',1297,10419),(37036,'E','14230',1290,10419),(37037,'E','32401',1295,10419),(37038,'C','14023',1293,10419),(37039,'B','02341',1299,10419),(37040,'A','42013',1304,10419),(37041,'C','43012',1292,10419),(37042,'D','23401',1302,10419),(37043,'D','03421',1297,10420),(37044,'E','13204',1292,10420),(37045,'A','14032',1298,10420),(37046,'C','24031',1314,10420),(37047,'A','40312',1319,10420),(37048,'B','10324',1290,10420),(37049,'A','31420',1295,10420),(37050,'D','20341',1294,10420),(37051,'C','03142',1303,10420),(37052,'B','42103',1313,10420),(37053,'D','40213',1304,10420),(37054,'B','42013',1311,10420),(37055,'B','41302',1307,10421),(37056,'E','12430',1312,10421),(37057,'B','03241',1314,10421),(37058,'A','02413',1298,10421),(37059,'C','21043',1319,10421),(37060,'C','03124',1316,10421),(37061,'C','41203',1292,10421),(37062,'D','23410',1295,10421),(37063,'B','10234',1294,10421),(37064,'B','10342',1306,10421),(37065,'B','20143',1297,10421),(37066,'C','41032',1318,10421),(37067,'C','32401',1300,10422),(37068,'B','23041',1295,10422),(37069,'C','21034',1296,10422),(37070,'E','01243',1315,10422),(37071,'D','14302',1318,10422),(37072,'D','31402',1290,10422),(37073,'E','04312',1308,10422),(37074,'A','03124',1297,10422),(37075,'E','24103',1312,10422),(37076,'B','31240',1305,10422),(37077,'B','20341',1319,10422),(37078,'D','30142',1306,10422),(37079,'D','23401',1321,10423),(37080,'B','14203',1304,10423),(37081,'A','01234',1293,10423),(37082,'B','03241',1320,10423),(37083,'C','14032',1298,10423),(37084,'D','23104',1318,10423),(37085,'C','13042',1299,10423),(37086,'A','01432',1310,10423),(37087,'C','12034',1291,10423),(37088,'D','31402',1295,10423),(37089,'E','12430',1305,10423),(37090,'C','41023',1317,10423),(37091,'D','32401',1300,10424),(37092,'E','23041',1295,10424),(37093,'C','21034',1296,10424),(37094,'A','01243',1315,10424),(37095,'D','14302',1318,10424),(37096,'C','31402',1290,10424),(37097,'D','04312',1308,10424),(37098,'A','03124',1297,10424),(37099,'D','24103',1312,10424),(37100,'E','31240',1305,10424),(37101,'C','20341',1319,10424),(37102,'A','30142',1306,10424),(37247,'A','03421',1297,10437),(37248,'D','13204',1292,10437),(37249,'C','14032',1298,10437),(37250,'C','24031',1314,10437),(37251,'E','40312',1319,10437),(37252,'B','10324',1290,10437),(37253,'A','31420',1295,10437),(37254,'B','20341',1294,10437),(37255,'E','03142',1303,10437),(37256,'B','42103',1313,10437),(37257,'B','40213',1304,10437),(37258,'C','42013',1311,10437),(37259,'B','23041',1320,10438),(37260,'C','20314',1305,10438),(37261,'B','21403',1309,10438),(37262,'D','43021',1302,10438),(37263,'D','24301',1321,10438),(37264,'A','13420',1292,10438),(37265,'B','13402',1295,10438),(37266,'C','32014',1298,10438),(37267,'E','34120',1290,10438),(37268,'E','03412',1313,10438),(37269,'A','03241',1303,10438),(37270,'A','03214',1318,10438),(37271,'C','42031',1291,10439),(37272,'E','42130',1310,10439),(37273,'D','34201',1295,10439),(37274,'C','41023',1296,10439),(37275,'B','10342',1294,10439),(37276,'D','21304',1297,10439),(37277,'D','03124',1313,10439),(37278,'D','42301',1290,10439),(37279,'A','41320',1307,10439),(37280,'C','34012',1304,10439),(37281,'C','20134',1301,10439),(37282,'E','12340',1311,10439),(39842,'A','31420',1342,10967),(39843,'A','01432',1344,10967),(39844,'A','02341',1328,10967),(39845,'A','02341',1340,10967),(39846,'E','34120',1333,10967),(39847,'A','23041',1337,10967),(39848,'A','42103',1323,10967),(39849,'D','40231',1322,10967),(39850,'D','02413',1337,10968),(39851,'B','30142',1339,10968),(39852,'D','01342',1340,10968),(39853,'B','02143',1348,10968),(39854,'E','14230',1323,10968),(39855,'A','42310',1336,10968),(39856,'C','31024',1324,10968),(39857,'C','13042',1332,10968),(39858,'A','30124',1342,10968),(39859,'C','40231',1341,10968),(39860,'A','01243',1346,10968),(39861,'D','31402',1335,10968),(39862,'E','21430',1338,10968),(39863,'A','03142',1334,10969),(39864,'A','04123',1348,10969),(39865,'C','34201',1335,10969),(39866,'C','30214',1337,10969),(39867,'C','23041',1346,10969),(39868,'A','01234',1324,10969),(39869,'B','23140',1342,10969),(39870,'D','03124',1329,10969),(39871,'B','30124',1333,10969),(39872,'A','23041',1341,10969),(39873,'A','41023',1343,10969),(39874,'A','03124',1338,10969),(39875,'C','12034',1336,10969),(39876,'D','02143',1347,10970),(39877,'E','12430',1338,10970),(39878,'C','23014',1323,10970),(39879,'B','14302',1322,10970),(39880,'C','13204',1329,10970),(39881,'A','04312',1324,10970),(39882,'E','32140',1339,10970),(39883,'A','02413',1346,10970),(39884,'B','20134',1332,10970),(39885,'E','42310',1328,10970),(39886,'A','14320',1337,10970),(39887,'A','01243',1342,10970),(39888,'D','02314',1333,10970),(39889,'D','24310',1330,10971),(39890,'D','23401',1343,10971),(39891,'D','42301',1323,10971),(39892,'C','32014',1344,10971),(39893,'A','01342',1339,10971),(39894,'B','10432',1332,10971),(39895,'A','31204',1342,10971),(39896,'E','42013',1340,10971),(39897,'C','21034',1345,10971),(39898,'B','23014',1338,10971),(39899,'B','20134',1322,10971),(39900,'D','43201',1328,10971),(39901,'D','34102',1336,10971),(39902,'A','14302',1348,10972),(39903,'C','41032',1336,10972),(39904,'E','31240',1347,10972),(39905,'C','13240',1325,10972),(39906,'C','23104',1337,10972),(39907,'E','02341',1334,10972),(39908,'D','13042',1341,10972),(39909,'D','40213',1340,10972),(39910,'A','14032',1342,10972),(39911,'D','23104',1345,10972),(39912,'C','21034',1339,10972),(39913,'A','04312',1333,10972),(39914,'E','13240',1338,10972),(39915,'A','13402',1338,10973),(39916,'D','23104',1323,10973),(39917,'D','40321',1345,10973),(39918,'B','30124',1326,10973),(39919,'B','42013',1325,10973),(39920,'D','42130',1334,10973),(39921,'A','02431',1336,10973),(39922,'C','32014',1324,10973),(39923,'A','04231',1342,10973),(39924,'A','01234',1339,10973),(39925,'B','10234',1327,10973),(39926,'D','24301',1332,10973),(39927,'A','01243',1344,10973),(39928,'A','02314',1340,10974),(39929,'E','24301',1329,10974),(39930,'D','04312',1337,10974),(39931,'B','30214',1344,10974),(39932,'A','02134',1322,10974),(39933,'D','42013',1333,10974),(39934,'A','03421',1330,10974),(39935,'B','30421',1324,10974),(39936,'A','02431',1343,10974),(39937,'B','30412',1332,10974),(39938,'C','41302',1345,10974),(39939,'A','01243',1325,10974),(39940,'E','14230',1338,10974),(39941,'E','31240',1336,10975),(39942,'A','03421',1324,10975),(39943,'E','13240',1328,10975),(39944,'A','04312',1322,10975),(39945,'B','30241',1339,10975),(39946,'D','34210',1329,10975),(39947,'C','03142',1333,10975),(39948,'E','42310',1344,10975),(39949,'E','02413',1342,10975),(39950,'D','21403',1346,10975),(39951,'C','14230',1326,10975),(39952,'D','12304',1338,10975),(39953,'C','34021',1343,10975),(39954,'A','01342',1332,10976),(39955,'D','12403',1346,10976),(39956,'C','34012',1344,10976),(39957,'C','43021',1323,10976),(39958,'C','21043',1341,10976),(39959,'A','14203',1339,10976),(39960,'E','21340',1330,10976),(39961,'B','40312',1328,10976),(39962,'E','30412',1327,10976),(39963,'C','41032',1345,10976),(39964,'E','32104',1333,10976),(39965,'C','40231',1340,10976),(39966,'A','02134',1329,10976),(39967,'A','14302',1348,10977),(39968,'C','41032',1336,10977),(39969,'E','31240',1347,10977),(39970,'E','13240',1325,10977),(39971,'C','23104',1337,10977),(39972,'A','02341',1334,10977),(39973,'E','13042',1341,10977),(39974,'B','40213',1340,10977),(39975,'A','14032',1342,10977),(39976,'B','23104',1345,10977),(39977,'D','21034',1339,10977),(39978,'D','04312',1333,10977),(39979,'E','13240',1338,10977),(39980,'E','32410',1340,10978),(39981,'D','32401',1324,10978),(39982,'E','10243',1345,10978),(39983,'A','21403',1344,10978),(39984,'E','31240',1339,10978),(39985,'D','23104',1346,10978),(39986,'B','40213',1330,10978),(39987,'E','03412',1337,10978),(39988,'D','13420',1323,10978),(39989,'E','41203',1328,10978),(39990,'E','42103',1342,10978),(39991,'D','32410',1327,10978),(39992,'A','40321',1341,10978),(39993,'C','12034',1334,10979),(39994,'C','34021',1332,10979),(39995,'D','43201',1324,10979),(39996,'B','40132',1325,10979),(39997,'B','41032',1348,10979),(39998,'A','02413',1338,10979),(39999,'D','12430',1340,10979),(40000,'D','34201',1322,10979),(40001,'D','34102',1326,10979),(40002,'D','43102',1337,10979),(40003,'A','03421',1335,10979),(40004,'E','32140',1347,10979),(40005,'B','34021',1343,10979),(40006,'A','04312',1337,10980),(40007,'E','41230',1338,10980),(40008,'E','34210',1341,10980),(40009,'C','43210',1323,10980),(40010,'E','12340',1345,10980),(40011,'D','32401',1325,10980),(40012,'B','20413',1340,10980),(40013,'B','30421',1347,10980),(40014,'C','34201',1333,10980),(40015,'D','43102',1326,10980),(40016,'A','12403',1329,10980),(40017,'A','03124',1339,10980),(40018,'E','24310',1336,10980),(40019,'B','40213',1334,10981),(40020,'E','24310',1323,10981),(40021,'B','10324',1345,10981),(40022,'E','24103',1343,10981),(40023,'D','23401',1336,10981),(40024,'A','02413',1326,10981),(40025,'A','30412',1339,10981),(40026,'D','31042',1338,10981),(40027,'C','12043',1328,10981),(40028,'E','34201',1329,10981),(40029,'C','31024',1324,10981),(40030,'A','04213',1341,10981),(40031,'A','10234',1340,10981),(40032,'B','10324',1330,10982),(40033,'A','43012',1322,10982),(40034,'E','34102',1323,10982),(40035,'A','04123',1344,10982),(40036,'D','32104',1345,10982),(40037,'D','03421',1338,10982),(40038,'E','14302',1348,10982),(40039,'B','12340',1334,10982),(40040,'D','43102',1324,10982),(40041,'B','30421',1325,10982),(40042,'E','14032',1328,10982),(40043,'C','40132',1329,10982),(40044,'E','32410',1332,10982),(40045,'C','12034',1336,10983),(40046,'B','23041',1334,10983),(40047,'C','24310',1339,10983),(40048,'A','24310',1345,10983),(40049,'E','41320',1332,10983),(40050,'B','24130',1343,10983),(40051,'A','01423',1322,10983),(40052,'B','20143',1347,10983),(40053,'A','34102',1333,10983),(40054,'D','23401',1337,10983),(40055,'C','41203',1329,10983),(40056,'B','10243',1338,10983),(40057,'B','01234',1326,10983),(40058,'C','41320',1343,10984),(40059,'B','42301',1338,10984),(40060,'A','20134',1334,10984),(40061,'E','40321',1326,10984),(40062,'A','03241',1339,10984),(40063,'E','34120',1327,10984),(40064,'A','23140',1329,10984),(40065,'C','23041',1341,10984),(40066,'E','12340',1323,10984),(40067,'D','21403',1347,10984),(40068,'A','12340',1337,10984),(40069,'D','32401',1344,10984),(40070,'C','42013',1324,10984),(40071,'C','43201',1341,10985),(40072,'B','20143',1346,10985),(40073,'A','02341',1336,10985),(40074,'D','13402',1332,10985),(40075,'D','24130',1329,10985),(40076,'D','21304',1322,10985),(40077,'D','34102',1339,10985),(40078,'E','03142',1344,10985),(40079,'C','43012',1328,10985),(40080,'D','34120',1334,10985),(40081,'A','03142',1325,10985),(40082,'D','43210',1333,10985),(40083,'B','42310',1337,10985),(40097,'A','02341',1328,10987),(40098,'E','24310',1345,10987),(40099,'A','04123',1347,10987),(40100,'E','24310',1348,10987),(40101,'C','42301',1343,10987),(40102,'E','31240',1335,10987),(40103,'B','30241',1334,10987),(40104,'A','03241',1339,10987),(40105,'A','20134',1327,10987),(40106,'B','10342',1336,10987),(40107,'A','02314',1323,10987),(40108,'E','04231',1333,10987),(40109,'E','12304',1341,10987),(40110,'C','42031',1341,10988),(40111,'B','40312',1324,10988),(40112,'C','13042',1326,10988),(40113,'D','41302',1328,10988),(40114,'E','13240',1323,10988),(40115,'A','03421',1342,10988),(40116,'C','34012',1322,10988),(40117,'E','12340',1330,10988),(40118,'B','34102',1334,10988),(40119,'E','32140',1344,10988),(40120,'A','04312',1339,10988),(40121,'B','10234',1346,10988),(40122,'A','01432',1337,10988),(40123,'B','10423',1333,10989),(40124,'D','21304',1344,10989),(40125,'C','31024',1340,10989),(40126,'C','03421',1326,10989),(40127,'D','12304',1345,10989),(40128,'D','24301',1336,10989),(40129,'A','03124',1338,10989),(40130,'E','34210',1324,10989),(40131,'E','02413',1348,10989),(40132,'E','32140',1347,10989),(40133,'D','30214',1330,10989),(40134,'E','02431',1342,10989),(40135,'A','02341',1328,10989),(40136,'E','41320',1325,10990),(40137,'E','42310',1346,10990),(40138,'D','40312',1329,10990),(40139,'E','43120',1348,10990),(40140,'C','34102',1333,10990),(40141,'C','14023',1338,10990),(40142,'D','31420',1343,10990),(40143,'A','02134',1344,10990),(40144,'D','34102',1339,10990),(40145,'D','34102',1328,10990),(40146,'A','31042',1342,10990),(40147,'A','03412',1332,10990),(40148,'B','12340',1335,10990),(40149,'D','43201',1341,10991),(40150,'B','20143',1346,10991),(40151,'B','02341',1336,10991),(40152,'D','13402',1332,10991),(40153,'A','24130',1329,10991),(40154,'D','21304',1322,10991),(40155,'D','34102',1339,10991),(40156,'A','03142',1344,10991),(40157,'B','43012',1328,10991),(40158,'E','34120',1334,10991),(40159,'A','03142',1325,10991),(40160,'D','43210',1333,10991),(40161,'B','42310',1337,10991),(40162,'E','34210',1348,10992),(40163,'C','34021',1329,10992),(40164,'C','43012',1325,10992),(40165,'D','14302',1323,10992),(40166,'D','42301',1336,10992),(40167,'E','32140',1340,10992),(40168,'A','04231',1327,10992),(40169,'C','42031',1322,10992),(40170,'B','20341',1344,10992),(40171,'E','31420',1328,10992),(40172,'D','20413',1330,10992),(40173,'D','13402',1341,10992),(40174,'A','04312',1342,10992),(40175,'D','34102',1344,10993),(40176,'C','21043',1326,10993),(40177,'C','42130',1330,10993),(40178,'A','21340',1333,10993),(40179,'E','03421',1322,10993),(40180,'E','31420',1341,10993),(40181,'C','31024',1328,10993),(40182,'D','31402',1332,10993),(40183,'C','30214',1327,10993),(40184,'B','10324',1324,10993),(40185,'C','14032',1338,10993),(40186,'D','23014',1329,10993),(40187,'D','03142',1340,10993),(40188,'A','02341',1323,10994),(40189,'B','13042',1335,10994),(40190,'D','42301',1348,10994),(40191,'A','12430',1342,10994),(40192,'B','12043',1329,10994),(40193,'D','12430',1343,10994),(40194,'E','20314',1327,10994),(40195,'C','02134',1341,10994),(40196,'C','12430',1322,10994),(40197,'B','20413',1338,10994),(40198,'B','40312',1332,10994),(40199,'C','01234',1345,10994),(40200,'A','04231',1347,10994),(40201,'C','14032',1323,10995),(40202,'D','23014',1334,10995),(40203,'E','14320',1325,10995),(40204,'C','42031',1322,10995),(40205,'B','20413',1336,10995),(40206,'E','43012',1329,10995),(40207,'C','21034',1328,10995),(40208,'D','23104',1324,10995),(40209,'A','23041',1345,10995),(40210,'A','23410',1340,10995),(40211,'E','31240',1348,10995),(40212,'D','43021',1335,10995),(40213,'B','10423',1332,10995),(40214,'D','14302',1348,10996),(40215,'C','41032',1336,10996),(40216,'E','31240',1347,10996),(40217,'E','13240',1325,10996),(40218,'D','23104',1337,10996),(40219,'A','02341',1334,10996),(40220,'C','13042',1341,10996),(40221,'D','40213',1340,10996),(40222,'A','14032',1342,10996),(40223,'D','23104',1345,10996),(40224,'C','21034',1339,10996),(40225,'D','04312',1333,10996),(40226,'E','13240',1338,10996),(40227,'D','42103',1345,10997),(40228,'E','24310',1330,10997),(40229,'A','02431',1340,10997),(40230,'E','30241',1329,10997),(40231,'D','32104',1344,10997),(40232,'A','04321',1333,10997),(40233,'C','12034',1323,10997),(40234,'D','32104',1346,10997),(40235,'E','42310',1339,10997),(40236,'A','01234',1335,10997),(40237,'D','32401',1341,10997),(40238,'B','34120',1337,10997),(40239,'D','43102',1326,10997),(40240,'C','12034',1334,10998),(40241,'C','34021',1332,10998),(40242,'D','43201',1324,10998),(40243,'B','40132',1325,10998),(40244,'C','41032',1348,10998),(40245,'A','02413',1338,10998),(40246,'D','12430',1340,10998),(40247,'E','34201',1322,10998),(40248,'B','34102',1326,10998),(40249,'E','43102',1337,10998),(40250,'A','03421',1335,10998),(40251,'E','32140',1347,10998),(40252,'B','34021',1343,10998),(40253,'E','41320',1343,10999),(40254,'D','42301',1338,10999),(40255,'B','20134',1334,10999),(40256,'B','40321',1326,10999),(40257,'A','03241',1339,10999),(40258,'E','34120',1327,10999),(40259,'C','23140',1329,10999),(40260,'A','23041',1341,10999),(40261,'E','12340',1323,10999),(40262,'D','21403',1347,10999),(40263,'A','12340',1337,10999),(40264,'D','32401',1344,10999),(40265,'C','42013',1324,10999),(40266,'E','34210',1348,11000),(40267,'C','34021',1329,11000),(40268,'C','43012',1325,11000),(40269,'D','14302',1323,11000),(40270,'D','42301',1336,11000),(40271,'E','32140',1340,11000),(40272,'A','04231',1327,11000),(40273,'C','42031',1322,11000),(40274,'B','20341',1344,11000),(40275,'E','31420',1328,11000),(40276,'B','20413',1330,11000),(40277,'E','13402',1341,11000),(40278,'D','04312',1342,11000),(40279,'A','21403',1329,11001),(40280,'A','02431',1346,11001),(40281,'E','42130',1336,11001),(40282,'B','23104',1345,11001),(40283,'B','12043',1333,11001),(40284,'A','42130',1337,11001),(40285,'E','24013',1335,11001),(40286,'D','41302',1340,11001),(40287,'D','03124',1327,11001),(40288,'C','31042',1326,11001),(40289,'E','41320',1334,11001),(40290,'B','01423',1342,11001),(40291,'A','03142',1347,11001),(40292,'E','21340',1324,11002),(40293,'A','03124',1346,11002),(40294,'C','02314',1342,11002),(40295,'C','34021',1333,11002),(40296,'B','20341',1336,11002),(40297,'A','30241',1345,11002),(40298,'E','34120',1328,11002),(40299,'D','43201',1330,11002),(40300,'A','03412',1334,11002),(40301,'A','01324',1344,11002),(40302,'A','04312',1339,11002),(40303,'A','10342',1329,11002),(40304,'E','12430',1332,11002),(40305,'D','13402',1338,11003),(40306,'D','23104',1323,11003),(40307,'C','40321',1345,11003),(40308,'B','30124',1326,11003),(40309,'C','42013',1325,11003),(40310,'E','42130',1334,11003),(40311,'A','02431',1336,11003),(40312,'C','32014',1324,11003),(40313,'A','04231',1342,11003),(40314,'A','01234',1339,11003),(40315,'B','10234',1327,11003),(40316,'D','24301',1332,11003),(40317,'C','01243',1344,11003),(40318,'B','30241',1346,11004),(40319,'B','10234',1330,11004),(40320,'B','20143',1334,11004),(40321,'C','21034',1343,11004),(40322,'E','34120',1338,11004),(40323,'D','43012',1341,11004),(40324,'B','40312',1347,11004),(40325,'C','20134',1342,11004),(40326,'D','13402',1339,11004),(40327,'D','40123',1344,11004),(40328,'E','21340',1328,11004),(40329,'D','32401',1336,11004),(40330,'E','42310',1324,11004),(40331,'A','02431',1334,11005),(40332,'C','13042',1343,11005),(40333,'A','04132',1327,11005),(40334,'C','21403',1323,11005),(40335,'B','40213',1345,11005),(40336,'E','21340',1337,11005),(40337,'E','12430',1325,11005),(40338,'C','21043',1335,11005),(40339,'C','13024',1339,11005),(40340,'E','41320',1348,11005),(40341,'E','32140',1338,11005),(40342,'D','32401',1347,11005),(40343,'E','32410',1322,11005),(40344,'E','24310',1330,11006),(40345,'B','23401',1343,11006),(40346,'D','42301',1323,11006),(40347,'C','32014',1344,11006),(40348,'C','01342',1339,11006),(40349,'B','10432',1332,11006),(40350,'B','31204',1342,11006),(40351,'C','42013',1340,11006),(40352,'D','21034',1345,11006),(40353,'C','23014',1338,11006),(40354,'B','20134',1322,11006),(40355,'D','43201',1328,11006),(40356,'D','34102',1336,11006),(40357,'D','24301',1326,11007),(40358,'A','03241',1334,11007),(40359,'B','20314',1344,11007),(40360,'A','02413',1339,11007),(40361,'C','13042',1348,11007),(40362,'A','03421',1346,11007),(40363,'C','42013',1343,11007),(40364,'E','24013',1328,11007),(40365,'C','21034',1341,11007),(40366,'C','01423',1340,11007),(40367,'A','03412',1337,11007),(40368,'D','42103',1323,11007),(40369,'E','13420',1336,11007),(40370,'B','30241',1346,11008),(40371,'B','10234',1330,11008),(40372,'A','20143',1334,11008),(40373,'C','21034',1343,11008),(40374,'E','34120',1338,11008),(40375,'C','43012',1341,11008),(40376,'B','40312',1347,11008),(40377,'D','20134',1342,11008),(40378,'D','13402',1339,11008),(40379,'A','40123',1344,11008),(40380,'A','21340',1328,11008),(40381,'D','32401',1336,11008),(40382,'E','42310',1324,11008),(40383,'C','21043',1335,11009),(40384,'D','32401',1324,11009),(40385,'C','43021',1323,11009),(40386,'A','01342',1347,11009),(40387,'C','32140',1337,11009),(40388,'D','24130',1345,11009),(40389,'D','24301',1344,11009),(40390,'D','02314',1333,11009),(40391,'C','31240',1326,11009),(40392,'C','21043',1325,11009),(40393,'E','12340',1346,11009),(40394,'C','10243',1329,11009),(40395,'E','24310',1343,11009),(40396,'C','12034',1336,11010),(40397,'D','23041',1334,11010),(40398,'E','24310',1339,11010),(40399,'C','24310',1345,11010),(40400,'E','41320',1332,11010),(40401,'E','24130',1343,11010),(40402,'A','01423',1322,11010),(40403,'B','20143',1347,11010),(40404,'B','34102',1333,11010),(40405,'A','23401',1337,11010),(40406,'B','41203',1329,11010),(40407,'A','10243',1338,11010),(40408,'A','01234',1326,11010),(40409,'B','20143',1323,11011),(40410,'A','02431',1334,11011),(40411,'E','31024',1326,11011),(40412,'E','14230',1333,11011),(40413,'E','01423',1339,11011),(40414,'E','41203',1348,11011),(40415,'B','40312',1340,11011),(40416,'B','30421',1343,11011),(40417,'D','43102',1342,11011),(40418,'E','31420',1330,11011),(40419,'C','32014',1346,11011),(40420,'C','10342',1345,11011),(40421,'D','20143',1338,11011),(40422,'C','12034',1338,11012),(40423,'B','32014',1334,11012),(40424,'C','21034',1325,11012),(40425,'E','31402',1339,11012),(40426,'B','04231',1345,11012),(40427,'B','30241',1346,11012),(40428,'C','34012',1330,11012),(40429,'D','31402',1326,11012),(40430,'E','40231',1322,11012),(40431,'C','21340',1342,11012),(40432,'A','02341',1324,11012),(40433,'D','32140',1348,11012),(40434,'A','03214',1332,11012),(40435,'C','12034',1336,11013),(40436,'C','23041',1334,11013),(40437,'D','24310',1339,11013),(40438,'E','24310',1345,11013),(40439,'E','41320',1332,11013),(40440,'A','24130',1343,11013),(40441,'A','01423',1322,11013),(40442,'E','20143',1347,11013),(40443,'D','34102',1333,11013),(40444,'A','23401',1337,11013),(40445,'E','41203',1329,11013),(40446,'B','10243',1338,11013),(40447,'A','01234',1326,11013),(40448,'C','32041',1332,11014),(40449,'B','42031',1343,11014),(40450,'C','02134',1341,11014),(40451,'A','02134',1345,11014),(40452,'A','03124',1346,11014),(40453,'D','41230',1333,11014),(40454,'A','04321',1326,11014),(40455,'C','13024',1344,11014),(40456,'D','43120',1323,11014),(40457,'C','14320',1328,11014),(40458,'A','03124',1322,11014),(40459,'C','34021',1324,11014),(40460,'B','03421',1334,11014),(40461,'E','31420',1326,11015),(40462,'A','01423',1339,11015),(40463,'C','41203',1333,11015),(40464,'B','20431',1332,11015),(40465,'B','30124',1330,11015),(40466,'D','12304',1334,11015),(40467,'E','31240',1341,11015),(40468,'B','30124',1346,11015),(40469,'C','34021',1336,11015),(40470,'C','34021',1348,11015),(40471,'B','03412',1343,11015),(40472,'D','41320',1345,11015),(40473,'C','13024',1325,11015),(40474,'A','01342',1332,11016),(40475,'D','12403',1346,11016),(40476,'B','34012',1344,11016),(40477,'C','43021',1323,11016),(40478,'D','21043',1341,11016),(40479,'D','14203',1339,11016),(40480,'E','21340',1330,11016),(40481,'B','40312',1328,11016),(40482,'B','30412',1327,11016),(40483,'C','41032',1345,11016),(40484,'C','32104',1333,11016),(40485,'D','40231',1340,11016),(40486,'C','02134',1329,11016),(40487,'B','30241',1346,11017),(40488,'A','10234',1330,11017),(40489,'B','20143',1334,11017),(40490,'C','21034',1343,11017),(40491,'E','34120',1338,11017),(40492,'C','43012',1341,11017),(40493,'C','40312',1347,11017),(40494,'B','20134',1342,11017),(40495,'D','13402',1339,11017),(40496,'B','40123',1344,11017),(40497,'E','21340',1328,11017),(40498,'D','32401',1336,11017),(40499,'D','42310',1324,11017),(40500,'D','21043',1335,11018),(40501,'D','32401',1324,11018),(40502,'C','43021',1323,11018),(40503,'A','01342',1347,11018),(40504,'C','32140',1337,11018),(40505,'E','24130',1345,11018),(40506,'D','24301',1344,11018),(40507,'D','02314',1333,11018),(40508,'E','31240',1326,11018),(40509,'C','21043',1325,11018),(40510,'E','12340',1346,11018),(40511,'B','10243',1329,11018),(40512,'E','24310',1343,11018),(40513,'D','24301',1343,11019),(40514,'E','24310',1328,11019),(40515,'E','13420',1347,11019),(40516,'C','42031',1346,11019),(40517,'E','21340',1330,11019),(40518,'E','20413',1348,11019),(40519,'D','23104',1336,11019),(40520,'D','40321',1337,11019),(40521,'B','42031',1341,11019),(40522,'E','41320',1327,11019),(40523,'B','20341',1332,11019),(40524,'B','40231',1338,11019),(40525,'E','43120',1325,11019),(40526,'D','34210',1348,11020),(40527,'D','34021',1329,11020),(40528,'C','43012',1325,11020),(40529,'D','14302',1323,11020),(40530,'D','42301',1336,11020),(40531,'A','32140',1340,11020),(40532,'A','04231',1327,11020),(40533,'C','42031',1322,11020),(40534,'B','20341',1344,11020),(40535,'E','31420',1328,11020),(40536,'B','20413',1330,11020),(40537,'E','13402',1341,11020),(40538,'C','04312',1342,11020),(40539,'A','14032',1323,11021),(40540,'C','23014',1334,11021),(40541,'E','14320',1325,11021),(40542,'A','42031',1322,11021),(40543,'B','20413',1336,11021),(40544,'E','43012',1329,11021),(40545,'C','21034',1328,11021),(40546,'A','23104',1324,11021),(40547,'C','23041',1345,11021),(40548,'C','23410',1340,11021),(40549,'A','31240',1348,11021),(40550,'C','43021',1335,11021),(40551,'B','10423',1332,11021),(40552,'B','20341',1347,11022),(40553,'A','04231',1344,11022),(40554,'D','43102',1346,11022),(40555,'D','12304',1328,11022),(40556,'C','34021',1323,11022),(40557,'B','10324',1338,11022),(40558,'D','23140',1345,11022),(40559,'E','43120',1325,11022),(40560,'C','42031',1334,11022),(40561,'E','24310',1336,11022),(40562,'A','01234',1324,11022),(40563,'B','20341',1330,11022),(40564,'D','01324',1329,11022),(40565,'B','42031',1341,11023),(40566,'B','40312',1324,11023),(40567,'C','13042',1326,11023),(40568,'D','41302',1328,11023),(40569,'E','13240',1323,11023),(40570,'A','03421',1342,11023),(40571,'B','34012',1322,11023),(40572,'E','12340',1330,11023),(40573,'D','34102',1334,11023),(40574,'E','32140',1344,11023),(40575,'A','04312',1339,11023),(40576,'B','10234',1346,11023),(40577,'E','01432',1337,11023),(40578,'D','14302',1348,11024),(40579,'C','41032',1336,11024),(40580,'D','31240',1347,11024),(40581,'D','13240',1325,11024),(40582,'C','23104',1337,11024),(40583,'A','02341',1334,11024),(40584,'C','13042',1341,11024),(40585,'B','40213',1340,11024),(40586,'A','14032',1342,11024),(40587,'D','23104',1345,11024),(40588,'E','21034',1339,11024),(40589,'A','04312',1333,11024),(40590,'E','13240',1338,11024),(41175,'E','21043',1184,11132),(41176,'B','02413',1172,11132),(41177,'B','21403',1189,11132),(41178,'E','24310',1188,11132),(41179,'E','41230',1182,11132),(41180,'D','43201',1188,11133),(41181,'C','23410',1173,11133),(41182,'B','10432',1174,11133),(41183,'A','01432',1172,11133),(41184,'E','43210',1171,11133),(41185,'C','21043',1184,11134),(41186,'B','02413',1172,11134),(41187,'D','21403',1189,11134),(41188,'E','24310',1188,11134),(41189,'D','41230',1182,11134),(41190,'C','21043',1184,11135),(41191,'A','02413',1172,11135),(41192,'D','21403',1189,11135),(41193,'E','24310',1188,11135),(41194,'D','41230',1182,11135),(41195,'C','31204',1173,11136),(41196,'D','43201',1184,11136),(41197,'E','21430',1176,11136),(41198,'E','34120',1182,11136),(41199,'E','41230',1180,11136),(41200,'B','04123',1173,11137),(41201,'D','14230',1188,11137),(41202,'C','24013',1183,11137),(41203,'A','03421',1180,11137),(41204,'D','34201',1165,11137),(41205,'C','32014',1188,11138),(41206,'A','01324',1179,11138),(41207,'A','04231',1165,11138),(41208,'E','42130',1183,11138),(41209,'E','21430',1172,11138),(41210,'B','41203',1169,11139),(41211,'A','20314',1181,11139),(41212,'B','13240',1182,11139),(41213,'A','04123',1176,11139),(41214,'E','31402',1183,11139),(41215,'E','03124',1179,11140),(41216,'B','30241',1176,11140),(41217,'E','23410',1165,11140),(41218,'C','01342',1182,11140),(41219,'D','42130',1183,11140),(41220,'E','21340',1171,11141),(41221,'C','14023',1172,11141),(41222,'B','30412',1183,11141),(41223,'D','13204',1165,11141),(41224,'B','40123',1188,11141),(41225,'A','04312',1174,11142),(41226,'B','40231',1181,11142),(41227,'B','21043',1169,11142),(41228,'B','20134',1184,11142),(41229,'C','43012',1171,11142),(41230,'C','03124',1179,11143),(41231,'D','30241',1176,11143),(41232,'E','23410',1165,11143),(41233,'E','01342',1182,11143),(41234,'E','42130',1183,11143),(41235,'B','21034',1176,11144),(41236,'E','43210',1180,11144),(41237,'B','13420',1172,11144),(41238,'C','40312',1173,11144),(41239,'E','41320',1183,11144),(41240,'B','31204',1173,11145),(41241,'C','43201',1184,11145),(41242,'E','21430',1176,11145),(41243,'A','34120',1182,11145),(41244,'E','41230',1180,11145),(41245,'A','03142',1184,11146),(41246,'A','01432',1188,11146),(41247,'C','43012',1189,11146),(41248,'B','21043',1169,11146),(41249,'B','40231',1183,11146),(41250,'E','23410',1174,11147),(41251,'A','02413',1179,11147),(41252,'D','34201',1184,11147),(41253,'A','04312',1188,11147),(41254,'C','30142',1183,11147),(41255,'[]','21034',1176,11148),(41256,'D','20143',1173,11149),(41257,'A','02431',1171,11149),(41258,'C','12043',1180,11149),(41259,'D','34201',1172,11149),(41260,'C','04132',1165,11149),(41261,'E','31204',1173,11150),(41262,'B','43201',1184,11150),(41263,'E','21430',1176,11150),(41264,'A','34120',1182,11150),(41265,'E','41230',1180,11150),(41266,'E','24130',1179,11151),(41267,'C','31042',1189,11151),(41268,'C','12034',1165,11151),(41269,'E','02314',1185,11151),(41270,'B','20431',1171,11151),(41271,'B','20143',1173,11152),(41272,'A','02431',1171,11152),(41273,'C','12043',1180,11152),(41274,'D','34201',1172,11152),(41275,'A','04132',1165,11152),(41276,'E','42310',1180,11153),(41277,'C','41023',1184,11153),(41278,'A','43102',1182,11153),(41279,'C','32140',1169,11153),(41280,'C','34021',1165,11153),(41281,'C','20143',1173,11154),(41282,'A','02431',1171,11154),(41283,'C','12043',1180,11154),(41284,'D','34201',1172,11154),(41285,'A','04132',1165,11154),(41286,'E','21340',1171,11155),(41287,'C','14023',1172,11155),(41288,'C','30412',1183,11155),(41289,'D','13204',1165,11155),(41290,'B','40123',1188,11155),(41291,'E','42310',1180,11156),(41292,'B','41023',1184,11156),(41293,'B','43102',1182,11156),(41294,'C','32140',1169,11156),(41295,'C','34021',1165,11156),(41296,'A','14203',1169,11157),(41297,'B','41023',1189,11157),(41298,'C','34210',1172,11157),(41299,'B','31240',1174,11157),(41300,'D','13420',1185,11157),(41301,'B','04123',1173,11158),(41302,'E','14230',1188,11158),(41303,'C','24013',1183,11158),(41304,'C','03421',1180,11158),(41305,'D','34201',1165,11158),(41306,'E','43210',1171,11159),(41307,'D','43201',1185,11159),(41308,'C','32041',1169,11159),(41309,'C','13042',1165,11159),(41310,'B','13042',1188,11159),(41311,'D','43102',1172,11160),(41312,'C','32014',1188,11160),(41313,'D','32401',1174,11160),(41314,'A','04312',1179,11160),(41315,'A','04231',1165,11160),(41316,'A','03412',1174,11161),(41317,'B','10432',1188,11161),(41318,'B','23014',1184,11161),(41319,'D','13204',1171,11161),(41320,'D','20431',1189,11161),(41321,'B','41203',1169,11162),(41322,'A','20314',1181,11162),(41323,'B','13240',1182,11162),(41324,'C','04123',1176,11162),(41325,'E','31402',1183,11162),(41326,'C','41023',1189,11163),(41327,'B','41023',1182,11163),(41328,'E','34120',1165,11163),(41329,'A','13024',1169,11163),(41330,'C','23014',1181,11163),(41331,'C','41032',1180,11164),(41332,'B','40312',1176,11164),(41333,'E','21340',1171,11164),(41334,'E','12340',1181,11164),(41335,'D','12304',1189,11164),(41336,'C','41023',1189,11165),(41337,'A','41023',1182,11165),(41338,'E','34120',1165,11165),(41339,'A','13024',1169,11165),(41340,'C','23014',1181,11165),(41346,'B','30214',1174,11167),(41347,'C','23041',1184,11167),(41348,'C','31024',1171,11167),(41349,'D','42103',1176,11167),(41350,'E','04231',1169,11167),(41351,'0','21034',1176,11168),(41352,'E','43210',1180,11168),(41353,'E','13420',1172,11168),(41354,'0','40312',1173,11168),(41355,'E','41320',1183,11168),(41356,'A','20143',1173,11169),(41357,'A','02431',1171,11169),(41358,'C','12043',1180,11169),(41359,'A','34201',1172,11169),(41360,'E','04132',1165,11169),(41361,'A','20143',1173,11170),(41362,'B','02431',1171,11170),(41363,'A','12043',1180,11170),(41364,'E','34201',1172,11170),(41365,'C','04132',1165,11170),(41366,'D','43102',1172,11171),(41367,'C','32014',1188,11171),(41368,'D','32401',1174,11171),(41369,'A','04312',1179,11171),(41370,'C','04231',1165,11171),(41371,'E','30214',1174,11172),(41372,'C','23041',1184,11172),(41373,'C','31024',1171,11172),(41374,'D','42103',1176,11172),(41375,'E','04231',1169,11172),(41376,'B','42103',1169,11173),(41377,'E','31240',1181,11173),(41378,'D','04213',1184,11173),(41379,'E','14320',1185,11173),(41380,'E','42130',1171,11173),(41381,'C','03124',1169,11174),(41382,'B','40213',1176,11174),(41383,'E','21430',1165,11174),(41384,'E','31420',1172,11174),(41385,'A','02143',1189,11174),(41386,'C','43201',1188,11175),(41387,'B','23410',1173,11175),(41388,'A','10432',1174,11175),(41389,'E','01432',1172,11175),(41390,'E','43210',1171,11175),(41396,'E','42310',1180,11177),(41397,'B','41023',1184,11177),(41398,'A','43102',1182,11177),(41399,'D','32140',1169,11177),(41400,'C','34021',1165,11177),(41401,'E','34120',1174,11178),(41402,'E','42310',1184,11178),(41403,'D','23041',1182,11178),(41404,'C','23014',1179,11178),(41405,'D','12403',1181,11178),(41406,'[]','30214',1174,11179),(41407,'C','21034',1176,11180),(41408,'E','43210',1180,11180),(41409,'A','13420',1172,11180),(41410,'D','40312',1173,11180),(41411,'E','41320',1183,11180),(41412,'E','31420',1180,11181),(41413,'B','14023',1182,11181),(41414,'E','24013',1183,11181),(41415,'C','13024',1189,11181),(41416,'E','43201',1181,11181),(41417,'A','14203',1169,11182),(41418,'B','41023',1189,11182),(41419,'D','34210',1172,11182),(41420,'E','31240',1174,11182),(41421,'D','13420',1185,11182),(41753,'D','23104',1180,11250),(41754,'B','40312',1181,11250),(41755,'B','10324',1171,11250),(41756,'A','04312',1183,11250),(41757,'C','13042',1174,11250),(41758,'A','21304',1165,11251),(41759,'C','04231',1182,11251),(41760,'C','34012',1176,11251),(41761,'A','02341',1183,11251),(41762,'B','31402',1189,11251),(41763,'A','43201',1176,11252),(41764,'#','42013',1181,11252),(41765,'E','41320',1174,11252),(41766,'C','24031',1188,11252),(41767,'A','01342',1169,11252),(41768,'D','41203',1183,11253),(41769,'#','14230',1176,11253),(41770,'E','03412',1174,11253),(41771,'D','12403',1184,11253),(41772,'B','43210',1165,11253),(41773,'E','23104',1180,11254),(41774,'C','40312',1181,11254),(41775,'D','10324',1171,11254),(41776,'D','04312',1183,11254),(41777,'E','13042',1174,11254),(41778,'E','23410',1176,11255),(41779,'B','34210',1172,11255),(41780,'C','43120',1169,11255),(41781,'E','34120',1173,11255),(41782,'E','31420',1179,11255),(41783,'C','34021',1165,11256),(41784,'B','40123',1188,11256),(41785,'C','23014',1173,11256),(41786,'C','01243',1172,11256),(41787,'E','21430',1183,11256),(41788,'E','42310',1183,11257),(41789,'D','12403',1181,11257),(41790,'B','20413',1180,11257),(41791,'B','32410',1165,11257),(41792,'A','24103',1172,11257),(41793,'D','12304',1183,11258),(41794,'C','14023',1176,11258),(41795,'D','23401',1171,11258),(41796,'B','01243',1169,11258),(41797,'E','01423',1172,11258),(41798,'A','02413',1181,11259),(41799,'C','14023',1174,11259),(41800,'A','04312',1176,11259),(41801,'D','30412',1169,11259),(41802,'E','12430',1189,11259),(41803,'C','03421',1174,11260),(41804,'C','31024',1172,11260),(41805,'A','31024',1169,11260),(41806,'C','23041',1188,11260),(41807,'C','41023',1171,11260),(41808,'B','10243',1173,11261),(41809,'B','31204',1183,11261),(41810,'B','31024',1169,11261),(41811,'A','30214',1184,11261),(41812,'E','24103',1181,11261),(41813,'D','10342',1185,11262),(41814,'C','32041',1180,11262),(41815,'B','20413',1171,11262),(41816,'A','02134',1165,11262),(41817,'E','02431',1182,11262),(41818,'E','43120',1174,11263),(41819,'A','41320',1180,11263),(41820,'A','01423',1189,11263),(41821,'C','01342',1188,11263),(41822,'B','40213',1181,11263),(41828,'C','14032',1182,11265),(41829,'D','24301',1176,11265),(41830,'E','24310',1173,11265),(41831,'B','14230',1183,11265),(41832,'B','41302',1165,11265),(41833,'E','21430',1181,11266),(41834,'B','32014',1185,11266),(41835,'C','32041',1171,11266),(41836,'E','40312',1173,11266),(41837,'A','01342',1179,11266),(41838,'D','10234',1182,11267),(41839,'C','14023',1172,11267),(41840,'D','31204',1174,11267),(41841,'A','03124',1176,11267),(41842,'D','34201',1189,11267),(41843,'A','10243',1173,11268),(41844,'D','31204',1183,11268),(41845,'B','31024',1169,11268),(41846,'B','30214',1184,11268),(41847,'A','24103',1181,11268),(41848,'B','40213',1176,11269),(41849,'C','24031',1173,11269),(41850,'E','41230',1179,11269),(41851,'D','32014',1169,11269),(41852,'E','41230',1184,11269),(41853,'0','20143',1188,11270),(41854,'0','32014',1185,11270),(41855,'0','23410',1174,11270),(41856,'0','03142',1172,11270),(41857,'0','14320',1173,11270),(41858,'E','10342',1185,11271),(41859,'C','32041',1180,11271),(41860,'B','20413',1171,11271),(41861,'A','02134',1165,11271),(41862,'A','02431',1182,11271),(41863,'E','21430',1188,11272),(41864,'A','12403',1182,11272),(41865,'B','01432',1169,11272),(41866,'E','41320',1184,11272),(41867,'A','01423',1183,11272),(41868,'B','21430',1181,11273),(41869,'D','32014',1185,11273),(41870,'C','32041',1171,11273),(41871,'B','40312',1173,11273),(41872,'A','01342',1179,11273),(41873,'E','21430',1188,11274),(41874,'E','12403',1182,11274),(41875,'B','01432',1169,11274),(41876,'C','41320',1184,11274),(41877,'A','01423',1183,11274),(41878,'D','13204',1181,11275),(41879,'B','30412',1180,11275),(41880,'C','41023',1189,11275),(41881,'C','23041',1171,11275),(41882,'D','21403',1179,11275),(41888,'E','13240',1189,11277),(41889,'A','01423',1180,11277),(41890,'A','02413',1171,11277),(41891,'E','43210',1176,11277),(41892,'C','02341',1182,11277),(41893,'A','03421',1188,11278),(41894,'E','34102',1172,11278),(41895,'C','32041',1180,11278),(41896,'C','23014',1183,11278),(41897,'A','03241',1189,11278),(41898,'C','31042',1188,11279),(41899,'A','31420',1184,11279),(41900,'B','10432',1171,11279),(41901,'E','23410',1180,11279),(41902,'D','34012',1169,11279),(41903,'E','13204',1181,11280),(41904,'B','30412',1180,11280),(41905,'A','41023',1189,11280),(41906,'C','23041',1171,11280),(41907,'D','21403',1179,11280),(41908,'C','30214',1181,11281),(41909,'E','23401',1184,11281),(41910,'D','31240',1185,11281),(41911,'E','02314',1180,11281),(41912,'B','10234',1188,11281),(41913,'E','23410',1176,11282),(41914,'C','34210',1172,11282),(41915,'C','43120',1169,11282),(41916,'B','34120',1173,11282),(41917,'E','31420',1179,11282),(41918,'E','23410',1176,11283),(41919,'E','34210',1172,11283),(41920,'C','43120',1169,11283),(41921,'E','34120',1173,11283),(41922,'E','31420',1179,11283),(41923,'E','21430',1181,11284),(41924,'B','32014',1185,11284),(41925,'C','32041',1171,11284),(41926,'E','40312',1173,11284),(41927,'A','01342',1179,11284),(41928,'C','42031',1171,11285),(41929,'A','10234',1176,11285),(41930,'D','20134',1182,11285),(41931,'C','31240',1172,11285),(41932,'B','10243',1181,11285),(41933,'C','12304',1182,11286),(41934,'E','13420',1172,11286),(41935,'A','01324',1179,11286),(41936,'B','40321',1189,11286),(41937,'C','32041',1181,11286),(41938,'D','10243',1183,11287),(41939,'C','24031',1165,11287),(41940,'B','24130',1189,11287),(41941,'E','34102',1173,11287),(41942,'C','12043',1174,11287),(41943,'E','23410',1176,11288),(41944,'C','34210',1172,11288),(41945,'B','43120',1169,11288),(41946,'B','34120',1173,11288),(41947,'E','31420',1179,11288),(41948,'E','42031',1171,11289),(41949,'B','10234',1176,11289),(41950,'D','20134',1182,11289),(41951,'C','31240',1172,11289),(41952,'B','10243',1181,11289),(41953,'A','10342',1185,11290),(41954,'C','32041',1180,11290),(41955,'B','20413',1171,11290),(41956,'A','02134',1165,11290),(41957,'E','02431',1182,11290),(41958,'C','04123',1174,11291),(41959,'B','42310',1185,11291),(41960,'B','21340',1189,11291),(41961,'B','01342',1169,11291),(41962,'E','24103',1188,11291),(41968,'E','43120',1169,11293),(41969,'E','12340',1174,11293),(41970,'A','03241',1188,11293),(41971,'A','03421',1189,11293),(41972,'C','23014',1176,11293),(41973,'D','10234',1182,11294),(41974,'C','14023',1172,11294),(41975,'E','31204',1174,11294),(41976,'E','03124',1176,11294),(41977,'C','34201',1189,11294),(41983,'E','24310',1171,11296),(41984,'B','10324',1181,11296),(41985,'D','04123',1173,11296),(41986,'E','30214',1174,11296),(41987,'A','21430',1183,11296),(41988,'A','02413',1181,11297),(41989,'C','14023',1174,11297),(41990,'A','04312',1176,11297),(41991,'D','30412',1169,11297),(41992,'E','12430',1189,11297),(41993,'D','23104',1184,11298),(41994,'E','10423',1172,11298),(41995,'B','30412',1179,11298),(41996,'B','20431',1185,11298),(41997,'C','24031',1176,11298),(41998,'D','14032',1182,11299),(41999,'E','24301',1176,11299),(42000,'B','24310',1173,11299),(42001,'E','14230',1183,11299),(42002,'D','41302',1165,11299),(42008,'D','21430',1181,11301),(42009,'B','32014',1185,11301),(42010,'C','32041',1171,11301),(42011,'E','40312',1173,11301),(42012,'D','01342',1179,11301),(42013,'E','31042',1188,11302),(42014,'B','31420',1184,11302),(42015,'B','10432',1171,11302),(42016,'E','23410',1180,11302),(42017,'C','34012',1169,11302),(42018,'C','34021',1165,11303),(42019,'B','40123',1188,11303),(42020,'E','23014',1173,11303),(42021,'C','01243',1172,11303),(42022,'E','21430',1183,11303),(42023,'B','10243',1183,11304),(42024,'C','24031',1165,11304),(42025,'E','24130',1189,11304),(42026,'D','34102',1173,11304),(42027,'C','12043',1174,11304),(42028,'E','21430',1181,11305),(42029,'C','32014',1185,11305),(42030,'C','32041',1171,11305),(42031,'B','40312',1173,11305),(42032,'A','01342',1179,11305),(42033,'C','42031',1171,11306),(42034,'B','10234',1176,11306),(42035,'D','20134',1182,11306),(42036,'C','31240',1172,11306),(42037,'D','10243',1181,11306),(42038,'A','23401',1173,11307),(42039,'E','23140',1165,11307),(42040,'C','42301',1182,11307),(42041,'C','13042',1171,11307),(42042,'A','13042',1179,11307),(42043,'D','23401',1173,11308),(42044,'E','23140',1165,11308),(42045,'A','42301',1182,11308),(42046,'C','13042',1171,11308),(42047,'C','13042',1179,11308),(42048,'C','42031',1171,11309),(42049,'B','10234',1176,11309),(42050,'C','20134',1182,11309),(42051,'E','31240',1172,11309),(42052,'B','10243',1181,11309),(42053,'A','30142',1169,11310),(42054,'C','01423',1188,11310),(42055,'C','43012',1176,11310),(42056,'A','14032',1183,11310),(42057,'B','02134',1184,11310),(42058,'D','21304',1165,11311),(42059,'E','04231',1182,11311),(42060,'C','34012',1176,11311),(42061,'D','02341',1183,11311),(42062,'B','31402',1189,11311),(42063,'E','23410',1176,11312),(42064,'C','34210',1172,11312),(42065,'C','43120',1169,11312),(42066,'B','34120',1173,11312),(42067,'B','31420',1179,11312),(42068,'[]','04123',1174,11313),(42069,'E','10234',1182,11314),(42070,'A','14023',1172,11314),(42071,'D','31204',1174,11314),(42072,'A','03124',1176,11314),(42073,'D','34201',1189,11314),(42074,'A','10243',1173,11315),(42075,'E','31204',1183,11315),(42076,'B','31024',1169,11315),(42077,'B','30214',1184,11315),(42078,'D','24103',1181,11315),(42079,'B','32401',1172,11316),(42080,'B','40213',1165,11316),(42081,'C','12034',1174,11316),(42082,'B','30124',1184,11316),(42083,'C','13402',1189,11316),(42084,'E','01324',407,11317),(42085,'C','42013',421,11317),(42086,'E','32410',434,11317),(42087,'B','40231',413,11317),(42088,'A','02341',430,11317),(42089,'C','23041',418,11317),(42090,'A','03124',409,11317),(42091,'B','20413',427,11317),(42092,'B','40231',404,11317),(42093,'A','21340',417,11317),(42094,'C','41032',414,11317),(42095,'E','41302',429,11317),(42096,'A','02413',425,11317),(42097,'C','24103',438,11317),(42098,'D','32104',432,11317),(42099,'E','03421',424,11317),(42100,'B','10423',403,11317),(42101,'E','31240',433,11317),(42102,'B','10234',429,11318),(42103,'C','21043',418,11318),(42104,'E','23410',438,11318),(42105,'B','20143',412,11318),(42106,'D','24013',428,11318),(42107,'C','24031',410,11318),(42108,'D','12403',422,11318),(42109,'A','01423',434,11318),(42110,'E','23140',414,11318),(42111,'B','14230',433,11318),(42112,'E','12430',430,11318),(42113,'B','20341',426,11318),(42114,'B','12430',403,11318),(42115,'A','03214',416,11318),(42116,'D','30421',404,11318),(42117,'B','20341',407,11318),(42118,'D','23401',432,11318),(42119,'A','40213',423,11318),(42120,'C','13024',427,11319),(42121,'E','14320',416,11319),(42122,'D','34201',412,11319),(42123,'D','34210',403,11319),(42124,'A','13024',432,11319),(42125,'B','40231',410,11319),(42126,'C','03124',437,11319),(42127,'E','13240',429,11319),(42128,'A','21403',430,11319),(42129,'E','43120',422,11319),(42130,'B','10234',426,11319),(42131,'E','21340',406,11319),(42132,'D','42031',424,11319),(42133,'B','32140',418,11319),(42134,'A','04231',414,11319),(42135,'C','41032',434,11319),(42136,'C','23401',433,11319),(42137,'B','42103',404,11319),(42138,'A','01243',420,11320),(42139,'A','02341',432,11320),(42140,'C','40213',424,11320),(42141,'E','24130',408,11320),(42142,'B','20134',428,11320),(42143,'A','14203',436,11320),(42144,'B','34120',407,11320),(42145,'E','24310',431,11320),(42146,'A','02413',426,11320),(42147,'E','41032',404,11320),(42148,'E','31240',412,11320),(42149,'A','14032',438,11320),(42150,'C','32041',422,11320),(42151,'C','21043',415,11320),(42152,'D','24103',403,11320),(42153,'D','23410',429,11320),(42154,'E','13204',433,11320),(42155,'D','01324',417,11320),(42156,'D','02134',403,11321),(42157,'B','40231',430,11321),(42158,'B','10324',419,11321),(42159,'B','30421',432,11321),(42160,'A','01342',412,11321),(42161,'D','10243',423,11321),(42162,'E','41230',416,11321),(42163,'D','34021',429,11321),(42164,'E','32140',408,11321),(42165,'E','20134',436,11321),(42166,'B','02431',437,11321),(42167,'C','13024',427,11321),(42168,'A','04231',426,11321),(42169,'D','02341',433,11321),(42170,'E','42130',406,11321),(42171,'C','14320',421,11321),(42172,'C','40321',414,11321),(42173,'A','34102',405,11321),(42174,'B','40132',417,11322),(42175,'D','20341',410,11322),(42176,'D','02341',403,11322),(42177,'E','41230',422,11322),(42178,'E','31420',427,11322),(42179,'B','14320',423,11322),(42180,'A','04213',434,11322),(42181,'B','23014',404,11322),(42182,'D','21403',433,11322),(42183,'A','21403',430,11322),(42184,'A','01234',406,11322),(42185,'C','41320',414,11322),(42186,'C','40123',420,11322),(42187,'B','30241',425,11322),(42188,'A','14203',437,11322),(42189,'B','34201',413,11322),(42190,'E','01342',429,11322),(42191,'A','03214',432,11322),(42192,'C','34012',422,11323),(42193,'A','02134',425,11323),(42194,'B','14032',407,11323),(42195,'C','34012',430,11323),(42196,'B','43120',435,11323),(42197,'C','14023',411,11323),(42198,'D','21403',417,11323),(42199,'A','03412',415,11323),(42200,'D','13204',427,11323),(42201,'A','43021',419,11323),(42202,'E','42310',437,11323),(42203,'D','24103',402,11323),(42204,'B','30412',405,11323),(42205,'E','21340',424,11323),(42206,'C','41023',429,11323),(42207,'E','31240',432,11323),(42208,'B','42301',413,11323),(42209,'D','13420',433,11323),(42210,'C','02134',403,11324),(42211,'B','40231',430,11324),(42212,'D','10324',419,11324),(42213,'E','30421',432,11324),(42214,'A','01342',412,11324),(42215,'A','10243',423,11324),(42216,'E','41230',416,11324),(42217,'D','34021',429,11324),(42218,'E','32140',408,11324),(42219,'B','20134',436,11324),(42220,'A','02431',437,11324),(42221,'C','13024',427,11324),(42222,'A','04231',426,11324),(42223,'D','02341',433,11324),(42224,'E','42130',406,11324),(42225,'D','14320',421,11324),(42226,'B','40321',414,11324),(42227,'E','34102',405,11324),(42228,'E','03412',414,11325),(42229,'C','24013',409,11325),(42230,'C','23014',420,11325),(42231,'A','40213',424,11325),(42232,'E','13420',438,11325),(42233,'D','14302',422,11325),(42234,'E','34021',403,11325),(42235,'C','13024',429,11325),(42236,'A','02341',426,11325),(42237,'A','20314',413,11325),(42238,'B','32140',436,11325),(42239,'A','02341',416,11325),(42240,'C','30142',404,11325),(42241,'A','43102',433,11325),(42242,'C','13042',406,11325),(42243,'B','10432',431,11325),(42244,'D','21403',432,11325),(42245,'B','30124',427,11325),(42246,'A','04231',433,11326),(42247,'A','30421',405,11326),(42248,'C','40123',437,11326),(42249,'E','42031',408,11326),(42250,'B','10324',422,11326),(42251,'D','24301',413,11326),(42252,'C','41023',418,11326),(42253,'E','41230',416,11326),(42254,'E','10342',429,11326),(42255,'E','04312',414,11326),(42256,'B','30214',431,11326),(42257,'B','02314',426,11326),(42258,'C','24301',432,11326),(42259,'B','12403',403,11326),(42260,'D','13240',435,11326),(42261,'A','31024',427,11326),(42262,'D','12043',423,11326),(42263,'B','13024',407,11326),(42264,'A','13240',438,11327),(42265,'C','23014',432,11327),(42266,'D','24301',414,11327),(42267,'B','42301',417,11327),(42268,'B','23041',421,11327),(42269,'A','02431',413,11327),(42270,'D','02143',431,11327),(42271,'E','23104',427,11327),(42272,'A','01423',410,11327),(42273,'E','23140',433,11327),(42274,'E','20314',426,11327),(42275,'C','31042',429,11327),(42276,'C','24013',419,11327),(42277,'C','10234',407,11327),(42278,'B','32410',405,11327),(42279,'E','34120',423,11327),(42280,'C','14023',434,11327),(42281,'D','03124',403,11327),(42282,'C','23014',431,11328),(42283,'B','20431',410,11328),(42284,'B','30412',426,11328),(42285,'C','12034',413,11328),(42286,'B','24103',424,11328),(42287,'B','23014',405,11328),(42288,'B','21034',438,11328),(42289,'A','04231',422,11328),(42290,'D','43021',403,11328),(42291,'A','04213',415,11328),(42292,'B','30241',420,11328),(42293,'A','04312',436,11328),(42294,'E','34210',433,11328),(42295,'B','24130',407,11328),(42296,'C','13024',427,11328),(42297,'E','42130',416,11328),(42298,'B','20143',432,11328),(42299,'B','12403',429,11328),(42300,'B','30241',417,11329),(42301,'B','04312',411,11329),(42302,'A','01432',428,11329),(42303,'C','12034',426,11329),(42304,'C','24013',435,11329),(42305,'A','01243',412,11329),(42306,'D','40132',422,11329),(42307,'B','20143',438,11329),(42308,'E','23014',424,11329),(42309,'D','41203',415,11329),(42310,'D','13204',403,11329),(42311,'B','30142',418,11329),(42312,'E','04231',407,11329),(42313,'C','14302',404,11329),(42314,'A','03214',432,11329),(42315,'D','42103',430,11329),(42316,'C','42013',433,11329),(42317,'A','02134',429,11329),(42318,'D','01324',436,11330),(42319,'B','30124',405,11330),(42320,'E','32401',438,11330),(42321,'D','40213',409,11330),(42322,'D','04213',431,11330),(42323,'D','14302',403,11330),(42324,'A','04312',422,11330),(42325,'D','14032',428,11330),(42326,'E','14230',416,11330),(42327,'D','40132',414,11330),(42328,'B','30142',426,11330),(42329,'E','02431',413,11330),(42330,'E','20431',418,11330),(42331,'C','13024',406,11330),(42332,'E','34120',432,11330),(42333,'E','41302',429,11330),(42334,'B','14032',433,11330),(42335,'C','43201',424,11330),(42336,'A','34012',421,11331),(42337,'E','14320',414,11331),(42338,'E','31420',435,11331),(42339,'C','41023',416,11331),(42340,'D','41203',424,11331),(42341,'D','31402',410,11331),(42342,'A','02143',428,11331),(42343,'C','41023',430,11331),(42344,'C','10324',432,11331),(42345,'E','20341',437,11331),(42346,'B','42301',413,11331),(42347,'B','30412',420,11331),(42348,'A','01423',403,11331),(42349,'A','03241',406,11331),(42350,'C','21043',429,11331),(42351,'C','32014',433,11331),(42352,'D','24103',404,11331),(42353,'A','04132',425,11331),(42354,'A','04231',433,11332),(42355,'E','30421',405,11332),(42356,'C','40123',437,11332),(42357,'C','42031',408,11332),(42358,'C','10324',422,11332),(42359,'E','24301',413,11332),(42360,'D','41023',418,11332),(42361,'C','41230',416,11332),(42362,'B','10342',429,11332),(42363,'B','04312',414,11332),(42364,'E','30214',431,11332),(42365,'B','02314',426,11332),(42366,'C','24301',432,11332),(42367,'C','12403',403,11332),(42368,'B','13240',435,11332),(42369,'A','31024',427,11332),(42370,'C','12043',423,11332),(42371,'D','13024',407,11332),(42372,'D','02341',415,11333),(42373,'A','23041',406,11333),(42374,'D','10243',424,11333),(42375,'B','02143',431,11333),(42376,'D','34102',403,11333),(42377,'B','20134',411,11333),(42378,'E','21340',428,11333),(42379,'A','20134',434,11333),(42380,'C','14230',432,11333),(42381,'D','04132',405,11333),(42382,'A','43201',437,11333),(42383,'E','24130',416,11333),(42384,'C','02431',418,11333),(42385,'E','02431',429,11333),(42386,'A','03124',412,11333),(42387,'A','03241',426,11333),(42388,'D','31240',433,11333),(42389,'B','32401',422,11333),(42390,'E','23410',434,11334),(42391,'D','10432',438,11334),(42392,'B','40213',407,11334),(42393,'C','13042',427,11334),(42394,'D','31204',425,11334),(42395,'E','14230',413,11334),(42396,'E','24130',410,11334),(42397,'B','43021',423,11334),(42398,'D','12304',416,11334),(42399,'D','13402',404,11334),(42400,'E','10342',415,11334),(42401,'E','13240',403,11334),(42402,'B','13402',421,11334),(42403,'B','01432',431,11334),(42404,'A','41032',433,11334),(42405,'B','40312',420,11334),(42406,'E','43120',432,11334),(42407,'A','21034',429,11334),(42408,'A','43120',435,11335),(42409,'D','04123',403,11335),(42410,'D','13042',438,11335),(42411,'A','04123',418,11335),(42412,'B','10342',427,11335),(42413,'C','01432',407,11335),(42414,'A','04132',405,11335),(42415,'D','42013',424,11335),(42416,'B','30142',432,11335),(42417,'E','32410',412,11335),(42418,'D','12304',433,11335),(42419,'B','14320',411,11335),(42420,'C','31042',431,11335),(42421,'E','32014',417,11335),(42422,'C','34210',421,11335),(42423,'E','23410',429,11335),(42424,'C','43021',414,11335),(42425,'C','12043',426,11335),(42426,'E','14320',402,11336),(42427,'E','31204',423,11336),(42428,'A','03412',433,11336),(42429,'D','04123',437,11336),(42430,'B','21430',428,11336),(42431,'E','12403',407,11336),(42432,'D','24103',432,11336),(42433,'A','34012',405,11336),(42434,'E','14320',414,11336),(42435,'D','12304',419,11336),(42436,'B','20431',430,11336),(42437,'C','41032',413,11336),(42438,'E','03412',422,11336),(42439,'C','31204',417,11336),(42440,'A','02431',410,11336),(42441,'D','43201',425,11336),(42442,'B','40132',429,11336),(42443,'C','40213',434,11336),(42444,'A','02341',415,11337),(42445,'B','23041',406,11337),(42446,'D','10243',424,11337),(42447,'D','02143',431,11337),(42448,'D','34102',403,11337),(42449,'B','20134',411,11337),(42450,'E','21340',428,11337),(42451,'A','20134',434,11337),(42452,'E','14230',432,11337),(42453,'D','04132',405,11337),(42454,'D','43201',437,11337),(42455,'B','24130',416,11337),(42456,'D','02431',418,11337),(42457,'A','02431',429,11337),(42458,'C','03124',412,11337),(42459,'A','03241',426,11337),(42460,'D','31240',433,11337),(42461,'A','32401',422,11337),(42462,'D','01234',436,11338),(42463,'A','01234',426,11338),(42464,'A','02134',416,11338),(42465,'C','01342',420,11338),(42466,'C','31240',438,11338),(42467,'D','30214',424,11338),(42468,'A','03142',428,11338),(42469,'C','42103',429,11338),(42470,'B','31240',422,11338),(42471,'B','42013',405,11338),(42472,'B','01324',407,11338),(42473,'C','14302',409,11338),(42474,'D','30412',431,11338),(42475,'E','41032',412,11338),(42476,'A','02431',433,11338),(42477,'C','10423',403,11338),(42478,'B','30412',414,11338),(42479,'B','01324',432,11338),(42480,'D','32104',430,11339),(42481,'A','31204',426,11339),(42482,'D','43102',422,11339),(42483,'B','32140',424,11339),(42484,'D','03214',405,11339),(42485,'E','12340',437,11339),(42486,'A','41320',436,11339),(42487,'C','12043',417,11339),(42488,'D','14032',409,11339),(42489,'E','21340',432,11339),(42490,'C','12034',406,11339),(42491,'B','31042',420,11339),(42492,'C','20134',403,11339),(42493,'A','04123',428,11339),(42494,'B','31024',414,11339),(42495,'C','21043',412,11339),(42496,'E','30214',433,11339),(42497,'E','40132',429,11339),(42498,'B','20341',403,11340),(42499,'D','40132',415,11340),(42500,'E','21430',412,11340),(42501,'D','32401',432,11340),(42502,'A','43120',407,11340),(42503,'E','14320',427,11340),(42504,'A','14032',409,11340),(42505,'A','34012',418,11340),(42506,'E','14032',429,11340),(42507,'C','01324',435,11340),(42508,'E','20413',425,11340),(42509,'C','13402',437,11340),(42510,'A','12430',430,11340),(42511,'C','10234',417,11340),(42512,'E','21340',405,11340),(42513,'A','43021',433,11340),(42514,'C','13204',422,11340),(42515,'B','24301',423,11340),(42516,'E','13240',405,11341),(42517,'A','20143',413,11341),(42518,'E','14032',434,11341),(42519,'D','32401',414,11341),(42520,'E','40321',406,11341),(42521,'B','31204',424,11341),(42522,'A','03124',427,11341),(42523,'C','23014',416,11341),(42524,'D','21403',410,11341),(42525,'D','34201',419,11341),(42526,'A','03142',433,11341),(42527,'E','21340',402,11341),(42528,'E','01342',421,11341),(42529,'D','31024',429,11341),(42530,'C','43012',438,11341),(42531,'E','42310',425,11341),(42532,'C','24130',430,11341),(42533,'B','41032',432,11341),(43074,'C','30412',405,11372),(43075,'C','04312',421,11372),(43076,'E','10342',437,11372),(43077,'A','21304',412,11372),(43078,'E','10234',411,11372),(43079,'B','34120',407,11372),(43080,'C','12430',418,11372),(43081,'A','14302',417,11372),(43082,'C','34012',426,11372),(43083,'C','12304',432,11372),(43084,'B','41023',430,11372),(43085,'B','01432',402,11372),(43086,'C','23014',428,11372),(43087,'E','30214',435,11372),(43088,'E','14320',433,11372),(43089,'A','01243',414,11372),(43090,'E','04312',429,11372),(43091,'A','42013',424,11372),(43092,'E','43120',426,11373),(43093,'E','42310',412,11373),(43094,'D','14023',431,11373),(43095,'A','01243',429,11373),(43096,'B','30214',434,11373),(43097,'C','32104',405,11373),(43098,'A','03412',422,11373),(43099,'D','30142',410,11373),(43100,'D','41023',424,11373),(43101,'E','42013',407,11373),(43102,'A','21340',402,11373),(43103,'D','24103',419,11373),(43104,'E','14320',432,11373),(43105,'B','43021',437,11373),(43106,'C','41023',433,11373),(43107,'C','01342',427,11373),(43108,'E','01423',414,11373),(43109,'E','43210',416,11373),(43110,'C','34012',422,11374),(43111,'A','02134',425,11374),(43112,'B','14032',407,11374),(43113,'C','34012',430,11374),(43114,'B','43120',435,11374),(43115,'C','14023',411,11374),(43116,'A','21403',417,11374),(43117,'A','03412',415,11374),(43118,'D','13204',427,11374),(43119,'C','43021',419,11374),(43120,'D','42310',437,11374),(43121,'D','24103',402,11374),(43122,'E','30412',405,11374),(43123,'B','21340',424,11374),(43124,'D','41023',429,11374),(43125,'B','31240',432,11374),(43126,'E','42301',413,11374),(43127,'E','13420',433,11374),(43128,'D','23014',431,11375),(43129,'B','20431',410,11375),(43130,'B','30412',426,11375),(43131,'B','12034',413,11375),(43132,'D','24103',424,11375),(43133,'A','23014',405,11375),(43134,'D','21034',438,11375),(43135,'C','04231',422,11375),(43136,'A','43021',403,11375),(43137,'A','04213',415,11375),(43138,'C','30241',420,11375),(43139,'A','04312',436,11375),(43140,'E','34210',433,11375),(43141,'B','24130',407,11375),(43142,'C','13024',427,11375),(43143,'E','42130',416,11375),(43144,'B','20143',432,11375),(43145,'B','12403',429,11375),(43146,'D','20314',432,11376),(43147,'E','13420',426,11376),(43148,'A','10234',406,11376),(43149,'B','32410',419,11376),(43150,'C','13042',405,11376),(43151,'A','03241',424,11376),(43152,'C','12034',408,11376),(43153,'A','14320',431,11376),(43154,'B','24130',428,11376),(43155,'D','43102',438,11376),(43156,'A','02413',412,11376),(43157,'C','42301',403,11376),(43158,'C','42031',421,11376),(43159,'E','24310',434,11376),(43160,'A','13024',433,11376),(43161,'C','41203',417,11376),(43162,'A','04321',414,11376),(43163,'A','04132',429,11376),(43164,'A','03241',422,11377),(43165,'C','34210',404,11377),(43166,'C','02134',437,11377),(43167,'C','24013',433,11377),(43168,'B','14302',425,11377),(43169,'A','02143',410,11377),(43170,'A','12304',420,11377),(43171,'E','32401',402,11377),(43172,'E','30241',417,11377),(43173,'B','04123',436,11377),(43174,'C','32041',430,11377),(43175,'C','13024',428,11377),(43176,'D','21403',415,11377),(43177,'B','20341',406,11377),(43178,'A','32410',423,11377),(43179,'D','12403',413,11377),(43180,'E','13420',432,11377),(43181,'E','31420',429,11377),(43182,'A','23104',412,11378),(43183,'E','42310',406,11378),(43184,'B','01324',420,11378),(43185,'A','04321',425,11378),(43186,'D','10243',433,11378),(43187,'A','04132',422,11378),(43188,'C','34021',430,11378),(43189,'E','14320',414,11378),(43190,'E','20413',423,11378),(43191,'E','13240',428,11378),(43192,'C','02413',405,11378),(43193,'D','01432',409,11378),(43194,'D','41023',434,11378),(43195,'C','10423',403,11378),(43196,'E','43021',437,11378),(43197,'D','21403',417,11378),(43198,'D','04321',429,11378),(43199,'C','40123',432,11378),(43200,'C','12034',423,11379),(43201,'D','12304',419,11379),(43202,'B','40321',416,11379),(43203,'C','04231',436,11379),(43204,'E','20134',415,11379),(43205,'C','24013',426,11379),(43206,'B','30421',429,11379),(43207,'D','43102',428,11379),(43208,'B','24031',431,11379),(43209,'A','34210',408,11379),(43210,'B','40132',402,11379),(43211,'A','01324',432,11379),(43212,'B','02134',404,11379),(43213,'E','31420',412,11379),(43214,'C','31402',437,11379),(43215,'C','20431',407,11379),(43216,'C','42031',422,11379),(43217,'D','01342',433,11379),(43218,'E','31240',429,11380),(43219,'D','13240',411,11380),(43220,'A','34102',405,11380),(43221,'B','40132',425,11380),(43222,'E','03412',420,11380),(43223,'E','24130',436,11380),(43224,'2','24031',432,11380),(43225,'2','41203',421,11380),(43226,'A','14023',423,11380),(43227,'D','10324',437,11380),(43228,'D','43201',416,11380),(43229,'E','30214',413,11380),(43230,'A','43012',431,11380),(43231,'D','43120',428,11380),(43232,'D','31204',406,11380),(43233,'C','24013',414,11380),(43234,'E','41302',433,11380),(43235,'E','24301',402,11380),(43236,'B','42130',415,11381),(43237,'E','32104',431,11381),(43238,'E','01432',412,11381),(43239,'A','04213',410,11381),(43240,'C','41023',406,11381),(43241,'E','34120',418,11381),(43242,'C','23014',428,11381),(43243,'A','41032',433,11381),(43244,'C','31240',404,11381),(43245,'A','04321',422,11381),(43246,'A','34201',417,11381),(43247,'C','41023',429,11381),(43248,'D','10423',434,11381),(43249,'E','01324',423,11381),(43250,'B','31402',437,11381),(43251,'E','30142',403,11381),(43252,'C','42013',425,11381),(43253,'C','13042',432,11381),(43254,'A','20341',420,11382),(43255,'D','23401',408,11382),(43256,'C','32140',432,11382),(43257,'E','42130',417,11382),(43258,'B','40123',402,11382),(43259,'E','32041',429,11382),(43260,'C','12034',414,11382),(43261,'C','23014',412,11382),(43262,'E','14023',427,11382),(43263,'C','12403',433,11382),(43264,'C','24031',435,11382),(43265,'B','30421',406,11382),(43266,'B','21043',430,11382),(43267,'D','32401',438,11382),(43268,'D','34201',425,11382),(43269,'A','04231',421,11382),(43270,'D','24013',424,11382),(43271,'B','23410',405,11382),(43272,'C','13024',427,11383),(43273,'E','14320',416,11383),(43274,'D','34201',412,11383),(43275,'B','34210',403,11383),(43276,'D','13024',432,11383),(43277,'A','40231',410,11383),(43278,'A','03124',437,11383),(43279,'A','13240',429,11383),(43280,'D','21403',430,11383),(43281,'C','43120',422,11383),(43282,'A','10234',426,11383),(43283,'E','21340',406,11383),(43284,'A','42031',424,11383),(43285,'B','32140',418,11383),(43286,'B','04231',414,11383),(43287,'E','41032',434,11383),(43288,'C','23401',433,11383),(43289,'C','42103',404,11383),(43290,'E','43120',426,11384),(43291,'B','42310',412,11384),(43292,'B','14023',431,11384),(43293,'B','01243',429,11384),(43294,'A','30214',434,11384),(43295,'A','32104',405,11384),(43296,'A','03412',422,11384),(43297,'C','30142',410,11384),(43298,'D','41023',424,11384),(43299,'B','42013',407,11384),(43300,'E','21340',402,11384),(43301,'E','24103',419,11384),(43302,'A','14320',432,11384),(43303,'C','43021',437,11384),(43304,'A','41023',433,11384),(43305,'A','01342',427,11384),(43306,'B','01423',414,11384),(43307,'E','43210',416,11384),(43308,'E','14230',437,11385),(43309,'B','20341',406,11385),(43310,'A','21340',403,11385),(43311,'A','04231',419,11385),(43312,'A','03142',414,11385),(43313,'C','32041',433,11385),(43314,'C','04231',417,11385),(43315,'C','41032',408,11385),(43316,'E','04312',405,11385),(43317,'B','20134',425,11385),(43318,'D','14320',429,11385),(43319,'E','41320',435,11385),(43320,'D','12403',432,11385),(43321,'C','32401',431,11385),(43322,'C','20431',423,11385),(43323,'E','34210',427,11385),(43324,'B','30241',412,11385),(43325,'B','10243',422,11385),(43326,'D','30421',429,11386),(43327,'B','32140',415,11386),(43328,'D','24130',417,11386),(43329,'A','01423',427,11386),(43330,'E','31024',436,11386),(43331,'D','04132',405,11386),(43332,'E','13420',430,11386),(43333,'C','41023',413,11386),(43334,'C','32041',402,11386),(43335,'E','13420',426,11386),(43336,'B','10432',432,11386),(43337,'C','13402',411,11386),(43338,'A','03142',423,11386),(43339,'A','03412',406,11386),(43340,'C','23014',421,11386),(43341,'B','24301',433,11386),(43342,'D','23410',438,11386),(43343,'C','14023',419,11386),(43344,'D','32401',432,11387),(43345,'D','12304',428,11387),(43346,'B','14032',423,11387),(43347,'E','12430',406,11387),(43348,'C','32014',403,11387),(43349,'B','10432',426,11387),(43350,'E','21340',413,11387),(43351,'E','42031',429,11387),(43352,'A','32410',420,11387),(43353,'B','40312',422,11387),(43354,'A','03421',434,11387),(43355,'C','13024',414,11387),(43356,'B','23041',405,11387),(43357,'C','13204',416,11387),(43358,'E','23140',408,11387),(43359,'D','24301',430,11387),(43360,'C','43021',438,11387),(43361,'E','21304',433,11387),(43362,'A','01234',414,11388),(43363,'A','12430',407,11388),(43364,'D','41230',423,11388),(43365,'D','34102',432,11388),(43366,'B','20413',427,11388),(43367,'B','40321',419,11388),(43368,'D','02341',433,11388),(43369,'A','01234',431,11388),(43370,'A','04123',413,11388),(43371,'A','04321',436,11388),(43372,'B','20341',425,11388),(43373,'D','41302',402,11388),(43374,'C','12034',437,11388),(43375,'E','12430',429,11388),(43376,'C','43210',404,11388),(43377,'C','21034',421,11388),(43378,'B','20143',408,11388),(43379,'B','20314',417,11388),(43380,'E','40132',421,11389),(43381,'B','14302',435,11389),(43382,'B','12430',410,11389),(43383,'B','31240',402,11389),(43384,'B','34102',418,11389),(43385,'E','21340',414,11389),(43386,'E','02341',429,11389),(43387,'C','43201',437,11389),(43388,'E','14302',431,11389),(43389,'D','30412',425,11389),(43390,'D','30214',424,11389),(43391,'E','24310',428,11389),(43392,'A','43210',433,11389),(43393,'A','32410',405,11389),(43394,'E','21043',432,11389),(43395,'B','02413',407,11389),(43396,'D','04312',417,11389),(43397,'E','14302',413,11389),(43398,'B','13024',436,11390),(43399,'B','14230',411,11390),(43400,'A','01342',402,11390),(43401,'D','13420',417,11390),(43402,'C','13204',429,11390),(43403,'D','40132',414,11390),(43404,'D','32410',437,11390),(43405,'C','14203',433,11390),(43406,'E','30412',405,11390),(43407,'A','04123',420,11390),(43408,'E','14320',428,11390),(43409,'C','42103',432,11390),(43410,'C','41230',431,11390),(43411,'D','32401',423,11390),(43412,'D','01324',413,11390),(43413,'B','23401',425,11390),(43414,'A','10234',421,11390),(43415,'E','24103',407,11390),(43416,'D','10423',421,11391),(43417,'B','12430',402,11391),(43418,'E','41230',406,11391),(43419,'B','40123',430,11391),(43420,'E','43210',428,11391),(43421,'E','04213',404,11391),(43422,'B','10423',426,11391),(43423,'C','14032',408,11391),(43424,'E','31024',436,11391),(43425,'C','34102',424,11391),(43426,'A','02314',419,11391),(43427,'D','30412',438,11391),(43428,'D','31204',413,11391),(43429,'E','23140',432,11391),(43430,'E','41032',429,11391),(43431,'A','01342',414,11391),(43432,'C','23041',416,11391),(43433,'C','32401',433,11391),(43434,'E','30421',429,11392),(43435,'E','32140',415,11392),(43436,'A','24130',417,11392),(43437,'A','01423',427,11392),(43438,'A','31024',436,11392),(43439,'D','04132',405,11392),(43440,'E','13420',430,11392),(43441,'C','41023',413,11392),(43442,'C','32041',402,11392),(43443,'E','13420',426,11392),(43444,'B','10432',432,11392),(43445,'D','13402',411,11392),(43446,'D','03142',423,11392),(43447,'A','03412',406,11392),(43448,'C','23014',421,11392),(43449,'D','24301',433,11392),(43450,'D','23410',438,11392),(43451,'A','14023',419,11392),(43452,'D','43102',426,11393),(43453,'D','30421',417,11393),(43454,'B','10342',420,11393),(43455,'B','03241',423,11393),(43456,'C','43210',429,11393),(43457,'B','31240',402,11393),(43458,'D','34201',430,11393),(43459,'C','31024',407,11393),(43460,'C','13420',411,11393),(43461,'B','03214',405,11393),(43462,'A','30241',413,11393),(43463,'C','13042',422,11393),(43464,'A','04132',427,11393),(43465,'E','13402',432,11393),(43466,'C','31420',435,11393),(43467,'B','01243',433,11393),(43468,'E','21430',437,11393),(43469,'C','01342',414,11393),(43470,'D','32104',413,11394),(43471,'D','32410',437,11394),(43472,'A','34210',404,11394),(43473,'E','24103',434,11394),(43474,'D','42301',406,11394),(43475,'C','21340',409,11394),(43476,'B','30142',430,11394),(43477,'B','43102',418,11394),(43478,'E','23140',417,11394),(43479,'B','32401',426,11394),(43480,'E','20413',423,11394),(43481,'3','43012',414,11394),(43482,'D','14302',427,11394),(43483,'A','20314',429,11394),(43484,'D','14230',403,11394),(43485,'D','32014',422,11394),(43486,'B','40321',432,11394),(43487,'D','34021',433,11394),(43488,'D','10423',421,11395),(43489,'A','12430',402,11395),(43490,'E','41230',406,11395),(43491,'C','40123',430,11395),(43492,'E','43210',428,11395),(43493,'E','04213',404,11395),(43494,'E','10423',426,11395),(43495,'B','14032',408,11395),(43496,'C','31024',436,11395),(43497,'C','34102',424,11395),(43498,'A','02314',419,11395),(43499,'E','30412',438,11395),(43500,'D','31204',413,11395),(43501,'E','23140',432,11395),(43502,'B','41032',429,11395),(43503,'A','01342',414,11395),(43504,'C','23041',416,11395),(43505,'D','32401',433,11395),(43506,'E','30421',403,11396),(43507,'D','12430',409,11396),(43508,'E','14302',431,11396),(43509,'D','01234',436,11396),(43510,'E','31420',417,11396),(43511,'C','34021',412,11396),(43512,'D','43021',433,11396),(43513,'B','41320',423,11396),(43514,'C','20143',422,11396),(43515,'C','13240',437,11396),(43516,'B','40231',426,11396),(43517,'B','10342',427,11396),(43518,'E','42013',404,11396),(43519,'D','42103',406,11396),(43520,'B','24103',419,11396),(43521,'A','32041',414,11396),(43522,'D','41320',432,11396),(43523,'D','23410',429,11396),(43524,'C','21034',420,11397),(43525,'D','40321',411,11397),(43526,'C','14023',432,11397),(43527,'D','34120',417,11397),(43528,'C','21034',415,11397),(43529,'D','13402',428,11397),(43530,'A','23014',429,11397),(43531,'D','42103',425,11397),(43532,'B','30214',407,11397),(43533,'E','03214',413,11397),(43534,'C','23104',437,11397),(43535,'C','03412',433,11397),(43536,'A','04231',435,11397),(43537,'E','32410',430,11397),(43538,'A','02431',422,11397),(43539,'A','02431',402,11397),(43540,'C','41032',423,11397),(43541,'A','04213',404,11397),(43542,'B','20413',426,11398),(43543,'E','14032',429,11398),(43544,'C','04132',415,11398),(43545,'A','04132',406,11398),(43546,'E','12340',419,11398),(43547,'C','43201',436,11398),(43548,'E','21340',432,11398),(43549,'B','20431',405,11398),(43550,'C','30241',417,11398),(43551,'B','30124',431,11398),(43552,'D','41320',438,11398),(43553,'B','10234',428,11398),(43554,'D','32140',423,11398),(43555,'B','23014',411,11398),(43556,'A','30124',421,11398),(43557,'B','30412',413,11398),(43558,'A','31042',403,11398),(43559,'A','42310',433,11398),(43560,'A','02341',415,11399),(43561,'C','23041',406,11399),(43562,'C','10243',424,11399),(43563,'C','02143',431,11399),(43564,'B','34102',403,11399),(43565,'B','20134',411,11399),(43566,'E','21340',428,11399),(43567,'A','20134',434,11399),(43568,'E','14230',432,11399),(43569,'D','04132',405,11399),(43570,'D','43201',437,11399),(43571,'E','24130',416,11399),(43572,'A','02431',418,11399),(43573,'A','02431',429,11399),(43574,'D','03124',412,11399),(43575,'A','03241',426,11399),(43576,'E','31240',433,11399),(43577,'D','32401',422,11399),(43578,'A','32401',432,11400),(43579,'D','12304',428,11400),(43580,'C','14032',423,11400),(43581,'C','12430',406,11400),(43582,'C','32014',403,11400),(43583,'B','10432',426,11400),(43584,'E','21340',413,11400),(43585,'B','42031',429,11400),(43586,'C','32410',420,11400),(43587,'C','40312',422,11400),(43588,'D','03421',434,11400),(43589,'B','13024',414,11400),(43590,'B','23041',405,11400),(43591,'D','13204',416,11400),(43592,'E','23140',408,11400),(43593,'D','24301',430,11400),(43594,'C','43021',438,11400),(43595,'A','21304',433,11400),(43596,'A','03412',414,11401),(43597,'A','24013',409,11401),(43598,'C','23014',420,11401),(43599,'A','40213',424,11401),(43600,'E','13420',438,11401),(43601,'D','14302',422,11401),(43602,'C','34021',403,11401),(43603,'C','13024',429,11401),(43604,'A','02341',426,11401),(43605,'B','20314',413,11401),(43606,'D','32140',436,11401),(43607,'B','02341',416,11401),(43608,'E','30142',404,11401),(43609,'D','43102',433,11401),(43610,'D','13042',406,11401),(43611,'B','10432',431,11401),(43612,'D','21403',432,11401),(43613,'B','30124',427,11401),(43614,'A','14230',437,11402),(43615,'B','20341',406,11402),(43616,'A','21340',403,11402),(43617,'B','04231',419,11402),(43618,'A','03142',414,11402),(43619,'D','32041',433,11402),(43620,'C','04231',417,11402),(43621,'C','41032',408,11402),(43622,'B','04312',405,11402),(43623,'B','20134',425,11402),(43624,'E','14320',429,11402),(43625,'E','41320',435,11402),(43626,'A','12403',432,11402),(43627,'E','32401',431,11402),(43628,'E','20431',423,11402),(43629,'E','34210',427,11402),(43630,'B','30241',412,11402),(43631,'E','10243',422,11402),(43632,'B','30421',438,11403),(43633,'E','13420',410,11403),(43634,'A','01234',425,11403),(43635,'C','13402',433,11403),(43636,'A','14203',430,11403),(43637,'E','24130',435,11403),(43638,'B','40321',406,11403),(43639,'E','31240',414,11403),(43640,'A','12430',424,11403),(43641,'C','10423',405,11403),(43642,'C','21304',418,11403),(43643,'D','02314',417,11403),(43644,'D','32041',412,11403),(43645,'A','10243',429,11403),(43646,'E','34210',432,11403),(43647,'A','12403',422,11403),(43648,'B','30142',427,11403),(43649,'C','01234',402,11403),(43650,'B','40132',421,11404),(43651,'E','14302',435,11404),(43652,'A','12430',410,11404),(43653,'D','31240',402,11404),(43654,'A','34102',418,11404),(43655,'E','21340',414,11404),(43656,'B','02341',429,11404),(43657,'C','43201',437,11404),(43658,'D','14302',431,11404),(43659,'B','30412',425,11404),(43660,'D','30214',424,11404),(43661,'E','24310',428,11404),(43662,'A','43210',433,11404),(43663,'C','32410',405,11404),(43664,'B','21043',432,11404),(43665,'B','02413',407,11404),(43666,'E','04312',417,11404),(43667,'D','14302',413,11404),(43668,'B','03241',422,11405),(43669,'A','34210',404,11405),(43670,'C','02134',437,11405),(43671,'C','24013',433,11405),(43672,'D','14302',425,11405),(43673,'B','02143',410,11405),(43674,'B','12304',420,11405),(43675,'E','32401',402,11405),(43676,'B','30241',417,11405),(43677,'D','04123',436,11405),(43678,'C','32041',430,11405),(43679,'C','13024',428,11405),(43680,'E','21403',415,11405),(43681,'D','20341',406,11405),(43682,'C','32410',423,11405),(43683,'D','12403',413,11405),(43684,'E','13420',432,11405),(43685,'E','31420',429,11405),(43686,'A','21034',420,11406),(43687,'D','40321',411,11406),(43688,'A','14023',432,11406),(43689,'B','34120',417,11406),(43690,'E','21034',415,11406),(43691,'D','13402',428,11406),(43692,'C','23014',429,11406),(43693,'D','42103',425,11406),(43694,'C','30214',407,11406),(43695,'B','03214',413,11406),(43696,'A','23104',437,11406),(43697,'A','03412',433,11406),(43698,'B','04231',435,11406),(43699,'E','32410',430,11406),(43700,'E','02431',422,11406),(43701,'A','02431',402,11406),(43702,'C','41032',423,11406),(43703,'A','04213',404,11406),(43704,'E','32140',418,11407),(43705,'A','01423',428,11407),(43706,'B','01342',408,11407),(43707,'A','01324',421,11407),(43708,'A','02314',416,11407),(43709,'C','20413',436,11407),(43710,'C','34201',438,11407),(43711,'E','34210',414,11407),(43712,'D','12043',433,11407),(43713,'E','02341',407,11407),(43714,'A','01243',425,11407),(43715,'A','20431',431,11407),(43716,'A','13024',403,11407),(43717,'B','43012',423,11407),(43718,'C','42301',405,11407),(43719,'E','41302',413,11407),(43720,'B','40213',429,11407),(43721,'A','34012',432,11407),(43722,'A','02431',413,11408),(43723,'C','14230',417,11408),(43724,'D','31042',403,11408),(43725,'E','23401',437,11408),(43726,'B','31240',415,11408),(43727,'D','34012',418,11408),(43728,'A','30421',405,11408),(43729,'E','32140',429,11408),(43730,'A','23410',423,11408),(43731,'C','34102',410,11408),(43732,'D','03142',436,11408),(43733,'E','34210',407,11408),(43734,'B','04123',433,11408),(43735,'C','14230',427,11408),(43736,'A','02341',425,11408),(43737,'E','30412',422,11408),(43738,'A','03421',430,11408),(43739,'D','12304',432,11408),(43740,'A','23104',412,11409),(43741,'D','42310',406,11409),(43742,'A','01324',420,11409),(43743,'C','04321',425,11409),(43744,'B','10243',433,11409),(43745,'E','04132',422,11409),(43746,'C','34021',430,11409),(43747,'E','14320',414,11409),(43748,'C','20413',423,11409),(43749,'D','13240',428,11409),(43750,'E','02413',405,11409),(43751,'D','01432',409,11409),(43752,'C','41023',434,11409),(43753,'B','10423',403,11409),(43754,'D','43021',437,11409),(43755,'A','21403',417,11409),(43756,'A','04321',429,11409),(43757,'B','40123',432,11409),(43758,'C','14230',437,11410),(43759,'B','20341',406,11410),(43760,'E','21340',403,11410),(43761,'B','04231',419,11410),(43762,'B','03142',414,11410),(43763,'C','32041',433,11410),(43764,'C','04231',417,11410),(43765,'A','41032',408,11410),(43766,'E','04312',405,11410),(43767,'C','20134',425,11410),(43768,'D','14320',429,11410),(43769,'A','41320',435,11410),(43770,'A','12403',432,11410),(43771,'B','32401',431,11410),(43772,'C','20431',423,11410),(43773,'D','34210',427,11410),(43774,'C','30241',412,11410),(43775,'A','10243',422,11410),(43776,'D','42130',415,11411),(43777,'E','32104',431,11411),(43778,'A','01432',412,11411),(43779,'E','04213',410,11411),(43780,'C','41023',406,11411),(43781,'A','34120',418,11411),(43782,'C','23014',428,11411),(43783,'E','41032',433,11411),(43784,'C','31240',404,11411),(43785,'B','04321',422,11411),(43786,'E','34201',417,11411),(43787,'B','41023',429,11411),(43788,'D','10423',434,11411),(43789,'E','01324',423,11411),(43790,'C','31402',437,11411),(43791,'B','30142',403,11411),(43792,'C','42013',425,11411),(43793,'B','13042',432,11411),(43794,'A','03241',422,11412),(43795,'C','34210',404,11412),(43796,'A','02134',437,11412),(43797,'C','24013',433,11412),(43798,'D','14302',425,11412),(43799,'B','02143',410,11412),(43800,'D','12304',420,11412),(43801,'D','32401',402,11412),(43802,'C','30241',417,11412),(43803,'C','04123',436,11412),(43804,'C','32041',430,11412),(43805,'E','13024',428,11412),(43806,'D','21403',415,11412),(43807,'B','20341',406,11412),(43808,'D','32410',423,11412),(43809,'A','12403',413,11412),(43810,'E','13420',432,11412),(43811,'E','31420',429,11412),(43812,'E','02431',413,11413),(43813,'C','14230',417,11413),(43814,'A','31042',403,11413),(43815,'E','23401',437,11413),(43816,'E','31240',415,11413),(43817,'C','34012',418,11413),(43818,'B','30421',405,11413),(43819,'E','32140',429,11413),(43820,'C','23410',423,11413),(43821,'E','34102',410,11413),(43822,'D','03142',436,11413),(43823,'B','34210',407,11413),(43824,'C','04123',433,11413),(43825,'E','14230',427,11413),(43826,'A','02341',425,11413),(43827,'E','30412',422,11413),(43828,'A','03421',430,11413),(43829,'D','12304',432,11413),(43830,'B','20341',408,11414),(43831,'D','02413',430,11414),(43832,'C','03241',416,11414),(43833,'D','40231',413,11414),(43834,'C','20134',402,11414),(43835,'B','40321',436,11414),(43836,'A','03412',432,11414),(43837,'C','34201',437,11414),(43838,'D','41023',421,11414),(43839,'A','14203',429,11414),(43840,'C','41320',405,11414),(43841,'E','30421',424,11414),(43842,'C','03124',419,11414),(43843,'D','20143',406,11414),(43844,'D','24013',415,11414),(43845,'C','03214',425,11414),(43846,'C','03412',433,11414),(43847,'D','30241',427,11414),(43848,'D','12034',423,11415),(43849,'D','12304',419,11415),(43850,'B','40321',416,11415),(43851,'B','04231',436,11415),(43852,'E','20134',415,11415),(43853,'C','24013',426,11415),(43854,'B','30421',429,11415),(43855,'A','43102',428,11415),(43856,'C','24031',431,11415),(43857,'E','34210',408,11415),(43858,'C','40132',402,11415),(43859,'A','01324',432,11415),(43860,'B','02134',404,11415),(43861,'A','31420',412,11415),(43862,'B','31402',437,11415),(43863,'A','20431',407,11415),(43864,'C','42031',422,11415),(43865,'D','01342',433,11415),(43866,'C','30241',417,11416),(43867,'D','04312',411,11416),(43868,'A','01432',428,11416),(43869,'C','12034',426,11416),(43870,'E','24013',435,11416),(43871,'C','01243',412,11416),(43872,'B','40132',422,11416),(43873,'C','20143',438,11416),(43874,'E','23014',424,11416),(43875,'D','41203',415,11416),(43876,'C','13204',403,11416),(43877,'A','30142',418,11416),(43878,'A','04231',407,11416),(43879,'D','14302',404,11416),(43880,'A','03214',432,11416),(43881,'D','42103',430,11416),(43882,'A','42013',433,11416),(43883,'B','02134',429,11416),(43884,'0','21340',437,11417),(43885,'0','10324',435,11417),(43886,'0','43021',422,11417),(43887,'0','23014',428,11417),(43888,'0','12304',410,11417),(43889,'0','34201',426,11417),(43890,'0','23104',430,11417),(43891,'0','40132',404,11417),(43892,'0','34102',406,11417),(43893,'0','41203',402,11417),(43894,'0','30214',416,11417),(43895,'0','14320',429,11417),(43896,'0','32401',413,11417),(43897,'0','31240',419,11417),(43898,'0','42301',415,11417),(43899,'0','20413',433,11417),(43900,'0','13420',424,11417),(43901,'0','31042',432,11417),(43902,'0','42103',431,11418),(43903,'0','34021',422,11418),(43904,'0','24130',408,11418),(43905,'0','41032',425,11418),(43906,'0','10243',434,11418),(43907,'0','10342',406,11418),(43908,'0','42130',420,11418),(43909,'0','34201',415,11418),(43910,'0','24013',432,11418),(43911,'0','12043',429,11418),(43912,'0','04312',403,11418),(43913,'0','30124',416,11418),(43914,'0','34201',413,11418),(43915,'0','23410',404,11418),(43916,'0','21043',437,11418),(43917,'0','01324',433,11418),(43918,'0','02314',423,11418),(43919,'0','31420',428,11418),(43920,'0','34012',422,11419),(43921,'0','02134',425,11419),(43922,'0','14032',407,11419),(43923,'0','34012',430,11419),(43924,'0','43120',435,11419),(43925,'0','14023',411,11419),(43926,'0','21403',417,11419),(43927,'0','03412',415,11419),(43928,'0','13204',427,11419),(43929,'0','43021',419,11419),(43930,'0','42310',437,11419),(43931,'0','24103',402,11419),(43932,'0','30412',405,11419),(43933,'0','21340',424,11419),(43934,'0','41023',429,11419),(43935,'0','31240',432,11419),(43936,'0','42301',413,11419),(43937,'0','13420',433,11419),(43938,'0','14320',402,11420),(43939,'0','31204',423,11420),(43940,'0','03412',433,11420),(43941,'0','04123',437,11420),(43942,'0','21430',428,11420),(43943,'0','12403',407,11420),(43944,'0','24103',432,11420),(43945,'0','34012',405,11420),(43946,'0','14320',414,11420),(43947,'0','12304',419,11420),(43948,'0','20431',430,11420),(43949,'0','41032',413,11420),(43950,'0','03412',422,11420),(43951,'0','31204',417,11420),(43952,'0','02431',410,11420),(43953,'0','43201',425,11420),(43954,'0','40132',429,11420),(43955,'0','40213',434,11420),(43956,'0','14203',421,11421),(43957,'0','41320',420,11421),(43958,'0','03142',423,11421),(43959,'0','02314',427,11421),(43960,'0','41320',402,11421),(43961,'0','41203',408,11421),(43962,'0','12403',432,11421),(43963,'0','03421',429,11421),(43964,'0','02143',425,11421),(43965,'0','41203',407,11421),(43966,'0','24130',404,11421),(43967,'0','40231',414,11421),(43968,'0','02431',430,11421),(43969,'0','30241',437,11421),(43970,'0','43120',435,11421),(43971,'0','34201',417,11421),(43972,'0','12043',413,11421),(43973,'0','02314',433,11421),(43974,'0','43120',426,11422),(43975,'0','42310',412,11422),(43976,'0','14023',431,11422),(43977,'0','01243',429,11422),(43978,'0','30214',434,11422),(43979,'0','32104',405,11422),(43980,'0','03412',422,11422),(43981,'0','30142',410,11422),(43982,'0','41023',424,11422),(43983,'0','42013',407,11422),(43984,'0','21340',402,11422),(43985,'0','24103',419,11422),(43986,'0','14320',432,11422),(43987,'0','43021',437,11422),(43988,'0','41023',433,11422),(43989,'0','01342',427,11422),(43990,'0','01423',414,11422),(43991,'0','43210',416,11422),(43992,'0','30421',438,11423),(43993,'0','13420',410,11423),(43994,'0','01234',425,11423),(43995,'0','13402',433,11423),(43996,'0','14203',430,11423),(43997,'0','24130',435,11423),(43998,'0','40321',406,11423),(43999,'0','31240',414,11423),(44000,'0','12430',424,11423),(44001,'0','10423',405,11423),(44002,'0','21304',418,11423),(44003,'0','02314',417,11423),(44004,'0','32041',412,11423),(44005,'0','10243',429,11423),(44006,'0','34210',432,11423),(44007,'0','12403',422,11423),(44008,'0','30142',427,11423),(44009,'0','01234',402,11423),(44010,'0','14320',433,11424),(44011,'0','01243',437,11424),(44012,'0','21034',427,11424),(44013,'0','14230',434,11424),(44014,'0','30214',411,11424),(44015,'0','01234',425,11424),(44016,'0','42310',418,11424),(44017,'0','21043',407,11424),(44018,'0','40312',424,11424),(44019,'0','31240',402,11424),(44020,'0','24103',431,11424),(44021,'0','31024',421,11424),(44022,'0','12043',412,11424),(44023,'0','42310',404,11424),(44024,'0','42031',417,11424),(44025,'0','31402',432,11424),(44026,'0','12034',414,11424),(44027,'0','30214',429,11424),(44028,'C','14023',432,11425),(44029,'B','42031',437,11425),(44030,'A','32041',423,11425),(44031,'B','34021',407,11425),(44032,'B','10243',433,11425),(44033,'D','31420',412,11425),(44034,'D','12304',425,11425),(44035,'E','04132',429,11425),(44036,'C','34021',404,11425),(44037,'D','32104',410,11425),(44038,'A','24130',434,11425),(44039,'D','43102',416,11425),(44040,'C','31042',427,11425),(44041,'E','42301',421,11425),(44042,'A','31024',403,11425),(44043,'B','10243',419,11425),(44044,'D','43201',430,11425),(44045,'C','30214',415,11425),(44046,'D','01234',414,11426),(44047,'C','12430',407,11426),(44048,'A','41230',423,11426),(44049,'D','34102',432,11426),(44050,'B','20413',427,11426),(44051,'B','40321',419,11426),(44052,'D','02341',433,11426),(44053,'A','01234',431,11426),(44054,'D','04123',413,11426),(44055,'D','04321',436,11426),(44056,'B','20341',425,11426),(44057,'2','41302',402,11426),(44058,'B','12034',437,11426),(44059,'A','12430',429,11426),(44060,'C','43210',404,11426),(44061,'C','21034',421,11426),(44062,'B','20143',408,11426),(44063,'C','20314',417,11426),(44064,'A','01243',421,11427),(44065,'B','02413',435,11427),(44066,'A','31402',404,11427),(44067,'E','21430',428,11427),(44068,'A','41032',437,11427),(44069,'A','10342',431,11427),(44070,'A','14320',418,11427),(44071,'D','12304',413,11427),(44072,'D','32041',433,11427),(44073,'C','31204',417,11427),(44074,'C','20134',414,11427),(44075,'A','03241',408,11427),(44076,'A','02431',429,11427),(44077,'B','30214',402,11427),(44078,'B','12403',406,11427),(44079,'A','42310',423,11427),(44080,'E','43120',425,11427),(44081,'B','30142',432,11427),(44082,'C','34012',421,11428),(44083,'E','14320',414,11428),(44084,'E','31420',435,11428),(44085,'C','41023',416,11428),(44086,'C','41203',424,11428),(44087,'A','31402',410,11428),(44088,'A','02143',428,11428),(44089,'C','41023',430,11428),(44090,'B','10324',432,11428),(44091,'E','20341',437,11428),(44092,'D','42301',413,11428),(44093,'D','30412',420,11428),(44094,'A','01423',403,11428),(44095,'A','03241',406,11428),(44096,'C','21043',429,11428),(44097,'E','32014',433,11428),(44098,'D','24103',404,11428),(44099,'D','04132',425,11428),(44100,'A','01342',411,11429),(44101,'E','42310',422,11429),(44102,'C','32014',406,11429),(44103,'D','31204',404,11429),(44104,'C','23140',429,11429),(44105,'E','24130',431,11429),(44106,'D','03412',437,11429),(44107,'A','03412',433,11429),(44108,'D','03412',424,11429),(44109,'D','43201',412,11429),(44110,'D','43201',434,11429),(44111,'E','21340',414,11429),(44112,'E','14230',428,11429),(44113,'A','02314',426,11429),(44114,'C','12403',403,11429),(44115,'E','13240',419,11429),(44116,'B','20431',432,11429),(44117,'A','12340',417,11429),(44118,'C','34021',427,11430),(44119,'B','10234',432,11430),(44120,'B','34201',436,11430),(44121,'E','40312',422,11430),(44122,'D','14302',406,11430),(44123,'A','31240',415,11430),(44124,'A','34120',409,11430),(44125,'A','04213',418,11430),(44126,'C','21043',413,11430),(44127,'C','10423',433,11430),(44128,'B','41320',424,11430),(44129,'B','40231',404,11430),(44130,'C','40213',403,11430),(44131,'E','42310',429,11430),(44132,'B','30124',425,11430),(44133,'D','34120',438,11430),(44134,'A','43012',431,11430),(44135,'D','13204',417,11430),(44136,'E','32140',418,11431),(44137,'A','01423',428,11431),(44138,'A','01342',408,11431),(44139,'C','01324',421,11431),(44140,'A','02314',416,11431),(44141,'B','20413',436,11431),(44142,'D','34201',438,11431),(44143,'E','34210',414,11431),(44144,'C','12043',433,11431),(44145,'D','02341',407,11431),(44146,'B','01243',425,11431),(44147,'B','20431',431,11431),(44148,'A','13024',403,11431),(44149,'C','43012',423,11431),(44150,'C','42301',405,11431),(44151,'D','41302',413,11431),(44152,'B','40213',429,11431),(44153,'C','34012',432,11431),(44154,'C','34021',430,11432),(44155,'D','12304',422,11432),(44156,'B','24031',433,11432),(44157,'E','02134',436,11432),(44158,'E','01324',407,11432),(44159,'B','10423',413,11432),(44160,'C','31042',416,11432),(44161,'B','21043',424,11432),(44162,'A','01432',428,11432),(44163,'A','04132',420,11432),(44164,'A','14032',437,11432),(44165,'A','04312',405,11432),(44166,'B','30214',429,11432),(44167,'E','41230',415,11432),(44168,'C','04312',409,11432),(44169,'B','10423',432,11432),(44170,'E','32410',425,11432),(44171,'D','42103',402,11432),(44172,'A','01342',411,11433),(44173,'C','42310',422,11433),(44174,'D','32014',406,11433),(44175,'A','31204',404,11433),(44176,'C','23140',429,11433),(44177,'E','24130',431,11433),(44178,'C','03412',437,11433),(44179,'C','03412',433,11433),(44180,'B','03412',424,11433),(44181,'A','43201',412,11433),(44182,'A','43201',434,11433),(44183,'C','21340',414,11433),(44184,'D','14230',428,11433),(44185,'A','02314',426,11433),(44186,'D','12403',403,11433),(44187,'E','13240',419,11433),(44188,'E','20431',432,11433),(44189,'D','12340',417,11433),(44190,'C','02341',415,11434),(44191,'C','23041',406,11434),(44192,'B','10243',424,11434),(44193,'D','02143',431,11434),(44194,'A','34102',403,11434),(44195,'A','20134',411,11434),(44196,'B','21340',428,11434),(44197,'A','20134',434,11434),(44198,'A','14230',432,11434),(44199,'D','04132',405,11434),(44200,'C','43201',437,11434),(44201,'E','24130',416,11434),(44202,'E','02431',418,11434),(44203,'A','02431',429,11434),(44204,'A','03124',412,11434),(44205,'A','03241',426,11434),(44206,'E','31240',433,11434),(44207,'D','32401',422,11434),(44208,'A','20314',432,11435),(44209,'E','13420',426,11435),(44210,'B','10234',406,11435),(44211,'B','32410',419,11435),(44212,'E','13042',405,11435),(44213,'E','03241',424,11435),(44214,'C','12034',408,11435),(44215,'A','14320',431,11435),(44216,'E','24130',428,11435),(44217,'E','43102',438,11435),(44218,'A','02413',412,11435),(44219,'B','42301',403,11435),(44220,'C','42031',421,11435),(44221,'E','24310',434,11435),(44222,'D','13024',433,11435),(44223,'E','41203',417,11435),(44224,'A','04321',414,11435),(44225,'A','04132',429,11435),(44226,'D','13204',428,11436),(44227,'D','14023',430,11436),(44228,'C','12430',407,11436),(44229,'B','02314',403,11436),(44230,'B','40312',408,11436),(44231,'A','32014',416,11436),(44232,'D','21340',437,11436),(44233,'A','42031',424,11436),(44234,'E','40312',433,11436),(44235,'B','10423',425,11436),(44236,'B','34120',415,11436),(44237,'A','04321',429,11436),(44238,'E','04231',418,11436),(44239,'D','02143',413,11436),(44240,'A','03412',422,11436),(44241,'A','32104',405,11436),(44242,'A','02413',432,11436),(44243,'C','31042',436,11436),(44244,'B','20341',408,11437),(44245,'A','02413',430,11437),(44246,'A','03241',416,11437),(44247,'D','40231',413,11437),(44248,'B','20134',402,11437),(44249,'B','40321',436,11437),(44250,'A','03412',432,11437),(44251,'E','34201',437,11437),(44252,'E','41023',421,11437),(44253,'C','14203',429,11437),(44254,'C','41320',405,11437),(44255,'B','30421',424,11437),(44256,'A','03124',419,11437),(44257,'B','20143',406,11437),(44258,'C','24013',415,11437),(44259,'A','03214',425,11437),(44260,'A','03412',433,11437),(44261,'B','30241',427,11437),(44262,'B','14203',407,11438),(44263,'E','10243',412,11438),(44264,'D','23104',408,11438),(44265,'A','40132',415,11438),(44266,'B','42103',404,11438),(44267,'A','03241',432,11438),(44268,'A','04321',420,11438),(44269,'A','04312',430,11438),(44270,'D','31024',403,11438),(44271,'B','10243',417,11438),(44272,'E','42130',436,11438),(44273,'E','13240',428,11438),(44274,'D','20314',438,11438),(44275,'C','21043',422,11438),(44276,'B','30142',429,11438),(44277,'E','42301',424,11438),(44278,'C','32014',425,11438),(44279,'E','30421',433,11438),(44280,'A','30412',405,11439),(44281,'E','04312',421,11439),(44282,'A','10342',437,11439),(44283,'D','21304',412,11439),(44284,'E','10234',411,11439),(44285,'B','34120',407,11439),(44286,'E','12430',418,11439),(44287,'D','14302',417,11439),(44288,'E','34012',426,11439),(44289,'D','12304',432,11439),(44290,'C','41023',430,11439),(44291,'A','01432',402,11439),(44292,'C','23014',428,11439),(44293,'B','30214',435,11439),(44294,'B','14320',433,11439),(44295,'A','01243',414,11439),(44296,'A','04312',429,11439),(44297,'D','42013',424,11439),(44298,'B','43120',435,11440),(44299,'B','04123',403,11440),(44300,'A','13042',438,11440),(44301,'A','04123',418,11440),(44302,'B','10342',427,11440),(44303,'C','01432',407,11440),(44304,'A','04132',405,11440),(44305,'D','42013',424,11440),(44306,'B','30142',432,11440),(44307,'E','32410',412,11440),(44308,'A','12304',433,11440),(44309,'E','14320',411,11440),(44310,'C','31042',431,11440),(44311,'B','32014',417,11440),(44312,'A','34210',421,11440),(44313,'E','23410',429,11440),(44314,'B','43021',414,11440),(44315,'C','12043',426,11440),(44316,'D','32104',430,11441),(44317,'D','31204',426,11441),(44318,'B','43102',422,11441),(44319,'D','32140',424,11441),(44320,'A','03214',405,11441),(44321,'E','12340',437,11441),(44322,'A','41320',436,11441),(44323,'A','12043',417,11441),(44324,'C','14032',409,11441),(44325,'E','21340',432,11441),(44326,'C','12034',406,11441),(44327,'D','31042',420,11441),(44328,'D','20134',403,11441),(44329,'B','04123',428,11441),(44330,'C','31024',414,11441),(44331,'A','21043',412,11441),(44332,'B','30214',433,11441),(44333,'E','40132',429,11441),(44352,'C','21034',420,11443),(44353,'B','40321',411,11443),(44354,'C','14023',432,11443),(44355,'D','34120',417,11443),(44356,'E','21034',415,11443),(44357,'D','13402',428,11443),(44358,'A','23014',429,11443),(44359,'D','42103',425,11443),(44360,'B','30214',407,11443),(44361,'D','03214',413,11443),(44362,'E','23104',437,11443),(44363,'A','03412',433,11443),(44364,'D','04231',435,11443),(44365,'E','32410',430,11443),(44366,'A','02431',422,11443),(44367,'E','02431',402,11443),(44368,'A','41032',423,11443),(44369,'C','04213',404,11443),(44370,'C','41203',407,11444),(44371,'D','04123',404,11444),(44372,'B','10423',413,11444),(44373,'B','31024',438,11444),(44374,'C','31042',414,11444),(44375,'D','14302',434,11444),(44376,'E','13204',433,11444),(44377,'C','40312',418,11444),(44378,'C','12043',417,11444),(44379,'D','31402',432,11444),(44380,'D','32104',430,11444),(44381,'A','41023',423,11444),(44382,'A','14032',429,11444),(44383,'C','24031',408,11444),(44384,'C','41023',421,11444),(44385,'E','31240',425,11444),(44386,'C','42031',427,11444),(44387,'B','30412',402,11444),(44388,'B','43120',435,11445),(44389,'A','04123',403,11445),(44390,'C','13042',438,11445),(44391,'C','04123',418,11445),(44392,'A','10342',427,11445),(44393,'C','01432',407,11445),(44394,'B','04132',405,11445),(44395,'C','42013',424,11445),(44396,'C','30142',432,11445),(44397,'B','32410',412,11445),(44398,'A','12304',433,11445),(44399,'E','14320',411,11445),(44400,'E','31042',431,11445),(44401,'C','32014',417,11445),(44402,'D','34210',421,11445),(44403,'E','23410',429,11445),(44404,'D','43021',414,11445),(44405,'C','12043',426,11445),(44406,'B','30421',429,11446),(44407,'A','32140',415,11446),(44408,'D','24130',417,11446),(44409,'E','01423',427,11446),(44410,'E','31024',436,11446),(44411,'C','04132',405,11446),(44412,'D','13420',430,11446),(44413,'D','41023',413,11446),(44414,'C','32041',402,11446),(44415,'E','13420',426,11446),(44416,'B','10432',432,11446),(44417,'D','13402',411,11446),(44418,'D','03142',423,11446),(44419,'D','03412',406,11446),(44420,'A','23014',421,11446),(44421,'B','24301',433,11446),(44422,'A','23410',438,11446),(44423,'E','14023',419,11446),(44424,'E','02134',403,11447),(44425,'B','40231',430,11447),(44426,'B','10324',419,11447),(44427,'B','30421',432,11447),(44428,'E','01342',412,11447),(44429,'B','10243',423,11447),(44430,'E','41230',416,11447),(44431,'C','34021',429,11447),(44432,'E','32140',408,11447),(44433,'D','20134',436,11447),(44434,'E','02431',437,11447),(44435,'C','13024',427,11447),(44436,'A','04231',426,11447),(44437,'B','02341',433,11447),(44438,'E','42130',406,11447),(44439,'C','14320',421,11447),(44440,'A','40321',414,11447),(44441,'A','34102',405,11447),(44442,'B','20341',408,11448),(44443,'A','02413',430,11448),(44444,'E','03241',416,11448),(44445,'C','40231',413,11448),(44446,'D','20134',402,11448),(44447,'B','40321',436,11448),(44448,'A','03412',432,11448),(44449,'E','34201',437,11448),(44450,'C','41023',421,11448),(44451,'D','14203',429,11448),(44452,'C','41320',405,11448),(44453,'E','30421',424,11448),(44454,'A','03124',419,11448),(44455,'B','20143',406,11448),(44456,'E','24013',415,11448),(44457,'A','03214',425,11448),(44458,'A','03412',433,11448),(44459,'B','30241',427,11448),(44460,'B','21034',420,11449),(44461,'A','40321',411,11449),(44462,'B','14023',432,11449),(44463,'C','34120',417,11449),(44464,'E','21034',415,11449),(44465,'E','13402',428,11449),(44466,'C','23014',429,11449),(44467,'D','42103',425,11449),(44468,'E','30214',407,11449),(44469,'D','03214',413,11449),(44470,'C','23104',437,11449),(44471,'A','03412',433,11449),(44472,'E','04231',435,11449),(44473,'E','32410',430,11449),(44474,'A','02431',422,11449),(44475,'A','02431',402,11449),(44476,'C','41032',423,11449),(44477,'C','04213',404,11449),(44478,'D','30421',429,11450),(44479,'D','32140',415,11450),(44480,'A','24130',417,11450),(44481,'A','01423',427,11450),(44482,'C','31024',436,11450),(44483,'A','04132',405,11450),(44484,'E','13420',430,11450),(44485,'A','41023',413,11450),(44486,'C','32041',402,11450),(44487,'E','13420',426,11450),(44488,'B','10432',432,11450),(44489,'E','13402',411,11450),(44490,'B','03142',423,11450),(44491,'A','03412',406,11450),(44492,'B','23014',421,11450),(44493,'D','24301',433,11450),(44494,'D','23410',438,11450),(44495,'D','14023',419,11450),(44496,'E','12034',423,11451),(44497,'D','12304',419,11451),(44498,'D','40321',416,11451),(44499,'D','04231',436,11451),(44500,'A','20134',415,11451),(44501,'C','24013',426,11451),(44502,'E','30421',429,11451),(44503,'D','43102',428,11451),(44504,'E','24031',431,11451),(44505,'E','34210',408,11451),(44506,'C','40132',402,11451),(44507,'A','01324',432,11451),(44508,'A','02134',404,11451),(44509,'E','31420',412,11451),(44510,'C','31402',437,11451),(44511,'B','20431',407,11451),(44512,'C','42031',422,11451),(44513,'A','01342',433,11451),(44514,'C','14230',437,11452),(44515,'B','20341',406,11452),(44516,'E','21340',403,11452),(44517,'D','04231',419,11452),(44518,'A','03142',414,11452),(44519,'C','32041',433,11452),(44520,'C','04231',417,11452),(44521,'C','41032',408,11452),(44522,'E','04312',405,11452),(44523,'B','20134',425,11452),(44524,'A','14320',429,11452),(44525,'B','41320',435,11452),(44526,'D','12403',432,11452),(44527,'A','32401',431,11452),(44528,'B','20431',423,11452),(44529,'E','34210',427,11452),(44530,'C','30241',412,11452),(44531,'B','10243',422,11452),(44532,'D','32401',432,11453),(44533,'D','12304',428,11453),(44534,'C','14032',423,11453),(44535,'E','12430',406,11453),(44536,'B','32014',403,11453),(44537,'B','10432',426,11453),(44538,'D','21340',413,11453),(44539,'B','42031',429,11453),(44540,'E','32410',420,11453),(44541,'B','40312',422,11453),(44542,'D','03421',434,11453),(44543,'C','13024',414,11453),(44544,'C','23041',405,11453),(44545,'D','13204',416,11453),(44546,'E','23140',408,11453),(44547,'D','24301',430,11453),(44548,'C','43021',438,11453),(44549,'E','21304',433,11453),(44550,'A','02134',433,11454),(44551,'B','24301',438,11454),(44552,'E','32410',413,11454),(44553,'A','01423',425,11454),(44554,'E','24130',414,11454),(44555,'A','10423',422,11454),(44556,'A','43210',411,11454),(44557,'D','14203',405,11454),(44558,'A','21430',424,11454),(44559,'B','40312',430,11454),(44560,'D','14203',432,11454),(44561,'E','14032',417,11454),(44562,'A','43201',407,11454),(44563,'E','32410',420,11454),(44564,'B','34201',428,11454),(44565,'E','30241',435,11454),(44566,'D','42301',429,11454),(44567,'E','32104',403,11454),(44568,'A','23410',434,11455),(44569,'C','10432',438,11455),(44570,'A','40213',407,11455),(44571,'E','13042',427,11455),(44572,'D','31204',425,11455),(44573,'E','14230',413,11455),(44574,'D','24130',410,11455),(44575,'C','43021',423,11455),(44576,'B','12304',416,11455),(44577,'E','13402',404,11455),(44578,'C','10342',415,11455),(44579,'E','13240',403,11455),(44580,'D','13402',421,11455),(44581,'A','01432',431,11455),(44582,'A','41032',433,11455),(44583,'E','40312',420,11455),(44584,'E','43120',432,11455),(44585,'A','21034',429,11455),(44586,'B','20341',408,11456),(44587,'A','02413',430,11456),(44588,'A','03241',416,11456),(44589,'C','40231',413,11456),(44590,'E','20134',402,11456),(44591,'B','40321',436,11456),(44592,'A','03412',432,11456),(44593,'B','34201',437,11456),(44594,'C','41023',421,11456),(44595,'C','14203',429,11456),(44596,'E','41320',405,11456),(44597,'C','30421',424,11456),(44598,'A','03124',419,11456),(44599,'B','20143',406,11456),(44600,'C','24013',415,11456),(44601,'A','03214',425,11456),(44602,'C','03412',433,11456),(44603,'B','30241',427,11456),(44604,'D','23014',431,11457),(44605,'D','20431',410,11457),(44606,'B','30412',426,11457),(44607,'A','12034',413,11457),(44608,'C','24103',424,11457),(44609,'C','23014',405,11457),(44610,'A','21034',438,11457),(44611,'C','04231',422,11457),(44612,'C','43021',403,11457),(44613,'D','04213',415,11457),(44614,'C','30241',420,11457),(44615,'A','04312',436,11457),(44616,'B','34210',433,11457),(44617,'B','24130',407,11457),(44618,'C','13024',427,11457),(44619,'E','42130',416,11457),(44620,'B','20143',432,11457),(44621,'B','12403',429,11457),(44622,'D','13204',414,11458),(44623,'D','20143',402,11458),(44624,'A','21043',412,11458),(44625,'A','34021',437,11458),(44626,'D','12304',422,11458),(44627,'E','13240',417,11458),(44628,'B','43021',420,11458),(44629,'A','02341',433,11458),(44630,'D','43210',436,11458),(44631,'E','13240',424,11458),(44632,'C','42103',425,11458),(44633,'B','02143',429,11458),(44634,'E','14230',430,11458),(44635,'B','23401',409,11458),(44636,'D','41203',404,11458),(44637,'C','10342',407,11458),(44638,'A','24130',427,11458),(44639,'D','14203',432,11458),(44640,'E','04231',433,11459),(44641,'D','30421',405,11459),(44642,'A','40123',437,11459),(44643,'2','42031',408,11459),(44644,'D','10324',422,11459),(44645,'B','24301',413,11459),(44646,'B','41023',418,11459),(44647,'B','41230',416,11459),(44648,'A','10342',429,11459),(44649,'A','04312',414,11459),(44650,'E','30214',431,11459),(44651,'A','02314',426,11459),(44652,'E','24301',432,11459),(44653,'D','12403',403,11459),(44654,'E','13240',435,11459),(44655,'C','31024',427,11459),(44656,'E','12043',423,11459),(44657,'C','13024',407,11459),(44658,'A','14230',437,11460),(44659,'B','20341',406,11460),(44660,'A','21340',403,11460),(44661,'A','04231',419,11460),(44662,'A','03142',414,11460),(44663,'D','32041',433,11460),(44664,'B','04231',417,11460),(44665,'C','41032',408,11460),(44666,'C','04312',405,11460),(44667,'B','20134',425,11460),(44668,'D','14320',429,11460),(44669,'E','41320',435,11460),(44670,'D','12403',432,11460),(44671,'D','32401',431,11460),(44672,'B','20431',423,11460),(44673,'E','34210',427,11460),(44674,'C','30241',412,11460),(44675,'E','10243',422,11460),(44676,'A','42103',431,11461),(44677,'C','34021',422,11461),(44678,'C','24130',408,11461),(44679,'C','41032',425,11461),(44680,'C','10243',434,11461),(44681,'D','10342',406,11461),(44682,'C','42130',420,11461),(44683,'B','34201',415,11461),(44684,'C','24013',432,11461),(44685,'A','12043',429,11461),(44686,'B','04312',403,11461),(44687,'B','30124',416,11461),(44688,'D','34201',413,11461),(44689,'E','23410',404,11461),(44690,'C','21043',437,11461),(44691,'E','01324',433,11461),(44692,'E','02314',423,11461),(44693,'E','31420',428,11461),(44694,'A','01234',414,11462),(44695,'B','12430',407,11462),(44696,'A','41230',423,11462),(44697,'C','34102',432,11462),(44698,'A','20413',427,11462),(44699,'B','40321',419,11462),(44700,'D','02341',433,11462),(44701,'E','01234',431,11462),(44702,'A','04123',413,11462),(44703,'A','04321',436,11462),(44704,'B','20341',425,11462),(44705,'A','41302',402,11462),(44706,'C','12034',437,11462),(44707,'E','12430',429,11462),(44708,'E','43210',404,11462),(44709,'D','21034',421,11462),(44710,'B','20143',408,11462),(44711,'A','20314',417,11462),(44712,'B','30412',405,11463),(44713,'A','04312',421,11463),(44714,'D','10342',437,11463),(44715,'A','21304',412,11463),(44716,'C','10234',411,11463),(44717,'E','34120',407,11463),(44718,'E','12430',418,11463),(44719,'C','14302',417,11463),(44720,'C','34012',426,11463),(44721,'A','12304',432,11463),(44722,'C','41023',430,11463),(44723,'C','01432',402,11463),(44724,'C','23014',428,11463),(44725,'E','30214',435,11463),(44726,'B','14320',433,11463),(44727,'A','01243',414,11463),(44728,'A','04312',429,11463),(44729,'A','42013',424,11463),(44730,'D','40132',421,11464),(44731,'D','14302',435,11464),(44732,'B','12430',410,11464),(44733,'E','31240',402,11464),(44734,'D','34102',418,11464),(44735,'E','21340',414,11464),(44736,'B','02341',429,11464),(44737,'A','43201',437,11464),(44738,'A','14302',431,11464),(44739,'B','30412',425,11464),(44740,'B','30214',424,11464),(44741,'E','24310',428,11464),(44742,'E','43210',433,11464),(44743,'E','32410',405,11464),(44744,'C','21043',432,11464),(44745,'C','02413',407,11464),(44746,'E','04312',417,11464),(44747,'D','14302',413,11464),(44748,'E','13240',405,11465),(44749,'B','20143',413,11465),(44750,'C','14032',434,11465),(44751,'D','32401',414,11465),(44752,'A','40321',406,11465),(44753,'B','31204',424,11465),(44754,'A','03124',427,11465),(44755,'C','23014',416,11465),(44756,'D','21403',410,11465),(44757,'A','34201',419,11465),(44758,'D','03142',433,11465),(44759,'C','21340',402,11465),(44760,'A','01342',421,11465),(44761,'C','31024',429,11465),(44762,'D','43012',438,11465),(44763,'E','42310',425,11465),(44764,'E','24130',430,11465),(44765,'C','41032',432,11465),(44766,'A','23014',431,11466),(44767,'B','20431',410,11466),(44768,'A','30412',426,11466),(44769,'E','12034',413,11466),(44770,'C','24103',424,11466),(44771,'A','23014',405,11466),(44772,'A','21034',438,11466),(44773,'A','04231',422,11466),(44774,'E','43021',403,11466),(44775,'B','04213',415,11466),(44776,'A','30241',420,11466),(44777,'E','04312',436,11466),(44778,'B','34210',433,11466),(44779,'B','24130',407,11466),(44780,'C','13024',427,11466),(44781,'E','42130',416,11466),(44782,'B','20143',432,11466),(44783,'A','12403',429,11466),(44784,'B','01243',420,11467),(44785,'A','02341',432,11467),(44786,'A','40213',424,11467),(44787,'C','24130',408,11467),(44788,'D','20134',428,11467),(44789,'B','14203',436,11467),(44790,'B','34120',407,11467),(44791,'E','24310',431,11467),(44792,'A','02413',426,11467),(44793,'C','41032',404,11467),(44794,'C','31240',412,11467),(44795,'A','14032',438,11467),(44796,'B','32041',422,11467),(44797,'D','21043',415,11467),(44798,'A','24103',403,11467),(44799,'E','23410',429,11467),(44800,'D','13204',433,11467),(44801,'C','01324',417,11467),(44802,'C','14032',405,11468),(44803,'A','32140',407,11468),(44804,'D','13240',424,11468),(44805,'E','42310',403,11468),(44806,'A','04312',411,11468),(44807,'C','40312',418,11468),(44808,'C','32014',436,11468),(44809,'E','43201',427,11468),(44810,'D','20314',413,11468),(44811,'E','12304',415,11468),(44812,'C','04213',416,11468),(44813,'A','42103',438,11468),(44814,'E','42310',431,11468),(44815,'E','43120',426,11468),(44816,'D','13420',421,11468),(44817,'B','10342',432,11468),(44818,'A','02431',433,11468),(44819,'C','13024',429,11468),(44820,'E','13240',405,11469),(44821,'B','20143',413,11469),(44822,'E','14032',434,11469),(44823,'D','32401',414,11469),(44824,'E','40321',406,11469),(44825,'B','31204',424,11469),(44826,'A','03124',427,11469),(44827,'A','23014',416,11469),(44828,'B','21403',410,11469),(44829,'D','34201',419,11469),(44830,'D','03142',433,11469),(44831,'E','21340',402,11469),(44832,'B','01342',421,11469),(44833,'C','31024',429,11469),(44834,'D','43012',438,11469),(44835,'E','42310',425,11469),(44836,'E','24130',430,11469),(44837,'C','41032',432,11469),(44838,'D','23104',412,11470),(44839,'E','42310',406,11470),(44840,'A','01324',420,11470),(44841,'A','04321',425,11470),(44842,'D','10243',433,11470),(44843,'E','04132',422,11470),(44844,'C','34021',430,11470),(44845,'E','14320',414,11470),(44846,'B','20413',423,11470),(44847,'E','13240',428,11470),(44848,'A','02413',405,11470),(44849,'A','01432',409,11470),(44850,'C','41023',434,11470),(44851,'B','10423',403,11470),(44852,'C','43021',437,11470),(44853,'A','21403',417,11470),(44854,'D','04321',429,11470),(44855,'C','40123',432,11470),(44856,'C','10234',429,11471),(44857,'C','21043',418,11471),(44858,'D','23410',438,11471),(44859,'B','20143',412,11471),(44860,'B','24013',428,11471),(44861,'C','24031',410,11471),(44862,'D','12403',422,11471),(44863,'D','01423',434,11471),(44864,'B','23140',414,11471),(44865,'B','14230',433,11471),(44866,'E','12430',430,11471),(44867,'C','20341',426,11471),(44868,'E','12430',403,11471),(44869,'A','03214',416,11471),(44870,'A','30421',404,11471),(44871,'D','20341',407,11471),(44872,'D','23401',432,11471),(44873,'B','40213',423,11471),(44874,'A','01324',407,11472),(44875,'C','42013',421,11472),(44876,'E','32410',434,11472),(44877,'B','40231',413,11472),(44878,'E','02341',430,11472),(44879,'A','23041',418,11472),(44880,'A','03124',409,11472),(44881,'B','20413',427,11472),(44882,'C','40231',404,11472),(44883,'A','21340',417,11472),(44884,'C','41032',414,11472),(44885,'E','41302',429,11472),(44886,'A','02413',425,11472),(44887,'E','24103',438,11472),(44888,'C','32104',432,11472),(44889,'C','03421',424,11472),(44890,'E','10423',403,11472),(44891,'D','31240',433,11472),(44892,'B','03412',414,11473),(44893,'C','24013',409,11473),(44894,'A','23014',420,11473),(44895,'D','40213',424,11473),(44896,'C','13420',438,11473),(44897,'D','14302',422,11473),(44898,'D','34021',403,11473),(44899,'D','13024',429,11473),(44900,'A','02341',426,11473),(44901,'B','20314',413,11473),(44902,'D','32140',436,11473),(44903,'A','02341',416,11473),(44904,'E','30142',404,11473),(44905,'C','43102',433,11473),(44906,'D','13042',406,11473),(44907,'A','10432',431,11473),(44908,'B','21403',432,11473),(44909,'A','30124',427,11473),(44910,'E','14230',404,11474),(44911,'C','31240',426,11474),(44912,'D','32104',412,11474),(44913,'B','31420',419,11474),(44914,'D','32104',414,11474),(44915,'A','04132',409,11474),(44916,'E','14302',428,11474),(44917,'D','13204',422,11474),(44918,'D','43021',417,11474),(44919,'B','41032',438,11474),(44920,'A','04213',402,11474),(44921,'A','03412',406,11474),(44922,'C','43120',431,11474),(44923,'E','02413',435,11474),(44924,'C','01342',429,11474),(44925,'B','24130',424,11474),(44926,'A','40123',433,11474),(44927,'E','23410',432,11474),(44928,'A','03241',422,11475),(44929,'A','34210',404,11475),(44930,'B','02134',437,11475),(44931,'B','24013',433,11475),(44932,'D','14302',425,11475),(44933,'A','02143',410,11475),(44934,'C','12304',420,11475),(44935,'D','32401',402,11475),(44936,'C','30241',417,11475),(44937,'E','04123',436,11475),(44938,'C','32041',430,11475),(44939,'C','13024',428,11475),(44940,'C','21403',415,11475),(44941,'B','20341',406,11475),(44942,'C','32410',423,11475),(44943,'D','12403',413,11475),(44944,'E','13420',432,11475),(44945,'E','31420',429,11475),(44946,'A','14320',433,11476),(44947,'C','01243',437,11476),(44948,'C','21034',427,11476),(44949,'E','14230',434,11476),(44950,'B','30214',411,11476),(44951,'A','01234',425,11476),(44952,'E','42310',418,11476),(44953,'D','21043',407,11476),(44954,'D','40312',424,11476),(44955,'B','31240',402,11476),(44956,'D','24103',431,11476),(44957,'C','31024',421,11476),(44958,'B','12043',412,11476),(44959,'E','42310',404,11476),(44960,'C','42031',417,11476),(44961,'D','31402',432,11476),(44962,'C','12034',414,11476),(44963,'C','30214',429,11476),(44964,'B','41203',418,11477),(44965,'E','03124',415,11477),(44966,'D','24301',426,11477),(44967,'E','34120',403,11477),(44968,'C','13024',406,11477),(44969,'B','20413',427,11477),(44970,'C','20314',405,11477),(44971,'A','04123',421,11477),(44972,'B','40312',416,11477),(44973,'C','14032',408,11477),(44974,'D','21403',435,11477),(44975,'E','14032',430,11477),(44976,'E','42130',412,11477),(44977,'A','21430',429,11477),(44978,'C','21043',433,11477),(44979,'E','32410',432,11477),(44980,'E','14230',423,11477),(44981,'D','10243',438,11477),(44982,'E','14230',404,11478),(44983,'E','31240',426,11478),(44984,'B','32104',412,11478),(44985,'E','31420',419,11478),(44986,'C','32104',414,11478),(44987,'E','04132',409,11478),(44988,'B','14302',428,11478),(44989,'B','13204',422,11478),(44990,'C','43021',417,11478),(44991,'A','41032',438,11478),(44992,'A','04213',402,11478),(44993,'A','03412',406,11478),(44994,'C','43120',431,11478),(44995,'C','02413',435,11478),(44996,'E','01342',429,11478),(44997,'D','24130',424,11478),(44998,'B','40123',433,11478),(44999,'E','23410',432,11478),(45000,'B','14230',437,11479),(45001,'B','20341',406,11479),(45002,'B','21340',403,11479),(45003,'A','04231',419,11479),(45004,'B','03142',414,11479),(45005,'D','32041',433,11479),(45006,'D','04231',417,11479),(45007,'C','41032',408,11479),(45008,'A','04312',405,11479),(45009,'B','20134',425,11479),(45010,'E','14320',429,11479),(45011,'E','41320',435,11479),(45012,'A','12403',432,11479),(45013,'B','32401',431,11479),(45014,'C','20431',423,11479),(45015,'E','34210',427,11479),(45016,'B','30241',412,11479),(45017,'E','10243',422,11479),(45018,'E','12034',423,11480),(45019,'A','12304',419,11480),(45020,'D','40321',416,11480),(45021,'B','04231',436,11480),(45022,'E','20134',415,11480),(45023,'C','24013',426,11480),(45024,'B','30421',429,11480),(45025,'E','43102',428,11480),(45026,'C','24031',431,11480),(45027,'E','34210',408,11480),(45028,'C','40132',402,11480),(45029,'D','01324',432,11480),(45030,'A','02134',404,11480),(45031,'D','31420',412,11480),(45032,'E','31402',437,11480),(45033,'B','20431',407,11480),(45034,'C','42031',422,11480),(45035,'D','01342',433,11480),(45036,'A','03142',406,11481),(45037,'E','02431',437,11481),(45038,'B','40321',429,11481),(45039,'A','32401',421,11481),(45040,'A','03124',430,11481),(45041,'D','34201',418,11481),(45042,'B','34201',424,11481),(45043,'A','01324',426,11481),(45044,'D','43201',413,11481),(45045,'D','20314',403,11481),(45046,'C','24031',408,11481),(45047,'E','41320',434,11481),(45048,'C','23041',428,11481),(45049,'C','14023',432,11481),(45050,'B','04213',433,11481),(45051,'B','20314',415,11481),(45052,'E','34012',417,11481),(45053,'C','31240',404,11481),(45054,'D','32401',432,11482),(45055,'D','12304',428,11482),(45056,'C','14032',423,11482),(45057,'A','12430',406,11482),(45058,'E','32014',403,11482),(45059,'B','10432',426,11482),(45060,'A','21340',413,11482),(45061,'C','42031',429,11482),(45062,'E','32410',420,11482),(45063,'B','40312',422,11482),(45064,'D','03421',434,11482),(45065,'A','13024',414,11482),(45066,'C','23041',405,11482),(45067,'D','13204',416,11482),(45068,'E','23140',408,11482),(45069,'D','24301',430,11482),(45070,'E','43021',438,11482),(45071,'E','21304',433,11482),(45072,'E','43102',404,11483),(45073,'D','13042',423,11483),(45074,'A','21043',418,11483),(45075,'E','21340',412,11483),(45076,'C','43012',406,11483),(45077,'D','13024',422,11483),(45078,'C','41230',416,11483),(45079,'D','32014',430,11483),(45080,'B','01324',438,11483),(45081,'B','10432',429,11483),(45082,'B','01432',402,11483),(45083,'A','23401',410,11483),(45084,'A','02413',426,11483),(45085,'C','23410',435,11483),(45086,'E','31024',433,11483),(45087,'A','40321',415,11483),(45088,'C','34012',428,11483),(45089,'B','10243',432,11483),(45090,'C','32041',426,11484),(45091,'D','42103',437,11484),(45092,'E','40321',429,11484),(45093,'B','13024',413,11484),(45094,'D','23410',408,11484),(45095,'A','21430',403,11484),(45096,'E','01324',414,11484),(45097,'C','21304',418,11484),(45098,'A','34201',423,11484),(45099,'D','32401',431,11484),(45100,'A','24031',421,11484),(45101,'B','04123',407,11484),(45102,'C','10243',427,11484),(45103,'B','04312',435,11484),(45104,'E','21430',417,11484),(45105,'E','14203',433,11484),(45106,'D','30142',405,11484),(45107,'C','43120',432,11484),(45108,'E','14032',436,11485),(45109,'C','10423',407,11485),(45110,'B','41320',422,11485),(45111,'A','20341',428,11485),(45112,'B','31042',413,11485),(45113,'C','32401',438,11485),(45114,'D','24013',414,11485),(45115,'B','10342',408,11485),(45116,'C','21403',425,11485),(45117,'E','34210',432,11485),(45118,'A','43120',402,11485),(45119,'D','10234',431,11485),(45120,'D','23140',423,11485),(45121,'C','21034',419,11485),(45122,'E','01342',433,11485),(45123,'A','02314',405,11485),(45124,'C','31024',416,11485),(45125,'E','04312',429,11485),(45126,'C','30421',429,11486),(45127,'E','32140',415,11486),(45128,'E','24130',417,11486),(45129,'C','01423',427,11486),(45130,'E','31024',436,11486),(45131,'E','04132',405,11486),(45132,'E','13420',430,11486),(45133,'C','41023',413,11486),(45134,'E','32041',402,11486),(45135,'D','13420',426,11486),(45136,'B','10432',432,11486),(45137,'C','13402',411,11486),(45138,'E','03142',423,11486),(45139,'A','03412',406,11486),(45140,'A','23014',421,11486),(45141,'B','24301',433,11486),(45142,'C','23410',438,11486),(45143,'C','14023',419,11486),(45144,'E','14203',407,11487),(45145,'C','10243',412,11487),(45146,'D','23104',408,11487),(45147,'A','40132',415,11487),(45148,'B','42103',404,11487),(45149,'A','03241',432,11487),(45150,'D','04321',420,11487),(45151,'A','04312',430,11487),(45152,'C','31024',403,11487),(45153,'A','10243',417,11487),(45154,'C','42130',436,11487),(45155,'E','13240',428,11487),(45156,'E','20314',438,11487),(45157,'C','21043',422,11487),(45158,'E','30142',429,11487),(45159,'B','42301',424,11487),(45160,'C','32014',425,11487),(45161,'C','30421',433,11487),(45162,'B','34201',437,11488),(45163,'C','21034',416,11488),(45164,'B','30142',422,11488),(45165,'C','40231',431,11488),(45166,'E','40321',408,11488),(45167,'D','34021',433,11488),(45168,'A','30124',405,11488),(45169,'B','20143',412,11488),(45170,'B','41203',420,11488),(45171,'A','23104',403,11488),(45172,'E','21430',429,11488),(45173,'E','21340',426,11488),(45174,'B','10432',427,11488),(45175,'D','31042',423,11488),(45176,'E','30214',436,11488),(45177,'C','30421',415,11488),(45178,'B','40132',432,11488),(45179,'C','01234',407,11488),(45180,'B','30421',438,11489),(45181,'C','13420',410,11489),(45182,'A','01234',425,11489),(45183,'D','13402',433,11489),(45184,'D','14203',430,11489),(45185,'E','24130',435,11489),(45186,'E','40321',406,11489),(45187,'E','31240',414,11489),(45188,'A','12430',424,11489),(45189,'D','10423',405,11489),(45190,'B','21304',418,11489),(45191,'B','02314',417,11489),(45192,'C','32041',412,11489),(45193,'A','10243',429,11489),(45194,'A','34210',432,11489),(45195,'D','12403',422,11489),(45196,'B','30142',427,11489),(45197,'A','01234',402,11489),(45198,'E','43201',437,11490),(45199,'C','23014',405,11490),(45200,'C','41032',408,11490),(45201,'D','42310',420,11490),(45202,'C','32014',416,11490),(45203,'B','34201',431,11490),(45204,'B','14023',436,11490),(45205,'D','21403',414,11490),(45206,'C','03421',433,11490),(45207,'B','30142',402,11490),(45208,'C','12043',423,11490),(45209,'D','31204',432,11490),(45210,'D','01243',427,11490),(45211,'B','21304',413,11490),(45212,'A','04231',421,11490),(45213,'E','21430',425,11490),(45214,'B','40132',429,11490),(45215,'E','34210',406,11490),(45216,'E','43120',426,11491),(45217,'B','42310',412,11491),(45218,'A','14023',431,11491),(45219,'B','01243',429,11491),(45220,'B','30214',434,11491),(45221,'B','32104',405,11491),(45222,'A','03412',422,11491),(45223,'C','30142',410,11491),(45224,'B','41023',424,11491),(45225,'E','42013',407,11491),(45226,'B','21340',402,11491),(45227,'D','24103',419,11491),(45228,'E','14320',432,11491),(45229,'A','43021',437,11491),(45230,'C','41023',433,11491),(45231,'A','01342',427,11491),(45232,'A','01423',414,11491),(45233,'E','43210',416,11491),(45252,'A','13024',412,11493),(45253,'B','43201',403,11493),(45254,'E','01234',436,11493),(45255,'B','04213',426,11493),(45256,'E','13204',433,11493),(45257,'B','30124',428,11493),(45258,'E','42130',419,11493),(45259,'A','21403',429,11493),(45260,'E','42031',423,11493),(45261,'E','03421',410,11493),(45262,'C','30214',438,11493),(45263,'C','24013',431,11493),(45264,'A','01243',432,11493),(45265,'C','23410',415,11493),(45266,'B','34210',405,11493),(45267,'B','40231',407,11493),(45268,'A','01243',416,11493),(45269,'B','40231',422,11493),(45288,'A','01243',421,11495),(45289,'C','02413',435,11495),(45290,'D','31402',404,11495),(45291,'D','21430',428,11495),(45292,'B','41032',437,11495),(45293,'B','10342',431,11495),(45294,'D','14320',418,11495),(45295,'D','12304',413,11495),(45296,'D','32041',433,11495),(45297,'D','31204',417,11495),(45298,'B','20134',414,11495),(45299,'A','03241',408,11495),(45300,'B','02431',429,11495),(45301,'D','30214',402,11495),(45302,'D','12403',406,11495),(45303,'D','42310',423,11495),(45304,'A','43120',425,11495),(45305,'B','30142',432,11495),(45306,'C','14032',436,11496),(45307,'B','10423',407,11496),(45308,'C','41320',422,11496),(45309,'D','20341',428,11496),(45310,'C','31042',413,11496),(45311,'D','32401',438,11496),(45312,'C','24013',414,11496),(45313,'B','10342',408,11496),(45314,'D','21403',425,11496),(45315,'E','34210',432,11496),(45316,'E','43120',402,11496),(45317,'A','10234',431,11496),(45318,'D','23140',423,11496),(45319,'B','21034',419,11496),(45320,'D','01342',433,11496),(45321,'B','02314',405,11496),(45322,'D','31024',416,11496),(45323,'A','04312',429,11496),(45324,'B','10423',421,11497),(45325,'A','12430',402,11497),(45326,'E','41230',406,11497),(45327,'B','40123',430,11497),(45328,'E','43210',428,11497),(45329,'C','04213',404,11497),(45330,'B','10423',426,11497),(45331,'C','14032',408,11497),(45332,'A','31024',436,11497),(45333,'C','34102',424,11497),(45334,'A','02314',419,11497),(45335,'B','30412',438,11497),(45336,'C','31204',413,11497),(45337,'E','23140',432,11497),(45338,'E','41032',429,11497),(45339,'A','01342',414,11497),(45340,'A','23041',416,11497),(45341,'C','32401',433,11497),(45342,'E','14320',402,11498),(45343,'E','31204',423,11498),(45344,'D','03412',433,11498),(45345,'D','04123',437,11498),(45346,'E','21430',428,11498),(45347,'B','12403',407,11498),(45348,'C','24103',432,11498),(45349,'E','34012',405,11498),(45350,'A','14320',414,11498),(45351,'C','12304',419,11498),(45352,'E','20431',430,11498),(45353,'C','41032',413,11498),(45354,'A','03412',422,11498),(45355,'C','31204',417,11498),(45356,'A','02431',410,11498),(45357,'D','43201',425,11498),(45358,'E','40132',429,11498),(45359,'C','40213',434,11498),(45360,'A','02134',403,11499),(45361,'E','40231',430,11499),(45362,'B','10324',419,11499),(45363,'B','30421',432,11499),(45364,'B','01342',412,11499),(45365,'D','10243',423,11499),(45366,'E','41230',416,11499),(45367,'E','34021',429,11499),(45368,'C','32140',408,11499),(45369,'D','20134',436,11499),(45370,'A','02431',437,11499),(45371,'C','13024',427,11499),(45372,'A','04231',426,11499),(45373,'D','02341',433,11499),(45374,'E','42130',406,11499),(45375,'E','14320',421,11499),(45376,'C','40321',414,11499),(45377,'A','34102',405,11499),(45378,'A','23104',412,11500),(45379,'E','42310',406,11500),(45380,'A','01324',420,11500),(45381,'A','04321',425,11500),(45382,'B','10243',433,11500),(45383,'A','04132',422,11500),(45384,'C','34021',430,11500),(45385,'E','14320',414,11500),(45386,'B','20413',423,11500),(45387,'E','13240',428,11500),(45388,'B','02413',405,11500),(45389,'A','01432',409,11500),(45390,'C','41023',434,11500),(45391,'B','10423',403,11500),(45392,'E','43021',437,11500),(45393,'A','21403',417,11500),(45394,'A','04321',429,11500),(45395,'B','40123',432,11500),(45396,'C','13024',427,11501),(45397,'E','14320',416,11501),(45398,'D','34201',412,11501),(45399,'A','34210',403,11501),(45400,'C','13024',432,11501),(45401,'B','40231',410,11501),(45402,'E','03124',437,11501),(45403,'E','13240',429,11501),(45404,'B','21403',430,11501),(45405,'D','43120',422,11501),(45406,'D','10234',426,11501),(45407,'E','21340',406,11501),(45408,'E','42031',424,11501),(45409,'C','32140',418,11501),(45410,'B','04231',414,11501),(45411,'E','41032',434,11501),(45412,'C','23401',433,11501),(45413,'E','42103',404,11501),(45414,'A','04231',433,11502),(45415,'D','30421',405,11502),(45416,'C','40123',437,11502),(45417,'C','42031',408,11502),(45418,'B','10324',422,11502),(45419,'D','24301',413,11502),(45420,'C','41023',418,11502),(45421,'C','41230',416,11502),(45422,'B','10342',429,11502),(45423,'A','04312',414,11502),(45424,'E','30214',431,11502),(45425,'A','02314',426,11502),(45426,'D','24301',432,11502),(45427,'B','12403',403,11502),(45428,'E','13240',435,11502),(45429,'C','31024',427,11502),(45430,'C','12043',423,11502),(45431,'E','13024',407,11502),(45432,'A','23410',434,11503),(45433,'C','10432',438,11503),(45434,'C','40213',407,11503),(45435,'C','13042',427,11503),(45436,'D','31204',425,11503),(45437,'A','14230',413,11503),(45438,'D','24130',410,11503),(45439,'A','43021',423,11503),(45440,'D','12304',416,11503),(45441,'E','13402',404,11503),(45442,'D','10342',415,11503),(45443,'D','13240',403,11503),(45444,'D','13402',421,11503),(45445,'C','01432',431,11503),(45446,'C','41032',433,11503),(45447,'D','40312',420,11503),(45448,'E','43120',432,11503),(45449,'A','21034',429,11503),(45450,'D','20314',432,11504),(45451,'E','13420',426,11504),(45452,'B','10234',406,11504),(45453,'E','32410',419,11504),(45454,'E','13042',405,11504),(45455,'E','03241',424,11504),(45456,'C','12034',408,11504),(45457,'A','14320',431,11504),(45458,'E','24130',428,11504),(45459,'E','43102',438,11504),(45460,'A','02413',412,11504),(45461,'D','42301',403,11504),(45462,'D','42031',421,11504),(45463,'A','24310',434,11504),(45464,'E','13024',433,11504),(45465,'D','41203',417,11504),(45466,'A','04321',414,11504),(45467,'E','04132',429,11504),(45468,'D','23104',412,11505),(45469,'B','42310',406,11505),(45470,'A','01324',420,11505),(45471,'A','04321',425,11505),(45472,'D','10243',433,11505),(45473,'D','04132',422,11505),(45474,'C','34021',430,11505),(45475,'E','14320',414,11505),(45476,'B','20413',423,11505),(45477,'E','13240',428,11505),(45478,'A','02413',405,11505),(45479,'D','01432',409,11505),(45480,'C','41023',434,11505),(45481,'B','10423',403,11505),(45482,'E','43021',437,11505),(45483,'A','21403',417,11505),(45484,'E','04321',429,11505),(45485,'B','40123',432,11505),(45486,'C','32104',413,11506),(45487,'E','32410',437,11506),(45488,'C','34210',404,11506),(45489,'A','24103',434,11506),(45490,'D','42301',406,11506),(45491,'B','21340',409,11506),(45492,'B','30142',430,11506),(45493,'A','43102',418,11506),(45494,'E','23140',417,11506),(45495,'D','32401',426,11506),(45496,'B','20413',423,11506),(45497,'C','43012',414,11506),(45498,'D','14302',427,11506),(45499,'B','20314',429,11506),(45500,'E','14230',403,11506),(45501,'A','32014',422,11506),(45502,'E','40321',432,11506),(45503,'B','34021',433,11506),(45504,'D','43102',404,11507),(45505,'D','13042',423,11507),(45506,'C','21043',418,11507),(45507,'A','21340',412,11507),(45508,'C','43012',406,11507),(45509,'C','13024',422,11507),(45510,'E','41230',416,11507),(45511,'D','32014',430,11507),(45512,'B','01324',438,11507),(45513,'B','10432',429,11507),(45514,'A','01432',402,11507),(45515,'E','23401',410,11507),(45516,'A','02413',426,11507),(45517,'A','23410',435,11507),(45518,'C','31024',433,11507),(45519,'B','40321',415,11507),(45520,'C','34012',428,11507),(45521,'B','10243',432,11507),(45522,'A','30421',403,11508),(45523,'A','12430',409,11508),(45524,'B','14302',431,11508),(45525,'E','01234',436,11508),(45526,'E','31420',417,11508),(45527,'C','34021',412,11508),(45528,'C','43021',433,11508),(45529,'A','41320',423,11508),(45530,'A','20143',422,11508),(45531,'A','13240',437,11508),(45532,'B','40231',426,11508),(45533,'C','10342',427,11508),(45534,'E','42013',404,11508),(45535,'D','42103',406,11508),(45536,'B','24103',419,11508),(45537,'C','32041',414,11508),(45538,'E','41320',432,11508),(45539,'A','23410',429,11508),(45540,'B','13024',427,11509),(45541,'E','14320',416,11509),(45542,'D','34201',412,11509),(45543,'E','34210',403,11509),(45544,'B','13024',432,11509),(45545,'E','40231',410,11509),(45546,'A','03124',437,11509),(45547,'C','13240',429,11509),(45548,'D','21403',430,11509),(45549,'B','43120',422,11509),(45550,'C','10234',426,11509),(45551,'D','21340',406,11509),(45552,'E','42031',424,11509),(45553,'A','32140',418,11509),(45554,'A','04231',414,11509),(45555,'C','41032',434,11509),(45556,'E','23401',433,11509),(45557,'E','42103',404,11509),(45558,'C','32410',437,11510),(45559,'E','01432',429,11510),(45560,'E','02431',418,11510),(45561,'E','40312',422,11510),(45562,'E','14230',406,11510),(45563,'A','14302',402,11510),(45564,'A','03241',428,11510),(45565,'E','23041',424,11510),(45566,'B','20341',415,11510),(45567,'B','42103',404,11510),(45568,'B','40321',430,11510),(45569,'C','32014',410,11510),(45570,'C','40321',432,11510),(45571,'A','21340',434,11510),(45572,'D','41302',433,11510),(45573,'B','03421',417,11510),(45574,'B','20143',412,11510),(45575,'E','34120',425,11510),(45576,'D','21034',420,11511),(45577,'A','40321',411,11511),(45578,'A','14023',432,11511),(45579,'D','34120',417,11511),(45580,'D','21034',415,11511),(45581,'D','13402',428,11511),(45582,'C','23014',429,11511),(45583,'C','42103',425,11511),(45584,'B','30214',407,11511),(45585,'D','03214',413,11511),(45586,'C','23104',437,11511),(45587,'A','03412',433,11511),(45588,'D','04231',435,11511),(45589,'E','32410',430,11511),(45590,'A','02431',422,11511),(45591,'B','02431',402,11511),(45592,'B','41032',423,11511),(45593,'A','04213',404,11511),(45594,'B','20314',432,11512),(45595,'E','13420',426,11512),(45596,'B','10234',406,11512),(45597,'E','32410',419,11512),(45598,'B','13042',405,11512),(45599,'A','03241',424,11512),(45600,'C','12034',408,11512),(45601,'E','14320',431,11512),(45602,'E','24130',428,11512),(45603,'C','43102',438,11512),(45604,'A','02413',412,11512),(45605,'D','42301',403,11512),(45606,'D','42031',421,11512),(45607,'B','24310',434,11512),(45608,'E','13024',433,11512),(45609,'E','41203',417,11512),(45610,'A','04321',414,11512),(45611,'C','04132',429,11512),(45612,'E','34012',421,11513),(45613,'E','14320',414,11513),(45614,'E','31420',435,11513),(45615,'C','41023',416,11513),(45616,'A','41203',424,11513),(45617,'D','31402',410,11513),(45618,'A','02143',428,11513),(45619,'C','41023',430,11513),(45620,'B','10324',432,11513),(45621,'A','20341',437,11513),(45622,'E','42301',413,11513),(45623,'E','30412',420,11513),(45624,'E','01423',403,11513),(45625,'E','03241',406,11513),(45626,'A','21043',429,11513),(45627,'E','32014',433,11513),(45628,'A','24103',404,11513),(45629,'A','04132',425,11513),(45630,'C','14023',432,11514),(45631,'D','42031',437,11514),(45632,'A','32041',423,11514),(45633,'D','34021',407,11514),(45634,'B','10243',433,11514),(45635,'C','31420',412,11514),(45636,'D','12304',425,11514),(45637,'E','04132',429,11514),(45638,'D','34021',404,11514),(45639,'D','32104',410,11514),(45640,'A','24130',434,11514),(45641,'E','43102',416,11514),(45642,'C','31042',427,11514),(45643,'B','42301',421,11514),(45644,'A','31024',403,11514),(45645,'D','10243',419,11514),(45646,'C','43201',430,11514),(45647,'D','30214',415,11514),(45648,'D','10423',421,11515),(45649,'E','12430',402,11515),(45650,'E','41230',406,11515),(45651,'C','40123',430,11515),(45652,'E','43210',428,11515),(45653,'A','04213',404,11515),(45654,'B','10423',426,11515),(45655,'C','14032',408,11515),(45656,'E','31024',436,11515),(45657,'B','34102',424,11515),(45658,'D','02314',419,11515),(45659,'D','30412',438,11515),(45660,'E','31204',413,11515),(45661,'B','23140',432,11515),(45662,'C','41032',429,11515),(45663,'A','01342',414,11515),(45664,'C','23041',416,11515),(45665,'E','32401',433,11515),(45666,'0','01243',420,11516),(45667,'0','02341',432,11516),(45668,'0','40213',424,11516),(45669,'0','24130',408,11516),(45670,'0','20134',428,11516),(45671,'0','14203',436,11516),(45672,'0','34120',407,11516),(45673,'0','24310',431,11516),(45674,'0','02413',426,11516),(45675,'0','41032',404,11516),(45676,'0','31240',412,11516),(45677,'0','14032',438,11516),(45678,'0','32041',422,11516),(45679,'0','21043',415,11516),(45680,'0','24103',403,11516),(45681,'0','23410',429,11516),(45682,'0','13204',433,11516),(45683,'0','01324',417,11516),(45684,'0','34012',422,11517),(45685,'0','02134',425,11517),(45686,'0','14032',407,11517),(45687,'0','34012',430,11517),(45688,'0','43120',435,11517),(45689,'0','14023',411,11517),(45690,'0','21403',417,11517),(45691,'0','03412',415,11517),(45692,'0','13204',427,11517),(45693,'0','43021',419,11517),(45694,'0','42310',437,11517),(45695,'0','24103',402,11517),(45696,'0','30412',405,11517),(45697,'0','21340',424,11517),(45698,'0','41023',429,11517),(45699,'0','31240',432,11517),(45700,'0','42301',413,11517),(45701,'0','13420',433,11517),(45702,'0','32104',413,11518),(45703,'0','32410',437,11518),(45704,'0','34210',404,11518),(45705,'0','24103',434,11518),(45706,'0','42301',406,11518),(45707,'0','21340',409,11518),(45708,'0','30142',430,11518),(45709,'0','43102',418,11518),(45710,'0','23140',417,11518),(45711,'0','32401',426,11518),(45712,'0','20413',423,11518),(45713,'0','43012',414,11518),(45714,'0','14302',427,11518),(45715,'0','20314',429,11518),(45716,'0','14230',403,11518),(45717,'0','32014',422,11518),(45718,'0','40321',432,11518),(45719,'0','34021',433,11518),(45720,'0','20314',432,11519),(45721,'0','13420',426,11519),(45722,'0','10234',406,11519),(45723,'0','32410',419,11519),(45724,'0','13042',405,11519),(45725,'0','03241',424,11519),(45726,'0','12034',408,11519),(45727,'0','14320',431,11519),(45728,'0','24130',428,11519),(45729,'0','43102',438,11519),(45730,'0','02413',412,11519),(45731,'0','42301',403,11519),(45732,'0','42031',421,11519),(45733,'0','24310',434,11519),(45734,'0','13024',433,11519),(45735,'0','41203',417,11519),(45736,'0','04321',414,11519),(45737,'0','04132',429,11519),(45738,'0','21034',420,11520),(45739,'0','40321',411,11520),(45740,'0','14023',432,11520),(45741,'0','34120',417,11520),(45742,'0','21034',415,11520),(45743,'0','13402',428,11520),(45744,'0','23014',429,11520),(45745,'0','42103',425,11520),(45746,'0','30214',407,11520),(45747,'0','03214',413,11520),(45748,'0','23104',437,11520),(45749,'0','03412',433,11520),(45750,'0','04231',435,11520),(45751,'0','32410',430,11520),(45752,'0','02431',422,11520),(45753,'0','02431',402,11520),(45754,'0','41032',423,11520),(45755,'0','04213',404,11520),(45756,'0','02134',433,11521),(45757,'0','24301',438,11521),(45758,'0','32410',413,11521),(45759,'0','01423',425,11521),(45760,'0','24130',414,11521),(45761,'0','10423',422,11521),(45762,'0','43210',411,11521),(45763,'0','14203',405,11521),(45764,'0','21430',424,11521),(45765,'0','40312',430,11521),(45766,'0','14203',432,11521),(45767,'0','14032',417,11521),(45768,'0','43201',407,11521),(45769,'0','32410',420,11521),(45770,'0','34201',428,11521),(45771,'0','30241',435,11521),(45772,'0','42301',429,11521),(45773,'0','32104',403,11521),(45774,'0','14032',405,11522),(45775,'0','32140',407,11522),(45776,'0','13240',424,11522),(45777,'0','42310',403,11522),(45778,'0','04312',411,11522),(45779,'0','40312',418,11522),(45780,'0','32014',436,11522),(45781,'0','43201',427,11522),(45782,'0','20314',413,11522),(45783,'0','12304',415,11522),(45784,'0','04213',416,11522),(45785,'0','42103',438,11522),(45786,'0','42310',431,11522),(45787,'0','43120',426,11522),(45788,'0','13420',421,11522),(45789,'0','10342',432,11522),(45790,'0','02431',433,11522),(45791,'0','13024',429,11522),(45792,'0','13240',405,11523),(45793,'0','20143',413,11523),(45794,'0','14032',434,11523),(45795,'0','32401',414,11523),(45796,'0','40321',406,11523),(45797,'0','31204',424,11523),(45798,'0','03124',427,11523),(45799,'0','23014',416,11523),(45800,'0','21403',410,11523),(45801,'0','34201',419,11523),(45802,'0','03142',433,11523),(45803,'0','21340',402,11523),(45804,'0','01342',421,11523),(45805,'0','31024',429,11523),(45806,'0','43012',438,11523),(45807,'0','42310',425,11523),(45808,'0','24130',430,11523),(45809,'0','41032',432,11523),(45810,'0','03241',422,11524),(45811,'0','34210',404,11524),(45812,'0','02134',437,11524),(45813,'0','24013',433,11524),(45814,'0','14302',425,11524),(45815,'0','02143',410,11524),(45816,'0','12304',420,11524),(45817,'0','32401',402,11524),(45818,'0','30241',417,11524),(45819,'0','04123',436,11524),(45820,'0','32041',430,11524),(45821,'0','13024',428,11524),(45822,'0','21403',415,11524),(45823,'0','20341',406,11524),(45824,'0','32410',423,11524),(45825,'0','12403',413,11524),(45826,'0','13420',432,11524),(45827,'0','31420',429,11524),(45828,'0','42130',437,11525),(45829,'0','13024',423,11525),(45830,'0','23014',429,11525),(45831,'0','12043',432,11525),(45832,'0','41230',431,11525),(45833,'0','10243',415,11525),(45834,'0','10423',433,11525),(45835,'0','43201',421,11525),(45836,'0','42130',417,11525),(45837,'0','42013',418,11525),(45838,'0','14230',426,11525),(45839,'0','32410',402,11525),(45840,'0','13402',410,11525),(45841,'0','32041',434,11525),(45842,'0','13042',406,11525),(45843,'0','31420',427,11525),(45844,'0','03124',413,11525),(45845,'0','43021',404,11525),(45846,'0','42103',431,11526),(45847,'0','34021',422,11526),(45848,'0','24130',408,11526),(45849,'0','41032',425,11526),(45850,'0','10243',434,11526),(45851,'0','10342',406,11526),(45852,'0','42130',420,11526),(45853,'0','34201',415,11526),(45854,'0','24013',432,11526),(45855,'0','12043',429,11526),(45856,'0','04312',403,11526),(45857,'0','30124',416,11526),(45858,'0','34201',413,11526),(45859,'0','23410',404,11526),(45860,'0','21043',437,11526),(45861,'0','01324',433,11526),(45862,'0','02314',423,11526),(45863,'0','31420',428,11526),(45864,'0','43120',426,11527),(45865,'0','42310',412,11527),(45866,'0','14023',431,11527),(45867,'0','01243',429,11527),(45868,'0','30214',434,11527),(45869,'0','32104',405,11527),(45870,'0','03412',422,11527),(45871,'0','30142',410,11527),(45872,'0','41023',424,11527),(45873,'0','42013',407,11527),(45874,'0','21340',402,11527),(45875,'0','24103',419,11527),(45876,'0','14320',432,11527),(45877,'0','43021',437,11527),(45878,'0','41023',433,11527),(45879,'0','01342',427,11527),(45880,'0','01423',414,11527),(45881,'0','43210',416,11527),(45882,'0','34012',421,11528),(45883,'0','14320',414,11528),(45884,'0','31420',435,11528),(45885,'0','41023',416,11528),(45886,'0','41203',424,11528),(45887,'0','31402',410,11528),(45888,'0','02143',428,11528),(45889,'0','41023',430,11528),(45890,'0','10324',432,11528),(45891,'0','20341',437,11528),(45892,'0','42301',413,11528),(45893,'0','30412',420,11528),(45894,'0','01423',403,11528),(45895,'0','03241',406,11528),(45896,'0','21043',429,11528),(45897,'0','32014',433,11528),(45898,'0','24103',404,11528),(45899,'0','04132',425,11528),(45900,'0','13240',405,11529),(45901,'0','20143',413,11529),(45902,'0','14032',434,11529),(45903,'0','32401',414,11529),(45904,'0','40321',406,11529),(45905,'0','31204',424,11529),(45906,'0','03124',427,11529),(45907,'0','23014',416,11529),(45908,'0','21403',410,11529),(45909,'0','34201',419,11529),(45910,'0','03142',433,11529),(45911,'0','21340',402,11529),(45912,'0','01342',421,11529),(45913,'0','31024',429,11529),(45914,'0','43012',438,11529),(45915,'0','42310',425,11529),(45916,'0','24130',430,11529),(45917,'0','41032',432,11529),(45918,'0','31240',429,11530),(45919,'0','13240',411,11530),(45920,'0','34102',405,11530),(45921,'0','40132',425,11530),(45922,'0','03412',420,11530),(45923,'0','24130',436,11530),(45924,'0','24031',432,11530),(45925,'0','41203',421,11530),(45926,'0','14023',423,11530),(45927,'0','10324',437,11530),(45928,'0','43201',416,11530),(45929,'0','30214',413,11530),(45930,'0','43012',431,11530),(45931,'0','43120',428,11530),(45932,'0','31204',406,11530),(45933,'0','24013',414,11530),(45934,'0','41302',433,11530),(45935,'0','24301',402,11530),(45936,'0','03142',421,11531),(45937,'0','02431',418,11531),(45938,'0','14203',431,11531),(45939,'0','03214',428,11531),(45940,'0','13024',405,11531),(45941,'0','01432',416,11531),(45942,'0','01243',402,11531),(45943,'0','24013',406,11531),(45944,'0','04321',433,11531),(45945,'0','41032',429,11531),(45946,'0','32104',408,11531),(45947,'0','12430',425,11531),(45948,'0','34012',423,11531),(45949,'0','01432',438,11531),(45950,'0','10324',414,11531),(45951,'0','24310',432,11531),(45952,'0','02314',435,11531),(45953,'0','10243',412,11531),(45954,'0','20341',408,11532),(45955,'0','02413',430,11532),(45956,'0','03241',416,11532),(45957,'0','40231',413,11532),(45958,'0','20134',402,11532),(45959,'0','40321',436,11532),(45960,'0','03412',432,11532),(45961,'0','34201',437,11532),(45962,'0','41023',421,11532),(45963,'0','14203',429,11532),(45964,'0','41320',405,11532),(45965,'0','30421',424,11532),(45966,'0','03124',419,11532),(45967,'0','20143',406,11532),(45968,'0','24013',415,11532),(45969,'0','03214',425,11532),(45970,'0','03412',433,11532),(45971,'0','30241',427,11532),(45972,'0','14230',437,11533),(45973,'0','20341',406,11533),(45974,'0','21340',403,11533),(45975,'0','04231',419,11533),(45976,'0','03142',414,11533),(45977,'0','32041',433,11533),(45978,'0','04231',417,11533),(45979,'0','41032',408,11533),(45980,'0','04312',405,11533),(45981,'0','20134',425,11533),(45982,'0','14320',429,11533),(45983,'0','41320',435,11533),(45984,'0','12403',432,11533),(45985,'0','32401',431,11533),(45986,'0','20431',423,11533),(45987,'0','34210',427,11533),(45988,'0','30241',412,11533),(45989,'0','10243',422,11533),(45990,'0','20341',408,11534),(45991,'0','02413',430,11534),(45992,'0','03241',416,11534),(45993,'0','40231',413,11534),(45994,'0','20134',402,11534),(45995,'0','40321',436,11534),(45996,'0','03412',432,11534),(45997,'0','34201',437,11534),(45998,'0','41023',421,11534),(45999,'0','14203',429,11534),(46000,'0','41320',405,11534),(46001,'0','30421',424,11534),(46002,'0','03124',419,11534),(46003,'0','20143',406,11534),(46004,'0','24013',415,11534),(46005,'0','03214',425,11534),(46006,'0','03412',433,11534),(46007,'0','30241',427,11534),(46008,'0','01342',411,11535),(46009,'0','42310',422,11535),(46010,'0','32014',406,11535),(46011,'0','31204',404,11535),(46012,'0','23140',429,11535),(46013,'0','24130',431,11535),(46014,'0','03412',437,11535),(46015,'0','03412',433,11535),(46016,'0','03412',424,11535),(46017,'0','43201',412,11535),(46018,'0','43201',434,11535),(46019,'0','21340',414,11535),(46020,'0','14230',428,11535),(46021,'0','02314',426,11535),(46022,'0','12403',403,11535),(46023,'0','13240',419,11535),(46024,'0','20431',432,11535),(46025,'0','12340',417,11535),(46026,'0','10423',421,11536),(46027,'0','12430',402,11536),(46028,'0','41230',406,11536),(46029,'0','40123',430,11536),(46030,'0','43210',428,11536),(46031,'0','04213',404,11536),(46032,'0','10423',426,11536),(46033,'0','14032',408,11536),(46034,'0','31024',436,11536),(46035,'0','34102',424,11536),(46036,'0','02314',419,11536),(46037,'0','30412',438,11536),(46038,'0','31204',413,11536),(46039,'0','23140',432,11536),(46040,'0','41032',429,11536),(46041,'0','01342',414,11536),(46042,'0','23041',416,11536),(46043,'0','32401',433,11536),(46044,'B','02341',415,11537),(46045,'C','23041',406,11537),(46046,'B','10243',424,11537),(46047,'A','02143',431,11537),(46048,'A','34102',403,11537),(46049,'E','20134',411,11537),(46050,'E','21340',428,11537),(46051,'A','20134',434,11537),(46052,'E','14230',432,11537),(46053,'E','04132',405,11537),(46054,'A','43201',437,11537),(46055,'E','24130',416,11537),(46056,'E','02431',418,11537),(46057,'B','02431',429,11537),(46058,'D','03124',412,11537),(46059,'A','03241',426,11537),(46060,'E','31240',433,11537),(46061,'D','32401',422,11537),(46062,'D','41203',407,11538),(46063,'A','04123',404,11538),(46064,'B','10423',413,11538),(46065,'B','31024',438,11538),(46066,'C','31042',414,11538),(46067,'D','14302',434,11538),(46068,'D','13204',433,11538),(46069,'C','40312',418,11538),(46070,'C','12043',417,11538),(46071,'D','31402',432,11538),(46072,'D','32104',430,11538),(46073,'C','41023',423,11538),(46074,'C','14032',429,11538),(46075,'C','24031',408,11538),(46076,'C','41023',421,11538),(46077,'B','31240',425,11538),(46078,'C','42031',427,11538),(46079,'B','30412',402,11538),(46080,'D','41203',407,11539),(46081,'E','04123',404,11539),(46082,'D','10423',413,11539),(46083,'B','31024',438,11539),(46084,'C','31042',414,11539),(46085,'E','14302',434,11539),(46086,'E','13204',433,11539),(46087,'B','40312',418,11539),(46088,'C','12043',417,11539),(46089,'B','31402',432,11539),(46090,'D','32104',430,11539),(46091,'A','41023',423,11539),(46092,'C','14032',429,11539),(46093,'C','24031',408,11539),(46094,'A','41023',421,11539),(46095,'E','31240',425,11539),(46096,'C','42031',427,11539),(46097,'B','30412',402,11539),(46170,'[]','02431',413,11544),(46171,'[]','01324',407,11545),(46172,'B','14032',436,11546),(46173,'E','10423',407,11546),(46174,'E','41320',422,11546),(46175,'B','20341',428,11546),(46176,'0','31042',413,11546),(46177,'0','32401',438,11546),(46178,'E','24013',414,11546),(46179,'0','10342',408,11546),(46180,'B','02431',442,11547),(46181,'C','30124',447,11547),(46182,'E','02143',453,11547),(46183,'D','40213',450,11547),(46184,'A','02413',448,11547),(46185,'B','12304',443,11547),(46186,'E','12430',469,11547),(46187,'C','42301',466,11547),(46188,'C','42310',456,11547),(46189,'C','30142',458,11547),(46190,'E','10243',455,11547),(46191,'A','13204',460,11547),(46192,'C','14023',439,11547),(46193,'C','41203',462,11547),(46194,'A','01342',467,11547),(46195,'B','43201',445,11547),(46196,'C','01234',452,11547),(46197,'B','31240',457,11547),(46198,'A','13204',448,11548),(46199,'B','01432',443,11548),(46200,'D','21403',469,11548),(46201,'C','20134',471,11548),(46202,'2','14023',452,11548),(46203,'C','21340',454,11548),(46204,'C','43201',451,11548),(46205,'D','43021',441,11548),(46206,'E','40213',453,11548),(46207,'A','43120',463,11548),(46208,'B','30241',464,11548),(46209,'C','42031',458,11548),(46210,'D','02413',439,11548),(46211,'D','21403',467,11548),(46212,'E','24031',444,11548),(46213,'B','20134',459,11548),(46214,'D','01432',446,11548),(46215,'E','01234',457,11548),(46216,'E','23401',461,11549),(46217,'C','01342',453,11549),(46218,'D','12304',439,11549),(46219,'A','04123',449,11549),(46220,'B','30421',469,11549),(46221,'A','04321',470,11549),(46222,'A','12340',456,11549),(46223,'C','04312',450,11549),(46224,'D','24031',445,11549),(46225,'A','01342',443,11549),(46226,'E','21340',447,11549),(46227,'B','24013',466,11549),(46228,'A','03124',467,11549),(46229,'C','31420',442,11549),(46230,'D','34201',463,11549),(46231,'C','02413',458,11549),(46232,'B','40213',452,11549),(46233,'C','04321',455,11549),(46234,'D','13204',448,11550),(46235,'A','01432',443,11550),(46236,'C','21403',469,11550),(46237,'B','20134',471,11550),(46238,'D','14023',452,11550),(46239,'C','21340',454,11550),(46240,'A','43201',451,11550),(46241,'D','43021',441,11550),(46242,'E','40213',453,11550),(46243,'B','43120',463,11550),(46244,'C','30241',464,11550),(46245,'A','42031',458,11550),(46246,'A','02413',439,11550),(46247,'D','21403',467,11550),(46248,'E','24031',444,11550),(46249,'B','20134',459,11550),(46250,'A','01432',446,11550),(46251,'B','01234',457,11550),(46252,'D','04321',440,11551),(46253,'C','21034',461,11551),(46254,'A','30214',457,11551),(46255,'B','13024',466,11551),(46256,'B','34021',468,11551),(46257,'D','23014',454,11551),(46258,'B','20413',462,11551),(46259,'C','04132',451,11551),(46260,'D','31240',458,11551),(46261,'E','41230',444,11551),(46262,'C','31204',470,11551),(46263,'C','10432',469,11551),(46264,'A','04123',446,11551),(46265,'E','14320',448,11551),(46266,'B','20143',439,11551),(46267,'E','21340',456,11551),(46268,'A','23041',455,11551),(46269,'C','43021',452,11551),(46270,'D','31024',450,11552),(46271,'E','41230',443,11552),(46272,'C','24013',444,11552),(46273,'D','40321',462,11552),(46274,'A','24013',454,11552),(46275,'A','41203',469,11552),(46276,'E','13402',461,11552),(46277,'B','10234',441,11552),(46278,'B','34210',456,11552),(46279,'B','20431',449,11552),(46280,'C','23140',455,11552),(46281,'D','04321',439,11552),(46282,'C','32014',471,11552),(46283,'D','04213',464,11552),(46284,'A','43120',446,11552),(46285,'E','04321',457,11552),(46286,'E','41320',468,11552),(46287,'B','01342',453,11552),(46288,'0','04321',440,11553),(46289,'0','21034',461,11553),(46290,'0','30214',457,11553),(46291,'0','13024',466,11553),(46292,'0','34021',468,11553),(46293,'0','23014',454,11553),(46294,'0','20413',462,11553),(46295,'0','04132',451,11553),(46296,'0','31240',458,11553),(46297,'0','41230',444,11553),(46298,'0','31204',470,11553),(46299,'0','10432',469,11553),(46300,'0','04123',446,11553),(46301,'0','14320',448,11553),(46302,'0','20143',439,11553),(46303,'0','21340',456,11553),(46304,'0','23041',455,11553),(46305,'0','43021',452,11553),(46306,'0','23401',461,11554),(46307,'0','01342',453,11554),(46308,'0','12304',439,11554),(46309,'0','04123',449,11554),(46310,'0','30421',469,11554),(46311,'0','04321',470,11554),(46312,'0','12340',456,11554),(46313,'0','04312',450,11554),(46314,'0','24031',445,11554),(46315,'0','01342',443,11554),(46316,'0','21340',447,11554),(46317,'0','24013',466,11554),(46318,'0','03124',467,11554),(46319,'0','31420',442,11554),(46320,'0','34201',463,11554),(46321,'0','02413',458,11554),(46322,'0','40213',452,11554),(46323,'0','04321',455,11554),(46324,'0','21304',442,11555),(46325,'0','10243',443,11555),(46326,'0','02431',471,11555),(46327,'0','21403',454,11555),(46328,'0','24103',460,11555),(46329,'0','13240',458,11555),(46330,'0','41203',462,11555),(46331,'0','21043',456,11555),(46332,'0','24301',439,11555),(46333,'0','32041',452,11555),(46334,'0','40312',444,11555),(46335,'0','20134',467,11555),(46336,'0','32410',466,11555),(46337,'0','30421',446,11555),(46338,'0','02134',455,11555),(46339,'0','31240',457,11555),(46340,'0','31402',449,11555),(46341,'0','03241',450,11555),(46342,'0','10432',462,11556),(46343,'0','12304',440,11556),(46344,'0','43102',448,11556),(46345,'0','42103',443,11556),(46346,'0','23140',456,11556),(46347,'0','32104',465,11556),(46348,'0','42103',459,11556),(46349,'0','31042',452,11556),(46350,'0','43210',450,11556),(46351,'0','10342',471,11556),(46352,'0','04231',447,11556),(46353,'0','02431',458,11556),(46354,'0','42310',469,11556),(46355,'0','40321',453,11556),(46356,'0','40321',444,11556),(46357,'0','01342',468,11556),(46358,'0','43120',457,11556),(46359,'0','34201',439,11556),(46360,'A','34102',456,11557),(46361,'E','02314',442,11557),(46362,'D','10243',439,11557),(46363,'E','30412',449,11557),(46364,'B','13024',460,11557),(46365,'C','32041',468,11557),(46366,'C','04132',454,11557),(46367,'D','23104',470,11557),(46368,'E','02413',466,11557),(46369,'B','10243',457,11557),(46370,'B','20134',450,11557),(46371,'E','21403',447,11557),(46372,'A','04132',452,11557),(46373,'D','01342',445,11557),(46374,'D','24103',455,11557),(46375,'C','03412',469,11557),(46376,'B','43102',463,11557),(46377,'C','12043',443,11557),(46378,'A','24031',469,11558),(46379,'D','43021',455,11558),(46380,'A','24031',442,11558),(46381,'E','43210',439,11558),(46382,'D','40213',463,11558),(46383,'B','21403',450,11558),(46384,'B','23014',447,11558),(46385,'C','14203',470,11558),(46386,'E','41302',454,11558),(46387,'C','34021',468,11558),(46388,'A','24310',445,11558),(46389,'E','14032',443,11558),(46390,'D','20314',464,11558),(46391,'C','43012',459,11558),(46392,'B','34102',453,11558),(46393,'B','40231',456,11558),(46394,'D','34201',457,11558),(46395,'B','12304',449,11558),(46396,'A','13402',442,11559),(46397,'B','30412',450,11559),(46398,'B','30412',458,11559),(46399,'A','01234',439,11559),(46400,'D','10234',461,11559),(46401,'E','04231',448,11559),(46402,'E','24310',468,11559),(46403,'E','24310',453,11559),(46404,'A','02413',447,11559),(46405,'C','12043',452,11559),(46406,'D','24103',443,11559),(46407,'D','03142',455,11559),(46408,'A','13420',457,11559),(46409,'D','02314',454,11559),(46410,'D','21430',464,11559),(46411,'A','02413',470,11559),(46412,'B','40312',469,11559),(46413,'B','40213',462,11559),(46414,'B','10342',448,11560),(46415,'B','30142',455,11560),(46416,'B','20143',446,11560),(46417,'A','02143',443,11560),(46418,'C','21034',468,11560),(46419,'A','02341',469,11560),(46420,'D','23401',439,11560),(46421,'C','12034',462,11560),(46422,'A','03124',453,11560),(46423,'E','10234',451,11560),(46424,'D','42130',457,11560),(46425,'E','12340',460,11560),(46426,'C','43021',452,11560),(46427,'C','34102',444,11560),(46428,'B','34102',470,11560),(46429,'E','04123',464,11560),(46430,'A','02413',456,11560),(46431,'E','23140',442,11560),(46432,'A','021',1389,13898),(46433,'C','210',1390,13898),(46434,'B','102',1391,13898),(46435,'C','210',1393,13898),(46436,'A','021',1389,13899),(46437,'B','210',1390,13899),(46438,'C','102',1391,13899),(46439,'C','210',1393,13899);
/*!40000 ALTER TABLE `exam_studentexamquestion` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `student_student`
--

DROP TABLE IF EXISTS `student_student`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `student_student` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `student_name` varchar(50) NOT NULL,
  `student_ID` varchar(20) NOT NULL,
  `student_email` varchar(254) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=21076 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `student_student`
--

LOCK TABLES `student_student` WRITE;
/*!40000 ALTER TABLE `student_student` DISABLE KEYS */;
INSERT INTO `student_student` VALUES (1,'João Silva','1234','joao@ufabc.edu.br'),(2,'Maria Campos','4321','maria@ufabc.edu.br'),(3,'Ana Souza','1000','ana@ufabc.edu.br'),(12,'Silva','João','joao@ufabc.edu.br'),(13,'Campos','Maria','maria@ufabc.edu.br'),(16,'Carsio Josiv\\^{a}nio Monteiro Rezende','61','carsiojozivanio23@gmail.com'),(17,'Christianne Rodrigues Carlos','62','christianne.carlos@gmail.com'),(18,'Emmerson Tiago Fernandes Paraense','63','emmersongtop@gmail.com'),(19,'Gilson Fernandes de Jesus','64','fernandes201@hotmail.com'),(20,'Jacinvaldo Alves da Costa','65','jacinvaldo.costa@gmail.com'),(21,'Marcio Jos\\\'{e} de Souza','66','marcio.sntnovacolina@gmail.com'),(22,'Marcos Ant\\^{o}nio Morato da Silva','67','marcosmorato41@gmail.com'),(23,'Naelson Claro Barbosa','68','naelson\\_barbosa73@hotmail.com'),(24,'Osoaldo Menezes','69','osoaldoadm@hotmail.com'),(25,'Rog\\\'{e}rio Teixeira de Araujo','70','rogertaraujo@hotmail.com'),(26,'Valfredo Barros Perfeito','71','perfeitovalfredo@hotmail.com'),(27,'Wagner de Oliveira Brito','72','wbrito76@gmail.com'),(28,'WILLIAN CARLO DE LARA','76392279920','willian.lara@bm.pr.gov.br'),(29,'ANDERSON LUIZ MEDEIROS','30219366870','andersonmedeiros2014@yahoo.com.br'),(30,'CARLA ROBERTA BARBOSA','04214638999','carla.barbosa@pm.pr.gov.br'),(31,'CLEIDEMAR PIRES DA CRUZ','78729068991','cleidemar.pires@gmail.com'),(32,'EDENILSON MARCOS VERNICK','02345040998','Edenilsonmvernick@gmail.com'),(33,'SERGIO LEMES DA SILVA','64642127968','sergio.lemes@pm.pr.gov.br'),(34,'FABIANO PINHEIRO SOARES','00615408974','fsoares@smds.curitiba.pr.gov.br'),(35,'WELLINGTON MARCELO CORDEIRO','01907234918','wcordeiro@smds.curitiba.pr.gov.br'),(36,'LUIS EDUARDO CAMARGO','87633850906','luiscamargo@smds.curitiba.pr.gov.br'),(2911,'Gabarito','111111111',''),(2912,'Name of Student Two','987654321','student2@aluno.ufabc.edu.br'),(2913,'Abner Soares da Cruz','559065231',''),(2914,'Abraao de Oliveira Silva','528626085',''),(2915,'Abrahao Baldino','344508092',''),(2916,'Abrao Asterio Junior','522764174',''),(2917,'Adonira Moreira da Silva Junior','523620044',''),(2918,'Adrian Boas Silva','576670261',''),(2919,'Adriana Aparecida da Costa Peres','20934907',''),(2920,'Adriano Florencio de Oliveira','409760729',''),(2921,'Adriano Pereira de Oliveira','523278147',''),(2922,'Adrieli Correia dos Santos','530455146',''),(2923,'Adrielly Moreira da Silva','588299066',''),(2924,'Agatha Fedel Arantes','570285872',''),(2925,'Agatha Freire Pereira','566042617',''),(2926,'Agatha Rebeca Mansano Silva','540716418',''),(2927,'Ailson Rodrigues Colares','300129397',''),(2928,'Akio Guilherme Dourado Kashiwaya','554032910',''),(2929,'Alan Alves dos Santos','397241318',''),(2930,'Alan Castro Santos','396135419',''),(2931,'Alan Souza dos Santos','307116396',''),(2932,'Alana Fernandes','558828371',''),(2933,'Alane Pedrosa Gomes','565363074',''),(2934,'Alanis Anastacio de Oliveira','579204856',''),(2935,'Alanis dos Santos Queiroz','390900631',''),(2936,'Alanna Paiva Fernandes','531466589',''),(2937,'Alany Gusmao dos Santos Fontes','3990577708',''),(2938,'Aldacir Lopes da Silva','191705755',''),(2939,'Alessandra da Silva Araujo','526379066',''),(2940,'Alessandra Floriano Silva','567383994',''),(2941,'Alessandro Matheus Toledo','561319972',''),(2942,'Alexander Santos Costa','382826176',''),(2943,'Alexandro de Freitas Dias','26689088',''),(2944,'Alexia Espedita de Padua','570602336',''),(2945,'Alexia Maria Caetano Silva','55857242X',''),(2946,'Alexsander Gomes da Silva','587884654',''),(2947,'Alexsander Santos de Cantalice','548442150',''),(2948,'Alice Lima de Araujo','399656686',''),(2949,'Alice Santos de Almeida','390643063',''),(2950,'Aline Andrade Silva','553670736',''),(2951,'Aline Aparecida de Abreu Santos','439005905',''),(2952,'Aline de Castro Leite','546631344',''),(2953,'Aline Fernanda da Silva','432838247',''),(2954,'Aline Oliveira Alves','46842748X',''),(2955,'Aline Piloto da Rocha','574242296',''),(2956,'Alisson Oliveira da Silva','494120460',''),(2957,'Allan de Carvalho Santos','380813762',''),(2958,'Allana Mota de Santana Aleluia','387625094',''),(2959,'Allef Oliveira Nascimento','500697346',''),(2960,'Allicya Clivya Alves Ribeiro','393346924',''),(2961,'Alvaro Jose Vega','559425405',''),(2962,'Alysson Lima dos Anjos','566312074',''),(2963,'Amabili Cristina Alexandre','381854735',''),(2964,'Amanda Alves de Souza','527620889',''),(2965,'Amanda Alves Martins','541969511',''),(2966,'Amanda Barbosa da Silva','390049797',''),(2967,'Amanda Beatriz Dantas dos Santos','604831560',''),(2968,'Amanda Cardoso Pereira','532483819',''),(2969,'Amanda Coelho Morais','551731229',''),(2970,'Amanda Cristina Bueno de Souza de Jesus','469137496',''),(2971,'Amanda de Oliveira Fernandes','56762240X',''),(2972,'Amanda Ferreira de Moura','558882985',''),(2973,'Amanda Figueroa da Silva','391648937',''),(2974,'Amanda Galvvao de Aquino','38649535X',''),(2975,'Amanda Grasser','399248249',''),(2976,'Amanda Leone da Silva','394362457',''),(2977,'Amanda Lima Pereira','502436773',''),(2978,'Amanda Marcoli Alves de Almeida','388969040',''),(2979,'Amanda Pereira Gomes','508317800',''),(2980,'Amanda Regina Moraes Pereira','490055175',''),(2981,'Amanda Silva de Brito','383634210',''),(2982,'Amanda Thais Bomfim Dias','432989365',''),(2983,'Ana Aline de Resende Firmino','558902571',''),(2984,'Ana Beatriz Bejarano do Prado','555742982',''),(2985,'Ana Beatriz Cavalcante Belmiro','503624032',''),(2986,'Ana Beatriz Domingues Sianfarani','549329146',''),(2987,'Ana Beatriz Estrela Briante','391929732',''),(2988,'Ana Beatriz Leal de Souza','528793548',''),(2989,'Ana Beatriz Lourenco Silvestre','376930688',''),(2990,'Ana Beatriz Mariote Fidelles','579953178',''),(2991,'Ana Beatriz Moraes dos Santos','539469014',''),(2992,'Ana Beatriz Santos Oliveira','502431568',''),(2993,'Ana Beatriz Silva Santana','499055500',''),(2994,'Ana Beatriz Teles da Silva','388976718',''),(2995,'Ana Carla de Jesus Marques','565626826',''),(2996,'Ana Carolina Campos Teixeira','554754897',''),(2997,'Ana Carolina Cardoso de Brito','MG20219095',''),(2998,'Ana Carolina Carvalho de Oliveira','376947202',''),(2999,'Ana Carolina da Costa Peres','554345353',''),(3000,'Ana Carolina da Silva','487158751',''),(3001,'Ana Carolina de Oliveira Miraias','52861101',''),(3002,'Ana Carolina Dias de Jesus Queiroz','5048522108',''),(3003,'Ana Carolina dos Santos Costa','37544624',''),(3004,'Ana Carolina Ezidia da Silva','570685722',''),(3005,'Ana Caroline Aluques Silva','555703174',''),(3006,'Ana Caroline da Silva','526348574',''),(3007,'Ana Caroline de Almeida Navarro','59009841X',''),(3008,'Ana Caroline dos Santos','536878948',''),(3009,'Gislayne dos Santos Lima','620697064',''),(3010,'Kamila Cruz Cardoso','375201828',''),(3011,'Kellyn Damiao Almeida','439484741',''),(3012,'Michel de Moraes Marinheiro','380419701',''),(3013,'Ana Clara Caetano de Oliveira','468877344',''),(3014,'Ana Clara Cordeiro','540954615',''),(3015,'Ana Clara Dalava Souza','575998635',''),(3016,'Ana Claudia Soares de Souza','38496218X',''),(3017,'Ana Deisiane Ferreira de Oliveira','651733649',''),(3018,'Ana Flora Ferreira de Freitas','501678001',''),(3019,'Ana Karoline Pereira Proenca','565542667',''),(3020,'Ana Karolyne Sousa Silva','571941345',''),(3021,'Ana Livia Tres','501180242',''),(3022,'Ana Liza Pretelli Trevisoli','390424687',''),(3023,'Ana Lucia Ferreira Alves Correia','283587672',''),(3024,'Ana Luiza Santos de Almeida','645837179',''),(3025,'Ana Luiza Silva Santos','558240215',''),(3026,'Ana Paula Alves da Rocha','297859006',''),(3027,'Ana Paula Carraro Bingre','381247831',''),(3028,'Ana Paula de Oliveira','348056357',''),(3029,'Ana Paula de Souza Brandao','530985652',''),(3030,'Ana Paula dos Santos Costa','539690119',''),(3031,'Ana Paula Sola Rocha','38728879X',''),(3032,'Ana Paula Viana Andrade','570059756',''),(3033,'Ana Paula Wenzel Ramos','377679975',''),(3034,'Ana Priscila Rodrigues Melo','559741352',''),(3035,'Ana Vitoria Adonias Almeida','604191443',''),(3036,'Anailza Almeida da Silva','233171502',''),(3037,'Anderson Lima Rezende','555741072',''),(3038,'Anderson Sartorio da Silva','574294910',''),(3039,'Anderson Sousa de Oliveira','503114467',''),(3040,'Andre Alves de Oliveira','535894284',''),(3041,'Andre Bezerra de Lima','337173394',''),(3042,'Andre Daniel Gomes Soares','554019026',''),(3043,'Andre Luiz Morates Saranti','384698694',''),(3044,'Andre Martins Santos','39822576X',''),(3045,'Andre Mendes da Silva','429322148',''),(3046,'Andre Yan Saito Lima Parreira','53302142X',''),(3047,'Andresa DAmbrosi de Melo','390643129',''),(3048,'Andressa Alves Rabello','492176206',''),(3049,'Andressa Aparecida Silva','406287156',''),(3050,'Andressa da Silva Feitosa','567106858',''),(3051,'Andressa Pereira de Sousa Penha','382360230',''),(3052,'Andrew Matheus Santos Paterno','528606062',''),(3053,'Andrey Afonso de Morais Conde','396739921',''),(3054,'Andrey Santana de Andrade','541044163',''),(3055,'Andreza Aparecida Silva Pereira Leite','497151169',''),(3056,'Andreza Pereira Messias','533321839',''),(3057,'Aneliz Rodrigues Ferreira','399613651',''),(3058,'Angelo Giovani Morales Cardenas','380799200',''),(3059,'Angra dos Santos Sousa','541631901',''),(3060,'Anna Barbara Zanoti Santana','570921661',''),(3061,'Anna Beatriz Lukasak Zanellato','55930013X',''),(3062,'Annanda Santos Soares','384971453',''),(3063,'Antonio Teixeira da Silva','178755503',''),(3064,'Ariane Amancio Soares','524679873',''),(3065,'Ariane Aparecida Goncalves da Silva','624744656',''),(3066,'Ariane Crisolana Coelho Soares','3812222883',''),(3067,'Arina Oliveira Alves','53591068X',''),(3068,'Arthur Baia Lourenco','378484813',''),(3069,'Arthur Barbosa Matos','392742196',''),(3070,'Arthur de Araujo','528045234',''),(3071,'Arthur Henrique Prado Marinho','541589659',''),(3072,'Arthur Torres de Camargo de Oliveira','502454106',''),(3073,'Artur Teles Barbosa','582464730',''),(3074,'Artur Yuiti Shimada de Carvalho','535926583',''),(3075,'Ary Sousa Silva','385828755',''),(3076,'Athalie Araujo Nicassio','376192537',''),(3077,'Athos David Cabral Pykalainen','524647434',''),(3078,'Alexia Maria Caetano Silva','558572420',''),(3079,'Aline Oliveira Alves','468427480',''),(3080,'Amanda de Oliveira Fernandes','567622400',''),(3081,'Amanda Galvvao de Aquino','386495350',''),(3082,'Ana Caroline de Almeida Navarro','590098410',''),(3083,'Ana Claudia Soares de Souza','384962180',''),(3084,'Ana Paula Sola Rocha','387288790',''),(3085,'Andre Martins Santos','398225760',''),(3086,'Andre Yan Saito Lima Parreira','533021420',''),(3087,'Anna Beatriz Lukasak Zanellato','559300130',''),(3088,'Arina Oliveira Alves','535910680',''),(3089,'Audria Luiza P. de O. R. de Almeida','502920269',''),(3090,'Augusto da Silva Nascimento','561494150',''),(3091,'Ayla Lacerda Barros','5278313467',''),(3092,'Azriel Augusto Paixao Rocha','567073488',''),(3093,'Bachir Bechara Mourad','399034237',''),(3094,'Barbara Borges de Souza','383978312',''),(3095,'Barbara da Silva Carvalho','533585156',''),(3096,'Barbara do Amaral Ferreira','545831234',''),(3097,'Barbara Heloisa da Silva Ramalho','567829832',''),(3098,'Barbara Inacio Gmomes da Silva','389610690',''),(3099,'Barbara Melo Oliveira','361389991',''),(3100,'Barbara Nicole Ribeiro Fiorenzano Santos','381232852',''),(3101,'Barbara Sousa da Silva','520306648',''),(3102,'Barbara Vitoria Cavalcante Mesquita','521375873',''),(3103,'Barbarah Araujo Galvao','574452837',''),(3104,'Beatriz A Costa Jardim','571608360',''),(3105,'Beatriz Aline dos Santos Belo','399145205',''),(3106,'Beatriz Alves de Souza','377677516',''),(3107,'Beatriz Amaral Dutra Goulart','545338207',''),(3108,'Beatriz Aramaqui Valente','398293995',''),(3109,'Beatriz Avelino Campanharo','467482860',''),(3110,'Beatriz Baldo Costa','571033817',''),(3111,'Beatriz Barizon do Prado Diogo','381580490',''),(3112,'Beatriz Belbis Torres','385338909',''),(3113,'Beatriz Boaventura de Oliveira','560310900',''),(3114,'Beatriz Borges Taveira','398294902',''),(3115,'Beatriz Bortoletto Ferreira','522506562',''),(3116,'Beatriz Cassiano de Lima','552791568',''),(3117,'Beatriz da Silva Cestarioli','509685547',''),(3118,'Beatriz de Abreu Souza','505586460',''),(3119,'Beatriz de Almeida Sparvolli','584372760',''),(3120,'Beatriz de Miranda Klem da Silva','502916771',''),(3121,'Beatriz de Oliveira Sanches Eusebio','506400890',''),(3122,'Beatriz Devus dos Anjos','383322145',''),(3123,'Beatriz Dias Bandeira','379253690',''),(3124,'Beatriz do Espirito Santo','391149027',''),(3125,'Beatriz do Nascimento de Souza','546501965',''),(3126,'Beatriz do Prado Pereira','506190158',''),(3127,'Beatriz do Vale Lopes','580891525',''),(3128,'Beatriz dos Anjos Nascimento','572516782',''),(3129,'Beatriz Dutra de Souza','547210759',''),(3130,'Beatriz Ferreira dos Santos','504819604',''),(3131,'Beatriz Gomes Avila','384403669',''),(3132,'Beatriz Gomes Freire','533209481',''),(3133,'Beatriz Ines da Silva Feitosa','551725450',''),(3134,'Beatriz Izabela Nascimento','503632776',''),(3135,'Beatriz Lima da Silveira','501822525',''),(3136,'Beatriz Marcelino de Oiveira','522728054',''),(3137,'Beatriz Miguel Dias','529873205',''),(3138,'Beatriz Pereira Lima','529874015',''),(3139,'Beatriz Ribeiro Valadares','604206252',''),(3140,'Beatriz Rocha da Silva','521397819',''),(3141,'Beatriz Sant Anna Bomfim','525325773',''),(3142,'Beatriz Santos de Souza','508693860',''),(3143,'Beatriz Santos Pinheiro','568035501',''),(3144,'Beatriz Sato Pinheiro','556116010',''),(3145,'Beatriz Silaman de Oliveira','505060899',''),(3146,'Beatriz Silva do Nascimento','500662277',''),(3147,'Beatriz Silva Nascimento','390361793',''),(3148,'Beatriz Silva Nunciato','399033749',''),(3149,'Beatriz Silva Paiva','381986254',''),(3150,'Beatriz Silva Porto','395684341',''),(3151,'Beatriz Soares Avilles','568507733',''),(3152,'Beatriz Teixeira Miguel','553620046',''),(3153,'Beatriz Venturini Reche','586469230',''),(3154,'Beatriz Vitoria da Silva','59770850',''),(3155,'Beatriz Vitoria Ember da Silva','394917560',''),(3156,'Beatriz Xavier de Lucena','390076922',''),(3157,'Bia Carolina dos Santos Dutra','509576874',''),(3158,'Bianca Alessandra de Souza','383640428',''),(3159,'Bianca Angelica da Silva','385302721',''),(3160,'Bianca Brandao da Silva','392982353',''),(3161,'Bianca Cadete de Oliveira','537469758',''),(3162,'Bianca da Silva Fonseca','599596521',''),(3163,'Bianca Damasceno de Souza','556520956',''),(3164,'Bianca de Paula Costa','520121740',''),(3165,'Bianca Fernanda Ramos da Silva','585245526',''),(3166,'Bianca Fiusa Viana','592306975',''),(3167,'Bianca Lima dos Santos','420651640',''),(3168,'Bianca Lima Silva','375483860',''),(3169,'Bianca Moreno D. Bernardi de Oliveira','551066969',''),(3170,'Bianca Rocha de Paula','5608169820',''),(3171,'Bianca Sparavieri de Sousa','502893278',''),(3172,'Bianca Viana de Souza','388340782',''),(3173,'Bianca Vieira Franco','583208514',''),(3174,'Brenda dos Santos Loro','442911830',''),(3175,'Brenda Graziele de Paiva','504852139',''),(3176,'Brenda Maria da Silva','637857768',''),(3177,'Brenda Ramos da Silva','580926199',''),(3178,'Brenda Vitor Silva','562909450',''),(3179,'Breno Antonio SantAna Carvalho','399966924',''),(3180,'Breno Bezerra da Silva','536546083',''),(3181,'Breno Kenji Oti','129531819',''),(3182,'Breno Silva Gomes','535897935',''),(3183,'Brian da Silva Neves','521633709',''),(3184,'Bruna Alves Aragao','392725290',''),(3185,'Bruna Amaro Ferreira Arcilio','399664210',''),(3186,'Bruna Aquino da Silva','399241656',''),(3187,'Bruna Batista da Silva','478044768',''),(3188,'Bruna Caroline Teixeira da Silva','395686155',''),(3189,'Bruna de Andrade Moreira','394360333',''),(3190,'Bruna dos Santos Carneiro','559238162',''),(3191,'Bruna Fernandez Artioli','527328066',''),(3192,'Bruna Januario','560313676',''),(3193,'Bruna Leao Freitas','528335741',''),(3194,'Bruna Lopes Gois','382834100',''),(3195,'Bruna Modesto Ferreira','528032823',''),(3196,'Bruna Nataline Siqueira Santos','551960036',''),(3197,'Bruna Pacheco da Silva','550750289',''),(3198,'Bruna Ramos de Lima','529249996',''),(3199,'Bruna Silva Azevedo','544493680',''),(3200,'Bruna Vieira Meneses','595984782',''),(3201,'Bruno Alves de Lima','388041705',''),(3202,'Bruno Barroso Cruz','37766983',''),(3203,'Bruno da Silva Santos','436368341',''),(3204,'Bruno de Santana Melo','472614952',''),(3205,'Bruno dos Santos Mantovane','520977452',''),(3206,'Bruno dos Santos Ribeiro Borges','475649760',''),(3207,'Bruno Gabriel Silva Dominicheli','385340370',''),(3208,'Bruno Gomes da Silva','386120146',''),(3209,'Bruno Guilherme Batista Alves','567281498',''),(3210,'Bruno Henrique Oliveira Rocha','502900519',''),(3211,'Bruno Henrique Petrov R. dos Santos','386150187',''),(3212,'Bruno Lucas Fernandes dos Reis','509180437',''),(3213,'Bruno Rebeque da Motta Alves','533917852',''),(3214,'Bruno Ricardo dos Santos Pretelli','392584785',''),(3215,'Bruno Roberto Brandao Capitelli','551726519',''),(3216,'Bruno Rodrigues Agripino','502905530',''),(3217,'Bruno Sobreira Franca','570306206',''),(3218,'Bruno Xavier Falcao Branco','551080541',''),(3219,'Bryan da Costa Torres','540737630',''),(3220,'Buno Santos Braga','496256427',''),(3221,'Byanka Vieira do Carmo Mendes','567389303',''),(3222,'Caik Robert de Souza Brito','579898027',''),(3223,'Caike Tortelli Savino','371259990',''),(3224,'Cainna Milaneli Silva','549113411',''),(3225,'Caio Alexandre Vital','391668900',''),(3226,'Caio Cesar dos Santos Silva','520290410',''),(3227,'Caio de Souza Calin','544495135',''),(3228,'Caio Guimaraes Sucigan','321334930',''),(3229,'Caio Henrique Albuquerque Marques','508313752',''),(3230,'Caio Henrique de Assis Martins','397279371',''),(3231,'Caio Lucas de Souza','529801050',''),(3232,'Caio Rocha Viana dos Santos','393337285',''),(3233,'Caique Experediao Moreira','533303618',''),(3234,'Caique Luan Seabra dos Santos','564072590',''),(3235,'Camila Agostinho dos Santos','376407712',''),(3236,'Camila Alencar Coriolano','525935861',''),(3237,'Camila Bedia Laudade','433425349',''),(3238,'Camila Cadengue','591629057',''),(3239,'Camila Cardoso Silveira','528612475',''),(3240,'Camila da Silva Exposito','396728595',''),(3241,'Camila da Silva Santos','578870228',''),(3242,'Camila Eliza Navarreti da Silva','553673014',''),(3243,'Camila Gabriele da Silva','384983558',''),(3244,'Camila Justo de Souza','505039643',''),(3245,'Camila Magalhaes','396651628',''),(3246,'Camila Martins Corsi','388964261',''),(3247,'Camila Passos da Silva','441817555',''),(3248,'Camila Regina Antonio Ferreira','484760488',''),(3249,'Camila Rigel da Silva','501808693',''),(3250,'Camila Rodrigues da Cruz','548436356',''),(3251,'Camila Santos Almeida da Silva','504007968',''),(3252,'Camila Silva de Souza','394079050',''),(3253,'Camila Vitoria Lehm','548012386',''),(3254,'Camile Cavalaro de Oliveira','540224182',''),(3255,'Camilla Victoria Fernandes Rocha','522336036',''),(3256,'Camille Regina dos Santos','527533038',''),(3257,'Carin Beatriz Silva Zampaulo','568398968',''),(3258,'Carla Beatriz de Sousa Oliveira','571706824',''),(3259,'Carla Caroline da Cruz','469806011',''),(3260,'Carlos Daniel Copcescki Alcarria','45096787893',''),(3261,'Carlos Eduardo Costa Arcanjo dos Santos','608880942',''),(3262,'Carlos Eduardo Pereira Guimaraes Veloso','594097757',''),(3263,'Carlos Eduardo Simoes Ribeiro de Lima','509178807',''),(3264,'Carlos Felipe da Silva','383320641',''),(3265,'Carlos Felipe Santos Leal','536733946',''),(3266,'Carlos Henrique Martins Silva','379260920',''),(3267,'Carlos Miguel Saravia Amorim','390210316',''),(3268,'Carolayne Mendes Furlan','546510980',''),(3269,'Carolina Alves Freitas','380813490',''),(3270,'Carolina Aparecida de Andrade Silva','575495558',''),(3271,'Carolina Gomes Bezerra da Silva','560071498',''),(3272,'Carolina Mano Moreira','579542099',''),(3273,'Carolina Salvatierra Neves','384677496',''),(3274,'Caroline Costa da Cruz','438068774',''),(3275,'Caroline dos Reis Sobreira','379588687',''),(3276,'Caroline Ramos de Sousa','520972030',''),(3277,'Caroline Santana de Joao','399964599',''),(3278,'Caroline Santos Alves','374394600',''),(3279,'Caroline Santos Reis','546167986',''),(3280,'Caroline Sayuri Yamada','501185665',''),(3281,'Caroliny de Souza Silva','378182183',''),(3282,'Cassia Maria da Rocha','380421355',''),(3283,'Cassia Parra da Silva','566047585',''),(3284,'Cassiane dos Santos Franca','592165231',''),(3285,'Cassiano Leao Ramos','509328556',''),(3286,'Catarina Salgado Menendes','544493278',''),(3287,'Catharina Marabiza Pinheiro','393760030',''),(3288,'Caue Demarchi da Silva','534882274',''),(3289,'Ceres Calixto Simao','450534870',''),(3290,'Cesar Augusto Cardoso','384978332',''),(3291,'Cesar Augusto Silva','522741666',''),(3292,'Chariele dos Santos','545272233',''),(3293,'Christian Alexandre Munoz Nunez','381576103',''),(3294,'Christian Arrebola Gaspar','422869600',''),(3295,'Cibele Santos Torres','570593645',''),(3296,'Cindy Aimi Yamamoto Salazar','536728343',''),(3297,'Cinthia Bernardo de Carvalho','394365410',''),(3298,'Cinthya Evely da Silva Santos','564948974',''),(3299,'Cintia Ferreira Janeri','388859222',''),(3300,'Claudia Vitoria dos Santos','388657042',''),(3301,'Claudiney de Paula','378064540',''),(3302,'Claudio Antonio da Silva Leite','523583618',''),(3303,'Clayton Soares da Silva','285973216',''),(3304,'Cleidiana Iraci da Costa','367522330',''),(3305,'Cleiton dos Santos Martins','388860091',''),(3306,'Cleiton Gomes da Silva','430548321',''),(3307,'Cleomar Chagas Pinto','625325850',''),(3308,'Cleonice Hertnandes Galerani','23417435',''),(3309,'Cleverson Gomes da Silva','388349517',''),(3310,'Criatiane Ribeiro Menezes da Silva','2246785405',''),(3311,'Cristiane Aparecida de Andrade Eduardo','525867284',''),(3312,'Cristiano dos Santos Junior','498382825',''),(3313,'Cristoffer de Oliveira Silva','385346281',''),(3314,'Daiane Cosme Silva','523408742',''),(3315,'Daiane da Silva Ramos de Lima','527660656',''),(3316,'Daiane de Moura Barbosa','575963645',''),(3317,'Daiane Estenio dos Santos','439416887',''),(3318,'Daiane Jennifer dos Santos Oliveira','388845958',''),(3319,'Daiane Pereira Cavalcante','389610999',''),(3320,'Daiane Rodrigues Dantas','398300884',''),(3321,'Daiany Maritns Cavalcanti Miguel','393342785',''),(3322,'Dalila de Moraes Cirino','420851380',''),(3323,'Dalvan Rocha dos Santos','406492256',''),(3324,'Damares Stephanie Ribeiro','377657578',''),(3325,'Dandara Nascimento dos Santos','533033056',''),(3326,'Daniel Aguiar de Souza','554693732',''),(3327,'Daniel Augusto Souza Lima','387139540',''),(3328,'Daniel Cirineu dos Santos Junior','569604217',''),(3329,'Daniel dos Reis Dantas','532148265',''),(3330,'Daniel Elias de Lima','428692278',''),(3331,'Daniel Kenji Kyohara','507784340',''),(3332,'Daniel Moreira das Neves','558883552',''),(3333,'Daniel Oliveira Vieira','449721553',''),(3334,'Daniel Rodrigues Silva','507076436',''),(3335,'Daniel Santos de Sousa','551962987',''),(3336,'Daniel Silva de Lima','2104562805',''),(3337,'Daniel Viana Gomes','380403020',''),(3338,'Daniel Victor Brescia dos Santos','392750478',''),(3339,'Daniel Victor dos Santos Araujo','634739748',''),(3340,'Daniela da Costa Silva','559981909',''),(3341,'Daniela da Silva Guimaraes','547715092',''),(3342,'Daniela da Silva Santos Saouza','507333561',''),(3343,'Daniela Sanches Soares','569987118',''),(3344,'Daniela Silva Timoteo','385822388',''),(3345,'Daniele de Lima Therese','378051600',''),(3346,'Danielle Samara Leite dos Santos','506794738',''),(3347,'Danielle Simeao Silverio Rocha','573082820',''),(3348,'Danielli Dutra Pereira','547208145',''),(3349,'Danielli Gimenez da Silva','508703591',''),(3350,'Danielly Midori de Oliveira','45909895818',''),(3351,'Daniely Silva de Miranda','568251430',''),(3352,'Danillo Gabriel Pereira Santos','503985351',''),(3353,'Danilo Araujo de Azevedo','569475260',''),(3354,'Danilo Caje Goncalves Barbosa','382832140',''),(3355,'Danyele Seguchi Nakaie','392143422',''),(3356,'Darana Cristina Teixeira Ribeiro','559841401',''),(3357,'Davd Lucas Ramos de Godoi','505120537',''),(3358,'Davi do Nascimento Ribeiro Pereira','436376453',''),(3359,'Davi Elias Figueira Correa','390313567',''),(3360,'Davi Maia da Silva Sobrinho','550550975',''),(3361,'Davi Oliveira Carvalho','504834034',''),(3362,'David de Oliveira Gasparetti','525868562',''),(3363,'David dos Santos Silva','398471460',''),(3364,'David Moreira Costa de Oliveira','534669736',''),(3365,'David Ribeiro Boaventura de Souza','506188164',''),(3366,'David Santana Francisco da Silva','559030010',''),(3367,'David Santos da Silva','578871208',''),(3368,'Dayane Pereira Santa Roza','529551068',''),(3369,'Dayelli Kezia Nascimento','523631716',''),(3370,'Debora Correa do Nascimento','534867777',''),(3371,'Debora Fernanda dos Santos Gimene','523424929',''),(3372,'Debora Oliveira Nunes Viana','534092950',''),(3373,'Debora Takase Queiroz','391944630',''),(3374,'Debora Teles Barbosa','403077072',''),(3375,'Deborah Sandy Mancano Wakasugi','358028036',''),(3376,'Deborah Santana Sousa','387129558',''),(3377,'Dener Silva de Moura','534615752',''),(3378,'Dianna Sousa Reis','621931937',''),(3379,'Diego Alves da Silva','520975819',''),(3380,'Diego Andrade Ferreirs','547724919',''),(3381,'Diego Costa Mello','532387892',''),(3382,'Diego Marinha de Araujo','386516042',''),(3383,'Diego Pablo Candido de Souza','534879809',''),(3384,'Diego Rafael Silva','426557300',''),(3385,'Diego Silva Rodrigues','521633710',''),(3386,'Dominik Bernardes de Oliveira','560717799',''),(3387,'Douglas Batista Garcia','246648703',''),(3388,'Douglas de Araujo Macedo','456699806',''),(3389,'Douglas e Jesus Francelino','583972810',''),(3390,'Douglas Saboia de Souza','384362990',''),(3391,'Edgar Junior Salazar Zamudio','379273240',''),(3392,'Edgar Sales dos Santos','540721700',''),(3393,'Edileia Perez da Silva','299676511',''),(3394,'Edileide dos Santos Gomes Silva','279397410',''),(3395,'Edilson Martins de Oliveira','633404144',''),(3396,'Edmilson Martins da Silva Junior','485942835',''),(3397,'Ednaldo Cavalcante de Lima','347882470',''),(3398,'Eduarda Magami Dias','544254132',''),(3399,'Eduarda Souto Klimavicius','507795659',''),(3400,'Eduarda Souza Taionato dos Santos','389964591',''),(3401,'Eduarda Torres Ducatti','531550114',''),(3402,'Eduardo Alves Rodrigues','552789719',''),(3403,'Eduardo Braulio Filho','505687902',''),(3404,'Eduardo Duarte Cerqueira','541625287',''),(3405,'Eduardo Gravena de Oliveira','500706669',''),(3406,'Eduardo Henrique Queiroga Nogueira','537451419',''),(3407,'Eduardo Luiz de Meira','267867633',''),(3408,'Eduardo Miranda Bernado','573255726',''),(3409,'Eduardo Savio Pepineli','574290849',''),(3410,'Elder Fernando Sousa Melo','384343661',''),(3411,'Eliana Candida Favero','181043841',''),(3412,'Elias Bezerra Moura','394840677',''),(3413,'Eliel Roberto da Costa','387880290',''),(3414,'Eliene Maria Xavier','369782367',''),(3415,'Elis de Andrade Castilho','556597450',''),(3416,'Elisa Pinheiro Ferreira','627535197',''),(3417,'Eliseu Oliveira Santos','524650070',''),(3418,'Elizabeth Matos da Silva','3585665',''),(3419,'Elizabeth Sanches','387992248',''),(3420,'Ellen da Cruz Santos','550574049',''),(3421,'Ellen Mylena Tampelini Nascimento','383328380',''),(3422,'Ellen Nalanda Rocha Silva','556826401',''),(3423,'Ellen Tauanny Silva Almeida','392139935',''),(3424,'Eloir Rodrigues Silverio','226276752',''),(3425,'Eloisa Ferreira de Goes','540213561',''),(3426,'Elvira Barbosa de Oliveira Buzzeti','20535829',''),(3427,'Emanoelle Simeao Silverio Rocha','573083010',''),(3428,'Emanoelly Nascimento Santos','576205412',''),(3429,'Emanuel Santos Pires','391932202',''),(3430,'Emanuele Araujo dos Santos','386501403',''),(3431,'Emanuelle da Silva Jeronimo','526918937',''),(3432,'Emanuelle Ribeiro Medicina','548244200',''),(3433,'Emely Silva de Oliveira','505049740',''),(3434,'Emerson Cesar Santana de Melo','378449515',''),(3435,'Emerson de Oliveira Prates','381471317',''),(3436,'Emerson Vieira da Silva','43617023',''),(3437,'Emilly Cristina Santos Reis','591730078',''),(3438,'Emilly da Hora Silva','542311185',''),(3439,'Emilly Karine Rosa Goncalves','542297905',''),(3440,'Emilly Marinho Prates','60261773',''),(3441,'Emilly Martins Maia','549333721',''),(3442,'Emillyn Radija Pires Lacerda','584153430',''),(3443,'Emily Almeida Matos','381587538',''),(3444,'Emily Cristina Ribeiro','575276381',''),(3445,'Emily de Sousa Marques','541536175',''),(3446,'Emily Gleyce Ramos Machado','589555303',''),(3447,'Emily Suki Nishiguchi Ribeiro dos Santos','375683021',''),(3448,'Endryo Sanches Luquetti','522793710',''),(3449,'Enrique Goulart Pereira','366648883',''),(3450,'Enzo Bernardes Sena','537476155',''),(3451,'Enzo da Silva Colombo','378943066',''),(3452,'Erica Cristina Barros Miraias','426462981',''),(3453,'Erica Rossi Cardoso','420825370',''),(3454,'Erica Tavares Sousa','571263744',''),(3455,'Erick Filipe Santos Vieira','585565053',''),(3456,'Erick Goncalves Lucindo de Araujo','385684368',''),(3457,'Erik de Araujo Damasceno Gondim','383591247',''),(3458,'Erika de Sousa Alves','505453769',''),(3459,'Erika Liasch Silva','398809690',''),(3460,'Erika Silva de Medeiros','532315315',''),(3461,'Esdras Brunassi Vieira','561794170',''),(3462,'Estela Argolo Paraiso Carvalho','584737804',''),(3463,'Estela de Souza Silva Grigorievs','541445789',''),(3464,'Estela Santos de Almeida','529328082',''),(3465,'Ester Alves Cunha','528028510',''),(3466,'Ester Sulamita Lima Moura','559062904',''),(3467,'Estevam Chagas de Campos Aleixo','452212650',''),(3468,'Esther da Silva Costa','622613376',''),(3469,'Esther de Souza Rodrigues','536690080',''),(3470,'Eva Maria Conceicao de Oliveira','374770130',''),(3471,'Evair Luan Santos de Macedo','554545275',''),(3472,'Evelin Silva de Sena Roberto','569996259',''),(3473,'Evellyn Ricarte Portugal','507832814',''),(3474,'Evelyn Alves Gomes dos Santos','387135560',''),(3475,'Evelyn Bomfim Guimaraes','522338252',''),(3476,'Evelyn Camila da Silva','387117570',''),(3477,'Evelyn Camille Santos de Sousa','539482043',''),(3478,'Evelyn Ruama Martins Trindade','580011811',''),(3479,'Evelyn Shinayder Sousa Santos','571685171',''),(3480,'Everson Daniel Guimaraes','298602337',''),(3481,'Evilyn Paraes Fernandes','399921850',''),(3482,'Fabiana Almendro','256658675',''),(3483,'Fabiana da Silva Miguel','49546747866',''),(3484,'Fabiana de Oliveira Santos','430116159',''),(3485,'Fabiana dos Santos Souza','521375083',''),(3486,'Fabio Guilherme do Amaral Correa','555171401',''),(3487,'Fabio Maganha Moreira','560409000',''),(3488,'Fabio Mendes do Nascimento','520203021',''),(3489,'Fabio Ribeiro','328626028',''),(3490,'Fabiola Dantas','542739355',''),(3491,'Fabiola Lopes da Rocha','531421120',''),(3492,'Fabricio Aparecido Nogueira','504202649',''),(3493,'Fabricio Emmanuel Ferreira Barbosa','376655562',''),(3494,'Fabricio Lucas Coelho','374173849',''),(3495,'Fabricio Santana Gomes de Souza','556538031',''),(3496,'Feliciano Souza Bento dos Santos','642894176',''),(3497,'Felipe Aureo Rodrigues da Silva','566055727',''),(3498,'Felipe Barros Batista','388009949',''),(3499,'Felipe Cavalcanti Teixeira','368635132',''),(3500,'Felipe Consorte Araujo','501191434',''),(3501,'Felipe Dantas do Nascimento','522642603',''),(3502,'Felipe de Lima Paiva','528903032',''),(3503,'Felipe Dimano de Oliveira','543133655',''),(3504,'Felipe Ferreira de Almeida Silva','389611347',''),(3505,'Felipe Galvani Sechaus','567549318',''),(3506,'Felipe Gatto Barros','488466271',''),(3507,'Felipe Januario Domingues','395688176',''),(3508,'Felipe Jose de Oliveira','491127546',''),(3509,'Felipe Leite dos Santos de Almeida','508297965',''),(3510,'Felipe Marson de Castro','385039426',''),(3511,'Felipe Pavam Ferreira','548436770',''),(3512,'Felipe Pereira Marques Silvestre','509706125',''),(3513,'Felipe Ramos de Come','553172372',''),(3514,'Felipe Riso de Lacerda','390302752',''),(3515,'Felipe Rosa Gomes','584021008',''),(3516,'Felipe Veloso Pereira','509901529',''),(3517,'Felipe Vieira Souza Santos','538084595',''),(3518,'Fernanda Alves Orlando','585467134',''),(3519,'Fernanda Alves Rabello','580759866',''),(3520,'Fernanda Antonia de Jesus','281452593',''),(3521,'Fernanda Castro dos Anjos','376636257',''),(3522,'Fernanda Cavalcante de Sa','627116530',''),(3523,'Fernanda Costa Madeira','388969076',''),(3524,'Fernanda de Almeida Nunes','542415770',''),(3525,'Fernanda dos Santos Pires','579580532',''),(3526,'Fernanda Erica dos Santos Milan Fuentes','436940322',''),(3527,'Fernanda Franco Xavier','384978046',''),(3528,'Fernanda Goncalves Pessoa','398306205',''),(3529,'Fernanda Ketlyn Rodrigues Batista','389611402',''),(3530,'Fernanda Melo Campos','380786280',''),(3531,'Fernanda Muller Ramaglia','524049701',''),(3532,'Fernanda Pagliani Beato','533303059',''),(3533,'Fernanda Prevelato de Moura','381859046',''),(3534,'Fernanda Ribeiro Onwuatu','508694681',''),(3535,'Fernanda Vieira Silva','397118703',''),(3536,'Fernando Alves Teixeira','56571853',''),(3537,'Fernando Dantas Barrozo','527623362',''),(3538,'Fernando Daros Carvalho Amancio','556704484',''),(3539,'Fernando de Oliveira Morilhas Batista','383929052',''),(3540,'Fernando Fernandes','522332924',''),(3541,'Fernando Massola Guedes da Silva','566910809',''),(3542,'Fernando Matheus Tomaz','576926760',''),(3543,'Fernando Rabelo D Amaral','505732749',''),(3544,'Filipe de Sousa Pereira','476210057',''),(3545,'Filipi Alves Barbosa','375698061',''),(3546,'Flavio Cariel Ferreira','509436651',''),(3547,'Flavio Novaes Nieto','333528414',''),(3548,'Flavio Santos Mota','539463139',''),(3549,'Francidalva Alves de Abreu','505599727',''),(3550,'Francielle da Silva Ramos','561008565',''),(3551,'Francielly Cristina Pereira Costa','580983626',''),(3552,'Francielly Marie Martins da Silva','509154037',''),(3553,'Francisca Talia Conceicao de Lima','571340118',''),(3554,'Francisco Talys Oliveira Ferreira','56222914',''),(3555,'Francyelly Lorranny Soares Ferreira','602771780',''),(3556,'Frederico Santos Moreira','382994139',''),(3557,'Gabriel Almendro da Silva','553978019',''),(3558,'Gabriel Alves Ricci','577572258',''),(3559,'Gabriel Antunes Geyer','378920730',''),(3560,'Gabriel Araujo Magalhaes','567240782',''),(3561,'Gabriel Arrabaca Rosseto','524289177',''),(3562,'Gabriel Barbosa de Andrade','533307892',''),(3563,'Gabriel Barbosa de Macedo','531940925',''),(3564,'Gabriel Bruno Morente Moreira','378078975',''),(3565,'Gabriel Cafeu Brandao','383989814',''),(3566,'Gabriel Carvalho Bueno','44382751',''),(3567,'Gabriel Carvalho de Azevedo','390857506',''),(3568,'Gabriel Casagrande Galhardo','388837718',''),(3569,'Gabriel Claudino dos Santos','507105321',''),(3570,'Gabriel Colangelo Martins','589077650',''),(3571,'Gabriel da Silva Celestino','522908639',''),(3572,'Gabriel Daiskye Higa','582725483',''),(3573,'Gabriel de Castro Peres','564396618',''),(3574,'Gabriel de Oliveira Alves','376235056',''),(3575,'Gabriel de Oliveira Longas','505695704',''),(3576,'Gabriel de Oliveira Sampaio','592770898',''),(3577,'Gabriel de Souza Santana','503643087',''),(3578,'Gabriel dos Santos Souza','558822886',''),(3579,'Gabriel Duarte Pinto','376947305',''),(3580,'Gabriel Eraldo da Silva','534097248',''),(3581,'Gabriel Felipe Conceicao','503621432',''),(3582,'Gabriel Felipe Dantas','592161742',''),(3583,'Gabriel Filipe Santos Junqueira','509182197',''),(3584,'Gabriel Gomes da Rocha','386494630',''),(3585,'Gabriel Gomes de Almeida','523639892',''),(3586,'Gabriel Guimaraes Martins','508695934',''),(3587,'Gabriel Harmel Camargo','537480328',''),(3588,'Gabriel Henrique de Oliveira','378027463',''),(3589,'Gabriel Henrique Ferreira','575194340',''),(3590,'Gabriel Hicaro dos Santos Machado Afonso','529161345',''),(3591,'Gabriel Inacio Valenca Norgaroto','502436554',''),(3592,'Gabriel Jesus Nunes da Silva','543296234',''),(3593,'Gabriel Luca Bento Pessanha','527538607',''),(3594,'Gabriel Luiz de Souza Fiedler','572232767',''),(3595,'Gabriel Marcelino dos Santos Mendes','578428209',''),(3596,'Gabriel Mendes Rodrigues Oliveira','378188124',''),(3597,'Gabriel Menezes Crespo','552778473',''),(3598,'Gabriel Monteiro Rocha','544468880',''),(3599,'Gabriel Mouta Mendonca Teixeira','506379085',''),(3600,'Gabriel Mozelli Moreto','557610540',''),(3601,'Gabriel Pacheco da Silva','427775115',''),(3602,'Gabriel Pestana de Oliveira','393226621',''),(3603,'Gabriel Rodrigues de Souza','546956075',''),(3604,'Gabriel Rodrigues Pessoa','503616953',''),(3605,'Gabriel Rodrigues Silva','507076515',''),(3606,'Gabriel Salazar Oliveira','375698905',''),(3607,'Gabriel Santiago Silva','384966871',''),(3608,'Gabriel Santos Gomes','556645870',''),(3609,'Gabriel Silva Duarte','563928505',''),(3610,'Gabriel Soares da Silva','388978041',''),(3611,'Gabriel Soares da Silva','538168493',''),(3612,'Gabriel Souza Almeida','508374959',''),(3613,'Gabriel Thiago Costa Periera','603299623',''),(3614,'Gabriel Torres Pernia','383989723',''),(3615,'Gabriel Vendramini Sentinelo','392751150',''),(3616,'Gabriel Vilarubia','395144553',''),(3617,'Gabriel Vitor Fonseca de Oliveira','388978521',''),(3618,'Gabriela Aparecida Pereira Lopes','542664057',''),(3619,'Gabriela Costa Mesquita','505075570',''),(3620,'Gabriela Domingues Deliberal','523636581',''),(3621,'Gabriela Garcia','534586387',''),(3622,'Gabriela Kunsagi de Paula e Silva','572736939',''),(3623,'Gabriela Lourenco da Silva','601709408',''),(3624,'Gabriela Martins da Cruz','397539370',''),(3625,'Gabriela Moura Silva','390064051',''),(3626,'Gabriela Neves Matos','5039996718',''),(3627,'Gabriela Oliveira Santiago','534629933',''),(3628,'Gabriela Pereira da Silva Santos','504854938',''),(3629,'Gabriela Rodrigues Braz','545296250',''),(3630,'Gabriela Rosa','564110747',''),(3631,'Gabriela Santos Vieira Silva','530970910',''),(3632,'Gabriela Silva Fernandes','382804399',''),(3633,'Gabriela Silva Santos','387465224',''),(3634,'Gabriela Soares Tome','560835220',''),(3635,'Gabriela Uehara Oliveira','551965757',''),(3636,'Gabriele Aparecida Pereira Cardoso','377657700',''),(3637,'Gabriele Cristina Pereira Santiago','393328867',''),(3638,'Gabriele Oliveira da Silva','566104374',''),(3639,'Gabriele Santos Moura','380811923',''),(3640,'Gabrieli Carvalho de Almeida','539850792',''),(3641,'Gabriella de Matos Carvalho Bernardino','395409639',''),(3642,'Gabriella do Carmo Santos','508378618',''),(3643,'Gabriella Gomes do Nascimento Cruz','527557031',''),(3644,'Gabriella Silva de Almeida','533023907',''),(3645,'Gabriella Viana Medeiros','387980106',''),(3646,'Gabrielle Camille Tarocco Esteves','572194020',''),(3647,'Gabrielle Cestari da Costa','531273222',''),(3648,'Gabrielle Emanuelle Batista da Silva','382382353',''),(3649,'Gabrielle Hernandes Damasceno','587654417',''),(3650,'Gabrielle Lenardt','566094551',''),(3651,'Gabrielle Pereira da Silva','384625538',''),(3652,'Gabrielle Santos Marques','488265411',''),(3653,'Gabrielle Santos Santana','508137767',''),(3654,'Gabrielli Batista Matos','508292621',''),(3655,'Gabrielli Fanti da Siva','532147583',''),(3656,'Gabrielly Chervenhak','551401783',''),(3657,'Gabrielly da Silva Goncalves','505070637',''),(3658,'Gabrielly Ribeiro dos Santos','578601000',''),(3659,'Gabrielly Silva Leopold','532927357',''),(3660,'Gabrielly Silva Santos','503996968',''),(3661,'Gabriely Nascimento de Souza','399446357',''),(3662,'Gabryelle Jesus Santos da Silva','555215180',''),(3663,'Geane Ramos Correia','564087191',''),(3664,'Geder Dias dos Santos','609559760',''),(3665,'Genesio Dionisio da Silva Neto','477194941',''),(3666,'Geovana Alves de Franca','378051994',''),(3667,'Geovana Pereira Mendes de Sousa','539767244',''),(3668,'Geovana Silva Santos','390361781',''),(3669,'Geovanna Aparecida Lima Costa','558702119',''),(3670,'Geovanna Araujo Dias','565463033',''),(3671,'Geovanna Conceicao Carvalho','567420127',''),(3672,'Geovanna da Silva Sulato','524413514',''),(3673,'Geovanna de Aquino','525866127',''),(3674,'Geovanna de Oliveira da Silva Pastorello','385673206',''),(3675,'Geovanna de Souza Silva','570757113',''),(3676,'Geovanna Moreira Duarte Bezerra','385348447',''),(3677,'Geovanna Oliveira Amorim','567779038',''),(3678,'Geovanna Santana da Silva','395691590',''),(3679,'Geovanni Campos de Moura','506396496',''),(3680,'Geovanni Dias Prates','559781015',''),(3681,'Gepson Nunes Silva Monteiro','520811665',''),(3682,'Gerimario Gomes da Silva Junior','562336370',''),(3683,'Gerson de Almeida Filho','509607433',''),(3684,'Gessica Severo Dessena','377668564',''),(3685,'Gilmar Orlando de Oliveira','493647508',''),(3686,'Giorgia Maldonado Perez','522749124',''),(3687,'Giovana Araujo Satyro','568974542',''),(3688,'Giovana Costa Ferracini','535359196',''),(3689,'Giovana de Oliveira Santos','556835955',''),(3690,'Giovana Felicio Monteiro','399128451',''),(3691,'Giovana Mendes dos Santos','530892080',''),(3692,'Giovana Rodrigues da S Ilva','527313671',''),(3693,'Giovana Rodrigues de Oliveira','544275676',''),(3694,'Giovana Rodrigues Silva','507076448',''),(3695,'Giovana Santos Silva','498026012',''),(3696,'Giovani Targino Serra','549741604',''),(3697,'Giovanna Amaral Fini','395712580',''),(3698,'Giovanna Araujo','527308316',''),(3699,'Giovanna Carvalho Pereira','577481721',''),(3700,'Giovanna Charlo','390302867',''),(3701,'Giovanna Coelho Ferrari','551032480',''),(3702,'Giovanna da Cruz Ferreira','397815748',''),(3703,'Giovanna de Oliveira Gomes','435656119',''),(3704,'Giovanna de Oliveira Souza','395238833',''),(3705,'Giovanna de Paula Costa','520121820',''),(3706,'Giovanna de Sousa Mendes','377665654',''),(3707,'Giovanna de Sousa Olmedilha','530460749',''),(3708,'Giovanna do Amaral Correa','555171395',''),(3709,'Giovanna dos Santos Yogi','391951683',''),(3710,'Giovanna Feitosa Silva','535913114',''),(3711,'Giovanna Fernandes de Medeiros Oliveira','398628841',''),(3712,'Giovanna Ferreira Rodrigues','557232820',''),(3713,'Giovanna Girotto de Araujo Leite','503918635',''),(3714,'Giovanna Lellis Valverde','385685531',''),(3715,'Giovanna Magalhaes Arrais Guerra','506406763',''),(3716,'Giovanna Magri dos Santos','388363320',''),(3717,'Giovanna Marcela Melo','570715660',''),(3718,'Giovanna Marques de Lima Farias Silva','501812064',''),(3719,'Giovanna Martins Barbosa','583847778',''),(3720,'Giovanna Moura Canale','389607678',''),(3721,'Giovanna Paula Moura da Silva','551076860',''),(3722,'Giovanna Portela Soares','567159826',''),(3723,'Giovanna Rocha da Silva','528602585',''),(3724,'Giovanna Roque Gentil','573658614',''),(3725,'Giovanna Sanches Melo','545289233',''),(3726,'Giovanna Sanchez Garrucho','520334528',''),(3727,'Giovanna Santos DAlessio Brandao','559343164',''),(3728,'Giovanna Santos Gianetti de Souza','381564332',''),(3729,'Giovanna Santos Trente','399969676',''),(3730,'Giovanna Sechinatto da Fonseca','384352250',''),(3731,'Giovanna Siqueira Batista','389635248',''),(3732,'Giovanna Soglia Braz','524648311',''),(3733,'Giovanna Teles Alvarenga','561764293',''),(3734,'Giovanna Tenorio Avoli Liqueri','522743547',''),(3735,'Giovanna Toledo Faria','399658786',''),(3736,'Giovanna Tonon Kielblock','575289442',''),(3737,'Giovanna Vacari Carrillo dos Santo S','597262433',''),(3738,'Giovanna Victoria de Oliveira','570389343',''),(3739,'Giovanni Borges Catto','549567331',''),(3740,'Giovanni Pasini Mininchiello','523654881',''),(3741,'Giovanni Santos Floriano da Silva','522327163',''),(3742,'Giulianna Fachinelli','382362202',''),(3743,'Giulio Celso Cecchi Ponce','478479335',''),(3744,'Giullia Marinho Guerra Ferreira','392513651',''),(3745,'Giullia Vianna Galera','545298611',''),(3746,'Glaicy Kelly Pereira Domiciano','542292798',''),(3747,'Glaucia da Silva Vicente Neto','419360323',''),(3748,'Glaucia Isabella Belo Queiroz','380086967',''),(3749,'Gleice Brito Marques da Cruz','582453641',''),(3750,'Gleice Cristina Silva Ferreira de Lima','567866324',''),(3751,'Gleice Reis Pacheco','539455805',''),(3752,'Gleyson Alyson Marques de Freitas','374128960',''),(3753,'Gloria Maria Azevedo de Almeida','533323575',''),(3754,'Grasiela Eduarda Rodrigues Correa','587333984',''),(3755,'Grasieli Gomes Dourado','383326059',''),(3756,'Graziela Blois Silva','336795506',''),(3757,'Graziele Oliveira Lopes','383632160',''),(3758,'Graziele Rodrigues da Silva','539687807',''),(3759,'Grazielle Martins Carvalho','546407006',''),(3760,'Grazielli Azevedo Leal','385691014',''),(3761,'Gregory Nogueira dos Santos','469811961',''),(3762,'Gregory Ulisses Yank Santana da Silva','375942361',''),(3763,'Guadalupe Brenda da Silva Pereira','560239440',''),(3764,'Guiherme Batista dos Santos','538105616',''),(3765,'Guilherme Almendro da Silva','44548393870',''),(3766,'Guilherme Arruda Carneiro da Silva','382825858',''),(3767,'Guilherme Augusto Ferreira da Cruz','387371849',''),(3768,'Guilherme Benevides de Freitas','502867279',''),(3769,'Guilherme Carvalho de Almeida','539850718',''),(3770,'Guilherme Costa Santiago','572701238',''),(3771,'Guilherme Cozza Augusto','502444587',''),(3772,'Guilherme de Franca Cabral','383618460',''),(3773,'Guilherme de Sa Barros','550419950',''),(3774,'Guilherme Degam Roque','384990034',''),(3775,'Guilherme Fernandes Simplicio Lopes','521653423',''),(3776,'Guilherme Fernando Goncalves Bello','393692929',''),(3777,'Guilherme Ferreira Bezerra da Silva','387369879',''),(3778,'Guilherme Gama de Oliveira','542512592',''),(3779,'Guilherme Gherghi Barbosa Santos','523645314',''),(3780,'Guilherme Gustavo Cunha Silva','394344194',''),(3781,'Guilherme Henrique Araujo','527322982',''),(3782,'Guilherme Henrique Gomes da Silva','381572924',''),(3783,'Guilherme Henrique Lacerda Duarte','383614004',''),(3784,'Guilherme Lima Gomes','564215454',''),(3785,'Guilherme Luiz Pinheiro Costa','392124178',''),(3786,'Guilherme Matheus Viana da Silva','530739124',''),(3787,'Guilherme Mengarda Lima','542295696',''),(3788,'Guilherme Meves Macario','379631131',''),(3789,'Guilherme Muniz da Silva Pereira','584069807',''),(3790,'Guilherme Nunes Maciel','534207832',''),(3791,'Guilherme Pestana de Oliveira','393226633',''),(3792,'Guilherme Pietro Valentin','525267300',''),(3793,'Guilherme Pinheiro Neves','50294215',''),(3794,'Guilherme Ribeiro Pereira','564999647',''),(3795,'Guilherme Rios de Oliveira','642604903',''),(3796,'Guilherme Santana da Silva','546964539',''),(3797,'Guilherme Soares de Oliveira','388849460',''),(3798,'Guilherme Souza Silva','506399096',''),(3799,'Guilherme Yamada Yoshigaye','375634540',''),(3800,'Gustavo Bezerra da Silva','415083011',''),(3801,'Gustavo Brait Pires','389607307',''),(3802,'Gustavo David Alves','502883005',''),(3803,'Gustavo de Franca Cabral','383618459',''),(3804,'Gustavo de Lima Oliveira','540736170',''),(3805,'Gustavo dos Santos Inacio','378041885',''),(3806,'Gustavo Fernandes Zandona','571628928',''),(3807,'Gustavo Gavioli Almeida','379633371',''),(3808,'Gustavo Henrique Alves Ferreira','543389601',''),(3809,'Gustavo Henrique de Oliveira Mendes','557966255',''),(3810,'Gustavo Henrique Rodrigues da Silva','533156877',''),(3811,'Gustavo Lourenco Cavalcante','568265646',''),(3812,'Gustavo Malfi da Cruz','506197906',''),(3813,'Gustavo Morais Oliveira de Jesus','533321670',''),(3814,'Gustavo Morato Italia','559346918',''),(3815,'Gustavo Nascimento da Silva','520031977',''),(3816,'Gustavo Nogueira Borges','372873509',''),(3817,'Gustavo Nunes Silvestre','449648278',''),(3818,'Gustavo Oliveira Caires','543138094',''),(3819,'Gustavo Oliveira de Souza','394847842',''),(3820,'Gustavo Rocha de Abreu Proenca','561773725',''),(3821,'Gustavo Rodrigues N. de Assis Junior','551421289',''),(3822,'Gustavo Santos da Motta Norberto','391606918',''),(3823,'Gustavo Soares dos Santos','550749019',''),(3824,'Gustavo Souza Gomes','449401730',''),(3825,'Gustavo Tulio Freitas Silva','392124014',''),(3826,'Gustavo Viana Caires','382821154',''),(3827,'Gusthavo Aidan Cardoso Sasso','547221939',''),(3828,'Gyovanna Soares de Souza','586385710',''),(3829,'Hadassa Fernanda Souza da Silva','608809160',''),(3830,'Hamilton da Silva Goncalves','327293100',''),(3831,'Hanna Varin Renato','399655840',''),(3832,'Harickson Matheus Oliveira Pereira','730000000',''),(3833,'Heitor Augusto Nogueira Marin','508703785',''),(3834,'Heitor Lira Pires','387799229',''),(3835,'Helder Aguiar da Silva','375082505',''),(3836,'Heloisa Alves Pereira Santos','543448496',''),(3837,'Heloisa Baraldi de Souza','380341219',''),(3838,'Heloisa da Costa Alencar','399241474',''),(3839,'Heloisa de Sena Muniz Campos','508124347',''),(3840,'Heloisa Donini Borges','555371098',''),(3841,'Heloisa Martins Ferreira Pinto','590214822',''),(3842,'Heloisa Souza Silva Moreno','570592471',''),(3843,'Heloisa Verissimo de Oliveira','399679110',''),(3844,'Henrick Buttini de Oliveira','502911062',''),(3845,'Henrico Mendonca Cazzotto','553693700',''),(3846,'Henrique Antunes Lopes','532990780',''),(3847,'Henrique Cardoso de Oliveira','465487609',''),(3848,'Henrique Couto Ferreira','375216509',''),(3849,'Henrique da Silva Frias','398309322',''),(3850,'Henrique Lucas de Souza Oliveira','567429465',''),(3851,'Henrique Mancini Moreira','439635421',''),(3852,'Henrique Nascimento Ribeiro','553696622',''),(3853,'Henrique Ramos Teodoro','372972410',''),(3854,'Henrique Rodrigues de Oliveira','390657955',''),(3855,'Henrique Rodrigues de Souza','385324352',''),(3856,'Henrique Sanchez de Oliveira','549316966',''),(3857,'Henrique Soglia Braz','524648300',''),(3858,'Herllon de Oliveira','554493573',''),(3859,'Herman Boscariol Junior','377657591',''),(3860,'Hertz Santos Junior','298623134',''),(3861,'Heshiley Custodio Brito','396526044',''),(3862,'Heverson Alves Santos','5530055558',''),(3863,'Heyd de Oliveira','560674375',''),(3864,'Hiago Passos de Macedo','509335275',''),(3865,'Higor Lincoln da Silva Batista','546623128',''),(3866,'Hillary Ingrid Cardoso da Silva','388343539',''),(3867,'Hillary Yasmin Costa Ahmad Abdallah','528184738',''),(3868,'Hingrid Oliveira da Silva','628317347',''),(3869,'Hugo de Morais Melo Fukuda','478020211',''),(3870,'Hugo Moura Tico','530921881',''),(3871,'Hyan Ferraz Ribeiro','534101847',''),(3872,'Hyasmin Carvalho de Jesus','549321391',''),(3873,'Iago Gomes Noronha','626067364',''),(3874,'Ianca Jennifer Aguiar da Fonseca','381238027',''),(3875,'Lucas Neves de Oliveira','55159906',''),(3876,'Lucas Nobre Batista','391643988',''),(3877,'Lucas Oliveira de Jesus','505058560',''),(3878,'Lucas Oliveira de Lima','380343897',''),(3879,'Lucas Peixoto Santana da Silva','392752074',''),(3880,'Lucas Placido Silva','576748845',''),(3881,'Lucas Ramalho da Silva','558351610',''),(3882,'Lucas Ramalho Saraiva Dantas','607747481',''),(3883,'Lucas Ramos Silva de Carvalho','378159732',''),(3884,'Lucas Rela Fernandes','530460210',''),(3885,'Lucas Rodrigues','443410033',''),(3886,'Lucas Rodrigues Elias','425820476',''),(3887,'Lucas Santana Saturnino','548456641',''),(3888,'Lucas Santos Souto','548785156',''),(3889,'Lucas Santos Souza','558154219',''),(3890,'Lucas Sevieri Chagas','548713674',''),(3891,'Lucas Silva Bressan','370146360',''),(3892,'Lucas Silva dos Passos','473263129',''),(3893,'Lucas Sivero dos Santos','551093687',''),(3894,'Lucas Tude Martins Pereira','37913643657',''),(3895,'Lucas Valentim da Silva','396640151',''),(3896,'Lucas Vinicius Mendes Bachion','590825290',''),(3897,'Lucca Oliveira Ferri','543831954',''),(3898,'Luccas Nogueira Alves','507486195',''),(3899,'Luccas Pereira Nunes','1557352178',''),(3900,'Luciano Andre de Oliveira','288431145',''),(3901,'Luciano Aparecido do N. Franca Junior','394337281',''),(3902,'Luciano Tibucio','381582322',''),(3903,'Lucielle Dores Cruz','522738151',''),(3904,'Lucilla Felix Rodrigues','527162322',''),(3905,'Ludmila Bruni','551826733',''),(3906,'Luenan Marco de Paula Virgilino','65086170',''),(3907,'Luis Gustavo Borges dos Santos','381569585',''),(3908,'Luis Henrique Leal Miranda','526377872',''),(3909,'Luisa de Faria Solymos','523626678',''),(3910,'Luisa Fernandes Martins de Souza','384613238',''),(3911,'Luisa Libanori Zampollo','551720888',''),(3912,'Luiz Alfredo Siqueira Paschoalini','390655089',''),(3913,'Luiz Carlos da Costa','376937993',''),(3914,'Luiz Felipe Jesuino da Silva','523401504',''),(3915,'Luiz Felipe Trigone','541621920',''),(3916,'Luiz Fernando Ribeiro Salvaterra','501602380',''),(3917,'Luiz Guilherme Nogueira Navarro','547734037',''),(3918,'Luiz Gustavo de Menezes Correa','388895068',''),(3919,'Luiz Gustavo Dias da Silva','580757444',''),(3920,'Luiz Gustavo Freitas Werte Silva','380801127',''),(3921,'Luiz Henrique Aleixo Dias','554159995',''),(3922,'Luiz Henrique Alves Neto','573230948',''),(3923,'Luiz Henrique Plonkoski Lopes','535893206',''),(3924,'Luiz Otavio Siraque de Souza','525954703',''),(3925,'Luiza Akemi Maruyama','375029270',''),(3926,'Luiza Araujo Cavalcante','369838920',''),(3927,'Luiza Ivanovna Nalegaca','372275140',''),(3928,'Luma Santos Costa','381942636',''),(3929,'Lurya Caratanasov Jorge','548444304',''),(3930,'Luzia Nara Silva Sampaio','441442455',''),(3931,'Lydia Tavares Duarte','532410099',''),(3932,'Lygia Antunes de Sousa','564022317',''),(3933,'Madaline Luiz de Paulo Clemente','508345844',''),(3934,'Magda Ribeiro de Sousa Rocha','537477846',''),(3935,'Maiara Wenceslau da Silva','399453544',''),(3936,'Maicon Alisson Rodrigues dos Anjos','387856511',''),(3937,'Maicon Willis Santana Barros','553691569',''),(3938,'Maike Santos da Conceicao','522342875',''),(3939,'Maina Lima da Silva','392725204',''),(3940,'Maine dos Santos Souza','606308120',''),(3941,'Maira Feboli da Silva','565454663',''),(3942,'Maira Mesquita da Silva','397185777',''),(3943,'Maisa Bernardo Bezerra','60655660',''),(3944,'Maisa Gomes Santos','383640490',''),(3945,'Maisa Silva Cardoso de Sa','566330982',''),(3946,'Maithe Fernanda Silva dos Santos','442912675',''),(3947,'Malcom Santos Teixeira','529812502',''),(3948,'Mandarino da Silva Junior','184742614',''),(3949,'Manoel Messias de Souza','590797207',''),(3950,'Manoela Conti do Nascimento','525301770',''),(3951,'Manoela Vieira de Lima','501524522',''),(3952,'Mara Aparecida Fukuda','99498364',''),(3953,'Marcela Andrade Serrano','506045158',''),(3954,'Marcela de Lima Florencio','521395318',''),(3955,'Marcela Emili da Silveira','3784560003',''),(3956,'Marcela Ferreira Gomes','572057544',''),(3957,'Marcella Souza Cano','572026882',''),(3958,'Marcelo Dias Santos','572830361',''),(3959,'Marcelo Gonsales dos Santos','533314045',''),(3960,'Marcelo Pavao Takahashi','530211518',''),(3961,'Marcelo Victor Galvao','571386430',''),(3962,'Marcelo Vitor Rodrigues Bonora','556657019',''),(3963,'Marcely Sales Rodrigues','376644825',''),(3964,'Marcia Maria Bastos','375769389',''),(3965,'Marcio de Oliveira','254867777',''),(3966,'Marcio Ferreira de Santana','323999610',''),(3967,'Marco Antonio Dusi Nelli','388362571',''),(3968,'Marco Aurelio Alves dos Santos','341054914',''),(3969,'Marco Aurelio de Almeida Pagani','251044312',''),(3970,'Marcos Almeida da Silva','520311863',''),(3971,'Marcos Vinicius Carneiro de Jesus','378930461',''),(3972,'Marcos Vinicius da Silva','532158283',''),(3973,'Marcos Vinicius Monteiro Dias','523625364',''),(3974,'Marcos Yukinori Ishizaka Oshiro','528033669',''),(3975,'Mari Helen Vieira de Oliveira','604570820',''),(3976,'Maria Adriana de Sousa Lopes','462252700',''),(3977,'Maria Aldeci Alves da Silva','281342969',''),(3978,'Maria Aline da Silva','390293052',''),(3979,'Maria Andressa Ferreira de Morais','419937330',''),(3980,'Maria Aparecida Nogueira de Araujo','558715813',''),(3981,'Maria Celini Lopes','501831174',''),(3982,'Maria Clara da Silva','504004610',''),(3983,'Maria Clara Moulin Rego','3813307',''),(3984,'Maria Cristina Claudino Barros Faria Sousa','602813499',''),(3985,'Maria Cristina Quaresma da Silva','531821444',''),(3986,'Maria Daniele Santos da Costa','522019808',''),(3987,'Maria de Fatima de Alencar Santos','541535274',''),(3988,'Maria de Fatima Emidio dos Santos Lima','36745942',''),(3989,'Maria Eduarda Araujo de Oliveira','391740088',''),(3990,'Maria Eduarda Belarmino','392133787',''),(3991,'Maria Eduarda Buzon','627833639',''),(3992,'Maria Eduarda de Amorim Ferreira','544787559',''),(3993,'Maria Eduarda Duarte Francao','553746005',''),(3994,'Maria Eduarda Ferreira Alves','385676359',''),(3995,'Maria Eduarda Ferreira Neves','543133837',''),(3996,'Maria Eduarda Martins Carvalho','388003169',''),(3997,'Maria Eduarda Oliveira Silva','387612300',''),(3998,'Maria Eduarda Paulino Goncalves','373986993',''),(3999,'Maria Eduarda Rique Pessotti','573820480',''),(4000,'Maria Eduarda Santos Grijo de Oliveira','390270805',''),(4001,'Maria Eduarda Sousa Silva','509183773',''),(4002,'Maria Eduarda Sylvestre Marques Goes','506203657',''),(4003,'Maria Eduarda Taglioli Latanza','397282874',''),(4004,'Maria Eduarda Tavares Oliveira','390637658',''),(4005,'Maria Estefany de Amorim Ferreira','544787560',''),(4006,'Maria Francieli Souza da Silva','528380230',''),(4007,'Maria Gabriela Bartolomeu da Silva','530213394',''),(4008,'Maria Gabriela de Oliveira Gimenez da Silva','507495585',''),(4009,'Maria Ines da Silva de Oliveira','346807463',''),(4010,'Maria Karoline da Silva Macwedo','522017447',''),(4011,'Maria Natalia Redigolo','569879700',''),(4012,'Maria Paula dos Angelos Borges','566285915',''),(4013,'Maria Regina Zipf Martins','504690371',''),(4014,'Maria Susyane do Nascimento','2008568495',''),(4015,'Maria Victoria Carvalho Eloi','387785632',''),(4016,'Maria Vitoria Teixeira Balestra','381469177',''),(4017,'Mariana Aparecida Zacharias Pereira','559135233',''),(4018,'Mariana Aparecida Zacharias Pereira','559135253',''),(4019,'Mariana Bizerra Moreira','594229686',''),(4020,'Mariana Cathalina Castilho Coelho','503873950',''),(4021,'Mariana da Silva Santos','491736988',''),(4022,'Mariana de Oliveira Consani','499707953',''),(4023,'Mariana dos Santos Ramos','543850961',''),(4024,'Mariana Eliza Xavier da Silva','55277817',''),(4025,'Mariana Epifanio Almeida','558262600',''),(4026,'Mariana Ferreira da Silva','537067516',''),(4027,'Mariana Fontes Alves','506382436',''),(4028,'Mariana Francine Silva Chiodo','365926279',''),(4029,'Mariana Gomes de Sousa','362311675',''),(4030,'Mariana Goncalves Porto','384985270',''),(4031,'Mariana Luzia Martins Pinto','534629921',''),(4032,'Mariana Missassi','532402741',''),(4033,'Mariana Oliveira de Melo','399107812',''),(4034,'Mariana Paula Silva Dominicheli','385340382',''),(4035,'Mariana Rodrigues Chaves da Silva','382833480',''),(4036,'Mariana Rodrigues Lagareiro','528621531',''),(4037,'Mariana Romeu Torres','535358106',''),(4038,'Mariana Santos Marques','359753968',''),(4039,'Mariane de Jesus Silva','523424401',''),(4040,'Marianne Oliveira Silva','546503329',''),(4041,'Mariany Steffany Franco da Silva','567682997',''),(4042,'Mariele dos Santos','457307948',''),(4043,'Marilia Beatriz Pires Ramos','374739894',''),(4044,'Marina Fernanda Lopes da Silva','429430619',''),(4045,'Marina Gradin','556724471',''),(4046,'Marina Kelly dos Santos de Deus','554994549',''),(4047,'Marlon Francisco do Nascimento','572603964',''),(4048,'Marly Martins Leal','368366546',''),(4049,'Martim Severino','153400729',''),(4050,'Mateus de Almeida Pereira','506028471',''),(4051,'Mateus de Araujo Dantas','381877279',''),(4052,'Mateus de Lima Florencio','521395306',''),(4053,'Mateus de Souza Batista','500194105',''),(4054,'Mateus Geraldo Guerra','385673980',''),(4055,'Mateus Rodrigues Hebert Reis','390297343',''),(4056,'Matheus Alencar Nascimento','561541693',''),(4057,'Matheus Alves da Silva','399661281',''),(4058,'Matheus Amaral Venturini','476012636',''),(4059,'Matheus Antony de Almeida Silva','391252343',''),(4060,'Matheus Arantes Mororo','431292577',''),(4061,'Matheus Augusto Vassalo Lisboa','539749862',''),(4062,'Matheus Batista dos Santos Felix','389604770',''),(4063,'Matheus Bruno dos Santos','572732429',''),(4064,'Matheus Cherve Mendes Ferreira','384981422',''),(4065,'Matheus Costa Rique','398313829',''),(4066,'Matheus da Silva Almeida','593661667',''),(4067,'Matheus de Almeida','606740090',''),(4068,'Matheus de Souza','379299252',''),(4069,'Matheus Dias de Oliveira','625756964',''),(4070,'Matheus dos Santos Ropero','530974964',''),(4071,'Matheus dos Santos Souza','375673283',''),(4072,'Matheus Estevam Silva Cunha','608205655',''),(4073,'Matheus Felipe da Silva','387354360',''),(4074,'Matheus Fernando Ribeiro Negocia','560006690',''),(4075,'Matheus Gomes de Oliveira','385823952',''),(4076,'Matheus Grandolpho Rolim Meneses','559613842',''),(4077,'Matheus Henrique da Silva','396136035',''),(4078,'Matheus Henrique da Silva Apostulo','386128340',''),(4079,'Matheus Henrique Faiotto da Silva','527547281',''),(4080,'Matheus Hilario Denone','436000672',''),(4081,'Matheus Kenzo Miashiro','507081651',''),(4082,'Matheus Lemos Amaragi','536443476',''),(4083,'Matheus Lima de Almeida','577761420',''),(4084,'Matheus Macedo dos Santos','396804603',''),(4085,'Matheus Malentaqui de Oliveira','387115500',''),(4086,'Matheus Malta Pereira da Silva','396240033',''),(4087,'Matheus Medina','561210974',''),(4088,'Matheus Miranda Luchiari','537068685',''),(4089,'Matheus Mota da Silva','522576655',''),(4090,'Matheus Oliveira Cordeiro','540954603',''),(4091,'Matheus Rodrigues da Cruz','547644036',''),(4092,'Matheus Santana de Queiroz','526395266',''),(4093,'Matheus Santos Carneiro','375945581',''),(4094,'Matheus Silva Marques','449404201',''),(4095,'Matheus Tavares Batista da Silva','576434966',''),(4096,'Matheus Vieira da Silva','388845880',''),(4097,'Matheus Vinicius Tavares Fonseca','502901585',''),(4098,'Mauricio Rosalino Junior','385825778',''),(4099,'Mauricio Santana Barbosa','522577090',''),(4100,'Mauricio Silva de Franca','498349196',''),(4101,'Maxwell Gomes de Almeida','292222063',''),(4102,'Mayan Furtado Alves','528042713',''),(4103,'Mayara Barreto dos Santos','634929082',''),(4104,'Mayara de Lima Ribeiro','446286369',''),(4105,'Mayara de Souza Bueno','582294423',''),(4106,'Mayara Ramos Lopes','397835164',''),(4107,'Mayara Teshima Alves','527676731',''),(4108,'Mayara Vieira Pagesls','503639886',''),(4109,'Andressa Larissa Paschoa Piacenti','375325785',''),(4110,'Bianca Regina Pasquim','373720749',''),(4111,'Breno Soares de Azevedo','160176102',''),(4112,'Carlos Tavares da Silva','15579408',''),(4113,'Daniel da Silva Aguiar','530114800',''),(4114,'Gabriela Araujo Florentino','394785186',''),(4115,'Guilherme','384753310',''),(4116,'Gustavo Silva Santos','388049509',''),(4117,'Igor Kalahari dos Santos','388200935',''),(4118,'Ivy Ester Bianchi Rodrigues de Oliveira','533131650',''),(4119,'Jessica Maria Cordeiro','347958357',''),(4120,'Jose Garcia de Medeiros Neto','500982156',''),(4121,'Julia Gomes da Silva','385803450',''),(4122,'Leonardo da Conceicao de Sousa','385445090',''),(4123,'Marcus Andre Silva Abreu','607005804',''),(4124,'Maria Micaela Bispo dos Santos','499424098',''),(4125,'Mariana Manfredi Facciolli','381256819',''),(4126,'Michel de Freita Silva','345577980',''),(4127,'Mikaele Santos Souza','524958579',''),(4128,'Renata Lessa de Almeida','390176047',''),(4129,'Sara Pinherio Rodrigues','390225174',''),(4130,'Thamires Santos Oliveira','548627575',''),(4131,'Thiago Henrique Sousa Sabino','379309555',''),(4132,'Vinicius Oliveira Camargo','367182968',''),(4133,'Wilkerson Arruda Maria Geraldo','363796150',''),(4134,'Leticia Bet Capellari','520322587',''),(4135,'Iara Goncalves Santos','531416367',''),(4136,'Iara Pereira Silva','569107180',''),(4137,'Iara Queiroz de Fontes Silva','527847495',''),(4138,'Iara Santiago Pereira Lima','571432438',''),(4139,'Icaro Aruajo Ferri','399659651',''),(4140,'Icaro Dobelli Soares da Silva','366925600',''),(4141,'Idatilia Domingos Coutinho Marcolin','346298064',''),(4142,'Igor Augusto de Oliveira','396731624',''),(4143,'Igor de Souza Soares','583602381',''),(4144,'Igor Franklin Vieira Sousa','432944680',''),(4145,'Igor Kauan Dias de Lima','395777460',''),(4146,'Igor Nascimento Ferreira','526904951',''),(4147,'Ingrid Ariede Jordao','521653836',''),(4148,'Ingrid Benhame Ferreira','538944535',''),(4149,'Ingrid Brito de Moraes','379273068',''),(4150,'Ingrid Costa Pereira','522778824',''),(4151,'Ingrid Dias Lacerda do Nascimento','536870111',''),(4152,'Ingrid Feitosa Rodrigues','582456254',''),(4153,'Ingrid Lais Oliveira Silva','390661089',''),(4154,'Ingrid Nathaly Soares da Silva','572862430',''),(4155,'Ingrid Pereira Rosa','531549252',''),(4156,'Ingrid Sa Melo','392460695',''),(4157,'Ingrid Sabrina Nery e Silva','559947318',''),(4158,'Ingrid Sakura Higa Ferreira','524660270',''),(4159,'Ingrid Santos Macedo','390058798',''),(4160,'Ingrid Vitoria Mielnik de Moraes','570508587',''),(4161,'Ingryd Nascimento','381564757',''),(4162,'Iracema Nunes Massaiolli','297649887',''),(4163,'Iris Batista da Silva','558719077',''),(4164,'Iris Falian','537466186',''),(4165,'Iris Ramos Guimaraes Ribeiro','507335417',''),(4166,'Isaac Berto Dias Nascimento','502425519',''),(4167,'Isaac de Paulo Honorato','397179224',''),(4168,'Isaac Gudilunas de Santana','606220082',''),(4169,'Isaac Sartori Carvalho','381991465',''),(4170,'Isabela Alves Nigro Lino','540547785',''),(4171,'Isabela Alvino Silva','506189247',''),(4172,'Isabela Aparecida Andre dos Santos','604953185',''),(4173,'Isabela Cristina Jacintho','552392066',''),(4174,'Isabela da Silva Pedrosa','376936381',''),(4175,'Isabela de Grande','5011197266',''),(4176,'Isabela e Milde Nunes','382988735',''),(4177,'Isabela Mares Cardoso','598175751',''),(4178,'Isabela Maria da Silva','581540426',''),(4179,'Isabela Querino Pedro','527175948',''),(4180,'Isabela Salazar da Silva','546504388',''),(4181,'Isabela Taina Gomes','543853706',''),(4182,'Isabela Vitoria Santos de Paula','384353940',''),(4183,'Isabella Almeida Pereira','56041746',''),(4184,'Isabella Alves','392147956',''),(4185,'Isabella Baksa','554323930',''),(4186,'Isabella Barbosa Cardoso de Santana','557260073',''),(4187,'Isabella Caroline Ribas Maselco','388965460',''),(4188,'Isabella Casagrande','532374216',''),(4189,'Isabella Castellani','520310196',''),(4190,'Isabella Costa Nascimento','507480430',''),(4191,'Isabella de Cassia Barros','576555034',''),(4192,'Isabella de Sousa Paulino','391670669',''),(4193,'Isabella de Souza Reis','396156198',''),(4194,'Isabella do Amaral','588787218',''),(4195,'Isabella dos Reis Pascoaletti','554547855',''),(4196,'Isabella Escudeiro Garcia','559379511',''),(4197,'Isabella Ferreira Rosar','584625935',''),(4198,'Isabella Figueira Procopio','561894383',''),(4199,'Isabella Monteiro Almeida','550432826',''),(4200,'Isabella Ribeiro Presenca','546526548',''),(4201,'Isabella Silva Ramos','574470189',''),(4202,'Isabella Tiba de Carvalho','540387757',''),(4203,'Isabella Ventura Gouveia','522320405',''),(4204,'Isabella Vieira de Almeida','397891325',''),(4205,'Isabella Vitoria Neves da Silva','55700907860',''),(4206,'Isabelle Alves de Souza','545508058',''),(4207,'Isabelle Crisolana Coelho','381222846',''),(4208,'Isabelle da Conceicao Cordeiro','392352503',''),(4209,'Isabelly Machado','557372653',''),(4210,'Isabelly Mendes Danni','572673668',''),(4211,'Isac Baciga Pimenta','525950400',''),(4212,'Isadora Cristian da Silva','101622045',''),(4213,'Isadora de Almeida David','488395690',''),(4214,'Isadora Natalia de Souza Gerbelli','379620819',''),(4215,'Isaque Fernandes Dallarme','605903864',''),(4216,'Isaque Fernandes de Carvalho','599323991',''),(4217,'Isaque Renato Monteiro dos Santos','542309968',''),(4218,'Isla Karolina Gomes Batista','580613483',''),(4219,'Israel Lucas Rodrigues de Macedo','553145058',''),(4220,'Israel Martins Gomes','542652213',''),(4221,'Itamara Valentim Gropo de Souza','341063113',''),(4222,'Ivete da Silva Batista','629615524',''),(4223,'Izabela Fagundes Bezerra','548075554',''),(4224,'Izabelle Giovana de Moura Brandao Bueno','385675008',''),(4225,'Izabelli Marques Siqueira','583899729',''),(4226,'Izabelly do Carmo Silva','553170879',''),(4227,'Izadora Pires Alves','399049757',''),(4228,'Izaura Aparecida dos Reis','172684298',''),(4229,'Jacira de Sousa Nogueira','410869351',''),(4230,'Jackeline Parra Moreira','382343165',''),(4231,'Jade Luana de Jesus dos Santos','600760923',''),(4232,'Jade Rocha','389618822',''),(4233,'Jady Mairia Nunes da Silva','383606044',''),(4234,'Jaicilene Rezende da Costa','501183395',''),(4235,'Jaideuvana Sousa do Nascimento','534876420',''),(4236,'Jailson Cleiton Lopes Martins','554545135',''),(4237,'Jamieli Alcantara Moreira da Silva','378477869',''),(4238,'Jamile Sopran Ferreira','543115410',''),(4239,'Jamilly Fernanda de Andrade','561573610',''),(4240,'Jamylle Bertelli de Moraes Gomes','578844114',''),(4241,'Janaina Cordeiro Vicente das Silva','419592532',''),(4242,'Janaina Karine Alves de Jesus','530262721',''),(4243,'Janaina Maria da Silva Braghiroli','493415658',''),(4244,'Janine Goncalves Dias da Silva','520329995',''),(4245,'Jaqueline Anjos de Oliveira','384680598',''),(4246,'Jaqueline Ribeiro Oliveira','566204873',''),(4247,'Jaqueline Santos Cruz','371859797',''),(4248,'Jayme Cardoso da Silva','602590437',''),(4249,'Jayne Kelly de Carvalho Teixeira','4069031',''),(4250,'Jean Greguere Millien','G311131A',''),(4251,'Jeferson Carvalho Damacena','531427699',''),(4252,'Jenifer Ferreira de Marcena','375478930',''),(4253,'Jeniffer da Silva Sousa','575977590',''),(4254,'Jeniffer de Lira Ferreira','558678324',''),(4255,'Jeniffer Jesus dos Santos','506195296',''),(4256,'Jeniffer Loureano Bossi de Barros','581199170',''),(4257,'Jennifer Adriane Soares de Carvalho','383006387',''),(4258,'Jennifer Andressa Martins','548419140',''),(4259,'Jennifer Beatriz dos Santos Souza','574354116',''),(4260,'Jennifer Cristina Rodrigues Henrique','557217120',''),(4261,'Jennifer de Jesus Silva','568762071',''),(4262,'Jenniffer Diovana Ferreira','378468637',''),(4263,'Jessica Alencar Silva','391662806',''),(4264,'Jessica Alves da Silva','494598384',''),(4265,'Jessica Amanda Goncalves','530501387',''),(4266,'Jessica Azevedo Gregorio','553699970',''),(4267,'Jessica Borges Brito','525011638',''),(4268,'Jessica de Jesus Jantos','556646332',''),(4269,'Jessica de Souza Moraes','394833715',''),(4270,'Jessica do Carmo Bosco','503991910',''),(4271,'Jessica Ferreira Silva','539065377',''),(4272,'Jessica Goncalves da Silva','528755675',''),(4273,'Jessika Aparecida de Almeida','365881326',''),(4274,'Jessika Yassuda de Oliveira','505591376',''),(4275,'Jesssica da Silva do Nascimento','555738139',''),(4276,'Jessyca Emanuelly da Silva','598254778',''),(4277,'Jheniffer Ellen da Costa Souza','396140347',''),(4278,'Jheniffer Fernanda de Moura','388954450',''),(4279,'Jhonatan Lima de Souza','560689354',''),(4280,'Jhonnathan de Souza Pessoa','585174003',''),(4281,'Jhonny de Sousa Pessoa','585175275',''),(4282,'Jhuan Borges Jambeiro de Souza','379279216',''),(4283,'Jhuann Piedro Alves Nogueira','561014024',''),(4284,'Joana Karoline Bosi','552337766',''),(4285,'Joana Manoela dos Santos Diniz','387112820',''),(4286,'Joao Carlos Agonilla Filho','385083403',''),(4287,'Joao Henrique Alves de Oliveira Figueiredo','551733445',''),(4288,'Joao Lucas de Melo Martins','524672350',''),(4289,'Joao Lucas Martins Lessa','392724236',''),(4290,'Joao Pedro Alves da Silva','374776659',''),(4291,'Joao Pedro Bonilha Miranda','557934862',''),(4292,'Joao Pedro Cicala Moreira da Silva','382363206',''),(4293,'Joao Pedro da Silva Areas','378924862',''),(4294,'Joao Victor Aniceto Alves','529170565',''),(4295,'Joao Victor Dantas de Morais','381562438',''),(4296,'Joao Victor de Assis','571125773',''),(4297,'Joao Victor Gali Castaldelli','594856371',''),(4298,'Joao Victor Granzoto Ferreira','391100506',''),(4299,'Joao Victor Meireles Natividade','570460396',''),(4300,'Joao Victor Pereira Pompeu','561203040',''),(4301,'Joao Victor Perreira dos Santos','529759044',''),(4302,'Joao Victor Soares dos Santos','384964667',''),(4303,'Joao Victor Souza Vieira','555600841',''),(4304,'Joao Vitor Campos da Silva','379614728',''),(4305,'Joao Vitor de Almeida Sousa','396737195',''),(4306,'Joao Vitor Dias Lima','503909609',''),(4307,'Joao Vitor do Nascimento de Sousa','547427037',''),(4308,'Joao Vitor Pereira da Silva','566808407',''),(4309,'Joao Vitor Rodrigues de Souza','601026482',''),(4310,'Joao Vitor Santos Diniz','566702370',''),(4311,'Jocely Pereira dos Santos','395144760',''),(4312,'Joelmir Mariano de Souza','233165540',''),(4313,'Johnny Gabriel Santana de Oliveria','568957167',''),(4314,'Joice Augusta Porto de Lima','397179340',''),(4315,'Joice Ketellem da Silva','579504177',''),(4316,'Joice Maiara dos Santos Gomes','505455470',''),(4317,'Jonas Gomes Xaiver','505451463',''),(4318,'Jonas Pedro da Silva Azevedo','520680534',''),(4319,'Jonathan Alexandre Veiga da Silva','556365628',''),(4320,'Jonathan Brandao de Oliveira Pereira','549385850',''),(4321,'Jonathan Camargo da Costa','297368942',''),(4322,'Jonathan Junipo de Souza','40420268',''),(4323,'Jonathan Souza Lima','568759345',''),(4324,'Jonathas Barros de Souza Silva','534093516',''),(4325,'Jonathas Teixeira da Sivla','384973360',''),(4326,'Jorzafar Fonseca da Silva','447069627',''),(4327,'Josane Mara Paiva Ramalho','556712821',''),(4328,'Jose Belizario Neto','376921687',''),(4329,'Jose Douglas Silva Pereira','560238290',''),(4330,'Jose Estefani dos Santos','327694178',''),(4331,'Jose Gustavo da Silva Tortoza','476440804',''),(4332,'Jose Leandro Silva de Freitas','375692435',''),(4333,'Jose Maria Braga Filho','376200730',''),(4334,'Jose Mendes da Silva','481154036',''),(4335,'Jose Nilton Alvex Teixeira Junior','526715947',''),(4336,'Jose Vitor Alves Santos','388622210',''),(4337,'Josiane de Barros','418681594',''),(4338,'Josinaldo Oliveira de Lucena Junior','526911670',''),(4339,'Joyce Amorim Cordeiro','385822881',''),(4340,'Joyce Arnaud Zoca','566142200',''),(4341,'Joyce Cipriano Victurino','349651700',''),(4342,'Joyce Franciele Dias','600646117',''),(4343,'Joyce Martins Coelho Alves','381882305',''),(4344,'Juan Carlos Rodrigues Silva','384646529',''),(4345,'Juan Lino Furukawa Braulio','385775441',''),(4346,'Juan Pablo Moreno Oliveira','385345689',''),(4347,'Jucineuma Sousa Nascimento','606474780',''),(4348,'Julia Alexandre de Lima','569342478',''),(4349,'Julia Alonso Perez Nogueira','557969086',''),(4350,'Julia Barreto Vioto','395712622',''),(4351,'Julia Bento Ferreira','555465251',''),(4352,'Julia Bueno da Silva','379279228',''),(4353,'Julia Buso Fernandes de Campos','395744180',''),(4354,'Julia Carlos Monteiro','390240801',''),(4355,'Julia Costa de Lima','394352622',''),(4356,'Julia de Brito','560005726',''),(4357,'Julia de Souza Santos','374667020',''),(4358,'Julia Fernandes Franco','533042409',''),(4359,'Julia Goncalves Barboza','384360476',''),(4360,'Julia Hellen Alves dos Santos','522780726',''),(4361,'Julia Hillary Santos Lemos','5609815088',''),(4362,'Julia Lais Silva Sousa','536692087',''),(4363,'Julia Morais Juliani','572164877',''),(4364,'Julia Navalon Golia','547228594',''),(4365,'Julia Oliveira Gonsales','504847156',''),(4366,'Julia Ramos Nascimento','540212143',''),(4367,'Julia Ribeiro Alves','383985043',''),(4368,'Julia Rita Nunes Machado','387140633',''),(4369,'Julia Rocha Archilla','524648359',''),(4370,'Julia Silva Favorin','385696498',''),(4371,'Julia Vieira e Silva','535354873',''),(4372,'Julia Vitoria Marinho de Andrade','380692442',''),(4373,'Julian Kelly Silva Alves','381581184',''),(4374,'Juliana Alves dos Santos','351260651',''),(4375,'Juliana Barbosa Silva','531435775',''),(4376,'Juliana Barboza','541044242',''),(4377,'Juliana Batista de Araujo','383640775',''),(4378,'Juliana Bonetti Donon','541817103',''),(4379,'Juliana Brossi Santos','557291823',''),(4380,'Juliana da Cruz Caetano Gomes','396285946',''),(4381,'Juliana de Souza Cosmo','5251353309',''),(4382,'Juliana Domingos de Amaral','52137847',''),(4383,'Juliana Galdina Galdino','377856836',''),(4384,'Juliana Lais da Silva','419847250',''),(4385,'Juliana Laura Silva Leite','560397124',''),(4386,'Juliana Lourenco da Silva','601709433',''),(4387,'Juliana Matos Morais','581858268',''),(4388,'Juliana Nascimento Balbino','371356799',''),(4389,'Juliana Petarnella','385056424',''),(4390,'Juliana Silva Beneti','537063213',''),(4391,'Juliana Soares dos Santos','396646128',''),(4392,'Juliana Vitoria Moura Monteiro','523461859',''),(4393,'Juliano Santos da Silva','469426410',''),(4394,'Juliano Silva dos Santos','376913095',''),(4395,'Julio Cesar Alves Brandao','538928189',''),(4396,'Julio Cesar de Souza Marin','388661616',''),(4397,'Julio Cesar Marinheiro','489397517',''),(4398,'Julio Cesar Pereira da Silva','387998627',''),(4399,'Julio Cesar Rezende da Silva Ferreira','572185947',''),(4400,'Julio Cesar Vieira','574353653',''),(4401,'Julio Cezar Duarte Izidoro','383967594',''),(4402,'Julio Gabriel de Queiroz Sacca','391653866',''),(4403,'Jull','385665210',''),(4404,'Julya Ketlin Gama Pereira','546252527',''),(4405,'Juno dos Santos Camillo','553755894',''),(4406,'Kae Rimoli Campos','374759728',''),(4407,'Kaic Bruno Soares de Souza','537468493',''),(4408,'Kaio de Araujo Silva','505591110',''),(4409,'Kaio Oliveira da Silva','534611254',''),(4410,'Kaique Augusto Almeida','556680066',''),(4411,'Kaique Gonscalves dos Santos Gomes','561382670',''),(4412,'Kaique Moreira da Silva','396541203',''),(4413,'Kaique Souza Santos','504346441',''),(4414,'Kaique Vieira Beserra','399345450',''),(4415,'Kalil Almeida Teodoro dos Santos','601631298',''),(4416,'Kamila Fernanda Sousa Santos','73572453',''),(4417,'Kamila Martins Veras','389595536',''),(4418,'Kamille Oliveira Silva','525864192',''),(4419,'Karen de Sousa Pittarelli','390658121',''),(4420,'Karina Cesar dos Reis','542663399',''),(4421,'Karina Costa Souza','505228312',''),(4422,'Karine de Oliveira Lorencao','481042659',''),(4423,'Karolayne Gomes Cardoso','36585',''),(4424,'Karoline Lopes Apolinario da Silva','564819268',''),(4425,'Karoline Maria Valenca Santos','388974692',''),(4426,'Karoline Ramalho de Lima','563801402',''),(4427,'Kassio Oliveira da Silva','53461126',''),(4428,'Katarina Vitoria Silva Braz','550427430',''),(4429,'Kathleen Ariany Martins Silva','388344910',''),(4430,'Kathy Yvonne Meza Trafian Santos','y2606380',''),(4431,'Katia Cristina Santana Gomes','1439637',''),(4432,'Katia Mendes dos Santos','350004195',''),(4433,'Katiusca Yasmin Boa Ventura Cabral','524646107',''),(4434,'Katy Anny Oliveira Almeida','376849460',''),(4435,'Kauainy Barbosa da Silva Marra','MG21223128',''),(4436,'Kauan Rios de Melo','581624336',''),(4437,'Kauan Rodrigues Guimaraes','374761401',''),(4438,'Kauane Souza Braga','386495506',''),(4439,'Kauany Mikaelle Vanda da Silva Lima','530759100',''),(4440,'Kaue Martins Amaral','562977223',''),(4441,'Kaue Rafael Lima Di Santi Pires','374310660',''),(4442,'Kayna Gustavo Santana Silva','378912057',''),(4443,'Keila Cristina da Silva dos Santos','559176442',''),(4444,'Keila de Almeida Pinto','389598598',''),(4445,'Keila de Almeida Santos','522596150',''),(4446,'Kellen Flores Martinez Soares','567633901',''),(4447,'Kelly Cristina Chagas','381591475',''),(4448,'Kelly Oliveira da Silva','387134761',''),(4449,'Kelly Silva Jesus','507089893',''),(4450,'Kelvin Bezerra da Silva','375943110',''),(4451,'Kelvin Daniel da Cruz','390631450',''),(4452,'Kelvin Luiz da Silva Castro','531432920',''),(4453,'Kelvin Pereira Alves','544499712',''),(4454,'Kelvin Valentim Marques','522321768',''),(4455,'Kelvyn Andrew de Souza','394353950',''),(4456,'Kemilly Rayane Mendes Gaioni','595133903',''),(4457,'Kesia Lisboa da Silva','541529330',''),(4458,'Ketellin Ariadiny Ferreira Rodrigues','39496851894',''),(4459,'Ketheleen de Oliveira Fonseca','628104807',''),(4460,'Kethelin Oliveira de Araujo','397835723',''),(4461,'Kethelyn Farias Lino da Silva','572465701',''),(4462,'Kethilyn de Sousa da Silva','545338864',''),(4463,'Kethilyn dos Santos Nogueira','568603515',''),(4464,'Kethleen de Melo dos Santos','507795416',''),(4465,'Ketilen Mota dos Santos','530219621',''),(4466,'Ketlyn Cristine Marques Miranda','549906393',''),(4467,'Kevin Bernardino de Sena','505563058',''),(4468,'Kevin da Silva Rodrigues','504150078',''),(4469,'Kevin dos Santos','579922510',''),(4470,'Kevin Moraes Peres','555086215',''),(4471,'Kevin Moura da Silva','572088942',''),(4472,'Kevin William Silva de Oriveira','378925659',''),(4473,'Keyse Menezes Cara','548704820',''),(4474,'Khetlyn Vitoria da Silva Moreira','507095248',''),(4475,'Kiara Iasmyn Nascimento dos Santos','581031246',''),(4476,'Laila Coronado Gimenez Goncalves','554364323',''),(4477,'Laila Dias Silva','386137122',''),(4478,'Laila Mariana de Souza Andrade','392127787',''),(4479,'Lais Andrade Lima','385588781',''),(4480,'Lais Correia da Silva','575617718',''),(4481,'Lais da Conceicao Costa','505456450',''),(4482,'Lais Eduarda Melo de Oliveira','522788129',''),(4483,'Lais Garcia de Oliveira','384359887',''),(4484,'Lais Marques Vilela Messias','548718805',''),(4485,'Lais Pimentel Carfaro','558972901',''),(4486,'Lais Sampaio Santiago','465465614',''),(4487,'Laiza Silva de Azevedo','540226099',''),(4488,'Landiane Dutra Machado','3100792278',''),(4489,'Lara Beatriz Soares Sipriano','546635660',''),(4490,'Lara Forlan Mendonca','524659242',''),(4491,'Lara Libanori Zampollo','551720876',''),(4492,'Lara Lorenzoni Rios','392131869',''),(4493,'Lara Maria Bernardo','396732483',''),(4494,'Larissa Barbosa Marim','397238927',''),(4495,'Larissa Beatriz Pedroso Alencar','387119498',''),(4496,'Larissa Caratanasov Jorge','548459770',''),(4497,'Larissa Carmo Silva','577890487',''),(4498,'Larissa Cristina Silva dos Santos','558994337',''),(4499,'Larissa de Castro Silva','522787447',''),(4500,'Larissa de Jesus Silva','394149208',''),(4501,'Larissa de Mello Braga','548426065',''),(4502,'Larissa de Mesquita','392584128',''),(4503,'Larissa de Oliveira Santos','507475537',''),(4504,'Larissa de Souza Vitor Honorato','398320238',''),(4505,'Larissa dos Santos Rodrigues','380342509',''),(4506,'Larissa Goncalves Santana','388357800',''),(4507,'Larissa Helita da Silva Alves','20088549806',''),(4508,'Larissa Jesus dos Santos','508625348',''),(4509,'Larissa Militao Ferreira','509685092',''),(4510,'Larissa Nunes Ferreira','529816581',''),(4511,'Larissa Parente da Silva','528176110',''),(4512,'Larissa Paulino da Silva','36956053',''),(4513,'Larissa Ribeiro do Nascimento','533307995',''),(4514,'Larissa Rodrigues da Silva','388846008',''),(4515,'Larissa Shaira Diniz Florentino','504002752',''),(4516,'Larissa Silva dos Santos','563526026',''),(4517,'Larissa Sonaia dos S. B. G. Braciak','382381956',''),(4518,'Larissa Sousa Mesquita','391645547',''),(4519,'Larissa Torres Gomes de Sa','523627658',''),(4520,'Larissa Yumie Moriya Bella','568654572',''),(4521,'Laryssa Carvalho de Lima','379226030',''),(4522,'Laryssa Mendes Bastos','388462760',''),(4523,'Lauene Galvao dos Santo','505567684',''),(4524,'Laura Bertoni Barbosa Saraiva','531435740',''),(4525,'Laura de Souza Varini','569471060',''),(4526,'Laura Duarte da Silva','579534250',''),(4527,'Laura Elis Lima de Sousa','384574208',''),(4528,'Laura Jordana Timoteo de Melo','398302935',''),(4529,'Laura Lakitini dos Santos','551731473',''),(4530,'Laura Lopes de Andrade','387112870',''),(4531,'Laura Marques Costa','539455635',''),(4532,'Laura Mayumi Miguel','501129698',''),(4533,'Laura Rosik Rezende','551982720',''),(4534,'Laura Souza de Carvalho','389228140',''),(4535,'Laura Vieira Paro','507031969',''),(4536,'Lauren Gabrielli de Souza','576971820',''),(4537,'Laurene Oliveira de Araujo','397835644',''),(4538,'Lavinia Cardoso Soares','390869557',''),(4539,'Layla Moreira da Silva','559434674',''),(4540,'Lays Stacy Pires Pinho','429764157',''),(4541,'Layslla de Araujo Costa','626143597',''),(4542,'Leandro Eusebio de Abreu','397822066',''),(4543,'Leandro Pinto','536705604',''),(4544,'Leidiane Bispo Nunes da Silva','376938640',''),(4545,'Leila Silva Soares dos Santos','432057225',''),(4546,'Leonardo Braga de Souza','394340188',''),(4547,'Leonardo C Oncolato Boscariol','576325843',''),(4548,'Leonardo Carvalho de Melo','532146207',''),(4549,'Leonardo Cesar Dittrich','505582533',''),(4550,'Leonardo de Brito Camilo','596811007',''),(4551,'Leonardo de Oliveira Lucindo Arasiro','423481850',''),(4552,'Leonardo Feitosa Vieira Borba','535988187',''),(4553,'Leonardo Ferreira dos Santos','363320143',''),(4554,'Leonardo Ferrreira da Silva','529873862',''),(4555,'Leonardo Francisco Menezes','565699969',''),(4556,'Leonardo Kenzo Sugata Naves','351126960',''),(4557,'Leonardo Lemos Borges','438557311',''),(4558,'Leonardo Machado Leite','522784872',''),(4559,'Leonardo Oliveira Souza','396648241',''),(4560,'Leonardo Pessoa de Assis','549113265',''),(4561,'Leonardo Rodrigues Bispo','379603410',''),(4562,'Leonardo Silva Candido','522857528',''),(4563,'Leonardo Times Carvalho dos Santos','520457195',''),(4564,'Leonardo Weslei Drozino Lourenco','569123653',''),(4565,'Lerry Ramos Silva','532989788',''),(4566,'Leticia Alexandrina de Souza Scheelerg','571697379',''),(4567,'Leticia Alves de Jesus Nascimento','572088851',''),(4568,'Leticia Andrade Marques','385367296',''),(4569,'Leticia Araujo de Souza','377198717',''),(4570,'Leticia Buson Leite','380403262',''),(4571,'Leticia Caetano Pereira','392317515',''),(4572,'Leticia Cavalcante Neves','545851397',''),(4573,'Leticia Cunha Romero','522329925',''),(4574,'Leticia da Silva Correia','528606311',''),(4575,'Leticia da Silva Pimenta','550554993',''),(4576,'Leticia da Silva Rabelo','542283700',''),(4577,'Leticia Dias Cerqueira dos Santos','377659630',''),(4578,'Leticia Dias Goncalves','374127487',''),(4579,'Leticia dos Santos Souza','382381981',''),(4580,'Leticia Gabrielly de Souza Ferreira','507215953',''),(4581,'Leticia Gasparetti Vargas','579188759',''),(4582,'Leticia Gomes Biserra','549901670',''),(4583,'Leticia Leite da Silva','451545709',''),(4584,'Leticia Lourenco dos Santos','381240710',''),(4585,'Leticia Magri Cantanti','502452377',''),(4586,'Leticia Nascimento Rodrigues','571179046',''),(4587,'Leticia Novaes Munhoz','526433164',''),(4588,'Leticia Nunes Macedo','592174669',''),(4589,'Leticia Oliveira da Silva','586007465',''),(4590,'Leticia Pasini Calegari','606897069',''),(4591,'Leticia Rodrigues Severino','395211396',''),(4592,'Leticia Santiago de Araujo','507733459',''),(4593,'Leticia Scarlleth Rodrigues','372634394',''),(4594,'Leticia Silva Rosa','526891865',''),(4595,'Leticia Souza Bina','394851377',''),(4596,'Leticia Souza do Prado','386602955',''),(4597,'Leticia Sparapani','571870946',''),(4598,'Leticia Vale de Souza','467951860',''),(4599,'Leticia Valin Campana','509161595',''),(4600,'Leticia Vespero Camargo','554216771',''),(4601,'Leticia Vitoria de Jesus Souza','399976620',''),(4602,'Letycia da Silva','377657025',''),(4603,'Levy Henrique Alves Nunes','4326325005',''),(4604,'Lhais Silva Rodrigues de Barros','548849389',''),(4605,'Liandra Aparecida Barradas Ferreira','562260717',''),(4606,'Liandra Perrella Zukeram','537063055',''),(4607,'Licy Lara Araujo de Figueiredo','609844362',''),(4608,'Lieh Marina Maffeis Acafori','533980628',''),(4609,'Ligia Rodrigues Carraro','522341044',''),(4610,'Lilian Coutinho Goncalves','503508240',''),(4611,'Lillian Fernandes Lopes de Jesus','575178371',''),(4612,'Lilliany Ketien Sousa dos Santos','385827349',''),(4613,'Livia Cristina Kubagawa','502195083',''),(4614,'Livia Cutti Dias','505458238',''),(4615,'Livia Dasi Lva','572108849',''),(4616,'Livia Depolli Bizzo Barbosa','393341033',''),(4617,'Livia Dias Santos','383928606',''),(4618,'Livia dos Santos de Sousa','500068276',''),(4619,'Livia Freitas Fernandes','564616102',''),(4620,'Livia Marchezini Costa','536705926',''),(4621,'Livia Romera de Oliviera','537476477',''),(4622,'Lizandra Rodrigues Ferreira','399613663',''),(4623,'Lohane Kethilyn Araujo Lopes','541613960',''),(4624,'Lorena dos Santos Almeida','399960223',''),(4625,'Lorena dos Santos Fidelis','506388475',''),(4626,'Lorena Moreira Campo','397428406',''),(4627,'Lorena Patricio Lopes de Oliveira','529814754',''),(4628,'Lorenza Martin Cabrera','480117068',''),(4629,'Lorrane Gabriele Rosa da Silva','520829153',''),(4630,'Lourival das Virgens Filho','564548741',''),(4631,'Luan Alves de Jesus','532990250',''),(4632,'Luan da Silva Goncalves','374955566',''),(4633,'Luan Fernandes Jose','505053093',''),(4634,'Luan Oliveira Leite','545849019',''),(4635,'Luan Pereira Borges','558636100',''),(4636,'Luan Silva Barbosa','556750561',''),(4637,'Luan Victor Freitas Viel','391147936',''),(4638,'Luana Araujo de Alcantara','524653513',''),(4639,'Luana Barbosa da Rocha','577701137',''),(4640,'Luana Carneiro Gobbo','521396402',''),(4641,'Luana Cristina Dias','560930574',''),(4642,'Luana da Silva de Oliveira','530220738',''),(4643,'Luana Flausino Ferreira','561000256',''),(4644,'Luana Gomes','390069036',''),(4645,'Luana Manso Rodrigues Teixeira','388856968',''),(4646,'Luana Marques','545541335',''),(4647,'Luana Marques de Oliveira','380808626',''),(4648,'Luana Matos Aguiar','386259331',''),(4649,'Luana Minga Orfei','579153678',''),(4650,'Luana Rocha Valete','5697097104',''),(4651,'Luana Rodrigues da Silva','399451304',''),(4652,'Luana Santos Moreira','545825106',''),(4653,'Luana Souza Nogueira','4265865296',''),(4654,'Luane Vieira','383965020',''),(4655,'Luanna Laureano Ratto','378049586',''),(4656,'Luany Cerqueira de Sa','541629207',''),(4657,'Luany Freitas Wrotschincky','583812867',''),(4658,'Luara Aparecida Sousa','427862206',''),(4659,'Lucas Ambrosio de Oliveira','565782794',''),(4660,'Lucas Antonio Celestino','526896735',''),(4661,'Lucas Beneton dos Santos','387537739',''),(4662,'Lucas Bezerra Lopes','509684051',''),(4663,'Lucas Camilo de Oliveira','551066751',''),(4664,'Lucas Carneiro Guimaraes','465480615',''),(4665,'Lucas Coutinho Paredes Rocha','393318941',''),(4666,'Lucas Czeslaw Wazny','549317788',''),(4667,'Lucas da Silva Beserra','399669656',''),(4668,'Lucas Daniel Rodrigues Herculano','388894515',''),(4669,'Lucas de Almeida Hayakawa','559311114',''),(4670,'Lucas de Castro Fernandes','385678400',''),(4671,'Lucas de Jesus Franca','382356925',''),(4672,'Lucas de Souza Barbeiro','532300130',''),(4673,'Lucas Domingues da Silva','382812300',''),(4674,'Lucas Domingues Deliberal','523636593',''),(4675,'Lucas Eduardo de Amorim Silva','552585671',''),(4676,'Lucas Errera Rodrigues','574464153',''),(4677,'Lucas Felipe Nunes da Silva','566054395',''),(4678,'Lucas Felipi Vargas de Farias','555527384',''),(4679,'Lucas Ferreira Lopes','537451432',''),(4680,'Lucas Giovanetti Fedel Ramos','399388138',''),(4681,'Lucas Gomes Ferrari','385340291',''),(4682,'Lucas Gomes Venancio','388356418',''),(4683,'Lucas Guilherme de Oliveira Vale','382378945',''),(4684,'Lucas Henrique Alves Silva','505044213',''),(4685,'Lucas Henrique dos Santos Souza','574353288',''),(4686,'Lucas Henrique Loes','545296377',''),(4687,'Lucas Henrique Santos Azevedo','555966410',''),(4688,'Lucas Lacerda Amorim','398384411',''),(4689,'Lucas Leite dos Santos','385307287',''),(4690,'Lucas Lima Moura','384974909',''),(4691,'Lucas Marques Oliva','367675833',''),(4692,'Lucas Martins Cardoso','520835943',''),(4693,'Lucas Mateus Santos Pereira','399217162',''),(4694,'Lucas Mendes Lima','383970040',''),(4695,'Lucas Molina Argento','506387276',''),(4696,'Lucas Morais de Oliveira','393318072',''),(4697,'Lucas Moreira Quintao','549302890',''),(4698,'Maykon Henrique da Silva Dias','532403472',''),(4699,'Mayla Helena Soares dos Santos','534097080',''),(4700,'Maylson de Alencar Barbosa','584112634',''),(4701,'Mayra da Silva Gomes','521329966',''),(4702,'Maysa Gabriela Lopes','503639527',''),(4703,'Maythe Franco','531426609',''),(4704,'Mayuri Pires Costa Tavares','440385568',''),(4705,'Medline Kethylen Paulo Clemente','533439139',''),(4706,'Melissa Aya Kanehira','538151614',''),(4707,'Melissa Kessia Cavalcanti Oliveira','533019965',''),(4708,'Melissa Luiza Carvalho Vilas Boas','572562512',''),(4709,'Melissa Petrucci Rocha','528046597',''),(4710,'Mennamy Goncalves de Vila','399039600',''),(4711,'Micael Santana da Silva','386893809',''),(4712,'Michel da Costa Sousa','380422670',''),(4713,'Michele Adriana da Silva Gomes','463808344',''),(4714,'Michele Carvalho da Silva','532390647',''),(4715,'Michele Vizentini de Souza','599984405',''),(4716,'Michelle de Aquino Ribeiro','426108425',''),(4717,'Michelle Ferreira Silva','375561237',''),(4718,'Michelle Sena de Oliveira','397818956',''),(4719,'Michelli Costa Matos','535363874',''),(4720,'Michelly Aparecida Borges do Nascimento','381238660',''),(4721,'Michelly Stheffany Melo da Silva','577937510',''),(4722,'Michelly Venancio da Silva','584117784',''),(4723,'Midiane dos Santos Victorino','390631097',''),(4724,'Miguel Almeida Santos','388956549',''),(4725,'Miguel Oliveira de Sales','385364970',''),(4726,'Mikaelly da Silva Ho','570763800',''),(4727,'Mikely dos Santos Rodrigues','534101288',''),(4728,'Milena Barros Lima','394345101',''),(4729,'Milena Chaves Barbosa','567037289',''),(4730,'Milena de Souza Nogueira','533539973',''),(4731,'Milene Gabriela Martins Lira','530172987',''),(4732,'Milene Morales Silva','392486404',''),(4733,'Mileny Castro de Miranda','595281229',''),(4734,'Millene do Nscimento Figueiredo','386514598',''),(4735,'Millene Gomes da Silva','540211515',''),(4736,'Milleny Goncalves Fagundes','531728950',''),(4737,'Miqueas Albino Goes','490215130',''),(4738,'Miqueias Gumercindo Pereira de Oliveira','526909778',''),(4739,'Miqueias Oliveira Lima','389421728',''),(4740,'Mirian Fontenele de Sousa','558216353',''),(4741,'Mirian Pereira Mendes da Silva','560214121',''),(4742,'Mislene Vidal Struk','487951827',''),(4743,'Moises Candido Mazeu Ferreira','MG20402646',''),(4744,'Moises Marcelino Junior','435260546',''),(4745,'Monicke Gabriela de Lima Ferreira Campos','546408825',''),(4746,'Monique Emeli da Silva Almeida','395213794',''),(4747,'Monique Rafaela Souza de Jesus','394247127',''),(4748,'Monize Carolyna Bezerra de Farias','538098673',''),(4749,'Murillo Oliveira Correa','383318452',''),(4750,'Murillo Sousa de Jesuz','38236559',''),(4751,'Murilo Correa Franciscon','384966949',''),(4752,'Murilo Costa Petronilho','388845910',''),(4753,'Murilo Eduardo Estevao','541045027',''),(4754,'Murilo Flausino Ferreira','560998818',''),(4755,'Murilo Martins Silveira','556976642',''),(4756,'Murilo Oliveira dos Santos Silva','385160410',''),(4757,'Murilo Williamfeitosa Alves','385821761',''),(4758,'Murilo Xavier Ribeiro','563230988',''),(4759,'Mylena Barreto da Silva','502440946',''),(4760,'Mylena Pereira Araujo','525015656',''),(4761,'Nadia Hussein Abou Osman','541583967',''),(4762,'Nadja Thamyres Carvalho Dias de Camargo','390302673',''),(4763,'Naely Vitoria Cypriano Nunes dos Santos','570920887',''),(4764,'Nandhara Alexandrini Martins','527125921',''),(4765,'Nara Pabline Santos dos Anjos','4519200',''),(4766,'Natacha Francisca de Moura','387115316',''),(4767,'Natacha Oliveira de Freitas','378410970',''),(4768,'Natalia Barbosa Alves Pereira','435723790',''),(4769,'Natalia da Silva Soares','468977053',''),(4770,'Natalia Faria de Souza','384964000',''),(4771,'Natalia Ferreira dos Santos','383016976',''),(4772,'Natalia Gomes Fiuza','587839107',''),(4773,'Natalia Goncalves dos Santos','551421459',''),(4774,'Natalia Regina Pereira da Silva','472519347',''),(4775,'Natan Lopes Moraes','544624180',''),(4776,'Natanael Pimenta de Araujo','565921022',''),(4777,'Nataniele Mariano da Silva','438189358',''),(4778,'Natany Nunes Duarte Dinis','583455694',''),(4779,'Natasha Alves Castilho Guimaraes','538104430',''),(4780,'Natasha Roberta Bueno','571695358',''),(4781,'Natasha Yanka Sena','383969104',''),(4782,'Nathalia Barros Bernardello','375197461',''),(4783,'Nathalia Breda Costa','388008210',''),(4784,'Nathalia Brito Alves do Nascimento','528900006',''),(4785,'Nathalia Cecilia Bezerra','375672941',''),(4786,'Nathalia da Silva Ferreira','393947701',''),(4787,'Nathalia da Silva Moreira','390300378',''),(4788,'Nathalia de Andrade Costa','500290982',''),(4789,'Nathalia de Oliveira Botelho','400593178',''),(4790,'Nathalia de Sousa Andrade','570098737',''),(4791,'Nathalia Ferreira Bova','521645920',''),(4792,'Nathalia Holadia Geraldi Tognelli','578375072',''),(4793,'Nathalia Leonardo Barreto','374763628',''),(4794,'Nathalia Malvao da Silva','387133069',''),(4795,'Nathalia Munhoz Silva','551721959',''),(4796,'Nathalia Nascimento da Silva','524567530',''),(4797,'Nathalia Silva Franca','501599400',''),(4798,'Nathalia Vilela Borges','377660966',''),(4799,'Nathaly Cindy Rosario Bertassi','387996515',''),(4800,'Nathaly Goncalves Teixeira Oliveira','548243694',''),(4801,'Nathalya Kubota Dias dos Santos','580578331',''),(4802,'Nathan Henrique Godinho da Silva','557358980',''),(4803,'Nathanie Caroline de Oliveira Bugada','5075571638',''),(4804,'Nayara Ferreira Leal','393749873',''),(4805,'Nayara Ferreira Santos','395224937',''),(4806,'Nayara Gabriela da Silva Ferreira','533933602',''),(4807,'Nayara Kovacs Gaia','504819458',''),(4808,'Nayara Rocha Delapaz','569658780',''),(4809,'Nayra Karolyne dos Santos Rodrigues','536947284',''),(4810,'Nelson de Siqueira Guido Filho','379259590',''),(4811,'Neuza Xavier de Assis Leal','592154567',''),(4812,'Nicolas Antonio Pereira','375218142',''),(4813,'Nicolas Daniel da Cruz','392736238',''),(4814,'Nicolas de Melo Marinho','598818236',''),(4815,'Nicolas Evangelista de Souza','504821167',''),(4816,'Nicolas Kaue Rabelo','572513999',''),(4817,'Nicolas Marcelino da Silva','600919286',''),(4818,'Nicolas Maximilliam Buzatto de Gomes Leal','557020153',''),(4819,'Nicolas Nobrega da Siva Benassi','568777037',''),(4820,'Nicolas Teles','387787094',''),(4821,'Nicole Alexandre Ruiz dos Santos','536369574',''),(4822,'Nicole Almeida Francisco','391650944',''),(4823,'Nicole Bezerra Goncalves','506047878',''),(4824,'Nicole de Souza Oliveira','559275286',''),(4825,'Nicole Prevelato de Moura','381859034',''),(4826,'Nicole Victoria Nobre de Paula','502918275',''),(4827,'Nicole Vitoria Chagas da Silva','392732488',''),(4828,'Nicolle Ferreira Filho','380345080',''),(4829,'Nicolly de Souza Araujo da Silva','500962522',''),(4830,'Nicolly dos Santos Felisberto','534855520',''),(4831,'Nicolly Estephani Tavares Fosnseca','502901597',''),(4832,'Nicolly Ferreira Rodrigues dos Santos','387138687',''),(4833,'Nicolly Reis Santos','394357577',''),(4834,'Nicolly Ribeiro de Moraes','528608540',''),(4835,'Nicolly Soliguetti da Silva','385337050',''),(4836,'Nicolly Vitoria Pereira dos Santos','555530280',''),(4837,'Nicoly Kimberly Anunciacao Martins','543675518',''),(4838,'Nicoly Queiros Pistori','568597035',''),(4839,'Nicoly Rodrigues Mota','532147649',''),(4840,'Nicoly Victoria Gomes da Silva','394358820',''),(4841,'Nikolas Antonio Lopes Neves','503625619',''),(4842,'Nikolle Rosa','564111016',''),(4843,'Nithany Herculano Duarte','381875076',''),(4844,'Nivea Martins da Silva','399031091',''),(4845,'Nubia Emanuelle Ferreira da Cruz','536718519',''),(4846,'Nubia Vitoria Siqueira Damaso','562045454',''),(4847,'Nycole Fernandes de Sousa','569210082',''),(4848,'Odilia Silva Moreira do Nascimento','508901649',''),(4849,'Olivia Cidrao de Abreu','521067730',''),(4850,'Otavio Ferreira Gomes Neto','478214960',''),(4851,'Pablo Elvis Valadao de Oliveira','430437539',''),(4852,'Pablo Ferreira Rodrigues Figueiredo','564416825',''),(4853,'Pablo Henrique da Silva','566062082',''),(4854,'Palloma Nunes Lansana','394855152',''),(4855,'Paloma Aparecida Almeida','384972317',''),(4856,'Paloma Bordini Pereira','520305190',''),(4857,'Paloma Martos Munhoz Rodrigues','547139081',''),(4858,'Pamela Laurindo Campos','577642352',''),(4859,'Pamela Marinalva Magalhaes','430176788',''),(4860,'Pamela Santos da Silva','392143800',''),(4861,'Pamella Pinheiro Figueiredo dos Santos','546034652',''),(4862,'Patricia Ribeiro Almeida','530865920',''),(4863,'Patricia Santos da Conceicao','5222338069',''),(4864,'Patricia Sobrinho de Alcantara','532745103',''),(4865,'Patrick Trajano Vieira','538087365',''),(4866,'Patrick Vinicius de Lima Ferreira Campos','531168130',''),(4867,'Paula Beatriz Ramos Torres','385332543',''),(4868,'Paula de Lima Rocha','558470324',''),(4869,'Paulo Aparecido Giachini','97381240',''),(4870,'Paulo Barroso da Silva Nascimento','565748762',''),(4871,'Paulo Bedia Dias','501601971',''),(4872,'Paulo Enrique dos Santos Gomes','396655889',''),(4873,'Paulo Favaretto Paterno','541624660',''),(4874,'Paulo Heniruqe Lopes Cunha','551079034',''),(4875,'Paulo Henrique Campos Barboza','532161750',''),(4876,'Paulo Jose Farias','527131581',''),(4877,'Paulo Lucas Santos Tibaes','478129774',''),(4878,'Paulo Roberto Isoppo Filho','551707422',''),(4879,'Paulo Sergio Oliveira da Silva Junior','59394011',''),(4880,'Paulo Valenci Palavro Gimenez','551728590',''),(4881,'Pedro Augusto Cardoso Santos','522792534',''),(4882,'Pedro Augusto de Melo Araujo','565519773',''),(4883,'Pedro Augusto Santa Helia Cruz','558198211',''),(4884,'Pedro de Almeida Sparvolli','584374069',''),(4885,'Pedro Del Rey Menezes','566068175',''),(4886,'Pedro Felipe D. S. C. da Costa','537480481',''),(4887,'Pedro Felipe Domingos','594851051',''),(4888,'Pedro Gabriel de Lira','390573954',''),(4889,'Pedro Henrique de Freitas','579162801',''),(4890,'Pedro Henrique de Jesus Moura','572013590',''),(4891,'Pedro Henrique de Sousa Maracos','551959319',''),(4892,'Pedro Henrique Ferrante Prado','543134910',''),(4893,'Pedro Henrique Gardim','558039066',''),(4894,'Pedro Henrique Queiroz Navarro','3132504279',''),(4895,'Pedro Henrique Soares da Silva','530196505',''),(4896,'Pedro Henrique Vidal dos Santos','436171911',''),(4897,'Pedro Henrique Xavier Barbosa','390076521',''),(4898,'Pedro Jose Leite Zerbini','557760549',''),(4899,'Pedro Lucas Ferreira Ramos','387144109',''),(4900,'Pedro Lucas Pereira da Silva','549953097',''),(4901,'Pedro Lucas Souza dos Santos','551072003',''),(4902,'Pedro Martins Morato','384687090',''),(4903,'Pedro Paulo do Nascimento Silva','396136310',''),(4904,'Pedro Victor Rocha da Cruz','381571828',''),(4905,'Pedro Vinicius Canuto de Farias','503913145',''),(4906,'Pedro Vinicius de Campos Viera','542298430',''),(4907,'Perola Cardoso do Carmo','534859835',''),(4908,'Peterson Gonzaga Magalhaes','574384868',''),(4909,'Pietra Giovanna Gama Bisan','551723786',''),(4910,'Pietra Moreira Gama de Oliveira','544925154',''),(4911,'Pietro Hessel','544259026',''),(4912,'Poliana Nascimento Santos','522727232',''),(4913,'Pollyana Rosa da Silva','562274741',''),(4914,'Polyana da Silva Santos','581905192',''),(4915,'Thales Amorim Goncalves','541638440',''),(4916,'Thalia Anastacio de Sousa','501139370',''),(4917,'Thalina de Oliveira Carvalho','558010416',''),(4918,'Thalita Alves Simao','552329307',''),(4919,'Thalita Auria Alves Santos','557086127',''),(4920,'Thalita Cristina Borges da Silva','582530209',''),(4921,'Thalita de Lima Duarte','378823097',''),(4922,'Thalita Raiane da Silva Coutinho','379841538',''),(4923,'Thalita Vieira da Silva','377586687',''),(4924,'Thalys Henrique Alves Oliveira','565158958',''),(4925,'Thamar Charles','G3950653',''),(4926,'Thamires de Araujo Nunes','557806940',''),(4927,'Thamires Vitoria Freitas Tavares','521888190',''),(4928,'Thamirys Regina Garbi','571800932',''),(4929,'Thayna da Silva','396702831',''),(4930,'Thayna de Araujo Caetano','530382829',''),(4931,'Thayna de Oliveira Lombardi','508693159',''),(4932,'Thayna Franco Pereira','497799339',''),(4933,'Thayna Vieira Rocha','574798997',''),(4934,'Thaynara Aparecida de Moura','394904011',''),(4935,'Thaynara Santana Santos','567978060',''),(4936,'Thiago Alves de Oliveira','553169956',''),(4937,'Thiago Aquino Lima','521174491',''),(4938,'Thiago Camilo de Oliveira','551066763',''),(4939,'Thiago Condrasisen','389596863',''),(4940,'Thiago Costa Nunes Batista','457614535',''),(4941,'Thiago da Silva Dias','556355040',''),(4942,'Thiago da Silva Pontes da Costa','540209041',''),(4943,'Thiago de Oliveira Moneiro','417538443',''),(4944,'Thiago de Souza Ferreira','569327830',''),(4945,'Thiago Feitosa Fernandes','549566831',''),(4946,'Thiago Gomes da Silva','382372785',''),(4947,'Thiago Henrique Sobral de Almeida','540226531',''),(4948,'Thiago Henrique Teles dos Santos','500279226',''),(4949,'Thiago Lamonica Barreto','551734048',''),(4950,'Thiago Menezes Miranda','547208406',''),(4951,'Thiago Quirino','373718020',''),(4952,'Thielly Santana Santos','381861170',''),(4953,'Thifany Michelle Lins de Sousa','395224676',''),(4954,'Tiago Correia de Lima','381864479',''),(4955,'Tiago de Oliveira Gutierre','388967997',''),(4956,'Tiago Nunes dos Santos Queiroz','387995183',''),(4957,'Vagner da Cruz Junior','522344008',''),(4958,'Vagner Targino Freitas','531169625',''),(4959,'Valeria Cesario Alves','393258312',''),(4960,'Valeria de Souza Carvalho','598541494',''),(4961,'Valeria Gomes Barboza','530193504',''),(4962,'Vanderleia Fernandes Oliveira','467956844',''),(4963,'Vanessa Alves Silva','320880060',''),(4964,'Vanessa Camilly Santos de Lisboa','396217722',''),(4965,'Vanessa de Jesus Campos Nascimento','378941872',''),(4966,'Vanessa de Souza Silva','233172506',''),(4967,'Vanessa dos Santos Alves','5048188151',''),(4968,'Vanessa Felipe Silva','454600021',''),(4969,'Vanessa Maria da Silva','524032166',''),(4970,'Vanessa Rodrigues Vargas','330917456',''),(4971,'Vania Lucia de Oliveira','263946617',''),(4972,'Vanusa Nicassia Oliveira Dias','577953904',''),(4973,'Vanusa Valentim Amaral','273405470',''),(4974,'Veridiana Brandao Barbosa','390068093',''),(4975,'Veronica Carolina Ferre Penha','576455003',''),(4976,'Priscila Rocha Pinto Aguiar','368578884',''),(4977,'Queren Santos Rodrigues','559930884',''),(4978,'Quezia Evelyn Bardelli Lins','386506176',''),(4979,'Rafael Bispo da Silva','586344573',''),(4980,'Rafael Camillo Rodrigues','607183482',''),(4981,'Rafael da Silva Alkves','529166150',''),(4982,'Rafael da Silva Cavalcanti','529524260',''),(4983,'Rafael da Silva Emidio','530971392',''),(4984,'Rafael de Almeida Ferreira','572092702',''),(4985,'Rafael dos Santos Barbosa','1519430604',''),(4986,'Rafael dos Santos Silva','383358292',''),(4987,'Rafael Ferreira Pinto','501808255',''),(4988,'Rafael Freire Nunes','388958133',''),(4989,'Rafael Hideki Shimizu da Silva','375222110',''),(4990,'Rafael Macedo Goncalves','385335362',''),(4991,'Rafael Neres Magalhaes','399060080',''),(4992,'Rafael Oliveira da Silva','548246040',''),(4993,'Rafael Rosa da Silva','525915229',''),(4994,'Rafael Sanches dos Prazeres','561322326',''),(4995,'Rafael Santos Borazio','505453344',''),(4996,'Rafael Santos Santana','394087197',''),(4997,'Rafaela Ayumi Kubo Fernandes','538108472',''),(4998,'Rafaela da Silva Fewrreira','556104146',''),(4999,'Rafaela de Lourdes Ribeiro da Silva','520976290',''),(5000,'Rafaela Dutra dos Santos','551954140',''),(5001,'Rafaela Epifanio da Silva','505475546',''),(5002,'Rafaela Ferreira Andrade','545838903',''),(5003,'Rafaela Guadagnini Lima','577791217',''),(5004,'Rafaela Oliveira Silva','505459139',''),(5005,'Rafaela Pereira Silva','375217769',''),(5006,'Rafaela Rocha Silva','384251882',''),(5007,'Rafaela Rodrigues de Oliveira','499762506',''),(5008,'Rafaela Sardo Cipriano','530212183',''),(5009,'Rafaela Silva Souza','534620826',''),(5010,'Rafaela Sousa Vieira','572180469',''),(5011,'Rafaela Suely Silva Batista','386464029',''),(5012,'Rafaella Paula Ribeiro','557320616',''),(5013,'Rafaelly Ferreira dos Santos','626176062',''),(5014,'Rainaia Pires de Sousa','541619550',''),(5015,'Raissa Maria Neto','560232550',''),(5016,'Raissa Siqueira Santos','524413861',''),(5017,'Raissa Yumi Teruya Ferreira','396657230',''),(5018,'Raiza Lopes da Silva','629512206',''),(5019,'Rakelly da Silva Ferreira','559444280',''),(5020,'Ramon Goncales Felippe','543824743',''),(5021,'Ramonique Lima dos Santos','388185077',''),(5022,'Raone de Santana Rodrigues','388644552',''),(5023,'Raphael Gabriel Strauss','415374807',''),(5024,'Raphael Silva dos Passos','550436972',''),(5025,'Raquel da Silva Rodrigues','582884469',''),(5026,'Raquel Deveza Mendes da Silva','508294113',''),(5027,'Raquel Lopes Benides','399033695',''),(5028,'Raquel Oliveira de Almeida','395713146',''),(5029,'Raquel Rocha Deotti','537421658',''),(5030,'Raquel Souza da Silva','507107433',''),(5031,'Raquel Tavares de Lira','397557620',''),(5032,'Raul Borges de Oliveira','503774972',''),(5033,'Rayane Nunes de Sousa','390073453',''),(5034,'Rayla Cristina Monteiro de Jesus','383000166',''),(5035,'Raylan Nere Reis','3722249',''),(5036,'Rayssa de Aguiar Sobreira','26159210',''),(5037,'Victor Andrade Sutto','382375440',''),(5038,'Victor Baptista Leite','488429134',''),(5039,'Victor Barbosa Viera','377901015',''),(5040,'Victor Brandao Barbosa','390068172',''),(5041,'Victor Burghi Fernandes','38461293',''),(5042,'Victor Cardoso Lima','535926169',''),(5043,'Victor Carvalho de Souza','509185060',''),(5044,'Victor Certorio Pereira','561310634',''),(5045,'Victor da Silva Teixeira','520458590',''),(5046,'Victor Danginges Rodriguez','557880180',''),(5047,'Victor de Oliveira Mello','588900795',''),(5048,'Victor Felippe Dias','507832991',''),(5049,'Victor Gabriel Gomes da Silva','468519166',''),(5050,'Victor Gualberto Nunes','363046082',''),(5051,'Victor Guimaraes e Silva','399648513',''),(5052,'Victor Hugo da Silva Santos','390314377',''),(5053,'Victor Hugo de Melo Santos','558232152',''),(5054,'Victor Hugo de Souza Nascimento','500323276',''),(5055,'Victor Hugo Pereira','548442447',''),(5056,'Victor Hugo Silvestre Berghe','530218781',''),(5057,'Victor Marcal Favaro','522319166',''),(5058,'Victor Sadao Higa Nagahara','521919216',''),(5059,'Victor Santos de Araujo','563892201',''),(5060,'Victor Silva Marinho','530221858',''),(5061,'Victor Souza Cabral','385340590',''),(5062,'Victor Torrres Oliveira','507800060',''),(5063,'Victor Victorelli Maruyama Vieira','563352280',''),(5064,'Victoria Alicia Gama Santoa','553684498',''),(5065,'Victoria Araujo da Silva','533284685',''),(5066,'Victoria da Silva Ramos','570414714',''),(5067,'Victoria Dias Lima','381574933',''),(5068,'Victoria Elisa Nicolau','376181199',''),(5069,'Victoria Gardziulis','382806502',''),(5070,'Victoria Isabelli Souza Demboski','525314647',''),(5071,'Victoria Paulino da Silva','396728091',''),(5072,'Victoria Pontelli Correia','526907472',''),(5073,'Victoria Regina da Silva','389614452',''),(5074,'Victoria Zanirato dos Santos','389595329',''),(5075,'Victorio Henrique de Andrade','527125131',''),(5076,'Vinicius Alcazar Campos','424794550',''),(5077,'Vinicius Amaral Virginio Pereira','380942598',''),(5078,'Vinicius Ansanello','547724652',''),(5079,'Vinicius Augusto Camilo Frutuoso','524650494',''),(5080,'Vinicius Cardoso Spadina','381565567',''),(5081,'Vinicius Cavalcante Rodrigues','378823176',''),(5082,'Vinicius Conceicao Dalcin','523648420',''),(5083,'Vinicius Cristiano Nagatomo de Andrade','520328474',''),(5084,'Vinicius da Silva Mojica','553160254',''),(5085,'Vinicius da Silva Santos','541611495',''),(5086,'Vinicius Danginges Rodriguez','557880671',''),(5087,'Vinicius de Melo Rodrigues','384918025',''),(5088,'Vinicius de Oliveira Souza','505582193',''),(5089,'Vinicius de Souza Luque','471988595',''),(5090,'Vinicius Donizete de Carvalho','574998627',''),(5091,'Vinicius Eduardo Brandao','569448487',''),(5092,'Vinicius Henrique dos Santos','520311152',''),(5093,'Vinicius Jose Gomes da Silva','371041170',''),(5094,'Vinicius Mendonca Nogueira','575131627',''),(5095,'Vinicius Oliveira Alves','386519687',''),(5096,'Vinicius Perez da Silva','551069077',''),(5097,'Rebeca Alves Poian','396736142',''),(5098,'Rebeca da Silva Ramos','552778229',''),(5099,'Rebeca Daniela da Silva','504846980',''),(5100,'Rebeca de Aviz Gil','508305676',''),(5101,'Rebeca de Melo Araujo','605028746',''),(5102,'Rebeca de Oliveira Pimenta','399658580',''),(5103,'Rebeca Estevao Delmondes','583757583',''),(5104,'Rebeca Maria de Oliveira','561532758',''),(5105,'Rebeca Oliveira Nunes Viana','534092949',''),(5106,'Rebeca Ynara Macedo Pando dos Santos','531489140',''),(5107,'Rebecca Muenzer Goncalves da Silva','503199588',''),(5108,'Regina Oliveira da Silva','380422608',''),(5109,'Reinaldo Yabiku','536370059',''),(5110,'Renan Araujo Litieri','395037967',''),(5111,'Renan Costa Ferreira','467938945',''),(5112,'Renan de Jesus Santana','529216887',''),(5113,'Renan Francino Rorres','375064382',''),(5114,'Renan Mascarenhas Menini','396655063',''),(5115,'Renan Maurilio da Silva','337206521',''),(5116,'Renan Morais Pestana','488453434',''),(5117,'Renan Moreno dos Santos','473766220',''),(5118,'Renan Paro Oliveira','378948398',''),(5119,'Renan Souza Calejon','387035102',''),(5120,'Renana Martins Couto','534095598',''),(5121,'Renata Carvalho','56674416',''),(5122,'Renata dos Santos','343616786',''),(5123,'Renato Shigueo Fujimoto','427236873',''),(5124,'Rhavine Sanches dos Santos','584199442',''),(5125,'Rhayane da Silva Alves','583931960',''),(5126,'Rhayssa Luz Santos Silva','527323287',''),(5127,'Rhian Viana Hirata da Silva','532484356',''),(5128,'Rian Eloi de Souza','567759167',''),(5129,'Riany Cristina Moreira Ferrao','526348926',''),(5130,'Vinicius Roberto da Silva Souza','386072826',''),(5131,'Vinicius Santos Carolino de Figueredo','391947874',''),(5132,'Vinicius Santos Lins da Silva','381579384',''),(5133,'Vinicius Santos Marques de Oliveira','580705444',''),(5134,'Vinicius Sedrim','509905377',''),(5135,'Vinicius Silva Martins de Oliveira','579472644',''),(5136,'Vinicius Soares Santos','386102351',''),(5137,'Vinicius Ytiroko Bressan','583007752',''),(5138,'Vinicius Zampieri do Nascimento','587035183',''),(5139,'Virgilio Bondesan','383636991',''),(5140,'Virginia de Lima Santiago','397276590',''),(5141,'Vithor Hiluany Pontes','528923602',''),(5142,'Vito Ferreira da Silva','529542080',''),(5143,'Vitor Antunes Oliveira','388863470',''),(5144,'Vitor Ariel Brito dos Santos','499946893',''),(5145,'Vitor de Lucca Olho','554545111',''),(5146,'Vitor Dias da Silva','539466062',''),(5147,'Vitor Ernesto Miguel Caser','378180721',''),(5148,'Vitor Ferreira de Oliveira','388638527',''),(5149,'Vitor Henrique da Silva de Vasconcelos','374129125',''),(5150,'Vitor Hugo Peterka Castro Lopes','502435938',''),(5151,'Vitor Janovitch Nicoliche','MG19216478',''),(5152,'Vitor Nascimento dos Santos','384224740',''),(5153,'Vitor Silva Moreira','384699388',''),(5154,'Vitor Silva Santos','505342017',''),(5155,'Vitoria Aldaria Silva de Oliveira','586144572',''),(5156,'Vitoria Aparecida Pereira Barros','544913619',''),(5157,'Vitoria Caroline Porto','381562189',''),(5158,'Vitoria Cristina Peixoto','563116456',''),(5159,'Vitoria Cristina Silva Alvarenga','502640303',''),(5160,'Ricardo Angelo dos Santos Fina','390298177',''),(5161,'Ricardo Ichiro Nakaie','44298392',''),(5162,'Ricardo Malfi do Nascimento','219334055',''),(5163,'Ricardo Possebon da Silva','557015560',''),(5164,'Richard Adeli Alves Ramos de Paula','392735246',''),(5165,'Robert da Silva Braga','395210355',''),(5166,'Robert Pereira Barbosa','604679555',''),(5167,'Roberta Almeida Santos','381247880',''),(5168,'Roberta Beatriz Bueno da Silva','394366724',''),(5169,'Roberta de Carvalho Rossi','391948660',''),(5170,'Roberta Silva de Sousa','388960255',''),(5171,'Robson Alves Pereira','33389599',''),(5172,'Robson de Aquino Mendonca','265207733',''),(5173,'Robson Santos de Araujo','366978949',''),(5174,'Rodolfo Pereira Batista Fodra','335001210',''),(5175,'Rodrigo Alves Rabello','567954845',''),(5176,'Rodrigo Deveza Mendes da Silva','355068187',''),(5177,'Rodrigo Rocha Silva','542649342',''),(5178,'Rodrigo Santos Costa','394149130',''),(5179,'Rodrigo Vasconcellos Baldino','384687295',''),(5180,'Rogerio de Barros Rodrigues','575485024',''),(5181,'Ronald Willi da Silva Peixoto','607300681',''),(5182,'Rosana Faustino Alexandrino','420764926',''),(5183,'Rosana Maria da Silva','424524545',''),(5184,'Rosangela Lima dos Santos Damiao','275269218',''),(5185,'Rosangela Sousa Paulo','620381723',''),(5186,'Roseli Leite Voltarelli','16909348',''),(5187,'Rosemary Marabiza Pinheiro','154912268',''),(5188,'Rosiane Avelino de Araujo','504820333',''),(5189,'Rosimari Rosa do Amaral','156067432',''),(5190,'Rubia Ramos de Moraes','376034518',''),(5191,'Ruth Martins Carvalho','546406993',''),(5192,'Ryan Barbosa Sousa Bandeira','506395637',''),(5193,'Ryan Gabriel Ciorlin Lopes da Silva','550438658',''),(5194,'Sabrina Alves da Silva','379284480',''),(5195,'Sabrina Aurelia Pereira de Almeida','504846450',''),(5196,'Sabrina Beatriz Rocha do Amaral','560883778',''),(5197,'Sabrina Fernandes','387136873',''),(5198,'Sabrina Lima de Amorim','521399798',''),(5199,'Sabrina Lima de Souza','395766114',''),(5200,'Sabrina Lopes da Costa','386250315',''),(5201,'Sabrina Mel Efigenio','548454814',''),(5202,'Sabrina Mendonca David','397878813',''),(5203,'Sabrina Perrella Zukeram','537063183',''),(5204,'Sabrina Raquel dos Santos Mota','397282205',''),(5205,'Samanta Biscaro Benzi','540721992',''),(5206,'Samantha Santos Silva','506925249',''),(5207,'Samantha Stefany do Amaral Figueiredo','551072544',''),(5208,'Samara Cordeiro Teixeira','534099804',''),(5209,'Samara Hellen Azevedo de Souza','508695545',''),(5210,'Samara Oliveira Silva','397832680',''),(5211,'Samira da Silva Gois','577609210',''),(5212,'Samira Morais Bezerra','502876803',''),(5213,'Samuel Almeida Inacio','560731814',''),(5214,'Samuel Davi Gomes de Viveiros','508304088',''),(5215,'Samuel do Nascimento Santos','431726851',''),(5216,'Samuel Marques da Silva','543822254',''),(5217,'Samuel Tambalo da Silva','379288643',''),(5218,'Samylla Hellen Martins de Franca','505456771',''),(5219,'Sanara Santos','503928288',''),(5220,'Sancler Santos Lima','384357258',''),(5221,'Sandra de Santana Almeida','376934451',''),(5222,'Sandra dos Anjos da Costa','328633689',''),(5223,'Sandro Ricardo Ferreira da Silva','361200717',''),(5224,'Sandy Iris Pereira Souza','378758779',''),(5225,'Sandy Martins da Silva','55764060',''),(5226,'Walkiria Cristiane de Faria Rosa','280360939',''),(5227,'Wallace Bittencourt de Jesus','379628946',''),(5228,'Wanderson Diego da Silva Costa','549386294',''),(5229,'Wanessa Alves de Santana','543316336',''),(5230,'Wanessa Silva Neves dos Santos','533323733',''),(5231,'Welder Aparecido Ribeiro de Melo','379446303',''),(5232,'Welen Anelise Dionizio de Santana','548441844',''),(5233,'Weliton DAmbrosi de Melo','390645047',''),(5234,'Wellington Pereira Correia','585828040',''),(5235,'Wellington Pereira Trindade','543281474',''),(5236,'Wender Ferreira de Sousa','379291356',''),(5237,'Wesley Araujo Nogueira','5223428610',''),(5238,'Wesley Santos Soares','581817394',''),(5239,'Wesley Silva Marciel','528025570',''),(5240,'Wesley Souza da Silva','383012119',''),(5241,'Weverson da Silva Pereira','377848177',''),(5242,'Wilgner Henrique Fontoura Magalhaes','388642920',''),(5243,'William Bello da Guarda Ferreira','42951405',''),(5244,'William Shoji Kudaka','377919901',''),(5245,'Willian da Silva Mendes Triper','387058692',''),(5246,'Willian Jose Alves','581618154',''),(5247,'Willian Santos Moreira de Araujo','531351490',''),(5248,'Willian Yamashita Alves','572131240',''),(5249,'Wilson Ducatti Junior','396779967',''),(5250,'Winnie Barros Braga','504833480',''),(5251,'Winny Stefany Silva de Oliveira','548014759',''),(5252,'Winye Alexandra da Silva Fornazier','390309590',''),(5253,'Yan Estevam dos Santos','39673084',''),(5254,'Sara Cristina do Nascimento Rossi','395773878',''),(5255,'Sara Cristina Soares da Silva','570595009',''),(5256,'Sara Ingrid Pereira Souza','378758858',''),(5257,'Sara Martins da Silva','383013446',''),(5258,'Sara Pereira Rosa','531549264',''),(5259,'Sara Santos dos Reis','580628723',''),(5260,'Sara Teles de Almeida','541529640',''),(5261,'Sarah Alves de Souza','381242470',''),(5262,'Sarah Cortes Lima Santana','538933422',''),(5263,'Sarah Dias da Costa','541534890',''),(5264,'Sarah dos Santos Oliveira','396802680',''),(5265,'Sarah Ferrer Beverari','379878318',''),(5266,'Sarah Machado Paiva Barreto','507101418',''),(5267,'Sarah Mayara Gomes dos Santos','534872037',''),(5268,'Sarah Morais Figueira','582836049',''),(5269,'Sarah Silvestre','555445306',''),(5270,'Serena Alves Barbosa','317681864',''),(5271,'Sergio de Oliveira Goncalves Filho','525045612',''),(5272,'Sergio Felipe da Silva','558407092',''),(5273,'Shadylane Pereira Lima','376653929',''),(5274,'Shayane Aparecida Carolina Nascimento Neves','581665491',''),(5275,'Sheila Venezian Santos','268649005',''),(5276,'Shirlei Cahuasiquita Pillco','377610860',''),(5277,'Shirley Cori Taipe','382214912',''),(5278,'Silas Freitas Rodrigues','537481370',''),(5279,'Silas Nunes Ferreira','390053650',''),(5280,'Sivonaldo Cicero da Silva','641762471',''),(5281,'Sofia Emilly Terencio Gomes','523424292',''),(5282,'Sophia Oliveira de Souza','584805305',''),(5283,'Stefane Belarmino da Silva','501413625',''),(5284,'Stefani Silva do Amaral','522733232',''),(5285,'Stefanie Vieira da Silva','540730658',''),(5286,'Stefanny Kubota dos Santos','580578847',''),(5287,'Stefannye da Silva Araya','570823687',''),(5288,'Stefany de Souza Dantas','502882140',''),(5289,'Stefany Linares Romao','537068454',''),(5290,'Stella Dalla Fangel','573056304',''),(5291,'Stephanie Brito de Souza','555901324',''),(5292,'Stephanie Caroline G. G. dos Santos','504832372',''),(5293,'Stephanie Choli da Silva','391264801',''),(5294,'Stephanie Costa Cruz','379632470',''),(5295,'Stephanie Nacari Da','439621537',''),(5296,'Stephanie Pedro dos Santos','575856221',''),(5297,'Stephanie Reis Santos','436061041',''),(5298,'Stephany Caroline Fontana da Silva','508799510',''),(5299,'Sthefane Alves de Souza','509156800',''),(5300,'Sueli Soares Bezerra','276271920',''),(5301,'Suellen Alves dos Santos','528758500',''),(5302,'Suellen Aparecida Godoy Araujo','429005040',''),(5303,'Suellen Carvalho da Silva Silveira','450281140',''),(5304,'Suie Matias Saito','501202195',''),(5305,'Surian Santander Porrino de Moraes','383017075',''),(5306,'Susane Ferreira de Oliveira','572129312',''),(5307,'Suzane Fernandez Martins da Silva','592697290',''),(5308,'Suzany da Silva Bidu','572863044',''),(5309,'Tainara Cristina da Silva Dias','557899618',''),(5310,'Tais Soares dos Santos','486793102',''),(5311,'Taislany Estefany Carvalho Rios Lopes','644708920',''),(5312,'Taislany Pereira de Araujo Alves','633604872',''),(5313,'Talita Firmiano de Oliveira','548005825',''),(5314,'Talita Rodrigues Pereira Cradoso','582765614',''),(5315,'Talita Santos Nogueira','576529564',''),(5316,'Talitha Oliveira da Silva','586007246',''),(5317,'Talyta da Silva Ferreira','387363105',''),(5318,'Tamara Colangelo Martins','589077340',''),(5319,'Tamires Araujo de Souza','542663790',''),(5320,'Tamires Silva Caetano','378924825',''),(5321,'Tania Maria Rosa do Amaral','138399670',''),(5322,'Tarcisio Antonio E. Teixeira da Silva','530194259',''),(5323,'Tarik Mohamed Jarouche','569638823',''),(5324,'Tatiana A Costa Jardim','571607809',''),(5325,'Tatiane Velosa da Silva','526386940',''),(5326,'Tauane Paloma Batista da Silva Adao','603892917',''),(5327,'Tauany Allana da Silva Porto','545339390',''),(5328,'Tayna de Barros Bernardes','548081372',''),(5329,'Tayna de Oliveira Correa Rodrigues','542661019',''),(5330,'Tayna Rodrigues Rissi','379249522',''),(5331,'Taynara Adheley Souza Tomaz','636286149',''),(5332,'Taynara Azevedo','523275791',''),(5333,'Taynara Silva de Castro','549322309',''),(5334,'Thabata Jorcovix Rodrigues','535929110',''),(5335,'Thaiane Vieira','529793283',''),(5336,'Thaina Macedo da Silva','507478605',''),(5337,'Thaina Nicoli dos Santos','560441022',''),(5338,'Thais Agnes Krohn','571725181',''),(5339,'Thais Alves Silva','532953514',''),(5340,'Thais Bonini dos Santos','535889800',''),(5341,'Thais Camila Diniz dos Santos Silva','501919831',''),(5342,'Thais Costa Damasceno','371912386',''),(5343,'Thais Cristina Andrade da Silva','382574059',''),(5344,'Thais Cristina Oliveira Silva','560963804',''),(5345,'Thais da Silva Batista','469523621',''),(5346,'Thais da Silva Dias','556354692',''),(5347,'Thais da Silva Teodoro','585323100',''),(5348,'Thais Gomes da Silva','380425166',''),(5349,'Thais Luiz da Silva Costa','428705868',''),(5350,'Thais Mateus da Silva','545848556',''),(5351,'Vitoria da Conceicao A. M. de Souza','374522091',''),(5352,'Vitoria da Silva Kratel','565718757',''),(5353,'Vitoria Fernandes dos Santos','382820484',''),(5354,'Vitoria Franca Sousa','569202073',''),(5355,'Vitoria Freitas do Nascimento','556240790',''),(5356,'Vitoria Giovana Jurado','520787298',''),(5357,'Vitoria Leao Freitas','528225753',''),(5358,'Vitoria Leite Veloso','391654925',''),(5359,'Vitoria Leticia Nunes Dantas','542376179',''),(5360,'Vitoria Maria Pacheco Silva','558848916',''),(5361,'Vitoria Matias da Silva','563872690',''),(5362,'Vitoria Paixao Lopes Machado','526894611',''),(5363,'Vitoria Prudencio Teressam','378909678',''),(5364,'Vitoria Ramalho de Lima','599045851',''),(5365,'Vitoria Rani Rodrigues Pereira','532162304',''),(5366,'Vitoria Ribeiro de Sa','548244042',''),(5367,'Vitoria Rodrigues de Fiume','532327408',''),(5368,'Vitoria Rodrigues Nascimento','388974163',''),(5369,'Vitoria Silva Cesario','584455320',''),(5370,'Vitoria Sofia Souza Soares','526400419',''),(5371,'Vitoria Souto Araujo de Oliveira','599746142',''),(5372,'Vitoria Souza Santana','523657511',''),(5373,'Vitoria Stefane Alves de Sousa','534859914',''),(5374,'Vittor Hugo Anacleto Perez','542366204',''),(5375,'Viviane Novais Alves Lopes','623085902',''),(5376,'Viviane Silva Ferreira','532922050',''),(5377,'Viviane Soares Bucci','557337975',''),(5378,'Vladimir Silva Emiliano','561162025',''),(5379,'Walbert Carvalho','409720793',''),(5380,'Walesson Almeida dos Santos','522320661',''),(5381,'Walisson Santos das Neves','591741969',''),(5382,'Yasmim Reis Carvalho','564881740',''),(5383,'Yasmim Sena Barros','576735220',''),(5384,'Yasmin Assis Borges','374802555',''),(5385,'Yasmin Ayres Paiva','558611710',''),(5386,'Yasmin de Oliveira Rocha','382373339',''),(5387,'Yasmin dos Santos Santana Batista','572803205',''),(5388,'Yasmin Lima e Silva Carvalho','504832232',''),(5389,'Yasmin Lima Santiago','541051520',''),(5390,'Yasmin Marcal da Rocha do Espirito Santo','564979405',''),(5391,'Yasmin Mayumi de Queiroz','569166925',''),(5392,'Yasmin Moraes Cavaleto','578887757',''),(5393,'Yasmin Rafaelly Lucena da Silva','501812830',''),(5394,'Yasmin Silva Camargo Mattos','540222434',''),(5395,'Ygor Bizerra Feba','531435386',''),(5396,'Ygor da Silva Araujo','542657612',''),(5397,'Ygor Souza Santana','523657584',''),(5398,'Yohana Candido Quiesse','569299550',''),(5399,'Yoshinobu Yamaura','532396911',''),(5400,'Yris Toneli Silverio','574358651',''),(5401,'Yuri de Sousa Stavel','503456871',''),(5402,'Yuri Rocha Saraiva','395697153',''),(5403,'Yuri Rodrigues Vargas','394348631',''),(5404,'Zaine Borges do Nascimento','458758243',''),(5405,'Zaqueu Batista Bernardino','588646374',''),(5408,'joão silva1234578901234578901234578901234578901234','123','joao@gmail.com'),(5409,'maria campos','987','maria@gmail.com'),(5410,'FABRICIO HENRIQUE DE SOUZA','11201810639','fabricio.henrique@aluno.ufabc.edu.br'),(5411,'Nathan Kamikata','11078615','nathan.kamikata@aluno.ufabc.edu.br'),(5412,'LUDMILA ANGELIM SILVA','11201811529','ludmila.silva@aluno.ufabc.edu.br'),(5413,'DEBORA RIBEIRO ALVES','11201810935','debora.alves@aluno.ufabc.edu.br'),(5414,'Henrique Mendonca Rodrigues','11201721172','h.rodrigues@aluno.ufabc.edu.br'),(5415,'Camila da Cunha Cetra','11201722134','ccetra@aluno.ufabc.edu.br'),(5416,'GUSTAVO COSTA OLIVEIRA','11201812363','costa.oliveira@aluno.ufabc.edu.br'),(5417,'Fernanda da Silva Alves','11201722749','fernanda.a@aluno.ufabc.edu.br'),(5418,'LEONARDO BESERRA DA SILVA','11201810330','leonardo.beserra@aluno.ufabc.edu.br'),(5421,'Igor Andrade Fernandes','11201722263','i.andrade@aluno.ufabc.edu.br'),(5422,'Alex de Marins Malta','11201722176','alex.malta@aluno.ufabc.edu.br'),(5424,'Viviane Copede','11201722075','viviane.copede@aluno.ufabc.edu.br'),(5432,'ADEMIR ALMADA DE GOES JUNIOR','80047521104','almadajunior@hotmail.com'),(5433,'ADEMIR DOS SANTOS','97200034134','ademir01alfa@hotmail.com'),(5434,'ADRIANA FERREIRA SABACIANSKIS','93135882187','adrisabacianskis@hotmail.com'),(5435,'ADRIANO RODRIGUES DE FREITAS','474047105','adrianomt03@hotmail.com'),(5436,'ADRIANO RODRIGUES FAGUNDES','92775594115','ha.f.o@hotmail.com'),(5437,'ALEX JUNIOR DA SILVA','2986478182','alexjrdourados@gmail.com'),(5438,'ALEXANDRE CARLOS DE SOUZA E SILVA','9825863706','alexandre.carlos@prf.gov.br'),(5439,'ALEXANDRE PEDROSO BARBOZA','938101137','apbms20@hotmail.com'),(5440,'ALLAN DOS SANTOS PETRINI','2552414109','alla_dsp@hotmail.com'),(5441,'ALLANA MARIELE MAZARO ZARELLI','7517363921','allanazarelli@yahoo.com.br'),(5442,'AMILTON GORDIANO ROQUE','1466509139','amilton_gordiano@hotmail.com'),(5443,'ANDERSON FERREIRA DE SOUZA','95062106168','asouza@pm.ms.gov.br'),(5444,'ANDERSON RIBEIRO DOS SANTOS','99926075134','andersonrs@correioweb.com.br'),(5445,'ANDHERSON PEREIRA AGUIAR DE SOUZA','79478611534','ANDHERSON.APAS@PC.MS.GOV.BR'),(5446,'ANDRE LIMA SILVA','60975199153','pardalbone@hotmail.com'),(5447,'ANDRÉ LUIZ BORBA DE QUEIROZ','90155530178','borbaster@gmail.com.br'),(5448,'ANDRE LUIZ MUNIZ DE FARIAS','90668928115','andrefarias@hotmail.com'),(5449,'ANDRÉ LUIZ REGINALDO DE SOUZA','97832995149','gansolio52@gmail.com'),(5450,'ANDRE TINTI AGUIAR','768321476','andre.aguiar@prf.gov.br'),(5451,'ANDRESSA VIEIRA','2731091037','andressavieira.av@pc.ms.gov.br'),(5452,'ANGELO ANSELMO CANALE','89803566172','angelocanalepm@msn.com'),(5453,'ANTONIO DA SILVA ALENCAR','40491790163','antonio.alencar@sejusp.ms.gov.br'),(5454,'ANTONIO LOPES BARBOSA NETO','86594559400','antonionetobsb@gmail.com'),(5455,'APARECIDA GONCALVES DA CRUZ FERREIRA','51977397115','apcruz@globo.com'),(5456,'AUGUSTO CESAR PEREIRA','70627762115','augustocesarpereira.pereira@gmail.com'),(5457,'BRUNO RAFAEL PORTES DA SILVA','1155616170','bruno.brps@pc.ms.gov.br'),(5458,'BRUNO RICARDO MENCK','1293349100','brunormenck@gmail.com'),(5459,'CAIO HENRIQUE DE MELLO GOTO','40830234810','caio.goto@hotmail.com'),(5460,'CAIO LEONARDO BICALHO MARTINS','9118237606','caio.clbm@pc.ms.gov.br'),(5461,'CARLOS ADRIANO XIMENES','91299241115','cadriximenes1@hotmail.com'),(5462,'CARLOS ARNALDO LOPES MOREL','84105810197','carlosmorel13@hotmail.com'),(5463,'CARLOS EDUARDO DE LIMA MARSIGLIA','90952910144','carloslm@bol.com.br'),(5464,'CARLOS EDUARDO RODRIGUES ORÁCIO','95778861168','carlos.cero@pc.ms.gov.br'),(5465,'CÁSSIO SANCHES BARBOSA','2054813109','cassiodireito2014@hotmail.com'),(5466,'CLAYTON COIMBRA DE SOUZA','56255675149','cheriffesouza@hotmail.com'),(5467,'CLEDSON DA SILVA AMORIM','90392450100','amorim.csa@pc.ms.gov.br'),(5468,'CRISTIANI MARCIA LEIBANTI','12664524860','cmlduccini@hotmail.com'),(5469,'DANDARA FEITOSA DA CUNHA','834010402','dandaracunha@hotmail.com'),(5470,'DANIEL ARGENTI PIVA','95186336149','argentisecreto@msn.com'),(5471,'DANIELA LOPO','95525912104','danielalopo@yahoo.com.br'),(5472,'DARIO DA SILVA CZERNISZ','87936399100','darioczernisz@hotmail.com'),(5473,'DAVI CARVALHO DO NASCIMENTO','79665772104','nascimento_daviaci@hotmail.com'),(5474,'DAYLLON PEREIRA DE CAMPOS','3088833146','daylon.dpc@pc.ms.gov.br'),(5475,'DEBORAH DIAS PEREIRA','97303348115','deborah.ddp@pc.ms.gov.br'),(5476,'DOUGLAS PIRES INEIA','3398487904','douglaspires83@gmail.com'),(5477,'DOUGLAS TAVARES BAPTISTA DE SOUZA','10923251820','dtbs@bol.com.br'),(5478,'EDEMAR FERNANDES DA SILVA','63956152115','fernandes-bm@hotmail.com'),(5479,'EDISON FIORI JÚNIOR','30308457889','edison.fiori@prf.gov.br'),(5480,'EDSON DA ROCHA RAIMUNDO','55739792134','edsonraimundo_@hotmail.com'),(5481,'EDUARDO TRACZ','2473117152','tracz.bm@gmail.com'),(5482,'EDURARDO BRASILIANO L. DE SOUZA','99594773120','eduardo.ebls@pc..ms.gov.br'),(5483,'ELISANGELA PEREIRA DE SOUZA MARTINS','65240960100','elis-martins@hotmail.com'),(5484,'ELIZANGELA BORHRER DA SILVA','65355989187','eborhrer@gmail.com'),(5485,'EMERSON CARLOS COELHO DA COSTA','83314083149','emersoncccosta@hotmail.com'),(5486,'EMERSON MARQUES HERVAS','63744120104','tataomarques@gmail.com'),(5487,'EUCLIDES RODRIGUES DE SOUZA','96338040191','EUCLIDESRODRIGUES.RS@GMAIL.COM'),(5488,'EUMER CORDEIRO BARBOSA','4409684612','eumerb@gmail.com'),(5489,'EVANDERLEI LUCIO DA SILVA','35749385191','lucio.silva@prf.gov.br'),(5490,'EVANDRO LUIZ BANHETI CORREDATO','8028758827','evandrolbc@terra.com.br'),(5491,'EVERSON FERREIRA TORRES','428980139','everson-branco@hotmail.com'),(5492,'FABIANO ANDRADE','1108260195','fabiano_ms00@hotmail.com'),(5493,'FABIO BRAULINO QUEIROZ','92657990134','fabio.fbq@pc.ms.gov.br'),(5494,'FABRICIO DE CARVALHO MOURA','86147250191','mouraok@hotmail.com'),(5495,'FERNANDO BUENO','90057082120','fernandobueno.br@hotmail.com'),(5496,'FERNANDO PEREIRA DE PAULA E SILVA','95674373191','fppsilva@hotmail.com'),(5497,'FERNANDO PERES DA SILVA','63956080106','peressilvanando@bol.com.br'),(5498,'FLAVIA DE LIMA MENDONÇA','1747052124','rilariemanuele@gmail.com'),(5499,'FLÁVIO DE ALMEIDA','92302661168','flavio1351@hotmail.com'),(5500,'FLAVIO HENRIQUE MARTINS CANTARIN','95797432153','flaviocantarin@hotmail.com'),(5501,'FLORENCIO SOUZA RAMOS','160714176','cafesencio@yahoo.com.br'),(5502,'FRANCISCO ALEXANDRE DANTAS DA SILVA','306491109','dantasinroll@gmail.com'),(5503,'FRANCLEI BARNABÉ DOS SANTOS','36584142','fbsantos@agepen.ms.gov.br'),(5504,'FREDERICO DE ALBUQUERQUE FERREIRA','1544273142','frederico.faf@pc.ms.gov.br'),(5505,'GABRIEL DE OLIVEIRA MARTINS','4385203199','gabrieldeom@hotmail.com'),(5506,'GABRIELA RIBEIRO DE SOUZA E VIOLIN','2908191130','gabriela.grsv@pc.ms.gov.br'),(5507,'GELSON LEONÇO DOS SANTOS','70657068934','gelson.ls@hotmail.com'),(5508,'GEMERSON ROGÉRIO TOMMASI','76164764904','tommasi.grt@pc.ms.gov.br'),(5509,'GILMAR NASCIMENTO LOPES','56288182168','gilmar.lopes@cbm.ms.gov.br'),(5510,'GILSON AURELIANO GONSALVES','85920517115','futevolei@hotmail.com'),(5511,'GIUSEPPE CAMPAGNA BERTAZZONI','451693140','giuseppe013@hotmail.com'),(5512,'GLAUCO DE OLIVEIRA INÁCIO','2784952142','glaucoinacio@gmail.com'),(5513,'GLEIDSON DA COSTA FRANÇA','2471487173','gleidson_ga_franca@hotmail.com'),(5514,'GUSTAVO BARBOSA NICOLAU','83453466187','gustavo.nicolau@cbm.ms.gov.br'),(5515,'GUSTAVO MAZIOLI DE CAMPOS','8110084796','gustavomazioli@hotmail.com'),(5516,'GUSTAVO OLIVEIRA DOS SANTOS','4526165140','gustavo_oliveira29@hotmail.com'),(5517,'HELIYTON TADASHI BERNARDO HASHIMOTO','63857197153','tadfireman@hotmail.com'),(5518,'HOFFNER CABALHEIRO RODRIGUES','3700546106','hoffner_16@hotmail.com'),(5519,'IGOR ALLAN ALMEIDA LEMOS ALVES','98327399187','iaala@live.com'),(5520,'ISAAC ALBERTO ALCARÁZ SÓRIO','80927700182','isaac.iaas@pc.ms.gov.br'),(5521,'ISMAEL CORREA DE ANDRADE JUNIOR','2068713926','ismael.junior@mj.gov.br'),(5522,'IVAI GOMES DE LIMA NETO','8249858930','IVAI_NETO@HOTMAIL.COM'),(5523,'IVAN CARLOS DE FREITAS','52869938187','pm2069300@pm.ms.gov.br'),(5524,'JEFERSON DE SOUZA MERCADO','65308280100','jlmlmercado@bol.com.br'),(5525,'JEFERSON LEITE DOS SANTOS','94118051168','jeferson.leite@hotmail.com'),(5526,'JENNIFER ESTEVAM DE ARAUJO','6189176674','jennifer.jea@pc.ms.gov.br'),(5527,'JOÃO CARLOS PERES','63744783120','jcmime@ig.com.br'),(5528,'JOÃO PAULO PESTANA','30931146836','pm42040021@pm.ms.gov.br'),(5529,'JONATHAN FARIAS VASCONCELOS','95809414168','jon-farias@hotmail.com'),(5530,'JONIVAN RAMOS DE FREITAS','79946615134','pm109836021@pm.ms.gov.br'),(5531,'JOSÉ ANIBAL ALVES DE ALMEIDA','79946798115','anibalsd01@yahoo.com.br'),(5532,'JOSÉ BERNARDO NETO','77878027153','jbnetto_pba@hotmail.com'),(5533,'JOSÉ DONIZETI FERREIRA DOS SANTOS','25137717886','donizeti_santos_@hotmail.com'),(5534,'JOSE LUIZ DE SOUZA','66366747172','joseluizsgtpm@hotmail.com'),(5535,'JOSÉ MÁRCIO FIGUEIREDO DE OLIVEIRA','83884360159','figueira01@hotmail.com'),(5536,'JOSE MARIA DA SILVA','82066493104','jmsilva.pm@hotmail.com'),(5537,'JULHIANO NUNES GERMANO','63731649187','germanojulhiano@gmail.com'),(5538,'JULIANO CANDIDO PICOLI','2041452102','juliano_picoli@hotmail.com'),(5539,'JUVENCIO RODES RODRIGUES','2029807150','rodes0286@gmail.com'),(5540,'KLEBER SOUZA PAES','82948844134','KLEBERPAESPM@HOTMAIL.COM'),(5541,'LAERTE ECKER','92858899134','laerte_ecker@hotmail.com'),(5542,'LAUDINEY CRUZ DE CARVALHO','51172186120','krysllo2002@gmail.com'),(5543,'LEANDRO COSTA DE LACERDA AZEVEDO','499886119','leandro_kla@hotmail.com'),(5544,'LEIBENYS SOARES DE SOUZA','63809133191','desouza.lss@pc.ms.gov.br'),(5545,'LORRAN MACHADO','2778021132','lmachado0705@gmail.com'),(5546,'LUCIANO ROCHA DO NASCIMENTO','63861593149','luciano.rocha@prf.gov.br'),(5547,'LÚDIO ESPÍRITO SANTO','36734071120','ludio.les@pc.ms.gov.br'),(5548,'LUIS CASSIO TUMELERO SANCHES','2506374132','cassiotsanches@yahoo.com.br'),(5549,'LUIZ ANTONIO DE SOUZA','37893947187','luizsouza64@hotmail.com'),(5550,'LUIZ CLAUDIO CAVALCANTE','48961027115','luizclaudiocavalcante@hotmail.com'),(5551,'LUIZ GUSTAVO MORANDI','1606528122','gustavo.of.ms@gmail.com'),(5552,'MAICOM RICARDO LUCHESE','94317003104','maicom_luchese@yahoo.com.br'),(5553,'MANOEL RENATO DE JESUS','247470171','manoelrenato1@gmail.com'),(5554,'MARCELO DE CAMPOS MARTINES','95487387168','martines_1981@hotmail.com'),(5555,'MÁRCIO DEKNES ALVES','146805135','mdalves@cbm.ms.gov.br'),(5556,'MARCIO FERREIRA DE MELO','78840937153','marciofm03@hotmail.com'),(5557,'MARCOS ANTONIO VENENO AGUIRRE','56273363153','flamaguirre@ig.com.br'),(5558,'MARCOS MASAAQUI IZEKI','69730822115','marcosizeki@bol.com.br'),(5559,'MARCOS ROGÉRIO MARTINS DA COSTA','61363707191','MCOSTA@CBM.MS.GOV.BR'),(5560,'MARCUS FERNANDO PEREIRA','40500128120','marcos.fernando@prf.gov.br'),(5561,'MAURICIO DE SOUZA SPÍNDOLA','64590763168','mauricio-spindola@outlook.com'),(5562,'MAURICIO RODRIGUES BERSANETI','21958244848','MRBERSA@HOTMAIL.COM'),(5563,'MAURO SOUZA ARAUJO','48985015168','MAUROBALL@IBEST.COM.BR'),(5564,'MAXWELBE DE MOURA FÉ','77659279149','maxwelbemourafe@hotmail.com'),(5565,'MAXWELL DIAS DE OLIVEIRA','2278977148','maxwedias@gmail.com'),(5566,'MAYARA GRAU E SILVA','94020477191','MAGRAUS@GMAIL.COM'),(5567,'MAYCON MEDEIROS DA ROSA','3148579151','maycon7752@hotmail.com'),(5568,'MAYKO VAREIRO LOPES','574136142','maykovareiro@hotmail.com'),(5569,'MICHEL ANGELO TINGO MELIN','99066963115','tingomelin@gmail.com'),(5570,'MILTON CELSO ACHILES JUNIOR','89402634134','milton.mcaj@pc.ms.gov.br'),(5571,'MUNYZ ARAKAKI MARTINS','82247595120','munyz.martins@mj.gov.br'),(5572,'NARCILVIO BATISTA DA SILVA','99038714149','narcilvio@hotmail.com'),(5573,'NILDO JESUS DE SOUZA','84088206134','nsouza@trt24.jus.br'),(5574,'OLAVO HENRIQUE FERENSHITZ NOGUEIRA','32403035823','olavo2k@Hotmail.com'),(5575,'PAULO ANDRE FERREIRA CUNHA','218962169','pafccampogrande@gmail.com'),(5576,'PAULO GERMANO GOMES DO NASCIMENTO','20658608800','pg_g_2@hotmail.com'),(5577,'PEDRO WLADEMIR DE ANDRÉA','48912298100','wlad_andre@hotmail.com'),(5578,'RAFAEL MAGALHÃES DANTAS','277128188','rafamdantas83@gmail.com'),(5579,'RAFAEL ZANATA AMARO','4616221146','ZANATA_AMARO@HOTMAIL.COM'),(5580,'RAMÃO BENEDITO SOARES','642008175','edelson.sakamoto@yahoo.com'),(5581,'RAPHAEL SILVA DE ALMEIDA','2524968170','cforaphael@gmail.com'),(5582,'REINALDO RODRIGUES DE SOUZA','18185899827','reinaldo_desouza@hotmail.com'),(5583,'RENAN DE SOUZA SILVA','3475057166','alichoque@pm.ms.gov.br'),(5584,'RICARDO HENRIQUE CAVAGNA','17059185810','cavagna.rhc@pc.ms.gov.br'),(5585,'RICARDO SILVA MORAES','40443949115','ricardosilvamoraes2@gmail.com'),(5586,'RICARDO SOUSA CABRAL','93339267120','pm2099977@pm.ms.gov.br'),(5587,'ROBERTO ADRIANO BRANDAO','96748524172','roberto.original@@hotmail.com'),(5588,'ROBERTO DUARTE FARIA','92192327820','delpolroberto@gmail.com'),(5589,'ROBSON APARECIDO DA CUNHA','26917428817','sgtdacunha@yahoo.com.br'),(5590,'RODRIGO BONFIM DA CRUZ BANDEIRA','88239314104','rodrigobandeira01@hotmail.com'),(5591,'RODRIGO FELIPE ALBIERI FERREIRA','1751792129','rodrigo.rfaf@pc.ms.gov.br'),(5592,'RODRIGO YOSHIMURA','95732594191','yoshi17br@gmail.com'),(5593,'ROGÉRIO FONTES BAZAN','96119993134','fontestl@hotmail.com'),(5594,'ROGÉRIO SALES DA SILVA','46619186149','sales0219@hotmail.com'),(5595,'RONALDO FREITAS DE SOUZA','71050337115','rfsouza26@gmail.com'),(5596,'RONALDO JOSE DA CUNHA JUNIOR','99522659134','ronaldo_cunhajr@hotmail.com'),(5597,'ROSEMARY PEREIRA DA SILVA','63967723100','silva_coronel@hotmail.com'),(5598,'RUDIMAR RIGO','80762506172','rudimar.rr@pc.ms.gov.br'),(5599,'SALVADORA BENITES DA SILVA CAMARGO','60765224100','salvadora.camargo@prf.gov.br'),(5600,'SAMUEL ALVES QUEIROZ','80526160187','samuejosi@hotmail.com'),(5601,'SAMUEL BARBOSA MENACHO','79336329120','samuel.menacho@aedu.com'),(5602,'SELMO CHAPARRO FERREIRA','81940807115','selmochaparro@hotmail.com'),(5603,'SERGIO BENEDITO DE OLIVEIRA','61226912168','sergio.oliveira@mj.gov.br'),(5604,'SILVANA MARIANO NABHAN VILELA','96521910191','silvana.smnv@pc.ms.gov.br'),(5605,'SILVERIO PANIAGO VILELA JUNIOR','685492109','silverio.spvj@pc.ms.gov.br'),(5606,'SILVIO MEDEIROS REVELO','56182449187','silvio.revelo@cbm.ms.gov.br'),(5607,'TATIANA CAPPI DE CAMPOS','89692250130','tatianacappi@hotmail.com'),(5608,'TATIANA MARTINS DE QUEVEDO','86805746191','TATISSQUEVEDO@GMAIL.COM'),(5609,'TELMO DE TILLIO FIGUEIRÓ','70491364172','ajfigueiro@terra.com.br'),(5610,'TEOLDO QUEIROZ BATISTA','81780583168','teoldo@bol.com.br'),(5611,'THIAGO ALVES DOS REIS','99236451187','tthiagoreis@hotmail.com'),(5612,'THIAGO LOPES CAMPOS','92514774187','thiago.tlc@pc.ms.gov.br'),(5613,'VALDECI ALEXANDRE DA SILVA','1936286190','valdeci_9@hotmail.com'),(5614,'VALDEMIRO MENDES ARGUILHEIRA','23815167191','arguilheira.vma@pc.gov.br'),(5615,'VALDINEY DAS NEVES LOPES','77756924134','valdiney_sgt@hotmail.com'),(5616,'VALTER GUELSSI','63326086920','guelssi.vg@pc.ms.gov.br'),(5617,'WAGNER AUGUSTO RIGONI','86058193168','wagao_pc@hotmail.com'),(5618,'WAGNER PINHEIRO DA SILVA','33567107','pinheirowagner@rocketmail.com'),(5619,'WAGNER SIQUEIRA GONCALVES','76656713149','siqueiracto05@hotmail.com'),(5620,'WALDIR ARAUJO FERNANDES','88637646115','waldirsd@hotmail.com'),(5621,'WILSON FRANCISCO XAVIER JUNIOR','1291733124','wfxjunior@gmail.com'),(5622,'ZELIA DA CONCEIÇÃO','84818336149','zelia_psi@hotmail.com'),(6298,'MONALISA BETHSAIDA BARBOSA','123456','monalisa.barbosa@ufabc.edu.br'),(6299,'Beatriz Rocha Sachini','789012','b.sachini@aluno.ufabc.edu.br'),(6300,'MONALISA BETHSAIDA BARBOSA','19232002833','monalisa.barbosa6@gmail.com'),(6301,'Beatriz Rocha Sachini','42165751888','beatrizsachini@hotmail.com'),(6302,'Ana Beatriz Passos Oliveira','47513385874','ana-beatriz-passos@hotmail.com'),(6303,'Vinícius Miranda Queiroga Teixeira','43553734876','viniciusmqueiroga@gmail.com'),(6304,'Henrique de Toledo','46970057836','henrique_tld@hotmail.com'),(6305,'Felipe dos Santos Schwarz','01493417096','lipesschwarz@gmail.com'),(6306,'Renato Vieira de Sá','35561549863','renatovieiradesa@yahoo.com.br'),(6307,'Lucas Carollo de Almeida','43782146875','lucas.carollo.almeida@gmail.com'),(6308,'Pedro Régio Shoji','46767662895','pedroshoji@hotmail.com'),(6309,'Gustavo Torres Custodio','41978115865','gustavo.27c02@gmail.com'),(6310,'LUIS FELIPE AZEVEDO DOS SANTOS','47003196824','luisfelipeazevedodossantos@gmail.com'),(6311,'Victoria Caroline de Moura','47834309854','victoriamoura99@hotmail.com'),(6312,'Leonardo Miguel Bispo','39973658817','leozinxt1@gmail.com'),(6313,'Priscila Gonçalves da Costa','42535058804','prigc02@gmail.com'),(6314,'Lucieneida Dováo Praun','07477768810','lupraun@uol.com.br'),(6315,'Gabriela Tuono Martins Xavier','40166243809','gabrielatmxavier@gmail.com'),(6316,'Aline Tiemi Sugano Segura Ramos','31969497882','aline.sugano@gmail.com'),(6317,'Luan Cerilio de Oliveira Lima','43132604801','luan-cerilio@hotmail.com'),(6318,'Patricia Aparecida da Ana','27103651892','patriciadaana@gmail.com'),(6319,'Laura Cazarini Trotta','10968879675','lauracazarini@yahoo.com.br'),(6320,'Thiago Takechi Ohno Bezerra','45016360847','thiagotakechi@gmail.com'),(6321,'Pedro Henrique Meert Ferreira','02505971013','ferreiraphm@gmail.com'),(6322,'Evandro Jivando de Amorim','38940404831','evandro.jivando@gmail.com'),(6323,'Thales henrique nogueira','49003989850','Thales.nogueira@aluno.ufabc.edu.br'),(6324,'Lucas Almeida Barcelos','11948893606','lucasabarcelos@gmail.com'),(6325,'Pedro Tranjan Soares do Prado','54263464804','pedro3gtranjan@gmail.com'),(6326,'Matheus Fernandes Silva','44680253878','matheusfer96@gmail.com'),(6327,'Francisca crislane Vieira de brito','04867161390','crislane43@gmail.com'),(6328,'Giovanna Dias Brasil','41383009890','giovannadbrasil@outlook.com'),(6329,'Matheus Augusto Pinto','45592270801','matheus.augustosjc@hotmail.com'),(6330,'JULIA MASCARENHAS MARQUES','41334683840','julicimarques@gmail.com'),(6331,'Gabriela Vieira Sartório','15427175741','Gabisartorio@gmail.com'),(6332,'Luciana Akemi Fujita','31251010857','luakemy@gmail.com'),(6333,'Nazime Sales Filho','02104152151','sales.nazime@gmail.com'),(6334,'Ginésio Justino Gomes de Sá','61747094340','ginesiogomes10@gmail.com'),(6335,'Felipe Nadona','34446381830','felipenadona1@gmail.com'),(6336,'Matheus Medeiros Vieira','48342646865','matheusmedeirossp123@gmail.com'),(6337,'Rubens Pereira Costa Junior','30354388894','rubensjrcosta@gmail.com'),(6338,'Mickaela Ester Barros Barreto','47848272850','emickaela@gmail.com'),(6339,'Carlos Reynaldo Portocarrero Tovar','24000543806','crptcusco@gmail.com'),(6340,'Victor Pereira de Souza','45780708835','vcor.pereira@gmail.com'),(6341,'Halderli Ferreira da Silva','42866050860','halderli.silva@gmail.com'),(6342,'Matheus Pantrigo Licarião Barbosa','39280115880','matheuspantrigo@gmail.com'),(6343,'Caio de Oliveira Pariz','47053329895','caio.pariz@hotmail.com'),(6344,'Mariani Souza Galli Predolim','43054875865','marianigalli@gmail.com'),(6345,'Lucas Barbosa Vellardi','37484462845','lucasvellardi@gmail.com'),(6346,'Ygor Luiz Ventura de Jesus','22766533885','ygorventura@gmail.com'),(6347,'Giovanny Briante Freitas','49048443865','gbriantef@gmail.com'),(6348,'Carlos Alberto Flávio Correa','78188768804','ca_correa@terra.com.br'),(6349,'Beatriz Marques de Aguiar','46608735871','biaaguiar8@gmail.com'),(6350,'vanessa de souza oliveira','23206376807','nessa.souzaoliver@gmail.com'),(6351,'Juliana Piraja','34768724833','juliana.jppiraja@gmail.com'),(6352,'Luiz Gonzaga de Lima Júnior','39994983822','luizgonzaga67@gmail.com'),(6353,'Jefferson Leite Rodrigues Dantas','46737682804','jefferson_rodrigues7@hotmail.com'),(6354,'Natália Satie Motokubo Halker','39089575839','nataliasatie@hotmail.com'),(6355,'Gustavo Henrique Germano Ledandeck','45105250877','guledandeck2@hotmail.com'),(6356,'William dos Santos Melo','37193042807','william.melo@ufabc.edu.br'),(6357,'Débora Miyuki Shinzato','36427834819','shinzato.miyuki@gmail.com'),(6358,'Nathália de Paula Machado','48514286854','nathaliamachado870@hotmail.com'),(6359,'Marcela Penna Ferreira Neves','38663926804','marcela.linda00@hotmail.com'),(6360,'LEONARDO RIBEIRO DA SILVA','15720348824','leonardoribe@yahoo.com.br'),(6361,'Renato Steganho Pinto','36479340892','renato_steganho@hotmail.com'),(6362,'Guilherme Escandura Garcia','47042879805','Guigaescan@gmail.com'),(6363,'Vinícius Salzbron Correia','00947707948','vsalzbron@hotmail.com'),(6364,'Gustavo de Olival Albernaz Guerra','50421889837','goaguerra@gmail.com'),(6365,'Henrique Bergonzini de Lima','43113640830','henrique.bergonzini@gmail.com'),(6366,'marcus vinicius gomes de barros moura','45545684824','marcusvinicius19992008@hotmail.com'),(6367,'Victoria de Souza Rodrigues','11708426663','vic.souzarodrigues@gmail.com'),(6368,'João Lucas Rodrigues','36456614848','joao_lucas26@hotmail.com'),(6369,'Dimitri Leandro de Oliveira Silva','45923963833','dimitri.leandro@gmail.com'),(6370,'Natalia Zoboli Bernardi','34535386846','nataliazoboli@gmail.com'),(6371,'José Renato Lara','37040895838','j.renatolr17@gmail.com'),(6372,'Murilo Henrique Teodoro Macedo','46491877884','muteodoro1@hotmail.com'),(6373,'Izabela novo soares de araujo','42412059845','izabela.novo@hotmail.com'),(6374,'Caroline Alves da Silva','39044447866','carolinealves056@gmail.com'),(6375,'Bianca Hidemi Kanehira','47611388827','bdemi99@gmail.com'),(6376,'Igor Matheus Santana R. Guaxinduva','41325765821','igu_santana@hotmail.com'),(6377,'Luigi Perillo','36359137828','luigiperillo1208@yahoo.com'),(6378,'Julia Pola da Silva','46366977828','juliapola29@gmail.com'),(6379,'Natália Furlan Waszczak','45013116813','nataliafurlanw@hotmail.com'),(6380,'Luiz Fernando Fernandes Andrade de Oliveira','41375758861','luiz.lff97@gmail.com'),(6381,'ELIZABETE Campos de LIMA','14744641814','betelimacampos2@gmail.com'),(6382,'Isadora de Lara Stipler','46111010883','isa.larastipler@gmail.com'),(6383,'Giulia Ferreira Chagas','43736730802','chagasfgiulia@gmail.com'),(6384,'Caio Roberto Sanches Florencio','43692477805','caiorsf@gmail.com'),(6385,'Giovanna de Oliveira Costa','47019303854','giovanna.o.c@hotmail.com'),(6386,'Larissa Catharine de Souza','40847435857','lari.catharine@hotmail.com'),(6387,'Leonardo Matheus Servino','40743065816','leonardomservino@gmail.com'),(6388,'Lucas Augusto da Silva Pereira','46383277880','lucas.aug.sp@hotmail.com'),(6389,'Andrei Bruno Fernandes','41865452866','abf.9210@gmail.com'),(6390,'Lucas Correa Demetrio','45299643888','lucas.correa.demetrio@gmail.com'),(6391,'Gustavo Roberto da Silva','47907892848','gustavords.qi@gmail.com'),(6392,'Eduardo Amaro Campos','40256074844','eduardo.amaro.pessoal@gmail.com'),(6394,'Milena Medeiros Svensson','45154950895','Milenamedeiros49@gmail.com'),(6395,'Henrique Fantato Silva de Albuquerque','44422420895','henrique.fsa98@gmail.com'),(6396,'Sander de Albuquerque Gomes Faggian','39999213820','sanderfaggian@yahoo.com.br'),(6397,'Lucas Gustavo Pelinson','42758739801','lucas_pelinson@hotmail.com'),(6398,'Bruno Sanches Rodrigues','43661258893','bruno99sr@gmail.com'),(6399,'Maria Carolline Jaccoud','44219816801','mahjaccoud@gmail.com'),(6400,'Letícia Monteiro Matias','43871727890','leticia.m.matias@gmail.com'),(6401,'Tainara Quirino do Nascimento','43321703858','tainara.quirino@hotmail.com'),(6402,'Beatriz Ferreira Guabiraba','49668017889','beatriz.guabiraba@live.com'),(6403,'Roberto Kleiman Petecof','48522720851','rokleiman11@hotmail.com'),(6404,'Rafael Girardi do Nascimento','43913507850','girardi.nasc8000@gmail.com'),(6405,'Raissa do Nascimento Lima','43444585837','raissanascimento.lima@gmail.com'),(6406,'FELIPE GOMES DOS SANTOS','42317561806','femaxpe6@gmail.com'),(6407,'Rodolfo Barbuena de Carvalho','43521163865','barbuena.rodolfo@gmail.com'),(6408,'ALESSANDRO PAULINO PEREIRA','47503650842','alessandro.paulino@outlook.com'),(6409,'Sylvia Gomide Gualberto da Silva','41285765818','sylvia.gomide@hotmail.com'),(6410,'Juliana Sa Teles de Oliveira Molina','32775028802','juliana_tel@yahoo.com.br'),(6411,'Cristina kimie oda toda','35687425861','cristinatoda@hotmail.com'),(6412,'Debora Macedo da Silva','35903043836','debora-mds@hotmail.com'),(6413,'Guilherme Scotti Fernandes','46569689860','Guiscotti_@hotmail.com'),(6414,'Jefferson Paiva de Paula','45231085871','j.paivadepaula@gmail.com'),(6415,'Giulia Piagentini Delpino','43137674875','giupiagentini@gmail.com'),(6416,'Giovani Carmona Kisz','45665651818','giovanicarmonakisz@gmail.com'),(6417,'Nathalya dos Santos','41942089864','nathalya.santos.nds@gmail.com'),(6418,'Aurenivia Alves Pereira','47111202899','niviaapereira@hotmail.com'),(6419,'Gustavo Matheus de Morais','39760613875','gum.morais@gmail.com'),(6420,'Marcela Derli de Oliveira','44364468835','mah_derli@hotmail.com'),(6421,'Rodrigo Akiyoshi Watanabe','47574668892','rodrigo.wtn@outlook.com'),(6422,'Carlos Henrique Lima Santos','45252415862','ryqck@hotmail.com'),(6423,'Carolina Martão','39656943830','carolmartao@gmail.com'),(6424,'Dimalice Gonçalves Nunes','26875277859','dimalice@gmail.com'),(6425,'wellington raimundo de frança','28906037848','wellingtonannoy@gmail.com'),(6426,'Rodrigo Bento Ferreira Santos','38419930873','rodrigsenem@gmail.com'),(6427,'Darlan dos Santos','28576404800','darlank99@hotmail.com'),(6428,'Marcus Vinicius Silva Mezencio','44350689826','marcus_vsm@live.com'),(6429,'Beatriz Mianni Motta','43056923840','beatrizmianni@gmail.com'),(6430,'luis gustavo odlion gonçalves paiva','38610599833','luisgustavoodilon@gmail.com'),(6431,'Michel Nunes Araújo','23602051889','michel.nunes05@gmail.com'),(6432,'Henrique Kuhnen Savi','51278471839','hqsavi@gmail.com'),(6433,'Thiago Silva das Mercês','45819808878','thiago_merces@outlook.com'),(6434,'Gabriel Colin Ramalho','48381407893','gabrielcolin@outlook.com.br'),(6435,'Nathan Madureira e Klejman','47071242836','nathanklejman@hotmail.com'),(6436,'Leonardo Martins Carneiro','42417973855','leonardocarneiro@outlook.com'),(6437,'Alex Viana Olivares','41794608826','alex_olivares93@hotmail.com'),(6438,'Breno Marques Gonçalves Teixeira','074608096','brenomgteixeira@gmail.com'),(6439,'Gustavo Rodrigues Lemos','41194472869','gustavo.rlemos@hotmail.com'),(6440,'MATHEUS TORRES DE SOUZA','41778799833','matheustorres00@gmail.com'),(6441,'Clarisse  Maria Lages Oliveira','05130281373','clarissemlages@hotmail.com'),(6442,'Natália Schneider Cataldi','40574338802','nscataldi@hotmail.com'),(6443,'Wellington Araujo da Silva','39636444862','welles.araujo@hotmail.com'),(6444,'Camila Rodrigues Bresio','45849766863','Camilarbresio@gmail.com'),(6445,'GABRIELA DE CASSIA NUNES SILVA','48420763802','gabrieladecassia_10@yahoo.com.br'),(6446,'Wellington Teixeira Gonçalves','97579564220','jimsdb@gmail.com'),(6447,'Isabel Bezerra de Lima Franca','06404341859','isabellimafranca@ufabc.edu.br'),(6448,'Rafaela Lemes Martins','46768767852','rafaelalemes.m@gmail.com'),(6449,'Mauro Kazuyuki Alves Yamada','39367554850','Maurinho.2000@hotmail.com'),(6450,'Victor Bine Meira','43864561809','victor_bine@hotmail.com'),(6451,'Julia Ortiz Montanari','49004009809','julia.omontanari@gmail.com'),(6453,'Pâmella Gonçalves Martins','05770069597','pamella108@gmail.com'),(6454,'Thiago Hideki Tsutiya','42664656880','thiago.tsutiya@gmail.com'),(6455,'Flávia Silva Pinto','50735067821','fsilvatj@outlook.com'),(6456,'Vinicius Florentino Bastos','48511669825','vinifbastos@hotmail.com'),(6457,'Lucas de Oliveira Barroca','45621834895','lukasbarroc@gmail.com'),(6458,'José Augusto Cipriano Guedes','41270980823','joseaugusto_001@hotmail.com'),(6459,'Marcelo Bezerra Grilo Junior','07160128478','marcelogrilojr@gmail.com'),(6460,'Felipe Becker','42036714854','felipe-becker@hotmail.com'),(6461,'Leticia Martins Loureiro','47093031854','le.loureiro@hotmail.com'),(6462,'João Pedro Vinícius Lazaro','46844700840','joaopedro.lazaro8@gmail.com'),(6463,'Sergio Daishi Sasaki','25204469869','sergio.sasaki@ufabc.edu.br'),(6465,'Rafael Pereira','45312345881','rafa1504@hotmail.com'),(6466,'Lyara Carolina Montone do Amaral','43686669846','lya.montone@gmail.com'),(6467,'Caroline dos Santos','47542520806','snt.caroline@outlook.com'),(6468,'Tamara Jarosi Handajevsky','32178149839','tamara.jarosi@hotmail.com'),(6469,'Gabriela de Lima Lopes','41003850804','gabidelimalopes@hotmail.com'),(6470,'Luzia Peres Novaki','12960808894','lpnovaki@yahoo.com.br'),(6471,'Poliana Nascimento Ferreira','04555416554','poliana029@yahoo.com.br'),(6472,'Letícia Durães Moreira','44169117859','leduraes19@gmail.com'),(6473,'WELLINGTON ARAUJO NOGUEIRA','44405134847','wellingtoaraujo@hotmail.com'),(6474,'Hadassa Rodrigues Santos','09959792609','hadassa.docencia@ufabc.edu.br'),(6475,'Nathani Sayuri Ohayashi','38778821886','nathanisayuri@hotmail.com'),(6476,'Luan Magalhães Pereira','46237239847','luanmag@outlook.com'),(6477,'Everton Reichert Farias','43586411804','evereichertf@gmail.com'),(6478,'Pedro de Campos Mello Monteiro','41883388813','pedromonteiro9@hotmail.com'),(6479,'Roberto Uemura','17008080875','roberto.uemura@gmail.com'),(6480,'Rodrigo dos Santos Pereira','45589722888','rodrigo10949@gmail.com'),(6481,'Bianca de Melo Santana','50149319878','biancasantana01@gmail.com'),(6482,'Douglas Estevam Guerra','43289877809','deg.mecatronica@yahoo.com'),(6483,'Keyla Souza Pissolato','45267237892','souzapissolatokeyla@gmail.com'),(6484,'Ellen Bergamaschi da Cruz','45390680839','ellenberg02@hotmail.com'),(6485,'Matheus Fernandes','41354865847','m.fernandes@ufabc.edu.br'),(6486,'Gilson Pedro Lopes','41388924862','gilsonsoh@gmail.com'),(6487,'beatriz cardoso','43124300807','biacar_25@hotmail.com'),(6488,'Victoria Letícia Santos Francisco','31783705876','victory.angel200027@gmail.com'),(6489,'Isabela souza leite','47087319817','isabela.leite@outlook.com.br'),(6490,'Bruno Vieira Ramos Silva','40628712898','bruno.vrs@outlook.com'),(6491,'Ricardo de Melo Tamashiro','29714828805','richard.tamashiro@gmail.com'),(6492,'Marina Ferrer Wirthmann Andrienco','47362814801','marinaandrienco@gmail.com'),(6493,'Letícia de Oliveira Batista','46699464809','leka-ps@live.com'),(6494,'Mariana Carvalho dos Santos','44163067841','Mariana.carvalho97@hotmail.com'),(6495,'Maria Paula Nobrega Higa','50602615810','mariahiga01@gmail.com'),(6496,'Adriana Vigarini da Silva','45534626801','advigarini@gmail.com'),(6497,'Marta Cavalcante Ferreira','37839448801','cavalcantefmarta@hotmail.com'),(6498,'Keyla Teixeira Santos de Godoi','40948628898','keyla.tsnts@gmail.com'),(6499,'Heloisa Brandão Monte','45394272883','heloisabmonte@gmail.com'),(6500,'Paulina Cehanavicius','33511449898','cehanapaul@gmail.com'),(6501,'GABRIELA AYUMI UEDA','40967116830','Gabiyumi.a@gmail.com'),(6502,'Valterbasio de Araujo Alves','24827984859','valterbasio@gmail.com'),(6503,'Augusto do Carmo Neto','46999179840','augustoneto17@outlook.com'),(6504,'Karina Auxiliadora Brenes Argüello','08452654154','karbarguello@gmail.com'),(6505,'Marcelo D\'Ambrosi de Melo','23528194820','marcelomelo121.abc@gmail.com'),(6506,'Glaucia Bambirra Silveira','18292152806','glauciabambirra@gmail.com'),(6507,'Edcarlos Rodrigues de Souza','32793564826','edcarlos.shark@gmail.com'),(6508,'Samuel Santos de Oliveira','38381747805','quimiossoliveira@gmail.com'),(6509,'Vinicius Rodrigues','46787667825','vinicius.rodriguesr14@gmail.com'),(6510,'Everton Alex Lucas','37425395827','evertonlucas@hotmail.com'),(6511,'Aila Cossovan Alves','39758673882','ailacossovan@gmail.com'),(6512,'Carolina Correa de Carvalho','22410575846','carolinacdcarvalho@gmail.com'),(6513,'Renato Turtienski Possa','41349980854','renatoturtienskipossa@gmail.com'),(6514,'Leonardo de Almeida Ferreira','47021054858','leonardoalferreira@gmail.com'),(6515,'Daniel Ferraresi Araújo Silva','30967019893','daniel.ferraresi@hotmail.com'),(6516,'Naomi Akiba','35927274862','naomi.akiba@gmail.com'),(6517,'Vitória Silva Lourenço','45101111856','vitoria.slourenco@outlook.com'),(6518,'Rodrigo Dias Paes Landim','47589305898','rodrigodilandi@gmail.com'),(6519,'Gabriel Tavares Frota de Azevedo','06870354308','gabrieltfrota@hotmail.com'),(6520,'Alisson França da Silva','43609657880','alisson.novico@gmail.com'),(6521,'Sergio Polimante Souto','22927228876','sergiopolimante@gmail.com'),(6522,'Celso Carlos Soares Spuhl','22917803878','spuhljr@gmail.com'),(6523,'Hélio Fassina Bertrand','47096546898','hefassina@gmail.com'),(6524,'Taini Polo da Cunha','22872503870','tainipolocunha@gmail.com'),(6525,'Bruno Venâncio de Abreu Costa','45050937804','bruno_darkside_66@hotmail.com'),(6526,'Gabriel da Silva Lopes Sousa','40645095877','gabriellopes4769@gmail.com'),(6527,'Lorrane de Souza Oliveira','45688820870','lorranesouza586@gmail.com'),(6528,'Juscelino Batista dos Santos','21963764854','juscelinobsantos@gmail.com'),(6529,'Bruna Luzia Florenzano Barbosa Rafagnin','07312957900','rafagninbruna@gmail.com'),(6530,'Danny Hideki Itokazu','15348838861','d_itokazu@hotmail.com'),(6531,'Sammuel Nunes','49615679810','sammueln19@gmail.com'),(6532,'Caroline Martins Freire Leite','23004138840','carolmfleite@gmail.com'),(6533,'Jailson Passos Carriel','47593009882','Jailson.carrielpassos@gmail.com'),(6534,'Jaine Aparecida da Silva Pereira','41089322852','jainee.pereira@gmail.com'),(6535,'Rafael de Freitas','10154190705','rafael.freiats@ufabc.edu.br'),(6536,'GERARDO ALBERTO SILVA','07176342725','gerardo.silva@ufabc.edu.br'),(6537,'Lucas Passarelli da Silva','45097596811','lucaspassarelli@live.com'),(6538,'Lívia Pereira de Castro','29468816877','meliviacastro@gmail.com'),(6539,'Alana Gabrieli de Souza','09347111945','alana_gs@live.com'),(6540,'William de Paula Santos','35374682881','williandeps@hotmail.com'),(6541,'Rogério Timóteo Tine','27049651885','prof.rogeriotimoteo@gmail.com'),(6542,'Elton aparecido tavares alves','38236764826','eltontavares7@gmail.com'),(6543,'Maria Olívia Cruz Braga','12565648693','maria.oliviacruz@hotmail.com'),(6544,'Naiade Barros Gonçalves Marques','22863577816','naiade_barros@hotmail.com'),(6545,'Aryane Alves Vigato','12485908729','aryanevigato@hotmail.com'),(6546,'Flávia Marinho Correia da Silva','36153136826','fmarinho.ufabc@gmail.com'),(6547,'Diego Marcochi de Melo','29835058806','diegomarcochi@hotmail.com'),(6548,'Danilo Lima Zillig','33828800831','dzillig@gmail.com'),(6549,'Julia Santos Gontzos','45840788821','jugontzos@gmail.com'),(6550,'Veronica Casagrande','05875051507','vecasagrande.e@gmail.com'),(6551,'Gabriel Borges rego minari','46966606804','gaborgesminari@hotmail.com'),(6552,'Eduardo Magalhães Rodrigues','11957572809','eduardo.magalhaes@email.com'),(6553,'Caio Lima','41092688854','caiolima2000@hotmail.com'),(6554,'Yuri Menzl Celaschi','20382154855','yurimenzl@gmail.com'),(6555,'Expedito Nunes','56152523834','expeditocomx@gmail.com'),(6556,'Gustavo Duarte Serafim','39760828804','gustavo_duarte200@hotmail.com'),(6557,'Romana Petry','06304421346','romanapetry@gmail.com'),(6558,'Rafael Soares Balaguer','43953572881','sbalaguer.rafael@gmail.com'),(6559,'Cynthia Emiko de Souza Takematu','44235549847','cymko@outlook.com'),(6560,'Áquila Porfirio Almeida Santos','35145368801','aquilapas89@gmail.com'),(6561,'Bianca Dametto da Costa','49884422842','biabia.dametto@gmail.com'),(6562,'Pedro Takeshi Monteiro Masunaga','36513455804','pedro.takeshi95@gmail.com'),(6563,'Marcos Romero','40962166820','marcosromero11@gmail.com'),(6564,'Fabrício Mendes Damasceno','08668185705','fabricio_professor@yahoo.com.br'),(6565,'Andrea Ortolani de Paula Dias','29377069831','andrea.ortolani@outlook.com'),(6566,'Letícia Briskieviez Silva','39407417875','leticia_brisk@hotmail.com'),(6567,'ISAC JOSÉ DA SILVA FILHO','39666975807','isac.jsf@gmail.com'),(6568,'CAMILA CHAVES ROCHA','45749735877','milachaves2009@hotmail.com'),(6569,'Carolina Braga do Espírito Santo','43110664810','cacaubesanto@gmail.com'),(6570,'MAGALY DELFINA ALVES DE MORAIS','10178604836','magalymoraih@hotmail.com'),(6571,'Iron Santos Gomes','47234929843','iron.sgomes@gmail.com'),(6572,'Diego José dos Santos','43160545890','diegojossantos@gmail.com'),(6573,'Barbara Kathellen Andrade Porfírio','02071381254','barbara.andrade1901@gmail.com'),(6574,'Thaynara Cristina Maia dos Santos','01548627208','thaynara.maia10@gmail.com'),(6575,'Arquias Sófocles Guimarães Soares Cruz','41394848889','arquiassofocles2@gmail.com'),(6576,'Gustavo Romão Gonzales','40274657848','gustavo.romao@ifsp.edu.br'),(6577,'PAULO ROBERTO DOS SANTOS','40677038801','paulorobertoefamilia@gmail.com'),(6578,'Juliane Taise Piovani','25963577802','jtpiovani@hotmail.com'),(6579,'Karoliny dos Anjos Pereira Alves','43608793852','karolinyanjos@outlook.com'),(6580,'Rafael Mascarenhas de Almeida','31474940803','macunaquimicausp@yahoo.com.br'),(6581,'Marly Conceição do Rego','08249923855','marlycrego@gmail.com'),(6582,'Alecsandro Gonçalves Junior','46954158879','alecsandro440@gmail.com'),(6583,'joao victor martins reis','32006898892','jvmreis@hotmail.com'),(6584,'Thalynny Rayssy Rabelo da Silva','01678372226','thalynny.r@gmail.com'),(6585,'Thiago Gomes Pinto','47116751831','thiagogp99@gmail.com'),(6586,'fátima aparecida kian','06898977822','fatume01@hotmail.com'),(6587,'Gustavo Santos da Silva','42751989802','gsantos500@gmail.com'),(6588,'Vitor Hugo de Oliveira Paludetto','44696816877','vitorhugopaludetto@outlook.com'),(6589,'Bruno Dias dos Santos','44402086817','brdiasdossantos@gmail.com'),(6590,'OZIEL RIBEIRO DE ARAÚJO','04192495325','oziel.ribeiro46@gmail.com'),(6591,'Gustavo Saraiva de Souza','4004919812','gsaraiva.saraiva@gmail.com'),(6592,'José Dagmar Chaves Neto','01769035346','dagmarchaves2013@gmail.com'),(6593,'Anselmo Nogueira','21597986810','anselmoeco@yahoo.com.br'),(6594,'Carlos Henrique da Silva Vieira','02436006318','carloshsv09@gmail.com'),(6595,'Gringo Tavares Galina Barbosa','05865985701','gringogalina@yahoo.com.br'),(6596,'María Cleofé Valverde Brambila','25201562876','coficofi@hotmail.com'),(6597,'Matheus Morato Ferreira de Moraes','45584996807','matheusmorat@gmail.com'),(6598,'Gabriel César Nápoles Campos dos Santos','02790683280','gabrielnapoles@outlook.com'),(6599,'Jhonathan Rosa de Souza','10770026613','jhonathan.rs01@gmail.com'),(6600,'samy stein dzialoschinsky','47615323860','samysdz@gmail.com'),(6601,'Gabriella Santana Francheto','37619364862','gabifrancheto@hotmail.com'),(6602,'Matheus dos Santos Alves','48497569806','matheussantosknot@hotmail.com'),(6603,'Alexsander Henrique Magalhães Garcia','40016036832','martins.p@bol.com.br'),(6604,'Gabriel Araujo Zucchi','46441975807','gabrielzucchi43@gmail.com'),(6605,'Barbara Soares Ferreira','36901044836','barbarasoares.ferr@gmail.com'),(6606,'Mateus silveira bianchi','44328226860','mateusbianchi@hotmail.com'),(6607,'Bruna Mayumi Teramoto Klein','47538035893','bmtklein@gmail.com'),(6608,'Cristiane Dos Reis Silva','36835505893','Cristianedosreis@hotmail.com'),(6609,'Alan Vinicius Santos Pinto','41186300876','alanvini93@gmail.com'),(6610,'Victor Hugo da Silva','46307023856','vi_hugo@outlook.com'),(6611,'Raquel Moura dos Santos','45983388819','araquelmoura@gmail.com'),(6612,'Vitoria Piton Vieira','44234467820','vitoriapitonvieira@gmail.com'),(6613,'Mauricio Litwinoff Abib','41337933821','Mau.litwinoff@gmail.com'),(6614,'ROSANA DE CARVALHO DIAS','10541786822','rosana.carvalhodias@gmail.com'),(6615,'Eduardo Felipe Afonso de Melo','22918433896','du-afonso@hotmail.com'),(6616,'Joao Paulo Amorim de Lacerda','31923014811','lacerda.jotape@gmail.com'),(6617,'Ana Luísa da Cunha','45416377828','ana.luisa.cunha96@gmail.com'),(6618,'Layse Hiromy Yamauti','45047173879','hiromyamauti@gmail.com'),(6619,'Paloma Capistrano Pinheiro','45613883890','paloma42pinheiro@gmail.com'),(6620,'Welton Luis Carvalho','45120905846','weltoncarvalhoo@gmail.com'),(6621,'Aquiles Melchior Sant\'Ana','38798678876','aquilesms89@gmail.com'),(6622,'Ana Paula Cardoso','43124299876','Anaacardosoo@hotmail.com'),(6623,'Pedro Henrique Vieira Capriglione','50779046854','pedro.h.capriglione@gmail.com'),(6624,'Enzo Shiraishi Nunes da Silva','37865631871','enzo.shiraishi@protonmail.com'),(6625,'Olavio Romão Junior','27403086805','olavio.junior@yahoo.com.br'),(6626,'Tainá Pereira de Brito','43951861819','thayy.ma@hotmail.com'),(6627,'María Juliana Gutiérrez Camperos','23864248809','mariaju292@hotmail.com'),(6628,'Lucas Mascena Desidério de Santana','48177291807','lucas.mascena@outlook.com'),(6629,'Thiago Henrique Gomes Panini','43720158870','thipanini94@gmail.com'),(6630,'Max William de Oliveira','41174400803','mxoliveiraa@gmail.com'),(6631,'Eduardo Dantas Leite','36266635828','edledudant@gmail.com'),(6632,'Marcela Braga Perroni','00957322259','Marcelaperroni_@hotmail.com'),(6633,'Alexandre Ruiz Picchi','30520944836','alexandre.picchi@gmail.com'),(6634,'Danilo Martins do Nascimento','41189336839','dan.martinsnascimento@gmail.com'),(6635,'Patricia de Figueiredo','36289431838','patricia_0589@yahoo.com.br'),(6636,'Eveny Monike Ferreira','46014158880','monikeferreira1@hotmail.com'),(6637,'LEANDRO FERNANDES MIYAZAKI','37470982825','leandro.miyazaki1@gmail.com'),(6638,'Veruska Ayora','32782440870','veruska.unifesp@gmail.com'),(6639,'Pedro Luíz Mendes Silveira','10507481638','pedrocellista@gmail.com'),(6640,'MANOEL WILSON TAVARES','02331332835','wil_tav@hotmail.com'),(6641,'Bruno Bodê do Nascimento','38969426892','brunobn89@hotmail.com'),(6642,'Caio Felipe Braga Saraiva','47336998836','caiofbsaraiva@gmail.com'),(6643,'Darlan Passos Jambersi','01137406119','darlanpj@gmail.com'),(6644,'Roberto Carlos Navarro quiroz','09767743138','robertcnavarro@gmail.com'),(6645,'Felipe Tomaz Freitas','45566662870','felipefreitas383@yahoo.com.br'),(6646,'Litali Calheiros dos Santos','47822289888','litali.santos@gmail.com'),(6647,'Byron Palate M.','24184159885','byron963@hotmail.com'),(6648,'Marcelo Vinícius Andrade Lima','15158290814','marcelo.v.a.lima@gmail.com'),(6649,'Maria Kuznetsova','06073443773','m.kuznetsova@ufabc.edu.br'),(6650,'Guilherme','44843974803','guivalerio1997@gmail.com'),(6651,'Gustavo Quemel Alves','39487747818','guquemel150196@gmail.com'),(6652,'Antonio Celso Cavalieri Lins de Souza','22014830860','atractorz@gmail.com'),(6653,'Carla da Silva Buso','36041208884','carlabuso@hotmail.com'),(6654,'Rafaela Farto de Camargo Fernandes','45607307840','rafaelafarto@hotmail.com'),(6655,'Lucineia Benedita Maria dos Santos','15661403828','lucy_santos11@hotmail.com'),(6656,'Vinícius Luiz Rossetti','41368876803','viniciuslrossetti@gmail.com'),(6657,'Douglas Canone Garcia','27971735898','douglascanone@gmail.com'),(6658,'Ana Beatriz Paes Cioffi','42159755818','anabiapaescioffi@hotmail.com'),(6659,'Letícia Santos Serafim','49716660871','leticia_serafim_15@hotmail.com'),(6660,'Bruno Willians Leite','46573499883','bruhleite1997@gmail.com'),(6661,'Eduardo da Silva Cruz','30194138852','esilvac@gmail.com'),(6662,'Daniel Ayarroio Seixas','41852499850','daniel.ayarroio1@gmail.com'),(6663,'RENATO MERGULHÃO CAVALCANTE','30264679873','renatobiomergulhao@yahoo.com.br'),(6664,'Poliana os Santos Mendonca','22715195869','poliana01.mendonca@gmail.com'),(6665,'Ricardo Rodrigues Gitti','46435381801','ricardorodriguesgitti@gmail.com'),(6666,'Mariane da Silva','42233990803','marianedasilva23@gmail.com'),(6667,'Guilherme Dias Belarmino','42494316812','guilhermedbelarmino@gmail.com'),(6668,'DANILO MATAROZZO GENEROSO','38290521898','danilomatarozzo@hotmail.com'),(6670,'Milla Pechta','42021586871','milpec93@gmail.com'),(6671,'Rafael Calpena Rodrigues','44310626882','rafael.calpena@gmail.com'),(6672,'Francisco Felix da Silva Junior','28010320854','francisco.felix.junior@gmail.com'),(6673,'Vanilda Souza Chaves','44335579861','vanildachaves@gmail.com'),(6674,'MÁRCIA APARECIDA COSTA','11961001870','marcia.costama@gmail.com'),(6675,'Thaís Maria Gomes da Silva','37291861837','Thais.mariagomes@hotmail.com'),(6676,'Amanda Sachi Patricio','41927114861','Amandasachipatricio@hotmail.com'),(6677,'Celina d Avila Samogin','05120634869','celinadasam@gmail.com'),(6678,'FELIPE CESAR TORRES ANTONIO','33744576817','fcesarta@gmail.com'),(6679,'Caroline Luiz Gonçalves','41417726822','Karoline_luiz@hotmail.com'),(6680,'Gabriel Henrique Reis dos Santos','43036908803','Gabriel.reis.santos@live.com'),(6681,'Giovanna Nolli','43174392802','giovannanollisantos@gmail.com'),(6682,'Luiza Bottan Simões','12569698695','bottanluiza@gmail.com'),(6683,'Matheus Nunes Chaves','07342181331','matheusnunesc10@gmail.com'),(6684,'Stefanny Gonçalves costa','40116414804','stefanny.gon@gmail.com'),(6685,'BRUNO JOSE MACHADO DE CAMARGO','39791899886','jmcbruno@gmail.com'),(6686,'Jade Vieira Cavalhieri','44493969873','jadecavalhieri@gmail.com'),(6687,'Júlia Aparecida Leardini','45030536809','julia_leardini@outlook.com'),(6688,'Roy Rimberti Rodriguez Trujillo','08302158160','royrimberti@gmail.com'),(6689,'GABRIELA RUFINO MARUNO','30503055840','gabrielamaruno@gmail.com'),(6690,'Murillo da Costa Reis','37372272840','murillo_da_costa@hotmail.com'),(6691,'Leandro Akira Tochiro','36578458875','akira.tochiro23@gmail.com'),(6692,'Lucas Thiago Zane','44964254836','lucastzane@gmail.com'),(6693,'Luiz Gonzaga de Lima Neto','31142780864','luizgneto@hotmail.com'),(6694,'Pietro Di Consolo Gregorio','44767175860','pietro_dcg@hotmail.com'),(6695,'Beatriz Fonterrada Volpe','11932819975','biafonvolpe@gmail.com'),(6696,'Kawan Menezes da Silva','47605292848','kawan.menezes.silva@hotmail.com'),(6697,'Ariane goncalves carvalho pinho','41867713837','arianegoncalves300610@gmail.com'),(6698,'Jaqueline Fernandes Félix','44027833805','felix.jaqueline@hotmail.com'),(6699,'Rosimeire Batista Gusmão','10648800881','rosigusmao45@gmail.com'),(6700,'Alice Marques Vieira','70412129477','alicmarquesvieira@gmail.com'),(6701,'RENAN CAROLINO NAMIUTI','46173088819','renan.namiuti@gmail.com'),(6702,'Breno Vinicius Alves da Silva','46259617852','b_re_novinicius@hotmail.com'),(6703,'Gloria Elena Ribeiro Alfa Santucci','41056216883','gloriasantucci@hotmail.com'),(6704,'Juliana Santos Oliveira','40159042810','july.saantos@gmail.com'),(6705,'Leonardo Josias Messias','46025148805','messiasleonardo11@gmail.com'),(6706,'André dos Anjos Oliveira','46288804843','andre.4njos@gmail.com'),(6707,'Ighor Ferreira de Melo','48557804806','ighorsaopaulo13@gmail.com'),(6708,'Gabriel Machado Araujo','12959098633','gmachado140@gmail.com'),(6709,'eduardo guadagnini lima','49228189842','eduardoguadagninilima@gmail.com'),(6710,'JUAN GABRIEL DOS SANTOS','43054334864','j.s.gabriel@hotmail.com'),(6711,'Leonardo de Carvalho Chicarolli','47492224885','leo.chicarolli99@gmail.com'),(6712,'Lucas Silva Souza','43390431845','lucasslvsza@gmail.com'),(6713,'William de Carvalho Vieira','04009407360','william.vieira19@gmail.com'),(6714,'KARLA KARINY FERREIRA BARBOSA','95997024253','BONJORNO33@GMAIL.COM'),(6715,'Victor Allisson da Silva','44845655870','victor_alisson96@hotmail.com'),(6716,'Raynnie Pereira da Costa','47237839896','raypc04@gmail.com'),(6717,'Thiago Araujo Macedo de Oliveira','39858904800','dafuqmikael@gmail.com'),(6718,'Larissa Pereira Modolo','41082757802','lary_modolo@hotmail.com'),(6719,'Caio Canhassi Palermo','50025053841','cplrm2@gmail.com'),(6720,'Jenniffer Marinho Cacovichi','37516951846','jennicacovichi@hotmail.com'),(6721,'Kézia Accioly Andrade Matos','07129124520','keziaaccioly@gmail.com'),(6722,'Bruno Vinicius Moraes Santos','41707213810','bruno10vs@gmail.com'),(6723,'Letícia de Oliveira','45784607898','oli.leticia14@gmail.com'),(6724,'Filipe Neves','46691934814','phil.2004@hotmail.com'),(6725,'Pamela Lacorte da Silva','46968397889','pamelalacortes@gmail.com'),(6726,'Gabriela Iramina Gomes','41412991897','gabrielagomes.br@gmail.com'),(6727,'Bruno Augusto Souza Oliveira','36358963813','Bruno.augusto.souza@outlook.com'),(6728,'Gabriella Reis Carrer Spedo','31808114809','Gabicarrer@hotmail.com'),(6729,'Daiane Peres','41563809800','Daianeperes94@gmail.com'),(6730,'Elder Silva Santos','45839296848','eldersantos98@gmail.com'),(6731,'Guilherme Daltrino Teodoro','46974708858','gdaltrino@gmail.com'),(6732,'Marcos Vinicius Macedo Moreira','39826641871','marcosvinimm20@gmail.com'),(6733,'FRANCIANE FREITAS SILVEIRA','56165676391','silveira.ane@gmail.com'),(6734,'Luiz Felipe Sallani Simioni','44091999867','luizfelipe.s.simioni@hotmail.com'),(6735,'Gustavo Queiroz de Souza','22972267800','gu_queiroz@hotmail.com'),(6736,'Vinicius Canal Ribeiro','49120075872','v.canal@aluno.ufabc.edu.br'),(6737,'Fernanda Gobo da Silva Alves Sena','42237184879','nanda_gobbo11@hotmail.com'),(6738,'Martha Gaudêncio da Silva','48482847830','marthagaudencio@gmail.com'),(6739,'Loreto Pizzuti','23306849839','loretopizzuti@gmail.com'),(6740,'Gabriel da Costa Medeiros de Souza','46139264839','gabrieldacosta023@gmail.com'),(6741,'Lourraine Sthefany Barbosa Milagres','48961856847','barbosalourraine@gmail.com'),(6742,'Bernardo Tavares Toto','11519656777','b.tavares.toto@gmail.com'),(6743,'Layse Alves Savordelli','39410044847','savordelli.layse@hotmail.com'),(6744,'Arthur Ferreira Mathias','46930456837','arthur.121099@gmail.com'),(6745,'Isabela Cristina André Alexandrino','45177742873','isabela_alexandrino@hotmail.com'),(6746,'Erika Alves Bueno','30646877860','dra_erika_bueno@hotmail.com'),(6747,'Maria Luísa Laforé Dias','41107278805','malulaforedias@hotmail.com'),(6748,'Clara Rego Akl','39839799800','clara.akl04@gmail.com'),(6749,'Maria Gabrielly Castro Abichabki','47555729830','Maabichabki@gmail.com'),(6750,'Francis In Sue Su Yan Chien','46234474802','chien.francis9@hotmail.com'),(6751,'Juan Alexander Salazar Silva','30910359806','juansalazarj@gmail.com'),(6752,'Matheus Ligeiro Dias','39468112802','matheusligeiroddias@gmail.com'),(6753,'Mayra Vieira dos Santos Oliveira','38007183833','mayra.vieira@aluno.ufabc.edu.br'),(6754,'Welington Santos Reis','07696368532','welingtonestudante@gmail.com'),(6755,'Paulo Henrique Peres','43075048879','phperes1993@gmail.com'),(6756,'Beatriz Lima Nunes','41640690824','beatrizlimanunes92@gmail.com'),(6757,'Anna Beatriz Lopes Lima Ilarina dos Reis','46470313817','beatriz-l@live.com'),(6758,'Mateus Soares de Souza','06284303610','mateusflf@gmail.com'),(6759,'Mairá Bonifácio de Souza','44187113843','mairabs2011@gmail.com'),(6760,'Móira Bonifácio de Souza','44187039856','moirabs2011@gmail.com'),(6761,'Leonardo Augusto Oglouyan de Campos','34283570869','leo.o.campos@hotmail.com'),(6762,'Heloísa Armelin','37739809810','heloisaarmelin@hotmail.com'),(6763,'SIMONE ROUSSELET LAFRATTA','25153049825','simonelafratta@hotmail.com'),(6764,'Ana Beatriz de Oliveira Souza','12408254710','anasouzabia@gmail.com'),(6765,'Débora Silva Ferreira dos Santos','34014023826','deborasfsantos@gmail.com'),(6766,'Dara Giovana Senciani Mendes','44785567848','dara_mendes19@hotmail.com'),(6767,'Felipe Fernandes Correia','43558301870','Felipefcorreia@gmail.com'),(6768,'Beatriz Cintra Morena','46935043867','beatrizcmorena@gmail.com'),(6769,'Bruno de Alencar Tozi','39471269806','bruno.a.tozi@gmail.com'),(6770,'Gabriela Ferreira de Sousa','48310101899','Gabifesousa@gmail.com'),(6771,'Marcelino Mota da Silva','32431704866','marcelino.mota@hotmail.com'),(6772,'Carolina Neiva Ribeiro','39305342825','carolinaneiivaribeiro123@gmail.com'),(6773,'John Andrew Sims','23526398836','johnandsims@gmail.com'),(6774,'Mayara Silva Sousa Pires','41132921830','mayara-pires@hotmail.com'),(6775,'Diogo Carnaúba de Souza','46001222835','diogo.carnauba@outlook.com'),(6776,'Giulia Petinelli Vernaglia','43782827805','giulia_petinelli24@hotmail.com'),(6777,'Tayna Pereira Leite de Almeida','35948653803','taynaleitte123@gmail.com'),(6778,'Gustavo do Carmo Garcia','36465932881','gustavo4277543@gmail.com'),(6779,'Fernanda Encinas Tomaz da Silva','47492618824','fefaencinas@hotmail.com'),(6780,'Ruth Camille Martins Matos','35104439852','rutylina@yahoo.com.br'),(6781,'Ana Nazaré Aparecida Marques','38367091809','ananmarqs@gmail.com'),(6783,'Gustavo dos Santos Ortolan','47210318828','g.ortolan@hotmail.com'),(6784,'Anderson Luis Saber Campos','08107015886','alscampos@uol.com.br'),(6785,'Eduardo Alves Tassarine','47544150860','dudu_0610@outlook.com'),(6786,'Henrique Damacena Sobral Alves da Cunha','45606733811','henrique_d.cunha@hotmail.com'),(6787,'Maria Vitória de Luna Mesquita','44444651822','vitoriamaryluna@gmail.com'),(6788,'Laurent Rodrigues Rezende','46294249899','laurent438@hotmail.com'),(6789,'Henrique Costa Margon','02719909106','henriquemargon@hotmail.com'),(6790,'Larissa de Oliveira Nakajune','40770879888','larissa.nakajune@yahoo.com'),(6791,'Lais Campos Oliveira','43725001813','laisoliveira68@hotmail.com'),(6792,'Danielle Gonzales','38075923855','daniellegonzales52@hotmail.com'),(6793,'Valeria Lima Fabricio Borghesi','11272063895','valeriafabricio@gmail.com'),(6794,'Evelyn Celoto de Souza Borges','22628554801','evelyn.celoto@gmail.com'),(6795,'Paloma Cristina Silva Trevisan','37890630883','pcst03@hotmail.com'),(6796,'GRAZIELE CRISTINA FERREIRA','23046633890','grazi.ufabc@gmail.com'),(6797,'Pedro David','37771790860','pedrod.black@live.com'),(6798,'Robson Leite da Silva','32490407899','robsonleite.91@gmail.com'),(6799,'Jeferson Marques de Menezes','45606683881','Jfbyte95@gmail.com'),(6800,'Gabriel De Mello Rodrigues','44755025869','Gabri128@hotmail.com'),(6801,'Patricia Sacilotto','41468018850','pa.sacilotto@gmail.com'),(6802,'Jaqueline willens garcia matheus','31149116846','Jaqueline.willens@gmail.com'),(6803,'Angelo Cardoso de Oliveira','33961296871','angelosbc@hotmail.com'),(6804,'Vinícius Bueno de Morais','46502733824','viniciusmorais@outlook.com'),(6805,'Tatiane Esteves Watanabe','30956232833','ane.ami@gmail.com'),(6806,'Stefania Helen Dourado','44215520894','stefaniadourado@gmail.com'),(6807,'Greiziany Soares Paulino Oliveira','78995540206','greizianyoliveira@gmail.com'),(6808,'Thaís Caroline Gonçalves','38131319806','thais.goncalves@aluno.ufabc.edu.br'),(6809,'Juliana Neves Gonçalves','42730327835','juliananeves94@gmail.com'),(6810,'RENATO ARCHER DE PAULA ALMEIDA','46963183899','renato_archer_@hotmail.com'),(6811,'Rafael Barreto Simões','23030685845','rafael.barreto@aluno.ufabc.edu.br'),(6812,'Thiago Corrêa Jacovine','28487687890','jacovine@yahoo.com'),(6813,'Leonardo de Souza','10286782669','leosouzaengbio@outlook.com'),(6814,'Alexandre Becker','22108304860','alebecker12@gmail.com'),(6815,'Caroline dá Costa Silva','41127326864','caroline_costa@outlook.com'),(6816,'Lucas Santana da Silva','44161335881','lucas.muds@gmail.com'),(6817,'Alan Américo Da Silva','37986780819','alanamericosilva@gmail.com'),(6818,'Gabriel Moraes de Oliveira de Jesus','04922399160','gm.oliveira@live.com'),(6819,'Artur Zimerman','00250906740','artur.zimerman@gmail.com'),(6820,'Edaurdo de Menezes dos Santos','46983057805','menezes.eduardo.santos@gmail.com'),(6821,'Thiago Sales Barbosa','31294185802','dteino@gmail.com'),(6822,'Flávia Mitake','45953818831','tomimitake@gmail.com'),(6823,'Tairis Aparecida da Silva','39122987851','tairis.aps@gmail.com'),(6824,'Bruna Pereira Santos','38880738801','bru.brunaps@gmail.com'),(6825,'Douglas luan cardoso arena','44286256855','Dgl.arena12@outlook.com'),(6826,'Richard Matsuo de Brum Soares Silva','22859361847','richardmatsuo@gmail.com'),(6827,'Erika Brassel Orellana','41153776820','erika.brassel.inca@gmail.com'),(6828,'Luana Steck Sampaio','41288861818','luanasteck@gmail.com'),(6829,'Aneliza','40368731804','anelizafraio.neves@gmail.com'),(6830,'Yasmin dos Anjos de Deus Cardoso','47374828896','yasmin.adc@hotmail.com'),(6831,'Guilherme Augusto Barbosa dos Santos','11236959620','guiabs097@gmail.com'),(6832,'Juliana Kaori Ido','45835987854','idokaori@yahoo.com.br'),(6833,'GLORIA MARIA MEROLA DE OLIVEIRA','6950551860','gloriamerola@gmail.com'),(6834,'Heloisa Fernanda da Silva Santos','39833093809','heloisa.fernanda92@gmail.com'),(6835,'Jéssica Karoline Feliciano dos Prazeres','07832207400','jessicakarolinefeliciano@gmail.com'),(6836,'Alisson Souza da Silva','38171216870','alissonsilva_99@hotmail.com'),(6837,'Rafael Tuzuki Quaresma','40956505830','rafaeltuzuki@gmail.com'),(6838,'Thiago Felipe de Oliveira Santos','42483079873','Thi.tt@hotmail.com'),(6839,'julie vieira benlulu','47040102870','mat_74wave@hotmail.com'),(6840,'Jônatas Pereira da Silva','38869835871','jonatasdasilva002@gmail.com'),(6841,'Gustavo Moreira de Oliveira','45131332877','gustavo.mool@outlook.com'),(6842,'Victor Henrique Scheer e Lima','46621960867','scheervictor@gmail.com'),(6843,'Diógenes Gaudencio da Silva Fernandes','02695463324','diogenes.grintequi@gmail.com'),(6844,'Ana Carolina Casagrande','45479238841','anacasagrande33@hotmail.com'),(6845,'Priscila dos Santos','00180265245','priscila.olimpia@gmail.com'),(6846,'Sânnera de Brito Vieira','44465466862','sannerabrito.sb@gmail.com'),(6847,'ERNANE PEDRO MATOS BARROS','05784420356','ernanepedro@gmail.com'),(6848,'Vitor Aguillar Morgado','46696004866','vitor.aguillar@live.com'),(6849,'Kevin Barbosa Siqueira','46112490854','kevin.barbos@hotmail.com'),(6850,'Pamela Viana Barbosa','5604880876','barbosavianapamela@gmail.com'),(6851,'Juliana de Oliveira','38176206830','oliveiraodeju@gmail.com'),(6852,'Karen Rocha Lima','49745118826','karenrochalima@hotmail.com'),(6853,'Camila Nascimento Silva','46562377870','camilanascimento645@gmail.com'),(6854,'Isabela Andrade do Carmo','46697119896','isabela_carmo15@hotmail.com'),(6855,'Vinicius Oliveira Nascimento Louro','46539910819','vinicius.louro.11@hotmail.com'),(6856,'Caio Vitor Spaulonci','39099934866','caio.spaulonci@hotmail.com'),(6857,'Amanda Yumi Ambriola Oku','36966307807','amanda.yumi.ambriola@gmail.com'),(6858,'Mateus Coimbra da Costa','44229214871','mateuscoimbra@outlook.com'),(6859,'Nivaldo Benedito Ferreira Campos','01745143874','campos.nivaldo@gmail.com'),(6860,'Beatriz Cotogno','43684425800','bia.cotogno@gmail.com'),(6861,'Maria Luísa Maciel Vieira','47311675820','macielmarialuisa@gmail.com'),(6862,'Jessica Sousa Gomes','37911338884','sousagomesjessica@gmail.com'),(6863,'Cosmo Gonçalves Rodrigues de Lima','22663526878','cosmo.lima@gmail.com'),(6864,'Thaís de Lima Prado','47151448830','thais_prado27@hotmail.com'),(6865,'Rodrigo Teixeira Lima','36166253869','Rodtl@hotmail.com'),(6866,'João Pedro Tonello de Souza','32792345810','tonello.jpedro@gmail.com'),(6867,'Rafael Gouveia Mejias','39825293870','rafa.mejiass@hotmail.com'),(6868,'Danielly de Souza Marques','42039497854','danielly.marques@hotmail.com'),(6869,'Juliana Gracia Dio','45603380861','ju_gracia@hotmail.com'),(6870,'Paola Gonçalves da Cruz rato','45350534807','Paola_goncalvea@outlook.com'),(6871,'Giovana Justiniano Soares','43001800836','giovanajustiniano@gmail.com'),(6872,'Wallesandra Souza Rodrigues','00546951120','wsrodriguess@gmail.com'),(6873,'Júlia Souza Reis','46917440884','juliasreis@live.com'),(6875,'Gustavo Rios da Silva','43230816854','gustavorios493@gmail.com'),(6876,'Leticia Gonçalves Camillo','39499151842','leticia.gnlvs@gmail.com'),(6877,'Lucas Barbosa Rudge Furtado','34552374877','lucasrudge@gmail.com'),(6878,'Luana de Souza Prochazka','36406256840','prochazka.luana@gmail.com'),(6879,'Alexandre José Dimão','28669524860','alexandrejosesimao@gmail.com'),(6880,'Elenir Lindaura da Silva','42024879829','elenir.lindaura@gmail.com'),(6881,'Artur Scudeler','40783401809','artur.scud@gmail.com'),(6882,'Giovanna Lis Andrade Mota dos Santos','44193055841','gigi.motta@hotmail.com'),(6883,'Wellington Barreto Rodrigues dos Santos','36377844832','Welrodrisantos@hotmail.com'),(6884,'Bruna de Souza Fernandes','33584015880','bsfernandes17@gmail.com'),(6885,'Ana Karolina Almeida dos Santos','42235404839','ms.akalmeida@hotmail.com'),(6886,'Tamara Portis Tobias','75012871120','tamaraportis@hotmail.com'),(6888,'Fernando Mitio Suzuki','15348426830','nandodiversos@yahoo.com.br'),(6889,'Julia Aparecida da Silva Lima','34293389806','julia.asl.jl@gmail.com'),(6890,'Marcos fernando Horwath','42063717842','Marcoshorwath@outlook.com'),(6891,'Bruno Henrique de Brito Silva','41146056818','bruno_brito@hotmail.com.br'),(6892,'Marcelo Mello da costa','38710103830','marcelomellodacosta@gmail.com'),(6893,'Sandro Rinaldi Feliciano','25193583865','sandroufabc@gmail.com'),(6894,'Julio Cesar Santos Sousa','06337637305','julioc.s.sousa@hotmail.com'),(6895,'Amanda Santos Pereira','37057285809','Amanda.pereira2311@gmail.com'),(6896,'Vitor Chicarolli','47013069833','vitor_chica@hotmail.com'),(6897,'paulo vitor martins albuquerque','35223155882','paulovma@gmail.com'),(6898,'Gabriella Guinlle Ferreira de Oliveira Santos','40991221826','gabriellaguinlle@gmail.com'),(6899,'Victor José Fidelis','39733692832','victorjose_fidelis@hotmail.com'),(6900,'Gabriel de Miranda Nascimento','48345233813','nascimento.gabrielm@gmail.com'),(6901,'Gabriel Pirahy Martinez','42239760877','pirahy.gabriel@gmail.com'),(6902,'IVENS MARTINS CARVALHO','40862297818','martins.c@aluno.ufabc.edu.br'),(6903,'Michele Karina Franco','22243791889','michele.franco@ufabc.edu.br'),(6904,'THAIS DA SILVA RIOS','39298615850','thaisrios.tsr@hotmail.com'),(6905,'Nathalia Florencio Peres','45591072895','nathaliafperes@gmail.com'),(6906,'Alex Krasnikovas Antunes','11067314','alex.krasnikovas@aluno.ufabc.edu.br'),(6907,'Alexandre Magno Martins','11113516','magno.alexandre@aluno.ufabc.edu.br'),(6908,'Amanda Peres Paz','21039614','amanda.peres@aluno.ufabc.edu.br'),(6909,'André de Almeida Marques','11088512','andre.marques@aluno.ufabc.edu.br'),(6910,'Andre William Perogil Pereira','11008316','andre.william@aluno.ufabc.edu.br'),(6911,'Barbara Chiari Comecanha Silva','11091515','chiari.barbara@aluno.ufabc.edu.br'),(6912,'Beatriz Cunha Braga','21063912','beatriz.braga@aluno.ufabc.edu.br'),(6913,'Bruna Nogueira de Souza','11058714','b.nogueira@aluno.ufabc.edu.br'),(6914,'Bruno Aristimunha Pinto','21062916','a.bruno@aluno.ufabc.edu.br'),(6915,'Bruno Henri Garcia Viterbo','11050615','bruno.henri@aluno.ufabc.edu.br'),(6916,'Carlo Barros de Mattos Jourdani','21076513','carlo.jourdani@aluno.ufabc.edu.br'),(6917,'Carlos Henrique Torres Silva','11006312','carlos.torres@aluno.ufabc.edu.br'),(6918,'Caroline Matsumoto','11057412','caroline.m@aluno.ufabc.edu.br'),(6919,'Celso Felipe Casaro','11057314','f.casaro@aluno.ufabc.edu.br'),(6920,'Danilo de Souza Cutrim','11087215','danilo.cutrim@aluno.ufabc.edu.br'),(6921,'Douglas de Paulo Estenio dos Santos','11122014','douglas.estenio@aluno.ufabc.edu.br'),(6922,'Douglas Marinho da Silva','11050715','douglas.m@aluno.ufabc.edu.br'),(6923,'Eder Augusto Barbosa Paz da Silva','21057113','eder.augusto@aluno.ufabc.edu.br'),(6925,'Eric Shimizu Karbstein','11027316','eric.karbstein@aluno.ufabc.edu.br'),(6926,'Erik de Almeida Silva','21079515','erik.almeida@aluno.ufabc.edu.br'),(6927,'Filipe Vaz Lourenco','11104015','vaz.lourenco@aluno.ufabc.edu.br'),(6928,'Gabriel Martins Trettel','11021916','gabriel.trettel@aluno.ufabc.edu.br'),(6929,'Gabriel Rios Souza','11201720940','gabriel.rios@aluno.ufabc.edu.br'),(6930,'Gabriel Rodrigues Ponce da Conceicao','11024812','gabriel.ponce@aluno.ufabc.edu.br'),(6931,'Guilherme Domke de Thomaz','21083013','g.thomaz@aluno.ufabc.edu.br'),(6932,'Gustavo Eliezer Nofoente','21051416','g.nofoente@aluno.ufabc.edu.br'),(6933,'Gustavo Martinez Franco Mattiello','21037616','gustavo.mattiello@aluno.ufabc.edu.br'),(6934,'Gustavo Trovalim Jordao','11025112','gustavo.jordao@aluno.ufabc.edu.br'),(6935,'Heber Camacho Desterro','11069416','heber.desterro@aluno.ufabc.edu.br'),(6936,'Henrique Zanferrari Soares Hadermeck','11201721507','henrique.zanferrari@aluno.ufabc.edu.br'),(6937,'Hugo Kenzi Ogawa','11039914','hugo.ogawa@aluno.ufabc.edu.br'),(6939,'Joao Augusto Aguiar Neto','11064514','joao.neto@aluno.ufabc.edu.br'),(6940,'Joao Bosco Cantisani','11201712892','cantisani.joao@aluno.ufabc.edu.br'),(6941,'Jose Thiago dos Santos Moreira','21040515','jose.thiago@aluno.ufabc.edu.br'),(6942,'Juliana dos Santos Silva','11104013','juliana.santos@aluno.ufabc.edu.br'),(6943,'Karen Oliveira dos Santos','11110915','oliveira.karen@aluno.ufabc.edu.br'),(6944,'Karina Miranda Mota','11068614','miranda.karina@aluno.ufabc.edu.br'),(6945,'Kleber Ataide da Silva Feitosa','11115015','kleber.ataide@aluno.ufabc.edu.br'),(6946,'Leonardo Mendorico Maestrelli','11051115','l.maestrelli@aluno.ufabc.edu.br'),(6947,'Luana Ferreira do Nascimento','11090115','luana.n@aluno.ufabc.edu.br'),(6948,'Lucas Defante','11052015','lucas.defante@aluno.ufabc.edu.br'),(6949,'Lucas Rosa Fagundes','11029515','lucas.fagundes@aluno.ufabc.edu.br'),(6950,'Luiz Henrique Aparecido Nicolau de Oliveira','11103315','luiz.henrique@aluno.ufabc.edu.br'),(6951,'Marcelo Ferreira Silva Junior','11021412','marcelo.junior@aluno.ufabc.edu.br'),(6952,'Marcos Mendes Luchon','21069713','m.luchon@aluno.ufabc.edu.br'),(6953,'Mario Barbosa Junior','11055015','mario.barbosa@aluno.ufabc.edu.br'),(6954,'Matheus Alexandre de Sena','11201720166','m.sena@aluno.ufabc.edu.br'),(6955,'Matheus dos Santos Pereira','11053314','matheus.s@aluno.ufabc.edu.br'),(6956,'Matheus Gomes Juy','11101915','matheus.juy@aluno.ufabc.edu.br'),(6957,'Matheus Porto Garcia','11051116','m.porto@aluno.ufabc.edu.br'),(6958,'Matthaeus Gomes de Campos','11201722092','matthaeus.gomes@aluno.ufabc.edu.br'),(6959,'Michelle Kaori Hamada','21039716','michelle.hamada@aluno.ufabc.edu.br'),(6960,'Miguel dos Reis','11201721738','miguel.reis@aluno.ufabc.edu.br'),(6961,'Murillo Rodrigues Dias','11201723076','murillo.dias@aluno.ufabc.edu.br'),(6962,'Natalia Gomes do Nascimento Sampaio','11012615','natalia.sampaio@aluno.ufabc.edu.br'),(6963,'Nicole Cantelli Afonso','21062314','cantelli.nicole@aluno.ufabc.edu.br'),(6964,'Paulo Ricardo Cunha da Silva','11080312','pricardo@aluno.ufabc.edu.br'),(6965,'Pedro Henrique Portela dos Santos','11087415','portela.pedro@aluno.ufabc.edu.br'),(6966,'Renato do Prado Oliveira Dias','11019715','prado.dias@aluno.ufabc.edu.br'),(6967,'Renato Ponce Batista de Carvalho','21021615','renato.ponce@aluno.ufabc.edu.br'),(6968,'Rodrigo da Silva Oliveira','11080316','oliveira.r@aluno.ufabc.edu.br'),(6969,'Vinicius Blasio Keslarek','21018513','vinicius.keslarek@aluno.ufabc.edu.br'),(6970,'Vinicius Teodoro Basilio','11055716','vinicius.t@aluno.ufabc.edu.br'),(6971,'Vitor Carmignoli Sanches','11201722887','carmignoli.v@aluno.ufabc.edu.br'),(6972,'Wesley Axel de Barros','11201722424','w.barros@aluno.ufabc.edu.br'),(6973,'William de Souza Gomes','11201720874','gomes.souza@aluno.ufabc.edu.br'),(6974,'Willian Comar Sanches','11068516','willian.sanches@aluno.ufabc.edu.br'),(7095,'Alexandre Leite da Silva','28121314895','als120581@gmail.com'),(7096,'Ana Paula Chaves do Nascimento','47499787877','paulanasc10@gmail.com'),(7097,'Andre Luiz Martins Cotting','46141039871','andreluizcotting@gmail.com'),(7098,'Andreia Silva','32565168829','andreia0slv@gmail.com'),(7099,'Andrius Dominiquini','41711571881','andriusdomik@hotmail.com'),(7100,'Antonia Mabrysa Torres Gadelha','04454110310','mabrysa_gadelha@hotmail.com'),(7101,'Arnaldo Soares Filho','14040779878','arnaldosoaresfilho@yahoo.com.br'),(7102,'Asaph Armando Jacinto','40156374889','asaph_jacinto@hotmail.com'),(7103,'Audrey Andrade Gomes','43653478880','audreyandrade49@gmail.com'),(7104,'Barbara de Araujo Goncalves','39323527858','babiaraujo54@gmail.com'),(7105,'Beatriz Mayumi Andrade Matsui','43693268851','beatrizandrade.etecsv@gmail.com'),(7106,'Bruce Martins de Santana','41637293801','bruceewmesmo@gmail.com'),(7107,'Carolina Rocha','44005132898','carol.carolina_rocha@hotmail.com'),(7108,'Cintia Maria Heckmann','10715785885','cmheckmann@gmail.com'),(7109,'Claudia Deise de Meneses Pereira','24576030809','claudia.deisep@gmail.com'),(7110,'Daniel Comin Lot','35297095816','dancomin@gmail.com'),(7111,'Daniel Demetrio Almeida Barbosa','39071611817','daniel.demetrio@ufabc.edu.br'),(7113,'Elizabeth Miho Kotani','17913033827','bethkotani@hotmail.com'),(7114,'Erica Terceiro Cardoso','35810401821','ericaterceiro1986@gmail.com'),(7115,'EVONIR ALBRECHT','01450498922','evoniralbrecht@gmail.com'),(7116,'Fabiana Roberta Segura','34496542846','fabianarsegura@gmail.com'),(7117,'Fabio Danilo Ferreira','36630558847','fabiofe.4@gmail.com'),(7118,'Gabriel Gouveia Barbosa','44595442882','biel.goubar@hotmail.com'),(7119,'Gabriel Oblasser dos Santos','39488515813','gabrieloblasser@hotmail.com'),(7120,'Giovanna Nogueira da Silva','43417511828','giovannanog1@hotmail.com'),(7121,'Glayce Bruna de Souza Stampini','44853368833','glaycestampini@hotmail.com'),(7122,'Graciela Medina Rivera Guillen','45705094876','mrggraciela@gmail.com'),(7123,'Jeyson Ferreira Alves','06653531627','jeysonalves8@hotmail.com'),(7124,'Joao Pedro Soares Ferreira','17152646732','jpsoaresf@outlook.com'),(7125,'Jonatas de Oliveira Serra','37218168892','jonatas.serra@hotmail.com'),(7126,'Josiane Belloni Metzner da Gragnano','29987439861','josianebmg@gmail.com'),(7127,'Juliana de Oliveira Saldanha','41908165820','ju-saldanha@hotmail.com'),(7128,'Kamille Santana Krieger','48906070802','kamille.krieger@outlook.com'),(7129,'Lavinia Mitiko Takarabe','49715678874','mailmitiko@gmail.com'),(7130,'Leticia Paiva','48218648860','leticiapaiva1998@gmail.com'),(7131,'Luan Fazito Jurado Acarino','50377236802','luanfazito@gmail.com'),(7132,'Luisa Basile dos Santos Mello','42632449820','luisabasile95@gmail.com'),(7133,'Maira Santos Pascon','11409000990','mairapascon@hotmail.com'),(7134,'Marco Aurelio Cinaqui Amaral','30143474855','cinaqui@gmail.com'),(7135,'Maria Aparecida de Oliveira Ferreira','53255259800','ollive@uol.com.br'),(7136,'Marta Rodrigues Martins','34297816806','martakixd@gmail.com'),(7138,'Mel Bleil Gallo','52888991268','melbleilgallo@gmail.com'),(7139,'mirian pacheco silva albrecht','81075685672','mirianpac@gmail.com'),(7140,'Natalia Cristine Dantas Costa','47093299822','natalia.cristine@hotmail.com'),(7141,'Pamela Viana Barbosa','39128054822','barbosavianapamela@gmail.com'),(7142,'Rafael Alves da Silva','40940443880','rafa2709el@hotmail.com'),(7143,'Renata Ayres Rocha','26421520812','re_ayres@hotmail.com'),(7144,'Renato Bilotta da Silva','46348945804','renatobilota@gmail.com'),(7145,'Ricardo Benedito Oliveira','04190993875','prof.ricardo.benedito@gmail.com'),(7146,'Stefany Rodrigues Saraiva','38894086801','stefanyrodrigues21@yahoo.com.br'),(7147,'Tatiana Hyodo','29873336842','tatiana_hyodo@yahoo.com.br'),(7148,'Viviane do Nascimento Bianchi','37470284893','VIVI.NBIANCHI@YAHOO.COM.Br'),(7149,'William Alves dos Santos','46911077893','willsantos_1999@hotmail.com'),(7150,'Willians Barros','30982747861','nti.willians@gmail.com'),(7151,'Adriano Gomes de Freitas','32565280823','phdadriano@gmail.com'),(7152,'Ana Carolina Santana Conceicao','01923527258','anacarolina0308@hotmail.com'),(7153,'Ana Claudia Torres Alvarenga','49899471852','ana.alvarenga@aluno.ufabc.edu.br'),(7154,'Camila Franchi','43184451860','camilafranchi@outlook.com'),(7155,'Carolina Regina de Grano Duarte','32533904899','carolina.de.grano@gmail.com'),(7156,'Cassia Goncalves de Souza','10862220670','cassiagdesouza@gmail.com'),(7157,'Debora Crisafulli Ventura','44427544894','deboracrisafulliventura@gmail.com'),(7158,'Desiree Souza Santil','48414146813','Desireesantil@gmail.com'),(7159,'Fernanda Ana Silva','35644904857','ferds.ufabc@gmail.com'),(7160,'Gesrael Silva de Lima','01396945369','gesraelsilva@gmail.com'),(7161,'Joao Vitor Goncalves de Oliveira','42910050831','jvitor.oliveira98@gmail.com'),(7162,'Jonas Moreira Silva','36684653805','jonas_scs@hotmail.com'),(7163,'Julia Kersul Faria','06188065631','juliakfaria@gmail.com'),(7164,'Karen Silverio Dutra','43746400880','karensilveriod@gmail.com'),(7165,'LIANDRA CARDOSO DA SILVA','47378538876','liksilva@bol.com.br'),(7167,'Matheus Santos Lana','36388160875','matsantoslana@gmail.com'),(7168,'Mirelle Alves de Freitas','23425522892','mirelle.adefreitas@gmail.com'),(7169,'Nivaldo Gregorio de Sousa','47450029553','nivaldogregoriosousa@gmail.com'),(7170,'Pedro Ivo G.F.A Cardoso','35941250843','pedro.ufabc@bol.com.br'),(7171,'Thaina de Menezes Cardoso','43752302828','thainacardoso@hotmail.com'),(7172,'Thais Sales Montoia','46934192818','thais.montoia@hotmail.com'),(7173,'Thayna de Lima Carneiro Holanda','45105991885','thayna_lch@hotmail.com'),(7174,'Vanessa Tinami Tamashiro','40095284869','Tamashiro.vanessa@outlook.com'),(7175,'Victor Borghi Gimenez','34526596825','victorborghigimenez@yahoo.com.br'),(7176,'Wanderlei Soares dos Santos','07757480809','wlimima18@gmail.com'),(7177,'Ana Carolina de Moraes','47350249802','anacaroldmrs@gmail.com'),(7178,'Bruna Roberta Bento','40013608886','brunabento@hotmail.com'),(7179,'Camila Negrao Guilherme','47024121831','caminina@gmail.com'),(7180,'Danielle Andrade Angelo','48496259838','contatos.ida@gmail.com'),(7181,'Gabriela Aparecida Pires Silva','44360526806','gabs_pires@hotmail.com'),(7182,'GIOVANNA MALFI DA SILVA','44905043816','gimalfis@gmail.com'),(7183,'Irina Korneva','23533542890','irina.95.korneva@gmail.com'),(7184,'Leticia Alves de Queiroz','42194473858','leticiaa.queirozz@gmail.com'),(7185,'Matheus Andrade Luna','44061386840','matheus.luna010@hotmail.com'),(7186,'Nilcio Regueira Dias','77617487134','arq.nilcio@gmail.com'),(7187,'Paola Yagi','38344606802','pa_yagi2011@hotmail.com'),(7188,'Rachel Martinuzzo Pereira','01089639503','rachelmartinuzzo@gmail.com'),(7189,'Thais Rago Wright','45585336835','rwthais@gmail.com'),(7190,'Yasmin Montero Quispe','02690822202','yasmimontero@gmail.com'),(7191,'Alcilene Jorge Lopes','36325038851','alcilenejorge@hotmail.com'),(7192,'Alexandre Francisquini Linhares Antonini','47008611854','aleantonini@me.com'),(7194,'Carla Cristiane Paz Felix','27833714801','carlapazfelix@gmail.com'),(7195,'Daniel de Andrade Fontoura','12993457780','danielfontour@gmail.com'),(7196,'Danielle Romana Bandeira Silva','36411526826','drapeau.danielle@gmail.com'),(7197,'eder dos Santos Guimaraes','30711523886','171guim@gmail.com'),(7198,'Erika Yahata','26707456873','erika.yahata@gmail.com'),(7199,'Fabio Bianchi Velcio Leite de Barros Filho','47524515812','binho.bianchi.filho@gmail.com'),(7200,'Gabriela Lima Santos','36323422883','santosgabriela2010@gmail.com'),(7201,'Giovana Mendonca Duarte','47514481885','duarttegiovana@gmail.com'),(7202,'Isabella Kobb Fernando','42472683847','isabellakobbfer@gmail.com'),(7203,'JAIDILMA RIBEIRO DOS SANTOS','42322869856','jaidilma.r@gmail.com'),(7204,'Jessica Caroline dos Santos Xavier','38375968854','jessica.xavier55@gmail.com'),(7205,'Joao Alfredo Xavier de Freitas','12744186660','joaoalfredo.xavier@yahoo.com'),(7206,'Leticia Abrantes de Andrade','45802772875','leticia.aabrantes@gmail.com'),(7207,'Luana de Camargo Vieira','47605239874','luanavicam@gmail.com'),(7208,'Mariana Coronelli Veneciano','49862271817','ven-mari@hotmail.com'),(7209,'Matheus Medeiros Maciel Monjon','40482269839','matheus_monjon@hotmail.com'),(7210,'Mike Mlitello','35707880836','militello3@gmail.com'),(7211,'Patricia Vasconcelos Barbosa Santiago','27975663867','Patricia_vbsantiago@hotmail.com'),(7212,'Paula Heloisa da Silva Ribeiro','38460461831','heloisa.paulasr@gmail.com'),(7213,'Rafael Almeida Ferreira Abrao','39873783873','ra.abrao@gmail.com'),(7214,'Rafael de Castro Ettori','44185335830','rcettori@hotmail.com'),(7215,'Renata Vieira Fogaca','45856197801','rena.toka@hotmail.com'),(7216,'Roberto Augusto Baptista Junior','14033397833','robertojr.augusto@gmail.com'),(7217,'Silvia Ferrari Abud','33764533811','silviaabud@hotmail.com'),(7218,'Tamara Galdino Bringel','34121476808','tamaragbringel@gmail.com'),(7219,'Vinicius Gabriel Alves Gomes Oliveira','46935237807','vinicius.gabriel13@yahoo.com.br'),(7220,'Vitor Gabriel da Silva','44040850874','vitorbieldasilva@gmail.com'),(7221,'VITORIA SOARES DOS SANTOS','42319389890','vitoriasoaressantos@yahoo.com.br'),(7222,'Weberth Bertoldo Moreira','38839419802','wb.moreira@hotmail.com'),(7230,'Bruna Tavares Kumayama','21080213','bruna.tavares@aluno.ufabc.edu.br'),(7275,'Pedro Marques Chicharo','11201721834','pedro.chicharo@aluno.ufabc.edu.br'),(7475,'LUIS GUILHERME LOPES SANTANA','11201811413','luis.guilherme@aluno.ufabc.edu.br'),(7538,'ISABELLA SANTOS RODRIGUES PAULINO','11201810420','isabella.paulino@aluno.ufabc.edu.br'),(7544,'Katiele Renata Alves Santana','21049615','katiele.santana@aluno.ufabc.edu.br'),(10089,'ADLER MARTOIA RIBEIRO','11201812108','adler.ribeiro@aluno.ufabc.edu.br'),(10090,'Agnes Parreira Coelho','11036512','agnes.parreira@aluno.ufabc.edu.br'),(10091,'ALICE ROCHA DE CAMARGO','11201810121','alice.camargo@aluno.ufabc.edu.br'),(10092,'Ana Carolina Simões Carvalhaes','11201722978','ana.carvalhaes@aluno.ufabc.edu.br'),(10093,'BRUNO FRANCO PUZONI','11201811457','bruno.puzoni@aluno.ufabc.edu.br'),(10094,'CARLOS EDUARDO CAMARGO SANCHES','11201811047','carlos.sanches@aluno.ufabc.edu.br'),(10096,'GABRIEL AMATO TONIN DA SILVA','11201811445','gabriel.tonin@aluno.ufabc.edu.br'),(10097,'GABRIEL MENEGHELLO','11201811508','g.meneghello@aluno.ufabc.edu.br'),(10098,'GIOVANNA MORAIS SANTOS','11201810011','giovanna.morais@aluno.ufabc.edu.br'),(10099,'GIOVANNI RIMONATTO MANZOTTI','11201822389','g.rimonatto@aluno.ufabc.edu.br'),(10101,'GUILHERME MURATORE EVANGELISTA','11201810913','guilherme.muratore@aluno.ufabc.edu.br'),(10102,'GUSTAVO PIRES MATHEUS','11201810675','gustavo.pires@aluno.ufabc.edu.br'),(10103,'Henrique Santiago de Lima','11201722460','henrique.santiago@aluno.ufabc.edu.br'),(10104,'JOSE FELIPE DA SILVA SANTOS','11201811652','jose.felipe@aluno.ufabc.edu.br'),(10105,'JULIA DANTE AYUSSO','11201810804','julia.ayusso@aluno.ufabc.edu.br'),(10106,'KARINE YUKARI SHIROMA','11201810983','karine.shiroma@aluno.ufabc.edu.br'),(10107,'LEONARDO ESTEVES CONCEICAO','11201811411','leonardo.esteves@aluno.ufabc.edu.br'),(10108,'LETICIA VIEIRA CHAVES','11201811830','leticia.v@aluno.ufabc.edu.br'),(10109,'LIDIA DE CARVALHO TRIFANOFF FERREIRA FRANCEZ','11201811385','lidia.trifanoff@aluno.ufabc.edu.br'),(10111,'MARIAH VERONICA BOCCALETTO','11201810567','boccaletto.mariah@aluno.ufabc.edu.br'),(10112,'MOZART LACERDA VIEIRA NETO','11201811446','mozart.lacerda@aluno.ufabc.edu.br'),(10114,'ROMULO VICENZO TARGINO DOMINGO','11201812274','romulo.domingo@aluno.ufabc.edu.br'),(10115,'THAIS FRAGA ROCHA PARREIRA','11201810173','thais.parreira@aluno.ufabc.edu.br'),(10116,'VICTOR SILVA OLIMPIO BEZERRA','11201811465','victor.olimpio@aluno.ufabc.edu.br'),(10117,'VITOR ZARNAUSKAS FACHINI','11201811476','zarnauskas.vitor@aluno.ufabc.edu.br'),(10118,'YORRAN SACUCCI','11201811463','yorran.sacucci@aluno.ufabc.edu.br'),(10119,'ALLAN FALCONI SOUTO E SILVA','11201810465','allan.falconi@aluno.ufabc.edu.br'),(10120,'Amanda Gabriele da Silva Adao','11089716','amanda.adao@aluno.ufabc.edu.br'),(10121,'AMANDA MELATI KUVASNEY','11201811735','amanda.kuvasney@aluno.ufabc.edu.br'),(10125,'BRUNA VIGANO E OLIVEIRA','11201810808','bruna.vigano@aluno.ufabc.edu.br'),(10126,'Daniel dos Santos Filho','11201721501','daniel.filho@aluno.ufabc.edu.br'),(10127,'DE LUCCA AVELINO HARA DA SILVA','11201811738','de.lucca@aluno.ufabc.edu.br'),(10128,'Denis Neves da Silva','21051313','denis.neves@aluno.ufabc.edu.br'),(10129,'DIEGO ARAUJO GIOVANINI','11201811750','diego.giovanini@aluno.ufabc.edu.br'),(10130,'ELTON MAURICIO DA SILVA','11201810955','mauricio.elton@aluno.ufabc.edu.br'),(10131,'FELIPE NAOKI TAKAYANAGI UCHIMURA','11201812166','felipe.naoki@aluno.ufabc.edu.br'),(10132,'Gregory Santos Boda','11201721128','gregory.boda@aluno.ufabc.edu.br'),(10133,'GUILHERME PEREIRA VALERIO DA SILVA','11201811066','guilherme.valerio@aluno.ufabc.edu.br'),(10134,'HENRIQUE BOCCATO SOLER','11201811872','h.soler@aluno.ufabc.edu.br'),(10135,'HENRIQUE TONETTO FIGUEIREDO','11201811371','tonetto.h@aluno.ufabc.edu.br'),(10136,'ISABELLA PERES DE OLIVEIRA','11201811100','oliveira.isabella@aluno.ufabc.edu.br'),(10137,'Keyth Carvalho de Freitas','11201721377','keyth.carvalho@aluno.ufabc.edu.br'),(10138,'LUIS FERNANDO VIVEIROS','11201811349','luis.viveiros@aluno.ufabc.edu.br'),(10139,'LUIZ OTAVIO BATISTA PRADO','11201811291','luiz.prado@aluno.ufabc.edu.br'),(10140,'LUIZA MARIA AMATO DE SOUZA','11201811151','luiza.souza@aluno.ufabc.edu.br'),(10141,'Matheus Ferreira Feitosa','11201722657','matheus.feitosa@aluno.ufabc.edu.br'),(10142,'OTAVIO JUNIOR DA SILVA','11201810722','otavio.j@aluno.ufabc.edu.br'),(10143,'Ramon Rodrigues','11201722898','ramon.rodrigues@aluno.ufabc.edu.br'),(10144,'SAMARA SUELLEN MIRANDA DE AZEVEDO','11201810807','samara.suellen@aluno.ufabc.edu.br'),(10145,'THIAGO HAEITMANN DA FONSECA','11201811868','t.haeitmann@aluno.ufabc.edu.br'),(10147,'VITOR MIGUEL SILVA DE CAMPOS','11201812153','vitor.campos@aluno.ufabc.edu.br'),(10148,'YAN VITOR SANTANA DE ALMEIDA','11201810289','yan.almeida@aluno.ufabc.edu.br'),(10149,'AGATHA HURBA NUNES','11201812123','agatha.h@aluno.ufabc.edu.br'),(10150,'BEATRIZ MENDONCA DE ANDRADE','11201812226','beatriz.mendonca@aluno.ufabc.edu.br'),(10152,'Danilo Paschon','11057608','danilo.paschon@ufabc.edu.br'),(10153,'DANILO SALGADO NATAL','11201810035','d.salgado@aluno.ufabc.edu.br'),(10154,'GUILHERME CESARIO SCAGNOLATO','11201812319','guilherme.scagnolato@aluno.ufabc.edu.br'),(10155,'GUILHERME FERREIRA GALDINO','11201811063','g.guilherme@aluno.ufabc.edu.br'),(10156,'HEITOR CARRER DORIA','11201811132','heitor.doria@aluno.ufabc.edu.br'),(10157,'HENRIQUE CARVALHO CANDIDO','11201811467','henrique.candido@aluno.ufabc.edu.br'),(10158,'IGHOR FERREIRA DE MELO','11201811444','ighor.melo@aluno.ufabc.edu.br'),(10159,'ITALO SAILIS SILVA COSME PENAROTTI','11201810326','italo.penarotti@aluno.ufabc.edu.br'),(10160,'JACQUELINE COELHO MARINHO','11201812013','jacqueline.marinho@aluno.ufabc.edu.br'),(10161,'JOAO VITOR ARRUDA DE BARTOLO','11201812168','joao.arruda@aluno.ufabc.edu.br'),(10162,'KAIO VINICIUS SOUZA SANTOS','11201810069','kaio.santos@aluno.ufabc.edu.br'),(10163,'LEONARDO BERTO SANCHEZ','11201811315','b.sanchez@aluno.ufabc.edu.br'),(10164,'LUCAS DE MEDEIROS SANTOS','11201811014','l.medeiros@aluno.ufabc.edu.br'),(10165,'LUCAS NAVARRETO BOTELHO','11201812100','lucas.navarreto@aluno.ufabc.edu.br'),(10166,'LUCAS YUDI FUKAZAWA CASSIN','11201812210','lucas.yudi@aluno.ufabc.edu.br'),(10167,'LUCCA IANAGUIVARA KISANUCKI','11201812090','lucca.ianaguivara@aluno.ufabc.edu.br'),(10168,'MAIARA ESTEFANI DOS SANTOS','11201810008','maiara.s@aluno.ufabc.edu.br'),(10169,'MARIANA MIWA OKUMA MIYASHIRO','11201811238','okuma.miwa@aluno.ufabc.edu.br'),(10170,'NICOLAS DANTAS DOS SANTOS','11201810982','nicolas.dantas@aluno.ufabc.edu.br'),(10172,'SAMIRA HADDAD','11201812350','samira.haddad@aluno.ufabc.edu.br'),(10173,'Talita Marques de Araujo','11201722493','talita.marques@aluno.ufabc.edu.br'),(10175,'VICTOR MOREIRA BARROS','11201810338','moreira.victor@aluno.ufabc.edu.br'),(10176,'VINICIUS APARECIDO GARCIA RODRIGUES','11201811878','vinicius.garcia@aluno.ufabc.edu.br'),(10177,'VINICIUS ZILIO ROCCA','11201810013','vinicius.rocca@aluno.ufabc.edu.br'),(10178,'WILSON LUIZ DE OLIVEIRA JUNIOR','11201810277','wilson.luiz@aluno.ufabc.edu.br'),(10179,'ALLANYS SICORA SANTOS','11201811811','allanys.sicora@aluno.ufabc.edu.br'),(10180,'ANA BEATRIZ REFUNDINI CASTELLANI','11201812061','ana.castellani@aluno.ufabc.edu.br'),(10181,'BEATRIZ LUMI TAKEMOTO DOS ANJOS','11201811312','beatriz.takemoto@aluno.ufabc.edu.br'),(10183,'BRUNO EDUARDO CORREIA ALFANO','11201822413','bruno.alfano@aluno.ufabc.edu.br'),(10184,'CAROLLINE MARTINS DE LIMA','11201811355','carolline.lima@aluno.ufabc.edu.br'),(10185,'FERNANDA SAYURI ALVES ITO','11201811042','fernanda.sayuri@aluno.ufabc.edu.br'),(10186,'GABRIEL MARTINS BAEZA PINHAL','11201812000','gabriel.pinhal@aluno.ufabc.edu.br'),(10187,'GABRIELA ALEVI DAGRELA','11201811214','gabriela.alevi@aluno.ufabc.edu.br'),(10188,'GIOVANNA PIMENTEL ERMIDA','11201811954','giovanna.ermida@aluno.ufabc.edu.br'),(10189,'GUSTAVO DABAGUE','11201812304','g.dabague@aluno.ufabc.edu.br'),(10190,'HENRIQUE LIMA CAMPOS DE MENEZES','11201812225','henrique.menezes@aluno.ufabc.edu.br'),(10191,'JOAO VITOR RAMOS CHAVES','11201811264','joao.chaves@aluno.ufabc.edu.br'),(10192,'LARISSA LARRUBIA PEREIRA','11201812371','larissa.larrubia@aluno.ufabc.edu.br'),(10193,'LEONARDO BONACIN DE ALMEIDA','11201811669','leonardo.bonacin@aluno.ufabc.edu.br'),(10194,'LEONARDO DE PALMA ALVAREZ PAIVA','11201810486','leonardo.paiv@aluno.ufabc.edu.br'),(10195,'LUAN CALIEL LESSA SANTOS','11201812361','luan.caliel@aluno.ufabc.edu.br'),(10196,'LUCAS FERREIRA KITAHARA SOUSA','11201811160','lucas.kitahara@aluno.ufabc.edu.br'),(10197,'LUCAS PFISTER DVULHATKA SICILIANO THOMAZ','11201811976','lucas.pfister@aluno.ufabc.edu.br'),(10198,'LUCAS PRADO SANTOS','11201811074','prado.lucas@aluno.ufabc.edu.br'),(10199,'MARIA CLARA DE MARTINO MOTA','11201812072','maria.martino@aluno.ufabc.edu.br'),(10200,'MARIANA PEREZ TAVARES','11201811317','mariana.p@aluno.ufabc.edu.br'),(10201,'MATHEUS MOISES SILVA','11201810540','matheus.moises@aluno.ufabc.edu.br'),(10202,'MAYARA CRISTINA DA SILVA ZORZELLI','11201811821','mayara.zorzelli@aluno.ufabc.edu.br'),(10203,'NICHOLAS FERNANDO ZACARIAS DA SILVA','11201811267','nicholas.zacarias@aluno.ufabc.edu.br'),(10204,'RAFAELA HARARY URSO','11201812098','rafaela.urso@aluno.ufabc.edu.br'),(10205,'THAYSLANY SILVA MACIEL','11201810830','maciel.t@aluno.ufabc.edu.br'),(10206,'TIAGO COMETTI LOMBARDI','11201810607','tiago.cometti@aluno.ufabc.edu.br'),(10207,'VINICIUS PELOGGIA DE CASTRO','11201811430','v.castro@aluno.ufabc.edu.br'),(10208,'Willian Messias de Araujo','21067816','willian.araujo@aluno.ufabc.edu.br'),(10209,'Alan Wallace dos Santos Moreira','11201720368','alan.wallace@aluno.ufabc.edu.br'),(10210,'Alecsander Vinicius Nunes do Nascimento','11028014','alecsander.nascimento@aluno.ufabc.edu.br'),(10211,'AMANDA FERNANDES CASTRO','11201810360','amanda.castro@aluno.ufabc.edu.br'),(10212,'Andre Mamoru Hosoe','11201720628','andre.hosoe@aluno.ufabc.edu.br'),(10213,'ARTHUR FARIA DA SILVA','11201810082','arthur.faria@aluno.ufabc.edu.br'),(10214,'Bryan Kajimoto Rivas Gomes','11058616','bryan.rivas@aluno.ufabc.edu.br'),(10217,'GABRIELA MONARO RODRIGUES','11201811530','gabriela.monaro@aluno.ufabc.edu.br'),(10218,'GEORGE HARRISON ROCHA','11201810309','george.rocha@aluno.ufabc.edu.br'),(10219,'GEOVANNA ELVIRA SANTOS YAMANAKI','11201810712','elvira.yamanaki@aluno.ufabc.edu.br'),(10220,'GUILHERME MARCHES GONCALVES','11201810468','guilherme.marches@aluno.ufabc.edu.br'),(10221,'GUILHERME SILVA CALABREZ','11201822477','guilherme.calabrez@aluno.ufabc.edu.br'),(10222,'Jeferson Vinicius Moreira','11201721409','jeferson.vinicius@aluno.ufabc.edu.br'),(10223,'LARISSA RODRIGUES DE ALMEIDA','11201812076','rodrigues.larissa@aluno.ufabc.edu.br'),(10224,'Leonardo Costa Loreti Lopes','11201721569','leonardo.loreti@aluno.ufabc.edu.br'),(10225,'LEONARDO TAPIA GONDIM','11201811775','l.gondim@aluno.ufabc.edu.br'),(10226,'LUCAS ARAUJO AVELINO DOS SANTOS','11201811864','lucas.avelino@aluno.ufabc.edu.br'),(10228,'RODRIGO FAZIOLI GASTALDO','11201810984','r.gastaldo@aluno.ufabc.edu.br'),(10229,'Samara Moreira Soares','11201723067','samara.moreira@aluno.ufabc.edu.br'),(10230,'Samuel Sandes Milani','11061716','samuel.milani@aluno.ufabc.edu.br'),(10231,'STHEFANO SANTANA DE CARVALHO','11201810640','sthefano.carvalho@aluno.ufabc.edu.br'),(10232,'VICTOR AUGUSTO GENEROSO','11201811617','v.generoso@aluno.ufabc.edu.br'),(10233,'VICTOR MARTINS RODRIGUES','11201811838','martins.victor@aluno.ufabc.edu.br'),(10235,'Vitor Mangueira Santana','11201720856','vitor.santana@aluno.ufabc.edu.br'),(10236,'WAGNER LEAL PEREIRA','11201812089','wagner.pereira@aluno.ufabc.edu.br'),(10238,'ARTUR CAMPOS DE PAULA FONTANA','11201811402','artur.fontana@aluno.ufabc.edu.br'),(10239,'CAIO AUGUSTO ROSAS BOTEON','11201810887','caio.boteon@aluno.ufabc.edu.br'),(10240,'ERIC FIGUEIREDO DA SILVA','11201811865','eric.figueiredo@aluno.ufabc.edu.br'),(10241,'FELIPE KENJI KOTANI INOUE','11201811498','felipe.kenji@aluno.ufabc.edu.br'),(10242,'GABRIEL CARDOSO STRADIOTO','11201811484','gabriel.stradioto@aluno.ufabc.edu.br'),(10244,'GUILHERME RODRIGUES','11201811447','rodrigues.guilherme@aluno.ufabc.edu.br'),(10246,'JOAO PEDRO GRASSI ALBERTI','11201811435','joao.alberti@aluno.ufabc.edu.br'),(10247,'JOAO VITOR BRITO GOMES','11201811534','joao.brito@aluno.ufabc.edu.br'),(10248,'JOSE GUILHERME MAGALHAES FREZZATTO','11201811021','jose.frezzatto@aluno.ufabc.edu.br'),(10249,'LIGIA ARROIO HERRERA','11201811526','ligia.herrera@aluno.ufabc.edu.br'),(10250,'LIVIA SILVA MARCHI','11201811879','livia.marchi@aluno.ufabc.edu.br'),(10251,'Lucca Lopes Esteves','11201722233','lucca.esteves@aluno.ufabc.edu.br'),(10252,'Luis Carlos de Oliveira Santos','11087014','oliveira.luis@aluno.ufabc.edu.br'),(10253,'LUIZ FERNANDO DE SOUSA SANTOS','11201811325','fernando.sousa@aluno.ufabc.edu.br'),(10254,'MARCUS VINICIUS DOS SANTOS FERREIRA','11201810882','ferreira.marcus@aluno.ufabc.edu.br'),(10256,'MATEUS FLOSI MOLERO','11201811546','mateus.flosi@aluno.ufabc.edu.br'),(10257,'MATHEUS PEREIRA COELHO','11201810528','matheus.coelho@aluno.ufabc.edu.br'),(10258,'Nathan Antonio de Carvalho','11201811479','n.carvalho@aluno.ufabc.edu.br'),(10259,'Nicolas Jonathan Santos Cerqueira','11201720648','nicolas.cerqueira@aluno.ufabc.edu.br'),(10260,'SABRINA MORALES RODRIGUES','11201810787','sabrina.m@aluno.ufabc.edu.br'),(10261,'THOMAZ PEREIRA RODINI','11201812075','thomaz.rodini@aluno.ufabc.edu.br'),(10262,'TIAGO PERES FONSECA DOS SANTOS','11201811232','tiago.peres@aluno.ufabc.edu.br'),(10263,'UBIRATA EMILIANO FONSECA','11201812211','ubirata.fonseca@aluno.ufabc.edu.br'),(10264,'Vinicius Luiz Rossetti','11045412','vinicius.rossetti@aluno.ufabc.edu.br'),(10265,'VITOR DE ANDRADE CATTO','11201811556','v.catto@aluno.ufabc.edu.br'),(10266,'Vitoria Caetano de Oliveira','21044216','vitoria.caetano@aluno.ufabc.edu.br'),(10267,'ADRIANA VIGARINI DA SILVA','11201811299','adriana.vigarini@aluno.ufabc.edu.br'),(10268,'ALEXANDRE MORAES VELASCO','11201810216','alexandre.moraes@aluno.ufabc.edu.br'),(10269,'ANA RITA KAWAUCHE RODRIGUES DA SILVA','11201810881','ana.kawauche@aluno.ufabc.edu.br'),(10270,'ANDRE LUIZ MENDES DE MENEZES','11201810037','andre.menezes@aluno.ufabc.edu.br'),(10271,'ARTHUR ALEXANDRE MORAES GOMES XAVIER DOS SANTOS','11201811302','alexandre.arthur@aluno.ufabc.edu.br'),(10272,'ARTHUR DE ALMEIDA PENHA','11201810597','almeida.arthur@aluno.ufabc.edu.br'),(10273,'Aryanne Gramacho Acosta','11201722556','aryanne.acosta@aluno.ufabc.edu.br'),(10274,'BEATRIZ DE FARIA','11201810015','b.faria@aluno.ufabc.edu.br'),(10275,'Beatriz Lima Gandolfi','11201720306','b.gandolfi@aluno.ufabc.edu.br'),(10276,'BEATRIZ MODESTO ARAUJO','11201812011','beatriz.modesto@aluno.ufabc.edu.br'),(10277,'BEATRIZ ZUCHETTO','11201812232','b.zuchetto@aluno.ufabc.edu.br'),(10278,'BRUNO ELIAS DIAS DE MELO','11201810809','bruno.melo@aluno.ufabc.edu.br'),(10279,'Bruno Trindade do Nascimento','11201722907','bruno.trindade@aluno.ufabc.edu.br'),(10282,'CAMILA PEREIRA DE ANDRADE','11201810953','andrade.camila@aluno.ufabc.edu.br'),(10283,'CAROLINA GALI BARROSO','11201811527','carolina.gali@aluno.ufabc.edu.br'),(10284,'CATARINA MOVIO SILVA','11201810819','c.movio@aluno.ufabc.edu.br'),(10285,'CECILIA MARIA DA SILVA','11201810968','cecilia.silva@aluno.ufabc.edu.br'),(10286,'CRISTINA CARDOSO VILAS BOAS','11201810339','cristina.cardoso@aluno.ufabc.edu.br'),(10287,'DANIELA FERNANDES DOS ANJOS','11201811518','daniela.fernandes@aluno.ufabc.edu.br'),(10288,'Danilo Silva Gomes','11201720120','danilo.s@aluno.ufabc.edu.br'),(10289,'DAVIS OLIVEIRA SILVA','11201810412','davis.oliveira@aluno.ufabc.edu.br'),(10290,'Diego Pereira Lopes','11201721050','d.lopes@aluno.ufabc.edu.br'),(10291,'DIMAS DE CASTRO FILHO','11201811282','dimas.castro@aluno.ufabc.edu.br'),(10292,'EDUARDO ROCHA GALVAO','11201812092','e.galvao@aluno.ufabc.edu.br'),(10293,'EDUARDO SOUZA SIMEÃO','11201822410','e.simeao@aluno.ufabc.edu.br'),(10294,'Enzo Martins de Oliveira','11201722870','m.enzo@aluno.ufabc.edu.br'),(10295,'Erickson Alves da Silva Souza','21001514','erickson.alves@aluno.ufabc.edu.br'),(10296,'Felipe Rodrigues do Nascimento','11201721333','felipe.nascimento@aluno.ufabc.edu.br'),(10297,'FELIPE SIOLLA','11201810025','felipe.siolla@aluno.ufabc.edu.br'),(10298,'Gabriel de Lima Castilho','11039516','castilho.lima@aluno.ufabc.edu.br'),(10299,'GABRIEL MARINOVIC CASANOVA ADORNO','11201812258','gabriel.marinovic@aluno.ufabc.edu.br'),(10300,'GABRIEL MAROTTA LEMES','11201810724','g.marotta@aluno.ufabc.edu.br'),(10301,'GABRIELA BRAZ','11201810358','gabriela.b@aluno.ufabc.edu.br'),(10302,'Gabriela Lima Silva','11201720186','lima.g@aluno.ufabc.edu.br'),(10303,'Gabriela Oliveira Ferreira','11052116','gabriela.ferreira@aluno.ufabc.edu.br'),(10304,'GABRIELA ZANINI','11201810477','gabriela.zanini@aluno.ufabc.edu.br'),(10305,'GABRIELE CARRARO DE OLIVEIRA','11201810029','gabriele.carraro@aluno.ufabc.edu.br'),(10306,'GABRIELE RIBEIRO GOMES','11201811337','ribeiro.gomes@aluno.ufabc.edu.br'),(10307,'GIOVANNA GADOTTI GOMES','11201810132','giovanna.gadotti@aluno.ufabc.edu.br'),(10308,'GLAUBER EMANUEL DO CARMO SILVA','11201812246','glauber.silva@aluno.ufabc.edu.br'),(10309,'GUILHERME ALARCON COMELLI','11201810875','comelli.guilherme@aluno.ufabc.edu.br'),(10311,'GUSTAVO DA SILVA TEIXEIRA','11201812255','teixeira.gustavo@aluno.ufabc.edu.br'),(10312,'GUSTAVO FREGONEZI DEPIERI','11201810019','d.gustavo@aluno.ufabc.edu.br'),(10313,'Helena Caldelas Duarte Soares','11201810692','helena.caldelas@aluno.ufabc.edu.br'),(10314,'Henrique Castro Ribas de Souza','11201720550','henrique.ribas@aluno.ufabc.edu.br'),(10317,'IGOR SANTOS BORGES DE ALENCAR','11201811861','igor.santos@aluno.ufabc.edu.br'),(10318,'IGOR SPROVIERI PEREIRA','11201812006','igor.pereira@aluno.ufabc.edu.br'),(10319,'IRON SANTOS GOMES','11201810369','iron.gomes@aluno.ufabc.edu.br'),(10320,'ISAAC DE OLIVEIRA ALMEIDA','11201811682','isaac.almeida@aluno.ufabc.edu.br'),(10321,'ISABELLA PEREIRA DE JESUS','11201812041','isabella.pereira@aluno.ufabc.edu.br'),(10322,'ISIS CAROLINE PEREIRA DE OLIVEIRA','11201810726','isis.caroline@aluno.ufabc.edu.br'),(10323,'Ive Fricks Melgaco da Silva','11030312','ive.fricks@aluno.ufabc.edu.br'),(10325,'Jaqueline Sales Zanchetta','11112213','zanchetta.jaqueline@aluno.ufabc.edu.br'),(10326,'JULIA MENSONI','11201811843','julia.mensoni@aluno.ufabc.edu.br'),(10327,'JULIA MOURA DIAMANTINO','11201812218','j.diamantino@aluno.ufabc.edu.br'),(10328,'JULIANA MELO RODRIGUES','11201810206','juliana.melo@aluno.ufabc.edu.br'),(10329,'Katharyne Chinaia','11201721284','katharyne.chinaia@aluno.ufabc.edu.br'),(10330,'LAIS CRISTINA PEREIRA FERNANDES','11201811013','lais.fernandes@aluno.ufabc.edu.br'),(10331,'Laiz Gabriel Chagas','11097713','laiz.chagas@aluno.ufabc.edu.br'),(10332,'LARA ALVES MATOS','11201822463','lara.matos@aluno.ufabc.edu.br'),(10333,'LARA DE OLIVEIRA FERREIRA','11201810669','lara.oliveira@aluno.ufabc.edu.br'),(10334,'LARISSA DA CORTE BUSSONI','11201812176','larissa.bussoni@aluno.ufabc.edu.br'),(10336,'Larissa Leonel da Silva','11201720744','larissa.leonel@aluno.ufabc.edu.br'),(10337,'LEANDRO FERNANDES MIYAZAKI','11201810393','leandro.miyazaki@aluno.ufabc.edu.br'),(10339,'LORRANE DE SOUZA OLIVEIRA','11201812342','lorrane.oliveira@aluno.ufabc.edu.br'),(10340,'Lucas Almeida Barbosa','11201722650','lucas.b@aluno.ufabc.edu.br'),(10342,'LUCAS DIOGENES PIRES','11201810383','lucas.pires@aluno.ufabc.edu.br'),(10343,'LUCAS REIS TEIXEIRA','11201811591','reis.lucas@aluno.ufabc.edu.br'),(10344,'LUIS GUSTAVO GONCALVES DO AMARAL CAMPOS','11201811265','goncalves.luis@aluno.ufabc.edu.br'),(10345,'LUIZ HENRIQUE PEREIRA DE ALMEIDA','11201810256','almeida.luiz@aluno.ufabc.edu.br'),(10346,'MARCELA PENNA FERREIRA NEVES','11201810974','marcela.penna@aluno.ufabc.edu.br'),(10347,'MARCELO JUNIOR MOTA SANTOS','11201810356','mota.marcelo@aluno.ufabc.edu.br'),(10348,'MARCELO PELKA JUNIOR','11201811736','pelka.marcelo@aluno.ufabc.edu.br'),(10349,'MARCO ANTONIO CASQUET JUNIOR','11201812096','marco.casquet@aluno.ufabc.edu.br'),(10350,'Marcos Vinicius Lemes Lopes','11124715','marcos.lemes@aluno.ufabc.edu.br'),(10351,'Maria Fernanda Caiola Feijo Gazolla','11201811747','fernanda.gazolla@aluno.ufabc.edu.br'),(10352,'MARIA GIOVANNA FENUCHI LOYOLA','11201810241','giovanna.fenuchi@aluno.ufabc.edu.br'),(10353,'MARIANA MARTINS ROSSINI','11201812110','mariana.rossini@aluno.ufabc.edu.br'),(10354,'MARIANA MENDONCA OLIVEIRA','11201811424','mariana.mendonca@aluno.ufabc.edu.br'),(10355,'MATHEUS DE LISBOA DUARTE FERREIRA','11201810485','matheus.lisboa@aluno.ufabc.edu.br'),(10356,'Mayara Vitoria Nascimento Placidino','11201721606','mayara.placidino@aluno.ufabc.edu.br'),(10357,'Murilo Henrique Teodoro Macedo','11201722300','murilo.teodoro@aluno.ufabc.edu.br'),(10358,'NATHALIA BANHAROTO DUTRA DA SILVA','11201810865','nathalia.banharoto@aluno.ufabc.edu.br'),(10359,'Nathalia Florencio Peres','11051414','nathalia.peres@aluno.ufabc.edu.br'),(10361,'NATHALIA PACHECO','11201810922','nathalia.pacheco@aluno.ufabc.edu.br'),(10363,'NICOLE TOMETICH PAULINO DE SOUZA','11201811438','nicole.tometich@aluno.ufabc.edu.br'),(10364,'Paloma de Sousa Bezerra','11201720184','paloma.sousa@aluno.ufabc.edu.br'),(10365,'Paula Capelli Belezini','11201723083','paula.belezini@aluno.ufabc.edu.br'),(10366,'PAULO HENRIQUE MOURA ROCHA','11201812219','paulo.moura@aluno.ufabc.edu.br'),(10367,'PAULO HENRIQUE SOUZA NAKAMURA','11201810460','paulo.nakamura@aluno.ufabc.edu.br'),(10368,'Pedro Bertini Godoy da Silva','11037416','pedro.bertini@aluno.ufabc.edu.br'),(10369,'Pedro Candido Pinheiro','11201723028','pedro.c@aluno.ufabc.edu.br'),(10370,'Rafael Henrique Siqueira Silva','11201722095','henrique.rafael@aluno.ufabc.edu.br'),(10371,'RAPHAEL CORREA DO NASCIMENTO','11201811432','r.correa@aluno.ufabc.edu.br'),(10372,'Ravi Soares Chagas','21047815','ravi.soares@aluno.ufabc.edu.br'),(10373,'Samy Stein Dzialoschinsky','11201722868','samy.s@aluno.ufabc.edu.br'),(10374,'SERGIO AUGUSTO DE ARAUJO SILVA','11201812270','sergio.augusto@aluno.ufabc.edu.br'),(10375,'Tainara Benassi Lourenco','11116914','tainara.lourenco@aluno.ufabc.edu.br'),(10376,'TAYNA RIBEIRO MAINETTI','11201812216','tayna.mainetti@aluno.ufabc.edu.br'),(10377,'Thais da Silva Rios','11050216','thais.rios@aluno.ufabc.edu.br'),(10378,'THAIS MARIA GOMES DA SILVA','11201810496','thais.gomes@aluno.ufabc.edu.br'),(10379,'THALES CABULON FERREIRA','11201811759','thales.cabulon@aluno.ufabc.edu.br'),(10380,'THIAGO SILVA DAS MERCES','11201810114','thiago.merces@aluno.ufabc.edu.br'),(10381,'VICTOR PEREIRA DE SOUZA','11201810643','pereira.souza@aluno.ufabc.edu.br'),(10382,'VITOR HUGO RODRIGUES ATHAYDE','11201812374','vitor.athayde@aluno.ufabc.edu.br'),(10383,'VITORIA SILVA SANTOS','11201810293','vitoria.s@aluno.ufabc.edu.br'),(10384,'VITTORIA ARIEL DOS SANTOS BOROTTO','11201811288','vittoria.borotto@aluno.ufabc.edu.br'),(10385,'WESLEY TEIXEIRA DE OLIVEIRA','11201811361','wesley.teixeira@aluno.ufabc.edu.br'),(10386,'WILLIAM DIAS DA SILVA','11201810413','william.dias@aluno.ufabc.edu.br'),(10387,'Adriano Franca do Amaral','21008115','franca.amaral@aluno.ufabc.edu.br'),(10388,'Alessandra dos Santos Oliveira','11201721174','alessandra.oliveira@aluno.ufabc.edu.br'),(10389,'Andrei Soares Biazetto Pessoa','21056914','andrei.biazetto@aluno.ufabc.edu.br'),(10390,'Barbara Zamai Moraes','21088615','b.zamai@aluno.ufabc.edu.br'),(10391,'CAIO POLISZUK NOCELLI','11201810872','caio.nocelli@aluno.ufabc.edu.br'),(10392,'Carolaine Conceicao da Mata','11201721476','c.carolaine@aluno.ufabc.edu.br'),(10393,'Daniel Nascimento Silva','11111515','d.nascimento@aluno.ufabc.edu.br'),(10395,'FABIO FELIPE DE MELO','11201810818','fabio.felipe@aluno.ufabc.edu.br'),(10397,'Felipe Oliveira de Lima','11201721094','oliveira.lima@aluno.ufabc.edu.br'),(10398,'Gabriel Alessi dos Reis de Almeida','11115414','gabriel.alessi@aluno.ufabc.edu.br'),(10399,'Gabriel Henrique Reis dos Santos','11201721692','gabriel.reis@aluno.ufabc.edu.br'),(10400,'GABRIEL SGARBI FERREIRA DOS SANTOS','11201811823','gabriel.sgarbi@aluno.ufabc.edu.br'),(10401,'GABRIELA DE ANDRADE MORENO','11201810737','gabriela.moreno@aluno.ufabc.edu.br'),(10402,'Geovanni Vitor Oliveira Santos','11201720666','geovanni.oliveira@aluno.ufabc.edu.br'),(10403,'GIANLUCA SALONI TOSO','11201812250','gianluca.toso@aluno.ufabc.edu.br'),(10404,'Gloria Elena Ribeiro Alfa Santucci','21006516','gloria.santucci@aluno.ufabc.edu.br'),(10405,'Guilherme Brasiliano Feltrin','11201722587','guilherme.feltrin@aluno.ufabc.edu.br'),(10406,'GUILHERME LIMA SILVA','11201812220','guilherme.l@aluno.ufabc.edu.br'),(10408,'GUILHERME SANTOS JACOB','11201811270','g.jacob@aluno.ufabc.edu.br'),(10409,'Gustavo Silva de Barros','11076416','gustavo.barros@aluno.ufabc.edu.br'),(10410,'IGOR VINICIUS SOARES DIAS','11201811892','dias.igor@aluno.ufabc.edu.br'),(10412,'Jeyza Renata Yamamuti','21017711','jeyza.yamamuti@aluno.ufabc.edu.br'),(10413,'JOAO VITOR OLIVEIRA DOS SANTOS','11201811164','vitor.joao@aluno.ufabc.edu.br'),(10417,'Laiza Saavedra Pereira Rosa','11201722537','laiza.saavedra@aluno.ufabc.edu.br'),(10418,'Larissa Cristine da Silva','11016712','larissa.cristine@aluno.ufabc.edu.br'),(10419,'LAURA SALOMAO OLIVEIRA','11201810623','laura.salomao@aluno.ufabc.edu.br'),(10420,'LETHYCIA DA SILVA DE SOUZA','11201811900','lethycia.souza@aluno.ufabc.edu.br'),(10421,'LETICIA CRISTINA PARAISO DA SILVA','11201812019','leticia.paraiso@aluno.ufabc.edu.br'),(10422,'Lucas Pretelli Nascimento da Silva','11201723079','lucas.pretelli@aluno.ufabc.edu.br'),(10424,'Marcos Mendonca Sodre','11201722438','mendonca.sodre@aluno.ufabc.edu.br'),(10426,'MARIANA VIEIRA SANTOS','11201811863','m.vieira@aluno.ufabc.edu.br'),(10427,'MARINA MARTINS DE AGUIAR','11201810591','marina.martins@aluno.ufabc.edu.br'),(10428,'Matheus de Amorim Diniz','11108216','amorim.diniz@aluno.ufabc.edu.br'),(10429,'MATHEUS MORENO SA','11201812152','m.matheus@aluno.ufabc.edu.br'),(10430,'Mauro Katsumi Santos Matsudo','11201721118','mauro.matsudo@aluno.ufabc.edu.br'),(10431,'NICHOLAS GOBETTI OSHIRO','11201811748','gobetti.oshiro@aluno.ufabc.edu.br'),(10432,'NICHOLAS OTERO JULIANO','11201811052','nicholas.juliano@aluno.ufabc.edu.br'),(10434,'PEDRO CHARMILLOT SILVA','11201811478','pedro.charmillot@aluno.ufabc.edu.br'),(10435,'Renan Viana Diaz','11041911','renan.diaz@aluno.ufabc.edu.br'),(10436,'Ricardo Cesar Hachiro Hongo','11201721315','ricardo.hongo@aluno.ufabc.edu.br'),(10437,'VIVIANY GONCALVES NOBRE NASCIMENTO','11201811693','viviany.nascimento@aluno.ufabc.edu.br'),(10438,'Wellington de Castro dos Santos','11201811241','wellington.castro@aluno.ufabc.edu.br'),(10440,'WINICIUS PONTES RAMOS','11201810196','winicius.pontes@aluno.ufabc.edu.br'),(10441,'FABRICIO HENRIQUE DE SOUZA','11201810639','fabricio.henrique@aluno.ufabc.edu.br'),(10442,'Nathan Kamikata','11078615','nathan.kamikata@aluno.ufabc.edu.br'),(10443,'LUDMILA ANGELIM SILVA','11201811529','ludmila.silva@aluno.ufabc.edu.br'),(10445,'DEBORA RIBEIRO ALVES','11201810935','debora.alves@aluno.ufabc.edu.br'),(10446,'Henrique Mendonca Rodrigues','11201721172','h.rodrigues@aluno.ufabc.edu.br'),(10447,'Camila da Cunha Cetra','11201722134','ccetra@aluno.ufabc.edu.br'),(10448,'GUSTAVO COSTA OLIVEIRA','11201812363','costa.oliveira@aluno.ufabc.edu.br'),(10449,'Fernanda da Silva Alves','11201722749','fernanda.a@aluno.ufabc.edu.br'),(10450,'LEONARDO BESERRA DA SILVA','11201810330','leonardo.beserra@aluno.ufabc.edu.br'),(10453,'Igor Andrade Fernandes','11201722263','i.andrade@aluno.ufabc.edu.br'),(10454,'Alex de Marins Malta','11201722176','alex.malta@aluno.ufabc.edu.br'),(10458,'Viviane Copede','11201722075','viviane.copede@aluno.ufabc.edu.br'),(10461,'Bruna Tavares Kumayama','21080213','bruna.tavares@aluno.ufabc.edu.br'),(10463,'ISABELLA SANTOS RODRIGUES PAULINO','11201810420','isabella.paulino@aluno.ufabc.edu.br'),(10464,'Katiele Renata Alves Santana','21049615','katiele.santana@aluno.ufabc.edu.br'),(10465,'LUIS GUILHERME LOPES SANTANA','11201811413','luis.guilherme@aluno.ufabc.edu.br'),(10466,'Pedro Marques Chicharo','11201721834','pedro.chicharo@aluno.ufabc.edu.br'),(10468,'FABRICIO HENRIQUE DE SOUZA','11201810639','fabricio.henrique@aluno.ufabc.edu.br'),(10469,'Nathan Kamikata','11078615','nathan.kamikata@aluno.ufabc.edu.br'),(10470,'LUDMILA ANGELIM SILVA','11201811529','ludmila.silva@aluno.ufabc.edu.br'),(10472,'DEBORA RIBEIRO ALVES','11201810935','debora.alves@aluno.ufabc.edu.br'),(10473,'Henrique Mendonca Rodrigues','11201721172','h.rodrigues@aluno.ufabc.edu.br'),(10474,'Camila da Cunha Cetra','11201722134','ccetra@aluno.ufabc.edu.br'),(10475,'GUSTAVO COSTA OLIVEIRA','11201812363','costa.oliveira@aluno.ufabc.edu.br'),(10476,'Fernanda da Silva Alves','11201722749','fernanda.a@aluno.ufabc.edu.br'),(10477,'LEONARDO BESERRA DA SILVA','11201810330','leonardo.beserra@aluno.ufabc.edu.br'),(10480,'Igor Andrade Fernandes','11201722263','i.andrade@aluno.ufabc.edu.br'),(10481,'Alex de Marins Malta','11201722176','alex.malta@aluno.ufabc.edu.br'),(10485,'Viviane Copede','11201722075','viviane.copede@aluno.ufabc.edu.br'),(10488,'Bruna Tavares Kumayama','21080213','bruna.tavares@aluno.ufabc.edu.br'),(10490,'ISABELLA SANTOS RODRIGUES PAULINO','11201810420','isabella.paulino@aluno.ufabc.edu.br'),(10491,'Katiele Renata Alves Santana','21049615','katiele.santana@aluno.ufabc.edu.br'),(10492,'LUIS GUILHERME LOPES SANTANA','11201811413','luis.guilherme@aluno.ufabc.edu.br'),(10493,'Pedro Marques Chicharo','11201721834','pedro.chicharo@aluno.ufabc.edu.br'),(10809,'AMANDA CRISTINA OGOSHI DE MELO','11201811145','amanda.ogoshi@aluno.ufabc.edu.br'),(10810,'ANDRÉ CONTE CAMPOS','11201822390','andre.campos@aluno.ufabc.edu.br'),(10811,'Augusto Chiconello Tavares','11201722624','t.augusto@aluno.ufabc.edu.br'),(10812,'BRUNO ISSAMU UJIIE','11201810306','bruno.ujiie@aluno.ufabc.edu.br'),(10813,'DIEGO MOREIRA LIMA','11201822418','diego.moreira@aluno.ufabc.edu.br'),(10814,'EDUARDO RIBEIRO DE OLIVEIRA','11201810478','ribeiro.oliveira@aluno.ufabc.edu.br'),(10815,'Everton Bilharvas de Britto','11201722699','e.britto@aluno.ufabc.edu.br'),(10816,'FILIPE FIALHO DE ARAUJO BARBOSA','11201822391','barbosa.filipe@aluno.ufabc.edu.br'),(10817,'GABRIEL DE PAULA CALIXTO DE SOUZA','11201812165','gabriel.calixto@aluno.ufabc.edu.br'),(10818,'GABRIEL GONCALVES LEAL','11201811737','leal.gabriel@aluno.ufabc.edu.br'),(10819,'GUILHERME DE PAULA VITORINO','11201822539','g.vitorino@aluno.ufabc.edu.br'),(10820,'GUSTAVO RYOKAZU ONAGA','11201811645','gustavo.onaga@aluno.ufabc.edu.br'),(10821,'Henrique Carnaes de Ilho','11053116','h.carnaes@aluno.ufabc.edu.br'),(10822,'JEFFERSON DA SILVA PEREIRA','11201811332','jefferson.silva@aluno.ufabc.edu.br'),(10823,'Leiliane Kalline Silva Santos','11201722089','leiliane.kalline@aluno.ufabc.edu.br'),(10825,'LUCAS SOUSA DA SILVA','11201822554','sousa.lucas@aluno.ufabc.edu.br'),(10826,'MARCIO EHLERT GONSALES','11201812116','marcio.gonsales@aluno.ufabc.edu.br'),(10827,'MATEUS RODRIGUES SUAREZ BENEDITO','11201822525','mateus.benedito@aluno.ufabc.edu.br'),(10828,'MAYCON VALDEMIRO ALVES','11201811987','maycon.alves@aluno.ufabc.edu.br'),(10829,'NATHALLY SANTOS CALBELLO','11201811850','nathally.calbello@aluno.ufabc.edu.br'),(10830,'Paulo Alexandre Pizara Hayashida','11201722652','paulo.hayashida@aluno.ufabc.edu.br'),(10831,'PEDRO HENRIQUE DE SOUZA E CASTRO','11201811876','pedro.castro@aluno.ufabc.edu.br'),(10832,'RAFAEL HENRIQUE DONINI','11201811365','rafael.donini@aluno.ufabc.edu.br'),(10833,'Victor Alves de Lima','11201721140','v.alves@aluno.ufabc.edu.br'),(10834,'VICTOR SOUZA PEREIRA DOS SANTOS','11201811600','souza.pereira@aluno.ufabc.edu.br'),(10835,'VINICIUS CABALIN FERREIRA','11201811836','vinicius.cabalin@aluno.ufabc.edu.br'),(10836,'Vitor dos Santos de Souza','11201721044','v.santos@aluno.ufabc.edu.br'),(10837,'Wesley Santos da Silva','11201722489','wsantos@aluno.ufabc.edu.br'),(10838,'Yago Di Stasi Pinheiro Souza','11201721253','yago.stasi@aluno.ufabc.edu.br'),(10840,'Andressa Goncalves Santos de Jesus','11201722165','andressa.goncalves@aluno.ufabc.edu.br'),(10841,'Barbara Campos Ferreira','11108416','barbara.campos@aluno.ufabc.edu.br'),(10842,'BRUNO HENRIQUE ALVES DE OLIVEIRA','11201811887','alves.bruno@aluno.ufabc.edu.br'),(10843,'FELIPE MATHEUS RIGUEIRA','11201811350','felipe.rigueira@aluno.ufabc.edu.br'),(10845,'Gabriela Lagreca','11201723025','g.lagreca@aluno.ufabc.edu.br'),(10846,'GIULIA TARDIVO SOUSA','11201811345','g.tardivo@aluno.ufabc.edu.br'),(10847,'GUILHERME LIMA','11201810311','lima.guilherme@aluno.ufabc.edu.br'),(10848,'GUILHERMO DOS SANTOS MARTINS','11201812283','guilhermo.martins@aluno.ufabc.edu.br'),(10849,'GUSTAVO SANTIAGO LOPES','11201811054','gustavo.santiago@aluno.ufabc.edu.br'),(10850,'INGRID PAULA PEREIRA DE SOUZA','11201822423','ingrid.paula@aluno.ufabc.edu.br'),(10852,'Jennifer Costa Leoncio','21091915','jennifer.leoncio@aluno.ufabc.edu.br'),(10853,'JOAO VITOR GUIMARAES PAIXAO','11201811967','joao.guimaraes@aluno.ufabc.edu.br'),(10854,'LARISSA NELIEILE DA COSTA BATISTA','11201811755','larissa.costa@aluno.ufabc.edu.br'),(10855,'LORENA MATARUCO CARRENHO','11201812354','lorena.mataruco@aluno.ufabc.edu.br'),(10856,'LUCAS ALVARES DE QUEIROZ','11201811354','lucas.alvares@aluno.ufabc.edu.br'),(10857,'Lucas Bosquesi','11201722992','lucas.bosquesi@aluno.ufabc.edu.br'),(10858,'Lucas dos Santos Juvencio','11201722716','lucas.juvencio@aluno.ufabc.edu.br'),(10859,'Lucas Kaoru Miyano','11201722402','lucas.kaoru@aluno.ufabc.edu.br'),(10860,'Lucas Martins Azevedo Neves','11201722445','martins.neves@aluno.ufabc.edu.br'),(10861,'MARIA ELIZABETH COSTA SIQUEIRA','11201811524','elizabeth.siqueira@aluno.ufabc.edu.br'),(10862,'MURILO CAIXETA GONÇALVES','11201822536','murilo.caixeta@aluno.ufabc.edu.br'),(10863,'NATAN PARMIGIANO DOS REIS','11201811440','natan.reis@aluno.ufabc.edu.br'),(10864,'Paulo de Queiroz Markoski','11118115','paulo.markoski@aluno.ufabc.edu.br'),(10865,'SOPHIA DOS SANTOS PIMENTEL','11201811965','sophia.p@aluno.ufabc.edu.br'),(10866,'TAYNA LOPES RODRIGUES DOS SANTOS','11201811776','tayna.rodrigues@aluno.ufabc.edu.br'),(10867,'Thiago Nunes Herrera','11201723084','thiago.herrera@aluno.ufabc.edu.br'),(10868,'Victor Silva Nascimento','21080616','victor.n@aluno.ufabc.edu.br'),(10869,'ALEXANDRE MANTOVANI DAVANZO','11201812264','alexandre.mantovani@aluno.ufabc.edu.br'),(10870,'ANDRE BARSAGLINI DA COSTA','11201811226','andre.barsaglini@aluno.ufabc.edu.br'),(10871,'CAUE DE ALMEIDA SOUZA VIEIRA','11201810645','caue.almeida@aluno.ufabc.edu.br'),(10872,'Daniel Blanco Triana da Silva','11201721719','blanco.triana@aluno.ufabc.edu.br'),(10873,'DANIEL FUSCELLA','11201811992','daniel.fuscella@aluno.ufabc.edu.br'),(10875,'Fabio Adauto Dominciano','11201812121','fabio.dominciano@aluno.ufabc.edu.br'),(10878,'GABRIEL JONATAS ALMADA DA SILVA','11201810556','gabriel.jonatas@aluno.ufabc.edu.br'),(10879,'Gabriela Canuto de Paula','11201721397','gabriela.canuto@aluno.ufabc.edu.br'),(10881,'IGOR SANTANA DE MORAIS','11201810593','igor.m@aluno.ufabc.edu.br'),(10882,'Isael Teres de Souza Lima','11106716','isael.teres@aluno.ufabc.edu.br'),(10883,'Jefferson Fernandes de Almeida','11201721745','jefferson.almeida@aluno.ufabc.edu.br'),(10884,'JOAO VICTOR CHINARELLI CERQUEIRA','11201812240','joao.cerqueira@aluno.ufabc.edu.br'),(10885,'Jonas Zuin Putini','11201722203','jonas.putini@aluno.ufabc.edu.br'),(10886,'LEONARDO DIAS KORCZEL','11201822399','d.korczel@aluno.ufabc.edu.br'),(10888,'Matheus Henrique de Medeiros Telles','11201722728','mmatheus@aluno.ufabc.edu.br'),(10890,'Rafael Cavalcante Torres','11201722175','rafael.torres@aluno.ufabc.edu.br'),(10891,'RENAN OLIVEIRA DA SILVA','11201810188','silva.renan@aluno.ufabc.edu.br'),(10892,'Ricardo Takeo Miagusuku','11072616','ricardo.takeo@aluno.ufabc.edu.br'),(10893,'Silas Roberto de Oliveira Silva','11201722208','silas.oliveira@aluno.ufabc.edu.br'),(10894,'THALES BURGUI BARBOSA REIS','11201810426','thales.burgui@aluno.ufabc.edu.br'),(10895,'TIAGO ALVES PEREIRA','11201811051','tiago.a@aluno.ufabc.edu.br'),(10896,'Vinicius Tadeu Azevedo de Queiroz','11201721875','azevedo.queiroz@aluno.ufabc.edu.br'),(10897,'William Macedo Cupertino','11105015','william.macedo@aluno.ufabc.edu.br'),(10898,'WILLIANS ALVES DE FREITAS','11201810837','willians.f@aluno.ufabc.edu.br'),(10899,'ALESSANDRA SABINO PEREIRA','11201811418','pereira.a@aluno.ufabc.edu.br'),(10900,'Alexander de Castro Kalinin','11201721493','kalinin.alexander@aluno.ufabc.edu.br'),(10901,'Andressa Leonilia da Silva Gomes','11201721214','andressa.leonilia@aluno.ufabc.edu.br'),(10902,'ARTHUR GOMES DOS SANTOS','11201810951','santos.gomes@aluno.ufabc.edu.br'),(10903,'Artur Valentim Mourao','11068415','artur.valentim@aluno.ufabc.edu.br'),(10904,'BEATRIZ MATURANO RIBEIRO','11201811452','beatriz.maturano@aluno.ufabc.edu.br'),(10905,'BRUNO DE CARVALHO FREDERICO','11201810067','bruno.frederico@aluno.ufabc.edu.br'),(10906,'CAUHE GRANITO DE ANDRADE','11201812286','cauhe.andrade@aluno.ufabc.edu.br'),(10908,'EDMILSON ROBERTO SOBREIRA','11201810846','edmilson.sobreira@aluno.ufabc.edu.br'),(10909,'ERIK SILVA LOPES DE LIMA','11201810211','erik.lopes@aluno.ufabc.edu.br'),(10910,'FELIPE RIBEIRO ARAUJO','11201811134','felipe.araujo@aluno.ufabc.edu.br'),(10911,'FERNANDO GABRIEL CHACON FERNANDES TERUEL DO PRADO','11201811700','gabriel.chacon@aluno.ufabc.edu.br'),(10912,'FERNANDO MOLERO','11201810973','f.molero@aluno.ufabc.edu.br'),(10913,'GABRIEL CINTRA SILVA DE OLIVEIRA','11201811155','gabriel.cintra@aluno.ufabc.edu.br'),(10914,'Gabriel Leir Gandra','11201721795','gabriel.leir@aluno.ufabc.edu.br'),(10915,'GABRIEL ROCHA LIMA','11201811769','gabriel.lima@aluno.ufabc.edu.br'),(10916,'GABRIEL SANTIAGO MISSALI GONCALVES DA SILVA','11201811754','santiago.gabriel@aluno.ufabc.edu.br'),(10918,'GABRIELA DIAS CHUQUI','11201811080','g.chuqui@aluno.ufabc.edu.br'),(10919,'GIOVANNA SOUSA ANDRADE','11201811904','giovanna.andrade@aluno.ufabc.edu.br'),(10920,'GUILHERME CARVALHO BAPTISTA','11201812315','g.baptista@aluno.ufabc.edu.br'),(10921,'HENRIQUE MARQUES FERREIRA','11201811584','henrique.f@aluno.ufabc.edu.br'),(10922,'HENRIQUE RICCI MARTINS','11201811562','henrique.ricci@aluno.ufabc.edu.br'),(10923,'HICHARD WENDELL DOS SANTOS SILVEIRA','11201810979','hichard.wendell@aluno.ufabc.edu.br'),(10924,'JOAO VICTOR RIBEIRO MARTINS VIEIRA','11201810775','vieira.joao@aluno.ufabc.edu.br'),(10925,'JOHNNY COUTO KHALIL','11201811905','johnny.khalil@aluno.ufabc.edu.br'),(10926,'JULIANA SANCHES MARQUES','11201811902','j.sanches@aluno.ufabc.edu.br'),(10928,'LAURO VICTOR MACEDO RODRIGUES','11201810489','lauro.victor@aluno.ufabc.edu.br'),(10929,'LUCAS KIKKAWA PERPETUA','11201810415','lucas.kikkawa@aluno.ufabc.edu.br'),(10930,'MATEUS MARINHO BEZERRA','11201810516','mateus.marinho@aluno.ufabc.edu.br'),(10931,'MICHAEL FRANKLIN SAITO DA SILVA','11201810988','michael.saito@aluno.ufabc.edu.br'),(10932,'PEDRO HENRIQUE SIQUEIRA SAMPAIO','11201812208','pedro.sampaio@aluno.ufabc.edu.br'),(10933,'RAFAEL MOREIRA SILVA','11201810453','moreira.rafael@aluno.ufabc.edu.br'),(10934,'RENAN BARBOSA BRAGA DOS SANTOS','11201810676','barbosa.renan@aluno.ufabc.edu.br'),(10935,'RODRIGO PALADINI LAZARINI','11201811898','rodrigo.paladini@aluno.ufabc.edu.br'),(10936,'RUI MENEZE PINHEIRO','11201811978','rui.p@aluno.ufabc.edu.br'),(10937,'SAYURI YAMAURA','11201811785','sayuri.y@aluno.ufabc.edu.br'),(10938,'Sergio Fonseca Castro','11201722140','sergio.fonseca@aluno.ufabc.edu.br'),(10939,'VICTOR DE ANDRADE MATTOS','11201810450','victor.mattos@aluno.ufabc.edu.br'),(10940,'Alan Salomao Ribas','11201722444','salomao.alan@aluno.ufabc.edu.br'),(10941,'ALAN VINICIUS BEZERRA DE SOUSA','11201811563','alan.sousa@aluno.ufabc.edu.br'),(10942,'ANA PAULA SOUSA DOS SANTOS','11201810733','sousa.ana@aluno.ufabc.edu.br'),(10943,'CAMILA CARVALHO DA SILVA','11201810403','camila.carvalho@aluno.ufabc.edu.br'),(10944,'Fernanda Bergami de Oliveira','11201721218','bergami.fernanda@aluno.ufabc.edu.br'),(10945,'GABRIEL SABATINO COSTA MERLONETTI','11201810382','gabriel.merlonetti@aluno.ufabc.edu.br'),(10947,'GIOVANI VERGINELLI HAKA','11201810699','giovani.haka@aluno.ufabc.edu.br'),(10948,'GIOVANNA POLISSICI','11201811396','giovanna.polissici@aluno.ufabc.edu.br'),(10949,'GIOVANNI VIRIATO CRITELLI','11201810617','viriato.critelli@aluno.ufabc.edu.br'),(10950,'HELENA DE ALCANTARA GOMES DE SOUZA','11201812345','helena.alcantara@aluno.ufabc.edu.br'),(10951,'JACKELINE RIBEIRO DA SILVA','11201811003','jackeline.silva@aluno.ufabc.edu.br'),(10952,'JOAO CARLOS RIBEIRO DIAS','11201811554','carlos.joao@aluno.ufabc.edu.br'),(10953,'JOAO VICTOR FONSECA DE ANDRADE','11201811643','andrade.joao@aluno.ufabc.edu.br'),(10954,'JOSE VICTOR HOMSI','11201810250','jose.homsi@aluno.ufabc.edu.br'),(10955,'JULIANO BENATTI FABRIS','11201810404','benatti.juliano@aluno.ufabc.edu.br'),(10956,'KETLYN CRISTINA DO NASCIMENTO ALVES','11201811487','ketlyn.cristina@aluno.ufabc.edu.br'),(10957,'LEANDRO NOGUEIRA LUCIO','11201810322','leandro.n@aluno.ufabc.edu.br'),(10958,'LUCAS KAMIDE SARAIVA DE CAMARGO','11201811588','lucas.kamide@aluno.ufabc.edu.br'),(10959,'LUIS EDUARDO LEONI GISOLDI','11201810862','eduardo.gisoldi@aluno.ufabc.edu.br'),(10960,'Marcelo Miguel Ferreira','21008413','f.marcelo@aluno.ufabc.edu.br'),(10961,'MARCELO TRANCHE DE SOUZA JUNIOR','11201810416','marcelo.tranche@aluno.ufabc.edu.br'),(10962,'MATHEUS ANTONIO RIBEIRO DA SILVA','11201810221','matheus.antonio@aluno.ufabc.edu.br'),(10963,'MATHEUS DE ALMEIDA SOARES','11201812070','matheus.a@aluno.ufabc.edu.br'),(10964,'Milena Campos Pedrao da Silva','11201722312','milena.campos@aluno.ufabc.edu.br'),(10965,'Nicole Aparecida Andrade de Souza','11201722100','souza.nicole@aluno.ufabc.edu.br'),(10966,'OSCAR MARTINS MORAES JUNIOR','11201810108','oscar.moraes@aluno.ufabc.edu.br'),(10967,'SYLVIA GOMIDE GUALBERTO DA SILVA','11201811093','sylvia.gomide@aluno.ufabc.edu.br'),(10968,'Vinicius Rodrigues da Silva','11201723019','r.vinicius@aluno.ufabc.edu.br'),(10969,'WILLIAM KENJI MISAKI','11201812262','william.misaki@aluno.ufabc.edu.br'),(10970,'ALFIO ALVES DA SILVA JUNIOR','11201810333','alfio.junior@aluno.ufabc.edu.br'),(10971,'ALICE MARQUES VIEIRA','11201810600','alice.marques@aluno.ufabc.edu.br'),(10972,'ANGELO ORLETTI DEL REY','11201810095','angelo.rey@aluno.ufabc.edu.br'),(10973,'ANNA MARIA FONSECA SOUSA','11201811468','anna.sousa@aluno.ufabc.edu.br'),(10975,'CAMILA COIMBRA GOMES SANTOS','11201811380','coimbra.camila@aluno.ufabc.edu.br'),(10976,'CINTIA MARTINS PRIETO','11201810195','cintia.prieto@aluno.ufabc.edu.br'),(10977,'DENISE ESTEVAM YEOU YIH','11201810612','denise.yih@aluno.ufabc.edu.br'),(10978,'EDUARDO GOMES','11201811471','e.gomes@aluno.ufabc.edu.br'),(10979,'FELIPE MARAVALLI ADORNE','11201810292','felipe.maravalli@aluno.ufabc.edu.br'),(10980,'FERNANDA SCAQUETTI','11201810419','fernanda.scaquetti@aluno.ufabc.edu.br'),(10981,'GABRIEL BORGES REGO MINARI','11201810784','gabriel.minari@aluno.ufabc.edu.br'),(10982,'GABRIEL GUSTAVO ALMEIDA DE ARAUJO','11201811511','gabriel.gustavo@aluno.ufabc.edu.br'),(10983,'GIULIA FERREIRA CHAGAS','11201810820','g.chagas@aluno.ufabc.edu.br'),(10984,'GUILHERME AFONSO GIGECK','11201810009','guilherme.gigeck@aluno.ufabc.edu.br'),(10985,'GUILHERME MELO DA SILVA','11201810856','melo.guilherme@aluno.ufabc.edu.br'),(10987,'GUSTAVO DA SILVA SANTOS','11201810605','santos.gustavo@aluno.ufabc.edu.br'),(10988,'HENRIQUE HIDEKY OSIRO','11201810752','henrique.osiro@aluno.ufabc.edu.br'),(10989,'HENRIQUE PIMENTA PACHECO','11201810259','henrique.pimenta@aluno.ufabc.edu.br'),(10990,'ISADORA DOS SANTOS DAMAS','11201810657','d.isadora@aluno.ufabc.edu.br'),(10991,'Jean Victor Veras','13201910039','jean.v@aluno.ufabc.edu.br'),(10992,'KELLY TELES OGAWA','11201811085','kelly.ogawa@aluno.ufabc.edu.br'),(10993,'KEVIN BARBOSA SIQUEIRA','11201811883','kevin.siqueira@aluno.ufabc.edu.br'),(10994,'LUCAS CREMASCO DE OLIVEIRA','11201810687','lucas.cremasco@aluno.ufabc.edu.br'),(10995,'LUIZA VERGARA LIMA LITRENTA DE OLIVEIRA','11201811405','luiza.vergara@aluno.ufabc.edu.br'),(10996,'MAISA INFANTE','11201810542','maisa.infante@aluno.ufabc.edu.br'),(10997,'Marcio Hideki Hoshino Junior','11201723080','marcio.hoshino@aluno.ufabc.edu.br'),(10998,'MARIA JULIANA GUTIERREZ CAMPEROS','11201811460','gutierrez.juliana@aluno.ufabc.edu.br'),(10999,'MARIANA CESARIO','11201810780','m.cesario@aluno.ufabc.edu.br'),(11000,'Nathália Fransciely Branquinho Pereira','21088016','nathalia.branquinho@aluno.ufabc.edu.br'),(11001,'NICOLY KAMILE GIANEZI DA CUNHA','11201811578','nicoly.gianezi@aluno.ufabc.edu.br'),(11002,'NOR MUSTAFA MOHAMAD','11201810170','nor.mustafa@aluno.ufabc.edu.br'),(11003,'PEDRO PAULO OLIVEIRA BARROS','11201810085','oliveira.barros@aluno.ufabc.edu.br'),(11004,'RAFAELA FACIOLI SLAVIC','11201812378','rafaela.slavic@aluno.ufabc.edu.br'),(11005,'SOPHIA DE LISIEUX ZOCOLER','11201810832','sophia.zocoler@aluno.ufabc.edu.br'),(11006,'STEPHANY LANY CLEMENTE LEITE','11201811099','stephany.lany@aluno.ufabc.edu.br'),(11007,'THIAGO ARAUJO MACEDO DE OLIVEIRA','11201811078','araujo.thiago@aluno.ufabc.edu.br'),(11008,'VINICIUS DE SOUZA GONCALVES','11201811627','goncalves.vinicius@aluno.ufabc.edu.br'),(11009,'VITORIA GABRIELLE REIS DE OLIVEIRA','11201810402','vitoria.gabrielle@aluno.ufabc.edu.br'),(11010,'YASMIN DOS ANJOS DE DEUS CARDOSO','11201810113','yasmin.anjos@aluno.ufabc.edu.br'),(11011,'YASMIN LIMA MALHEIRO','11201810552','y.lima@aluno.ufabc.edu.br'),(11012,'CAUE ARAUJO DE ANDRADE','11201811633','caue.araujo@aluno.ufabc.edu.br'),(11013,'DANIEL GODINHO DA CRUZ DE ALMEIDA','11201812382','daniel.godinho@aluno.ufabc.edu.br'),(11014,'Daniel Gonzales Rodrigues','11060313','daniel.rodrigues@ufabc.edu.br'),(11016,'EDSON MENEZES DOS SANTOS JUNIOR','11201811194','edson.menezes@aluno.ufabc.edu.br'),(11017,'FELIPE DOS SANTOS SCHWARZ','11201812018','f.schwarz@aluno.ufabc.edu.br'),(11018,'GABRIEL ABDIAS DA SILVA','11201811866','gabriel.abdias@aluno.ufabc.edu.br'),(11020,'GABRIEL MARTINS GOMES','11201810446','g.martins@aluno.ufabc.edu.br'),(11022,'Guilherme Manganelli da Cunha','11033414','g.manganelli@aluno.ufabc.edu.br'),(11023,'GUSTAVO DA SILVA OLIVEIRA','11201811658','oliveira.silva@aluno.ufabc.edu.br'),(11024,'IGOR YUDI OSHIRO','11201810490','igor.oshiro@aluno.ufabc.edu.br'),(11025,'JOAO VICTOR OLIVEIRA CORREIA DE BRITO','11201810847','brito.joao@aluno.ufabc.edu.br'),(11026,'JONATHAS BRUNO DA SILVA','11201810300','jonathas.silva@aluno.ufabc.edu.br'),(11027,'JOSE VINICIUS DA SILVA ARAUJO','11201811070','araujo.jose@aluno.ufabc.edu.br'),(11028,'KARINE DA SILVA SOBRINHO','11201812367','karine.sobrinho@aluno.ufabc.edu.br'),(11029,'LUCAS MATIAS SALES','11201810696','lucas.sales@aluno.ufabc.edu.br'),(11030,'LUCAS SILVA BIFFARATE','11201810510','lucas.biffarate@aluno.ufabc.edu.br'),(11031,'MARIA VITORIA BARROS DE ARAUJO','11201812365','maria.barros@aluno.ufabc.edu.br'),(11032,'MATHEUS SANAIOTTE CARVALHO','11201810224','sanaiotte.matheus@aluno.ufabc.edu.br'),(11033,'Pedro Paulo Miranda Giollo','11201723077','giollo.pedro@aluno.ufabc.edu.br'),(11034,'RAPHAEL COELHO DAMARIO','11201811113','raphael.c@aluno.ufabc.edu.br'),(11035,'Rita Caroline Florencio da Silva','11061913','rita.florencio@aluno.ufabc.edu.br'),(11036,'RODOLFO DA SILVA CAMPOS','11201810941','rodolfo.campos@aluno.ufabc.edu.br'),(11038,'THAINA NASCIMENTO FERREIRA','11201810550','thaina.f@aluno.ufabc.edu.br'),(11039,'THOMAZ FERREIRA NEVES DOS SANTOS','11201812259','thomaz.ferreira@aluno.ufabc.edu.br'),(11040,'VICTOR GABRIEL FERREIRA DOS SANTOS','11201811459','gabriel.victor@aluno.ufabc.edu.br'),(11041,'VITOR BOBIG DIRICIO','11201811376','vitor.diricio@aluno.ufabc.edu.br'),(11042,'ALESSANDRA DA SILVA FANECO','11201811981','a.faneco@aluno.ufabc.edu.br'),(11044,'ALEXANDRE FRANCISQUINI LINHARES ANTONINI','11201810897','alexandre.antonini@aluno.ufabc.edu.br'),(11045,'Andre Luiz Oliveira Bascchera','11201722832','andre.bascchera@aluno.ufabc.edu.br'),(11046,'BRUNA DA SILVA FRANCA','11201811419','bruna.franca@aluno.ufabc.edu.br'),(11048,'Bruno Torre do Vale','11201720706','bruno.torre@aluno.ufabc.edu.br'),(11050,'EDUARDO JORGE NERI','11201810937','e.neri@aluno.ufabc.edu.br'),(11051,'EMERSON DE JESUS GRACIANO','11201822535','emerson.graciano@aluno.ufabc.edu.br'),(11052,'Ewerton Santos Silva','21086816','ewerton.s@aluno.ufabc.edu.br'),(11053,'GEAN JUNIO FERREIRA DE ARAUJO','11201812099','gean.araujo@aluno.ufabc.edu.br'),(11054,'Geovane Barbosa Santos','21031611','gsantos@aluno.ufabc.edu.br'),(11055,'Giovanni Carvalho Alberto','11201720182','giovanni.c@aluno.ufabc.edu.br'),(11056,'GIOVANNY DA SILVA SANTANA','11201810111','giovanny.s@aluno.ufabc.edu.br'),(11057,'GUSTAVO YUDI ROMAO DE OLIVEIRA','11201811684','gustavo.yudi@aluno.ufabc.edu.br'),(11058,'Isabelle Zacara Vieira da Silva','11201720116','isabelle.zacara@aluno.ufabc.edu.br'),(11059,'JOAO RICARDO FERREIRA DE OLIVEIRA','11201812046','joao.ricardo@aluno.ufabc.edu.br'),(11061,'KAUAN GUERIM ALVES VENTURINI','11201811583','kauan.venturini@aluno.ufabc.edu.br'),(11062,'LEONARDO NITTA DE DEUS','11201822527','leonardo.nitta@aluno.ufabc.edu.br'),(11063,'Leonardo Peralta Belvis','11201722510','belvis.leonardo@aluno.ufabc.edu.br'),(11064,'Lua Henrique Caetano Pereira','11201720900','lua.henrique@aluno.ufabc.edu.br'),(11065,'Lucas Alves Souza da Silva','11201722457','alves.silva@aluno.ufabc.edu.br'),(11066,'Lucas Tatsuta de Almeida Rosa','21015315','lucas.tatsuta@aluno.ufabc.edu.br'),(11067,'MAYARA MENDES DE CARVALHO','11201810929','mayara.carvalho@aluno.ufabc.edu.br'),(11068,'NICOLAS DA COSTA VIDAL','11201811472','n.vidal@aluno.ufabc.edu.br'),(11069,'PAULO RICARDO PEREIRA LEITE','11201810020','leite.paulo@aluno.ufabc.edu.br'),(11070,'Pedro Maziero Gomes','11201721762','pedro.maziero@aluno.ufabc.edu.br'),(11071,'Raiane Pereira dos Santos','11201720284','raiane.santos@aluno.ufabc.edu.br'),(11072,'RAMON GRACIO MARTINS','11201812003','gracio.martins@aluno.ufabc.edu.br'),(11073,'Raquel de Freitas Santana','11037216','raquel.freitas@aluno.ufabc.edu.br'),(11074,'ROGER GUIVARA SANTANA','11201810788','roger.santana@aluno.ufabc.edu.br'),(11075,'STEFAN JOCHEN BAUMGARTEN','11201811661','stefan.baumgarten@aluno.ufabc.edu.br'),(11076,'Tais Freitas Caldeiras','11088313','tais.freitas@aluno.ufabc.edu.br'),(11077,'Tamires Ribeiro de Sa','11201721503','tamires.sa@aluno.ufabc.edu.br'),(11078,'Victor Granero Bergamini','11201720294','v.granero@aluno.ufabc.edu.br'),(11079,'VINICIUS NETO DAS NEVES','11201811730','vinicius.neto@aluno.ufabc.edu.br'),(11080,'WALLACE BRITO LIMA','11201810253','w.brito@aluno.ufabc.edu.br'),(11081,'AILTON LEITE MANOEL SANTANA JUNIOR','11201811049','ailton.leite@aluno.ufabc.edu.br'),(11082,'ALECSANDRO ALVES IOPE','11201810999','alves.iope@aluno.ufabc.edu.br'),(11083,'Felipe Siqueira Roxa','11201722344','felipe.roxa@aluno.ufabc.edu.br'),(11084,'GIOVANNA VELANI CORREA','11201810320','g.velani@aluno.ufabc.edu.br'),(11085,'Israel Ramos Santos','11075114','israel.r@aluno.ufabc.edu.br'),(11086,'ITIEL SILVA MACEDO','11201811123','itiel.macedo@aluno.ufabc.edu.br'),(11087,'Juliana Zanolli Colussi','11201723104','juliana.colussi@aluno.ufabc.edu.br'),(11088,'Ketheleen dos Santos Antunes','11201722131','santos.ketheleen@aluno.ufabc.edu.br'),(11089,'LUCAS ROGERIO DE ANDRADE LIMA','11201810971','lucas.rogerio@aluno.ufabc.edu.br'),(11090,'LUCAS VINICIOS CAETANO DA SILVA','11201811599','caetano.lucas@aluno.ufabc.edu.br'),(11091,'MATHEUS TEIXEIRA MOTA FREITAS DE AVO','11201810436','matheus.avo@aluno.ufabc.edu.br'),(11092,'MURILO SARTORI GALHARDI','11201812213','m.galhardi@aluno.ufabc.edu.br'),(11093,'NICOLAS DO CARMO FERREIRA','11201810062','nicolas.carmo@aluno.ufabc.edu.br'),(11094,'NICOLE FERNANDA MARQUES CANTOIA','11201811692','nicole.cantoia@aluno.ufabc.edu.br'),(11095,'PABLO AUGUSTO TANFERE MACHADO DE LIMA','11201811192','pablo.lima@aluno.ufabc.edu.br'),(11096,'PAULA CALAREZO ALVES','11201811552','paula.calarezo@aluno.ufabc.edu.br'),(11097,'Paulo Roberto dos Santos','11201722785','paulo.r@aluno.ufabc.edu.br'),(11098,'PEDRO GOULART DE ABREU BRAGA','11201810641','goulart.abreu@aluno.ufabc.edu.br'),(11099,'THIAGO DOURADO FONTENLA','11201812050','dourado.thiago@aluno.ufabc.edu.br'),(11100,'TIAGO YUITI MATSUTANI','11201812051','tiago.matsutani@aluno.ufabc.edu.br'),(11101,'VICTOR MANHANINI TRINDADE','11201810242','v.manhanini@aluno.ufabc.edu.br'),(11102,'VICTOR RAMALHO BUSTAMANTE','11201810487','victor.ramalho@aluno.ufabc.edu.br'),(11103,'VICTORIA GABRIELI SILVA SOBRINHO','11201812045','victoria.gabrieli@aluno.ufabc.edu.br'),(11104,'VINICIUS DE SOUZA NASCIMENTO','11201810059','souza.n@aluno.ufabc.edu.br'),(11105,'VINICIUS NOGUEIRA BISPO','11201812234','vinicius.bispo@aluno.ufabc.edu.br'),(11106,'VINICIUS SANTANA SANTOS','11201811841','santana.santos@aluno.ufabc.edu.br'),(11107,'VINICIUS TORRES LOPES GLORIA','11201812159','gloria.vinicius@aluno.ufabc.edu.br'),(11108,'VINICIUS ZENERATO ALVES BOTTEON','11201811637','botteon.vinicius@aluno.ufabc.edu.br'),(11109,'VITOR SOARES PROENCE','11201811689','proence.vitor@aluno.ufabc.edu.br'),(11110,'WILLIAN KENJI TAKARACY','11201812251','willian.takaracy@aluno.ufabc.edu.br'),(11111,'DANIEL MAGALHAES E SILVA','11201810041','magalhaes.daniel@aluno.ufabc.edu.br'),(11112,'FABRICIO SATURNINO ONO BRUM','11201812055','fabricio.ono@aluno.ufabc.edu.br'),(11113,'GABRIEL LUCAS ALMEIDA DE SOUZA ROBLES','11201811381','gabriel.robles@aluno.ufabc.edu.br'),(11115,'GIOVANA NOGUEIRA RODRIGUES','11201811623','giovana.n@aluno.ufabc.edu.br'),(11117,'JHONATA SANTANA LOUZADA DE AGUIAR','11201811899','jhonata.santana@aluno.ufabc.edu.br'),(11118,'LAURA REDIGOLO','11201811795','laura.redigolo@aluno.ufabc.edu.br'),(11119,'LAURA YUMI UEMATSU','11201811906','laura.yumi@aluno.ufabc.edu.br'),(11120,'MARIA EDUARDA BATISTA ESCUDERO','11201811903','maria.eduarda@aluno.ufabc.edu.br'),(11121,'MARINA TAQUES MOYSES','11201810127','marina.taques@aluno.ufabc.edu.br'),(11122,'PIETRO MONTEIRO MINICHILLO DE ARAUJO','11201810269','pietro.monteiro@aluno.ufabc.edu.br'),(11123,'TAYNA PEREIRA LEITE DE ALMEIDA','11201810868','tayna.leite@aluno.ufabc.edu.br'),(11124,'VINICIUS CRUZ DE CARVALHO','11201811653','vinicius.c@aluno.ufabc.edu.br'),(11125,'ALEXANDRE HENRIQUE MERENDA JUNIOR','11201822491','merenda.alexandre@aluno.ufabc.edu.br'),(11127,'BEATRIZ FRANCISCA DE OLIVEIRA LUZ','11201810578','beatriz.luz@aluno.ufabc.edu.br'),(11128,'BRUNO JELEZOGLO VILLELA','11201811640','bruno.jelezoglo@aluno.ufabc.edu.br'),(11129,'Bruno Pestana Macedo','21049312','bruno.pestana@aluno.ufabc.edu.br'),(11130,'Carlito de Oliveira Garcia Junior','11201721656','carlito.garcia@aluno.ufabc.edu.br'),(11131,'EDUARDO CARDELLO DA SILVA','11201810904','e.cardello@aluno.ufabc.edu.br'),(11132,'Fabiano dos Santos Souza','11080213','fabiano.souza@aluno.ufabc.edu.br'),(11134,'FELIPE RODRIGUES GALHARDO','11201812174','f.galhardo@aluno.ufabc.edu.br'),(11135,'FELLIPE GALACHO PIMENTEL EMMERICH GOMES LEAL','11201811996','fellipe.galacho@aluno.ufabc.edu.br'),(11136,'Gabriel Alves Duarte','11201722069','gabriel.d@aluno.ufabc.edu.br'),(11137,'GUSTAVO SILVEIRA ESTEVAM','11201811672','silveira.g@aluno.ufabc.edu.br'),(11138,'Henrique Fantinatti','11201722309','h.fantinatti@aluno.ufabc.edu.br'),(11139,'ISABELLA REIS DA SILVA','11201810484','reis.isabella@aluno.ufabc.edu.br'),(11140,'IZABELLY DENTI MOURA','11201811726','izabelly.moura@aluno.ufabc.edu.br'),(11141,'JOAO VITOR MARINHEIRO','11201811427','joao.marinheiro@aluno.ufabc.edu.br'),(11142,'JOSE PAULO XAVIER DE OLIVEIRA','11201810811','jose.paulo@aluno.ufabc.edu.br'),(11143,'LEANDRO CORREA DOS SANTOS','11201811475','leandro.correa@aluno.ufabc.edu.br'),(11144,'Leticia Cristina Almeida do Nascimento','11201720334','cristina.leticia@aluno.ufabc.edu.br'),(11145,'LETICIA DOS SANTOS SILVA','11201811219','santos.leticia@aluno.ufabc.edu.br'),(11146,'LILIAN PEREIRA RODRIGUES','11201811303','rodrigues.lilian@aluno.ufabc.edu.br'),(11148,'MATHEUS CAVALARI BARBOSA','11201810233','matheus.cavalari@aluno.ufabc.edu.br'),(11149,'Matheus Santos Lana','11201722113','matheus.lana@aluno.ufabc.edu.br'),(11150,'Monique Honorato Silva','11201721883','monique.honorato@aluno.ufabc.edu.br'),(11151,'PEDRO ENRICCO NETO SENA','11201812021','pedro.enricco@aluno.ufabc.edu.br'),(11153,'Thiago Isidoro de Omena','11201720118','thiago.omena@aluno.ufabc.edu.br'),(11154,'Ualisson Jose Alves de Almeida','11201722810','ualisson.almeida@aluno.ufabc.edu.br'),(11155,'Nome do estudante para teste','123456789','student1@aluno.ufabc.edu.br'),(11156,'Alex Santos Souza','11201721787','souza.alex@aluno.ufabc.edu.br'),(11157,'Alexandre Melo do Nascimento','13201910027','alexandre.nascimento@aluno.ufabc.edu.br'),(11158,'Amanda Brito Shoegima','11122315','amanda.brito@aluno.ufabc.edu.br'),(11159,'Caique Coutinho dos Santos','21048816','caique.coutinho@aluno.ufabc.edu.br'),(11160,'CAIQUE DE JESUS SANTOS','11201811567','caique.jesus@aluno.ufabc.edu.br'),(11161,'CAROLINA RIBEIRO','11201811110','r.carolina@aluno.ufabc.edu.br'),(11162,'Derik de Souza','11201722145','derik.souza@aluno.ufabc.edu.br'),(11163,'FELIPE CASTRO SANTOS','11201812273','castro.santos@aluno.ufabc.edu.br'),(11164,'FERNANDA ENCINAS TOMAZ DA SILVA','11201812125','encinas.tomaz@aluno.ufabc.edu.br'),(11165,'FERNANDO LOBO BALLESTER','11201810975','fernando.lobo@aluno.ufabc.edu.br'),(11166,'GABRIEL MELO BUENO DA SILVA','11201811587','bueno.silva@aluno.ufabc.edu.br'),(11167,'Gabriel Tadeu Sperche Goncalves','11105516','gabriel.sperche@aluno.ufabc.edu.br'),(11168,'GABRIELA DE CASSIA NUNES SILVA','11201811109','gabriela.cassia@aluno.ufabc.edu.br'),(11169,'GUILHERME ZUSSA DUARTE','11201811596','guilherme.zussa@aluno.ufabc.edu.br'),(11170,'GUSTAVO ASSIS SANTOS','11201811485','gustavo.assis@aluno.ufabc.edu.br'),(11171,'Gustavo da Silva Ramos','11201722688','gustavo.ramos@aluno.ufabc.edu.br'),(11172,'IVAN LUIZ DE ALMEIDA VIANNA','11201812353','ivan.luiz@aluno.ufabc.edu.br'),(11174,'JULIO CESAR VIANA SILVA','11201812309','julio.viana@aluno.ufabc.edu.br'),(11175,'Marcelo Rodrigo da Silva','21067315','m.silva@aluno.ufabc.edu.br'),(11176,'MARIANA ALMEIDA LIMA LUNA ARAUJO','11201810366','almeida.mariana@aluno.ufabc.edu.br'),(11177,'MATHEUS SANTOS OLIVEIRA','11201812271','o.matheus@aluno.ufabc.edu.br'),(11178,'MILENA MEDEIROS SVENSSON','11201811622','milena.svensson@aluno.ufabc.edu.br'),(11179,'NATHAN CARVALHO BRITO','11201810491','nathan.carvalho@aluno.ufabc.edu.br'),(11180,'Paulo Henrique Peres','11114916','p.peres@aluno.ufabc.edu.br'),(11181,'Rafael Anselmo da Silva','21079316','rafael.anselmo@aluno.ufabc.edu.br'),(11182,'RAFAEL SALES RODRIGUES','11201811586','sales.rafael@aluno.ufabc.edu.br'),(11183,'RAQUEL ARBEX','11201810970','raquel.arbex@aluno.ufabc.edu.br'),(11184,'Ricardo Monteiro Kayatt','11201822518','ricardo.kayatt@aluno.ufabc.edu.br'),(11186,'SARAH AMARAL DA SILVA','11201812094','sarah.amaral@aluno.ufabc.edu.br'),(11187,'Sergio Augusto dos Santos Junior','21047916','junior.santos@aluno.ufabc.edu.br'),(11188,'VICTOR CAIQUE DOS SANTOS MELO','11201812288','victor.caique@aluno.ufabc.edu.br'),(11189,'WENDEL DA SILVA INACIO','11201812285','wendel.inacio@aluno.ufabc.edu.br'),(11190,'AMANDA ROCHA FRIGO','11201811304','amanda.frigo@aluno.ufabc.edu.br'),(11191,'AUGUSTO DUARTE WOJCIUK','11201810430','augusto.wojciuk@aluno.ufabc.edu.br'),(11192,'BEATRIZ MIANNI MOTTA','11201810671','beatriz.mianni@aluno.ufabc.edu.br'),(11193,'BIANCA HIDEMI KANEHIRA','11201811183','bianca.kanehira@aluno.ufabc.edu.br'),(11194,'DANILO TERUO OHASHI','11201811320','d.teruo@aluno.ufabc.edu.br'),(11195,'EDUARDO AGUERO','11201811977','eduardo.aguero@aluno.ufabc.edu.br'),(11196,'GABRIEL DANTAS DE MENEZES GOMES','11201810075','gabriel.dantas@aluno.ufabc.edu.br'),(11197,'GIANFRANCO DI MATTEO','11201810172','matteo.g@aluno.ufabc.edu.br'),(11198,'GUILHERME ASSENCIO','11201810653','guilherme.assencio@aluno.ufabc.edu.br'),(11199,'GUSTAVO DE OLIVAL ALBERNAZ GUERRA','11201811223','gustavo.olival@aluno.ufabc.edu.br'),(11201,'ITALO CAMPOS VASCONCELOS','11201811695','italo.vasconcelos@aluno.ufabc.edu.br'),(11202,'JOAQUIM JORIS LUDTKE','11201810741','joaquim.ludtke@aluno.ufabc.edu.br'),(11203,'JULIA AMENDOLA COELHO','11201810445','julia.amendola@aluno.ufabc.edu.br'),(11204,'JULIA OLIVEIRA DA SILVA','11201810353','julia.oliveira@aluno.ufabc.edu.br'),(11205,'LETICIA MATIAS DE ARAUJO','11201810422','matias.leticia@aluno.ufabc.edu.br'),(11206,'Lucas Henrique Sanches','11201811632','sanches.lucas@aluno.ufabc.edu.br'),(11207,'LUCAS NAOKI ISHIZAKO','11201811971','lucas.ishizako@aluno.ufabc.edu.br'),(11208,'LUCIANA DE SOUZA MENEZES','11201810674','luciana.menezes@aluno.ufabc.edu.br'),(11209,'MARCOS MOREIRA LOPES','11201810618','marcos.moreira@aluno.ufabc.edu.br'),(11210,'MARIANA DA COSTA PERES','11201810248','mariana.peres@aluno.ufabc.edu.br'),(11211,'MATHEUS ARAUJO VILELA DA SILVA','11201810407','matheus.vilela@aluno.ufabc.edu.br'),(11212,'MAURO KAZUYUKI ALVES YAMADA','11201811287','mauro.yamada@aluno.ufabc.edu.br'),(11213,'MURILO MAROTTA REIS ROSA','11201811631','marotta.rosa@aluno.ufabc.edu.br'),(11214,'RAFAEL SIMOES PINHEIRO LIMA','11201810154','rafael.simoes@aluno.ufabc.edu.br'),(11215,'RENATO RODRIGUES FARIAS','11201811360','farias.renato@aluno.ufabc.edu.br'),(11216,'TALISY HELENE LIMA BASSACO','11201811966','talisy.helene@aluno.ufabc.edu.br'),(11217,'THAIS AMORIM SOUZA','11201810655','thais.amorim@aluno.ufabc.edu.br'),(11218,'VINICIUS CAVALCANTI VICENZI PEREIRA','11201811105','vinicius.vicenzi@aluno.ufabc.edu.br'),(11219,'VINICIUS FELIPE GIGLI','11201811295','v.gigli@aluno.ufabc.edu.br'),(11220,'AMANDA OLIVEIRA CALVO','11201810102','amanda.calvo@aluno.ufabc.edu.br'),(11221,'LUCAS TOFFETTI CINTRA DE PINHEIRO','11201822521','lucas.toffetti@aluno.ufabc.edu.br'),(11222,'THALITA ARGILA SOARES','11201810147','thalita.argila@aluno.ufabc.edu.br'),(11223,'ALEXANDRE DE SOUZA ALMEIDA','11201810399','souza.alexandre@aluno.ufabc.edu.br'),(11224,'ANDREZZA GABRIELLE DOS SANTOS GARCIA','11201822414','andrezza.garcia@aluno.ufabc.edu.br'),(11225,'ANNA ELIZA NASCIMENTO CRUCCIANI','11201811283','anna.eliza@aluno.ufabc.edu.br'),(11226,'ARTHUR DA SILVA SOUSA SANTOS','11201810423','santos.arthur@aluno.ufabc.edu.br'),(11227,'ARYADNE MAYO DE CARVALHO','11201810560','aryadne.carvalho@aluno.ufabc.edu.br'),(11228,'ASER GOMES','11201822540','gomes.aser@aluno.ufabc.edu.br'),(11230,'CLOVIS LUIZ DA SILVA JUNIOR','11201810291','clovis.luiz@aluno.ufabc.edu.br'),(11231,'FELIPE MOREIRA TEMOTEO DA SILVA','11201811314','moreira.felipe@aluno.ufabc.edu.br'),(11232,'FERNANDA DE ARAUJO PEREIRA','11201810337','fernanda.araujo@aluno.ufabc.edu.br'),(11233,'GABRIEL LONER XAVIER','11201812030','gabriel.xavier@aluno.ufabc.edu.br'),(11235,'GUILHERME DO FORTE CELLA','11201811470','guilherme.cella@aluno.ufabc.edu.br'),(11236,'Gustavo Kenji Alves Hyochimoto','11110016','gustavo.hyochimoto@aluno.ufabc.edu.br'),(11237,'GUSTAVO TRUFINO PAVAN','11201812221','g.pavan@aluno.ufabc.edu.br'),(11238,'ISABELA DO PATROCINIO SILVA','11201812164','isabela.patrocinio@aluno.ufabc.edu.br'),(11239,'JOSE DENIS ALVES DA SILVA','11201812146','jose.denis@aluno.ufabc.edu.br'),(11240,'JULIA LAMAS AGUIAR RUIVO','11201811331','julia.aguiar@aluno.ufabc.edu.br'),(11242,'LUANA DIAS GUERRA','11201810057','luana.dias@aluno.ufabc.edu.br'),(11243,'LUCAS VENANCIO SANTAELA','11201812377','lucas.santaela@aluno.ufabc.edu.br'),(11244,'MARCELO FERREIRA CESAR','11201812069','marcelo.ferreira@aluno.ufabc.edu.br'),(11246,'MATHEUS SOLLA RECHER','11201822489','matheus.solla@aluno.ufabc.edu.br'),(11247,'RAFAELA DIAS LOURENCO','11201810549','rafaela.lourenco@aluno.ufabc.edu.br'),(11248,'RUAN DA ROCHA GUEDES','11201811310','ruan.guedes@aluno.ufabc.edu.br'),(11249,'SARAH FERNANDES DE SOUZA','11201810166','sarah.souza@aluno.ufabc.edu.br'),(11250,'THIAGO ARAUJO CRISPIM','11201812177','thiago.crispim@aluno.ufabc.edu.br'),(11251,'VICTORIA TAVARES DOS SANTOS','11201812248','victoria.t@aluno.ufabc.edu.br'),(11253,'Alessandro Egidio Coelho da Silva','11102316','alessandro.coelho@aluno.ufabc.edu.br'),(11254,'Chrystian Vera Lira','11201722911','chrystian.lira@aluno.ufabc.edu.br'),(11255,'GIOVANNI BALLARIO RIGHINI','11201811128','giovanni.righini@aluno.ufabc.edu.br'),(11256,'Lucas Murcia Sanches','11201720740','lucas.murcia@aluno.ufabc.edu.br'),(11258,'ALAN MENDES SILVA','11201811707','s.alan@aluno.ufabc.edu.br'),(11259,'ALBERTO GALDINO RIBEIRO PEDROSO','11201810449','alberto.ribeiro@aluno.ufabc.edu.br'),(11260,'CAMILLA RIBEIRO OLIVEIRA E SILVA','11201810571','ribeiro.camilla@aluno.ufabc.edu.br'),(11261,'ESDRAS RUFINO DOS SANTOS','11201811028','esdras.rufino@aluno.ufabc.edu.br'),(11262,'FABRICIO PEREIRA FRAZAO DA SILVA','11201811612','fabricio.frazao@aluno.ufabc.edu.br'),(11263,'Gabriela Borborema Santiago','11201720190','borborema.gabriela@aluno.ufabc.edu.br'),(11264,'GIANCARLO DOS SANTOS RODRIGUES','11201812012','giancarlo.rodrigues@aluno.ufabc.edu.br'),(11265,'HENRIQUE EIDI NISHI','11201810348','henrique.nishi@aluno.ufabc.edu.br'),(11266,'IGOR FERREIRA CARDOSO','11201810036','igor.ferreira@aluno.ufabc.edu.br'),(11267,'ISAAC FIGUEIREDO DA SILVA','11201810745','isaac.figueiredo@aluno.ufabc.edu.br'),(11268,'IVAN AUGUSTO PEREIRA PIRES','11201811166','ivan.pires@aluno.ufabc.edu.br'),(11270,'JOAO PAULO IANNONE MACARI','11201812372','joao.macari@aluno.ufabc.edu.br'),(11271,'JOELY SANTOS DA SILVA','11201810700','joely.s@aluno.ufabc.edu.br'),(11272,'Johann Ferrari','11201812321','johann.ferrari@aluno.ufabc.edu.br'),(11273,'JOSE GIOVANNE GALDINO DOS SANTOS','11201810053','giovanne.galdino@aluno.ufabc.edu.br'),(11274,'JULIANE SOARES GAIA','11201811949','juliane.gaia@aluno.ufabc.edu.br'),(11275,'LEONARDO DE ALMEIDA LEITE','11201811400','leonardo.almeida@aluno.ufabc.edu.br'),(11276,'Leonardo Lopes Berti','11119616','leonardo.berti@aluno.ufabc.edu.br'),(11277,'LEONARDO VAZ LOURENCO','11201811616','vaz.leonardo@aluno.ufabc.edu.br'),(11278,'LUCAS PEDROSA ALMEIDA','11201810370','lucas.pedrosa@aluno.ufabc.edu.br'),(11279,'MAYARA MORAIS DO NASCIMENTO','11201810050','m.morais@aluno.ufabc.edu.br'),(11280,'NICHOLAS PACHECO REIS','11201810157','nicholas.pacheco@aluno.ufabc.edu.br'),(11281,'Pedro Henrique Salmora Correa','11201722461','pedro.salmora@aluno.ufabc.edu.br'),(11282,'PEDRO NICOLAS BRITO','11201810160','pedro.brito@aluno.ufabc.edu.br'),(11283,'STEPHANIE SANT ANNA BATISTA','11201810296','sant.anna@aluno.ufabc.edu.br'),(11284,'Udirley Ferreira dos Santos','11085116','udirley.ferreira@aluno.ufabc.edu.br'),(11285,'YUMY SANTOS WOO','11201810331','yumy.s@aluno.ufabc.edu.br'),(11286,'YURI STIRBULOV DONARDI','11201811313','yuri.donardi@aluno.ufabc.edu.br'),(11287,'ALBERTO DE ALMEIDA E SILVA','11201810244','alberto.almeida@aluno.ufabc.edu.br'),(11288,'ANDRE TEIXEIRA MOTA','11201810051','andre.teixeira@aluno.ufabc.edu.br'),(11289,'BRUNO VIEIRA RAMOS SILVA','11201811306','bruno.vieira@aluno.ufabc.edu.br'),(11290,'CAMILA CHAVES ROCHA','11201811875','camila.chaves@aluno.ufabc.edu.br'),(11291,'CAROLINE HELENA CLAUDINO','11201812035','caroline.claudino@aluno.ufabc.edu.br'),(11292,'EDER BATISTA FLORENCIO','11201810251','eder.florencio@aluno.ufabc.edu.br'),(11293,'GABRIEL GOUVEIA','11201812284','g.gouveia@aluno.ufabc.edu.br'),(11294,'GIAN LUCA JORGE PINNA','11201810218','gian.luca@aluno.ufabc.edu.br'),(11295,'GILLIARD RODRIGUES ARAUJO','11201811016','gilliard.rodrigues@aluno.ufabc.edu.br'),(11296,'GIOVANI CARMONA KISZ','11201811500','giovani.kisz@aluno.ufabc.edu.br'),(11297,'GUILHERME NIDO DE AVEIRO','11201811614','guilherme.nido@aluno.ufabc.edu.br'),(11298,'GUSTAVO HENRIQUE NUNES DOS SANTOS','11201812224','henrique.gustavo@aluno.ufabc.edu.br'),(11299,'IGOR COELHO SANTOS','11201810870','i.santos@aluno.ufabc.edu.br'),(11300,'JESSI LEANDRO CASTRO','11201810509','jessi.leandro@aluno.ufabc.edu.br'),(11301,'JOANNIS BASILE STAVRAKAS','11201810529','joannis.basile@aluno.ufabc.edu.br'),(11302,'Jose Carlos Camera Muzel','11201811489','jose.muzel@aluno.ufabc.edu.br'),(11303,'LUCAS BRUNASSI CHIARELLI','11201810376','lucas.chiarelli@aluno.ufabc.edu.br'),(11304,'LUCAS CAMARGO MARTELLI','11201811585','lucas.martelli@aluno.ufabc.edu.br'),(11305,'Marcelo D Ambrosi de Melo','11201810961','marcelo.ambrosi@aluno.ufabc.edu.br'),(11306,'MATHEUS DO NASCIMENTO MOREIRA','11201810355','matheus.nascimento@aluno.ufabc.edu.br'),(11307,'MATHEUS SILVA SANTOS','11201812375','silva.santos@aluno.ufabc.edu.br'),(11308,'MAYARA MONTEIRO DA SILVA','11201822552','monteiro.mayara@aluno.ufabc.edu.br'),(11309,'MELISSA YUCARI MORAES UEDA','11201811261','melissa.ueda@aluno.ufabc.edu.br'),(11310,'MICHELE NAKANO MARQUES','11201811316','michele.nakano@aluno.ufabc.edu.br'),(11311,'NAJLA SANTOS PACHECO DE CAMPOS','11201811998','najla.pacheco@aluno.ufabc.edu.br'),(11312,'PEDRO LOPES DE PAULA','11201810061','pedro.paula@aluno.ufabc.edu.br'),(11313,'ROBERT CHINEM FUJII','11201810569','robert.chinem@aluno.ufabc.edu.br'),(11314,'THAYNA CAMARGO DA SILVA','11201810624','thayna.s@aluno.ufabc.edu.br'),(11315,'VINICIUS FERREIRA MAGALHAES','11201811474','vinicius.magalhaes@aluno.ufabc.edu.br'),(11316,'VINICIUS RAHY BERTOCCO','11201811606','vinicius.bertocco@aluno.ufabc.edu.br'),(11318,'ANA KAROLINE ALMEIDA SANTOS','11201812066','ana.karoline@aluno.ufabc.edu.br'),(11319,'BRUNO CANDELARIA LANCELLOTTI','11201810180','b.lancellotti@aluno.ufabc.edu.br'),(11320,'CARLA DA SILVA BUSO','11201810351','carla.buso@aluno.ufabc.edu.br'),(11321,'DENNIS LOPES DA SILVA MATOZO','11201810444','dennis.matozo@aluno.ufabc.edu.br'),(11322,'EMANUELA MI HWA DE CAMPOS','11201811642','emanuela.campos@aluno.ufabc.edu.br'),(11323,'ESTHER MENEZES CLEMENTINO DE LIMA','11201810342','esther.menezes@aluno.ufabc.edu.br'),(11324,'FELIPE CLEMENTE MARTIN','11201810109','felipe.clemente@aluno.ufabc.edu.br'),(11325,'GLAYCE BRUNA DE SOUZA STAMPINI','11201811727','glayce.stampini@aluno.ufabc.edu.br'),(11326,'GUSTAVO RAMIRES HALLGRIM','11201810135','gustavo.hallgrim@aluno.ufabc.edu.br'),(11327,'ISABELA LIMA SIGAKI','11201810447','isabela.sigaki@aluno.ufabc.edu.br'),(11328,'ISABELLA FERRAZ BICALHO','11201810179','isabella.bicalho@aluno.ufabc.edu.br'),(11329,'JULIA OLIVEIRA COSTA','11201810014','julia.costa@aluno.ufabc.edu.br'),(11330,'LORENZO GARCIA DE VICTOR','11201811340','lorenzo.garcia@aluno.ufabc.edu.br'),(11331,'LORHAN LONGHINI DE SOUZA','11201810615','lorhan.longhini@aluno.ufabc.edu.br'),(11332,'MARIA CLARA PINTO STOCCO','11201810016','maria.stocco@aluno.ufabc.edu.br'),(11333,'MARIA LUIZA GONCALVES DE LIMA','11201810455','maria.goncalves@aluno.ufabc.edu.br'),(11334,'MARIELA VITORIA SANTOS','11201811412','m.vitoria@aluno.ufabc.edu.br'),(11335,'MATHEUS RAMOS DO NASCIMENTO','11201812243','matheus.ramos@aluno.ufabc.edu.br'),(11336,'MATHEUS XAVIER DOS SANTOS CHAVES','11201811081','xavier.matheus@aluno.ufabc.edu.br'),(11337,'MAYARA NOGUEIRA PEIXOTO','11201810054','mayara.nogueira@aluno.ufabc.edu.br'),(11338,'MILENA ROCHA DE CAMARGO','11201810122','milena.camargo@aluno.ufabc.edu.br'),(11339,'MURILLO PINHO BURCHERT DO NASCIMENTO','11201810105','murillo.burchert@aluno.ufabc.edu.br'),(11340,'PATRICK DE LIMA CORREIA','11201812007','patrick.correia@aluno.ufabc.edu.br'),(11341,'RAFAEL SOARES BALAGUER','11201810153','rafael.balaguer@aluno.ufabc.edu.br'),(11342,'ROGERIO ROSSATTO JUNIOR','11201810428','rogerio.rossatto@aluno.ufabc.edu.br'),(11343,'Samir Araujo dos Santos','11201811826','samir.araujo@aluno.ufabc.edu.br'),(11344,'THAYNA MESQUITA GOMES DOS SANTOS','11201811597','thayna.gomes@aluno.ufabc.edu.br'),(11345,'URSULLA ANDRESS ELMESCANY FERREIRA','11201811840','ursulla.elmescany@aluno.ufabc.edu.br'),(11346,'VINICIUS RODRIGUES','11201811515','rodrigues.v@aluno.ufabc.edu.br'),(11347,'CAMILA DE FREITAS CARDOSO','11201811725','camila.freitas@aluno.ufabc.edu.br'),(11348,'CHRISTIAN PIMENTEL ALBAR','11201810613','christian.albar@aluno.ufabc.edu.br'),(11349,'EDUARDO CAMPOS DO VAL SOUTO','11201810240','campos.souto@aluno.ufabc.edu.br'),(11350,'ESTELA DO NASCIMENTO SOLA','11201810698','estela.sola@aluno.ufabc.edu.br'),(11351,'Fabio Lima Mota','11201721954','f.mota@aluno.ufabc.edu.br'),(11353,'GUILHERME HENRIQUE ARAUJO','11201812303','guilherme.araujo@aluno.ufabc.edu.br'),(11354,'Heverton Alison Soares da Luz','11201811880','heverton.luz@aluno.ufabc.edu.br'),(11355,'ISABELY VASCONCELLOS GONCALVES','11201812088','i.vasconcellos@aluno.ufabc.edu.br'),(11356,'Joao Pedro Tsantarlis','11201720742','j.tsantarlis@aluno.ufabc.edu.br'),(11357,'JULIANE DOS SANTOS ASSIS','11201810271','assis.juliane@aluno.ufabc.edu.br'),(11358,'LAURA BUENO PONSO','11201810520','laura.ponso@aluno.ufabc.edu.br'),(11359,'LETICIA MOREIRA DOS SANTOS','11201810418','leticia.s@aluno.ufabc.edu.br'),(11361,'LUIZ AUGUSTO OLIVEIRA DOS SANTOS','11201811716','santos.augusto@aluno.ufabc.edu.br'),(11362,'MAESSIO DAMASCENO SOUSA','11201811822','maessio.sousa@aluno.ufabc.edu.br'),(11363,'MARCOS HENRIQUE FERNANDES OZORIO','11201810517','marcos.ozorio@aluno.ufabc.edu.br'),(11364,'MARCUS VINICIUS SILVA MEZENCIO','11201810140','marcus.mezencio@aluno.ufabc.edu.br'),(11365,'NICOLAS LEONARDO ANAIA DOS SANTOS','11201810933','nicolas.anaia@aluno.ufabc.edu.br'),(11366,'PATRICK CAMILLO','11201811324','patrick.camillo@aluno.ufabc.edu.br'),(11367,'PAULO HENRIQUE ALVES DA SILVA','11201811575','paulo.alves@aluno.ufabc.edu.br'),(11368,'PEDRO ROMEIRO VIDO','11201810143','pedro.vido@aluno.ufabc.edu.br'),(11369,'Philipe Augusto dos Santos','11120416','philipe.augusto@aluno.ufabc.edu.br'),(11370,'RAFAEL JUNJI MOROKUMA','11201811339','r.morokuma@aluno.ufabc.edu.br'),(11371,'Robert Lima do Nascimento','11201720066','robert.lima@aluno.ufabc.edu.br'),(11372,'Tauane da Silva Chan','11201722154','t.chan@aluno.ufabc.edu.br'),(11377,'AMANDA DA ROCHA PITAO DURVAL','11201811888','amanda.durval@aluno.ufabc.edu.br'),(11378,'ANDRE ROSSINI BACCHI','11201810247','andre.bacchi@aluno.ufabc.edu.br'),(11379,'ANDRE WAGNER ROSSI ESPINOSA','11201810264','andre.espinosa@aluno.ufabc.edu.br'),(11380,'BERNARDO BRAMBILA MARQUES DE MEDEIROS','11201811848','bernardo.brambila@aluno.ufabc.edu.br'),(11381,'BRUNO CUBATELI SANTOS BERNARDINO','11201811209','bruno.cubateli@aluno.ufabc.edu.br'),(11382,'CATHARINA PAIOLA MAGNOSSAO','11201810547','catharina.paiola@aluno.ufabc.edu.br'),(11383,'DAVID SATOSHI AGUINA','11201812079','david.s@aluno.ufabc.edu.br'),(11384,'DIEGO FELIX DA SILVA','11201810207','diego.f@aluno.ufabc.edu.br'),(11385,'DIEGO SERODIO COSTA','11201811555','diego.serodio@aluno.ufabc.edu.br'),(11386,'DIOGO AUGUSTO MARINOTTI','11201810177','diogo.marinotti@aluno.ufabc.edu.br'),(11387,'ETTORE BRUNO MLAKER DOS SANTOS','11201812314','ettore.bruno@aluno.ufabc.edu.br'),(11388,'GABRIEL CUNHA CARDOSO','11201810148','g.cunha@aluno.ufabc.edu.br'),(11389,'GABRIEL VICTOR COSTA','11201812145','g.victor@aluno.ufabc.edu.br'),(11390,'GABRIELA MACIEL GODOI','11201822394','gabriela.maciel@aluno.ufabc.edu.br'),(11391,'HUMBERTO MENDONCA','11201811847','humberto.mendonca@aluno.ufabc.edu.br'),(11392,'ISABELA ANTONIO AVILA','11201811832','isabela.a@aluno.ufabc.edu.br'),(11393,'ISABELA TAMY MENEZES SASABUCHI','11201810239','isabela.tamy@aluno.ufabc.edu.br'),(11395,'JOAO ANTONIO MARQUES COSTA','11201810869','joao.antonio@aluno.ufabc.edu.br'),(11396,'JONATHAN TAKESHI YWAHASHI','11201810503','jonathan.ywahashi@aluno.ufabc.edu.br'),(11397,'LEONARDO LONGUINI DA SILVA','11201822469','leonardo.longuini@aluno.ufabc.edu.br'),(11398,'LEONARDO RYO NAKAGAWA','11201812233','leonardo.ryo@aluno.ufabc.edu.br'),(11399,'LORENA LOURENZATO GUARDA','11201822407','lorena.lourenzato@aluno.ufabc.edu.br'),(11400,'MAURICIO DEVINCENTIS SILVA','11201811792','mauricio.devincentis@aluno.ufabc.edu.br'),(11401,'MILENA MACHADO DA COSTA','11201811451','milena.machado@aluno.ufabc.edu.br'),(11402,'PEDRO DE SOUZA TUNIN','11201811959','pedro.tunin@aluno.ufabc.edu.br'),(11403,'RENAN KENDI TINEN','11201811982','tinen.kendi@aluno.ufabc.edu.br'),(11404,'VICTOR AUGUSTO ROSSI','11201822392','victor.rossi@aluno.ufabc.edu.br'),(11405,'VICTOR HUGO FACHINI CAMARA DE SOUZA','11201812231','victor.fachini@aluno.ufabc.edu.br'),(11406,'VINICIUS EDUARDO NERES BRITO','11201810191','vinicius.brito@aluno.ufabc.edu.br'),(11407,'BRUNA GOMES DANTAS','11201810936','bruna.dantas@aluno.ufabc.edu.br'),(11408,'BRUNO BUENO FURQUIM','11201811159','bruno.furquim@aluno.ufabc.edu.br'),(11409,'CAMILA ROCHA MASSOLI','11201811768','camila.massoli@aluno.ufabc.edu.br'),(11410,'CARLOS HENRIQUE LIMA SANTOS','11201810651','henrique.carlos@aluno.ufabc.edu.br'),(11411,'CECILIA DEARE ESTEVES','11201811322','cecilia.deare@aluno.ufabc.edu.br'),(11413,'DANIEL DOS SANTOS ESTEVAM','11201811117','daniel.estevam@aluno.ufabc.edu.br'),(11414,'DOUGLAS BELANI','11201810091','douglas.belani@aluno.ufabc.edu.br'),(11415,'FELISBERTO LUAN MOREIRA DA SILVA','11201811422','felisberto.luan@aluno.ufabc.edu.br'),(11416,'FERNANDA MARCILIO GUERRERO','11201812287','fernanda.guerrero@aluno.ufabc.edu.br'),(11417,'FERNANDO CEZAR RESENDE LOPES','11201811290','fernando.lopes@aluno.ufabc.edu.br'),(11418,'JULIO CESAR CAVINA DE OLIVEIRA','11201810194','julio.cavina@aluno.ufabc.edu.br'),(11419,'KAROLAYNE DE QUEIROZ CAMPOS','11201810126','k.campos@aluno.ufabc.edu.br'),(11421,'LAURA VITORIA SOARES','11201811657','laura.vitoria@aluno.ufabc.edu.br'),(11422,'LEONARDO RODRIGO ALVES DE CAMPOS','11201812217','leonardo.rodrigo@aluno.ufabc.edu.br'),(11423,'LEONARDO VALVERDE URYU','11201812281','leonardo.uryu@aluno.ufabc.edu.br'),(11424,'LETICIA GIANINI ROSSATTO','11201810290','leticia.rossatto@aluno.ufabc.edu.br'),(11425,'LUANA FERNANDES DA FOMSECA','11201811537','luana.fernandes@aluno.ufabc.edu.br'),(11427,'MARCOS BORGES DUARTE','11201810739','marcos.d@aluno.ufabc.edu.br'),(11428,'MARIO JOSE DE QUEIROZ NETO','11201811488','mario.neto@aluno.ufabc.edu.br'),(11429,'MATHEUS MOREIRA FRANCISCO','11201810390','matheus.m@aluno.ufabc.edu.br'),(11430,'MURILLO VICENTINI DE ALCANTARA','11201812103','murillo.alcantara@aluno.ufabc.edu.br'),(11431,'Pedro Augusto Anbanks Mendonca','11201721591','pedro.anbanks@aluno.ufabc.edu.br'),(11432,'PEDRO HENRIQUE SOUZA DE ANDRADE','11201822412','andrade.pedro@aluno.ufabc.edu.br'),(11433,'Raissa do Nascimento Lima','11201721491','raissa.lima@aluno.ufabc.edu.br'),(11434,'VINICIUS AUGUSTO NUNES MOURA','11201810243','vinicius.augusto@aluno.ufabc.edu.br'),(11435,'VINICIUS GOULARTE E SILVA','11201811882','vinicius.goularte@aluno.ufabc.edu.br'),(11436,'VINICIUS MARCO PACINI','11201811392','v.pacini@aluno.ufabc.edu.br'),(11437,'ANA JULIA MONICI ORBETELLI','11201810144','ana.monici@aluno.ufabc.edu.br'),(11438,'ANDRE KEZAN DE CASTRO','11201810175','andre.kezan@aluno.ufabc.edu.br'),(11439,'ANDRESSA GUIMARAES BENEDICTO','11201810280','guimaraes.benedicto@aluno.ufabc.edu.br'),(11440,'BARBARA SAMPAIO FERNANDES TRIBINO','11201810723','barbara.tribino@aluno.ufabc.edu.br'),(11441,'BEATRICE MIKA SAITO','11201811846','beatrice.mika@aluno.ufabc.edu.br'),(11442,'BIANCA MONTEIRO CRODA','11201811454','b.croda@aluno.ufabc.edu.br'),(11443,'CAIO CESAR TIGRE MENEZES','11201812344','caio.tigre@aluno.ufabc.edu.br'),(11444,'CAMILA DE FATIMA AUGUSTA DOS SANTOS','11201810901','santos.camila@aluno.ufabc.edu.br'),(11445,'DEBORA CRISAFULLI VENTURA','11201810316','d.ventura@aluno.ufabc.edu.br'),(11446,'FABIANA GOMES DINIZ','11201810329','fabiana.diniz@aluno.ufabc.edu.br'),(11447,'GABRIEL APARECIDO SIMIONI DO CARMO','11201810389','gabriel.simioni@aluno.ufabc.edu.br'),(11448,'GUILHERME MARQUES PEREIRA','11201811550','g.marques@aluno.ufabc.edu.br'),(11449,'GUSTAVO ZUPPO BENASSI','11201810824','gustavo.zuppo@aluno.ufabc.edu.br'),(11450,'IGOR CESAR TIRONI','11201811335','igor.tironi@aluno.ufabc.edu.br'),(11451,'ISABELA SOUZA LEITE','11201810825','isabela.leite@aluno.ufabc.edu.br'),(11452,'KIM DE SOUZA CASTRO','11201810246','kim.castro@aluno.ufabc.edu.br'),(11453,'Leonardo Goncalves Jacometti','11201811705','leonardo.jacometti@aluno.ufabc.edu.br'),(11454,'LUARA BEATRIZ GHELER DE NOVAES','11201811318','luara.gheler@aluno.ufabc.edu.br'),(11455,'LUCAS APARECIDO DANTAS DO NASCIMENTO DE SOUZA','11201811724','lucas.dantas@aluno.ufabc.edu.br'),(11456,'LUCAS RODRIGUES RUBIO','11201810918','lucas.rubio@aluno.ufabc.edu.br'),(11457,'MARCUS VINICIUS HOLANDA DE LIMA','11201810592','marcus.holanda@aluno.ufabc.edu.br'),(11458,'MARIA FERNANDA OLIVEIRA SILVESTRE','11201811833','oliveira.fernanda@aluno.ufabc.edu.br'),(11459,'MATHEUS ALBERTO SANTOS','11201810776','matheus.alberto@aluno.ufabc.edu.br'),(11460,'MATHEUS HENRIQUE PACHECO','11201811346','pacheco.m@aluno.ufabc.edu.br'),(11461,'Rebeca Maria Neto','11201722512','rebeca.m@aluno.ufabc.edu.br'),(11462,'THIAGO FERREIRA MIRANDA','11201810174','t.miranda@aluno.ufabc.edu.br'),(11463,'THIAGO HASHIYA ODA','11201810891','hashiya.oda@aluno.ufabc.edu.br'),(11464,'VICTOR HUGO ZANINETTE BERNARDINO','11201811443','hugo.bernardino@aluno.ufabc.edu.br'),(11465,'VITOR HEIDRICH COSTA SILVA','11201810452','vitor.heidrich@aluno.ufabc.edu.br'),(11466,'Viviane Bezerra da Silva','11201720656','viviane.b@aluno.ufabc.edu.br'),(11467,'ADRIANA BEATRIZ FORMAGIN','11201810602','a.formagin@aluno.ufabc.edu.br'),(11468,'ANDRESA DE SANTANA VASCONCELOS','11201811698','andresa.vasconcelos@aluno.ufabc.edu.br'),(11469,'AURENIVIA ALVES PEREIRA','11201810744','aurenivia.pereira@aluno.ufabc.edu.br'),(11470,'Beatriz Crovella Leiva','11201723113','beatriz.crovella@aluno.ufabc.edu.br'),(11471,'BEATRIZ CRUZ DE FRANCA','11201812242','beatriz.franca@aluno.ufabc.edu.br'),(11472,'BRENNON BARBOSA ALVES','11201810719','brennon.barbosa@aluno.ufabc.edu.br'),(11473,'BRUNO DE FREITAS GONCALVES','11201810458','bruno.freitas@aluno.ufabc.edu.br'),(11474,'DANIEL AKIO MATSUMOTO','11201811276','akio.matsumoto@aluno.ufabc.edu.br'),(11476,'GABRIEL OLIVEIRA SANTOS','11201810727','o.gabriel@aluno.ufabc.edu.br'),(11477,'GABRIEL OLIVIERI','11201811857','gabriel.olivieri@aluno.ufabc.edu.br'),(11478,'GABRIELA ROCHA','11201812290','gabriela.r@aluno.ufabc.edu.br'),(11479,'GIOVANNA HANGAI LINARES ZUCCHINI','11201812256','giovanna.zucchini@aluno.ufabc.edu.br'),(11480,'GUSTAVO HENRIQUE GERMANO LEDANDECK','11201810786','gustavo.ledand@aluno.ufabc.edu.br'),(11481,'ISABELLA LUPINARI VOLPATO','11201811284','isabella.lupinari@aluno.ufabc.edu.br'),(11483,'LARISSA DE SOUZA BONANI','11201810911','larissa.bonani@aluno.ufabc.edu.br'),(11484,'LETICIA BONASSA SEVERINO','11201810267','leticia.bonassa@aluno.ufabc.edu.br'),(11485,'LUANA THAINA KAWAKAMI','11201810115','luana.kawakami@aluno.ufabc.edu.br'),(11486,'Maria Eduarda Valerio Lima','11028016','eduarda.lima@aluno.ufabc.edu.br'),(11487,'MATHEUS RAMOS BARBOSA','11201811513','barbosa.m@aluno.ufabc.edu.br'),(11488,'MICHAEL ALVES ROCHA','11201810427','michael.a@aluno.ufabc.edu.br'),(11489,'MURILO FAVERO','11201810083','murilo.favero@aluno.ufabc.edu.br'),(11490,'NICKOLAS LUCAS CONCEICAO E SILVA','11201811860','nickolas.silva@aluno.ufabc.edu.br'),(11491,'RAFAEL TASHIRO DOS ANJOS','11201810464','rafael.tashiro@aluno.ufabc.edu.br'),(11492,'Regiane Santos de Abreu','11201721276','regiane.santos@aluno.ufabc.edu.br'),(11493,'Rhuan Ribeiro Lourenco','11094913','r.rhuan@aluno.ufabc.edu.br'),(11494,'Robson Gomes','11021516','robson.gomes@aluno.ufabc.edu.br'),(11495,'SAMUEL ARAUJO RIBEIRO','11201810182','samuel.araujo@aluno.ufabc.edu.br'),(11496,'VINICIUS BAPTISTA BENUCCI','11201811594','vinicius.benucci@aluno.ufabc.edu.br'),(11497,'ANA ELIZABETH DIAS RIZZI','11201811749','ana.rizzi@aluno.ufabc.edu.br'),(11498,'ANDRE KENJI SATO','11201811058','a.sato@aluno.ufabc.edu.br'),(11499,'BEATRIZ ANTUNES COSTA DE ANDRADE','11201811744','beatriz.antunes@aluno.ufabc.edu.br'),(11500,'BIANCA DAMETTO DA COSTA','11201810285','bianca.d@aluno.ufabc.edu.br'),(11501,'Bruno Fernandes de Souza','21090715','bruno.fernandes@aluno.ufabc.edu.br'),(11502,'Bruno Pires Ultramari','11201720468','bruno.ultramari@aluno.ufabc.edu.br'),(11503,'Enzo Tersetti','11201810238','enzo.tersetti@aluno.ufabc.edu.br'),(11505,'GABRIEL KOUWEN RODRIGUES','11201810040','gabriel.kouwen@aluno.ufabc.edu.br'),(11506,'GABRIEL TADASHI MATSUBARA DOS SANTOS','11201810483','gabriel.tadashi@aluno.ufabc.edu.br'),(11507,'GUSTAVO SOARES DO VALE','11201812068','gustavo.vale@aluno.ufabc.edu.br'),(11508,'HENRIQUE GODOY SILVA','11201811572','henrique.godoy@aluno.ufabc.edu.br'),(11509,'JOAO CARLOS GONCALVES SILVA','11201811342','goncalves.joao@aluno.ufabc.edu.br'),(11510,'Jose Eduardo de Oliveira Lima','11201721288','jose.oliveira@aluno.ufabc.edu.br'),(11511,'JULIANA ABRANTES DE ANDRADE','11201811156','juliana.abrantes@aluno.ufabc.edu.br'),(11512,'JULIO MURAKAMI','11201810171','julio.murakami@aluno.ufabc.edu.br'),(11513,'KAMILLE SANTANA KRIEGER','11201811621','kamille.krieger@aluno.ufabc.edu.br'),(11514,'Kauanne Oliveira Trento','11201723118','kauanne.trento@aluno.ufabc.edu.br'),(11515,'LEONARDO KENJI MAEDA SILL','11201810940','leonardo.kenji@aluno.ufabc.edu.br'),(11516,'LINCOLN APARECIDO SOBRAL SANTOS','11201811301','lincoln.sobral@aluno.ufabc.edu.br'),(11517,'Lucas Martin de Lucca','11021016','lucas.lucca@aluno.ufabc.edu.br'),(11518,'LUCCA MONTONE CASAGRANDE RODRIGUES','11201811595','lucca.montone@aluno.ufabc.edu.br'),(11519,'MARCELO PEDRO GOMES SANCHEZ','11201811697','marcelo.sanchez@aluno.ufabc.edu.br'),(11520,'MATHEUS KENZO MADA','11201810252','matheus.mada@aluno.ufabc.edu.br'),(11521,'PEDRO HENRIQUE THOMAZ LUCAS','11201811279','pedro.thomaz@aluno.ufabc.edu.br'),(11522,'RAFAEL PREVIATELLO CARVALHO','11201810161','rafael.previatello@aluno.ufabc.edu.br'),(11523,'SARA AVELINO BESERRA','11201810394','sara.a@aluno.ufabc.edu.br'),(11524,'SOFIA MENDES COELHO','11201810227','s.mendes@aluno.ufabc.edu.br'),(11526,'VINICIUS MARCELINO PASCOALETE ROSA','11201812362','vinicius.marcelino@aluno.ufabc.edu.br'),(11527,'AMANDA BARRETO SILVA','11201810038','amanda.s@aluno.ufabc.edu.br'),(11528,'CAIO DE OLIVEIRA PARIZ','11201810257','caio.pariz@aluno.ufabc.edu.br'),(11529,'CHARLLES ROCHA DE MORAIS','11201810078','charlles.rocha@aluno.ufabc.edu.br'),(11530,'DAVID PIANURA DA SILVA','11201810096','david.pianura@aluno.ufabc.edu.br'),(11531,'ELIANE NAKANISHI','11201812181','eliane.n@aluno.ufabc.edu.br'),(11532,'FERNANDO ANJOS DOS SANTOS','11201810914','f.anjos@aluno.ufabc.edu.br'),(11533,'GABRIEL DE OLIVEIRA SOUZA','11201811094','gabriel.souza@aluno.ufabc.edu.br'),(11534,'GABRIEL HENRIQUE PEREZ','11201811158','gabriel.perez@aluno.ufabc.edu.br'),(11535,'Gabriel Simplicio Lopes','11201712840','gabriel.simplicio@aluno.ufabc.edu.br'),(11536,'GABRIELA ROMERO MOREIRA','11201810141','gabriela.romero@aluno.ufabc.edu.br'),(11537,'GEOVANNE DA SILVA GUIMARAES','11201810372','geovanne.guimaraes@aluno.ufabc.edu.br'),(11538,'GIULIANA CASSONI','11201812260','giuliana.cassoni@aluno.ufabc.edu.br'),(11539,'GUSTAVO ALEXANDRE MAIA MENESES','11201810052','gustavo.maia@aluno.ufabc.edu.br'),(11540,'GUSTAVO NOVAES LIMA','11201810098','gustavo.novaes@aluno.ufabc.edu.br'),(11541,'INGRID GERMANO DE ARAÚJO','11201822549','g.araujo@aluno.ufabc.edu.br'),(11542,'ISRAEL FIORI CARVALHO DA SILVA SOUZA','11201812277','israel.souza@aluno.ufabc.edu.br'),(11543,'JOAO VITOR GARRIDO','11201811064','joao.garrido@aluno.ufabc.edu.br'),(11544,'JULIA CLAUSON','11201811043','julia.clauson@aluno.ufabc.edu.br'),(11545,'JÚLIA LUCIANO XAVIER','11201822508','julia.xavier@aluno.ufabc.edu.br'),(11546,'LEONARDO DUTRA DE OLIVEIRA','11201811033','leonardo.d@aluno.ufabc.edu.br'),(11547,'LETICIA GABRIELE FERREIRA PEREIRA','11201822502','leticia.gabriele@aluno.ufabc.edu.br'),(11548,'LUCAS MARSAL','11201810308','marsal.lucas@aluno.ufabc.edu.br'),(11549,'MARCELA DERLI DE OLIVEIRA','11201811639','marcela.derli@aluno.ufabc.edu.br'),(11550,'MATHEUS DE PIERI MAIA BEZERRA','11201810017','matheus.pieri@aluno.ufabc.edu.br'),(11551,'MAYARA ALVES DE SOUZA','11201811358','mayara.a@aluno.ufabc.edu.br'),(11552,'RAFAELA CRUZ DE SOUSA','11201810469','rafaela.c@aluno.ufabc.edu.br'),(11553,'REBECA COELHO DIORIO','11201810199','d.rebeca@aluno.ufabc.edu.br'),(11554,'RENAN LUCHIARI PONTES','11201810417','luchiari.renan@aluno.ufabc.edu.br'),(11556,'YASSER SALAH RODRIGUES EL HAGE','11201810754','yasser.hage@aluno.ufabc.edu.br'),(11557,'Alexandre Zeferino Lima','11201720542','alexandre.lima@aluno.ufabc.edu.br'),(11558,'ANDRE LUIZ SILVA ALVES','11201812142','luiz.andre@aluno.ufabc.edu.br'),(11559,'Andryos Mickey Carvalho','11201720220','andryos.carvalho@aluno.ufabc.edu.br'),(11560,'ARTHUR FERREIRA MATHIAS','11201812080','ferreira.mathias@aluno.ufabc.edu.br'),(11561,'BIANCA SENHORINHA COSTA DAVID','11201812236','bianca.costa@aluno.ufabc.edu.br'),(11562,'CAIO AUGUSTO LIMA DE OLIVEIRA','11201810964','oliveira.caio@aluno.ufabc.edu.br'),(11563,'DANIEL FUSER LEITE DA SILVA JUNIOR','11201811845','daniel.fuser@aluno.ufabc.edu.br'),(11565,'GABRIEL TAVARES DE SOUZA','11201811720','g.tavares@aluno.ufabc.edu.br'),(11566,'GABRIEL XAVIER DE OLIVEIRA','11201812179','xavier.g@aluno.ufabc.edu.br'),(11567,'GIULIA MACEDO DOS REIS','11201811558','giulia.macedo@aluno.ufabc.edu.br'),(11568,'GLORIA MARCELA DE BARROS MORAES','11201811297','gloria.marcela@aluno.ufabc.edu.br'),(11569,'Gustavo Reis Muri Cunha','11201722881','reis.cunha@aluno.ufabc.edu.br'),(11570,'Jesse Biscalquim Rodrigues','11201721484','jesse.b@aluno.ufabc.edu.br'),(11571,'JOAO PEDRO SILVA CARDOSO','11201810524','silva.cardoso@aluno.ufabc.edu.br'),(11572,'Joao Victor Amancio','11201721144','joao.amancio@aluno.ufabc.edu.br'),(11573,'LEONARDO ALVES LIMA','11201811327','alves.leonardo@aluno.ufabc.edu.br'),(11574,'LINIKER KENZO HOSHINA','11201812311','liniker.kenzo@aluno.ufabc.edu.br'),(11575,'Maria Olivia Teodoro Santana','11201722018','olivia.santana@aluno.ufabc.edu.br'),(11576,'Matheus Fabiano Trevisan','11201723103','matheus.trevisan@aluno.ufabc.edu.br'),(11577,'MURILO NEVES DE AZEVEDO','11201811629','murilo.azevedo@aluno.ufabc.edu.br'),(11578,'PEDRO HENRIQUE SANTOS SAVELLA','11201812063','pedro.savella@aluno.ufabc.edu.br'),(11579,'PEDRO SERGIO ANDREOTTI NABARRETE','11201811835','pedro.nabarrete@aluno.ufabc.edu.br'),(11580,'Rafael Rocha de Brito','11201722060','rafael.brito@aluno.ufabc.edu.br'),(11581,'RENATA SIMOES DE BRAGANCA ROSA CHAVES','11201812229','renata.braganca@aluno.ufabc.edu.br'),(11582,'TAMIRES PEREIRA DA SILVA','11201811169','tamires.s@aluno.ufabc.edu.br'),(11583,'THOMAS JAMES ZAMORA LOVELOCK','11201811849','thomas.lovelock@aluno.ufabc.edu.br'),(11585,'Vitor Ferrari Pereira','11201720012','ferrari.v@aluno.ufabc.edu.br'),(11586,'WALTER SILVA OLIVEIRA','11201811844','walter.oliveira@aluno.ufabc.edu.br'),(11587,'BRENO GALDINO SOARES','11201810513','breno.soares@aluno.ufabc.edu.br'),(11588,'Danielle Yurie Augusto Custodio','21004313','danielle.custodio@aluno.ufabc.edu.br'),(11589,'EDUARDO DE SOUZA CARRILHO','11201812084','eduardo.carrilho@aluno.ufabc.edu.br'),(11590,'GUILHERME AUGUSTO BARBOSA DOS SANTOS','11201811696','barbosa.guilherme@aluno.ufabc.edu.br'),(11591,'HENRIQUE QUEIROZ REUTER','11201812261','reuter.q@aluno.ufabc.edu.br'),(11592,'JOSE GALVAO NETO','11201810523','jose.g@aluno.ufabc.edu.br'),(11593,'LETICIA MORAES SOUZA','11201810228','moraes.leticia@aluno.ufabc.edu.br'),(11594,'MAYARA MARIA TRIVELONI','11201822543','mayara.triveloni@aluno.ufabc.edu.br'),(11595,'PEDRO HENRIQUE ASSARITO ARAUJO','11201810768','pedro.assarito@aluno.ufabc.edu.br'),(11596,'ANDERSON DOS SANTOS SOARES','11201812280','anderson.s@aluno.ufabc.edu.br'),(11599,'Caique Alisson Santos Ambrosio','11201721793','caique.ambrosio@aluno.ufabc.edu.br'),(11600,'CHRISTIAN RAMOS ARMIJO FUENTES','11201812009','fuentes.christian@aluno.ufabc.edu.br'),(11601,'Diogo de Lima Dantas','11096116','d.dantas@aluno.ufabc.edu.br'),(11602,'Douglas Ferreira de Souza','11099416','ferreira.douglas@aluno.ufabc.edu.br'),(11603,'DOUGLAS HIDEKI YOGI','11201812074','douglas.yogi@aluno.ufabc.edu.br'),(11604,'Duarte Viana dos Santos','11086712','duarte.viana@aluno.ufabc.edu.br'),(11605,'EDUARDO RENESTO ESTANQUIERE','11201810086','eduardo.renesto@aluno.ufabc.edu.br'),(11606,'FELIPE SAMPAIO DE SA','11201811428','f.sa@aluno.ufabc.edu.br'),(11607,'GABRIEL GONCALVES HONORATO DOS SANTOS','11201811691','gabriel.honorato@aluno.ufabc.edu.br'),(11608,'GABRIELA LAUREANO MARIA','11201811523','g.laureano@aluno.ufabc.edu.br'),(11609,'GUILHERME DE SOUSA CORDEIRO','11201811040','cordeiro.guilherme@aluno.ufabc.edu.br'),(11610,'HENRIQUE CECCONI','11201811359','henrique.cecconi@aluno.ufabc.edu.br'),(11611,'INGRID TEIXEIRA PIRES','11201812175','ingrid.teixeira@aluno.ufabc.edu.br'),(11614,'LETICIA NOGUEIRA MARQUES','11201812024','nogueira.marques@aluno.ufabc.edu.br'),(11615,'LUCAS FERREIRA DE OLIVEIRA','11201811273','oliveira.lucas@aluno.ufabc.edu.br'),(11616,'LUCAS RODRIGUES DA SILVA','11201811659','rodrigues.silva@aluno.ufabc.edu.br'),(11617,'MARCELO JOSE DE ABREU MAGALHAES','11201812042','marcelo.abreu@aluno.ufabc.edu.br'),(11618,'MARCIO MASSAMI AUGUSTO DOS SANTOS','11201810585','marcio.massami@aluno.ufabc.edu.br'),(11619,'Marcos Vinicius de Jesus Oliveira','11024416','oliveira.marcos@aluno.ufabc.edu.br'),(11620,'MARIA EDUARDA DE SOUZA DA SILVA','11201810965','silva.eduarda@aluno.ufabc.edu.br'),(11621,'MATHEUS JORGOV JOLLO','11201811997','m.jollo@aluno.ufabc.edu.br'),(11622,'RENAN ZAGO LORIJOLA','11201810622','renan.zago@aluno.ufabc.edu.br'),(11623,'Ricardo Antunes Bassi','11078316','ricardo.bassi@aluno.ufabc.edu.br'),(11624,'TIAGO FELIPE RODRIGUES SANTOS','11201810668','tiago.felipe@aluno.ufabc.edu.br'),(11625,'VINICIUS ALEXANDRE RODRIGUES','11201810586','v.alexandre@aluno.ufabc.edu.br'),(11626,'ALBERTO DANIEL SILVA CAVALCANTE','11201811258','alberto.cavalcante@aluno.ufabc.edu.br'),(11628,'BARBARA RIBEIRO GOMES','11201812228','barbara.g@aluno.ufabc.edu.br'),(11629,'BEATRIZ SANT ANA SANTANA','11201810792','santana.beatriz@aluno.ufabc.edu.br'),(11630,'BERNARDO FIORINI DA SILVA OLIVEIRA','11201810213','bernardo.fiorini@aluno.ufabc.edu.br'),(11631,'Bruna de Sousa Scucsel','11201720960','bruna.scucsel@aluno.ufabc.edu.br'),(11632,'CAIO ANTONIO DA SILVA VENTURA','11201811897','caio.ventura@aluno.ufabc.edu.br'),(11633,'Caio Cedran Colombo','11201722553','cedran.c@aluno.ufabc.edu.br'),(11634,'CAMILA ROCHA RESTIVO','11201810317','camila.restivo@aluno.ufabc.edu.br'),(11635,'CRISTHYAN FERREIRA BRAGA DE ALMEIDA','11201812016','cristhyan.almeida@aluno.ufabc.edu.br'),(11636,'Danielly de Souza Marques','11094616','danielly.marques@aluno.ufabc.edu.br'),(11638,'Estevao Coppini','11201720412','estevao.coppini@aluno.ufabc.edu.br'),(11639,'FABIO HENRIQUE LEIROZ CHAVES','11201811742','fabio.leiroz@aluno.ufabc.edu.br'),(11640,'Gabriel Correia Manso','11201722610','c.gabriel@aluno.ufabc.edu.br'),(11641,'GUILHERME VIEIRA KAO','11201810334','g.kao@aluno.ufabc.edu.br'),(11642,'GUSTAVO MORALES VIEIRA','11201810860','gustavo.morales@aluno.ufabc.edu.br'),(11643,'HENRIQUE CROSTA SIMONE','11201810770','henrique.simone@aluno.ufabc.edu.br'),(11644,'HENRIQUE KUHNEN SAVI','11201810479','h.savi@aluno.ufabc.edu.br'),(11645,'HENRIQUE PIOVANI ORCATTI','11201810685','piovani.orcatti@aluno.ufabc.edu.br'),(11646,'JEFERSON HENRIQUE GONZALES FARIAS','11201811895','gonzales.jeferson@aluno.ufabc.edu.br'),(11647,'JOAO VITOR GOMES PAIVA','11201811519','joao.paiva@aluno.ufabc.edu.br'),(11648,'Jose Augusto Cipriano Guedes','11201822534','guedes.jose@aluno.ufabc.edu.br'),(11649,'JUAN OLIVEIRA DE CARVALHO','11201810997','juan.oliveira@aluno.ufabc.edu.br'),(11650,'LAIS ALVES SARAIVA','11201811416','lais.alves@aluno.ufabc.edu.br'),(11651,'MARIA GABRIELLY CASTRO ABICHABKI','11201811605','maria.abichabki@aluno.ufabc.edu.br'),(11652,'MARIA VITORIA ANTUNES DA SILVA','11201810368','vitoria.antunes@aluno.ufabc.edu.br'),(11653,'MARIA VITORIA DE LUNA MESQUITA','11201811370','luna.vitoria@aluno.ufabc.edu.br'),(11654,'Nicolas Macedo de Castro','21028416','nicolas.macedo@aluno.ufabc.edu.br'),(11655,'PATRICK SIEWERDT QUEIROZ','11201811984','patrick.siewerdt@aluno.ufabc.edu.br'),(11656,'PEDRO LUCAS DIAS DOS SANTOS','11201811328','pedro.lucas@aluno.ufabc.edu.br'),(11657,'PIETRO PROGETTI','11201810359','pietro.progetti@aluno.ufabc.edu.br'),(11658,'RAFAEL MALFI DA SILVA','11201810103','r.malfi@aluno.ufabc.edu.br'),(11659,'RAPHAEL RAZORI CAMPOS','11201812091','raphael.razori@aluno.ufabc.edu.br'),(11661,'RUAN DUARTE VIEIRA','11201811896','vieira.duarte@aluno.ufabc.edu.br'),(11662,'RUAN VIEIRA GALHARDO','11201811559','galhardo.ruan@aluno.ufabc.edu.br'),(11664,'Tais Lima Castro','11201811491','t.castro@aluno.ufabc.edu.br'),(11666,'VICENTE HENRIQUE DA SILVA FILGUEIRA','11201810943','vicente.filgueira@aluno.ufabc.edu.br'),(11667,'VICTOR ENZO YONEMOTO','11201812078','victor.yonemoto@aluno.ufabc.edu.br'),(11668,'ALICE SAMARA DA SILVA','11201822493','alice.s@aluno.ufabc.edu.br'),(11669,'ANA LUIZA FIORAVANTE DI SCIASCIO','11201810627','ana.fioravante@aluno.ufabc.edu.br'),(11670,'ANDRE LUIZ CARPINELLI','11201811851','andre.carpinelli@aluno.ufabc.edu.br'),(11671,'BARBARA LEONIDAS GAUDENCIO','11201810742','barbara.leonidas@aluno.ufabc.edu.br'),(11672,'BRUNO OTERO TERRALHEIRO','11201811885','bruno.otero@aluno.ufabc.edu.br'),(11673,'CAIO DE OLIVEIRA CYRINO','11201811008','caio.cyrino@aluno.ufabc.edu.br'),(11674,'CAMILA NAOMI TAMINATO','11201822484','camila.naomi@aluno.ufabc.edu.br'),(11675,'FABRICIO ANIBAL PINHEIRO ALVES','11201811980','fabricio.alves@aluno.ufabc.edu.br'),(11676,'FELIPE DE SOUZA TIOZO','11201822483','felipe.tiozo@aluno.ufabc.edu.br'),(11677,'FELIPE OLIVEIRA SILVA','11201822479','felipeo.silva@aluno.ufabc.edu.br'),(11678,'FILIPE GOMES RODRIGUES','11201811348','filipe.rodrigues@aluno.ufabc.edu.br'),(11679,'GIOVANNI RODRIGUES DIAS','11201810092','giovanni.dias@aluno.ufabc.edu.br'),(11680,'GUILHERME MAFRA DA SILVA','11201811433','guilherme.mafra@aluno.ufabc.edu.br'),(11681,'GUSTAVO BATISTA FARIA CANO','11201810796','gustavo.cano@aluno.ufabc.edu.br'),(11682,'GUSTAVO PRADO DE FREITAS','11201810877','p.gustavo@aluno.ufabc.edu.br'),(11683,'HENRIQUE GURGEL DE ALMEIDA','11201810956','h.gurgel@aluno.ufabc.edu.br'),(11684,'JOAO PEDRO RONDON DA SILVA','11201810864','joao.rondon@aluno.ufabc.edu.br'),(11685,'JOAO VITOR NOBRE CLARINDO','11201811069','joao.nobre@aluno.ufabc.edu.br'),(11686,'JULIA DE HOLANDA POLETTO','11201822448','holanda.poletto@aluno.ufabc.edu.br'),(11687,'JULIA TOLEDO FIGUEIREDO','11201810934','julia.t@aluno.ufabc.edu.br'),(11688,'LEONARDO DE OLIVEIRA SALES','11201822481','leonardo.sales@aluno.ufabc.edu.br'),(11689,'LEONARDO GOMIERO CAPELA CAPOCCIA','11201812206','leonardo.gomiero@aluno.ufabc.edu.br'),(11690,'LUCAS MORENO','11201810738','lucas.moreno@aluno.ufabc.edu.br'),(11691,'NICOLAS VASCONCELOS CLE CHENRUN','11201810798','nicolas.chenrun@aluno.ufabc.edu.br'),(11692,'PAULO HENRIQUE GUILHERME COUTINHO','11201811010','paulo.coutinho@aluno.ufabc.edu.br'),(11693,'RAFAELA FARTO DE CAMARGO FERNANDES','11201810435','rafaela.farto@aluno.ufabc.edu.br'),(11694,'ROGERIO FONSECA DE FRANCA','11201810609','r.franca@aluno.ufabc.edu.br'),(11695,'SERGIO BARBOSA JUNIOR','11201810681','sergio.barbosa@aluno.ufabc.edu.br'),(11696,'THAINA LETICIA DOURADO MOURA','11201810673','thaina.moura@aluno.ufabc.edu.br'),(11697,'TIAGO HENRIQUE SIMIONATO MACHADO','11201810899','tiago.simionato@aluno.ufabc.edu.br'),(11698,'ANA BEATRIZ ARAUJO','11201810861','ana.b@aluno.ufabc.edu.br'),(11699,'ANA CLAUDIA TORRES ALVARENGA','11201811408','ana.alvarenga@aluno.ufabc.edu.br'),(11700,'ANA LIVIAN CARVALHO AOKI','11201810073','livian.ana@aluno.ufabc.edu.br'),(11701,'BARBARA KOLLAR VIEIRA DA SILVA','11201811990','barbara.kollar@aluno.ufabc.edu.br'),(11702,'BRUNA CAVALCANTI BRUMATTI','11201811137','bruna.b@aluno.ufabc.edu.br'),(11703,'BRUNO FRANCISCO RODRIGUES MAFRA','11201811147','bruno.mafra@aluno.ufabc.edu.br'),(11704,'BRUNO NARDI LOPES CALCAS','11201811369','bruno.calcas@aluno.ufabc.edu.br'),(11705,'ERICK HENRIQUE SILVA','11201812308','erick.henrique@aluno.ufabc.edu.br'),(11706,'FRANKLIN ELSON CUSTODIO DE ABREU','11201811062','franklin.elson@aluno.ufabc.edu.br'),(11707,'Gabriel Fiore Daquila de Souza','11201721152','fiore.daquila@aluno.ufabc.edu.br'),(11708,'GABRIEL MORAES DE SOUZA','11201811286','gabriel.moraes@aluno.ufabc.edu.br'),(11709,'GABRIELA DE OLIVEIRA PIEDADE','11201810088','gabriela.piedade@aluno.ufabc.edu.br'),(11710,'GIULIANO BUSATTO PERASOLO','11201811787','giuliano.perasolo@aluno.ufabc.edu.br'),(11711,'GUILHERME SILVA DE ALMEIDA','11201810077','almeida.guilherme@aluno.ufabc.edu.br'),(11713,'GUSTAVO SILVA ROCHA','11201811679','gustavo.rocha@aluno.ufabc.edu.br'),(11714,'HENRIQUE KENJI OKUTANI','11201811103','henrique.kenji@aluno.ufabc.edu.br'),(11715,'HENRIQUE LEITE DE SA OLIVEIRA','11201811274','henrique.leite@aluno.ufabc.edu.br'),(11716,'ISABELA LEOPOLDINO CONTI','11201811574','isabela.conti@aluno.ufabc.edu.br'),(11717,'JEFERSON MARQUES DE MENEZES','11201810151','j.menezes@aluno.ufabc.edu.br'),(11718,'JESSIKA KAREM CASTRO OLIVEIRA','11201811760','jessika.castro@aluno.ufabc.edu.br'),(11719,'LARISSA MARTINS NUNES DE OLIVEIRA','11201812178','larissa.martins@aluno.ufabc.edu.br'),(11720,'LEONARDO DE CARVALHO PORTA','11201811890','leonardo.porta@aluno.ufabc.edu.br'),(11721,'Leonardo Yoji Oura','21067916','yoji.oura@aluno.ufabc.edu.br'),(11722,'LUCAS DOS SANTOS MANO','11201812048','lucas.mano@aluno.ufabc.edu.br'),(11723,'LUCAS FERNANDO ASSUNCAO OMENA','11201811079','lucas.omena@aluno.ufabc.edu.br'),(11724,'LUCAS HERNANDES NUNES DA SILVA','11201811719','lucas.hernandes@aluno.ufabc.edu.br'),(11725,'LUCAS MOURA DE ALMEIDA','11201811415','moura.almeida@aluno.ufabc.edu.br'),(11726,'Mariana Cristina Silva Fagundes','21064516','mariana.fagundes@aluno.ufabc.edu.br'),(11727,'MATHEUS BERTOLUCCI','11201812113','m.bertolucci@aluno.ufabc.edu.br'),(11729,'RAFAEL MASSATOSHI UKEI','11201811186','ukei.rafael@aluno.ufabc.edu.br'),(11732,'Roberto Inacio Rosa','11201811886','roberto.inacio@aluno.ufabc.edu.br'),(11733,'ROBSON SILVA DOS SANTOS','11201812017','silva.robson@aluno.ufabc.edu.br'),(11734,'VICTORIA AKEMI OSAKI','11201810987','victoria.akemi@aluno.ufabc.edu.br'),(11735,'VICTORIA REYERO FERREIRA','11201812127','victoria.reyero@aluno.ufabc.edu.br'),(11736,'Vinicius Vasconcelos Luperini','11201822436','vinicius.luperini@aluno.ufabc.edu.br'),(11737,'VITORIA CAUZZO','11201810287','v.cauzzo@aluno.ufabc.edu.br'),(11738,'Adan Alves Siqueira','11001816','adan.siqueira@aluno.ufabc.edu.br'),(11739,'ANDRE MENEGHELLI VALE','11201811311','a.vale@aluno.ufabc.edu.br'),(11740,'Andre Soares Procopio Ferreira','11106211','asoares@aluno.ufabc.edu.br'),(11741,'BEATRIZ FONTERRADA VOLPE','11201811604','beatriz.volpe@aluno.ufabc.edu.br'),(11742,'BRENO FURLANETO HORVATH','11201811676','breno.horvath@aluno.ufabc.edu.br'),(11743,'Danilo de Araujo Tabatini','11201811462','danilo.tabatini@aluno.ufabc.edu.br'),(11744,'Felipe Almeida de Freitas','11201721072','felipe.almeida@aluno.ufabc.edu.br'),(11745,'Fernanda de Melo Siniscalchi','11020016','fernanda.s@aluno.ufabc.edu.br'),(11746,'Gabriel dos Santos Siqueira','11201721924','g.siqueira@aluno.ufabc.edu.br'),(11747,'Gabriel Lima Zambianco Barros','11201722750','zambianco.gabriel@aluno.ufabc.edu.br'),(11748,'Giovana Barbosa Nascimento','11201721136','nascimento.giovana@aluno.ufabc.edu.br'),(11749,'GUILHERME DOS ANJOS MORGADO','11201810748','guilherme.morgado@aluno.ufabc.edu.br'),(11750,'HEBER MACIEL SANEFUJI','11201810495','heber.sanefuji@aluno.ufabc.edu.br'),(11751,'Joao Pedro Oliveira Mieza','11201721960','joao.mieza@aluno.ufabc.edu.br'),(11752,'JOAO VICTOR DOS SANTOS MELQUES FERREIRA','11201810156','joao.melques@aluno.ufabc.edu.br'),(11753,'Leonardo Gonzalez Carlini','21040316','l.carlini@aluno.ufabc.edu.br'),(11754,'Lineker Leao Rocha','11201721038','lineker.rocha@ufabc.edu.br'),(11755,'LUCAS LOPES AGUIAR','11201812275','lopes.aguiar@aluno.ufabc.edu.br'),(11756,'Matheus Felipe da Silva Sabara','21063016','matheus.sabara@aluno.ufabc.edu.br'),(11757,'NATHAN BATISTA DE ARAUJO','11201811482','a.nathan@aluno.ufabc.edu.br'),(11758,'ROBERTO ALVES ROSA','11201810031','roberto.rosa@aluno.ufabc.edu.br'),(11759,'Thais Pacheco Lima','21063913','thais.pacheco@aluno.ufabc.edu.br'),(11760,'VICTORIA CUSTODIO','11201811136','custodio.v@aluno.ufabc.edu.br'),(11761,'ACOLON CAPONI DE CAIRES SILVA','11201811685','acolon.caponi@aluno.ufabc.edu.br'),(11762,'ANDRE SANTOS FERREIRA','11201811106','ferreira.santos@aluno.ufabc.edu.br'),(11763,'Arthur Pellegrini Guereschi','11020616','arthur.guereschi@aluno.ufabc.edu.br'),(11764,'BEATRIZ PRADO DE LIMA RAMOS','11201810628','beatriz.ramos@aluno.ufabc.edu.br'),(11765,'BRUNO OLIVEIRA BEZERRA','11201810119','b.bezerra@aluno.ufabc.edu.br'),(11766,'BRUNO SANTOS DE OLIVEIRA','11201811061','b.santos@aluno.ufabc.edu.br'),(11767,'DANILO SANCHES FERME','11201811373','danilo.ferme@aluno.ufabc.edu.br'),(11768,'DEBORA VILELA BUENO','11201812044','debora.vilela@aluno.ufabc.edu.br'),(11769,'ELIAS DA CRUZ SOARES','11201811184','cruz.soares@aluno.ufabc.edu.br'),(11770,'GABRIEL ALVES FERREIRA','11201811655','alves.g@aluno.ufabc.edu.br'),(11771,'GABRIEL CARDOSO FAVA','11201812058','g.cardoso@aluno.ufabc.edu.br'),(11772,'Gabriel Demarchi Maia','11201722767','maia.gabriel@aluno.ufabc.edu.br'),(11773,'GABRIEL MACHIAVELLI DE LIMA','11201811957','g.machiavelli@aluno.ufabc.edu.br'),(11774,'GUILHERME DE MENEZES BONFIM','11201811867','guilherme.bonfim@aluno.ufabc.edu.br'),(11775,'HILLARY CRISTINA DE ARRUDA MORGADO','11201811641','hillary.arruda@aluno.ufabc.edu.br'),(11776,'ISAQUE LEANDRO MARTINS MACHADO','11201811293','machado.isaque@aluno.ufabc.edu.br'),(11777,'JENNIFER TAUANE RODRIGUES GONCALVES ROSA','11201810065','jennifer.rodrigues@aluno.ufabc.edu.br'),(11778,'JOAO PAULO CRUZ DOS REIS','11201810878','reis.joao@aluno.ufabc.edu.br'),(11779,'JOAO PEDRO DA SILVA DE SOUZA','11201810283','silva.souza@aluno.ufabc.edu.br'),(11780,'JORGE HENRIQUE DA SILVA GOMES','11201812043','jorge.henrique@aluno.ufabc.edu.br'),(11781,'JULIA FERNANDA SILVA JORGE','11201812073','julia.fernanda@aluno.ufabc.edu.br'),(11782,'Leonardo Oliveira Santos','11201721629','o.leonardo@aluno.ufabc.edu.br'),(11783,'LEONARDO PRASINOS BERNAL','11201811378','leonardo.bernal@aluno.ufabc.edu.br'),(11784,'Leonardo Tartarotti Morgan','11201722990','leonardo.morgan@aluno.ufabc.edu.br'),(11785,'LUIS HENRIQUE NEVES FERRARI','11201812241','luis.ferrari@aluno.ufabc.edu.br'),(11786,'Marco Aurelio Benzak Medeiros da Silva','11201722734','marco.benzak@aluno.ufabc.edu.br'),(11787,'Pedro Dundes Rodrigues Xavier Souza','11201722275','pedro.dundes@aluno.ufabc.edu.br'),(11788,'PEDRO TERSETTI FREIDINGER','11201810093','pedro.tersetti@aluno.ufabc.edu.br'),(11789,'Tainara Quirino do Nascimento','11201723100','tainara.q@aluno.ufabc.edu.br'),(11790,'VICTOR SOUZA LOPES DE COUTO','11201810561','victor.couto@aluno.ufabc.edu.br'),(11813,'ALBERTHO ATILA PEREIRA COSTA','11201811442','albertho.costa@aluno.ufabc.edu.br'),(11814,'ARIADNE AUGUSTO','11201811285','ariadne.a@aluno.ufabc.edu.br'),(11815,'BEATRIZ MIEKO KOMORIZONO','11201810635','k.mieko@aluno.ufabc.edu.br'),(11816,'BLENDA GABRIELA FREITAS LUSTOSA FROTA','11201810046','blenda.lustosa@aluno.ufabc.edu.br'),(11817,'DOUGLAS MORADO RODRIGUES','11201811528','douglas.morado@aluno.ufabc.edu.br'),(11818,'ESTHER NASCIMENTO','11201811739','esther.nascimento@aluno.ufabc.edu.br'),(11819,'FELIPE PELLEGRINO DE SOUZA','11201810652','felipe.pellegrino@aluno.ufabc.edu.br'),(11820,'GABRIEL AUGUSTO','11201811975','g.augusto@aluno.ufabc.edu.br'),(11821,'GUILHERME DE LIMA LOPES','11201811602','guilherme.lopes@aluno.ufabc.edu.br'),(11822,'GUILHERME LIMA VENTRE','11201811663','lima.ventre@aluno.ufabc.edu.br'),(11823,'HIGOR BRAZ DA SILVA','11201810691','braz.h@aluno.ufabc.edu.br'),(11824,'JÉSSICA MACHADO DE SOUZA','11201822447','machado.jessica@aluno.ufabc.edu.br'),(11825,'JOAO PEDRO GENGA CARNEIRO','11201810740','joao.genga@aluno.ufabc.edu.br'),(11826,'JORGE VINICIUS NASCIMENTO LAMAR','11201811668','jorge.lamar@aluno.ufabc.edu.br'),(11827,'JULIA LANCI RODRIGUES','11201810594','lanci.rodrigues@aluno.ufabc.edu.br'),(11828,'LEANDRO DE OLIVEIRA MORAIS','11201812015','morais.leandro@aluno.ufabc.edu.br'),(11829,'LEONARDO DE ASSIS BERLOFA','11201811037','l.berlofa@aluno.ufabc.edu.br'),(11830,'Leonardo de Mello Nakamura','11201810472','mello.nakamura@aluno.ufabc.edu.br'),(11831,'LETICIA SANTOS GALHA','11201811571','leticia.galha@aluno.ufabc.edu.br'),(11832,'LUANA OGATA MOURA','11201810579','luana.ogata@aluno.ufabc.edu.br'),(11833,'LUCAS CHAKMAKIAN YASUOKA','11201811045','lucas.yasuoka@aluno.ufabc.edu.br'),(11834,'LUCAS DE ALMEIDA DUCATTI','11201811569','l.ducatti@aluno.ufabc.edu.br'),(11835,'LUCAS POLO CHIANG','11201811096','l.chiang@aluno.ufabc.edu.br'),(11836,'LUCAS TEDIM ANDRADE','11201812147','lucas.tedim@aluno.ufabc.edu.br'),(11837,'MELYSIE ROCHO DOS SANTOS','11201810690','melysie.rocho@aluno.ufabc.edu.br'),(11838,'MILENA VALLONE POTT','11201810634','pott.m@aluno.ufabc.edu.br'),(11839,'NATASHA ANDRADE HAMADA','11201812157','natasha.hamada@aluno.ufabc.edu.br'),(11840,'SAMIR CARVALHO SANTOS','11201812161','samir.c@aluno.ufabc.edu.br'),(11841,'SANDY MARIA BARROSO DO NASCIMENTO','11201811732','sandy.nascimento@aluno.ufabc.edu.br'),(11842,'WILLIAM YUJI KIMURA','11201810463','william.kimura@aluno.ufabc.edu.br'),(11865,'ALYSON MAGALHAES OLIVEIRA','11201810898','magalhaes.a@aluno.ufabc.edu.br'),(11866,'ANDERSON COSTA SOARES SILVA','11201810525','soares.silva@aluno.ufabc.edu.br'),(11867,'ANGELICA CAVALHEIRO RODRIGUES','11201811035','angelica.c@aluno.ufabc.edu.br'),(11869,'Caroline Aki Ishii','11201721927','caroline.aki@aluno.ufabc.edu.br'),(11870,'Charles Willians Gomes Soares','11201722541','charles.soares@aluno.ufabc.edu.br'),(11871,'DIEGO GUERRA','11201810534','diego.guerra@aluno.ufabc.edu.br'),(11872,'FERNANDO HENRIQUE CASTILLO PONTES','11201810577','fernando.pontes@aluno.ufabc.edu.br'),(11873,'Flavia de Castro Berto','11094016','f.castro@aluno.ufabc.edu.br'),(11874,'GABRIEL DOS SANTOS BOTELHO','11201810709','gabriel.botelho@aluno.ufabc.edu.br'),(11875,'Giovane da Silva Dias','11009616','giovane.d@aluno.ufabc.edu.br'),(11876,'GUSTAVO HOFMANN DE FREITAS','11201810682','g.hofmann@aluno.ufabc.edu.br'),(11877,'HENRIQUE REGATIERI RODRIGUES','11201811509','henrique.regatieri@aluno.ufabc.edu.br'),(11878,'Hericsen Batistela Boschetti','11037015','h.boschetti@aluno.ufabc.edu.br'),(11879,'ISABELA CARDOSO LIMA','11201810874','isabela.lima@aluno.ufabc.edu.br'),(11880,'IVAN PEDROSO','11201811404','pedroso.ivan@aluno.ufabc.edu.br'),(11881,'JOAO PEDRO SCHIMIDT MANTOVANI','11201811189','joao.mantovani@aluno.ufabc.edu.br'),(11882,'JULIA YOKO LOPES YAMAGUTI','11201810554','julia.yoko@aluno.ufabc.edu.br'),(11883,'Juliane de Souza Nobrega','11201721736','juliane.n@aluno.ufabc.edu.br'),(11884,'Kelvin de Santa Rosa Paula','11201722394','kelvin.paula@aluno.ufabc.edu.br'),(11885,'LARYSSA DA SILVA DE SOUZA','11201810068','silva.laryssa@aluno.ufabc.edu.br'),(11886,'LEONARDO IDALGO NATALINO','11201811952','leonardo.idalgo@aluno.ufabc.edu.br'),(11887,'LUAN MILAGRE VIEIRA','11201810660','luan.milagre@aluno.ufabc.edu.br'),(11888,'LUCAS COSTA SOARES SILVA','11201810526','costa.lucas@aluno.ufabc.edu.br'),(11889,'RAPHAEL ACIOLE PAZINI','11201810203','raphael.pazini@aluno.ufabc.edu.br'),(11890,'SAMUEL BRITO DA SILVA','11201810515','samuel.brito@aluno.ufabc.edu.br'),(11891,'Victor da Silva Valverdes','11201811032','victor.valverdes@aluno.ufabc.edu.br'),(11892,'Victor Hugo Carvalho de Barros','11115616','barros.victor@aluno.ufabc.edu.br'),(11893,'Vinicius de Souza Rodrigues','11093216','vinicius.rodrigues@aluno.ufabc.edu.br'),(11894,'Vinicius Pontes Mota de Oliveira','11201722483','vinicius.pontes@aluno.ufabc.edu.br'),(11895,'FABRICIO HENRIQUE DE SOUZA','11201810639','fabricio.henrique@aluno.ufabc.edu.br'),(11896,'Nathan Kamikata','11078615','nathan.kamikata@aluno.ufabc.edu.br'),(11897,'LUDMILA ANGELIM SILVA','11201811529','ludmila.silva@aluno.ufabc.edu.br'),(11898,'DEBORA RIBEIRO ALVES','11201810935','debora.alves@aluno.ufabc.edu.br'),(11899,'Henrique Mendonca Rodrigues','11201721172','h.rodrigues@aluno.ufabc.edu.br'),(11900,'Camila da Cunha Cetra','11201722134','ccetra@aluno.ufabc.edu.br'),(11901,'GUSTAVO COSTA OLIVEIRA','11201812363','costa.oliveira@aluno.ufabc.edu.br'),(11902,'Fernanda da Silva Alves','11201722749','fernanda.a@aluno.ufabc.edu.br'),(11903,'LEONARDO BESERRA DA SILVA','11201810330','leonardo.beserra@aluno.ufabc.edu.br'),(11906,'Igor Andrade Fernandes','11201722263','i.andrade@aluno.ufabc.edu.br'),(11907,'Alex de Marins Malta','11201722176','alex.malta@aluno.ufabc.edu.br'),(11909,'Viviane Copede','11201722075','viviane.copede@aluno.ufabc.edu.br'),(11910,'Bruna Tavares Kumayama','21080213','bruna.tavares@aluno.ufabc.edu.br'),(11912,'ISABELLA SANTOS RODRIGUES PAULINO','11201810420','isabella.paulino@aluno.ufabc.edu.br'),(11913,'Katiele Renata Alves Santana','21049615','katiele.santana@aluno.ufabc.edu.br'),(11914,'LUIS GUILHERME LOPES SANTANA','11201811413','luis.guilherme@aluno.ufabc.edu.br'),(11915,'Pedro Marques Chicharo','11201721834','pedro.chicharo@aluno.ufabc.edu.br'),(11917,'FABRICIO HENRIQUE DE SOUZA','11201810639','fabricio.henrique@aluno.ufabc.edu.br'),(11918,'Nathan Kamikata','11078615','nathan.kamikata@aluno.ufabc.edu.br'),(11919,'LUDMILA ANGELIM SILVA','11201811529','ludmila.silva@aluno.ufabc.edu.br'),(11920,'DEBORA RIBEIRO ALVES','11201810935','debora.alves@aluno.ufabc.edu.br'),(11921,'Henrique Mendonca Rodrigues','11201721172','h.rodrigues@aluno.ufabc.edu.br'),(11922,'Camila da Cunha Cetra','11201722134','ccetra@aluno.ufabc.edu.br'),(11923,'GUSTAVO COSTA OLIVEIRA','11201812363','costa.oliveira@aluno.ufabc.edu.br'),(11924,'Fernanda da Silva Alves','11201722749','fernanda.a@aluno.ufabc.edu.br'),(11925,'LEONARDO BESERRA DA SILVA','11201810330','leonardo.beserra@aluno.ufabc.edu.br'),(11928,'Igor Andrade Fernandes','11201722263','i.andrade@aluno.ufabc.edu.br'),(11929,'Alex de Marins Malta','11201722176','alex.malta@aluno.ufabc.edu.br'),(11931,'Viviane Copede','11201722075','viviane.copede@aluno.ufabc.edu.br'),(11932,'Bruna Tavares Kumayama','21080213','bruna.tavares@aluno.ufabc.edu.br'),(11934,'ISABELLA SANTOS RODRIGUES PAULINO','11201810420','isabella.paulino@aluno.ufabc.edu.br'),(11935,'Katiele Renata Alves Santana','21049615','katiele.santana@aluno.ufabc.edu.br'),(11936,'LUIS GUILHERME LOPES SANTANA','11201811413','luis.guilherme@aluno.ufabc.edu.br'),(11937,'Pedro Marques Chicharo','11201721834','pedro.chicharo@aluno.ufabc.edu.br'),(11939,'Carolina Rosa Villegas','11201810183','carolina.villegas@aluno.ufabc.edu.br'),(11940,'Endy Rodrigues de Almeida','11201810066','endy.a@aluno.ufabc.edu.br'),(11941,'Felipe Zanzin de Franca','11201812097','felipe.zanzin@aluno.ufabc.edu.br'),(11942,'Gabriel Alves','11201812067','a.gabriel@aluno.ufabc.edu.br'),(11943,'Gabriel Dias Ribeiro','11201812117','d.gabriel@aluno.ufabc.edu.br'),(11944,'Gabriela Iramina Gomes','11201811979','gabriela.i@aluno.ufabc.edu.br'),(11945,'Gustavo Barbosa Ferreira','11201811374','g.barbosa@aluno.ufabc.edu.br'),(11946,'Gustavo Del Rio Lima','11201810215','gustavo.rio@aluno.ufabc.edu.br'),(11947,'Isabela Barboza Gomes','11201812238','isabela.barboza@aluno.ufabc.edu.br'),(11948,'Jose Roberto Mendonza Correia','11201810319','roberto.mendonza@aluno.ufabc.edu.br'),(11949,'Kezia Accioly Andrade Matos','11201822461','kezia.accioly@aluno.ufabc.edu.br'),(11950,'Lara Mei Honda','11201812002','lara.honda@aluno.ufabc.edu.br'),(11952,'Leticia Monteiro Matias','11201812253','l.matias@aluno.ufabc.edu.br'),(11953,'Lidia Nataly Rosa Silva','11201811889','lidia.nataly@aluno.ufabc.edu.br'),(11954,'Matheus Rodrigues de Amorim Medina','11201812105','matheus.medina@aluno.ufabc.edu.br'),(11955,'Mauricio Gallego Ferreira Julio','11201822462','mauricio.julio@aluno.ufabc.edu.br'),(11956,'Pablo Enrique Alves Wong','11201811891','pablo.wong@aluno.ufabc.edu.br'),(11957,'Raul Junior Assis Costa','11201721703','assis.costa@aluno.ufabc.edu.br'),(11958,'Raynnie Pereira da Costa','11201822397','raynnie.pereira@ufabc.edu.br'),(11959,'Samuel Pedro Pereira Silveira','11201810087','samuel.silveira@aluno.ufabc.edu.br'),(11960,'Stefania Helen Dourado','11201811951','stefania.dourado@aluno.ufabc.edu.br'),(11961,'Vitor Inacio da Silva','11201810048','inacio.vitor@aluno.ufabc.edu.br'),(11989,'Alexandre Simoes de Lima','11201811638','alexandre.simoes@aluno.ufabc.edu.br'),(11990,'Ana Carolina Vaz','11201822474','ana.vaz@aluno.ufabc.edu.br'),(11991,'Bruno dos Santos Mamedio Rodrigues','11201811263','bruno.mamedio@aluno.ufabc.edu.br'),(11992,'Carlos Henrique Silva Magalhaes','11201810261','carlos.magalhaes@aluno.ufabc.edu.br'),(11993,'Denis Lima Alves Machado','11201811305','denis.machado@aluno.ufabc.edu.br'),(11994,'Eduardo Takakuwa Capp','11201811268','e.capp@aluno.ufabc.edu.br'),(11995,'Erick Rodrigues Ueoka','11201811958','erick.ueoka@aluno.ufabc.edu.br'),(11996,'Fernanda Rafaela Salgado Selle','11201722585','fernanda.selle@aluno.ufabc.edu.br'),(11997,'Gabriel Ugarte Silva','11201810587','g.ugarte@aluno.ufabc.edu.br'),(11998,'Gianmarco Vinicius Franceschetti','11201811894','g.franceschetti@aluno.ufabc.edu.br'),(11999,'Giulia Bonadio Lisboa','11201812310','bonadio.lisboa@aluno.ufabc.edu.br'),(12000,'Irrai Costa Silva Rodrigues','12201912063','irrai.rodrigues@aluno.ufabc.edu.br'),(12001,'Lais Helene Kalil Vassilopoulos','11201722631','lais.vassilopoulos@aluno.ufabc.edu.br'),(12002,'Larissa Santos Santana','21053514','l.santana@aluno.ufabc.edu.br'),(12003,'Livia Bastos As','11201812368','livia.bastos@aluno.ufabc.edu.br'),(12004,'Lorenzo Cyriacope Fragassi','11201811544','fragassi.lorenzo@aluno.ufabc.edu.br'),(12005,'Paulo Henrique de Aquino Martins','11201810519','aquino.martins@aluno.ufabc.edu.br'),(12006,'Thiago Hideki Tsutiya Guenka','11201811680','thiago.tsutiya@aluno.ufabc.edu.br'),(12007,'Tiago Ferreira Santos','11201722738','tiago.s@aluno.ufabc.edu.br'),(12008,'Victor Branseler Sutti','11201810118','sutti.v@aluno.ufabc.edu.br'),(12009,'Victoria Bircke Goncalves de Souza','11201811077','bircke.victoria@aluno.ufabc.edu.br'),(12010,'Yasmin Martinez Peres','11201720162','yasmin.peres@aluno.ufabc.edu.br'),(12015,'Leandro Teodoro Junior','11122215','teoolt.bio@gmail.com'),(12016,'Teodoro J','11122216','teoolt.bio2@gmail.com'),(12682,'Leandro Teodoro','11122215','teoolt.bio@gmail.com'),(12713,'Caio de Cristo Silva','11201722820','caio.cristo@aluno.ufabc.edu.br'),(12714,'ELZA CRISTINA SARGES SENE','11201812359','elza.sene@aluno.ufabc.edu.br'),(12715,'ENZO SHIRAISHI NUNES DA SILVA','11201822545','enzo.shiraishi@aluno.ufabc.edu.br'),(12716,'FELIPE HENRIQUE ARAUJO CARDOSO','11201811300','cardoso.felipe@aluno.ufabc.edu.br'),(12717,'GABRIEL NIGRO GARBELINI','11201810443','gabriel.nigro@aluno.ufabc.edu.br'),(12718,'IAN ROSSETTO COSTA','11201812215','rossetto.costa@aluno.ufabc.edu.br'),(12720,'ISADORA CAMPAGNER DE BARROS','11201822455','isadora.campagner@aluno.ufabc.edu.br'),(12721,'JOSE ROBERTO ABREU DE CARVALHO','11201810298','jose.carvalho@aluno.ufabc.edu.br'),(12722,'Kaissa Viana Arauna Fagundes','11114816','kaissa.fagundes@aluno.ufabc.edu.br'),(12723,'LAYSE ALVES SAVORDELLI','11201822472','layse.savordelli@aluno.ufabc.edu.br'),(12724,'Lucas Felipe Silva','11201720494','felipe.lucas@aluno.ufabc.edu.br'),(12726,'Melissa Gabriely Santamarina Simoes','11201721322','melissa.gabriely@aluno.ufabc.edu.br'),(12727,'Michael Sergio da Silva','13201910081','michael.sergio@aluno.ufabc.edu.br'),(12728,'Natalia de Oliveira Tobias','11201722214','natalia.tobias@aluno.ufabc.edu.br'),(12729,'PALOMA ALVES DIAS','11201811854','paloma.dias@aluno.ufabc.edu.br'),(12731,'Rodrigo de Melo Barbosa','11201721298','b.rodrigo@aluno.ufabc.edu.br'),(12732,'Rodrigo Dias Paes Landim','11201722040','rodrigo.landim@aluno.ufabc.edu.br'),(12733,'Romeu Lorandi Neto','11057415','romeu.neto@aluno.ufabc.edu.br'),(12734,'THAIS CAROLINE GONCALVES','11201810797','thais.goncalves@aluno.ufabc.edu.br'),(12735,'THALES MORAES PEREIRA','11201812245','thales.m@aluno.ufabc.edu.br'),(12736,'Thiago Faustino','11093416','thiago.faustino@aluno.ufabc.edu.br'),(12737,'VANESSA DA SILVA TANAJURA','11201810708','vanessa.tanajura@aluno.ufabc.edu.br'),(12738,'Victor Santos Araujo Silva','11105016','santos.victor@aluno.ufabc.edu.br'),(12739,'Victoria Caroline de Moura','11201720102','v.moura@aluno.ufabc.edu.br'),(12740,'Victoria Hannah de Castro','11201722545','victoria.hannah@aluno.ufabc.edu.br'),(12741,'Victoria Rossetto Costa','11201720480','victoria.rossetto@aluno.ufabc.edu.br'),(12742,'Vitor Felix do Nascimento','11201722021','vitor.f@aluno.ufabc.edu.br'),(12743,'Acsa Santos Sousa','11201721630','a.sousa@aluno.ufabc.edu.br'),(12744,'Adriano da Silva Ribeiro','21087314','adriano.ribeiro@aluno.ufabc.edu.br'),(12745,'Adriano Franca do Amaral','11201922014','franca.amaral@aluno.ufabc.edu.br'),(12746,'AILA SILVEIRA CAMARA','11201810101','camara.aila@aluno.ufabc.edu.br'),(12747,'Alex Ferreira de Souza','11119614','alex.f@aluno.ufabc.edu.br'),(12748,'Barbara Silvestre Simioni','21072216','barbara.simioni@aluno.ufabc.edu.br'),(12750,'BRUNA ALVES DE LIMA','11201810716','bruna.lima@aluno.ufabc.edu.br'),(12754,'Daniel Falssarela da Silva','21087216','daniel.falssarela@aluno.ufabc.edu.br'),(12755,'Debora Bortoletto Ferreira','21084616','debora.bortoletto@aluno.ufabc.edu.br'),(12756,'EDUARDO HENRIQUE MORE BORGES','11201810840','eduardo.henrique@aluno.ufabc.edu.br'),(12758,'FERNANDO SOARES MILITANI','11201810662','fernando.militani@aluno.ufabc.edu.br'),(12759,'Gabriel Victor Bondan','13201910091','gabriel.bondan@aluno.ufabc.edu.br'),(12760,'Gabriela Marul Faleti','11201722555','marul.g@aluno.ufabc.edu.br'),(12761,'Gabriela Silva Pomin','11201723013','g.pomin@aluno.ufabc.edu.br'),(12763,'Henrique Teixeira de Queiroz','11123115','h.queiroz@aluno.ufabc.edu.br'),(12765,'Isaque Leandro dos Santos','21079616','isaque.santos@aluno.ufabc.edu.br'),(12766,'Janaina dos Santos Carvalho','11201722524','janaina.carvalho@aluno.ufabc.edu.br'),(12767,'Jhawison Roswilin Bezerra de Sousa','11201721819','jhawison.roswilin@aluno.ufabc.edu.br'),(12768,'Jonas Martin Goncalves','21084714','j.goncalves@aluno.ufabc.edu.br'),(12769,'Jordan Guimaraes Campos','21047713','jordan.guimaraes@aluno.ufabc.edu.br'),(12771,'JOSE MARIO DOS SANTOS SILVA','11201812322','jose.mario@aluno.ufabc.edu.br'),(12772,'Julio Cesar Cabral','11201721798','julio.cabral@aluno.ufabc.edu.br'),(12773,'Kleiton Aliandro','21066113','kleiton.aliandro@aluno.ufabc.edu.br'),(12774,'Leandro Moreno da Silva','11084013','leandro.moreno@aluno.ufabc.edu.br'),(12775,'Leticia Ferreira Dias','11120916','f.dias@aluno.ufabc.edu.br'),(12776,'Lucas Ribeiro Gama','11201720370','lucas.gama@aluno.ufabc.edu.br'),(12777,'Lucas Tatsuta de Almeida Rosa','11201921995','lucas.tatsuta@aluno.ufabc.edu.br'),(12778,'Luis Felipe Bortolatto da Cunha','11087914','luis.cunha@aluno.ufabc.edu.br'),(12779,'Luis Henrique de Melo Soares','21057416','henrique.luis@aluno.ufabc.edu.br'),(12780,'Maiara Piaulino do Amaral','21062813','maiara.amaral@aluno.ufabc.edu.br'),(12781,'MARCELA D ADAMO FIGUEIREDO','11201810688','d.marcela@aluno.ufabc.edu.br'),(12782,'Marco Antonio Fernandes Rodriguez','11102114','antonio.fernandes@aluno.ufabc.edu.br'),(12783,'Marco Aurelio Duarte','11049613','marco.duarte@aluno.ufabc.edu.br'),(12784,'Maria Catarina Furukawa Shin','21089416','catarina.shin@aluno.ufabc.edu.br'),(12786,'Oswaldo Lopes Manzaro','21047116','manzaro.oswaldo@aluno.ufabc.edu.br'),(12787,'Pedro Henrique Ortega Bernardes','11201720050','pedro.ortega@aluno.ufabc.edu.br'),(12788,'Rafael Picerni','21024813','rafael.p@aluno.ufabc.edu.br'),(12789,'Renato Amaral Barbosa','21033813','renato.a@aluno.ufabc.edu.br'),(12790,'TAINAN CERQUEIRA NEVES','11201811477','tainan.neves@aluno.ufabc.edu.br'),(12791,'THALITA BARTTOCZ DE ASSIS','11201810273','thalita.barttocz@aluno.ufabc.edu.br'),(12792,'TIAGO KENJI RODRIGUES','11201812313','rodrigues.tiago@aluno.ufabc.edu.br'),(12793,'VINICIUS PESSOA DA SILVA','11201812326','s.pessoa@aluno.ufabc.edu.br'),(12794,'VITOR FELICIO SALEMA','11201811262','vitor.salema@aluno.ufabc.edu.br'),(12795,'Wendell Bertoldo Moreira','11201722777','w.bertoldo@aluno.ufabc.edu.br'),(12796,'YASMIN AZEVEDO RIOS PERALTA','11201812252','yasmin.rios@aluno.ufabc.edu.br'),(13431,'Alexandre Lemes Santos','11201720026',''),(13432,'Alicia Mayumi Wauke','11021716',''),(13433,'Ana Beatriz Rocha da Cunha e Silva','11201722368',''),(13435,'Antonio Carlos Ferreira de Freitas','11039916',''),(13439,'Bruno de Sousa Prado','11201721261',''),(13440,'Bruno Giovanni Birais','11201722980',''),(13441,'Bruno Murakami','11077515',''),(13443,'Camila Rodrigues Bresio','11201722383',''),(13444,'Carolina Paschoalini','11201720658',''),(13445,'Claudio Lucas Appugliese Girotto','11013315',''),(13447,'David Avila Almeida','11011711',''),(13450,'Everton Surica Bezerra','11201721463',''),(13451,'Fabio Taufik Calil do Nascimento','11201722304',''),(13452,'Fabricio Bandeira de Souza','11201722249',''),(13454,'Felipe Augusto Massari','11015812',''),(13455,'Felipe Lisboa Melo Fonseca','11201720082',''),(13456,'Felipe Thuller Avenoso','11201720534',''),(13457,'Felipe Tsibana Higa','11114116',''),(13458,'Fernando Guilherme Ferrari','11033916',''),(13459,'Fernando Henrique Nogueira Cecyn','11003816',''),(13460,'Fernando Kenji Ishikawa','11201722146',''),(13462,'Gabriel Antonio Arana Afonso Pereira','11201722530',''),(13463,'Gabriel de Agostini Ribeiro','11201721571',''),(13467,'Gabriela Modenezi','11201722475',''),(13468,'Giovana Lima Aires','11201720018',''),(13471,'Guilherme Fortes Souto','11201720174',''),(13472,'Guilherme Naziozeno Barreto','11098716',''),(13473,'Gustavo Seiji Ueti','11201722333',''),(13475,'Henrique de Souza Odoardi','11201720238',''),(13476,'Henrique Eugenio','11201720092',''),(13477,'Henrique Gallon Gadioli','11201721553',''),(13478,'Joao Gabriel Coelho','21002514',''),(13479,'Joao Victor Nascimento Mota','11201722586',''),(13480,'Jorge Rizzo da Silva','11112914',''),(13482,'Karina Mayumi Sato','11201720242',''),(13483,'Karoliny dos Anjos Pereira Alves','11201722349',''),(13484,'Kauan Carvalho Calasans','11201722380',''),(13485,'Kevin Manzo Maschio','11201722423',''),(13486,'Kharime Feres Carvalho','11007916',''),(13487,'Larissa Lais de Oliveira','11201722415',''),(13489,'Leonardo Giagio da Costa','11027516',''),(13491,'Leonardo Santiago Hampshire','11013815',''),(13492,'Leticia Nunes Mantovani','11201722991',''),(13494,'Lucas Coutinho Silva','11096316',''),(13495,'Lucas Couto Maransaldi','11043715',''),(13496,'Lucas de Sousa Dias','11201722105','sousa.dias@aluno.ufabc.edu.br'),(13497,'Lucas Goncalves Stofaleti','11056116',''),(13498,'Lucas Nave Cevoli','11201720862',''),(13500,'Luis Guilherme de Almeida Picinato','11014416',''),(13501,'Luis Gustavo Odilon Goncalves Paiva','11201722853',''),(13502,'Maik Henrique dos Santos Pereira','11201720058',''),(13503,'Mariana Guerrero Monegat','11201721370',''),(13504,'Mariana Rosendo da Silva','21013716',''),(13505,'Mariana Silva Borges','11201721726',''),(13506,'Mateus dos Santos Moura','11201720200',''),(13508,'Matheus Mergulhao Fischer de Carvalho','11201720364',''),(13509,'Matheus Vicente de Oliveira','11201721064',''),(13510,'Melyssa Freitas Melo','11044715',''),(13511,'Nicolas Borges Achoa','11201722370',''),(13513,'Paula Naomi Kawaguchi','11201722327',''),(13514,'Paulo de Souza Silva','11201720042',''),(13516,'Rafael Feitosa Nobile','11201722166',''),(13517,'Raphael Alberto Salles','11117316',''),(13519,'Ricardo Antonio Casu Pereira de Sousa','11201723075',''),(13520,'Sammuel Roberto Nunes Paes de Barros','11201722673',''),(13521,'Tamara Cristina de Souza Costa','21013916',''),(13523,'Thais Tomaz Isquierdo Goncalves','11053711',''),(13525,'Victor Santi Martins','11201721890',''),(13526,'Vinicius Alexandre Francisco Gomes','11042916',''),(13528,'Vitoria Costa Sombra','11201722086',''),(13538,'Ana Beatriz Rezende Sulimam','11201721580',''),(13539,'Ana Sueling Alves Diniz','11074511',''),(13542,'André Giudici Táboas','11021114',''),(13544,'Arthur Gobo dos Santos','11086214',''),(13545,'Arthur Lima dos Santos','11201720376','arthur.santos@aluno.ufabc.edu.br'),(13546,'Augusto Nazario Soares da Costa','11058011',''),(13547,'Bruno Rodrigues Silva','11031415',''),(13548,'Bruno Souza Barbosa','11029814',''),(13549,'Caio Pontillo Guimaraes','11098613',''),(13550,'Caio Poschardt Antunes Mello','11038715',''),(13551,'Daniel Pereira Gama','11036614',''),(13554,'Denis Yudi Nakajima','11060816',''),(13557,'Ed Carlos Andrade Duarte','11024716',''),(13560,'Ewerton Oliveira Rossi','11012411',''),(13561,'Fabio Benatti Neto','11075916',''),(13562,'Fabio Henrique Pupin Lima','11042416',''),(13564,'Felipe Faian Armani Franceschi','11035815',''),(13565,'Fernando Augusto da Fonseca','11090715',''),(13566,'Fernando Ferretti','11201722972',''),(13567,'Gabriel Araujo Gracia','11201721126',''),(13568,'Gabriel Fernandes','11048816',''),(13569,'Gabriel Pimentel Vaz','11026016',''),(13572,'Giancarlo Cardoso Maschietto','11016313',''),(13575,'Guilherme Carvalho de Andrade','11087513',''),(13576,'Guilherme de Paulo Gualberto Ferreira','21041114',''),(13577,'Guilherme Ferreira Duarte','11201722455',''),(13578,'Guilherme Lorenzeti Henrique','11100513','guilherme.lorenzeti@aluno.ufabc.edu.br'),(13581,'Gustavo Beo Arqueiro','11057916',''),(13582,'Gustavo de Barros Almeida','11026215',''),(13583,'Gustavo Lousado Silva','11117614',''),(13584,'Henrique Rufino de Cena','11063613',''),(13585,'Isabela Maria Biagioni Pedro','11060615',''),(13586,'Isabelle Citan','11071016','isabelle.citan@aluno.ufabc.edu.br'),(13587,'Ítalo Milhomem de Abreu Lanza','11039414',''),(13589,'Jessica Cristina de Souza Carvalho','11087713',''),(13592,'Josue Miranda Silva','21074316',''),(13593,'Julia Gaspar e Souza','11005613',''),(13594,'Kaio Nikolas Mendes Menezes dos Santos','21018915',''),(13595,'Kaique Ribeiro Goncalves','11110316',''),(13598,'Leandro Teixeira Domingues','11031814',''),(13600,'Leonardo Rodrigues Danninger','11045014',''),(13601,'Leticia Coelho Ferrari','11098214',''),(13603,'Luana Santos Padua','11201721401',''),(13604,'Lucas Battaglia Goncalves','11061914',''),(13606,'Lucas Pereira de Souza','11012516',''),(13607,'Lucas Ribeiro da Silva','21006316','silva.lucas@aluno.ufabc.edu.br'),(13608,'Lucas Simão Gil','11026513',''),(13611,'Marcio Satoshi Kubota','11044316',''),(13612,'Matheus Brandao Cursi','11069015',''),(13614,'Matheus Ribeiro Barison Martins Silva','11201721624',''),(13615,'Matheus Shimizu Felisberto','21030815',''),(13616,'Michel Dias Bodini Alonso','11079416',''),(13619,'Nivea Boos Ortolani','11091514',''),(13620,'Pedro Furlan Juliato','11079714',''),(13621,'Pedro Henrique Urtado Valim de Lima','11057413',''),(13622,'Rafael da Silva Tomaz','11041116',''),(13626,'Rodrigo Hiroaki Ideyama','11042714','r.hiroaki@aluno.ufabc.edu.br'),(13629,'Thiago Henrique Gomes Panini','11016214',''),(13630,'Thiago Luiz de Almeida Cortiz','11075213',''),(13632,'Victoria de Castro Mello Ayres','11201721855',''),(13633,'Vinicius Saladino Modesto','11059616',''),(13635,'Vitor Liros dos Santos','11088015',''),(13636,'Vitor Pereira da Silva','11082615',''),(13638,'William Douglas Mancini','11107813',''),(13639,'BCT','11112222',''),(13640,'BCH','12222222',''),(13641,'ENG','13333333',''),(13644,'primeiro nome','01','ufabc.tomioka@gmail.com'),(13645,'segundo nome','02','ufabc.tomioka@gmail.com'),(13648,'Natalia Cardoso Abreu de Ara\\\'{u}jo','1825958','natalia.araujo@ufabc.edu.br'),(13649,'Luciana Martiliano Milena','2534462','luciana.milena@gmail.com'),(13650,'Aline de Melo Nascimento','45423293804','aline.melo@aluno.ufabc.edu.br'),(13651,'Andressa Leonilia da Silva gomes','43044887836','andressa.leonilia@aluno.ufabc.edu.br'),(13652,'Bruno B Nascimento','44837134858','bevilacqua.bruno@aluno.ufabc.edu.br'),(13653,'Bruno Leonardo Bianqueti','45797700808','bruno.bianqueti@aluno.ufabc.edu.br'),(13654,'Caio Poschardt Antunes Mello','46930068829','caio.poschardt@aluno.ufabc.edu.br'),(13655,'Camila Vieira Braz','44723674837','Camila.braz@aluno.ufabc.edu.br'),(13656,'CAROLINA QUINELATO FRANCHI','45197286814','Carolina.quinelato@aluno.ufabc.edu.br'),(13657,'Daniela Yumi Yamamoto','35065863865','daniela.yamamoto@aluno.ufabc.edu.br'),(13658,'D\\\'{e}bora de Godoy Vasconcellos','36016806889','debora.vasconcellos@aluno.ufabc.edu.br'),(13659,'Fernanda Pereira Alves','48482549812','fernanda.alves@aluno.ufabc.edu.br'),(13660,'GABRIEL COZER LEAL','47155609846','cozer.leal@aluno.ufabc.edu.br'),(13661,'Gabriel Homero Barros Vieira','13648613642','gabriel.homero@aluno.ufabc.edu.br'),(13662,'Gabriella de Souza Costa','42975970803','s.costa@aluno.ufabc.edu.br'),(13663,'Giovana Marchini Armentano','43122723875','giovana.marchini@aluno.ufabc.edu.br'),(13664,'Giovani Beraldo Franco','48705909805','giovani.franco@aluno.ufabc.edu.br'),(13665,'Gislaine Cristina Ceregatti Bonilha Pinto','22623048827','gislaine.ceregatti@aluno.ufabc.edu.br'),(13666,'Giulia Sabrina Gon\\c{c}alves da Silva','32676934899','giulia.goncalves@aluno.ufabc.edu.br'),(13667,'Guilherme Gagliardi','44371011896','g.gagliardi@aluno.ufabc.edu.br'),(13668,'Gustavo Gomes Ribeiro','41887516816','gomes.g@aluno.ufabc.edu.br'),(13669,'Gustavo Mitsunaga de Araujo','46147978810','gustavo.mitsunaga@aluno.ufabc.edu.br'),(13670,'Heitor Carrer Doria','48835101824','heitor.doria@aluno.ufabc.edu.br'),(13671,'Ingrid Guimar\\~{a}es Gaigher','17009719721','gaigher.ingrid@aluno.ufabc.edu.br'),(13672,'ISABELA NOBRE GURGEL','40894310852','isabela.nobre@aluno.ufabc.edu.br'),(13673,'Jo\\~{a}o Pedro de Araujo Pires','46407035899','joao.araujo@aluno.ufabc.edu.br'),(13674,'J\\\'{u}lia Milagre de Aguiar','47039638843','julia.milagre@aluno.ufabc.edu.br'),(13675,'Kaio Nikolas Mendes Menezes dos Santos','11279082607','kaio.nikolas@aluno.ufabc.edu.br'),(13676,'K\\\'{a}tia Selene de Melo','42464559890','melo.k@aluno.ufabc.edu.br'),(13677,'Leonardo Barreto de Oliveira','43740388846','barreto.leonardo@aluno.ufabc.edu.br'),(13678,'Leonardo Taglione Tancredi','44656296805','taglione.tancredi@aluno.ufabc.edu.br'),(13679,'Lu\\\'{\\i}s Filipe Martins Barros','12876594625','luis.filipe@aluno.ufabc.edu.br'),(13680,'Luiza Fegadolli Nunes da Silva','44794138806','luiza.fegadolli@aluno.ufabc.edu.br'),(13681,'Maria Beatriz Forlini','48497458818','beatriz.forlini@aluno.ufabc.edu.br'),(13682,'Matheus Issamura Moreno','39099163843','matheus.issamura@aluno.ufabc.edu.br'),(13683,'Patrick Doneg\\\'{a} Queiroz','42135295841','patrick.donega@aluno.ufabc.edu.br'),(13684,'Patrick Oliveira de Paula','44067618883','patrick.oliveira@aluno.ufabc.edu.br'),(13685,'Pedro Henrique Pasquoto Lagosta','44830079800','pedro.lagosta@aluno.ufabc.edu.br'),(13686,'Samira Haddad','44172787843','samira.haddad@aluno.ufabc.edu.br'),(13687,'Samuel Pedro Pereira Silveira','13940978671','samuel.silveira@aluno.ufabc.edu.br'),(13688,'Tha\\\'{\\i}sa Helena Fernandes Silva','44605741879','thaisa.helena@aluno.ufabc.edu.br'),(13689,'Tha\\\'{\\i}sy Cristina Bezerra dos Santos','46417886859','thaisy.santos@aluno.ufabc.edu.br'),(13690,'Victor Henrique Silva de Oliveira','44179334801','victor.henrique@aluno.ufabc.edu.br'),(13691,'Alice Lopes de Medeiros Corr\\^{e}a','6342186626','alice.lopes@aluno.ufabc.edu.br'),(13692,'AMANDA CARDOSO DE SOUSA','40782542840','a.cardoso@aluno.ufabc.edu.br'),(13693,'Amanda Oliveira Bispo','37955831870','a.bispo@aluno.ufabc.edu.br'),(13694,'Ana Paula Fonseca Teixeira','48407189898','ana.teixeira@aluno.ufabc.edu.br'),(13695,'Bianca Teles Araujo','47036003884','a.bianca@aluno.ufabc.edu.br'),(13696,'Bruna Basille Jacyntho','36271168876','b.basille@aluno.ufabc.edu.br'),(13697,'Caio Alvares De Angelis','5541538858','caio.angelis@aluno.ufabc.edu.br'),(13698,'Caio de Aguiar Bernardi','45868929861','caio.aguiar@aluno.ufabc.edu.br'),(13699,'Caique Possarle Peixoto','41628513870','caique.peixoto@aluno.ufabc.edu.br'),(13700,'Daniel Saggiomo de Caprio','46492627806','daniel.caprio@aluno.ufabc.edu.br'),(13701,'Elisa Terezinha Bettega','44459147890','elisa.bettega@aluno.ufabc.edu.br'),(13702,'Felipe Azzolino Varella','44181811808','azzolino.varella@aluno.ufabc.edu.br'),(13703,'Gabriela Gomes de Souza','48512456884','gabriela.g@aluno.ufabc.edu.br'),(13704,'Giovana Melari Coelho','46278100835','giovana.coelho@aluno.ufabc.edu.br'),(13705,'Giovanna Baptista Mazzolim','22940376859','g.mazzolim@aluno.ufabc.edu.br'),(13706,'Guilherme Ali Abdallah Bassani','44131162830','guilherme.ali@aluno.ufabc.edu.br'),(13707,'GUILHERME CARRARO CARELLA','43938157852','guilherme.carella@aluno.ufabc.edu.br'),(13708,'Guilherme Castanha Nunes','39446918812','guilherme.castanha@aluno.ufabc.edu.br'),(13709,'Gustavo Del Rio Lima','44506529839','gustavo.rio@aluno.ufabc.edu.br'),(13710,'Heloisa Cristina Ribeiro','46634948895','h.ribeiro@aluno.ufabc.edu.br'),(13711,'Hideki Seckler Ohzeki','23683049839','hideki.ohzeki@aluno.ufabc.edu.br'),(13712,'Jade Stoppa Pires','46453352869','jade.stoppa@aluno.ufabc.edu.br'),(13713,'Julio C\\\'{e}sar Magagnin Tavares','44444076895','magagnin.tavares@aluno.ufabc.edu.br'),(13714,'Kamila Soares Almeida','45981313811','kamila.soares@aluno.ufabc.edu.br'),(13715,'Marina Tanios Devienne Pompeu','45190265803','marina.pompeu@aluno.ufabc.edu.br'),(13716,'Maryanna Sagio Alves','44261540819','m.sagio@aluno.ufabc.edu.br'),(13717,'Matheus Costa Damasceno','47691910819','matheus.costa@aluno.ufabc.edu.br'),(13718,'Maur\\\'{\\i}cio Devincentis Silva','36343305890','mauricio.devincentis@aluno.ufabc.edu.br'),(13719,'Murilo S\\\'{e}rgio Figueiredo Bina','47538944877','murilo.bina@aluno.ufabc.edu.br'),(13720,'Nathalia Leocadio Rubio','43798326860','nathalia.rubio@aluno.ufabc.edu.br'),(13721,'Nathalie Uchino Orioli','47019448828','nathalie.uchino@aluno.ufabc.edu.br'),(13722,'Pedro Ferrante Paiva','49423483828','pedro.ferrante@aluno.ufabc.edu.br'),(13723,'Pedro Henrique Anjos da Costa','44798345830','pedro.anjos@aluno.ufabc.edu.br'),(13724,'Pietra Capati Alterats Silva','47950044802','pietra.alterats@aluno.ufabc.edu.br'),(13725,'Tha\\\'{\\i}s Moreira Vaz','40314509828','thaisvaz19@aluno.ufabc.edu.br'),(13726,'Thalita Cordeiro Pereira','33834880809','thalita.pereira@aluno.ufabc.edu.br'),(13727,'Vanessa Carolina Cec\\\'{\\i}lia Elias Alves de Souza','42825878812','vanessa.cecilia@aluno.ufabc.edu.br'),(13728,'Arthur Pinto','11201921082',''),(13729,'Artur Nikolai Ogurzow','11201920770','a.ogurzow@aluno.ufabc.edu.br'),(13730,'Augusto Cesar Duran Garofalo','11201921818',''),(13731,'BEATRIZ DE ARRUDA RODRIGUES','11201822402',''),(13732,'Bruna Bueno Delfino','11201920597',''),(13734,'BRUNO MANUEL OLIVEIRA REIS FIGUEIREDO','11201822409',''),(13735,'Bruno Pereira Petisco','11201920151',''),(13736,'Caio Cesar Guidini','11201921756',''),(13737,'Camila Akemi Nomura','11201921428',''),(13738,'CAMILLE OLIVEIRA COVO','11201920656',''),(13739,'CARLA PEREIRA MOTA','11201812027',''),(13740,'Catarina Garcia Shelkovsky','11201921902',''),(13741,'DANIEL BINCOLETO DE SOUSA SANTOS','11201920869',''),(13742,'DANIELLE ALBUQUERQUE RODRIGUES','11201920327',''),(13743,'DANILO AMANCIO DA SILVA','11201920439',''),(13744,'DAYANE NASCIMENTO GALDINO','11201920313',''),(13745,'ELISA SILVA FREIRE AGUILAR','11201921301',''),(13746,'EMERSON LIMA BEZERRA','11201811770',''),(13747,'Evandro Antonio Bessa De Faria','11201921048',''),(13748,'FELIPE EDUARDO VIEIRA MACHADO','11201920937',''),(13749,'Fernanda Ornelas Vieira De Sousa','11201921606',''),(13751,'Filipe Augusto De Paula Souza','11201921584',''),(13752,'Gabriela Abreu Pedro Bom','11201921604',''),(13753,'GABRIELLY STEFANIE YACABO DE CARVALHO','11201920848',''),(13755,'GEOVANA CRISTINA PACIENTE','11201812356',''),(13757,'GUILHERME GIMENES LIAO','11201920847',''),(13758,'GUILHERME SANTOS LIMA','11201920874',''),(13759,'HENRIQUE DA SILVA MACEIRA','11201811386',''),(13760,'HENRIQUE MARTINS FURTADO','11201921167',''),(13761,'HUGO ARAUJO RODRIGUES','11201810302',''),(13762,'Igor De Carvalho Silva','11201921393',''),(13763,'ISABELLA RASCHIATORE','11201921076',''),(13764,'Isabelle Gallego Fiorentino Rodrigues','11201920372',''),(13765,'ISABELLE HYPPÓLITO DE OLIVEIRA','11201822425',''),(13767,'Joao Felipe Da Silva Marques','11201921029',''),(13768,'Joao Leonardo Fainberg','11201920906',''),(13769,'Joao Pedro Cavallari Abramo','11001616',''),(13770,'KAREN EDUARDA GOMBIO','11201811403',''),(13771,'Kevin Kai Lui Wu','11201921785',''),(13772,'LAIS KAORI YONEMURA RODRIGUES','11201921254',''),(13773,'LARISSA DOS SANTOS GARBAN','11201920180',''),(13774,'LEANDRO DIOMAR GOMES DA SILVA','11201920905',''),(13775,'Leonardo Gavino Rossi','11201921110',''),(13776,'Leonardo Itiro Takiuti','11201920205',''),(13777,'Leonardo Koji Sassaqui','11201921768',''),(13778,'Leonardo Severiano Couto','11201921429',''),(13779,'LETICIA COUTO CARMONA','11201811271',''),(13780,'Leticia Saemi Arakaki','11201922151',''),(13781,'LUANA LENCINA DOS SANTOS','11201812360',''),(13782,'Luana Sobral Cintra','11201922288',''),(13783,'Lucas Antoine Dias Marchezepe','11201921615',''),(13784,'Lucas De Alexandri Dantas Heck','11201921892','lucas.heck@aluno.ufabc.edu.br'),(13786,'Maria Gabriela Dos Santos Ribeiro','11201920857',''),(13787,'Matheus Abrahao De Almeida','11201921281',''),(13788,'Matheus Queiroz Neves','11201920262',''),(13789,'MAURICIO LUIS DA CONCEICAO','11201920317',''),(13790,'Mayã Vakimoto Lucena','11201921726',''),(13791,'Melissa Junqueira De Barros Lins','11201920583',''),(13792,'MICHELE CALIXTO DE JESUS','11201822546',''),(13793,'Milena Jimenez Kiss','11201922250',''),(13794,'NATHALIA DE PAULA MACHADO','11201810923',''),(13795,'NATHALIA MASTROIENE CREMA','11201811973','nathalia.mastroiene@aluno.ufabc.edu.br'),(13796,'NATHAN DA SILVA BARBOSA','11201811505',''),(13797,'NIKOLAS AVELINO GRANDE','11201920300',''),(13798,'Nivea Nascimento Silva','11201921812',''),(13799,'Pedro Henrique Faria De Souza','11201921248',''),(13800,'Pedro Henrique Perez Marcelo','11201920496',''),(13801,'Rafael Branco Totino','11201922308',''),(13802,'RAFAEL JARDIM ELEUTERIO','11201921389',''),(13803,'Raquel Belline Cruci','11201920332',''),(13804,'RAQUEL NEGRI XAVIER NUNES','11201922384',''),(13805,'Renan Aleixo Rodrigues Santos','11201920109',''),(13806,'Renato De Souza Abate','11201921633',''),(13807,'Steffani Rodrigues Ferreira','11201921927',''),(13808,'THAIS KAROLYNNE MENDES RODRIGUES','11201920187',''),(13809,'THIAGO BIBIANO DA SILVA','11201920950',''),(13810,'THIAGO SOBRAL LEMOS','11201811176',''),(13811,'Victor Cobo Figueiro','11201921065',''),(13812,'Vinicius Jose Gomes Da Silva','11201922224',''),(13813,'Vinicius Torres Nunes','11201920810',''),(13814,'Vinicius Yannes Souza Georgopoulos','11201920528',''),(13815,'Yan Forni De Medeiros E Silva','11201922150',''),(13816,'Alan Tadeu Silverio Lazaro','11201920781',''),(13817,'ANA LUIZA CERRATO TAVARES DE SOUZA','11201920688',''),(13818,'Andre Luiz Duarte Cesar','11201922263',''),(13819,'ANDRE RAMOS RELICH','11201810697',''),(13820,'Andre Tiosso Karasauskas','11201921229',''),(13821,'Anna Beatriz Campos Ribeiro Louzada','11201921993',''),(13822,'Arthur Amighini Fernandes Costa','11201921908',''),(13823,'Brenda Profiro Santos','11201920713',''),(13824,'Bruno Morgante Lima','11201921299',''),(13825,'BRUNO MORIKUNI','11201920308',''),(13826,'Bruno Munhoz Rossi','11201921671',''),(13827,'Camila Calado Vicente','11201722671',''),(13828,'CATHERINE SOARES GALLIS','11201810138','c.gallis@aluno.ufabc.edu.br'),(13829,'DANYELLE RODRIGUES SERRANO','11201811699',''),(13830,'Davi Henrique De Albuquerque','11201920715',''),(13831,'Eduardo Uhli Cortes Uemura','11201922196',''),(13832,'EMERSON VIEIRA BEZERRA','11201921139',''),(13833,'ENZO FERNANDES DONATTI','11201920324',''),(13834,'Fabiana De Jesus Santos Araujo','11201921230',''),(13835,'FELIPE AUGUSTO DE PAULA MOREIRA','11201810237',''),(13836,'FELIPE CAVALCANTE','11201810379','f.cavalcante@aluno.ufabc.edu.br'),(13837,'Fernanda Felix Da Silva','11201921613',''),(13838,'Filipe De Almeida','11201920253',''),(13840,'GABRIEL DOS ANJOS DANTAS SILVA','11201921305',''),(13841,'Gabriel Intackli Pinto','11201921426',''),(13842,'Gabriel Jorge Menezes','11201921315',''),(13843,'GABRIEL LARRUBIA ALVARES FLORENCE','11201920552',''),(13844,'Gabriel Loureiro Cavalieri','11201920793',''),(13845,'Gabriel Moreira Silva','11201922386',''),(13846,'GABRIELA HA YEON CHOI','11201921569',''),(13847,'Gabrieli Fernanda Dos Santos','11201921325',''),(13848,'Giovanna Isabela Ferreira Santos','11201921739',''),(13849,'Gisele Da Silva Carvalho','11201922413',''),(13850,'GUSTAVO ALVES DE SOUZA','11201811674',''),(13851,'Gustavo Dos Reis Rezende','11201920771',''),(13852,'Iasmin Dy Mauricio Ayres Lopes','11201921942',''),(13853,'Jeferson Maximo Teixeira','11201922016',''),(13854,'JEFFERSON DE PAULA DIAS','11201811329',''),(13855,'JHONATAN HENRIQUE BAGSAUSKAS DIAS','11201920142',''),(13856,'JOAO MARCOS ALMEIDA FERREIRA','11201810222',''),(13857,'Joao Vitor Dos Santos Pereira','11201920320',''),(13858,'Jose Sergio De Araujo Neto','11201921245',''),(13859,'Kaue Guerrero Baptista','11201921608',''),(13860,'Kayque Nogueira Vieira','11201921425',''),(13862,'Leila Cardoso De Souza','11201921570',''),(13863,'Leonardo Dos Santos Cordeiro Pereira Da Silva','11201922251',''),(13864,'Leonardo Ferreira De Souza','11201921873',''),(13865,'Leonardo Ferreira Dos Santos','11201922343',''),(13866,'Lorrant Da Cunha Marques','11201920815',''),(13867,'Luana De Souza Barbosa','11201922223',''),(13868,'LUANA MANFREDI BELMONTE DE OLIVEIRA','11201920319',''),(13869,'Lucas Barbosa Fernandes','11201921868',''),(13870,'Lucas Freire Da Silva','11201922262',''),(13871,'Lucas Pereira Santos Silva','11118416',''),(13872,'Lucas Valeriano Da Silva','11201920749',''),(13873,'Luciano Constantino','11201921468',''),(13874,'Luiz Gustavo Ferreira Mota','11201920917',''),(13875,'MARCELO HENRIQUE RODRIGUES LEONESSA','11201822435',''),(13876,'Marcos Paulo Jeronimo Francisco','11201922360',''),(13877,'Marcus Patric Domingo Felisberto','11125115',''),(13878,'Matheus De Souza','11201922241',''),(13879,'Matheus Raphael Da Silva Gomes','11201920510',''),(13880,'Mauricio Pinheiro De Oliveira','11201922312',''),(13881,'MAYRA DE CASSYA DE SOUSA PEREIRA','11201921278',''),(13882,'Natalia Bernardes Sena','11201922249',''),(13884,'Nilson Cruz Araujo','11201922395',''),(13885,'Paulo Dias Alves','11090415',''),(13886,'RAFAEL ALVES NIETO','11201822441',''),(13887,'RAFAEL ANTONIO GIBELLO SIMOES MENEZES','11201811065',''),(13888,'RAFAEL BORGES SANTANA','11201921222',''),(13889,'RAFAEL CARLOS FERREIRA CHAVES','11201920446',''),(13890,'Raone De Santana Rodrigues','11201922170',''),(13891,'Renan Batista Macedo','11101716',''),(13892,'Robert Soares Pinto','11201922359',''),(13893,'Romulo Pontes Menon','11201921839',''),(13894,'Thiago Reinaldos Silva','11201921556',''),(13895,'Victor Certorio Pereira','11201912417',''),(13896,'Victor De Melo Rodrigues','11201920785',''),(13897,'VINICIUS DE CARVALHO COUTO','11201920876',''),(13898,'Vinicius Lauton e Silva','11092616',''),(13899,'Vitor Araujo Ramos','11201920403',''),(13900,'Vitor Goncalves Pereira','11201921263',''),(13901,'Wesley De Godoy Barbosa','11201920938',''),(13902,'Alvaro dos Santos Costa','21056115',''),(13903,'BRENO LUIZ DE MORAES','11201812014',''),(13904,'ERICK KAKUKI TANAKA','11201812022',''),(13905,'EVELLYN FRANCE DE ALMEIDA PEREIRA','11201812227',''),(13906,'EVERTON REICHERT FARIAS','11201810324',''),(13907,'GABRIEL DE MELLO RODRIGUES','11201812106',''),(13908,'Henry Wachtler da Costa','21009916',''),(13909,'HUGO VINICIUS FIGUEIREDO TRIGUEIRO','11201810493',''),(13910,'Julia de Sousa Viana','11201723112',''),(13911,'Lucas Souza da Fonte','11201723101',''),(13912,'LUCAS VAZ BRITO','11201810158',''),(13913,'Marcos Vinicius dos Santos Souza','11201722821',''),(13914,'MATHEUS LIGEIRO DIAS','11201810473',''),(13915,'Mirelle Alves de Freitas','21075015',''),(13916,'PEDRO HENRIQUE ROCHA MENDES','11201811516',''),(13917,'Rafael de Carvalho Cauner Fontinhas','11061912',''),(13918,'VINICIUS DOS SANTOS LODETTI','11201812380',''),(13919,'VITORIA ALVES GOMES','11201811644',''),(13920,'Almir Dias Esiquiel','21082316',''),(13921,'ANA ALICE NASCIMENTO SILVA','11201812346',''),(13922,'BRUNA MAYUMI TERAMOTO KLEIN','11201811458',''),(13923,'CARLOS EDUARDO TAVARES CORREA NETO','11201810782',''),(13924,'FERNANDO BARBOSA DOS SANTOS','11201811774',''),(13925,'GUILHERME DA SILVA OLIVEIRA','11201811884',''),(13926,'GUSTAVO CARMONA DAVI','11201822517',''),(13927,'Jamile Queiroz Gomes','21047113',''),(13928,'JOAO PAULO BOETTGER FILARDO','11201810670',''),(13929,'JULIO CESAR BRITO DA SILVA','11201810451',''),(13930,'KEVIN ZAVALA MATTOS','11201811029',''),(13931,'LARISSA RIBEIRA FERNANDES','11201810021',''),(13932,'LUCIANE DA CONCEICAO NANTES','11201811536',''),(13933,'MARCELLA GARCIA PAULA','11201810030',''),(13934,'MATEUS MIOTTI CUNHA','11201811050',''),(13935,'Leandro Teodoro Junior\"','\"11122215',''),(13939,'Leandro Teodoro Junior','\"31201900000','a@gmail.com\"'),(13940,'Leandro Teodoro','31201912345',''),(13943,'Leandro Teodoro;\"','\"31201912345',''),(13944,'Lean','12345',''),(14010,'Larissa Yumie Moriya Bella\"','\"31201910337',''),(14011,'Gabriel Antunes Geyer\"','\"31201910168',''),(14013,'Geovanna Moreira Duarte Bezerra \"','\"31201910198',''),(14014,'Felipe Januario Domingues \"','\"31201910151',''),(14015,'Isabella de Sousa Paulino\"','\"31201910629',''),(14016,'Nycole Fernandes de Sousa\"','\"31201910487',''),(14017,'Maicon Alisson Rodrigues dos Anjos\"','\"31201910395',''),(14018,'Vanusa Nicassia Oliveira Dias\"','\"3120191049435230',''),(14019,'Maria Eduarda Martins Carvalho\"','\"31201910618',''),(14020,'Pedro Vinicius de Campos Vieira\"','\"31201910500',''),(14021,'Julia Fernandes Franco \"','\"31201910305',''),(14022,'Daiane Rodrigues Dantas\"','\"31201910104',''),(14023,'Gabriela Moura Silva\"','\"31201910188',''),(14025,'Gabriel Cafeu Brandao \"','\"31201910171',''),(14026,'Pietra Giovanna Gama Bisan\"','\"31201910501',''),(14027,'Rafael Freire Nunes\"','\"31201910506',''),(14028,'Ingrid Vitoria Mielnik de Moraes\"','\"31201910261',''),(14029,'Luan Fernandes Jose\"','\"31201910367',''),(14030,'Camila santos Almeida da Silva \"','\"3120191048281929',''),(14031,'Beatriz Dias Bandeira\"','\"31201910049',''),(14032,'Joao Victor Soares dos Santos \"','\"31201910293',''),(14034,'Sthefane Alves de Souza \"','\"31201910542',''),(14035,'Nicolas Nobrega da Silva Benassi\"','\"31201910480',''),(14036,'Gabriela Silva Fernandes \"','\"31201910190',''),(14039,'Jamylle Bertelli de Moraes Gomes \"','\"31201910279',''),(14040,'Deborah Sandy Mancano Wakasugi\"','\"31201910119',''),(14041,'Camila Cadengue \"','\"31201910082',''),(14042,'Fernanda Muller Ramaglia \"','\"31201910159',''),(14043,'Ana Paula Carraro Bingre\"','\"31201910028',''),(14044,'Rayssa de aguiar sobreira\"','\"31201910518',''),(14045,'Filipi Alves Barbosa\"','\"31201910166',''),(14046,'Maria Clara da Silva\"','\"31201910412',''),(14047,'Leticia Rodrigues Severino\"','\"31201910357',''),(14048,'Joyce Martins Coelho Alves\"','\"31201910302',''),(14049,'Beatriz Lima da Silveira\"','\"31201910052',''),(14050,'Gustavo Brait Pires\"','\"31201910233',''),(14052,'Thiago Quirino\"','\"31201910561',''),(14053,'Elder Fernando Sousa Melo \"','\"31201910130',''),(14054,'Isabelly Mendes Danni\"','\"31201910269',''),(14055,'Pedro Del Rey Menezes\"','\"31201910495',''),(14056,'Victor Victorelli Maruyama Vieira\"','\"31201910573',''),(14057,'Vanusa Nicassia Oliveira Dias\"','\"31201910567',''),(14058,'Leticia Dias Cerqueira dos Santos \"','\"31201910351',''),(14059,'Rafael da Silva Alves\"','\"31201910504',''),(14060,'Ianca Jennifer Aguiar Da Fonseca\"','\"31201910255',''),(14061,'Ana Beatriz Santos Oliveira\"','\"31201910020',''),(14062,'Susane Ferreira De Oliveira \"','\"31201910545',''),(14063,'Nathalia de Sousa Andrade\"','\"31201910474',''),(14064,'Maria Eduarda Oliveira Silva \"','\"31201910415',''),(14065,'Raquel da Silva Rodrigues\"','\"31201910517',''),(14066,'Mateus de Araujo Dantas\"','\"31201910435',''),(14067,'Joao Victor Meireles Natividade \"','\"31201910292',''),(14068,'Nathalia de Andrade Costa\"','\"31201910473',''),(14069,'Igor Bizerra Feba\"','\"31201910257',''),(14070,'Fernanda Vieira Silva\"','\"31201910162',''),(14071,'Anna Barbara Zanoti Santana\"','\"31201910035',''),(14072,'Beatriz Bortoletto Ferreira\"','\"31201910047',''),(14073,'Beatriz de Almeida Sparvolli \"','\"3120191048975022',''),(14083,'Vanusa Nicassia Oliveira D','3120191049435230',''),(14095,'Camila santos Almeida da S','3120191048281929',''),(14138,'Beatriz de Almeida Sparvol','3120191048975022',''),(14542,'Ana Carolina Ezidia da Silva','\"31201910024','etc@etc.com\"'),(14543,'Anderson Lima Rezende\"','\"31201910030',''),(14544,'Andresa DAmbrosi de Melo\"','\"31201910032',''),(14545,'Artur Teles Barbosa\"','\"31201910038',''),(14546,'Athos David Cabral Pykalainen \"','\"31201910039',''),(14547,'Barbara Inacio Gomes da Silva\"','\"31201910043',''),(14548,'Beatriz dos Anjos Nascimento\"','\"31201910050',''),(14549,'Beatriz Ines da Silva Feitosa\"','\"31201910051',''),(14550,'Bianca Regina Pasquim\"','\"31201910059',''),(14551,'Bruno Gabriel Silva Dominicheli\"','\"31201910073',''),(14552,'Bruno Roberto Brandao Capitelli\"','\"31201910075',''),(14553,'Carin Beatriz Silva Zampaulo\"','\"31201910089',''),(14554,'carolina gomes bezerra da silva \"','\"31201910092',''),(14555,'Caroline Santana de Joao\"','\"31201910094',''),(14556,'Daniela Sanches Soares \"','\"31201910109',''),(14557,'Danilo Araujo de Azevedo\"','\"31201910113',''),(14558,'Diego Silva Rodrigues\"','\"31201910123',''),(14559,'Emillyn Radija Pires Lacerda \"','\"31201910134',''),(14560,'Enzo Bernardes Sena\"','\"31201910136',''),(14561,'Fabio Maganha Moreira\"','\"31201910145',''),(14562,'Fernanda Ribeiro Onwuatu\"','\"31201910161',''),(14563,'Gabriela Domingues Deliberal \"','\"31201910185',''),(14564,'Gabriela Lourenco da Silva\"','\"31201910187',''),(14565,'Gabriele Cristina Pereira Santiago\"','\"31201910193',''),(14566,'Geovanna Aparecida Lima Costa\"','\"31201910195',''),(14567,'Geovanna de Oliveira da Silva Pastorello\"','\"31201910196',''),(14568,'Giorgia Maldonado Perez\"','\"31201910199',''),(14569,'Giovana Felicio Monteiro \"','\"31201910201',''),(14570,'Guilherme Degam Roque\"','\"31201910222',''),(14571,'Heloisa da Costa Alencar\"','\"31201910244',''),(14572,'Hugo Moura Tico\"','\"31201910252',''),(14573,'Igor de souza soares\"','\"31201910258',''),(14574,'Isabela Salazar da Silva\"','\"31201910264',''),(14575,'Jessica Goncalves da Silva\"','\"31201910284',''),(14576,'Julia Rita Nunes Machado \"','\"31201910309',''),(14577,'Juliana Petarnella \"','\"31201910311',''),(14578,'Lara Maria Bernardo\"','\"31201910331',''),(14579,'Larissa de Mesquita\"','\"31201910333',''),(14580,'Leticia Sparapani\"','\"31201910359',''),(14581,'Leticia Vespero Camargo\"','\"31201910360',''),(14582,'Livia da Silva\"','\"31201910363',''),(14583,'Luana Flausino Ferreira\"','\"31201910370',''),(14584,'Maisa Bernardo Bezerra \"','\"31201910398',''),(14585,'Marcelo Vitor Rodrigues Bonora\"','\"31201910403',''),(14586,'Marcus Andre Silva Abreu\"','\"31201910410',''),(14587,'Maria Eduarda Duarte Francao\"','\"31201910413',''),(14588,'Maria Vitoria Teixeira Balestra \"','\"31201910424',''),(14589,'Mariana aparecida zacharias Pereira \"','\"31201910425',''),(14590,'Mariana manfredi Facciolli\"','\"31201910429',''),(14591,'Nathalia Malvao da Silva\"','\"31201910476',''),(14592,'Rafael Neres Magalhaes \"','\"31201910507',''),(14593,'Suie Matias Saito \"','\"31201910544',''),(14594,'Tamires Araujo de Souza \"','\"31201910547',''),(14595,'Thayna de Oliveira Lombardi\"','\"31201910555',''),(14596,'Tiago Correia de Lima\"','\"31201910562',''),(14597,'Victor da Silva Teixeira\"','\"31201910569',''),(14598,'Victorio Henrique de Andrade\"','\"31201910578',''),(14599,'Vinicius zampieri do nascimento\"','\"31201910590',''),(14600,'Vitor Silva Moreira\"','\"31201910592',''),(14601,'Vitoria Maria Pacheco Silva \"','\"31201910596',''),(14602,'William Shoji Kudaka\"','\"31201910605',''),(14603,'Yan Estevam dos Santos\"','\"31201910607',''),(14604,'Yasmin Ayres Paiva\"','\"31201910609',''),(14605,'Felipe Vieira Souza Santos\"','\"31201910628',''),(14606,'Matheus Da Silva Almeida \"','\"31201910633',''),(14607,'Adriano Pereira de Oliveira','31201910004','adriano123dri@gmail.com'),(14608,'Alan Castro Santos','31201910007','alan.santos.castro@gmail.com'),(14609,'Allef Oliveira Nascimento','31201910015','allefon2015@gmail.com'),(14610,'Anderson Sartorio da Silva','31201910031','andersartorio27@gmail.com'),(14611,'Artur Yuiti Shimada de Carvalho','31201910615','arturyuitis.cv@gmail.com'),(14612,'Barbara Heloisa da Silva Ramalho','31201910042','barbara.ramalho1000@gmail.com'),(14613,'Bia Carolina dos Santos Dutra','31201910057','biadutra2319@gmail.com'),(14614,'Bianca Vieira Franco','31201910061','bfranco1918@gmail.com'),(14615,'Brenda Graziele de Paiva','31201910062','brendagraziele@gmail.com'),(14616,'Breno Kenji Oti','31201910064','satorotan@gmail.com'),(14617,'Brian da Silva Neves','31201910616','goes-silva@live.com'),(14618,'Bruno de Santana Melo','31201910070','bruno_s_melo@hotmail.com'),(14619,'Bruno dos Santos Ribeiro Borges','31201910072','osuburonue@gmail.com'),(14620,'Bruno Henrique Oliveira Rocha','31201910074','1brunooliv@gmail.com'),(14621,'Bryan da Costa Torres','31201910077','bryan.torresc@hotmail.com'),(14622,'Caique Experediao Moreira','31201910080','caiqueexpmoram@gmail.com'),(14623,'Caroliny de Souza Silva','31201910096','carolinysouza2014@gmail.com'),(14624,'Christian Arrebola Gaspar','31201910098','chriisgaspar@gmail.com'),(14625,'Cindy Aimi Yamamoto Salazar','31201910099','aimiyamamoto2302@gmail.com'),(14626,'Daniel Augusto Souza Lima','31201910106','dani.sauro@gmail.com'),(14627,'Daniela Silva Timoteo','31201910110','daniela2002timoteo@gmail.com'),(14628,'Debora Fernanda dos Santos Gimene','31201910117','debora.gimene1@hotmail.com'),(14629,'Douglas de Araujo Macedo','31201910124','douglas.araujo101184@gmail.com'),(14630,'Emanuel Santos Pires','31201910132','manuzei.2018@gmail.com'),(14631,'Emanuele Araujo dos Santos','31201910133','araujomanu.eas@gmail.com'),(14632,'Feliciano Souza Bento dos Santos','31201910147','feli.bento12@gmail.com'),(14633,'Felipe de Lima Paiva','31201910149','lipelpaiva@hotmail.com'),(14634,'Fernanda Ketlyn Rodrigues Batista','31201910157','nandaket13@gmail.com'),(14635,'Fernando Daros Carvalho Amancio','31201910163','fernandodaros38@gmail.com'),(14636,'Filipe de Sousa Pereira','31201910165','filipe.pereira@gestaopublica.etc.br'),(14637,'Gabriel Barbosa de Andrade','31201910169','gblkirandroid@gmail.com'),(14638,'Gabriel Barbosa de Macedo','31201910170','gabrielmacedo03@hotmail.com'),(14639,'Gabriel Daiskye Higa','31201910172','gabriel.higa@outlook.com'),(14640,'Gabriel Gomes de Almeida','31201910175','almeida.folks@gmail.com'),(14641,'Gabriel Mouta Mendonca Teixeira','31201910178','gabrielmouta5@gmail.com'),(14642,'Gabriel Pestana de Oliveira','31201910180','gabpoliveira@hotmail.com'),(14643,'Gabriel Soares da Silva','31201910181','gabrielsoares2c@gmail.com'),(14644,'Giovanna Fernandes de Medeiros Oliveira','31201910205','gim66729@gmail.com'),(14645,'Giovanna Marcela Melo','31201910207','2001giovannamarcela@gmail.com'),(14646,'Grazielli Azevedo Leal','31201910215','grazielli.leal2002@gmail.com'),(14647,'Guilherme Soares de Oliveira','31201910230','gui.soares46@outlook.com'),(14648,'Gustavo Oliveira de Souza','31201910237','goustav@outlook.com'),(14649,'Gustavo Tulio Freitas Silva','31201910239','gustavo.tulio1@hotmail.com'),(14650,'Henrique Nascimento Ribeiro','31201910248','rique.nr@hotmail.com'),(14651,'Isabella Escudeiro Garcia','31201910266','escudeiro.isagarcia@gmail.com'),(14652,'Isabella Figueira Procopio','31201910267','isabellafigueira0903@gmail.com'),(14653,'Isabelle Crisolana Coelho','31201910268','isabellecoelho@outlook.com'),(14654,'Isadora de Almeida David','31201910271','isadora.almeida2204@yahoo.com.br'),(14655,'Jean Greguere Millien','31201910282','mcgreg1989@gmail.com'),(14656,'Jenifer Ferreira de Marcena','31201910283','jenifer_1999@hotmail.com.br'),(14657,'Jhuann Piedro Alves Nogueira','31201910289','jhuannpanogueira@hotmail.com'),(14658,'Joelmir Mariano de Souza','31201910295','joelmir.mariano@bol.com.br'),(14659,'Julia Ramos Nascimento','31201910308','julia_ramos03@hotmail.com'),(14660,'Julio Cesar Pereira da Silva','31201910314','julioscesar15@gmail.com'),(14661,'Julio Cesar Vieira','31201910315','julio_cesarveira@hotmail.com'),(14662,'Larissa dos Santos Rodrigues','31201910335','lari.117.02.ssa@gmail.com'),(14663,'Laura Elis Lima de Sousa','31201910339','lauraelislima@gmail.com'),(14664,'Lorena Moreira Campo','31201910365','lorymc29@gmail.com'),(14665,'Luan Victor Freitas Viel','31201910368','luanviel@hotmail.com'),(14666,'Lucas Martins Cardoso','31201910378','quinhakxz@hotmail.com'),(14667,'Lucas Sevieri Chagas','31201910387','lucassevieri@gmail.com'),(14668,'Luiz Alfredo Siqueira Paschoalini','31201910390','luizalfredo00@hotmail.com'),(14669,'Marcelo Pavao Takahashi','31201910402','marce_takahashi@outlook.com'),(14670,'Marcelo Vitor Rodrigues Bonora','31201910403','marcelinho-bonora@hotmail.com'),(14671,'Marcos Vinicius Carneiro de Jesus','31201910407','vinijesusc@hotmail.com'),(14672,'Marcos Vinicius da Silva','31201910408','marcos.vinicius98@outlook.com.br'),(14673,'Maria Eduarda Ferreira Neves','31201910414','duda2neves@hotmail.com'),(14674,'Marlon Francisco do Nascimento','31201910434','marlon.nascimento2@etec.sp.gov.br'),(14675,'Matheus Alencar Nascimento','31201910437','xmatheus69@hotmail.com'),(14676,'Matheus Antony de Almeida Silva','31201910438','matheusantonyaqua@gmail.com'),(14677,'Matheus Medina','31201910447','matheushanaki19@gmail.com'),(14678,'Matheus Miranda Luchiari','31201910448','mm.luchiari2002@gmail.com'),(14679,'Matheus Santos Carneiro','31201910450','te_teu21@hotmail.com'),(14680,'Maylson de Alencar Barbosa','31201910454','maylson.alencar21@gmail.com'),(14681,'Michele Carvalho da Silva','31201910456','poweirrl@gmail.com'),(14682,'Murilo Xavier Ribeiro','31201910466','murilo.xavier.ribeiro.mxr@gmail.com'),(14683,'Odilia Silva Moreira do Nascimento','31201910488','odiliasmn@gmail.com'),(14684,'Paulo Henrique Campos Barboza','31201910491','paulo04heinriquee@gmail.com'),(14685,'Pedro Augusto Cardoso Santos','31201910494','pacs1999.pa@gmail.com'),(14686,'Pietro Hessel','31201910502','pietrohessel640@gmail.com'),(14687,'Rafael Sanches dos Prazeres','31201910509','rafinhadsanches@hotmail.com'),(14688,'Rafaella Paula Ribeiro','31201910511','rafinhapaula95@gmail.com'),(14689,'Regina Oliveira da Silva','31201910520','regina_oliveiradasilva@hotmail.com'),(14690,'Samira da Silva Gois','31201910532','samiragois2@gmail.com'),(14691,'Samuel Davi Gomes de Viveiros','31201910533','samueldavi11223344@gmail.com'),(14692,'Sarah Silvestre','31201910538','sarah.silvestre@etec.sp.gov.br'),(14693,'Sergio Felipe da Silva','31201910539','sergio.felipe.dsilva96@gmail.com'),(14694,'Tamires Silva Caetano','31201910548','tamirescaetano14tay@gmail.com'),(14695,'Thamar Charles','31201910552','tcharly088@yahoo.com'),(14696,'Thiago Camilo de Oliveira','31201910556','tiago.camilo18@hotmail.com'),(14697,'Thiago Condrasisen','31201910557','thiagocondrasisen@gmail.com'),(14698,'Victor Hugo de Melo Santos','31201910571','vihms2001@gmail.com'),(14699,'Victoria Pontelli Correia','31201910575','victoria.pontelli.vp@gmail.com'),(14700,'Victoria Zanirato dos Santos','31201910577','zaniratovictoria@gmail.com'),(14701,'Vinicius Amaral Virginio Pereira','31201910580','viniciusavp123@gmail.com'),(14702,'Vinicius Roberto da Silva Souza','31201910588','vini_352@outlook.com'),(14703,'Vitor Silva Santos','31201910593','vitorzin2014@gmail.com'),(14704,'Vladimir Silva Emiliano','31201910601','vladimirbanksy@gmail.com'),(14705,'Ana Carolina Ezidia da Silva','31201910024','ezidinha25@gmail.com'),(14706,'Anderson Lima Rezende','31201910030','andersonlimarezende@outlook.com'),(14707,'Andresa DAmbrosi de Melo','31201910032','welitonmelo121@gmail.com'),(14709,'Andressa Larissa Paschoa Piacenti','31201910033','andlarissapia@gmail.com'),(14710,'Athos David Cabral Pykalainen','31201910039','athosdavid@hotmail.com'),(14711,'Barbara Inacio Gomes da Silva','31201910043','barbarayuu@gmail.com'),(14712,'Beatriz dos Anjos Nascimento','31201910050','biadosanjos@live.com'),(14713,'Beatriz Ines da Silva Feitosa','31201910051','guemerson@hotmail.com'),(14714,'Beatriz Marcelino de Oiveira','31201910632','beatriz.maoliveira@gmail.com'),(14715,'Beatriz Silva Nunciato','31201910056','beatrizsilva120602@gmail.com'),(14716,'Bianca Regina Pasquim','31201910059','biancapasquim@outlook.com'),(14717,'Brenda Ramos da Silva','31201910063','brenrsilva@hotmail.com'),(14718,'Bruno Gabriel Silva Dominicheli','31201910073','brunogabrielsd@hotmail.com'),(14719,'Bruno Roberto Brandao Capitelli','31201910075','bruno.nitro48@gmail.com'),(14720,'Carin Beatriz Silva Zampaulo','31201910089','carinzampaulo@gmail.com'),(14721,'Carolina Gomes Bezerra da Silva','31201910092','carolinagbs777@gmail.com'),(14722,'Carolina Salvatierra Neves','31201910093','carol.salvatierra.neves@gmail.com'),(14723,'Caroline Santana de Joao','31201910094','carolisa.sj@gmail.com'),(14724,'Daniela Sanches Soares','31201910109','danielasanchessoares@outlook.com'),(14725,'Danilo Araujo de Azevedo','31201910113','ddwddkomef@hotmail.com'),(14726,'Dianna Sousa Reis','31201910120','diannasreis@hotmail.com'),(14727,'Diego Silva Rodrigues','31201910123','diego-rodrigues28@live.com'),(14728,'Emillyn Radija Pires Lacerda','31201910134','radija.lacerda@hotmail.com'),(14729,'Enzo Bernardes Sena','31201910136','naty07sena@hotmail.com'),(14730,'Erika Silva de Medeiros','31201910140','erika.smedeiros10@gmail.com'),(14731,'Fabio Maganha Moreira','31201910145','fabioluffy@gmail.com'),(14732,'Felipe Pavam Ferreira','31201910152','felipepavanm@gmail.com'),(14733,'Felipe Vieira Souza Santos','31201910628','zferelipe@gmail.com'),(14734,'Fernanda Ribeiro Onwuatu','31201910161','fonwuatu442@gmail.com'),(14735,'Fernando Rabelo DAmaral','31201910164','fernandorabelo58@yahoo.com'),(14736,'Gabriela Araujo Florentino','31201910184','gabilucaslima123@gmail.com'),(14737,'Gabriela Domingues Deliberal','31201910185','gabi.ddeliberal@gmail.com'),(14738,'Gabriela Lourenco da Silva','31201910187','gsilva.glo21@gmail.com'),(14739,'Gabriele Cristina Pereira Santiago','31201910193','omgabrielecristina57@gmail.com'),(14740,'Geovanna Aparecida Lima Costa','31201910195','geovannalimac@gmail.com'),(14741,'Geovanna de Oliveira da Silva Pastorello','31201910196','geovanna_oliveira_10@hotmail.com'),(14742,'Giorgia Maldonado Perez','31201910199','giorgiamaldonadop@gmail.com'),(14743,'Giovana Felicio Monteiro','31201910201','mifelicio07@gmail.com'),(14744,'Guilherme de Sa Barros','31201910221','guilhermelorddarknes@outlook.com'),(14745,'Guilherme Degam Roque','31201910222','guilhermedegam.roque@gmail.com'),(14746,'Gustavo Fernandes Zandona','31201910235','mauricio.zandona@hotmail.com'),(14747,'Heloisa da Costa Alencar','31201910244','heloisa.costalencar@gmail.com'),(14748,'Hugo Moura Tico','31201910252','gute.tico@gmail.com'),(14749,'Igor de Souza Soares','31201910258','souzaigor499@gmail.com'),(14750,'Ingrid Sakura Higa Ferreira','31201910260','ingridsakura2002@hotmail.com'),(14751,'Isabela Salazar da Silva','31201910264','isasalazars01@gmail.com'),(14752,'Jamilly Fernanda de Andrade','31201910278','jamillyfernanda@bol.com.br'),(14753,'Jessica Goncalves da Silva','31201910284','jhesylin33@gmail.com'),(14754,'Jessica Maria Cordeiro','31201910285','jemcordeiro@gmail.com'),(14755,'Julia Rita Nunes Machado','31201910309','juliaritanunes@gmail.com'),(14756,'Juliana Petarnella','31201910311','julianapetarnella18@gmail.com'),(14757,'Kaue Rafael Lima Di Santi Pires','31201910324','kauerafael70@gmail.com'),(14758,'Lara Forlan Mendonca','31201910622','laraforlan@hotmail.com'),(14759,'Lara Maria Bernardo','31201910331','lara.mabernardo@gmail.com'),(14760,'Larissa de Mesquita','31201910333','larimesq2016@gmail.com'),(14761,'Lavinia Cardoso Soares','31201910343','lavi.soares00@gmail.com'),(14762,'Leonardo da Conceicao de Sousa','31201910346','leoconceicaosousa167@gmail.com'),(14763,'Leticia Sparapani','31201910359','letiicia406@gmail.com'),(14764,'Leticia Vespero Camargo','31201910360','leticiacamargo2001@hotmail.com'),(14765,'Livia da Silva','31201910363','liviasilvaa.liviasilvaa@gmail.com'),(14766,'Luana Flausino Ferreira','31201910370','luanaflausino14@gmail.com'),(14767,'Lucas Peixoto Santana da Silva','31201910382','lucas_peixoto_santana@hotmail.com'),(14768,'Lucas Rela Fernandes','31201910385','lucas_rela@hotmail.com'),(14769,'Maisa Bernardo Bezerra','31201910398','nfmmacch@gmail.com'),(14770,'Marcus Andre Silva Abreu','31201910410','aabreu02@gmail.com'),(14771,'Maria Eduarda Duarte Francao','31201910413','dudamahone96@gmail.com'),(14772,'Maria Vitoria Teixeira Balestra','31201910424','vi.balestra@gmail.com'),(14773,'Mariana Aparecida Zacharias Pereira','31201910425','mahapzp@outlook.com'),(14774,'Mariana Manfredi Facciolli','31201910429','marianamanfredi86@gmail.com'),(14775,'Matheus da Silva Almeida','31201910633','matheusalmeidakl6649@gmail.com'),(14776,'Matheus Dias de Oliveira','31201910441','matheusdias1812@gmail.com'),(14777,'Matheus dos Santos Ropero','31201910442','ropero.zaire@gmail.com'),(14778,'Mikaele Santos Souza','31201910459','mikkasouza20@gmail.com'),(14779,'Mikely dos Santos Rodrigues','31201910460','mikelyrodrigues2001@hotmail.com'),(14780,'Nathalia Malvao da Silva','31201910476','nathaliamalvaodasilva@gmail.com'),(14781,'Paulo Valencia Palavro Gimenez','31201910493','paulo.palavro@bol.com.br'),(14782,'Rafael Neres Magalhaes','31201910507','rafahiulux@gmail.com'),(14783,'Renata Lessa de Almeida','31201910523','lessarenata@outlook.com'),(14784,'Sara Pinherio Rodrigues','31201910536','saraaroera3@gmail.com'),(14785,'Sarah Machado Paiva Barreto','31201910537','sarahmpb@outlook.com'),(14786,'Sophia Oliveira de Souza','31201910540','rosanielis@gmail.com'),(14787,'Suie Matias Saito','31201910544','suiematias13@gmail.com'),(14788,'Tamires Araujo de Souza','31201910547','tmiresaraujo1@gmail.com'),(14789,'Thayna de Oliveira Lombardi','31201910555','thaynalombardi3@gmail.com'),(14790,'Thiago Henrique Sousa Sabino','31201910558','thiagu1nho.henrique63@gmail.com'),(14791,'Tiago Correia de Lima','31201910562','lima.tiagocorreia@gmail.com'),(14792,'Vagner Targino Freitas','31201910565','vagnertargino01@hotmail.com'),(14793,'Victor da Silva Teixeira','31201910569','victor.stgamer@gmail.com'),(14794,'Victorio Henrique de Andrade','31201910578','victorioandrade7@gmail.com'),(14795,'Vinicius Oliveira Camargo','31201910587','viniciusoliveira2107@outlook.com'),(14796,'Vinicius Zampieri do Nascimento','31201910590','zamapierivini@gmail.com'),(14797,'Vitor Silva Moreira','31201910592','vitor.2711@outlook.com'),(14798,'Vitoria Maria Pacheco Silva','31201910596','pachecoo.vitoriaa98108@gmail.com'),(14799,'Vitoria Matias da Silva','31201910597','vitoria20022016@outlook.com'),(14800,'William Shoji Kudaka','31201910605','shoji.kudaka@gmail.com'),(14801,'Yan Estevam dos Santos','31201910607','yan.estevam@outlook.com'),(14802,'Yasmin Ayres Paiva','31201910609','yayres2001@gmail.com'),(14803,'Alessandro Matheus Toledo','31201910008','alematheustoledo@gmail.com'),(14804,'Ana Beatriz Santos Oliveira','31201910020','bkd_bkd@hotmail.com'),(14805,'Ana Paula Carraro Bingre','31201910028','apbingre@gmail.com'),(14806,'Anna Barbara Zanoti Santana','31201910035','zanotiannabarbara@gmail.com'),(14807,'Beatriz Borges Taveira','31201910046','beatrizbt14@gmail.com'),(14808,'Beatriz Bortoletto Ferreira','31201910047','bebortoletto@gmail.com'),(14809,'Beatriz de Almeida Sparvolli','31201910048','beatrizsparvolli.bs@gmail.com'),(14810,'Beatriz Dias Bandeira','31201910049','biadias1805@gmail.com'),(14811,'Beatriz Lima da Silveira','31201910052','bia.tchubaruba@hotmail.com'),(14812,'Beatriz Pereira Lima','31201910053','biahlima3@outlook.com'),(14813,'Camila Cadengue','31201910082','camiscadengue@gmail.com'),(14814,'Camila Santos Almeida da Silva','31201910087','camila_santos.almeida@hotmail.com'),(14815,'Carlos Eduardo Simoes Ribeiro de Lima','31201910090','cadusrlima@gmail.com'),(14816,'Carolayne Mendes Furlan','31201910091','carolayne.furlan@icloud.com'),(14817,'Cristoffer de Oliveira Silva','31201910103','cristoffer2022@outlook.com'),(14818,'Daiane Rodrigues Dantas','31201910104','daiane-dantas1@hotmail.com'),(14819,'Daniel Santos de Sousa','31201910107','dani.e.10.6140@gmail.com'),(14820,'Danyele Seguchi Nakaie','31201910114','danyelesena@outlook.com'),(14821,'Deborah Sandy Mancano Wakasugi','31201910119','tsgdede1219@gmail.com'),(14822,'Elder Fernando Sousa Melo','31201910130','elderf478@gmail.com'),(14823,'Fabricio Lucas Coelho','31201910146','fabriciolucascoelho@gmail.com'),(14824,'Felipe Januario Domingues','31201910151','felipej.domingues@gmail.com'),(14825,'Fernanda Muller Ramaglia','31201910159','mullerfernanda360@gmail.com'),(14826,'Fernanda Pagliani Beato','31201910160','fernandapagliani@outlook.com'),(14827,'Fernanda Vieira Silva','31201910162','fernandavieira858@gmail.com'),(14828,'Filipi Alves Barbosa','31201910166','filipialves13@hotmail.com'),(14829,'Gabriel Antunes Geyer','31201910168','gabrielgeyer2@gmail.com'),(14830,'Gabriel Cafeu Brandao','31201910171','biel.cafeu@gmail.com'),(14831,'Gabriela Martins da Cruz','31201910621','gabrielam8910@hotmail.com'),(14832,'Gabriela Moura Silva','31201910188','gabiluan15@outlook.com'),(14833,'Gabriela Silva Fernandes','31201910190','gsf-fernandes@hotmail.com'),(14834,'Gabriela Uehara Oliveira','31201910192','gabriela.uehara@gmail.com'),(14835,'Geovanna Moreira Duarte Bezerra','31201910198','beatriz.moreira17@outlook.com'),(14836,'Giovana Costa Ferracini','31201910200','giovana.2202ferracini@gmail.com'),(14837,'Guilherme Augusto Ferreira da Cruz','31201910219','guilhermelive980@hotmail.com'),(14838,'Guilherme Costa Santiago','31201910220','guicsmsn@gmail.com'),(14839,'Guilherme Souza Silva','31201910231','xsouzaguilherme@gmail.com'),(14840,'Gustavo Brait Pires','31201910233','gubrait@hotmail.com'),(14841,'Hingrid Oliveira da Silva','31201910251','hingridcastela14@gmail.com'),(14842,'Ianca Jennifer Aguiar da Fonseca','31201910255','ianca_jhennifer@outlook.com'),(14843,'Icaro Dobelli Soares da Silva','31201910256','issdobelli@gmail.com'),(14844,'Igor Bizerra Feba','31201910257','igorfeba@gmail.com'),(14845,'Ingrid Vitoria Mielnik de Moraes','31201910261','ingridmielnik@gmail.com'),(14846,'Isabella de Sousa Paulino','31201910629','isabellapaulinoo@icloud.com'),(14847,'Isabelly Mendes Danni','31201910269','isabellydanni@outlook.com'),(14848,'Jamylle Bertelli de Moraes Gomes','31201910279','mylle_5@hotmail.com'),(14849,'Joao Victor Meireles Natividade','31201910292','joao.natividad@gmail.com'),(14850,'Joao Victor Soares dos Santos','31201910293','joaovsoares8@gmail.com'),(14851,'Jose Gustavo da Silva Tortoza','31201910625','ze_tortoza@hotmail.com'),(14852,'Joyce Martins Coelho Alves','31201910302','01joycemartins@gmail.com'),(14853,'Julia Fernandes Franco','31201910305','juliaffranco08@gmail.com'),(14854,'Kathleen Ariany Martins Silva','31201910619','ariany.kathleen@gmail.com'),(14855,'Lais Marques Vilela Messias','31201910617','laamessias@gmail.com'),(14856,'Larissa Yumie Moriya Bella','31201910337','lissayumie@gmail.com'),(14857,'Laura Bertoni Barbosa Saraiva','31201910338','laurabertonisaraiva@gmail.com'),(14858,'Leticia Dias Cerqueira dos Santos','31201910351','leticiadiascerqueira@outlook.com'),(14859,'Leticia Rodrigues Severino','31201910357','le.rodrigues0394@gmail.com'),(14860,'Luan Fernandes Jose','31201910367','enum55674@gmail.com'),(14861,'Luana Matos Aguiar','31201910372','luuanaaaguiar@gmail.com'),(14862,'Lucas Ramalho Saraiva Dantas','31201910383','lucas.dsra@gmail.com'),(14863,'Luiz Felipe Jesuino da Silva','31201910391','luizfelipejs14@gmail.com'),(14864,'Maicon Alisson Rodrigues dos Anjos','31201910395','maicon.rodrigues017@gmail.com'),(14865,'Maicon Willis Santana Barros','31201910396','maicon.willis100@gmail.com'),(14866,'Maria Clara da Silva','31201910412','milva239@yahoo.com'),(14867,'Maria Eduarda Martins Carvalho','31201910618','duda_mayh@hotmail.com'),(14868,'Maria Eduarda Oliveira Silva','31201910415','mariaeduardaoli39@gmail.com'),(14869,'Maria Gabriela Bartolomeu da Silva','31201910419','mgbartolomeu@gmail.com'),(14870,'Mariana Romeu Torres','31201910432','marianatorres717@gmail.com'),(14871,'Mateus de Araujo Dantas','31201910435','mateusaraujodantas@hotmail.com'),(14872,'Michelli Costa Matos','31201910457','michelli_costa2011@hotmail.com'),(14873,'Nathalia de Andrade Costa','31201910473','andradenathalia.175@gmail.com'),(14874,'Nathalia de Sousa Andrade','31201910474','nathaliasousa73@gmail.com'),(14875,'Nicolas Nobrega da Siva Benassi','31201910480','nicolas.benassi39@gmail.com'),(14876,'Nicolly de Souza Araujo da Silva','31201910483','nicollymalik2011@gmail.com'),(14877,'Nicolly Ferreira Rodrigues dos Santos','31201910484','rnicolly038@gmail.com'),(14878,'Nycole Fernandes de Sousa','31201910487','nycolefernandes7@gmail.com'),(14879,'Pedro de Almeida Sparvolli','31201910623','pedrosparvolli@gmail.com'),(14880,'Pedro Del Rey Menezes','31201910495','pedrinhodelrey@gmail.com'),(14881,'Pedro Vinicius de Campos Viera','31201910500','pedro_decamposvieira@hotmail.com'),(14882,'Pietra Giovanna Gama Bisan','31201910501','giovannah.bisan@gmail.com'),(14883,'Rafael da Silva Alves','31201910504','silvarafaalves2002@gmail.com'),(14884,'Rafael Freire Nunes','31201910506','rafael_freire7@hotmail.com'),(14885,'Raquel da Silva Rodrigues','31201910517','caiodinheirinhos@gmail.com'),(14886,'Rayssa de Aguiar Sobreira','31201910518','sobreirarayssa@gmail.com'),(14887,'Sabrina Alves da Silva','31201910527','sabrinaidapple@gmail.com'),(14888,'Sthefane Alves de Souza','31201910542','sthefanealvessouza@gmail.com'),(14889,'Susane Ferreira de Oliveira','31201910545','susumafege123@gmail.com'),(14890,'Suzane Fernandez Martins da Silva','31201910546','suzanefernandez2001@gmail.com'),(14891,'Thiago Quirino','31201910561','thiago-quirino@outlook.com'),(14892,'Vanusa Nicassia Oliveira Dias','31201910567','vaah2015oliveira@gmail.com'),(14893,'Victor Victorelli Maruyama Vieira','31201910573','victorvictorelli531@gmail.com'),(14894,'Vinicius Alcazar Campos','31201910579','nviniciusalcazar@gmail.com'),(14895,'Vinicius Ytiroko Bressan','31201910589','ytiroko58@gmail.com'),(14896,'Vitor Antunes Oliveira','31201910591','vitunad@gmail.com'),(14897,'Vitoria Paixao Lopes Machado','31201910598','vits363@gmail.com'),(14898,'Abrao Asterio Junior','31201910003','abcorinthians@gmail.com'),(14899,'Alexsander Santos de Cantalice','31201910011','alexsandercdrum@gmail.com'),(14900,'Aline Oliveira Alves','31201910012','liauvez@gmail.com'),(14901,'Allan de Carvalho Santos','31201910014','allandecarvalhosantos@gmail.com'),(14902,'Ana Carolina da Costa Peres','31201910023','nina.anacarol@gmail.com'),(14903,'Ana Caroline Aluques Silva','31201910614','aninha.gssa@gmail.com'),(14904,'Arthur de Araujo','31201910037','arthurrei28@hotmail.com'),(14905,'Bachir Bechara Mourad','31201910040','bachirm98@gmail.com'),(14906,'Barbara Borges de Souza','31201910041','b.borges18@hotmail.com'),(14907,'Beatriz Aline dos Santos Belo','31201910045','beatriz.belo@outlook.com'),(14908,'Caike Tortelli Savino','31201910078','caike.savino@hotmail.com'),(14909,'Camila Rigel da Silva','31201910086','contabilvirtual@yahoo.com.br'),(14910,'Camile Cavalaro de Oliveira','31201910088','camilecoliveira12@gmail.com'),(14911,'Caroline Sayuri Yamada','31201910095','leninha-sasa@hotmail.com'),(14912,'Diego Alves da Silva','31201910121','diegosilva11661@gmail.com'),(14913,'Edilson Martins de Oliveira','31201910126','edgephysis@gmail.com'),(14914,'Eduarda Souto Klimavicius','31201910127','eduarda.klima@hotmail.com'),(14915,'Felipe Pereira Marques Silvestre','31201910153','fe.silvestre200@gmail.com'),(14916,'Gabriel de Souza Santana','31201910173','gabriel.zep.santana@gmail.com'),(14917,'Gabriel Vilarubia','31201910183','gabrielvilarubia@yahoo.com'),(14918,'Gabriela Kunsagi de Paula e Silva','31201910186','gabrielakunsagi@gmail.com'),(14919,'Giovanna Magalhaes Arrais Guerra','31201910206','giihguerraj@gmail.com'),(14920,'Giovanni Santos Floriano da Silva','31201910211','giovannisfs13@gmail.com'),(14921,'Giullia Vianna Galera','31201910212','giu.vgalera26@gmail.com'),(14922,'Guiherme Batista dos Santos','31201910217','kyougamer@gmail.com'),(14923,'Guilherme Luiz Pinheiro Costa','31201910227','guiluizcostapinheiro3@gmail.com'),(14924,'Guilherme Neves Macario','31201910228','guilhermenevesmacario1234@gmail.com'),(14925,'Gustavo Rodrigues Nascimento de Assis Junior','31201910238','ciencia.oteca@hotmail.com'),(14926,'Henrique Cardoso de Oliveira','31201910246','henrique_cardosoo@outlook.com'),(14927,'Herllon de Oliveira','31201910249','herllon.fut13@gmail.com'),(14928,'Hyan Ferraz Ribeiro','31201910253','hyanferraz01@hotmail.com'),(14929,'Ingryd Nascimento','31201910262','guiingryd246@gmail.com'),(14930,'Jaicilene Rezende da Costa','31201910276','jaicirezende@gmail.com'),(14931,'Jayme Cardoso da Silva','31201910281','jaymecardoso8@gmail.com'),(14932,'Joao Lucas Martins Lessa','31201910290','jmartinslessa@gmail.com'),(14933,'Joao Vitor Rodrigues de Souza','31201910294','joaovitorrodriguesdesouza17@gmail.com'),(14934,'Jose Leandro Silva de Freitas','31201910299','josemavs41@gmail.com'),(14935,'Joyce Cipriano Victurino','31201910301','jvicturino@gmail.com'),(14936,'Juan Pablo Moreno Oliveira','31201910303','juanmmoreno1998@gmail.com'),(14937,'Julia Alonso Perez Nogueira','31201910304','julyperez72@yahoo.com'),(14938,'Julia Morais Juliani','31201910307','jmjuliani17@gmail.com'),(14939,'Juliana Domingos de Amaral','31201910310','julianaamaraal02@gmail.com'),(14940,'Kamila Cruz Cardoso','31201910319','kamila_cruzcardoso@hotmail.com'),(14941,'Karine de Oliveira Lorencao','31201910320','karine_magno@hotmail.com'),(14942,'Karoline Ramalho de Lima','31201910321','karolineramalho48@gmail.com'),(14943,'Kauan Rodrigues Guimaraes','31201910322','kauan18rodrigues@outlook.com'),(14944,'Kelvin Bezerra da Silva','31201910326','kelvinbfeliz@gmail.com'),(14945,'Laura Rosik Rezende','31201910341','laurarosik@gmail.com'),(14946,'Laura Souza de Carvalho','31201910342','laurasouzadecarvalho@gmail.com'),(14947,'Leonardo Francisco Menezes','31201910348','leomenezes20201@gmail.com'),(14948,'Levy Henrique Alves Nunes','31201910361','levyhanunes@gmail.com'),(14949,'Luana Souza Nogueira','31201910373','luana.nogueira3@fatec.sp.gov.br'),(14950,'Lucas Gomes Venancio','31201910375','lukinhsgomes@gmail.com'),(14951,'Lucas Mateus Santos Pereira','31201910379','rocketcoder65@gmail.com'),(14952,'Lucas Santos Souto','31201910386','lucas_souto17@outlook.com'),(14953,'Luiz Felipe Trigone','31201910392','luiztrigona@gmail.com'),(14954,'Luiz Henrique Plonkoski Lopes','31201910394','luiz.70max@hotmail.com'),(14955,'Marcio de Oliveira','31201910404','deboraoliver1006@gmail.com'),(14956,'Marcos Vinicius Monteiro Dias','31201910409','haline.monteiro1992@gmail.com'),(14957,'Maria Eduarda Sousa Silva','31201910417','maddusousa@gmail.com'),(14958,'Maria Estefany de Amorim Ferreira','31201910418','rivandaamorim@gmail.com'),(14959,'Maria Natalia Redigolo','31201910421','marianredigolo@gmail.com'),(14960,'Maria Regina Zipf Martins','31201910423','mrzipfmartins@gmail.com'),(14961,'Mariana Eliza Xavier da Silva','31201910426','mari_xavier@hotmail.com.br'),(14962,'Mariana Goncalves Porto','31201910428','maryp_2003@hotmail.com'),(14963,'Mariana Rodrigues Chaves da Silva','31201910431','mariana.rodriguescs@hotmail.com'),(14964,'Matheus Kenzo Miashiro','31201910444','matheuskenzo2805@hotmail.com'),(14965,'Micael Santana da Silva','31201910455','micaelsantana23@gmail.com'),(14966,'Miguel Almeida Santos','31201910458','mguel.almeidasantos@gmail.com'),(14967,'Miqueias Oliveira Lima','31201910461','miqueias_oliveiralima@hotmail.com'),(14968,'Murillo Sousa de Jesuz','31201910464','murillo_jesuz@hotmail.com'),(14969,'Murilo Correa Franciscon','31201910465','murilofranciscon@hotmail.com'),(14970,'Nadja Thamyres Carvalho Dias de Camargo','31201910467','nthamyres86@gmail.com'),(14971,'Natalia Ferreira dos Santos','31201910468','liri_nai@hotmail.com'),(14972,'Nataniele Mariano da Silva','31201910469','na-clara@hotmail.com'),(14973,'Natasha Roberta Bueno','31201910470','natasha.nrb@gmail.com'),(14974,'Nathalia Leonardo Barreto','31201910475','nathalia.vestes@gmail.com'),(14975,'Nicoly Rodrigues Mota','31201910485','nicoly.rodriguesmota@gmail.com'),(14976,'Paulo Jose Farias','31201910492','paulfariaso04@gmail.com'),(14977,'Pedro Henrique Vidal dos Santos','31201910497','pedrohenriquevidaldossantos@gmail.com'),(14978,'Pedro Martins Morato','31201910498','mpedro341@gmail.com'),(14979,'Raissa Siqueira Santos','31201910512','raissa.siqueira03@hotmail.com'),(14980,'Rakelly da Silva Ferreira','31201910513','andraderakelly@gmail.com'),(14981,'Sabrina Mel Efigenio','31201910530','sabrinaefigenio@hotmail.com'),(14982,'Samanta Biscaro Benzi','31201910531','sami.benzi@hotmail.com'),(14983,'Sandy Martins da Silva','31201910535','sandy_martins7@hotmail.com'),(14984,'Suellen Aparecida Godoy Araujo','31201910543','adm.suellenaraujo@hotmail.com'),(14985,'Thiago Lamonica Barreto','31201910559','ticolamonicabarreto@gmail.com'),(14986,'Thiago Menezes Miranda','31201910560','thiago07.menezes07@gmail.com'),(14987,'Tiago de Oliveira Gutierre','31201910563','tiagogutierre@hotmail.com'),(14988,'Vinicius Ansanello','31201910581','vini.nello@gmail.com'),(14989,'Vinicius Cardoso Spadina','31201910582','viniciuscspadina@gmail.com'),(14990,'Vinicius Cristiano Nagatomo de Andrade','31201910583','vinicius_nagatomo@hotmail.com'),(14991,'Vitoria da Silva Kratel','31201910594','vitoriakratel@hotmail.com'),(14992,'Wanessa Alves de Santana','31201910602','wanessaa348@gmail.com'),(14993,'Weliton DAmbrosi de Melo','31201910603','welitonmelo121@gmail.com'),(14994,'Abner Soares da Cruz','31201910001','abner_soaresc@hotmail.com'),(14995,'Alexia Maria Caetano Silva','31201910010','alexiacaetanosilva@gmail.com'),(14996,'Alisson Oliveira da Silva','31201910013','oliveira.alissonsilva@gmail.com'),(14997,'Ana Caroline da Silva','31201910025','ana.silva2001@icloud.com'),(14998,'Beatriz Ribeiro Valadares','31201910054','gercinovaladares@gmail.com'),(14999,'Beatriz Santos de Souza','31201910055','beatriz.souza312@etec.sp.gov.br'),(15000,'Bianca Rocha de Paula','31201910060','biancarochadepaula@gmail.com'),(15001,'Bruna Lopes Gois','31201910066','bruna-chan@live.com'),(15002,'Bruna Nataline Siqueira Santos','31201910067','brunanataline@yahoo.com.br'),(15003,'Bruna Silva Azevedo','31201910068','brunaazevedosp@hotmail.com'),(15004,'Bruno dos Santos Mantovane','31201910071','brumantovane@hotmail.com'),(15005,'Bruno Sobreira Franca','31201910076','brunosfranca15@gmail.com'),(15006,'Cainna Milaneli Silva','31201910079','anniacms@gmail.com'),(15007,'Caique Luan Seabra dos Santos','31201910081','caiqueseabra123@gmail.com'),(15008,'Camila Regina Antonio Ferreira','31201910085','camilaf901@gmail.com'),(15009,'Cassiane dos Santos Franca','31201910097','cassiane.frana@yahoo.com.br'),(15010,'Danielli Gimenez da Silva','31201910111','dannigimenezsilva@gmail.com'),(15011,'David de Oliveira Gasparetti','31201910115','davidgasparetti77@gmail.com'),(15012,'Edgar Junior Salazar Zamudio','31201910125','perico20022010@hotmail.com'),(15013,'Eduardo Braulio Filho','31201910129','edubraulio593@gmail.com'),(15014,'Elis de Andrade Castilho','31201910131','eliscastilho00@gmail.com'),(15015,'Emily Gleyce Ramos Machado','31201910135','emilygleyceramosmachado@gmail.com'),(15016,'Enrique Goulart Pereira','31201910631','enriquewinlive@hotmail.com'),(15017,'Estela Argolo Paraiso Carvalho','31201910141','estela.argolo@gmail.com'),(15018,'Esther de Souza Rodrigues','31201910142','esthersrlr@live.com'),(15019,'Evelyn Shinayder Sousa Santos','31201910144','evelynshinayder169@gmail.com'),(15020,'Felipe Aureo Rodrigues da Silva','31201910148','felipeaureo@gmail.com'),(15021,'Felipe Ferreira de Almeida Silva','31201910150','gatodebotas2002@gmail.com'),(15022,'Felipe Ramos de Come','31201910154','feliperamosdcm@gmail.com'),(15023,'Fernanda Cavalcante de Sa','31201910155','gefelipecavalcante@gmail.com'),(15024,'Flavio Cariel Ferreira','31201910167','flaviocariel@gmail.com'),(15025,'Gabriel Mozelli Moreto','31201910179','gabrielmozelli4825@gmail.com'),(15026,'Gabriel Thiago Costa Pereira','31201910182','gabrielthiagocosta@gmail.com'),(15027,'Geovanna de Souza Silva','31201910197','jeovannasouza9@hotmail.com'),(15028,'Giovanna Araujo','31201910203','giovanna.araujinha@gmail.com'),(15029,'Giovanna Santos DAlessio Brandao','31201910208','gibrandao28@gmail.com'),(15030,'Guilherme Arruda Carneiro da Silva','31201910218','guihabbo_link@hotmail.com'),(15031,'Guilherme Henrique Gomes da Silva','31201910624','guilhermegood10@gmail.com'),(15032,'Guilherme Rios de Oliveira','31201910229','guilhermeriosolive@gmail.com'),(15033,'Guilherme Yamada Yoshigaye','31201910232','pinguimz@live.com'),(15034,'Gustavo Henrique Rodrigues da Silva','31201910236','conta_pagamentos@hotmail.com'),(15035,'Hadassa Fernanda Souza da Silva','31201910241','hadassafernanda13@gmail.com'),(15036,'Harickson Matheus Oliveira Pereira','31201910242','harickson92015@hotmail.com'),(15037,'Heloisa Martins Ferreira Pinto','31201910245','heloisamartinsfp6@gmail.com'),(15038,'Henrique Lucas de Souza Oliveira','31201910247','kiki.lucas61@gmail.com'),(15039,'Heyd de Oliveira','31201910250','heyd.oliveira13@gmail.com'),(15040,'Isaque Fernandes Dallarme','31201910273','isaquedallarme@gmail.com'),(15041,'Isaque Fernandes de Carvalho','31201910274','isaquecarvalho29@gmail.com'),(15042,'Jade Luana de Jesus dos Santos','31201910275','jadeluuana@gmail.com'),(15043,'Jhuan Borges Jambeiro de Souza','31201910288','jhuansenai@gmail.com'),(15044,'Juno dos Santos Camillo','31201910317','juno.cml@gmail.com'),(15045,'Kaue Martins Amaral','31201910323','kaue.maepai7@gmail.com'),(15046,'Kayna Gustavo Santana Silva','31201910325','kayna_gustavo1999@outlook.com'),(15047,'Leonardo Carvalho de Melo','31201910344','leomelocarvalho@outlook.com'),(15048,'Leonardo Ferreira dos Santos','31201910347','leo8415@hotmail.com'),(15049,'Leticia da Silva Pimenta','31201910350','lelesilvap3@gmail.com'),(15050,'Leticia Gasparetti Vargas','31201910353','leticiagvargas@hotmail.com'),(15051,'Leticia Gomes Biserra','31201910354','letciagomesbiserra@yahoo.com'),(15052,'Livia Romera de Oliviera','31201910364','romeralivia@gmail.com'),(15053,'Lucas Henrique Lopes','31201910376','lucashenriquelopes1480@gmail.com'),(15054,'Lucas Leite dos Santos','31201910377','lucas.coca12@gmail.com'),(15055,'Lucas Oliveira de Lima','31201910381','lucas.1405oliveira@gmail.com'),(15056,'Lucas Ramos Silva de Carvalho','31201910384','lucasbrgamer54@hotmail.com'),(15057,'Ludmila Bruni','31201910388','michelli.apsouza@gmail.com'),(15058,'Maisa Silva Cardoso de Sa','31201910399','silvaa.maisa@gmail.com'),(15059,'Maria Adriana de Sousa Lopes','31201910411','adrianalopes486@gmail.com'),(15060,'Maria Susyane do Nascimento','31201910613','rodrigocleto.cleto@gmail.com'),(15061,'Mariana Fontes Alves','31201910427','marianafontes1996@gmail.com'),(15062,'Mariana Oliveira de Melo','31201910430','marianamelo0729@outlook.com'),(15063,'Marina Gradin','31201910433','marina.gradin19@gmail.com'),(15064,'Matheus Costa Rique','31201910440','parasemprevitoria@outlook.com'),(15065,'Mauricio Rosalino Junior','31201910451','mauriciorosalino15@outlook.com'),(15066,'Nathalia Breda Costa','31201910472','bdebreda@gmail.com'),(15067,'Nathalia Silva Franca','31201910477','ntsfranca@gmail.com'),(15068,'Nicolas Evangelista de Souza','31201910478','nicolasedesouza@gmail.com'),(15069,'Nicolas Marcelino da Silva','31201910479','nicolasmarcelino.ns@gmail.com'),(15070,'Nicole Alexandre Ruiz dos Santos','31201910481','nic.ruiz06@gmail.com'),(15071,'Nicolle Ferreira Filho','31201910482','nicolle-ferreira28@hotmail.com'),(15072,'Pablo Henrique da Silva','31201910489','pablo2hdse@gmail.com'),(15073,'Rafael Bispo da Silva','31201910503','rafael.etec.ev@gmail.com'),(15074,'Rafael Oliveira da Silva','31201910508','rafa.trab.oliveira@gmail.com'),(15075,'Rafaela da Silva Ferreira','31201910510','rafaelasilfer24@gmail.com'),(15076,'Raphael Silva dos Passos','31201910516','raphaeldpassos@gmail.com'),(15077,'Robert Pereira Barbosa','31201910524','robertpereira98@icloud.com'),(15078,'Rodrigo Alves Rabello','31201910525','rabelloarodrigo@gmail.com'),(15079,'Ronald Willi da Silva Peixoto','31201910526','ronaldwilli4@gmail.com'),(15080,'Thais Camila Diniz dos Santos Silva','31201910620','thaiscamila-s-s-@hotmail.com'),(15081,'Thais Cristina Andrade da Silva','31201910550','thais.666ta@gmail.com'),(15082,'Thais da Silva Teodoro','31201910551','oithaisteodoro@gmail.com'),(15083,'Thamirys Regina Garbi','31201910553','reginagarbi@gmail.com'),(15084,'Victor Hugo de Souza Nascimento','31201910572','victorhugo25121999@hotmail.com'),(15085,'Victoria Regina da Silva','31201910576','vitoriasilva10293@gmail.com'),(15086,'Vinicius de Melo Rodrigues','31201910584','vinicius.melo.rodrigues@hotmail.com'),(15087,'Vinicius Mendonca Nogueira','31201910586','viniciusnogueira.contato@gmail.com'),(15088,'Vitoria Leao Freitas','31201910595','vitoria17102002@gmail.com'),(15089,'Vitoria Ramalho de Lima','31201910599','vitoriaramalho608@gmail.com'),(15090,'Wellington Pereira Trindade','31201910604','wpereira3721@gmail.com'),(15091,'Willian Yamashita Alves','31201910606','williamvc135@outlook.com'),(15092,'Yasmim Sena Barros','31201910608','yasmim_senabarros@hotmail.com'),(15093,'Adrielly Moreira da Silva','31201910005','moreira_ad@hotmail.com'),(15094,'Akio Guilherme Dourado Kashiwaya','31201910006','stefaniadourado@gmail.com'),(15095,'Alexandro de Freitas Dias','31201910009','alexjamming@hotmail.com'),(15096,'Amanda Galvao de Aquino','31201910017','amandaaquino1414@gmail.com'),(15097,'Amanda Lima Pereira','31201910018','amanda.lp01@hotmail.com'),(15098,'Amanda Pereira Gomes','31201910019','amandapg10@gmail.com'),(15099,'Ana Carolina Carvalho de Oliveira','31201910022','deboraoliver1006@gmail.com'),(15100,'Ana Karolyne Sousa Silva','31201910026','karol.sous42015@gmail.com'),(15101,'Ana Luiza Santos de Almeida','31201910027','ana.luiza.s.almeida@hotmail.com'),(15102,'Ana Paula de Souza Brandao','31201910029','a.paula.brandao@hotmail.com'),(15103,'Andressa Pereira de Sousa Penha','31201910034','dressa.top20@gmail.com'),(15104,'Arthur Baia Lourenco','31201910036','arthurbaia20@outlook.com'),(15105,'Barbara Vitoria Cavalcante Mesquita','31201910044','barbara_vivi176@hotmail.com'),(15106,'Bruna Caroline Teixeira da Silva','31201910065','bcteixeira88@gmail.com'),(15107,'Camila Justo de Souza','31201910083','camilajustods@gmail.com'),(15108,'Camila Martins Corsi','31201910084','camicoorsi@gmail.com'),(15109,'Cintia Ferreira Janeri','31201910100','janericintia@gmail.com'),(15110,'Cleverson Gomes da Silva','31201910101','gcleverson8010@gmail.com'),(15111,'Dandara Nascimento dos Santos','31201910105','dandara.santoss@outlook.com'),(15112,'Daniel Victor dos Santos Araujo','31201910108','danielsantosaraujo99@gmail.com'),(15113,'Danillo Gabriel Pereira Santos','31201910112','danillogps@hotmail.com'),(15114,'Dayelli Kezia Nascimento','31201910116','dayellik@gmail.com'),(15115,'Debora Takase Queiroz','31201910118','pandatakase@gmail.com'),(15116,'Eduardo Alves Rodrigues','31201910128','eduardo.alvesrod@gmail.com'),(15117,'Evelyn Ruama Martins Trindade','31201910143','evelynruamaamvl@gmail.com'),(15118,'Fernanda Costa Madeira','31201910156','fer.costamadeira16@gmail.com'),(15119,'Gabriel Arrabaca Rosseto','31201910626','gabriel@monitorguard.com.br'),(15120,'Gabriel Gomes da Rocha','31201910174','gabrielgomesvsj@gmail.com'),(15121,'Gabriel Luiz de Souza Fiedler','31201910176','gabrielfiedler095@gmail.com'),(15122,'Gabriela Soares Tome','31201910191','gabi.soares.tome@hotmail.com'),(15123,'Gabryelle Jesus Santos da Silva','31201910612','gabryellejesussanntos@gmail.com'),(15124,'Giovanna de Oliveira Gomes','31201910204','giov.oligomes@gmail.com'),(15125,'Giovanna Santos Gianetti de Souza','31201910209','giovannagianetti17@gmail.com'),(15126,'Gloria Maria Azevedo de Almeida','31201910213','glorinhahmariah@gmail.com'),(15127,'Guilherme Gherghi Barbosa Santos','31201910224','gherghi02@gmail.com'),(15128,'Guilherme Lima Gomes','31201910226','guilherme68000@gmail.com'),(15129,'Gustavo de Lima Oliveira','31201910234','gdelimaoliveira289@gmail.com'),(15130,'Gustavo Viana Caires','31201910240','gviana850@gmail.com'),(15131,'Helder Aguiar da Silva','31201910243','helder.aguiar@yahoo.com.br'),(15132,'Iago Gomes Noronha','31201910254','iagonoronha99@gmail.com'),(15133,'Isabella Castellani','31201910265','isahisah62@gmail.com'),(15134,'Jamile Sopran Ferreira','31201910277','jamilesopran@outlook.com'),(15135,'Jaqueline Anjos de Oliveira','31201910280','jaqueline_anjos09@hotmail.com'),(15136,'Jhonnathan de Sousa Pessoa','31201910286','jhonnathan890@gmail.com'),(15137,'Jhonny de Sousa Pessoa','31201910287','jhonnathan890@gmail.com'),(15138,'Joao Pedro Alves da Silva','31201910291','pedrojoao15@hotmail.com'),(15139,'Johnny Gabriel Santana de Oliveira','31201910296','johnny.gabrieloliveira@gmail.com'),(15140,'Joice Augusta Porto de Lima','31201910297','joiceaugusta098@gmail.com'),(15141,'Julia Hellen Alves dos Santos','31201910306','julia.hellen.jh@hotmail.com'),(15142,'Juliana Soares dos Santos','31201910312','juliana.soares.santos22@gmail.com'),(15143,'Julio Cesar Alves Brandao','31201910313','julio.cesar.jlcs635@gmail.com'),(15144,'Julio Cezar Duarte Izidoro','31201910316','julio.izidoro173@gmail.com'),(15145,'Kiara Iasmyn Nascimento dos Santos','31201910328','kiaraslytherin7@gmail.com'),(15146,'Laila Mariana de Souza Andrade','31201910329','lailamarianasa@gmail.com'),(15147,'Laiza Silva de Azevedo','31201910330','laizasazevedo@hotmail.com'),(15148,'Larissa Beatriz Pedroso Alencar','31201910332','plarissabeatriz@gmail.com'),(15149,'Larissa de Souza Vitor Honorato','31201910334','larissa.prosperidade@gmail.com'),(15150,'Larissa Torres Gomes de Sa','31201910336','lariisa.torres@gmail.com'),(15151,'Leonardo Machado Leite','31201910349','l.leleoleite@gmail.com'),(15152,'Leticia dos Santos Souza','31201910352','lele.s2.justin57@gmail.com'),(15153,'Leticia Leite da Silva','31201910355','ticamile@hotmail.com'),(15154,'Leticia Lourenco dos Santos','31201910356','leticials85@hotmail.com'),(15155,'Leticia Souza Bina','31201910358','leticiabina14@gmail.com'),(15156,'Lieh Marina Maffeis Acafori','31201910362','liehmaffeis@hotmail.com'),(15157,'Lorenza Martin Cabrera','31201910366','lorenza_lmc@hotmail.com'),(15158,'Lorrane Gabriele Rosa da Silva','31201910627','lorranegabriele50@gmail.com'),(15159,'Luana Carneiro Gobbo','31201910369','luanagobbo28@gmail.com'),(15160,'Lucas de Jesus Franca','31201910374','lucasmasc5@gmail.com'),(15161,'Lucas Nobre Batista','31201910380','marianobrebatista@hotmail.com'),(15162,'Luis Gustavo Borges dos Santos','31201910389','gustavoborges.cloud@outlook.com'),(15163,'Maina Lima da Silva','31201910397','mainalima@hotmail.com'),(15164,'Malcom Santos Teixeira','31201910400','malcomsantosteixeira@gmail.com'),(15165,'Marco Antonio Dusi Nelli','31201910405','dusinelli@gmail.com'),(15166,'Maria Eduarda Rique Pessotti','31201910416','dudzz2132@gmail.com'),(15167,'Matheus Arantes Mororo','31201910439','o3mororo@gmail.com'),(15168,'Matheus Henrique da Silva Apostulo','31201910443','matheusapostulo10@gmail.com'),(15169,'Matheus Lemos Amaragi','31201910445','matheuslemosamaragi@gmail.com'),(15170,'Matheus Malentaqui de Oliveira','31201910446','matheus.oliveira500@hotmail.com'),(15171,'Matheus Santana de Queiroz','31201910449','matheus26_10@hotmail.com'),(15172,'Mayan Furtado Alves','31201910453','mayan.alves2002@outlook.com'),(15173,'Moises Candido Mazeu Ferreira','31201910463','mcmf121201@gmail.com'),(15174,'Nathalia Barros Bernardello','31201910471','nahsuede@gmail.com'),(15175,'Palloma Nunes Lansana','31201910490','gabi.lansana@hotmail.com'),(15176,'Rafael da Silva Emidio','31201910505','emidiorafael.silva@gmail.com'),(15177,'Ramon Goncales Felippe','31201910514','ramoongf@gmail.com'),(15178,'Renan Mascarenhas Menini','31201910521','renan.mars18@gmail.com'),(15179,'Sabrina Beatriz Rocha do Amaral','31201910528','sabrina_bra2@hotmail.com'),(15180,'Sabrina Fernandes','31201910529','sabrina.fernandes06g@gmail.com'),(15181,'Samuel Tambalo da Silva','31201910534','samueltambalo2001@gmail.com'),(15182,'Thayna da Silva','31201910554','tsprepon@gmail.com'),(15183,'Tiago Nunes dos Santos Queiroz','31201910564','tiagoqroz@live.com'),(15184,'Vanusa Valentim Amaral','31201910630','van.amaralvalentim@gmail.com'),(15185,'Victor Felippe Dias','31201910570','victor.f.dias@hotmail.com'),(15186,'Victoria Isabelli Souza Demboski','31201910574','victoria.demboski@gmail.com'),(15187,'Vitoria Souza Santana','31201910600','vitoriasouza7@hotmail.com'),(15188,'Gabarito Simulado EPUFABC','31201900000','teoolt.bio@gmail.com'),(15189,'Antonio Jonatas Oliveira Leite','11201722065',''),(15192,'David Dias de Carvalho Duarte','11085415',''),(15196,'Gabriel Goncalves de Oliveira Pereira','11075115',''),(15198,'Halderli Ferreira da Silva','11201720214',''),(15200,'Lucas Bueno de Novais','11201721114',''),(15202,'Raquel Moura dos Santos','11039715',''),(15205,'Vitor Camilo Vera','11201720090',''),(15215,'Nome','9',''),(15216,'Nome','10',''),(15217,'Agatha Cintia Marques de Gouveia','11035614',''),(15218,'Alex Freitas de Azevedo','11106815',''),(15219,'Aline Yuki do Amaral Okubo','11201721740',''),(15221,'Arthur Castro Magno','11022914',''),(15224,'Egidio Henrique Paixao','11201721106',''),(15227,'Genilson Alves dos Santos','11045016',''),(15230,'Joao Alberto Flores Brigham','11082113',''),(15232,'Marcio Lima Filho','11201722825',''),(15235,'Rafaella Mayumi Takahashi','11012814',''),(15236,'Renan Carvalho Faustino','11201720892',''),(15238,'Vitor Hugo da Silva Pigatto','21034214',''),(15247,'Nome','1',''),(15248,'Nome','2',''),(15249,'Nome','3',''),(15250,'Nome','4',''),(15251,'Nome','5',''),(15252,'Nome','6',''),(15253,'Nome','7',''),(15254,'Nome','8',''),(15408,'Andre Binatto Junior','11201721432',''),(15409,'Danillo Silva Teixeira','11036116',''),(15411,'Dianna Araujo de Aquino','11201722601',''),(15413,'Everton da Silva Maia','11034715',''),(15415,'Gabriela Maria Jesus dos Santos','11083116',''),(15416,'Guilherme Ali Abdallah Bassani','11025016',''),(15417,'Guilherme Naoji Okamoto','11201721765','naoji.okamoto@aluno.ufabc.edu.br'),(15418,'Gustavo Arao Urban','11201721080',''),(15420,'Larissa Akashi','11031515',''),(15424,'Maira Feijo Ottoni Sousa','11031012',''),(15425,'Matheus Galvao Garcia','11101416',''),(15436,'Rodrigo Haguiuda Hashimoto','21076816',''),(15437,'Rodrigo Martins Pereira','11082312',''),(15438,'Tawany Oliveira Santos','11092215',''),(15439,'Victor Koji Iizuka','11034913',''),(15440,'Wellingtom Rodrigues da Silva','11201722450',''),(15441,'Alex Zaneratto Cavalcante','11088716',''),(15442,'Andre Casagrande Lopes','11201722265',''),(15444,'Barbara Martinelli Petrone','11201722330',''),(15454,'Daniel Bengevenga Clemente','11010716',''),(15455,'Domenico Ariel Cunha Rojas Allegretti','11060915',''),(15457,'Fernando Pessoa dos Santos','11201720064',''),(15458,'Gabriel El Khouri Miraglia','11201722559',''),(15459,'Gabriel Soares de Camargo Munaro','21011615',''),(15461,'Guerino Brunoro Junior','11201722376',''),(15462,'Julia Tomeleri Manso','11201720005',''),(15464,'Leonardo Jose do Carmo','11201721600',''),(15465,'Luciano Tatsumi Teruia','11201722557',''),(15466,'Matheus Medeiros Vieira','11201722769',''),(15468,'Paulo Eduardo Santos Nedochetko','11201722289',''),(15469,'Vitoria Helena Siqueira Maia','11051716',''),(15486,'Arthur Rolim Cardoso Afonso Campagnaro','11201722329',''),(15487,'Caio Santos de Abreu','11100316',''),(15496,'Felipe Antonioli Martins','11010016',''),(15497,'Giovanna Goncalves Felix da Silva','11201722607',''),(15498,'Leonardo Della Casa Zampieri','11201720594',''),(15499,'Pamela de Souza Bella Guerra','11027814',''),(15500,'Tarcisio Luiz Barrile Filho','11067316',''),(15501,'Thiago dos Santos Almeida','11021816',''),(15502,'Amanda Gonzalez Matuoka','11119714',''),(15503,'Amanda Lima Ruiz','11090016',''),(15504,'Andre Beltrame Kruss','21083613',''),(15505,'Dante Miquelon Alaimo','11001316',''),(15506,'Diego Henrique Sabino da Mata','11131510',''),(15507,'Fabio Tsuneo Sena Santos Miyahara','11073011',''),(15508,'Guilherme Cardoso Porto Ferreira','11097415',''),(15509,'Jefferson Cosmo dos Santos','11201921459',''),(15510,'Jose Vitor Franze dos Santos','11057616',''),(15511,'Kelvin Alves dos Santos','11066814',''),(15512,'Leonardo Leca Ferraz','21051415',''),(15513,'Leticia Formiga Silva','11016312','leticia.formiga@aluno.ufabc.edu.br'),(15514,'Lucas de Toledo Linardi','11114814',''),(15515,'N1','11099901',''),(15516,'N2','11099902',''),(15517,'N3','11099903',''),(15518,'N4','11099904',''),(15519,'N5','11099905',''),(15520,'N6','11099906',''),(15521,'N7','11099907',''),(15522,'N8','11099908',''),(15523,'Nicolas de Oliveira Mizukami','11075314',''),(15524,'Aluno Teste Zampirolli','12345456999','fzampirolli@gmail.com'),(15525,'Alice da Silva Oliveira','11116415','alice.o@aluno.ufabc.edu.br'),(15526,'Amanda de Carvalho Catelan','21014616','amanda.catelan@aluno.ufabc.edu.br'),(15527,'AMANDA VALENTE TEIXEIRA','11201810518','a.valente@aluno.ufabc.edu.br'),(15528,'Ana Carolina da Silva Martins','11201722009','ana.martins@aluno.ufabc.edu.br'),(15529,'Ana Caroline Lopes Rocha','11080016','caroline.ana@aluno.ufabc.edu.br'),(15530,'Ana Clara Saisse da Silva Santos','11044816','clara.saisse@aluno.ufabc.edu.br'),(15531,'Anselmo Alves do Nascimento','11125008','anselmo.nascimento@ufabc.edu.br'),(15532,'ANSELMO PEZZUOL NETO','11201811859','pezzuol.anselmo@aluno.ufabc.edu.br'),(15533,'Arthur Tales Feitosa de Oliveira','11053916','arthur.tales@aluno.ufabc.edu.br'),(15534,'Beatriz Ferreira Guabiraba','11201722314','b.guabiraba@aluno.ufabc.edu.br'),(15535,'Bianca Escudeiro Alvarenga','11201721560','bianca.alvarenga@aluno.ufabc.edu.br'),(15536,'BRUNO DE MELO MARQUES DA SILVA','11201811620','marques.melo@aluno.ufabc.edu.br'),(15537,'Bruno Kazuo Souza','11030916','bruno.kazuo@ufabc.edu.br'),(15538,'Caio Mafra Morais','11201721110','m.caio@aluno.ufabc.edu.br'),(15539,'Caio Pereira Zacardi de Freitas','11201722793','caio.zacardi@aluno.ufabc.edu.br'),(15540,'Camila dos Anjos Anunciacao','11066215','anjos.camila@aluno.ufabc.edu.br'),(15541,'CAROLINA NEIVA RIBEIRO','11201811580','carolina.neiva@aluno.ufabc.edu.br'),(15542,'Clayton Bomfim Biscalchini','11201720790','clayton.biscalchini@aluno.ufabc.edu.br'),(15543,'Diego Nunes Cardoso','11110414','diego.cardoso@aluno.ufabc.edu.br'),(15544,'Eryka Fernanda Santos Kanashiro','11201722692','eryka.fernanda@aluno.ufabc.edu.br'),(15545,'Fabio dos Santos de Souza','11201722051','souza.f@aluno.ufabc.edu.br'),(15547,'Felipe Nadona','11201721336','felipe.nadona@aluno.ufabc.edu.br'),(15548,'Gabriel de Paula Soares','11095715','gabriel.paula@aluno.ufabc.edu.br'),(15549,'Gabriel Morales','11201721263','gabriel.morales@aluno.ufabc.edu.br'),(15550,'Guilherme Pereira de Oliveira','11201723072','pereira.g@aluno.ufabc.edu.br'),(15551,'GUSTAVO CARDOSO BEZERRA','11201822553','cardoso.gustavo@aluno.ufabc.edu.br'),(15552,'Gustavo Miyahira Luz','11051415','miyahira.luz@aluno.ufabc.edu.br'),(15553,'Gustavo Rodrigues Lopes','11006816','lopes.gustavo@aluno.ufabc.edu.br'),(15554,'Harrison de Oliveira Sousa','11072214','harrison.sousa@aluno.ufabc.edu.br'),(15555,'Jefferson Santos Goes Pinheiro','11095016','goes.pinheiro@aluno.ufabc.edu.br'),(15556,'Jessyca Pereira Granato','11201721166','jessyca.g@aluno.ufabc.edu.br'),(15557,'Juliana Cristina Barbosa','21034414','j.barbosa@aluno.ufabc.edu.br'),(15558,'Juliana dos Santos Matias da Silva','11051016','juliana.matias@aluno.ufabc.edu.br'),(15559,'Kaue Aapson Maiworm Santos','11047616','kaue.aapson@aluno.ufabc.edu.br'),(15560,'LEONARDO ALMEIDA DO CARMO','11201811230','l.almeida@aluno.ufabc.edu.br'),(15561,'Leonardo Noriyuki Kagiyama','11201721530','kagiyama.noriyuki@aluno.ufabc.edu.br'),(15562,'Leonardo Ramos da Silva','11025312','lramos@aluno.ufabc.edu.br'),(15563,'LETICIA ALMEIDA SANTOS','11201811097','a.leticia@aluno.ufabc.edu.br'),(15564,'Leticia Lopes Albado','11096416','leticia.albado@aluno.ufabc.edu.br'),(15565,'Leticia Martineli Brentegani','11002516','l.brentegani@aluno.ufabc.edu.br'),(15566,'Lucas Brandao Pereira','11201720262','lucas.brandao@aluno.ufabc.edu.br'),(15567,'Lucas de Lima Cavalcanti','11003115','lucas.cavalcanti@aluno.ufabc.edu.br'),(15568,'Lucas Komon Yi','11201720934','lucas.k@aluno.ufabc.edu.br'),(15569,'Luiz Gonzaga de Lima Junior','11094916','luiz.junior@aluno.ufabc.edu.br'),(15570,'Luiz Henrique de Araujo Terrabuio','11201722504','luiz.terrabuio@aluno.ufabc.edu.br'),(15571,'Marco Aurelio de Assuncao','11104615','m.assuncao@aluno.ufabc.edu.br'),(15572,'Matheus Antunes Barbosa','11201721845','antunes.m@aluno.ufabc.edu.br'),(15573,'Matheus do Nascimento Cendron','21021515','cendron.matheus@aluno.ufabc.edu.br'),(15574,'Matheus Nunes Lino da Silva','11092715','nunes.matheus@aluno.ufabc.edu.br'),(15575,'Murillo da Costa Reis','11112315','murillo.reis@ufabc.edu.br'),(15576,'Paula Agostinho Bella','11041214','paula.bella@aluno.ufabc.edu.br'),(15577,'Rauf Henrique Antacle Habib','21021214','rhabib@aluno.ufabc.edu.br'),(15578,'Rodrigo Massaharu Nishioka','11042313','r.nishioka@aluno.ufabc.edu.br'),(15579,'Rodrigo Tardini Paulino','11006916','rodrigo.paulino@aluno.ufabc.edu.br'),(15580,'Samuel Evangelista da Silva','21083616','samuel.silva@aluno.ufabc.edu.br'),(15581,'Thiago de Oliveira Chagas','11055811','thiago.chagas@aluno.ufabc.edu.br'),(15582,'Thiago de Pontes Buzelli','11036616','thiago.buzelli@aluno.ufabc.edu.br'),(15583,'Thiago Felipe Floreste','21079415','thiago.floreste@aluno.ufabc.edu.br'),(15584,'Victor Magalhaes Muniz','11055316','m.victor@aluno.ufabc.edu.br'),(15585,'Victor Silvestre de Souza','11106515','victor.silvestre@aluno.ufabc.edu.br'),(15586,'Vinicius Deco Munhoz','11101514','vinicuis.deco@aluno.ufabc.edu.br'),(15587,'Vitor Sousa Pirangy','11201721886','sousa.pirangy@aluno.ufabc.edu.br'),(15588,'Wallace Matheus de Franca Silva','11037815','wallace.matheus@aluno.ufabc.edu.br'),(15589,'William Oliveira de Souza Falcao','11084815','william.falcao@aluno.ufabc.edu.br'),(15590,'Barbara Alves de Melo','11201722224','b.alves@aluno.ufabc.edu.br'),(15591,'Bruno Caio Bento','11201722125','b.bento@aluno.ufabc.edu.br'),(15592,'ANA CAROLINA ZACARIAS','11201810190','ana.zacarias@aluno.ufabc.edu.br'),(15593,'Andrei Dantas Marques da Silva','11201922420','andrei.silva@aluno.ufabc.edu.br'),(15594,'Bruno Lima do Nascimento','11201721275','bruno.nascimento@aluno.ufabc.edu.br'),(15595,'Daniella Rodrigues Lunardelli','11201832437','d.lunardelli@aluno.ufabc.edu.br'),(15596,'Diana Santiago Oliveira dos Santos','11201720544','diana.santiago@aluno.ufabc.edu.br'),(15597,'Filipe Nathan Silva Santos','11201721160','filipe.nathan@aluno.ufabc.edu.br'),(15598,'Gabriel Henrique Carvalho Mangialardo','11201721470','gabriel.mangialardo@aluno.ufabc.edu.br'),(15599,'GUILHERME AUGUSTO ALVES DOS SANTOS','11201822411','alves.guilherme@aluno.ufabc.edu.br'),(15600,'Guilherme Choi Rigueira','11120915','guilherme.rigueira@aluno.ufabc.edu.br'),(15601,'GUILHERME VIANA MEIJOMIL','11201822523','guilherme.v@aluno.ufabc.edu.br'),(15602,'Higor da Costa Pereira','11037215','higor.pereira@aluno.ufabc.edu.br'),(15603,'ISABELLE ANJOS FERNANDES FRANCISCATTO','11201810414','isabelle.anjos@aluno.ufabc.edu.br'),(15604,'Juan Bastos Silva Souza','11201722274','juan.bastos@aluno.ufabc.edu.br'),(15605,'LAVINIA MITIKO TAKARABE','11201920566','lavinia.mitiko@aluno.ufabc.edu.br'),(15606,'Leonardo Salazar De Aquino','11201932536','l.salazar@aluno.ufabc.edu.br'),(15607,'Ligia Garlipp','11201921723','ligia.g@aluno.ufabc.edu.br'),(15608,'Lucas Montagnani Calil Elias','11201920895','lucas.montagnani@aluno.ufabc.edu.br'),(15609,'LUCCAS DE OLIVEIRA CABRAL','11201822444','c.luccas@aluno.ufabc.edu.br'),(15610,'Marcelo de Barros Ribeiro','11106611','mbribeiro@aluno.ufabc.edu.br'),(15611,'Mariana Oliveira Ribeiro','11201720004','mariana.o@aluno.ufabc.edu.br'),(15612,'Marina Marcelino Dagostini','11008516','m.dagostini@aluno.ufabc.edu.br'),(15613,'MATHEUS NUNES CHAVES','11201810721','matheus.n@aluno.ufabc.edu.br'),(15614,'MICKAELA ESTER BARROS BARRETO','11201811193','mickaela.barreto@aluno.ufabc.edu.br'),(15615,'NATHALYA DOS SANTOS','11201810440','nathalya.santos@aluno.ufabc.edu.br'),(15616,'Renata Cristina Oliveira Santos','11124615','renata.cristina@aluno.ufabc.edu.br'),(15617,'RODRIGO AKIYOSHI WATANABE','11201822416','rodrigo.watanabe@aluno.ufabc.edu.br'),(15618,'Vanessa Soares Da Silva','11201921370','s.vanessa@aluno.ufabc.edu.br'),(15619,'VITOR DOMENIQUELLI CHAGAS','11201810504','vitor.domeniquelli@aluno.ufabc.edu.br'),(15620,'Chen Tang Shiuan','11201721419','t.chen@aluno.ufabc.edu.br'),(15621,'Daniel Proenca Gruber Sansolo','11201921810','daniel.sansolo@aluno.ufabc.edu.br'),(15622,'Daniele Santos da Silva','11201722311','daniele.s@aluno.ufabc.edu.br'),(15623,'GABRIEL CAVALCANTE GOMES','11201822538','gomes.c@aluno.ufabc.edu.br'),(15624,'Gabriel Fernandes Fontes','11201922225','gabriel.fontes@aluno.ufabc.edu.br'),(15625,'GABRIEL ZANFOLIN GIANCOLLI','11201811761','gabriel.zanfolin@aluno.ufabc.edu.br'),(15626,'JANAINA TANCI DOS SANTOS','11201822465','janaina.tanci@aluno.ufabc.edu.br'),(15627,'JEFFERSON SILVA DE SOUSA','11201811654','sousa.j@aluno.ufabc.edu.br'),(15628,'JULIA DE SOUZA SANTANA','11201810295','s.julia@aluno.ufabc.edu.br'),(15629,'Julia Mascarenhas Marques','11201721088','julia.marques@aluno.ufabc.edu.br'),(15630,'Krisleen Cardoso','11201722398','krisleen.c@aluno.ufabc.edu.br'),(15631,'LUANA LARISSA MENDONCA TEIXEIRA','11201811394','luana.larissa@aluno.ufabc.edu.br'),(15632,'Lucas Beozzo Diniz de Paiva','11050016','paiva.lucas@aluno.ufabc.edu.br'),(15633,'Malcolm de Oliveira Soares','11115016','oliveira.soares@aluno.ufabc.edu.br'),(15634,'Mateus Santos de Oliveira','11201721584','mateus.santos@aluno.ufabc.edu.br'),(15635,'Matheus Cardoso da Silva','11201822485','cardoso.matheus@aluno.ufabc.edu.br'),(15636,'Nawan Carlos Novaes','11047116','nawan.novaes@aluno.ufabc.edu.br'),(15637,'RODRIGO MOREIRA SANTOS','11201812150','moreira.rodrigo@aluno.ufabc.edu.br'),(15638,'TASSYLLA EULINDA FILGUEIRAS TENORIO','11201810539','tassylla.tenorio@aluno.ufabc.edu.br'),(15639,'VICTOR BINE MEIRA','11201822442','victor.bine@aluno.ufabc.edu.br'),(15641,'Vinicius Freitas Werte Silva','11201720732','vinicius.werte@aluno.ufabc.edu.br'),(15642,'Vinicius Machado Ribeiro','11201920828','vinicius.m@aluno.ufabc.edu.br'),(15643,'Guilherme Barbosa Moreira','21025015','g.moreira@aluno.ufabc.edu.br'),(15644,'CAMILA ALVES CARDOSO','12201932625',''),(15645,'Cristiano Moraes Bilacchi Azarias','11201720040',''),(15646,'Eduardo Gasques Monteiro','11201721000',''),(15647,'Eldson Barroso Tinoco','11201722302',''),(15648,'Felipe Pelissari','11113016',''),(15649,'Guilherme Eduardo Pereira','11201720498',''),(15650,'Gustavo da Silva Oliveira','11201722301',''),(15651,'Henrique Capanema Llamas Fernandez','11201921436',''),(15652,'Jeferson Sousa Goncalves','11075416',''),(15653,'Jeremias Allemma','11201722561',''),(15654,'Joao Pedro Silva Lima','11201721694',''),(15655,'Joao Victor Ferreira de Macedo','11201721573',''),(15656,'Jonas Santos Marma','21027116',''),(15657,'Jonas Wincheski Fraga','11083216',''),(15658,'Júlia Aparecida Leardini','11201722986','julia.leardini@aluno.ufabc.edu.br'),(15659,'Larissa Roberta Delgado Braga','11201720580',''),(15660,'Leandro Henrique Soares Guimarães','11073813','leandro.guimaraes@aluno.ufabc.edu.br'),(15661,'Luan Kaique Dias De Jesus','11201921761',''),(15662,'Marcos Paulo Araujo Lopes','11201722470',''),(15663,'Mariana Matos Santana','11201723008',''),(15664,'Marina Midori Nagano','11201932526',''),(15665,'Matheus Almeida e Silva','11119516',''),(15666,'Mitzrael Albarrassim de Oliveira','11201722878',''),(15667,'Nathalia Caroline Duran','11037616',''),(15668,'Paulo Vinicius Zoboli','11022216',''),(15669,'Ueleson dos Anjos Souza','11201720770',''),(15670,'Alecsandro Goncalves Junior','11201721620',''),(15671,'Alex Freitas de Lisboa','11100816',''),(15672,'Alice Ramos Silverio da Silva','11082516',''),(15673,'Ariel Magalhaes Bellio','11061215',''),(15674,'Brendol Alexandre Assis Freire','11201722077',''),(15675,'Bruno Bertolini Rabello','11070715',''),(15676,'Bruno Zezell Crestana','11016615',''),(15677,'Caio Cezar Martins Rodrigues','11201722442','caio.cezar@aluno.ufabc.edu.br'),(15678,'Cesar Sandre Fagundes','11201722332',''),(15679,'Christopher Felix da Silva Santos','11101816',''),(15680,'Diego Takeo Oshiro','11055216',''),(15681,'Douglas Candido Neves','11201721935',''),(15682,'Erika Lisa Horiuchi','11075515',''),(15683,'Felipe Banes Lopes Ferreira','21076215',''),(15684,'Felipe de Aguiar Ferreira','21049412',''),(15685,'Gabriel Araujo Arantes','11009716',''),(15687,'Gabriel Pereira Borba Mendonca','11201722346',''),(15688,'Gabriela Nocete Saes da Silva','11201721942',''),(15689,'Giovanna Isidoro Celestino','11094116',''),(15690,'Giovanna Prado Tavares Arioza','11201722719',''),(15691,'Giuliano Fernandes Ottoboni','11201721810',''),(15692,'Glaucon Campos de Oliveira Santos','11109614',''),(15693,'GUILHERME ANDRE STABILE DE OLIVEIRA','11201810223',''),(15694,'GUILHERME ANTONIO ROSA','11201812057',''),(15695,'Ian Prado Andrade','11201722308',''),(15696,'Igor Gabriel Artico Silva','11201722292',''),(15697,'Joao Victor Silva dos Santos','11049314',''),(15698,'Kaleb Lucas da Silva Alves','21049916',''),(15699,'Karen Fernandes Sato','11034614',''),(15700,'Leonardo Alvarez Brienza','11063816',''),(15701,'Leonardo Miguel Bispo','11014116',''),(15702,'Luiz Guilherme dos Santos Octaviano','11116115',''),(15703,'Marcel Rossetti Silveira','21083016',''),(15704,'Marcela Magalhães Martinez','11201932602','marcela.martinez@aluno.ufabc.edu.br'),(15705,'Marcelo da Silva Junior','11006615',''),(15706,'Marjorie de Oliveira Damasco','11120415',''),(15707,'Mateus de Melo Cabral da Silva','11103016',''),(15708,'Matheus Ambrosio','11201720296',''),(15709,'Matheus Garcia da Silva','11095815',''),(15711,'Mohamad Hussein Nasser','11024115',''),(15712,'Pedro Henrique de Camargo Neves','11023712',''),(15713,'Pedro Henrique Rodrigues Baccarin','11201720124',''),(15714,'Renan Martins Azevedo','11015914',''),(15715,'Renato dos Santos de Sousa Junior','11089416',''),(15716,'Ruda Lourenco Cabral','11088815',''),(15717,'Samuel Esdras Navarro da Silva','11093914',''),(15718,'Vinicius Lima de Jesus','11107816',''),(15719,'Thiago Oliveira da Silva','11201822542','oliveira.t@aluno.ufabc.edu.br'),(15720,'Vinícius de Freitas Leite','11201722416','vinicius.f@aluno.ufabc.edu.br'),(15721,'Andre Aranovich Florentino','11011716',''),(15722,'Arthur Von Peer Cubakowic','11201722317','arthur.cubakowic@aluno.ufabc.edu.br'),(15723,'Barbara Dias de Sena','11201721899',''),(15724,'Beatriz de Castro Moreira Farkas','11201722860',''),(15725,'Bruna Mirelli Xavier Goncalves','11008116',''),(15726,'Bruno Sanches Rodrigues','11201721076',''),(15727,'Bruno Tatsuya Masunaga Santos','11003216',''),(15728,'Carlos Alberto Maniusis Junior','11081816',''),(15729,'Caroline de Padua Tolin','21074516',''),(15730,'Caue Drummond Gaudie Ley','11012115',''),(15731,'Claudio Quessada Cabello','11000516',''),(15732,'Daniel Escudero Brito Silva','11005716',''),(15733,'Daniel Mazucanti Domingos','11201721603',''),(15734,'Daniel Vitor Beraldo Di Genova','11201722152',''),(15735,'Danilo Calhes Paixao dos Santos','11025215',''),(15736,'Eduarda Meirinhos','11076516',''),(15737,'Egisto Parronchi Neto','21056614',''),(15738,'Eric Ferreira Barbosa','11105915',''),(15739,'Fabio Luis Arruda Fernandes','11201721754',''),(15740,'Felipe Assis','11005014',''),(15741,'Felipe Martins Gentil','11078714',''),(15742,'Felipe Roberto Martins de Andrade','11055715',''),(15743,'Fernando Henrique Camargo','11043215',''),(15744,'Gabriel dos Santos','11201722251',''),(15745,'Gabriel Ponce Kupstaite','11201720030',''),(15746,'Giancarlo Kami Dell Aringa Viana','21026016',''),(15747,'Giovanni Goncalles Melcore','11035616',''),(15748,'Grazielle Reis Mascaro','11114215',''),(15749,'Guilherme Coelho de Almeida','11201722112',''),(15750,'Gustavo Dias Picado','11004013',''),(15751,'Helton Abrantes de Souza','21007612',''),(15752,'Igor Neres Trindade','11030416',''),(15753,'Ivo Vecelic Neto','11035814',''),(15754,'Joao Pedro de Abreu Martins Pereira','21026515',''),(15755,'João Roberto Wiggert Spina','11118316',''),(15756,'Juliane Kristine de Lima','21001116',''),(15757,'Kaique Ferreira De Souza','11201922342',''),(15758,'Kauan Manzato do Nascimento','11201721592',''),(15759,'Lara Tenore Ferreira','11030616',''),(15760,'Leandro Zangirolami Trovoes','11201720912',''),(15761,'Lucas Eduardo Goncalves da Rosa','11076916',''),(15762,'Lucas Fernandes Muniz','11201720792',''),(15763,'Lucas Moniz de Arruda','11201721285',''),(15764,'Luisa Salles de Oliveira','11201720136',''),(15765,'Luiz Fernando Rodrigues Pereira','21050013',''),(15766,'Luiz Victor Castro de Miranda Portasio','11109215','luiz.portasio@aluno.ufabc.edu.br'),(15767,'Mario Caires Pereira','21058214',''),(15768,'Mikael Alves Monteiro','21055813',''),(15769,'Muriel da Costa Santos','11201723059',''),(15770,'Nadja Cardoso Tussolini Coelho','21073415',''),(15771,'Nicholas Roncally Marques Siebra','21028116',''),(15772,'Nickolas Lopes Pimenta','11110415',''),(15773,'Nikolas Lasevicius Azevedo','21005815',''),(15774,'Nilton Gomes Martins Júnior','11029213',''),(15775,'Pedro Henrique Batistela Lopes','11201722043',''),(15776,'Pedro Regio Shoji','11201721028',''),(15777,'Pietro Di Consolo Gregorio','11038416',''),(15778,'Rafael Hajime Mori','21045116',''),(15779,'Ramon Neres Teixeira Jardim','11068616',''),(15780,'Sergio Pereira Oliveira','11201721122',''),(15781,'Thais Larissa Batista de Andrade','13201723221',''),(15782,'Thiago Henrique Rodrigues Vieira','11201721639',''),(15783,'Thiago Vinicius Pereira Graciano de Souza','11201722589',''),(15784,'Victor Campos','11201721661',''),(15785,'Vinicius Amadeu de Lima','11201720392',''),(15786,'Vinicius Lucas da Silva Chiata','11201722038',''),(15787,'Vinicius Veronese Goncalves','11040816',''),(15788,'Vitor Augusto de Medeiros','11201720112',''),(15789,'Vitor Rubens Sniquer Leao Martins','11201721679',''),(15790,'Wesley Lima de Araujo','11201721514',''),(15791,'Yuri Guerrero Moreno','11201722126',''),(15792,'Alex Mendes Pereira Rodrigues','13201910092',''),(15793,'Aline Conquista de Almeida Ferreira','11201721585',''),(15794,'Alvaro Vinicius do Nascimento Fernandes','11201722085',''),(15795,'Amanda Pereira Moreno','21036615',''),(15796,'Andre Davi Nogueira','11201720318',''),(15797,'Andre Ricca Yoshida','11126515',''),(15798,'Antonio Duarte Cantanhede Neto','11042115',''),(15799,'Beatriz Libanio de Araujo Yordaky','11013714',''),(15800,'Bruno Rios Sousa','11201721430',''),(15801,'Bruno Storer Franco Martins','11201721797',''),(15802,'Caio Argentino de Oliveira','11201722339',''),(15803,'Caio Augusto dos Santos Marques','11074813',''),(15804,'Caio Cesar Ramalho Follador','11016916',''),(15805,'Caio Henrique dos Santos Ribeiro','21026815',''),(15806,'Camylla Gonçalves Cantanheide','21060415',''),(15807,'Carlos Alberto Silva','11026112',''),(15808,'Carlos Eduardo de Abreu Batista','11039013',''),(15809,'Claudio Yaitiro Sakamoto Mantovani','11116013',''),(15810,'Daniel Czeresnia Etinger','11003716',''),(15811,'Daniel Vieira Batista','11106614',''),(15812,'Denildo Veloso Braga','11080516','denildo.braga@aluno.ufabc.edu.br'),(15813,'Diego Leivas dos Santos','11082711',''),(15814,'Diogo Akio Balboni Miyake','21048813',''),(15815,'Edson Hideki Tiepo Ishigaki','11023214',''),(15816,'Emerson Almeida Matos','11101015',''),(15817,'Fabio Figueiredo Rodrigues','11054712',''),(15818,'Fábio Marson de Carvalho','11071409',''),(15819,'Felipe Leite Uematsu','21008216',''),(15820,'Fernando Augusto Machado','21054116',''),(15821,'Fernando Satoshi Akamine','21025916',''),(15822,'Flavio Caldeira de Araujo','21078016',''),(15823,'Gabriel Bitencourt de Almeida Moura','11030113',''),(15824,'Gabriel dos Reis Camargo do Amaral','11052215',''),(15825,'Gabriel Hartleben Starosky','21018712',''),(15826,'Gabriel Silvestre Mancini','11038214',''),(15827,'Giovanni Almeida de Sousa','11095414',''),(15828,'Giuliano Lucilla Gobbi','11201723026',''),(15829,'Guilherme Augusto Lima Bailoni','11201721593',''),(15830,'Guilherme Gouveia Martinez','11201720882',''),(15831,'Guilherme Oliveira da Silva','11093713',''),(15832,'Gustavo Alves da Silva','11111213',''),(15833,'Gustavo Henrique Zenke','11201723050',''),(15834,'Gustavo Lima Araujo','21009612',''),(15835,'Henrique Augusto de Oliveira','11065516',''),(15836,'Henrique Magro de Souza','11201722238',''),(15837,'Isabella Araujo de Lima','11116615',''),(15838,'Jairo da Silva Freitas Junior','11019214',''),(15839,'Jefferson Leite Rodrigues Dantas','11076316',''),(15840,'Juliana de Oliveira Saldanha','11013016',''),(15841,'Julio Cesar Gregorio Cortez','11201721475',''),(15842,'Julio Novaes da Fonseca','21073215',''),(15843,'Kevin Martins Tsukioka','21009515',''),(15844,'Kevin Sakaguti Porto','11039416',''),(15845,'Larissa Catharine de Souza','11201721036',''),(15846,'Larissa Copel Rothman','11201721367',''),(15847,'Leonardo de Carvalho Barroca','11201722574',''),(15848,'Leonardo Savino Carvalho Pereira','11064416',''),(15849,'Lucas Andrade Cioffi','11024515',''),(15850,'Lucas da Silva de Lima','11201722101',''),(15851,'Lucas Damazio da Costa','11074615',''),(15852,'Lucas Henrique Gois de Campos','11058015',''),(15853,'Lucas Passarelli da Silva','11080416',''),(15854,'Lucas Theodoro Guimaraes de Almeida','11072416',''),(15855,'Lucas Zanoni de Oliveira','11056816',''),(15856,'Lucca Segantim Jacomassi','11035516',''),(15857,'Luis Felipe Azevedo dos Santos','11201722345',''),(15858,'Marcelo Ferri Junior','21016415',''),(15859,'Matheus Boccaletti de Paula','21000614',''),(15860,'Matheus da Costa Baio','21080113',''),(15861,'Matheus de Albuquerque Accioly Rodrigues','11100613',''),(15862,'Matheus Doreto Alencar','11201721216',''),(15863,'Matheus Fama Machado de Sousa','11040615',''),(15864,'Matheus Santos de Almeida','11019416',''),(15865,'Mauro Nicolino','11040312',''),(15866,'Miguel Mira Fonseca','21048016',''),(15867,'Natalia Santana Barbosa','11087716',''),(15868,'Nathan Palmares da Silva Firmo','11201811807',''),(15869,'Nicolle Ayumi Adaniya','11201721976',''),(15870,'Otavio Asatomi Silva Sato','11067416',''),(15871,'Pamela Ankosqui Napolitano','11052114',''),(15872,'Pedro Domingos Napole Certo','11201722682',''),(15873,'Rafael Chimielenski Silva','11092814',''),(15874,'Rafael Lustosa Mancini','11071615',''),(15875,'Rafael Pauwels de Macedo','11008914',''),(15876,'Rafael Riciardi Barreira','11056916',''),(15877,'Rafael Zayat Hernandez','11085016',''),(15878,'Raphael Henrique Nunes de Freitas','11201722433',''),(15879,'Ricardo Gonçalves Salmazo','11059413',''),(15880,'Ruan Fernandes','11033016',''),(15881,'Sergio Abilio Pereira Pires Junior','11009513',''),(15882,'Tarek Molina Mourad','11201721375',''),(15883,'Theodoro Gava Dainezi','11067913',''),(15884,'Thomas de Freitas Carvalho','13201811250',''),(15885,'Victor Bressani de Mello','21003415',''),(15886,'Victor Hugo Silva Oliveira','11069214',''),(15887,'Vinicius Lacerda Gonsalez','11126315',''),(15888,'Vinicius Nunes Zorzetti','11068214',''),(15889,'Vinicius Pedroso Felix Aquino','21075316',''),(15890,'Vitor Cesar Cota Bonelli','11009113',''),(15891,'Welington Santos Reis','11201722462','welington.reis@aluno.ufabc.edu.br'),(15892,'Wellington Souza Marques','11041312',''),(15893,'Yago Sorrilha','11047514',''),(15894,'Adrieli Candido dos Santos','21031311',''),(15895,'Alan Theodoro Martins','11117713',''),(15896,'Aline Rodrigues Arroyo','11027215',''),(15897,'Ana Beatriz Florindo Barcia','11091214',''),(15898,'Ana Carolina Esteves Barbosa','21027311',''),(15899,'Andre Blotta Furlan','11036914',''),(15900,'Andressa Cristina Andrade','21024715',''),(15901,'Beatriz Cristina Alves Hercules','11050313',''),(15902,'Bianca Regina Barbosa','11101714',''),(15903,'Bruna Fuzetti','21012616',''),(15904,'Bruno Mihara Sakai','11020415',''),(15905,'Caio de Aguiar Bernardi','11027615',''),(15906,'Carlos Eduardo Queiroz Peixoto','21032014',''),(15907,'Carlos Henrique Alves dos Santos','11012715',''),(15908,'Caroline Belini','11115116',''),(15909,'Cesar Augusto Gasques Oliveira','11089614',''),(15910,'Claudio Roberto Pasianotto Costa','11018508',''),(15911,'Cristiane Nizana Eislfeldt','21069313',''),(15912,'Elen Freitas da Gama','11097213',''),(15913,'Estevao Leao de Santana das Neves','11076016',''),(15914,'Fabiana Yumi Fujii','21062012',''),(15915,'Felippe Rodrigues Medina da Cruz','21049613',''),(15916,'Flavia de Castro Morais Dieguez','11007315',''),(15917,'Gabriel Aguiar Franzé','21007414',''),(15918,'Gabriel Akira Washimi','21077914',''),(15919,'Guilherme Safrany de Pieri','21015214',''),(15920,'Gustavo Takio Osaka','11076213',''),(15921,'Ian Profeta da Rosa','11119114',''),(15922,'Jacqueline de Araujo Neves','11106014',''),(15923,'Jean Lucas Meneguelo','21005914',''),(15924,'Joao Pedro Ranieri Setubal','11044615',''),(15925,'Joao Victor Fernandes Choueri','11022513',''),(15926,'Juliana Berto Sanchez','11006213',''),(15927,'Juliana Conceicao de Almeida','13201723150',''),(15928,'Lea Camargo Collet','11004914',''),(15929,'Leonardo Vinicius de Oliveira','21002615',''),(15930,'Leticia Narrima Eislfeldt','11109714',''),(15931,'Leticia Thiemi Tamura','21034912',''),(15932,'Lígia Pavan Monzi','11073507',''),(15933,'Lucas El Fakih Coutinho','21001914',''),(15934,'Lucas Goncalves Abex','11051215',''),(15935,'Lucas Rodrigues de Alencar','11069013',''),(15936,'Lucas Tanaka da Silva','21042015',''),(15937,'Luccas Ferrari Santana','21017615',''),(15938,'Luis Gustavo Lima Garcia','11026415',''),(15939,'Luisa Gobetti Ribeiro','11096014',''),(15940,'Luiz Henrique Morales','11070414',''),(15941,'Marianne Alves Carvalho','11037013',''),(15942,'Matheus Dias Monaco','21055714',''),(15943,'Matheus Hiroshi Kitadani Odaguil','21070914',''),(15944,'Matias Kim Mukay Ojea','11075414',''),(15945,'Michelle Rodrigues Nastasi','21008710',''),(15946,'Pedro Campos de Paula Braga','11036015',''),(15947,'Rafael Kunio Higashi','11104813',''),(15948,'Rodrigo de Oliveira Vecchi','11105211',''),(15949,'Rodrigo Melo Ferreira','21081512',''),(15950,'Rodrigo Teixeira de Carvalho','11032815',''),(15951,'Roger Gonçalves Silva Morais','21035912',''),(15952,'Thiago Hitochi Mira Ando','21038315',''),(15953,'Thiago Paiva Ferrari','21030113',''),(15954,'Victor Hugo Siqueira da Cruz','11076714',''),(15955,'Vitor Episcopo Edo','11017715',''),(15956,'Vivianne de Lucca Soave','11057315',''),(15957,'Aryel Moschella','11041114',''),(15958,'Joao Pedro Ribas Rizzi','21062214',''),(15959,'N1','11201500001',''),(15960,'N2','11201500002',''),(15961,'N3','11201500003',''),(15962,'N1','1120170001',''),(15963,'N2','1120170002',''),(15964,'N3','1120170003',''),(15965,'Nome_1','11201501',''),(15966,'Nome_2','11201502',''),(15967,'Nome_3','11201503',''),(15968,'Abilene Paulo Pereira','386604617','1'),(15969,'Abner Biscassi Moreira Nunes','391930941','2'),(15970,'Adria Santos Do Nascimento','58694753','3'),(15971,'Adrielle Nicoli De Camargo Freitas','575770697','4'),(15972,'Agnes Dos Santos','572864991','7'),(15973,'Aisha Aparecida Gerlach Hessel Machado','561774929','8'),(15974,'Aiudy Camila Costa','148540080','9'),(15975,'Alan Da Silva Nascimento','363319633','11'),(15976,'Alan De Lira Santos','564151798','12'),(15977,'Alan Douglas Silva','544196375','13'),(15978,'Alan Guimaraes','565737090','14'),(15979,'Alana Rosa Da Paixao Souza','502208570','15'),(15980,'Alanis Nunes Da Silva','374744026','17'),(15981,'Alcides Mendonca Junior','302246952','18'),(15982,'Alcilene Maria Alves Da Costa','382815373','19'),(15983,'Aleff Felipe Dos Santos Rodrigues','46996764','20'),(15984,'Alex De Assumpcao Doreto','399037743','22'),(15985,'Alexandre Elias Da Silva','539618007','23'),(15986,'Alexandre Quirino Dos Santos','193515520','24'),(15987,'Alexia Maria Caetano Silva','55857242','25'),(15988,'Alexia Vitoria Da Silva Nascimento','635643704','26'),(15989,'Alice Feliciano Da Silva','542660404','27'),(15990,'Alice Ladeia De Souza Silva','505573544','28'),(15991,'Alice Patricio Pimentel','540672105','29'),(15992,'Alicia Almeida De Paiva Guedes','540245975','30'),(15993,'Eric Dos Santos Rodrigues','59908117','32'),(15994,'Isabella Rodrigues Da Silva Brito','572558806','33'),(15995,'Sofia Gomes Sampaio Zandonadi','569197188','35'),(15996,'Gabarito','000000000','0001'),(15997,'Leandro Teodoro Junior','39672942300001','0001'),(15998,'Ugo Ibusuki','38660461700001','ugo.ibusuki@ufabc.edu.br'),(15999,'Abner Biscassi Moreira Nunes','39193094100002','2;;'),(16000,'Adria Santos Do Nascimento','5869475300003','3;;'),(16001,'Adrielle Nicoli De Camargo Freitas','57577069700004','4;;'),(16002,'Adrielly Moreira Da Silva','58829906600005','5;;'),(16003,'Agatha Fedel Arantes','57028587200006','6;;'),(16004,'Agnes Dos Santos','57286499100007','7;;'),(16005,'Aisha Aparecida Gerlach Hessel Machado','56177492900008','8;;'),(16006,'Aiudy Camila Costa','14854008000009','9;;'),(16007,'Akio Guilherme Dourado Kashiwaya','55403291000010','10;;'),(16008,'Alan Da Silva Nascimento','36331963300011','11;;'),(16009,'Alan De Lira Santos','56415179800012','12;;'),(16010,'Alan Douglas Silva','54419637500013','13;;'),(16011,'Alan Guimaraes','56573709000014','14;;'),(16012,'Alana Rosa Da Paixao Souza','50220857000015','15;;'),(16013,'Alane Pedrosa Gomes','56536307400016','16;;'),(16014,'Alanis Nunes Da Silva','37474402600017','17;;'),(16015,'Alcides Mendonca Junior','30224695200018','18;;'),(16016,'Alcilene Maria Alves Da Costa','38281537300019','19;;'),(16017,'Aleff Felipe Dos Santos Rodrigues','4699676400020','20;;'),(16018,'Alessandra Da Silva Araujo','52637906600021','21;;'),(16019,'Alex De Assumpcao Doreto','39903774300022','22;;'),(16020,'Alexandre Elias Da Silva','53961800700023','23;;'),(16021,'Alexandre Quirino Dos Santos','19351552000024','24;;'),(16022,'Alexia Maria Caetano Silva','5585724200025','25;;'),(16023,'Alexia Vitoria Da Silva Nascimento','63564370400026','26;;'),(16024,'Alice Feliciano Da Silva','54266040400027','27;;'),(16025,'Alice Ladeia De Souza Silva','50557354400028','28;;'),(16026,'Alice Patricio Pimentel','54067210500029','29;;'),(16027,'Alicia Almeida De Paiva Guedes','54024597500030','30;;'),(16028,'Aline Andrade Silva','55367073600031','31;;'),(16029,'Eric Dos Santos Rodrigues','5990811700032','32;;'),(16030,'Isabella Rodrigues Da Silva Brito','57255880600033','33;;'),(16031,'Kamila Cruz Cardoso','37520182800034','34;;'),(16032,'Sofia Gomes Sampaio Zandonadi','56919718800035','35;;'),(16033,'Gabarito','00000000000001','1'),(16034,'Leticia Bet Capellari','52032258700001','1'),(16035,'Aline Fernandes Dos Santos Almeida','57819134900001','1'),(16036,'Aline Ferreira Borges','56113700600002','2'),(16037,'Aline Gibin Teodoro Da Silva','56726888300003','3'),(16038,'Aline Marchezoni Nery','54133681200004','4'),(16039,'Aline Siqueira Menezes','52294127800005','5'),(16040,'Allan Kleytton Silva Santana','50027445900006','6'),(16041,'Allana Rocha Santos','39523061500007','7'),(16042,'Allef Oliveira Nascimento','50069734600008','8'),(16043,'Almenara Galetti Scudeler','39781987000009','9'),(16044,'Almir Rogerio Zanelato','32627143000010','10'),(16045,'Alvaro Biazon Pessoa','38608881000011','11'),(16046,'Alyssa Heluany Zacarias Alves','39333525200012','12'),(16047,'Amanda Almeida Santos','55194813900013','13'),(16048,'Amanda Avellar','58502195800014','14'),(16049,'Amanda Barreto Corigliano','56042752900015','15'),(16050,'Amanda Coelho Morais','55173122900016','16'),(16051,'Amanda Confortini','55894482600017','17'),(16052,'Amanda De Oliveira Liao Carneiro','5587578700018','18'),(16053,'Amanda Dos Santos Batista','38399175400019','19'),(16054,'Amanda Dos Santos Correia Pio','54610696100020','20'),(16055,'Amanda Godoi Conte','60146811900021','21'),(16056,'Amanda Izabelly Silva Carvalho','53669535000022','22'),(16057,'Amanda Leite Da Silva','3833142900023','23'),(16058,'Amanda Lima Pereira','50243677300024','24'),(16059,'Amanda Martins De Araujo','37569273300025','25'),(16060,'Amanda Moreira De Souza','55723046900026','26'),(16061,'Amanda Santos Grizorte','54161475700027','27'),(16062,'Amanda Silva Rodrigues','38884611200028','28'),(16063,'Amanda Suellen Da Costa','56573828800029','29'),(16064,'Amanda Zuza Cegolin','55141941600030','30'),(16065,'Ana Aline De Resende Firmino','55890257100031','31'),(16066,'Ana Beatriz Andrade De Souza','58279700700032','32'),(16067,'Ana Beatriz Da Silva','57895555600033','33'),(16068,'Ana Beatriz Marinho Gomes De Oliveira','53097202500034','34'),(16069,'Ana Beatriz Oliveira Coutinho','53811316900035','35'),(16070,'Ana Beatriz Pelegati','60314123700036','36'),(16071,'Ana Beatriz Pratti Dos Santos','55650181000037','37'),(16072,'Ana Beatriz Souza De Jesus','60352387000038','38'),(16073,'Ana Beatriz Vasconcelos Teles','59840345000039','39'),(16074,'Ana Beatryz De Angelo Guimaraes','52365539300040','40'),(16075,'Ana Carolina Batista Tenorio','63963604400041','41'),(16076,'Ana Carolina Bonilho Dos Santos','50556912700042','42'),(16077,'Ana Carolina Carvalho De Oliveira','37694720200043','43'),(16078,'Ana Carolina Da Silva','57677791200044','44'),(16079,'Ana Carolina Ezidia Da Silva','57068572200045','45'),(16080,'Ana Carolina Martuzzo Bezerra','38695424000046','46'),(16081,'Ana Carolina Morais Souza','57828495900047','47'),(16082,'Ana Carolina Oliveira Tobias','56463725700048','48'),(16083,'Ana Carolina Sousa Lecho','59119553700049','49'),(16084,'Ana Caroline Da Costa Batista','55107412700050','50'),(16085,'Ana Caroline Silva Sousa','38362988300051','51'),(16086,'Ana Clara Cordeiro','54095461500052','52'),(16087,'Ana Clara Lima Campos','3972783800053','53'),(16088,'Ana Clara Marques','52866616200054','54'),(16089,'Ana Claudia Da Silva Costa','57803921700055','55'),(16090,'Ana Claudia Rodrigues Da Silva','56818218200056','56'),(16091,'Ana Flavia Hayashe','53302109100057','57'),(16092,'Ana Flora Ferreira De Freitas','50167800100058','58'),(16093,'Ana Gabrielle De Aguiar Mendes','53181485300059','59'),(16094,'Ana Julia De Sousa Almeida','53198332800060','60'),(16095,'Ana Julia Dourado Ravani','50065992800061','61'),(16096,'Ana Julia Macedo Inacio','54328333100062','62'),(16097,'Ana Julia Ribeiro Fernandes','54554519500063','63'),(16098,'Ana Karla De Souza Marques','54073217500064','64'),(16099,'Ana Karolina Do Nascimento Feres','39831449400065','65'),(16100,'Ana Laura Vilas Boas Facchin','53591499400066','66'),(16101,'Ana Livia Tres','50118024200067','67'),(16102,'Ana Luisa Carreira De Santiago','55056852900068','68'),(16103,'Ana Luiza Silva De Aquino','572002263300069','69'),(16104,'Ana Paula Costa Gomes','39569614800070','70'),(16105,'Ana Paula Da Costa Escaler','18886471400071','71'),(16106,'Ana Paula De Souza Brandao','53098565200072','72'),(16107,'Ana Paula Pires Dos Reis','59292218200073','73'),(16108,'Ana Victoria Ferreira Dos Santos','60141487100074','74'),(16109,'Ana Yasmin Estrela','39830171200075','75'),(16110,'Anderson Bispo Dos Santos','46956430100076','76'),(16111,'Anderson Rodrigues Almeida','38569973600077','77'),(16112,'Anderson Santos Cerqueira','54313431300078','78'),(16113,'Andre Da Silva Pinto','42972906600079','79'),(16114,'Andre Dos Santos Souza','37684333000080','80'),(16115,'Andre Evangelista','50120260200081','81'),(16116,'Andre Firmino De Araujo','39996296700082','82'),(16117,'Andre Martins Prieto','63677099000083','83'),(16118,'Andre Rodrigues Machado','45642126900084','84'),(16119,'Andre Vitor Melo Juras','52163317500085','85'),(16120,'Andre Yan Saito Lima Parrreira','5330214200086','86'),(16121,'Andreia Andrade Do Nascimento','53143832600087','87'),(16122,'Andreia Cristina De Carvalho','25600959400088','88'),(16123,'Andresa Damiana Pereira','38799793300089','89'),(16124,'Andresa Mainetti','47306931300090','90'),(16125,'Andressa Elvira Menchon Silva','56588767100091','91'),(16126,'Andressa Jennifer Chizoba Nwude','38436115800092','92'),(16127,'Andressa Oliveira Da Silva','53239094500093','93'),(16128,'Andressa Satiro Dos Reis','50618440700094','94'),(16129,'Andressa Silva Sarmento','5050404400095','95'),(16130,'Andrey Dos Santos Batista','57072331000001','1'),(16131,'Andreza Oliveira Brito','56041582500002','2'),(16132,'Ane Caroline Marques','48220239700003','3'),(16133,'Anna Beatriz Dos Santos','52031123100004','4'),(16134,'Anna Bheatriz Dias Rocha','38236589600005','5'),(16135,'Anna Clara Cruz Armagni','38124170100006','6'),(16136,'Anna Julia Lins Franca Da Silva','58502192200007','7'),(16137,'Annanda Santos Soares','38497145300008','8'),(16138,'Anny Beatris Moraes Oliveira','53699443200009','9'),(16139,'Anny Yumi Shimamoto','38560823800010','10'),(16140,'Antonia Edivan Araujo','23378265500011','11'),(16141,'Antonia Lorany Bezerra Alves','57104760900012','12'),(16142,'Antonia Tania Teixeira','19574747100013','13'),(16143,'Antonio Alan De Sousa Luz','50362708200014','14'),(16144,'Antonio Luis Barbosa De Sousa','52108614000015','15'),(16145,'Ariadne Blanco De Menezes','53020571300016','16'),(16146,'Ariadne Simon Lima','54584078800017','17'),(16147,'Ariane Crisolana Coelho Soares','38122288300018','18'),(16148,'Ariane De Oliveira','54723204400019','19'),(16149,'Arianny Querino Dos Santos','52877571600020','20'),(16150,'Ariany Prates De Lima','56154345800021','21'),(16151,'Arina Oliveira Alves','5359106800022','22'),(16152,'Arlon Ramalho Da Silva Reis','62893573000023','23'),(16153,'Arthur Arjona Do Amaral','50392862800024','24'),(16154,'Arthur Henrique Prado Marinho','54158965900025','25'),(16155,'Arthur Maia D\'Alessandro','50918462500026','26'),(16156,'Arthur Menezes Antunes','38124378300027','27'),(16157,'Arthur Oliveira Cardoso','56812262800028','28'),(16158,'Arthur Torres De Camargo De Oliveira','50245410600029','29'),(16159,'Artur Teles Barbosa','58246473000030','30'),(16160,'Ary Sousa Silva','38582875500031','31'),(16161,'Augusto Aquino Kerlin','58881468400032','32'),(16162,'Ayra Correia Da Costa','57180216300033','33'),(16163,'Barbara Borges De Andrade','57159241700034','34'),(16164,'Barbara Gomes Costa','50619400000035','35'),(16165,'Barbara Inacio Gomes Da Silva','3896102900036','36'),(16166,'Barbara Luiza Dos Santos Magalhaes','58037222400037','37'),(16167,'Barbara Mantovani Costa','5423741600038','38'),(16168,'Barbara Vitoria Cavalcante Mesquita','52137587300039','39'),(16169,'Beatriz Alves De Souza','4067194889000040','40'),(16170,'Beatriz Aramaqui Valente','39829399500041','41'),(16171,'Beatriz Areas Ferreira','39334578600042','42'),(16172,'Beatriz Barbosa Da Silva Lago','58245209000043','43'),(16173,'Beatriz Busch Marchetti','50242178200044','44'),(16174,'Beatriz Calicchio Fagundes','52097933300045','45'),(16175,'Beatriz Da Motta Ribeiro','5203155600046','46'),(16176,'Beatriz Da Silva De Freitas','38470398700047','47'),(16177,'Beatriz De Almeida Sparvolli','58437276000048','48'),(16178,'Beatriz De Miranda Klem Da Silva','50291677100049','49'),(16179,'Beatriz De Queiroz Viana','57442243200050','50'),(16180,'Beatriz Do Nascimento De Souza','54650196500051','51'),(16181,'Beatriz Dornelas Bachega','53215871400052','52'),(16182,'Beatriz Duarte Dias','38734608900053','53'),(16183,'Beatriz Favero Bedin','38469175400054','54'),(16184,'Beatriz Leandro Silva','47619536600055','55'),(16185,'Beatriz Lourenconi Monteiro','55314529000056','56'),(16186,'Beatriz Lucena Tavares','5885866400057','57'),(16187,'Beatriz Monteiro Do Nascimento','58149241900058','58'),(16188,'Beatriz Nascimento Teles','38659534300059','59'),(16189,'Beatriz Oliveira Meireles','50556629100060','60'),(16190,'Beatriz Oliveira Ramos','53141373100061','61'),(16191,'Beatriz Pinheiro Telles De Freitas','63549785200062','62'),(16192,'Beatriz Ribeiro','56818708800063','63'),(16193,'Beatriz Santos Olegario','50450095800064','64'),(16194,'Beatriz Silva Porto','39568434100065','65'),(16195,'Beatriz Soares Tavares','53461113800066','66'),(16196,'Beatriz Teixeira Miguel','55362004600067','67'),(16197,'Beatriz Vitoria Ember Da Silva','3949175600068','68'),(16198,'Bernardina Veiga Da Silva Romera','32603468700069','69'),(16199,'Bianca Baptista Caetano','59392842800070','70'),(16200,'Bianca Barbosa Marques Prezentini','54163509800071','71'),(16201,'Bianca Brenda Alves De Oliveira','53537971700072','72'),(16202,'Bianca Bueno Schevenin','39485383000073','73'),(16203,'Bianca Carvalho Monice','55888175000074','74'),(16204,'Bianca Cristina De Sousa Carvalho','52860677300075','75'),(16205,'Bianca Custodio Carneiro','58264065900076','76'),(16206,'Bianca Da Silva Guilherme','38433469600077','77'),(16207,'Bianca De Oliveira Deberaldini','54014704700078','78'),(16208,'Bianca Dias Alves','585682120400079','79'),(16209,'Bianca Eliodoro Totarelli Silva','52032883800080','80'),(16210,'Bianca Gomes De Moura','57194223400001','1'),(16211,'Bianca Moreno Demontie Bernardi De Oliveira','55106696900002','2'),(16212,'Bianca Mota Sales','3903610100003','3'),(16213,'Bianca Naomi Oyakawa Sato','57444874300004','4'),(16214,'Bianca Peres Santos','52340166800005','5'),(16215,'Bianca Pontes Sousa','39274505700006','6'),(16216,'Bianca Renata Americo De Oliveira','14303085700007','7'),(16217,'Bianca Santos De Oliveira','50652889800008','8'),(16218,'Bianca Sibaldo Maltoni','52307195400009','9'),(16219,'Bianca Silva De Souza','50398522300010','10'),(16220,'Bianca Stephanie Gonzalez Carvallo','35558002000011','11'),(16221,'Bianca Sussai Lazansky','5543244300012','12'),(16222,'Branca Fineto Pereira','56707671400013','13'),(16223,'Brenda Calegari De Barros','38835931600014','14'),(16224,'Brenda Dos Santos Loro','4429118300015','15'),(16225,'Brenda Dos Santos Teixeira','00195347400016','16'),(16226,'Brenda Jennyfer Vieira Da Silva','505331930700017','17'),(16227,'Brenda Paulino Dos Santos','57696716600018','18'),(16228,'Brenda Soares Nicolau De Souza','36866296200019','19'),(16229,'Brendo Brito Santos','53745280100020','20'),(16230,'Breno Antonio Sant\'Ana Carvalho','39996692400021','21'),(16231,'Breno Bezerra Da Silva','53654608300022','22'),(16232,'Brian Da Silva Neves','52163370900023','23'),(16233,'Bruna Alves Da Costa','38156497600024','24'),(16234,'Bruna Constantini','60274517200025','25'),(16235,'Bruna Da Silva Martinho','5374252400026','26'),(16236,'Bruna De Souza Moreira','39164935800027','27'),(16237,'Bruna Emily De Freitas Passeri','52755837000028','28'),(16238,'Bruna Ferreira Santos','4309812000029','29'),(16239,'Bruna Fontes Leite','38737259300030','30'),(16240,'Bruna Machado Do Rosario','39716816000031','31'),(16241,'Bruna Maria Aires Mendes De Souza','52725534800032','32'),(16242,'Bruna Millene Da Silva Santos','53895140000033','33'),(16243,'Bruna Ramos De Lima','52924999600034','34'),(16244,'Bruna Ramos Dos Santos','38332893700035','35'),(16245,'Bruna Reis','5599568500036','36'),(16246,'Bruna Santos De Amaral','52416219000037','37'),(16247,'Bruna Silva De Souza','52804280400038','38'),(16248,'Bruna Vitoria Assis De Almeida','56934271500039','39'),(16249,'Bruno Alves De Mesquita','53240003300040','40'),(16250,'Bruno Barbosa','62640807600041','41'),(16251,'Bruno Borges Silva Trindade','52403626300042','42'),(16252,'Bruno Da Silva Amaral','3891458300043','43'),(16253,'Bruno Da Silva De Moura','3906216400044','44'),(16254,'Bruno De Oliveira','54072702700045','45'),(16255,'Bruno Eduardo Mendes Da Silva','39514305600046','46'),(16256,'Bruno Gabriel Silva Dominicheli','38534037000047','47'),(16257,'Bruno Isaque Tavares Rocha','58664101400048','48'),(16258,'Bruno Kayki Ribeiro De Souza','57042551700049','49'),(16259,'Bruno Lucio Costa Silva','38866822200050','50'),(16260,'Bruno Matins Franceliano','50932764300051','51'),(16261,'Bruno Moreira Pinto','5023972400052','52'),(16262,'Bruno Pereira Bezerra','50506644000053','53'),(16263,'Bruno Rodrigues Dos Santos','60419758500054','54'),(16264,'Bruno Ruan Freitas Silva','60569393600055','55'),(16265,'Bruno Santos Braga','4962564200056','56'),(16266,'Bruno Santos Guerra','57253729300057','57'),(16267,'Bruno Silvas Santos','58154072400058','58'),(16268,'Bruno Sobreira Franca','57030620600059','59'),(16269,'Bryan Da Costa Torres','5407376300060','60'),(16270,'Bryan Jorge Franklin Soares','50968633300061','61'),(16271,'Caetano Matheus Lima','50292017800062','62'),(16272,'Caik Robert De Souza Brito','57989802700063','63'),(16273,'Cainna Milaneli Silva','54911341100064','64'),(16274,'Caio Alexandre Vital','39166890000065','65'),(16275,'Caio Cesar Nogueira','50639873000066','66'),(16276,'Caio Eduardo De Souza Pereira','52533551100067','67'),(16277,'Caio Felix Grangeiro','38613402900068','68'),(16278,'Caio Henrique Da Silva Santos','50828458200069','69'),(16279,'Caio Vinicius Rodrigues De Lima','41773702600070','70'),(16280,'Caique Barbosa Ribeiro','4271693200071','71'),(16281,'Camila Batista Borges','39131744100072','72'),(16282,'Camila Bentley','52098653200073','73'),(16283,'Camila Bueno Francisco','53249288200074','74'),(16284,'Camila Cardoso Silveira','52861247500075','75'),(16285,'Camila Ceciliano','3882561400076','76'),(16286,'Camila Dias Da Silva','39717236900077','77'),(16287,'Camila Do Nascimento Xavier Ferreira','53216797100078','78'),(16288,'Camila Eliza Navarreti Da Silva','55367301400079','79'),(16289,'Camila Fernandes Rosa','39006714300080','80'),(16290,'Camila Ferreira Rodrigues','52272922800081','81'),(16291,'Camila Fulgencio Silva','57119286500082','82'),(16292,'Camila Furlan Patricio','39781872500083','83'),(16293,'Camila Justo De Souza','50503964300084','84'),(16294,'Camila Leite Carvalho','5836381700085','85'),(16295,'Camila Maria Sousa Martins','39671486900086','86'),(16296,'Camila Meira Campos','55981093300087','87'),(16297,'Camila Rodrigues Da Cruz','54843635600088','88'),(16298,'Camila Santos Gomes','50709768300001','1'),(16299,'Camila Silva Reis','38713936900002','2'),(16300,'Camila Soares Da Silva Carvalho','58899722500003','3'),(16301,'Camila Vieira Alves De Assis','57798600400004','4'),(16302,'Camila Vieira Lopes','5717720200005','5'),(16303,'Camile Silva De Souza','55864776500006','6'),(16304,'Camilla Carvalho Martins','39256004500007','7'),(16305,'Camilla Veronez Campos','53020492700008','8'),(16306,'Camille Costa De Almeida','58710132500009','9'),(16307,'Camille Gardinalle Barreto','57119487400010','10'),(16308,'Camille Santos Silva','50967179200011','11'),(16309,'Camilly Almeida Biancardi','59361251600012','12'),(16310,'Camilly Cordeiro Castello','6069710400013','13'),(16311,'Camilly Gomes Rodrigues Da Silva','53462549600014','14'),(16312,'Camilly Gro Soares','59094789800015','15'),(16313,'Camilly Velasco De Oliveira','52107900700016','16'),(16314,'Camily Dos Santos Moreira','54385282900017','17'),(16315,'Camily Prates De Lima','56177442000018','18'),(16316,'Camily Vitoria Dos Santos Oliveira','59246234600019','19'),(16317,'Carin Beatriz Silva Zampaulo','56839896800020','20'),(16318,'Carina Caltabiano De Oliveira','54312459900021','21'),(16319,'Carla Cardoso Pereira','53392051600022','22'),(16320,'Carla Caroline Bezerra Oliveira','57752888900023','23'),(16321,'Carla Regina Mendes','56013417400024','24'),(16322,'Carlos Alanf Pereira Maia Do Nascimento','50708508500025','25'),(16323,'Carlos Daniel Dos Santos Rodrigues','5514028800026','26'),(16324,'Carlos Eduardo Cavalcante Costa','39061187600027','27'),(16325,'Carlos Eduardo De Sousa Nascimento','00374531300028','28'),(16326,'Carlos Eduardo Pereira Guimaraes Veloso','59409775700029','29'),(16327,'Carlos Eduardo Silveira De Jesus Silva','39965547500030','30'),(16328,'Carlos Felipe Da Silva','38332064100031','31'),(16329,'Carlos Gardel De Franca Vieira','45046850100032','32'),(16330,'Carlos Henrique Da Silva Wanderley','56847340100033','33'),(16331,'Carlos Henrique Das Neves Moura','37847304900034','34'),(16332,'Carlos Nascimento Costa','43861640600035','35'),(16333,'Carolina Asano Ferreira','52403796600036','36'),(16334,'Carolina Figulani Batista Da Silva','53461406100037','37'),(16335,'Carolina Gomes Bezerra Da Silva','56007149800038','38'),(16336,'Carolina Milani Bertazzi','56440054300039','39'),(16337,'Carolina Monteiro De Oliveira','49174351800040','40'),(16338,'Carolina Pidori Caminada','55639932800041','41'),(16339,'Carolina Rosa Mendes','57105533300042','42'),(16340,'Caroline Batista Dos Santos Goncalves','3897115500043','43'),(16341,'Caroline Da Silva Lopes De Araujo','3757386800044','44'),(16342,'Caroline De Moura Nakashima','60879372300045','45'),(16343,'Caroline Dos Santos Almeida','56566487600046','46'),(16344,'Caroline Santana De Joao','39996459900047','47'),(16345,'Caroliny De Lima Damacena','55370274900048','48'),(16346,'Cassiane Gloria Conceicao Da Silva','5410025100049','49'),(16347,'Cassio Henrique Dos Santos','3906431800050','50'),(16348,'Catharina Marabiza Pinheiro','39376003000051','51'),(16349,'Caue Ilan Dantas Lima','38895157600052','52'),(16350,'Cecilia Maria De Oliveira Guimaraes','581182632200053','53'),(16351,'Celia Cristina Da Silva Pedrozo','28928352800054','54'),(16352,'Celine Corvalan Do Carmo','5314393200055','55'),(16353,'Cesar Freire De Santiago','3972766200056','56'),(16354,'Cesar Henrique Quintino Goncalves','59116511900057','57'),(16355,'Chaiane Santos De Sousa','50747555000058','58'),(16356,'Charles Ferreira Da Silva','48153560300059','59'),(16357,'Charles Ferreira Da Silva Filho','50813280000060','60'),(16358,'Christian Arrebola Gaspar','42286960000061','61'),(16359,'Christopher Wendell Garbi','52362278800062','62'),(16360,'Cicero Donizete Da Silva Crima','19673011900063','63'),(16361,'Cindy Aimi Yamamoto Salazar','53672834300064','64'),(16362,'Cindy Gabriela Ferreira Valadao','52083820800065','65'),(16363,'Cinthya Evely Da Silva Santos','56494897400066','66'),(16364,'Clara Arruda','38567468500067','67'),(16365,'Clara Isabeli Vieira Do Nascimento','54310766800068','68'),(16366,'Claudia Costa De Assis','53098959100069','69'),(16367,'Claudiane Alexandre De Lima','2008567795100070','70'),(16368,'Claudio Antonio Da Silva Leite','52358361800071','71'),(16369,'Claudio Natalino De Brito','17460883400072','72'),(16370,'Conrado Moreira Da Costa','58694467900073','73'),(16371,'Crislaine Silva De Jesus Santos','55410207900074','74'),(16372,'Cristian Pascoal Gomes','43752102300075','75'),(16373,'Cristian Ruan Santos Duarte','55812355700076','76'),(16374,'Cristiano Alves Da Silva','23879219500077','77'),(16375,'Crystoffer Messias Zeferino','58627748100078','78'),(16376,'Cynthia Braz Martins','57484155600079','79'),(16377,'Daiane Vitoria Anjos Almeida','50779490400080','80'),(16378,'Daiani Bonetti Donon','54661379200081','81'),(16379,'Daisy Vitoria Nunes Fernandes De Oliveira','39165890600082','82'),(16380,'Damilis Da Paixao Silva','63447679800083','83'),(16381,'Daniel Antonio Bastos Filho','39674071600084','84'),(16382,'Daniel Henrique Da Silva','3990362600085','85'),(16383,'Daniel Henrique Pereira Silva','57151254900086','86'),(16384,'Daniel Lourenco De Morais','38467073800087','87'),(16385,'Daniel Neri De Jesus','53301406200088','88'),(16386,'Daniel Ortega Prado','33217288000089','89'),(16387,'Daniel Pedro Soares Monteiro Da Silva','38080132200090','90'),(16388,'Daniel Victor Brescia Dos Santos','39275047800091','91'),(16389,'Daniel Victor Dos Santos Souza','54074148600092','92'),(16390,'Daniela Eloiza Da Silva','38885852700093','93'),(16391,'Daniela Pereira Souza','52691288100001','1'),(16392,'Daniela Sanches Soares','56998711800002','2'),(16393,'Daniela Silva Timoteo','38582238800003','3'),(16394,'Daniele Romani De Almeida','39717667300004','4'),(16395,'Danielly Barbosa Freire','57267218400005','5'),(16396,'Danielly Cerqueira De Moura','3916662300006','6'),(16397,'Daniely Maria Da Silva Da Conceicao','58039110300007','7'),(16398,'Danillo Marchesano Ramos Alves','40019856300008','8'),(16399,'Danilo Bengevenga Clemente','39831487500009','9'),(16400,'Danilo Campelo Silva','60347162600010','10'),(16401,'Danilo De Andrade Oliveira','56957561800011','11'),(16402,'Danilo De Oliveira Barbosa','55173028600012','12'),(16403,'Danilo De Oliveira Braz','54844854100013','13'),(16404,'Danilo Dessio Pereira','39435530100014','14'),(16405,'Danyele Hernandez','50638668500015','15'),(16406,'Dara Aparecida Arantes Sena','58440911400016','16'),(16407,'Davi Custodio Beiler Santana De Souza','50690383700017','17'),(16408,'Davi De Barros Pereira','52014818600018','18'),(16409,'Davi Do Nascimento Ribeiro Pereira','43637645300019','19'),(16410,'Davi Maia Da Silva Sobrinho','55055097500020','20'),(16411,'David Bruno Delamo','53214371100021','21'),(16412,'David Gomes Da Silva','52662515600022','22'),(16413,'David Guilherme Andriotto Goncalves','58205262200023','23'),(16414,'David Moreira Da Rocha','53135383700024','24'),(16415,'David Pedro De Lima','54073333700025','25'),(16416,'Dayane Almeida Damaceno','57120216000026','26'),(16417,'Dayane Omena Da Silva','50524305200027','27'),(16418,'Dayna Lilian Figueiredo','50851329700028','28'),(16419,'Debora Cantalicio Da Silva','39615173500029','29'),(16420,'Debora Rodrigues Da Silva','53486295000030','30'),(16421,'Debora Selma Dos Santos Arias','53215530000031','31'),(16422,'Debora Silva Barcello','55249479300032','32'),(16423,'Denise Alves Rodrigues','17745372200033','33'),(16424,'Denise Cristina De Lima Gomes','56056292500034','34'),(16425,'Denise Neves Silveira','1595383800035','35'),(16426,'Deyse Duarte Silva','53420443000036','36'),(16427,'Dianna Sousa Reis','62193193700037','37'),(16428,'Diego Almeida Mendes','52689645000038','38'),(16429,'Diego Alves Gadelha','49797147100039','39'),(16430,'Diego Pablo Candido De Souza','53487980900040','40'),(16431,'Diogo Da Silva Caldeira','38735651400041','41'),(16432,'Diogo Goncalves Cricca','5694988200042','42'),(16433,'Diogo Santinelli Zuim','54801074200043','43'),(16434,'Douglas Carnauba Da Silva','42545982200044','44'),(16435,'Douglas Saboia De Souza','38436299000045','45'),(16436,'Eder Alexandre Todesco','34804336300046','46'),(16437,'Ediclecio De Jesus Melo','52362615000047','47'),(16438,'Edileia Perez Da Silva','29967651100048','48'),(16439,'Edilene Da Silva','32273351000049','49'),(16440,'Edson Pais Filho','58283368100050','50'),(16441,'Edson Victor Araujo','52638456600051','51'),(16442,'Eduarda Jota De Sousa','50746273700052','52'),(16443,'Eduarda Luna De Oliveira','39012799100053','53'),(16444,'Eduarda Nunes Dias','60510456600054','54'),(16445,'Eduarda Vitoria Padovan Drudi','56114699800055','55'),(16446,'Eduardo Augusto Mano','52345581100056','56'),(16447,'Eduardo Gualberto Souza','50567325300057','57'),(16448,'Eduardo Harano Da Costa','55368612400058','58'),(16449,'Eduardo Santos Silva','53535037500059','59'),(16450,'Eduardo Savio Pepineli','57429084900060','60'),(16451,'Eduardo Scarcela Araujo','50242529500061','61'),(16452,'Egle Victoria Rodrigues Magalhaes Da Silva','57009340500062','62'),(16453,'Elaine Cristina Correa','47346744600063','63'),(16454,'Elaine Cristina Guedes Valensoela','25390105400064','64'),(16455,'Elen Camilli Oliveira Soares','56525956800065','65'),(16456,'Elen Nascimento Rodrigues','50029154800066','66'),(16457,'Elias Bezerra Moura','39484067700067','67'),(16458,'Elias Sousa Barbosa','37893611600068','68'),(16459,'Elis Dos Santos Machado','5659587700069','69'),(16460,'Elisa Reis Santos Cavaline','53096915400070','70'),(16461,'Elisa Simioni','5531556000071','71'),(16462,'Elisabete Rodrigues Dos Santos Cuba','42544611600072','72'),(16463,'Elisangela Lopes De Almeida','43022063700073','73'),(16464,'Eliton Marcos Mendes Pereira','5091709500074','74'),(16465,'Ellen Da Cruz Santos','55057404900075','75'),(16466,'Ellen Lima Rosignolo','38299031600076','76'),(16467,'Eloisa Da Silva Crivilin','50523217000077','77'),(16468,'Eloisa Leal Dos Santos','57551502800078','78'),(16469,'Emanoela Ribeiro Martins','38960175500079','79'),(16470,'Emanoele Capitulina De Pontes Araujo','53268157500080','80'),(16471,'Emanuel Queiroz Nascimento','54181776000081','81'),(16472,'Emanuel Santos Pires','391932200200082','82'),(16473,'Emerson Dos Santos Pereira','32635261200083','83'),(16474,'Emerson Vieira Da Silva','43617023100084','84'),(16475,'Emilly Braga Goncalves','54022986600085','85'),(16476,'Emilly Lima Da Silva','54071905500086','86'),(16477,'Emilly Maria Palmeira Morais','3996450700087','87'),(16478,'Emilly Zanon Dias','55107252000088','88'),(16479,'Emillyn Radija Pires Lacerda','58415343000089','89'),(16480,'Emily Cardoso Gil Gomes','58449897400001','1'),(16481,'Emily Dos Santos Barreto','59543204900002','2'),(16482,'Emily Gabriele Feitosa','52164256500003','3'),(16483,'Emily Lima Soares','5278144300004','4'),(16484,'Emily Lopes Dos Santos','5442665000005','5'),(16485,'Emily Vitoria Oliveira Morais','54100799300006','6'),(16486,'Emmanuel Rocha Archilla','53672890200007','7'),(16487,'Emmanuel Vinicius Marques Da Silva','57560592300008','8'),(16488,'Emmily Vitoria De Souza Pedro','55647462400009','9'),(16489,'Emylle Nalanda De Freitas Silva','60569386900010','10'),(16490,'Emylle Sampaio De Sousa','38614257900011','11'),(16491,'Enrico Goncalves Bueno','39672901000012','12'),(16492,'Enzo Paschuini De Sousa','59392012000013','13'),(16493,'Erica Rodrigues Martins','57046399300014','14'),(16494,'Erick Arejano Gomes Batista','57504101800015','15'),(16495,'Erick De Santana','52084706400016','16'),(16496,'Erick Fabricio Oliveira Maciel','57760765000017','17'),(16497,'Erick Filipe Santos Vieira','58556505300018','18'),(16498,'Erick Henrique Feijo De Oliveira','38866317000019','19'),(16499,'Erick Hernandes Da Silva','53893447500020','20'),(16500,'Erika Maria Spessotto Dos Santos','57340629700021','21'),(16501,'Erileia Soares De Sousa','5394622400022','22'),(16502,'Erivania Maria Da Silva','52702864200023','23'),(16503,'Eryk De Mesquita Lopes','38962363500024','24'),(16504,'Esdras Brunassi Vieira','56179417000025','25'),(16505,'Estela Argolo Paraiso Carvalho','58473780400026','26'),(16506,'Estella Amabile Gavasi Amaral','55105863800027','27'),(16507,'Estella Pivetta Do Amaral','64009570700028','28'),(16508,'Ester De Souza Fernandes','54529259100029','29'),(16509,'Ester Santos De Jesus','56119390300030','30'),(16510,'Estevao Guimel Oliveira Rodrigues','57227264900031','31'),(16511,'Esther Maciel De Souza Santos','38800099500032','32'),(16512,'Etienne Cristina Da Luz Ferreira De Lima','52220732700033','33'),(16513,'Eunara Adriany Silva','58290842500034','34'),(16514,'Evandro De Araujo','30575350200035','35'),(16515,'Evandro Fina Ramos','38734901700036','36'),(16516,'Evellyn Gomes Da Silva','5271255700037','37'),(16517,'Evelyn Andrade Do Nascimento','38040340700038','38'),(16518,'Evelyn Ruama Martins Trindade','58001181100039','39'),(16519,'Everton Da Silva Ferreira','41985564600040','40'),(16520,'Ewellyn Sardinha Sodre','5483957200041','41'),(16521,'Fabia Aperacida Da Silva','48057513700042','42'),(16522,'Fabio Alves Bezerra','32128188300043','43'),(16523,'Fabio Augusto Andrade De Sousa','58279785800044','44'),(16524,'Fabio Cachone De Oliveira Silva','48490613600045','45'),(16525,'Fabio Henrique Rodrigues Da Silva','39435268300046','46'),(16526,'Fabio Maganha Moreira','5604090000047','47'),(16527,'Fabio Mendes Do Nascimento','52020302100048','48'),(16528,'Fabio Yamashita Alves','57213157400049','49'),(16529,'Fabio Yuzo Matoba','30401769300050','50'),(16530,'Fabricio Genoveva Teixeira','52098463800051','51'),(16531,'Fabricio Siqueira De Sousa','59586078300052','52'),(16532,'Fabricio Thomaz Barbosa Da Silva','5339271600053','53'),(16533,'Fagner Valdivino Ferreira','29289968300054','54'),(16534,'Fatima Pinheiro De Godoi','59083008900055','55'),(16535,'Feliciano Souza Bento Dos Santos','64289417600056','56'),(16536,'Felipe Basilio Marques','38435362900057','57'),(16537,'Felipe Da Silva Alves','39150397200058','58'),(16538,'Felipe Dantas Do Nascimento','52264260300059','59'),(16539,'Felipe De Paula Oliveira','50363417700060','60'),(16540,'Felipe Ferreira De Almeida Silva','38961134700061','61'),(16541,'Felipe Januario Domingues','39568817600062','62'),(16542,'Felipe Lopes Alcantara','54721788200063','63'),(16543,'Felipe Mamelli','58170427700064','64'),(16544,'Felipe Mariano Berti','53020432000065','65'),(16545,'Felipe Marques Rodrigo','38126635700066','66'),(16546,'Felipe Moraes De Oliveira','54539209300067','67'),(16547,'Felipe Nelli Martins','57739286400068','68'),(16548,'Felipe Queiroz De Sousa','5060094900069','69'),(16549,'Felipe Rampani De Oliveira','57995072400070','70'),(16550,'Felipe Rodrigues Peixoto Da Silva','54105131300071','71'),(16551,'Felipe Sousa Domingos','39281683000072','72'),(16552,'Felipe Vieira Souza Santos','53808459500073','73'),(16553,'Fernanda Cavalcante De Sa','52531192000074','74'),(16554,'Fernanda Cavalcante De Souza Marques','57255768100075','75'),(16555,'Fernanda Costa','50859729800076','76'),(16556,'Fernanda De Sa Contin','58132233200077','77'),(16557,'Fernanda Fonseca De Oliveira','39212540700078','78'),(16558,'Fernanda Garcia Da Silva','57467266700079','79'),(16559,'Fernanda Lozano Pradelli','64247268300080','80'),(16560,'Fernanda Martins Ferreira','5286169500081','81'),(16561,'Fernanda Melo Ventura','50703185400082','82'),(16562,'Fernanda Miranda Okazaki','39789452100083','83'),(16563,'Fernanda Neves Miranda','53826761600084','84'),(16564,'Fernanda Ribeiro Onwuatu','50869468100001','1'),(16565,'Fernanda Vieira Pereira','39483305300002','2'),(16566,'Fernando Candido Fianchi','52164766600003','3'),(16567,'Fernando Dos Santos Alves','50481889200004','4'),(16568,'Flavia Pereira Da Cruz','1299881800005','5'),(16569,'Flavio Barroso Da Silva','48180205800006','6'),(16570,'Flavio Vieira Diniz Junior','5655989600007','7'),(16571,'Francielle Goncalves Teixeira','3861389300008','8'),(16572,'Franciely Sarmento Da Silva','50709508900009','9'),(16573,'Francine Milanes Barbosa','5929160800010','10'),(16574,'Francisca Micheli Dasilva Teles','54161638900011','11'),(16575,'Francisco Paulino Da Silva Neto','339407300012','12'),(16576,'Gabriel Adriano Dos Santos','60214496600013','13'),(16577,'Gabriel Alexandre Camelo Chavin','59842920700014','14'),(16578,'Gabriel Alves Silva','39523259400015','15'),(16579,'Gabriel Amorim Silva','39939089300016','16'),(16580,'Gabriel Andrade Sousa','50290732000017','17'),(16581,'Gabriel Antunes Rodrigues','54722484900018','18'),(16582,'Gabriel Araujo','52639024400019','19'),(16583,'Gabriel Barbosa De Andrade','53330789200020','20'),(16584,'Gabriel Barros De Carvalho','53958911100021','21'),(16585,'Gabriel Bense Ribeiro','57205691600022','22'),(16586,'Gabriel Bovo Carvalho','57505892400023','23'),(16587,'Gabriel Castro Dias','396217219900024','24'),(16588,'Gabriel Cavalcante Alvares','57204056800025','25'),(16589,'Gabriel Cobo Figueiro','60166271400026','26'),(16590,'Gabriel Da Cunha Lisboa','38396327800027','27'),(16591,'Gabriel Da Silva Carmo','44343383500028','28'),(16592,'Gabriel Da Silva Carvalho','38823872000029','29'),(16593,'Gabriel Daiskye Higa','58272548300030','30'),(16594,'Gabriel Daisuke Matsubara','37666617100031','31'),(16595,'Gabriel De Azevedo Moreira','55697223500032','32'),(16596,'Gabriel De Jesus Quintao','38562722100033','33'),(16597,'Gabriel De Oliveira Nascimento','50002502200034','34'),(16598,'Gabriel De Paula Santos','50934448300035','35'),(16599,'Gabriel De Souza Ribeiro','59483211100036','36'),(16600,'Gabriel De Souza Santana','0651065197400037','37'),(16601,'Gabriel Dias Silva','39523465700038','38'),(16602,'Gabriel Dos Santos','57071175700039','39'),(16603,'Gabriel Dos Santos Luz','58727655100040','40'),(16604,'Gabriel Felipe Da Silva','50483453800041','41'),(16605,'Gabriel Fernander Blimbliem','54311654200042','42'),(16606,'Gabriel Henrique Costa Silva','55251006300043','43'),(16607,'Gabriel Henrique Magaton','50150053400044','44'),(16608,'Gabriel Lacerda Pereira','54359264900045','45'),(16609,'Gabriel Leme Nunes','48843926700046','46'),(16610,'Gabriel Leonardi Gomes','54844692100047','47'),(16611,'Gabriel Lima De Lana Pedrosa','50363768300048','48'),(16612,'Gabriel Machado Da Costa','5841115400049','49'),(16613,'Gabriel Mari Salles','5035802000050','50'),(16614,'Gabriel Maximo De Oliveira','57028623200051','51'),(16615,'Gabriel Monteiro De Santana','39970899600052','52'),(16616,'Gabriel Padilha De Siqueira','38208109200053','53'),(16617,'Gabriel Pereira Da Silva','5052306300054','54'),(16618,'Gabriel Pereira Dos Santos','39373777900055','55'),(16619,'Gabriel Portela Moreira','52404362000056','56'),(16620,'Gabriel Rodrigues Alves Nunes','54583220200057','57'),(16621,'Gabriel Rodrigues Martins','53894313000058','58'),(16622,'Gabriel Sa Correa Da Silva','54800696900059','59'),(16623,'Gabriel Santos','3792607500060','60'),(16624,'Gabriel Santos Burger','57639071900061','61'),(16625,'Gabriel Santos De Cantalice','52273967200062','62'),(16626,'Gabriel Siqueira De Andrade','55914740500063','63'),(16627,'Gabriel Souza Almeida','50837495900064','64'),(16628,'Gabriel Souza Neves','38897967700065','65'),(16629,'Gabriel Vilarubia','39514455300066','66'),(16630,'Gabriela Almeida Peres','55195729300067','67'),(16631,'Gabriela Bonilha Irpelli','38321731300068','68'),(16632,'Gabriela Chaves De Oliveira Silva','52467681100069','69'),(16633,'Gabriela Da Silva Beserra','56544885700070','70'),(16634,'Gabriela De Lima Damamcena','55370065000071','71'),(16635,'Gabriela De Sousa Monteiro','5275597400072','72'),(16636,'Gabriela Domingues Deliberal','52363658100073','73'),(16637,'Gabriela Feereira Da Silva','55972305200074','74'),(16638,'Gabriela Fernanda Dos Santos Ferreira','63619589200075','75'),(16639,'Gabriela Fernanda Mendes','56373833900076','76'),(16640,'Gabriela Ferreira Dos Santos','53302611800077','77'),(16641,'Gabriela Goncalves Farias','60113349300078','78'),(16642,'Gabriela Goncalves Reis','5510583300079','79'),(16643,'Gabriela Lopes Da Silva','38380729300080','80'),(16644,'Gabriela Lourenco Da Silva','60170940800081','81'),(16645,'Gabriela Marcos De Freitas','5802151200082','82'),(16646,'Gabriela Morais Da Silva','52307102400083','83'),(16647,'Gabriela Moreira Dos Santos','53970879300001','1'),(16648,'Gabriela Paiva Dos Santos','55107125400002','2'),(16649,'Gabriela Petroleo Ferreira','52861081800003','3'),(16650,'Gabriela Rodrigues De Pinho','55195651300004','4'),(16651,'Gabriela Romaneto Ribeiro','55807039500005','5'),(16652,'Gabriela Romanini Silva','50708594200006','6'),(16653,'Gabriela Rosa Franca Dos Santos','38613774200007','7'),(16654,'Gabriela Santos Cenciani','50481877600008','8'),(16655,'Gabriela Santos Portela','39280793200009','9'),(16656,'Gabriela Santos Vieira Silva','53097091000010','10'),(16657,'Gabriele Alves Levy','38637671200011','11'),(16658,'Gabriele Fernandes Viveiros','57746299400012','12'),(16659,'Gabriella Aparecida Ormelli De Medeiros','52162976700013','13'),(16660,'Gabriella Do Carmo Pereira','52276245100014','14'),(16661,'Gabriella Oliveira Freitas','38734992300015','15'),(16662,'Gabriella Zambelli Zigaib','60528156700016','16'),(16663,'Gabrielle Batista Rocha','52031350100017','17'),(16664,'Gabrielle Cristina Dos Santos','53616294300018','18'),(16665,'Gabrielle Cristina Lebedeff','53687845600019','19'),(16666,'Gabrielle Fonseca Theodoro Da Silva','38568824600020','20'),(16667,'Gabrielle Silva Gomes','5770798900021','21'),(16668,'Gabrielli De Souza Sa','52364407300022','22'),(16669,'Gabrielly Araujo Alves','60590477700023','23'),(16670,'Gabrielly Neves','62783689600024','24'),(16671,'Gabrielly Ribeiro Dos Santos','5786010000025','25'),(16672,'Gabrielly Silva Santos','50399696800026','26'),(16673,'Gabriely Vasconcellos Goncalves','39830089600027','27'),(16674,'Geanny Yassuda De Oliveira','50559145500028','28'),(16675,'Geovana Nogueira Palmeira','57758114400029','29'),(16676,'Geovanna Da Silva Moura','38896421200030','30'),(16677,'Geovanna De Oliveira Da Silva Pastorello','38567320600031','31'),(16678,'Geovanna Ferrari Alves','39192931800032','32'),(16679,'Geovanna Hellen Souza De Oliveira','60105640100033','33'),(16680,'Geovanna Lopes Da Silva','54228667100034','34'),(16681,'Geovanna Nunes Miranda','57311878400035','35'),(16682,'Geovanna Rodrigues De Oliveira','54104335300036','36'),(16683,'Gerson De Almeida Filho','50960743300037','37'),(16684,'Gerson Rodrigues Pereira','47442307400038','38'),(16685,'Gerson Sergio Santana','18863690000039','39'),(16686,'Geruza Silva De Paula','37665602500040','40'),(16687,'Gian Lucca Zutin Quaglio','57620804800041','41'),(16688,'Gianlucca Da Silva Souza','54839926800042','42'),(16689,'Giovana Acsa Bassi Do Santo','58446500200043','43'),(16690,'Giovana Alves Melo','38022058100044','44'),(16691,'Giovana Aparecida Mendes','39213503600045','45'),(16692,'Giovana Barbosa Torrente','54773405000046','46'),(16693,'Giovana Brito Rocha','54021334200047','47'),(16694,'Giovana De Andrade Pestana','54720992700048','48'),(16695,'Giovana Dos Santos Rodrigues','5990818200049','49'),(16696,'Giovana Facundo Carneiro','38961027600050','50'),(16697,'Giovana Felicio Monteiro','39912845100051','51'),(16698,'Giovana Lyssa Passos De Souza','50710680500052','52'),(16699,'Giovana Rodrigues De Oliveira','54427567600053','53'),(16700,'Giovana Zaboto De Jesus','53486574400054','54'),(16701,'Giovani Araujo Nardi','52139733900055','55'),(16702,'Giovani Pavan','38188294900056','56'),(16703,'Giovanna Alves Santana','60928623700057','57'),(16704,'Giovanna Andrade Pinheiro','53974994100058','58'),(16705,'Giovanna Assoni Rodrigues Soares','53355475500059','59'),(16706,'Giovanna Avila Alves Rodrigues','38567010200060','60'),(16707,'Giovanna Cavalcanti Nunes','38961784200061','61'),(16708,'Giovanna Charlo','39030286700062','62'),(16709,'Giovanna Cremonezi Vianna','3853391500063','63'),(16710,'Giovanna D. Sousa Da Silva','54137962800064','64'),(16711,'Giovanna Da Silva Savioli','57889369100065','65'),(16712,'Giovanna Faquinetti Da Rocha','54384453500066','66'),(16713,'Giovanna Felix Macedo','57256176300067','67'),(16714,'Giovanna Ferrari Trevisan','58249256700068','68'),(16715,'Giovanna Ferreira Rodrigues','5572328200069','69'),(16716,'Giovanna Fonseca Do Nascimento','3933318800070','70'),(16717,'Giovanna Gamboa De Melo','56974842200071','71'),(16718,'Giovanna Garcia Marcos','39570258600072','72'),(16719,'Giovanna Garcia Pereira','52732072900073','73'),(16720,'Giovanna Gomes Dos Santos','56899146100074','74'),(16721,'Giovanna Guadagnini Lima','5777925700075','75'),(16722,'Giovanna Leticia Tavares Rodrigues','62928870700076','76'),(16723,'Giovanna Marcela Melo','57071566000077','77'),(16724,'Giovanna Martha Silva Pohli','63393742300078','78'),(16725,'Giovanna Micaely Lima Godinho','57202004100079','79'),(16726,'Giovanna Paula Moura Da Silva','55107686000080','80'),(16727,'Giovanna Rodrigues Da Silva','44334934400081','81'),(16728,'Giovanna Rodrigues Luz','53194185100082','82'),(16729,'Giovanna Romao Caires Silva','56811382200083','83'),(16730,'Giovanna Santos','54021817000084','84'),(16731,'Giovanna Santos D Alessio Brandao','55934316400085','85'),(16732,'Giovanna Singh Dos Santos','59067310500086','86'),(16733,'Giovanna Skorupa Dos Santos','55702589800087','87'),(16734,'Giovanna Venancio Fidelis De Sousa','39346771500088','88'),(16735,'Giovanna Vieira De Almeida Barreto Da Silva','55800126900089','89'),(16736,'Giovanna Yumi Moreira Kina','38185513200090','90'),(16737,'Giovanna Zulim Estradiote','50545651500091','91'),(16738,'Giovanni Capeli Prado De Almeida','50748631600092','92'),(16739,'Giovanni Henrique Bezerra','39194260800093','93'),(16740,'Giovanni Lino Partezani','37815084400094','94'),(16741,'Giovanni Rodrigues Giusti','50545949800095','95'),(16742,'Giovanni Santos Floriano Da Silva','52232716300096','96'),(16743,'Giovanni Spessotto Sartori','55369068100097','97'),(16744,'Gisele Pereira Arruda','38612823600098','98'),(16745,'Giselle Santino Do Nascimento','53303684700099','99'),(16746,'Gislane Da Costa Silva','65196074500100','100'),(16747,'Giulia Antunes Rodrigues','5227382800001','1'),(16748,'Giulia Carlos Chernioglo','39571127700002','2'),(16749,'Giulia Caroline Pereira','39435290700003','3'),(16750,'Giulia De Souza Bispo','55673055000004','4'),(16751,'Giulia Galbiati Figueiredo De Oliveira','58183546300005','5'),(16752,'Giulia Leal De Lima','52803742000006','6'),(16753,'Giulia Mariah Soares','557448533800007','7'),(16754,'Giulia Vieira Nascimento','5221019400008','8'),(16755,'Giulia Vitoria Cardoso Silva Romao','39995170200009','9'),(16756,'Giuliana Zuza Cegolin','55141949000010','10'),(16757,'Giullia Vianna Galera','54529861100011','11'),(16758,'Giulliana Morais','37803564200012','12'),(16759,'Glaicy Kelly Pereira Domiciano','54229279800013','13'),(16760,'Gleica Rodrigues De Souza','3982984900014','14'),(16761,'Gleyce Amorim De Sousa','38332353800015','15'),(16762,'Gleyner Gabriel De Paula Ferreira','38126684900016','16'),(16763,'Graziela Pereira De Lima','55643033500017','17'),(16764,'Graziele De Moraes Cavalcante Da Silva','38614349300018','18'),(16765,'Grazielly Da Silva Figueredo','57912503800019','19'),(16766,'Guilherme Andrei Araujo Clemente','40922189200020','20'),(16767,'Guilherme Antonio Alves Felix','38332081100021','21'),(16768,'Guilherme Arruda Carneiro Da Silva','38282585800022','22'),(16769,'Guilherme Barbosa Pereira Santos','52234324700023','23'),(16770,'Guilherme Batista Dos Santos','53810561600024','24'),(16771,'Guilherme Bozi Ferreira','59736678000025','25'),(16772,'Guilherme Bruno Oliveira De Araujo','50523424500026','26'),(16773,'Guilherme Cavalcanti Ferretti','58685971800027','27'),(16774,'Guilherme Crepaldi Da Silva','58000579300028','28'),(16775,'Guilherme Dal Cortivo','58897247200029','29'),(16776,'Guilherme De Carvalho Costa','50545796900030','30'),(16777,'Guilherme De Francisco Rodrigues','50557645400031','31'),(16778,'Guilherme De Oliveira Ferreira','52464787200032','32'),(16779,'Guilherme De Souza Ferreira','56790484200033','33'),(16780,'Guilherme Felipe Gois Santos','49024618700034','34'),(16781,'Guilherme Ferreira Santos \'','39029742200035','35'),(16782,'Guilherme Freitas Lopes','55819202600036','36'),(16783,'Guilherme Gamba Antonio','54073542500037','37'),(16784,'Guilherme Gomes Silva','3990528300038','38'),(16785,'Guilherme Maciel Goncalves','6255216400039','39'),(16786,'Guilherme Martins Neris','52689101400040','40'),(16787,'Guilherme Martins Sales De Oliveira','38736727500041','41'),(16788,'Guilherme Moreira Leite Da Silva','59056248400042','42'),(16789,'Guilherme Mourao Alves','53215219000043','43'),(16790,'Guilherme Nascimento Galvao Campos','37664619600044','44'),(16791,'Guilherme Nunes Siqueira','39781508600045','45'),(16792,'Guilherme Pilissari Eggert','37963052700046','46'),(16793,'Guilherme Pinho Souza','55914695400047','47'),(16794,'Guilherme Ramos Dos Santos','50746923900001','1'),(16795,'Guilherme Ribeiro Barbosa','50288119700002','2'),(16796,'Guilherme Rocha Matos','38833537300003','3'),(16797,'Guilherme Rodrigues Souza','37835306800004','4'),(16798,'Guilherme Santos Costa Carrinho','56132552400005','5'),(16799,'Guilherme Santos Floriano Da Silva','52232708400006','6'),(16800,'Guilherme Silva Sena','54800915600007','7'),(16801,'Guilherme Valentim Oliveira','52755164800008','8'),(16802,'Guilherme Vinicius De Carvalho Siqueira','58439257600009','9'),(16803,'Gustavo Alves De Azevedo','38569102600010','10'),(16804,'Gustavo Araujo Costa','53827478500011','11'),(16805,'Gustavo Araujo Nunes Da Silva','52343009700012','12'),(16806,'Gustavo Arcante Magalhaes Alves','59863730800013','13'),(16807,'Gustavo Arthur Da Silva Pereira','50558862600014','14'),(16808,'Gustavo Bastos Dos Santos','39030830400015','15'),(16809,'Gustavo Cavalheiro Simoes','52718251500016','16'),(16810,'Gustavo Da Silva Santos','58411937900017','17'),(16811,'Gustavo Da Silva Soares','39029153500018','18'),(16812,'Gustavo Dos Santos Carrera','39164671000019','19'),(16813,'Gustavo Fagundes De Souza','5825594200020','20'),(16814,'Gustavo Faquinetti','53892826800021','21'),(16815,'Gustavo Francisco De Paula','38960759900022','22'),(16816,'Gustavo Hideki De Oliveira Yokoyama','14102740900023','23'),(16817,'Gustavo Leopoldino Da Silva','52012517400024','24'),(16818,'Gustavo Lisboa De Viveiros','5230713600025','25'),(16819,'Gustavo Martini','52917922200026','26'),(16820,'Gustavo Martins Da Silva','57983189900027','27'),(16821,'Gustavo Martins Dias','59762636400028','28'),(16822,'Gustavo Medrado Pacheco','39023181200029','29'),(16823,'Gustavo Menezes Fernandes','39597456200030','30'),(16824,'Gustavo Nascimento Da Silva','57003197700031','31'),(16825,'Gustavo Pacini Da Silva','55422923700032','32'),(16826,'Gustavo Patricio Rosa De Sousa','60864813900033','33'),(16827,'Gustavo Ribeiro Barbosa','50287662100034','34'),(16828,'Gustavo Rodrigues Nascimento De Assis Junior','55142128900035','35'),(16829,'Gustavo Schuindt De Oliveira','53926770300036','36'),(16830,'Gustavo Silva Morgado','53773902600037','37'),(16831,'Gustavo Ziemens De Camargo','56302606600038','38'),(16832,'Gusthavo Marcello Casarin','37628260500039','39'),(16833,'Gyovana Antonio Da Silva','56970185500040','40'),(16834,'Gyovanna Soares De Souza','5863857100041','41'),(16835,'Hagatha Toledo Brandao','57071643300042','42'),(16836,'Handro Silva Navas Lourenco','39417551700043','43'),(16837,'Hayana Lorena Petinati','60116402700044','44'),(16838,'Hayda Rodrigues Dos Santos','39595683300045','45'),(16839,'Hebert Nascimento Da Costa','56509681300046','46'),(16840,'Helena Akiko Yamada','42487385000047','47'),(16841,'Helida Xavier Coutinho','1717229100001','1'),(16842,'Hellen Bianca Soares Da Silva','60799231100002','2'),(16843,'Hellen Fernanda Guicioli Do Nascimento','56947929000003','3'),(16844,'Heloisa Bellisoni De Freitas','38713165600004','4'),(16845,'Heloisa Dos Santos Lima Gasparino','38494007600005','5'),(16846,'Heloisa Dos Santos Volpini','54052320300006','6'),(16847,'Heloisa Franco Zamforin','54584303000007','7'),(16848,'Heloisa Martins Ferreira Pinto','59021482200008','8'),(16849,'Heloisa Silva E Ferreira','56353888000009','9'),(16850,'Heloisa Sousa Reis','38660290600010','10'),(16851,'Hemily Lidia Rodrigues Aragao','50707870600011','11'),(16852,'Hendryll Luiz Rodrigues De Brito Silva','52863058100012','12'),(16853,'Henrique Alexsandro Sales Pessoa','55315128900013','13'),(16854,'Henrique Cardoso De Oliveira','46548760900014','14'),(16855,'Henrique Cardoso Fava','5843252300015','15'),(16856,'Henrique Cavalheiro Simoes','5271823100016','16'),(16857,'Henrique De Lima Martins','125193300017','17'),(16858,'Henrique Gabriel De Almeida Mendes','37845017700018','18'),(16859,'Henrique Mendes Da Silva','39568526600019','19'),(16860,'Henrique Nascimento Ribeiro','55369662200020','20'),(16861,'Henrique Prada Trindade','52915943000021','21'),(16862,'Henrique Valino Nakamura','5516870600022','22'),(16863,'Herika Tavares Silva Santos','54649987900023','23'),(16864,'Herman Boscariol Junior','37765759100024','24'),(16865,'Higor Butura Scaramal Da Silva','54266539600025','25'),(16866,'Higor Cardoso Da Silva','53461262300026','26'),(16867,'Higor Ferreira','50482123400027','27'),(16868,'Hillary Ingrid Cardoso Da Silva','388345353900028','28'),(16869,'Hingrid Oliveira Da Silva','62837734700029','29'),(16870,'Homero Pereira De Souza Filho','57154491500030','30'),(16871,'Hugo Braz Da Silva','50620268900031','31'),(16872,'Hugo Siva Mesquita\'','39061261300032','32'),(16873,'Hugo Tiago Teixeira Marques','47626440600033','33'),(16874,'Humberto Carlos Cardoso Da Silva','39995793500034','34'),(16875,'Humberto Vitalino Da Silva','57391985900035','35'),(16876,'Hyam Goncalves De Araujo','54720689600036','36'),(16877,'Hyasmin Aparecido Rodrigues','54449800800037','37'),(16878,'Hyasmin Carvalho De Jesus','54932139100038','38'),(16879,'Iago Da Silva Wefer','38562632000039','39'),(16880,'Ian Hayala Dos Santos','38435359900040','40'),(16881,'Ianca Jennifer Aguiar Da Fonseca','123802700041','41'),(16882,'Iara Lima Macedo','39719368300042','42'),(16883,'Iara Machado Guarnieri','56612097500043','43'),(16884,'Iasmim Paulino De Almeida','37521065900044','44'),(16885,'Iasmin Carneiro De Oliveira','38651944400045','45'),(16886,'Ibernon Bispo Dos Santos','46522805700046','46'),(16887,'Icaro Barros Martineli','44334977000047','47'),(16888,'Igor Alves Dos Santos','52162850700048','48'),(16889,'Igor Celestino Ramos','38734527900049','49'),(16890,'Igor Ferreira Waibena','55314458300050','50'),(16891,'Igor Policarpo Adami','53241053100051','51'),(16892,'Igor Santos Botelho','38469256400052','52'),(16893,'Igor Vital','38299545400053','53'),(16894,'Ilkson Reis Marques De Lira Junior','58543138300054','54'),(16895,'Ingrid Catarina Suliman Grudzinski','55278192700055','55'),(16896,'Ingrid Ellen Silva Pinheiro','5330321200056','56'),(16897,'Ingrid Gregorio Dos Santos','37507017500057','57'),(16898,'Ingrid Heidemann','58431710400058','58'),(16899,'Ingrid Lima Da Silva','56598546200059','59'),(16900,'Ingrid Pinheiro Costa','39212506700060','60'),(16901,'Ingrid Reginni Timm','57750145800061','61'),(16902,'Ingrid Sakura Higa Ferreira','5246602700062','62'),(16903,'Ingrid Vitoria Mielnik De Moraes','57050858700063','63'),(16904,'Ingryd Goulart Da Silva','53947352200064','64'),(16905,'Ingryd Nasimento','38156475700065','65'),(16906,'Iolanda Gasparetti Vargas','57922047300066','66'),(16907,'Iones De Almeida Gotardo','65655419800067','67'),(16908,'Iris De Oliveira Campos','55196984000068','68'),(16909,'Isaac Coaraci Pereira Do Nascimento','54956724000069','69'),(16910,'Isaac De Paulo Honorato','39717922400070','70'),(16911,'Isaac Soares Da Silva','60593917200071','71'),(16912,'Isabel Bertelli Vidal','57243193400072','72'),(16913,'Isabela Alvino Silva','50618924700073','73'),(16914,'Isabela Dias Oliveira','38835812900074','74'),(16915,'Isabela Ferreira','39275088000075','75'),(16916,'Isabela Ferreira De Sousa','59423548000076','76'),(16917,'Isabela Iesi Do Nascimento','58516657200077','77'),(16918,'Isabela Kethely Da Silva Gimenes Ramos','54460971200078','78'),(16919,'Isabela Lima Lacerda Dos Santos','52232591900079','79'),(16920,'Isabela Lima Nascimento','53839779200080','80'),(16921,'Isabela Nunes Mecenero','56274648100081','81'),(16922,'Isabela Rodrigues Silva','60901413400082','82'),(16923,'Isabela Salazar Da Silva','54650483800083','83'),(16924,'Isabela Santos Silva','52363832200084','84'),(16925,'Isabela Silva Porto','53669505200085','85'),(16926,'Isabele Dias Dos Santos','54844081500086','86'),(16927,'Isabele M Mousse','62320313300087','87'),(16928,'Isabella Alves','39214795600088','88'),(16929,'Isabella Alves Borges De Jesus','5658116100089','89'),(16930,'Isabella Alves De Queiroz Moura','50252048600090','90'),(16931,'Isabella Barbosa Cardoso De Santana','55726007300091','91'),(16932,'Isabella Casagrande','53237421600092','92'),(16933,'Isabella Cordeiro De Oliveira','37696837000093','93'),(16934,'Isabella Costa Leone','60437073800094','94'),(16935,'Isabella De Souza Rodrigues','2053195600095','95'),(16936,'Isabella Gonzaga Guimaraes','39664502100096','96'),(16937,'Isabella Lara Dos Santos Souza','60449219400097','97'),(16938,'Isabella Marques Santos','5580731300098','98'),(16939,'Isabella Martins Del Valle','60767285700099','99'),(16940,'Isabella Martins Dos Santos','57102890100100','100'),(16941,'Isabella Muniz Anunciato De Menezes','52327477400101','101'),(16942,'Isabella Ostolin Rodrigues Domingos','57789400600102','102'),(16943,'Isabella Silva Ramos','57447018900103','103'),(16944,'Isabella Simplicio Vieira','54640735300104','104'),(16945,'Isabelle De Oliveira Moura','56901195400105','105'),(16946,'Isabelle Oliveira Lopes','55632945400106','106'),(16947,'Isabelle Teixeira Ozorio De Oliveira','38800877500107','107'),(16948,'Isabelli De Oliveira Fernandes','55107672000108','108'),(16949,'Isac Lucca Trigueiro Lauriano','62252131700109','109'),(16950,'Isadhora Oliveira Figueiredo Rosario','53331227900110','110'),(16951,'Luna Faustino Lima','5216381500111','111'),(16952,'Nohan Esteves Roldao','37257963600112','112'),(16953,'Raphael Gomes Da Silva','3886383100113','113'),(16954,'Sebastian Rocha Monteiro','57432168800114','114'),(16955,'Yan Daniel Oliveira Pandino','42922498900115','115'),(16956,'Isabelli Rodrigues Magalhaes','62767924900001','1'),(16957,'Isabelly Jesus De Araujo','5536853400002','2'),(16958,'Isabelly Machado','55737265300003','3'),(16959,'Isabelly Neves Pires','56628504600004','4'),(16960,'Isabely Oliveira De Moura','39903719600005','5'),(16961,'Isadora Carvalho Santos','50484744200006','6'),(16962,'Isadora Soares Caetano','56003749100007','7'),(16963,'Isaque De Sousa Pinheiro','64739123500008','8'),(16964,'Isaque Fernandes De Carvalho','59932399100009','9'),(16965,'Isaquer Bertucci Santos','55047708100010','10'),(16966,'Isoldenir Carlene Cezario De Marchi','3815053900011','11'),(16967,'Israel Santos De Almeida','55076289900012','12'),(16968,'Isys Nathalie Barreto','55916260100013','13'),(16969,'Italo Piaui Dos Santos','54426563400014','14'),(16970,'Iury Hermon Souza','38737048100015','15'),(16971,'Ivan Silva De Lima','55798429400016','16'),(16972,'Ives Morais Braga','5054598400017','17'),(16973,'Iza Maria Freitas De Lima','53944405400018','18'),(16974,'Izabela Bellini Lourenco','58316613100019','19'),(16975,'Izabela Fagundes Bezerra','54807555400020','20'),(16976,'Izabella Brandao De Lima','53283261900021','21'),(16977,'Izabella Sayemi Carmello','50484805700022','22'),(16978,'Izabelly De Souza Aleixo','6034113700023','23'),(16979,'Izabelly Morais Bramont De Azevedo','54509997300024','24'),(16980,'Jacqueline Escobar De Souza','40136350800025','25'),(16981,'Jacqueline Regina Santos','53068822000026','26'),(16982,'Jad Ellen Vieira Maria','5517230400027','27'),(16983,'Jade Maria Alves Farias','39754679800028','28'),(16984,'Jady Maria Nunes Da Silva','38360604400029','29'),(16985,'Jaicilene Rezende Da Costa','50118339500030','30'),(16986,'Jailton De Jesus Barbosa','48222436800031','31'),(16987,'Jair Sales Fernandes Da Silva','64291708500032','32'),(16988,'Jamile Sopran Ferreira','54311541000033','33'),(16989,'Jamille Mauricio Dos Santos','56286920700034','34'),(16990,'Jamyres Muniz De Souza','57689768100035','35'),(16991,'Janaina Karine Alves De Jesus','56026272100036','36'),(16992,'Janaina Maria Da Silva Braghiroli','49341565800037','37'),(16993,'Janaina Pereira Da Silva','55803201100038','38'),(16994,'Janaina Vasconcelos Constante','56720421200039','39'),(16995,'Janine Goncalves Dias Da Silva','52032999500040','40'),(16996,'Jaqueline Almeida Santos','53590100800041','41'),(16997,'Jaqueline De Souza Gomes','38109256200042','42'),(16998,'Jaqueline Gordillo','37882624400043','43'),(16999,'Jaqueline Helena Nascimento','52342490500044','44'),(17000,'Jaqueline Lima Santana','37542224900045','45'),(17001,'Jaqueline Lopes','52258034800046','46'),(17002,'Jaqueline Moura Santos','38834136100047','47'),(17003,'Jaqueline Provvidenti Silva','39065869800048','48'),(17004,'Jefferson Pivetta','49208081100049','49'),(17005,'Jeniffer Mendes Da Silva','50243663300050','50'),(17006,'Jeniffer Silva Oliveira','38612119900051','51'),(17007,'Jennifer Christina Dos Santos Silva','5286171400052','52'),(17008,'Jennifer Kelly Carneiro De Araujo Dos Santos','53315177600053','53'),(17009,'Jennifer Nicoli Oliveira Bernal','39622181600054','54'),(17010,'Jessica Alencar Silva','39166280600055','55'),(17011,'Jessica Catarina Benedita De Melo','59529089900056','56'),(17012,'Jessica Erica Da Silva Alencar','57695525500057','57'),(17013,'Jessica Ortiz Yapura','38088144500058','58'),(17014,'Jessica Reis Da Silva','38009204900059','59'),(17015,'Jessyca Gomes Dos Santos','63355457100060','60'),(17016,'Jheffini Rocha Monteiro','55106595300061','61'),(17017,'Jheniffer Elisabete Estevam De Souza','60068273000062','62'),(17018,'Jhennifer Bernardino De Oliveira','52012645200063','63'),(17019,'Jheovana Marquete','54489461300064','64'),(17020,'Jhian Carlos Soares Novaes','58636137600065','65'),(17021,'Jhonatan Mateus Roque De Oliveira','49920565000066','66'),(17022,'Joana Manoela Dos Santos Diniz','38711282000067','67'),(17023,'Joao Anthony Araujo Pinto','38914673000068','68'),(17024,'Joao Augusto De Oliveira Fogo','38569954200069','69'),(17025,'Joao Cleber Silva Rodrigues','58804177400070','70'),(17026,'Joao Gabriel Goulart Da Silva','53947353400071','71'),(17027,'Joao Henrique Silveira Da Silva','55196106500072','72'),(17028,'Joao Luiz Goncalves','55106504700073','73'),(17029,'Joao Otavio Rosa Cavalcanti','57216414200074','74'),(17030,'Joao Paulo Dos Santos Silva','58197516900075','75'),(17031,'Joao Pedro Alves Da Silva','37477665900076','76'),(17032,'Joao Pedro Amaral Freire','52436895800077','77'),(17033,'Joao Pedro Gomes Da Silva','39031037200078','78'),(17034,'Joao Pedro Martins Da Silva Alves','5694087400079','79'),(17035,'Joao Pedro Olimpio','50507453900080','80'),(17036,'Joao Pedro Siqueira','54265029000081','81'),(17037,'Joao Victor Alvares De Brito','56142525500082','82'),(17038,'Joao Victor Alves Siqueira Rissi','58722719900083','83'),(17039,'Joao Victor Da Cruz Finotti','52889615500084','84'),(17040,'Joao Victor De Morais Lima','56236394400085','85'),(17041,'Joao Victor Ferreira Reis','39673079600086','86'),(17042,'Joao Victor Leite Santos','62415772600087','87'),(17043,'Joao Victor Meireles Natividade','57046039600088','88'),(17044,'Joao Victor Menarbino Da Silva','5209779700089','89'),(17045,'Joao Victor Silva Rosa','38283449500090','90'),(17046,'Joao Vitor Da Costa Melo','53811154900091','91'),(17047,'Joao Vitor Da Silva','65174617600092','92'),(17048,'Joao Vitor Pombeiro Mogi','53239119600093','93'),(17049,'Joao Vitor Ramos Marliere','54474264300094','94'),(17050,'Joao Vitor Santos Muricy','39104860000095','95'),(17051,'Joas Camargo Da Silva','64210518200096','96'),(17052,'Joas Nascimento Da Silva','141645500097','97'),(17053,'Joel Stoppa Dos Santos','55932526500098','98'),(17054,'Joelmir Mariano De Souza','2331655400099','99'),(17055,'Johnny Gabriel Santana De Oliveira','56895706700100','100'),(17056,'Joice Augusta Porto De Lima','39717934000101','101'),(17057,'Joice De Souza Oliveira','54930578600102','102'),(17058,'Jonas Antonio Da Silva Nascimento','59347447800103','103'),(17059,'Jonas Vaci Da Cruz','54312701100104','104'),(17060,'Jonatas Alves Rodrigues','5293095200105','105'),(17061,'Jonatas Fernandes Andrade','38185823600106','106'),(17062,'Jonathan De Oliveira Alves Bezerra','5329895100107','107'),(17063,'Jonathan Pereira Gomes','58317504100108','108'),(17064,'Jonathans Kalel Viegas Santos','50397543600109','109'),(17065,'Jorge Henrique Silva De Sousa','55648841600110','110'),(17066,'Jose Carlos De Campos Neto','39666165800111','111'),(17067,'Jose Fernandes Camargo Da Silva','59589550500112','112'),(17068,'Jose Gabriel Teixeira Reis Da Silva','59435220400113','113'),(17069,'Jose Roberto Galdino Serra','50482176300114','114'),(17070,'Joyce Da Silva Almeida','37581894700115','115'),(17071,'Joyce De Souza Messias','62792651400001','1'),(17072,'Joyce Ribeiro De Oliveira','38896603800002','2'),(17073,'Juan Carlos Ruiz','47217639000003','3'),(17074,'Juan Monteiro Camargo Da Silva','58772937500004','4'),(17075,'Juan Pablo Moreira','57019850100005','5'),(17076,'Juan Pablo Moreno Oliveira','38534568900006','6'),(17077,'Juan Ricardo Borba','39522769000007','7'),(17078,'Juan Rodrigues Cardoso De Jesus','58603312900008','8'),(17079,'Juan Victor Barbosa Duplas','52979537100009','9'),(17080,'Julia Andrade Damasseno','53671828300010','10'),(17081,'Julia Azevedo De Sa Nunes','58737661200011','11'),(17082,'Julia Benedini Calister','52840191900012','12'),(17083,'Julia Blanco Justi','50363501700013','13'),(17084,'Julia Carlos Monteiro','39024080100014','14'),(17085,'Julia Certorio Pereira','56131103100015','15'),(17086,'Julia De Oliveira Cavalcante','55368065100016','16'),(17087,'Julia Dias Cunha','55512811800017','17'),(17088,'Julia Dos Santos Mendes De Lisboa','5394544500018','18'),(17089,'Julia Dos Santos Silva','52217618100019','19'),(17090,'Julia Favarao Florindo','56485541600020','20'),(17091,'Julia Fernandes Wasques','53098356400021','21'),(17092,'Julia Gabriela Murdiga Gondim','50505526000022','22'),(17093,'Julia Hikari Kunihositi Kurahara','50242482500023','23'),(17094,'Julia Lisboa Ramacho De Souza','50181353600024','24'),(17095,'Julia Lopes Almeida Satolo','39570239200025','25'),(17096,'Julia Lucia Silva De Araujo','39375622100026','26'),(17097,'Julia Martins Costa','38569833100027','27'),(17098,'Julia Matos Da Silva','52279574200028','28'),(17099,'Julia Mendes Cruz','38238067800029','29'),(17100,'Julia Mikelly De Almeida','50917150300030','30'),(17101,'Julia Morales Carletti','6300562200031','31'),(17102,'Julia Nalesso','38158952300032','32'),(17103,'Julia Navalon Golia','547222859400033','33'),(17104,'Julia Oliveira Costa De Souza','50400638100034','34'),(17105,'Julia Pascoaleto Araujo','53659440500035','35'),(17106,'Julia Quintino Da Silva','38895025000036','36'),(17107,'Julia Rosa Zanelato','38299392500037','37'),(17108,'Julia Silva Favorin','38569649800038','38'),(17109,'Julia Silva Gomes Faria','59226480400039','39'),(17110,'Julia Stephanie Teixeira Alvim','65631559300040','40'),(17111,'Julia Teixeira Reis Da Silva','59435288500041','41'),(17112,'Julia Vitoria Da Cunha Colucci','58048660600042','42'),(17113,'Julia Zancanaro Previato','54656241300043','43'),(17114,'Juliana Da Silva De Moura','39063132200044','44'),(17115,'Juliana Domingos Dos Santos Rodrigues','57832143900045','45'),(17116,'Juliana Loureco Da Silva','60170943300046','46'),(17117,'Juliana Nancy Rodrigues De Oliveira','53747277000047','47'),(17118,'Juliana Petarnella','38505642400048','48'),(17119,'Juliane Vieira Felix','55595778000049','49'),(17120,'Julio Candido Moura Da Silva','5557854900050','50'),(17121,'Julio Cesar Alves Brandao','53892818900051','51'),(17122,'Julio Cesar Ramos De Oliveira','56100687800052','52'),(17123,'Julio Cesar Silva Ramos','52916181300053','53'),(17124,'Julio Cesar Vieira','57435365300054','54'),(17125,'Julya Cristina Da Silva Calisto','50869699900055','55'),(17126,'Julya Santos Menezes','56790141500056','56'),(17127,'Junior Rodrigo Bento Ferreira','54720961700057','57'),(17128,'Kaian De Souza Matias Silva','55251073700058','58'),(17129,'Kailaine Heloise Goncalves De Souza','56809516900059','59'),(17130,'Kailane Jesus Pereira','59215736200060','60'),(17131,'Kailany Isabela Andrade Quirino','38301079200061','61'),(17132,'Kaique Da Silva Veras','60218783700062','62'),(17133,'Kaique Daniel Da Silva','37665450800063','63'),(17134,'Kaique Ferreira Do Nascimento','43795436500064','64'),(17135,'Kaique Jose Ambrosio','48067778500065','65'),(17136,'Kalolayna Millaqueo Campi Parreira','38962093200066','66'),(17137,'Kamila Aparecida Barbosa Santos','57430645600067','67'),(17138,'Kamila Ayumi Takai Dos Santos','5431251800068','68'),(17139,'Kamila Fernada Sousa Santos','50831943200069','69'),(17140,'Kamilla Carvalho Do Prado','5209794500070','70'),(17141,'Kamilly Messias Andrade','5742260000071','71'),(17142,'Kamily Brandao Pasquino Dos Santos','57089104800072','72'),(17143,'Kananda Alves Santos','39376092300073','73'),(17144,'Karen Da Silva Reis','38123727800074','74'),(17145,'Karen Larissa Oliveira','58876357300075','75'),(17146,'Karen Morais Dos Santos','39831585100076','76'),(17147,'Karen Rubim Soares','52362477300077','77'),(17148,'Karina Abreu Vieira De Azevedo','58020385200001','1'),(17149,'Karina Aparecida Barbosa Santos','57430631600002','2'),(17150,'Karina Silva Benites','38353977800003','3'),(17151,'Karine Aparecida Melendes','55316798400004','4'),(17152,'Karine Barbosa Da Silva','5432880200005','5'),(17153,'Karine De Oliveira Lorencao','48104265900006','6'),(17154,'Karinne Santana Cordeiro','39214543100007','7'),(17155,'Karoline Araujo Amorim','36354986900008','8'),(17156,'Karolline Araujo Da Silva','54039836600009','9'),(17157,'Kassiana Aparecida Da Silva','52401681100010','10'),(17158,'Kathleen Ferreira Teixeira','57878580800011','11'),(17159,'Kathleen Lopes De Araujo Lima','5054478500012','12'),(17160,'Kathleen Silva De Melo','50287497100013','13'),(17161,'Katiussa Eunice De Oliveira','54177867500014','14'),(17162,'Katlen Dos Santos Assumpcao','52098290300015','15'),(17163,'Katly Cristina Messias Freitas','54800937500016','16'),(17164,'Kaua Ribeiro Da Silva','62584674600017','17'),(17165,'Kauan Da Silva Franca','57831754300018','18'),(17166,'Kauan De Andrade Almeida','37962446100019','19'),(17167,'Kauan Rios De Melo','58162433600020','20'),(17168,'Kauan Tokashike De Oliveira','52030507300021','21'),(17169,'Kauani Pereira Soares','3803148100022','22'),(17170,'Kauany Ayanna Silva Simoes','5562360400023','23'),(17171,'Kauany Martins De Abreu','50484293600024','24'),(17172,'Kaue Borges De Oliveira','58317774800025','25'),(17173,'Kaue Da Silva Araujo','54911489000026','26'),(17174,'Kawan Hendrex Xavier Leal','37617756100027','27'),(17175,'Kaylane Azevedo Da Silva','53096256100028','28'),(17176,'Kaylane Marques Da Silva','55692653500029','29'),(17177,'Kayque De Sousa','56947093600030','30'),(17178,'Kayque Nascimento Dos Santos','37692411100031','31'),(17179,'Keila De Almeida Pinto','38959859800032','32'),(17180,'Keissy Evelyn Rodrigues Alves Dias','38728146000033','33'),(17181,'Kelly Araujo Da Silva','57729548200034','34'),(17182,'Kelly Ribeiro Granjeiro','41317395100035','35'),(17183,'Kelson Gomes Da Silva','57781298100036','36'),(17184,'Kelvin Bruno Lopes','3864329600037','37'),(17185,'Kelvin Da Mata Nascimento','39445282300038','38'),(17186,'Kelvin Ferreira Da Silva','52691912700039','39'),(17187,'Kelvin Guimaraes Gomes','54383367700040','40'),(17188,'Kennedy Trindade Pereira Da Silva','50485444600041','41'),(17189,'Kerolaine Penteado De Oliveira','53461970800042','42'),(17190,'Kessia Rayssa Esteves Sacramento','6236133000043','43'),(17191,'Kesy Rosa Franca Dos Santos','38613766300044','44'),(17192,'Kethelyn Farias Lino Da Silva','57246570100045','45'),(17193,'Kethleen Mayumi Nakagawa','5055604600046','46'),(17194,'Kethylen Pereira Rodrigues','39803214200047','47'),(17195,'Kethyllen Naiara Goncalves Da Silva','52164304100048','48'),(17196,'Ketlyn Cristine Marques Miranda','54990639300049','49'),(17197,'Ketlyn Pena De Oliveira Martins','57221528900050','50'),(17198,'Kevin Ryan De Freitas Altea','58151674600051','51'),(17199,'Kevin Silva De Oliveira','5514001600052','52'),(17200,'Khaua Ferreira Gomes Lima','57205814700053','53'),(17201,'Khillyan Camille Brito Da Silva','52165409900054','54'),(17202,'Kimberlly Vitoria Da Silva Lopes','54582674300055','55'),(17203,'Kleber Antonio Correia','42580425200056','56'),(17204,'Krizia Gomes Estrela Rodrigues','47537618300057','57'),(17205,'Lais Da Silva Bruno','57447458400058','58'),(17206,'Lais Fernandes Silva','50747347400059','59'),(17207,'Lais Marques Vilela Messias','54871880500060','60'),(17208,'Lais Soares Veridiano','56544178400061','61'),(17209,'Lana Damaceno Santos','54583346200062','62'),(17210,'Lara Beatriz Soares Sipriano','54663566000063','63'),(17211,'Lara Bessan Teruel','52006554200064','64'),(17212,'Lara Hellen Freitas Cruz','52345591400065','65'),(17213,'Lara Liz Faoro','50829201300066','66'),(17214,'Lara Preccaro Galdino','50545404700067','67'),(17215,'Larianne De Oliveiraanjos','56662108900068','68'),(17216,'Larielle Santos Vieira De Oliveira','544449528700069','69'),(17217,'Larissa Alves Dos Santos','62605649400070','70'),(17218,'Larissa Beatriz Costa Souza','38569330800071','71'),(17219,'Larissa Bezerra Sena','50709929100072','72'),(17220,'Larissa Calegari Peixoto','53669172100073','73'),(17221,'Larissa Caroline Silva','55071835700074','74'),(17222,'Larissa Conelheiro Do Prado','53945898300075','75'),(17223,'Larissa De Oliveira Santos','50747553700076','76'),(17224,'Larissa De Souza Pereira','54072442700077','77'),(17225,'Larissa Dos Santos Rodrigues','38034250900001','1'),(17226,'Larissa Gomes Gaspar','50485215200002','2'),(17227,'Larissa Guedes Cruz','57550090600003','3'),(17228,'Larissa Lopes De Souza','58913251900004','4'),(17229,'Larissa Nascimento Costa Da Silva','55949643600005','5'),(17230,'Larissa Oliveira','39663125300006','6'),(17231,'Larissa Oliveira Da Silva','56618868500007','7'),(17232,'Larissa Oliveira Ramos','5314137200008','8'),(17233,'Larissa Paulino Da Silva','3695605300009','9'),(17234,'Larissa Quirino Da Silva','39674144700010','10'),(17235,'Larissa Rodrigues Da Silva','47525526400011','11'),(17236,'Larissa Santos Campoi','56627334200012','12'),(17237,'Larissa Santos Da Silva','57723586200013','13'),(17238,'Larissa Santos Souza','38534265200014','14'),(17239,'Larissa Silva Campos','58560850700015','15'),(17240,'Larissa Silva Santos','50710698200016','16'),(17241,'Larissa Siqueira Tavares Alves','63724265800017','17'),(17242,'Larissa Vitoria De Souza Barros','587079937500018','18'),(17243,'Laryssa De Sa Correa Coelho','62581187200019','19'),(17244,'Laryssa Mattias Ferreira','54528222600020','20'),(17245,'Latifa Rodrigues Mendonca','50291717900021','21'),(17246,'Laura Araujo De Luna','39716561400022','22'),(17247,'Laura Beatriz De Alexandria Santos','52861591900023','23'),(17248,'Laura Carozza Favero','56765982300024','24'),(17249,'Laura Christine Santos Souto','54877419500025','25'),(17250,'Laura Cruz De Oliveira','56268817100026','26'),(17251,'Laura De Souza Martins','50545179700027','27'),(17252,'Laura Goncalves Rodrigues','56092307700028','28'),(17253,'Laura Kato De Souza','52783843300029','29'),(17254,'Laura Ramos Macedo','53946632300030','30'),(17255,'Laura Souza De Carvalho','3892281400031','31'),(17256,'Lauren Gabrielli De Souza','57697182000032','32'),(17257,'Laurielle De Souza Silva','57077282500033','33'),(17258,'Lauro Ferreira Dos Santos Jumior','42037219200034','34'),(17259,'Lavinia Cardoso Soares','39086955700035','35'),(17260,'Layane Freire Braz','50780074600036','36'),(17261,'Laysa Beatriz Nunes Guilherme','39966754400037','37'),(17262,'Laysa Carvalho Queiroz','55105990400038','38'),(17263,'Laysa Lorena Silva De Andrade','55173205200039','39'),(17264,'Laysa Monalise Barros Magalhaes','5778544600040','40'),(17265,'Leandro De Lima Moura','47390834700041','41'),(17266,'Leandro Dos Santos Severino','42847185700042','42'),(17267,'Leandro Lima De Jesus','52001825400043','43'),(17268,'Leandro Luiz Costa Andrade','54585386200044','44'),(17269,'Lediane Alves Xavier','40463584200045','45'),(17270,'Leia Silva De Oliveira','62535135600046','46'),(17271,'Leine Nikely Oliveira De Carvalho','54801110200047','47'),(17272,'Leomardo Miranda Fernandes','34636151500048','48'),(17273,'Leonardo Amaral Vieira','37520862800049','49'),(17274,'Leonardo Dias Lima','50619433400050','50'),(17275,'Leonardo Ferreira','57932408400051','51'),(17276,'Leonardo Francisco Menezes','56569996900052','52'),(17277,'Leonardo Hiroshi Tamashiro','5368693900053','53'),(17278,'Leonardo Morgon Da Silva','60529229200054','54'),(17279,'Leonardo Nogueira Tomaz','39332055800055','55'),(17280,'Leonardo Rodrigues Bispo','3796034100056','56'),(17281,'Leonardo Rodrigues Silva','50242869700057','57'),(17282,'Leonardo Tadeu Lamazales','53458316700058','58'),(17283,'Leonardo Vinicios Da Silva','54495610200059','59'),(17284,'Lethicia Monique Gutierrez','50029158500060','60'),(17285,'Leticia Alonso Broedel','56392551600061','61'),(17286,'Leticia Alves Aniceto De Melo','38124504400062','62'),(17287,'Leticia Corvalan Do Carmo','53143933100063','63'),(17288,'Leticia Costa Pereira','55475563400064','64'),(17289,'Leticia Cunha Romero','52232992500065','65'),(17290,'Leticia Da Silva Correia','52860631100066','66'),(17291,'Leticia De Lima Neves','38883776700067','67'),(17292,'Leticia Ferreira Mendonca','52274376600068','68'),(17293,'Leticia Gomes Biserra','5499016700069','69'),(17294,'Leticia Hatsue Imai','5590873800070','70'),(17295,'Leticia Lima De Oliveira','55043082900071','71'),(17296,'Leticia Mariana Pereira','43953474400072','72'),(17297,'Leticia Molina De Sousa','58567220900073','73'),(17298,'Leticia Nascimento Matos','39783727600074','74'),(17299,'Leticia Nerinda Santos De Jesus','50401210100075','75'),(17300,'Leticia Nunes Macedo','59217466900076','76'),(17301,'Leticia Pereira Nobrega Galvao','53707024200077','77'),(17302,'Leticia Pereira Rojas','38883578300078','78'),(17303,'Leticia Rodrigues Ribeiro','55725788800079','79'),(17304,'Leticia Rodrigues Severino','39521139600080','80'),(17305,'Leticia Roque Lima Oliveira','5596863300081','81'),(17306,'Leticia Santiago De Araujo','50773345900082','82'),(17307,'Leticia Santos Martins','5600340900083','83'),(17308,'Leticia Siqueira Silva','39007547400084','84'),(17309,'Leticia Stevani Dos Santos','39812432200085','85'),(17310,'Leticia Teraoka Neves','5955800400086','86'),(17311,'Leticia Vespero Camargo','55421377100087','87'),(17312,'Leticia Vitoria De Jesus Souza','39997662000088','88'),(17313,'Lidia Alves Nascimento','48710191100089','89'),(17314,'Lilian Coutinho Goncalves','5035082400090','90'),(17315,'Lisis Marcelly Rodrigues Dias','34409671200091','91'),(17316,'Livia Benicio De Assis','54382324600092','92'),(17317,'Livia Borges Petreca','39945686700093','93'),(17318,'Livia Da Silva','57210884900094','94'),(17319,'Livia De Oliveira Gomes','50423057800095','95'),(17320,'Livia Dutra De Oliveira','58264761700096','96'),(17321,'Livia Hayuri Maruyama','60404073800097','97'),(17322,'Livia Loiola Leal','5240538700098','98'),(17323,'Livia Lourenco Zanardi','39212387300099','99'),(17324,'Livia Oliveira Fernandes','60963248600100','100'),(17325,'Livia Paz Macena Silva','57421242500101','101'),(17326,'Livia Pedrosa Mesquita','38434185800102','102'),(17327,'Livia Rodrigues Do Nascimento Souza','53116952200103','103'),(17328,'Livia Sales Almeida','39035922100104','104'),(17329,'Livia Soares Da Mata','39965435500105','105'),(17330,'Lizandra Silva Justino','39031868100106','106'),(17331,'Lohan Amorim De Oliveira','37963852600107','107'),(17332,'Lorena De Oliveira Sandoli','54327912100108','108'),(17333,'Lorena Medeiros Rodrigues Silva','58600820200109','109'),(17334,'Lorenza Cristina Da Conceicao Ramos','38705656700110','110'),(17335,'Lorenza Martin Cabrera','48011706800111','111'),(17336,'Lorraine Victoria Guimaraes Da Silva','50915348300112','112'),(17337,'Lorran Dos Anjos Flavio','38137419100113','113'),(17338,'Lorrana Ester De Sa Pereira','53302048700114','114'),(17339,'Lorruama Ferreira Gomes Dos Santos','57478032400115','115'),(17340,'Luan Alves De Jesus','53229025000001','1'),(17341,'Luan Augusto Marcelino Selan','53689188600002','2'),(17342,'Luan Da Silva Goncalves','37495556600003','3'),(17343,'Luan Orlando Soares Correia Da Silva','55148233300004','4'),(17344,'Luan Rocha Dos Santos','52082931100005','5'),(17345,'Luan Victor Sinezio Da Silva','52168849800006','6'),(17346,'Luan Vieira De Araujo','56688651000007','7'),(17347,'Luan Vinicus Antonangelo Veiga','38651732000008','8'),(17348,'Luana Araujo De Alcantara','52465351300009','9'),(17349,'Luana Carneiro Gobbo','52139640200010','10'),(17350,'Luana Da Silva Estanislau','56831942400011','11'),(17351,'Luana De Farias Santos','39830920600012','12'),(17352,'Luana De Souza Carmo','39164979600013','13'),(17353,'Luana Felix Vieira','5536909800014','14'),(17354,'Luana Ferreira De Oliveira Sousa','57040405800015','15'),(17355,'Luana Gabrielli Dos Santo Goncalves','55107061400016','16'),(17356,'Luana Goncalves De Melo','5286079000017','17'),(17357,'Luana Matos Aguiar','38625933100018','18'),(17358,'Luana Mello Teixeira Simao','54870673600019','19'),(17359,'Luana Natalye Rigueira','53893030500020','20'),(17360,'Luana Oliveira Da Silva','54266018000021','21'),(17361,'Luana Rocha Valete','56970971400022','22'),(17362,'Luanna Victoria Pereira Da Silva','38496301800023','23'),(17363,'Luara Aparecida Sousa','42786220600024','24'),(17364,'Luara Ramos De Souza','55042758200025','25'),(17365,'Lucas Alessandro Ferreira','53461875300026','26'),(17366,'Lucas Alexandre Lemes Dos Santos','58432514900027','27'),(17367,'Lucas Almeida Melo De Gouveia','54538818100028','28'),(17368,'Lucas Alves Braz','37184097100029','29'),(17369,'Lucas Alves Dantas Duarte','50745951900030','30'),(17370,'Lucas Boffi De Lima','55314463700031','31'),(17371,'Lucas Castro De Souza','39674269500032','32'),(17372,'Lucas Cherodia Consolini','55790960000033','33'),(17373,'Lucas Costa Maia Vieira','57781149600034','34'),(17374,'Lucas Costa Palagani','55455936500035','35'),(17375,'Lucas Da Silva Carvalho','57288787500036','36'),(17376,'Lucas Da Silva Marques','3893948300037','37'),(17377,'Lucas Daniel Rodrigues','38126247900038','38'),(17378,'Lucas De Lima Da Silva','53589957900039','39'),(17379,'Lucas De Mattos Verdolini','54554121900040','40'),(17380,'Lucas De Melo Magalhaes','37981532100041','41'),(17381,'Lucas De Oliveira','54974358300042','42'),(17382,'Lucas De Paiva Mendonca Silva','54327999600043','43'),(17383,'Lucas De Sousa Bezerra','54555086500044','44'),(17384,'Lucas De Souza Machado','60075914300045','45'),(17385,'Lucas De Souza Mazaia','55821852000046','46'),(17386,'Lucas Dos Santos Beck Archanjo','54072148700047','47'),(17387,'Lucas Dos Santos Moreno Da Silva','52293972700048','48'),(17388,'Lucas Duarte De Sousa','38362045400049','49'),(17389,'Lucas Felipe Nunes Da Silva','56605439500050','50'),(17390,'Lucas Fernandes Marana','54020912000051','51'),(17391,'Lucas Fernando De Lima','57491008600052','52'),(17392,'Lucas Ferreira Gomes','59418516600053','53'),(17393,'Lucas Ferreira Santos De Godoy Bueno','53142707900054','54'),(17394,'Lucas Giovanetti Fedel Ramos','39938813800055','55'),(17395,'Lucas Gomes De Freitas','52140649300056','56'),(17396,'Lucas Henrique Alves Silva','50504421300057','57'),(17397,'Lucas Henrique Costa Simplicio','58433301800058','58'),(17398,'Lucas Henrique De Oliveira','53394169600059','59'),(17399,'Lucas Henrique Sabino Carneiro','57613836800060','60'),(17400,'Lucas Henrique Santos Da Costa','58355015000061','61'),(17401,'Lucas Lacerda Amorim','39838441100062','62'),(17402,'Lucas Lima Ferreira','65896825700063','63'),(17403,'Lucas Martins Cardoso','52083594300064','64'),(17404,'Lucas Mendonca Da Silva Junior','59484983400065','65'),(17405,'Lucas Miguel Parra Belmiro','54072820200066','66'),(17406,'Lucas Moreira Maranhao Da Silva','55848780400067','67'),(17407,'Lucas Nascimento Da Silva','52653675500068','68'),(17408,'Lucas Nascimento Rodrigues De Lima','50469927100069','69'),(17409,'Lucas Nogueira Prospero','56998862700070','70'),(17410,'Lucas Pereira Brito','40755840800071','71'),(17411,'Lucas Pinto Barbosa','47253069000072','72'),(17412,'Lucas Ramos Silva De Carvalho','37815973200073','73'),(17413,'Lucas Ribeiro Franco','52717663100074','74'),(17414,'Lucas Roberto Dos Santos','50547295800075','75'),(17415,'Lucas Ryan Da Silva Nascimento','53461757800076','76'),(17416,'Lucas Santos Santana','56787552000077','77'),(17417,'Lucas Sevieri Chagas','54871367400078','78'),(17418,'Lucas Silva Brito','38949025800079','79'),(17419,'Lucas Silva De Alencar','54932654600080','80'),(17420,'Lucas Silva Dos Passos','47326312700081','81'),(17421,'Lucas Sousa Nascimento','53240325300082','82'),(17422,'Lucas Souza Alegrette De Almeida','53593366600083','83'),(17423,'Lucas Souza Bicalho','52258404400084','84'),(17424,'Lucas Tavares Da Silva','48951622100085','85'),(17425,'Lucas Tude Martins Pereira','37923643600086','86'),(17426,'Luccas Henrique Figueira Cortes','56681896600087','87'),(17427,'Luciana Costa Barboza','4062626900088','88'),(17428,'Luciano Oliveira Do Nascimento','47577739600089','89'),(17429,'Luciano Oliveira Evangelista','55637994900090','90'),(17430,'Luciano Prado Neves','56179423600091','91'),(17431,'Luciene Izabel Dos Santos De Azevedo','35044761500092','92'),(17432,'Luciene Souza Elias','39522127400093','93'),(17433,'Lucilene Ferreira De Lima','37630575700094','94'),(17434,'Ludmila Alves Machini','58975935800095','95'),(17435,'Ludmila De Souza Pereira','52874760500096','96'),(17436,'Ludo Alexander Franca','47576277000097','97'),(17437,'Luidy Gregorio Ferraz Fernandes','56885016600098','98'),(17438,'Luigi Mendes Soares','38614513100001','1'),(17439,'Luigi Vedoveli Nicolau','54328643500002','2'),(17440,'Luis Antonio De Souza Silva','58219390400003','3'),(17441,'Luis Felipe Bakanichas Borges','39613183900004','4'),(17442,'Luis Felipe Virgulino Da Silva','39190495400005','5'),(17443,'Luis Gustavo Ribeiro Ferreira','52691424500006','6'),(17444,'Luis Henrique Ribeiro Borri','38799086000007','7'),(17445,'Luis Henrique Zoldan Luperini','53321149900008','8'),(17446,'Luis Junior Rodrigues Bezerra','55575928300009','9'),(17447,'Luisa Cristina Jesus Da Silva','39195004600010','10'),(17448,'Luiz Carlos Rodrigues Branco','39435230000011','11'),(17449,'Luiz Diego Dos Santos Volpini','5405231500012','12'),(17450,'Luiz Fernando Gomes Da Silva','45749399900013','13'),(17451,'Luiz Gustavo De Castro Ramos','5914043100014','14'),(17452,'Luiz Gustavo Gomes Farias','52343725000015','15'),(17453,'Luiz Henrique Leal Lacava','56435989000016','16'),(17454,'Luiz Henrique Lira Cardoso','39374267200017','17'),(17455,'Luiz Henrique Mendes Cavalheiro','62799838000018','18'),(17456,'Luiz Henrique Ribeiro Daniel','39004941400019','19'),(17457,'Luiz Henrique Velo','53331909200020','20'),(17458,'Luiz Marcelino','19169710200021','21'),(17459,'Luiz Miguel Rocha Seixeiro','39871332700022','22'),(17460,'Luiza Akemi Maruyama','3752092700023','23'),(17461,'Luiza Beatriz Alcantara Inocencio','55647633500024','24'),(17462,'Luiza Lacerda Gonsalez','5548912700025','25'),(17463,'Luiza Lima Alves','38721395800026','26'),(17464,'Luiza Mayare Reis Soares','52014528800027','27'),(17465,'Luiza Resende De Campos Battaglini Guerra','56133159500028','28'),(17466,'Lukas Bueno De Barros','59550148500029','29'),(17467,'Lukas Vinicius De Souza Macedo','53140956900030','30'),(17468,'Luma Alves De Souza','52314708900031','31'),(17469,'Luma Venancio De Assis','50819716800032','32'),(17470,'Lyandra Vitoria Chicon De Sousa','55907201600033','33'),(17471,'Lygia Antunes De Sousa','56402231700034','34'),(17472,'Magna Cilene Silva Pereira','24354306200035','35'),(17473,'Maiara Almeida Da Silva','37128240800036','36'),(17474,'Maicon Bruno Lopes Dias','57396397600037','37'),(17475,'Maira Mesquita Da Silva','39718577700038','38'),(17476,'Maisa Alves Da Silva','64051202100039','39'),(17477,'Maisa Do Nascimento Miranda','59283861400040','40'),(17478,'Manoel Bileu Da Nobrega Neto','38300354400041','41'),(17479,'Mara Aparecida Fukuda','9949836400042','42'),(17480,'Marcela Fuzetti Venturini','58165377400043','43'),(17481,'Marcela Tonetto Figueiredo','3861342500044','44'),(17482,'Marcella Fonseca De Souza','39782839100045','45'),(17483,'Marcella Goncalves Zerbinatti','54424773500046','46'),(17484,'Marcelly Francisco Silva','39830653900047','47'),(17485,'Marcelo Augusto Neves Nascimento','53461726800048','48'),(17486,'Marcelo Bueno','22273806600049','49'),(17487,'Marcelo De Souza Lenhari','53672069100050','50'),(17488,'Marcelo Ferreira De Oliveira','39363738400051','51'),(17489,'Marcelo Henrique Oliveira Forte','57878603500052','52'),(17490,'Marcio De Oliveira','25486777700053','53'),(17491,'Marco Antonio Campos Carvalho','56523010400054','54'),(17492,'Marco Antonio Da Silva Santos','57036573900055','55'),(17493,'Marco Antonio Dusi Nelli','38836257100056','56'),(17494,'Marco Aurelio Dias Torres Machado','54073433000057','57'),(17495,'Marco Henrique Claro Barreto','5845809900058','58'),(17496,'Marcos Borges Smeets','5208495300059','59'),(17497,'Marcos Felipe Dos Santos','3966564700060','60'),(17498,'Marcos Rafael Martins Salomao','38332374500061','61'),(17499,'Marcos Vinicius De Sousa Lopes Silva','53893283100062','62'),(17500,'Marcos Vinicius Jacinto Souza','54845410300063','63'),(17501,'Marcos Vinicius Oliveira Souza','23589584700064','64'),(17502,'Marcos Vinicius Pereira','53022010600065','65'),(17503,'Marcos Vinicius Santos Pinto','383636066600066','66'),(17504,'Marcus Victor Barbosa Dos Santos','60911844400067','67'),(17505,'Maria Brenda Batista Nogueira','48340655700068','68'),(17506,'Maria Carolina Navarreti Da Silva','55368728100069','69'),(17507,'Maria Clara Pereira Dos Santos','55654560600070','70'),(17508,'Maria Daniele Santos Da Costa','52201980800071','71'),(17509,'Maria De Fatima De Lira Silva','55590867700072','72'),(17510,'Maria Eduarda Boaro Ferraz','60441117000073','73'),(17511,'Maria Eduarda Correa','3933369200074','74'),(17512,'Maria Eduarda Da Silva De Miranda','3861381400075','75'),(17513,'Maria Eduarda Dos Santos','39030434700076','76'),(17514,'Maria Eduarda Duarte Francao','55374600500077','77'),(17515,'Maria Eduarda Estevam Oliveira','56857563500078','78'),(17516,'Maria Eduarda Ferreira Ramos','50779715200079','79'),(17517,'Maria Eduarda Lins Mendes','3943362900080','80'),(17518,'Maria Eduarda Martins Carvalho','388003116900081','81'),(17519,'Maria Eduarda Moraes Dantas','50021261200082','82'),(17520,'Maria Eduarda Oliveira Forte','57878567500083','83'),(17521,'Maria Eduarda Parreira','52189062700084','84'),(17522,'Maria Eduarda Racpchan Martins','57861474100001','1'),(17523,'Maria Eduarda Rodrigues Cezar','57251387200002','2'),(17524,'Maria Eduardastahl De Almeida','58906125200003','3'),(17525,'Maria Francieli Souza Da Silva','52838029000004','4'),(17526,'Maria Gabriela Lemos Oliveira','55791501600005','5'),(17527,'Maria Gabrielle Silva','59151821100006','6'),(17528,'Maria Gabrielli Maciel Goncalo','54104514300007','7'),(17529,'Maria Isabella Sotto De Souza','38613648800008','8'),(17530,'Maria Julia Paulino Da Silva','54956771900009','9'),(17531,'Maria Luiza Couto Santana','55525291700010','10'),(17532,'Maria Luiza De Freitas Moraes','39006917600011','11'),(17533,'Maria Patrocinia Cabral Lopes','7708466400012','12'),(17534,'Maria Paula Dos Angelos Borges','56628591500013','13'),(17535,'Maria Paula Rodrigues De Lemos Silva','50040189500014','14'),(17536,'Maria Pereira Pinto','5367226400015','15'),(17537,'Maria Regina Zipf Martins','50469037100016','16'),(17538,'Maria Rita Gomes De Lima','39031087600017','17'),(17539,'Maria Sabrina Bezerra Lima','56982426600018','18'),(17540,'Maria Shayanne Martins De Abreu','38021993100019','19'),(17541,'Maria Susyane Do Nascimento','200885684900020','20'),(17542,'Maria Taiane De Souza Santos','2009047323400021','21'),(17543,'Maria Vitoria Xavier Ruffini','60135290700022','22'),(17544,'Marian Capucho Pereira','3888587600023','23'),(17545,'Marian Chaves Cavalcante','38961284400024','24'),(17546,'Mariana Aparecida Zacharias Pereira','55913523300025','25'),(17547,'Mariana Batista Fernandes','3886080700026','26'),(17548,'Mariana Bizerra Moreira','59422968600027','27'),(17549,'Mariana Blanco De Menezes','29510038200028','28'),(17550,'Mariana Cristina Afonso Ferreira','38534236600029','29'),(17551,'Mariana De Jesus Siqueira Leite','56176396300030','30'),(17552,'Mariana Fontes Alves','50638243600031','31'),(17553,'Mariana Gomes','54325445800032','32'),(17554,'Mariana Gomes Dos Santos','4998177600033','33'),(17555,'Mariana Goncalves Da Costa','38788938500034','34'),(17556,'Mariana Ketlyn De Abreu Boos','54932970500035','35'),(17557,'Mariana Mardegan Guandalin De Assis','56587873600036','36'),(17558,'Mariana Martins De Araujo','43547225200037','37'),(17559,'Mariana Matos Soares','39568577100038','38'),(17560,'Mariana Mel Strapaissi Mendes','57579269300039','39'),(17561,'Mariana Missassi','53240274100040','40'),(17562,'Mariana Paula Silva Dominicheli','38534038200041','41'),(17563,'Mariana Proenca D\'Amaral','53787944400042','42'),(17564,'Mariana Rodrigues Chaves Da Silva','3828334800043','43'),(17565,'Mariana Romeu Torres','53535810600044','44'),(17566,'Mariana Sa Novaes','38798898100045','45'),(17567,'Mariana Shade Ribeiro Da Silva','57846681800046','46'),(17568,'Mariana Soares De Brito','38042027200047','47'),(17569,'Mariana Vale Paixao','52890210600048','48'),(17570,'Mariana Vidal Lima Dos Santos','56388529400049','49'),(17571,'Mariana Ximenes De Souza','38566987200050','50'),(17572,'Mariane Isabelle De Souza Lenhari','53672077000051','51'),(17573,'Marianne Oliveira Silva','54650332900052','52'),(17574,'Marilia Oliveira Prado','64933270200053','53'),(17575,'Marina Maria De Oliveira Zanelato','7612488500054','54'),(17576,'Marina Silva Dos Santos','57030208000055','55'),(17577,'Mario Eugenio Silva','38079041500056','56'),(17578,'Marya Eduarda Da Cunha Soares','5200402000057','57'),(17579,'Mateus Alexandre Da Silva','38613580000058','58'),(17580,'Mateus De Almeida','57095157400059','59'),(17581,'Mateus De Lima Florencio','52139530600060','60'),(17582,'Mateus Domentino','56757771500061','61'),(17583,'Mateus Jose De Sousa Queiroz','57017187800062','62'),(17584,'Mateus Santos Alves','57061206800063','63'),(17585,'Mateus Santos Araujo','52273034600064','64'),(17586,'Mateus Souza Pereire De Oliveira','56887637400065','65'),(17587,'Matheus Araujo De Abreu','50990590000066','66'),(17588,'Matheus Bunholi Soares','55140086900067','67'),(17589,'Matheus Da Cruz Oliveira','55869817700068','68'),(17590,'Matheus Da Silva Almeida','59366166700069','69'),(17591,'Matheus De Almeida','60674009000070','70'),(17592,'Matheus Dias Curiqueo','38157254700071','71'),(17593,'Matheus Domingos De Lima','60834645700072','72'),(17594,'Matheus Dos Santos Santana','50556341100073','73'),(17595,'Matheus Dos Santos Souza','57792322500074','74'),(17596,'Matheus Duarte Costa','50330628900075','75'),(17597,'Matheus Felix De Macedo','50709686100076','76'),(17598,'Matheus Gazzola Martines','5018590700077','77'),(17599,'Matheus Gomes Rodrigues','59979567000078','78'),(17600,'Matheus Goncalves Reis Silva','56390458600079','79'),(17601,'Matheus Heidemann','39332748600080','80'),(17602,'Matheus Henrique Alves','39213961300081','81'),(17603,'Matheus Henrique Celestino','59247650900082','82'),(17604,'Matheus Kennedy De Souza Vieira Dos Santos','59520879400083','83'),(17605,'Matheus Klisman Brito Ferreira','38615029100084','84'),(17606,'Matheus Macedo Dos Santos','39680460300085','85'),(17607,'Matheus Marini Dos Reis','38959549400086','86'),(17608,'Matheus Marques Da Silva','39613921800001','1'),(17609,'Matheus Melo Soares','53241199700002','2'),(17610,'Matheus Mendes Oliveira','38362862300003','3'),(17611,'Matheus Moreira Da Cruz','39829509800004','4'),(17612,'Matheus Nicolas Da Silva Benjamim Lima','39838401000005','5'),(17613,'Matheus Nues Da Silva Maselli','58896981300006','6'),(17614,'Matheus Oliviera Cordeiro','54095460300007','7'),(17615,'Matheus Pedrosa Barbosa','52279471300008','8'),(17616,'Matheus Pereira De Souza','55688545400009','9'),(17617,'Matheus Ramos Da Silva','5985671500010','10'),(17618,'Matheus Rocha Da Silva','5627037200011','11'),(17619,'Matheus Rodrigues Dos Santos','5595663000012','12'),(17620,'Matheus Rodrigues Valdes','39672965400013','13'),(17621,'Matheus Silva','38467282600014','14'),(17622,'Matheus Soares Foloni','57439613500015','15'),(17623,'Matheus Veiga Romera','52952492200016','16'),(17624,'Mauricio Eurico Ramiro Da Silva','4876628800017','17'),(17625,'Mauricio Ferreira Da Silva','34788354000018','18'),(17626,'Mauricio Ludovico','54006151700019','19'),(17627,'Maxwell Gomes De Almeida','29222206300020','20'),(17628,'Mayara Chaves Cavalcante','38961285600021','21'),(17629,'Mayara Cristina Coelho','5054720300022','22'),(17630,'Mayara Farias','44255612300023','23'),(17631,'Mayara Monize De Macedo Sepedro','365952700024','24'),(17632,'Mayara Mota De Souza','38711379400025','25'),(17633,'Maykon Henrique Da Silva Dias','53240347200026','26'),(17634,'Maylon Brenno Souza De Oliveira','38865197000027','27'),(17635,'Maysa Limeira Da Silva','986717500028','28'),(17636,'Maysa Monteiro Xavier','54527458800029','29'),(17637,'Melanie Ileke Rodrigues','57786191800030','30'),(17638,'Melissa De Almeida Leite','3823760200031','31'),(17639,'Melissa Feiler Carvalho','59715525200032','32'),(17640,'Melissa Hidemi Morikawa','52717346000033','33'),(17641,'Melissa Liz Ribeiro Dos Santos','39159920300034','34'),(17642,'Melissa Lopes Dos Santos','39190485100035','35'),(17643,'Melissa Vitoria Bueno Nunes','3793416100036','36'),(17644,'Micael Santana Da Silva','38689380900037','37'),(17645,'Micaele De Morais Silva','39166151600038','38'),(17646,'Michael Braz Xavier Junior','53672672000039','39'),(17647,'Michael Fabio Da Silva Mazza','4993646200040','40'),(17648,'Michele Carvalho Da Silva','53239064700041','41'),(17649,'Michele Dionisio Selotto','57760345000042','42'),(17650,'Michelle Dos Anjos Silva','50245315100043','43'),(17651,'Michelle Sena De Oliveira','39781895600044','44'),(17652,'Michelli Fritz Busch','283031369900045','45'),(17653,'Michelly Venancio Da Silva','58411778400046','46'),(17654,'Midia Vitoria Da Silva Lopes','62757356300047','47'),(17655,'Midiane Dos Santos Victorino','39063109700048','48'),(17656,'Miguel Almeida Santos','38895654900049','49'),(17657,'Miguel Dos Santos Marcelino','52867084000050','50'),(17658,'Miguel Gustavo De Oliveira Santos Bento','52526668900051','51'),(17659,'Mikael Eufrasio Schunks','56485747600052','52'),(17660,'Mikely Dos Santos Rodrigues','53410128800053','53'),(17661,'Milena Ariani Nunes Felix','38883641600054','54'),(17662,'Milena Da Silva','5831290200055','55'),(17663,'Milena Millare Odan Da Silva','59441902500056','56'),(17664,'Milena Montanelli Dos Santos','38397101900057','57'),(17665,'Milena Santos De Santana','52362930800058','58'),(17666,'Milena Vitoria Quinelatto Rando','50135029900059','59'),(17667,'Milene Santos De Souza','50823249100060','60'),(17668,'Mileny Vitoria Candido Leme','54266062300061','61'),(17669,'Millena Galvani Arano Da Costa','58918794600062','62'),(17670,'Millena Marinho Moreira','56410330500063','63'),(17671,'Millene Gomes Da Silva','54021151500064','64'),(17672,'Milleny Coelho Vieira Dos Santos','59597886100065','65'),(17673,'Milton Severino Dias Junior','22215010500066','66'),(17674,'Mirella Guimaraes Mesquita','57173984200067','67'),(17675,'Miriam Da Graca De Sousa Oliveira','50828656600068','68'),(17676,'Mirian Pereira Mendes Da Silva','56021412100069','69'),(17677,'Mirian Siqueira De Oliveira','50918550200070','70'),(17678,'Mirilo Costa Petronilho','38884591000071','71'),(17679,'Misael Messias Rigo Pereira Nicolau','63390718200072','72'),(17680,'Moises De Oliveira De Franca','52163215800073','73'),(17681,'Monalisa Evangelista Dos Santos','38298861900074','74'),(17682,'Monaliza Alves Lopes','28498831500075','75'),(17683,'Monissa Cruz','50933683800076','76'),(17684,'Monize Porfiro Da Silva','55744897900077','77'),(17685,'Moraci Rodrigues De Santana','39432503500078','78'),(17686,'Murillo Roberto De Almeida','38379833400079','79'),(17687,'Murilo Augustinelli Justo De Almeida','520083629700080','80'),(17688,'Murilo Bete Prata','39780800800081','81'),(17689,'Murilo De Azevedo Ribeiro','52731054200082','82'),(17690,'Murilo Dos Santos Barbosa','58646402500083','83'),(17691,'Murilo Faria Dantas','52915756100084','84'),(17692,'Murilo Flausino Ferreira','56099881800085','85'),(17693,'Murilo Moreno Vidotto','54800666000086','86'),(17694,'Muryllo Max Oliveira Da Silva','52593044900087','87'),(17695,'Mylena Vieira De Moura','50638270900088','88'),(17696,'Nadja Thamyres Carvalho Dias De Camargo','39030267300089','89'),(17697,'Naiara Torres Oliveira','38951906600090','90'),(17698,'Naira Leonilda Da Silva','58549929900091','91'),(17699,'Naira Rodrigues','52608416900092','92'),(17700,'Nalanda Carvalho Cruz','39903885100093','93'),(17701,'Nandielle Suellen Da Silva','5271763100094','94'),(17702,'Natali Naiane Da Silva Cabral','45573621200095','95'),(17703,'Natalia Almeida De Britto','57584799200096','96'),(17704,'Natalia Aparecida Iglesias','55902717500097','97'),(17705,'Natalia Augusto Geraldo','39569345700098','98'),(17706,'Natalia Bertaco Cruz','38497328000099','99'),(17707,'Natalia Fernandes De Souza','55368313500100','100'),(17708,'Natalia Ferreira Dos Santos','38301697600001','1'),(17709,'Natalia Gomes Fiuza','58783910700002','2'),(17710,'Natalia Nayumi Souza Okayama','52529992000003','3'),(17711,'Natalia Oliveira Rosa','52363740800004','4'),(17712,'Natalie Lemes Morbeck','53591711900005','5'),(17713,'Natalie Silva Nascimento','58967568000006','6'),(17714,'Nathalia Cristina Coelho','50547287900007','7'),(17715,'Nathalia Da Silva Moreira','39030037800008','8'),(17716,'Nathalia Fernanda Da Silva','56756415000009','9'),(17717,'Nathalia Leonardo Barreto','37476362800010','10'),(17718,'Nathalia Martins De Franca','5402119300011','11'),(17719,'Nathalia Munhoz Silva','55172195900012','12'),(17720,'Nathalia Nascimento Da Silva','52456753000013','13'),(17721,'Nathalia Raquel Muniz Honorio','56700025400014','14'),(17722,'Nathalia Serafim Silva','38960160300015','15'),(17723,'Nathalia Silva Franca','5015994000016','16'),(17724,'Nathalia Vieira Santos','50544628500017','17'),(17725,'Nathalia Vilela Borges','37766096600018','18'),(17726,'Nathaly Terra Mendes','3966616400019','19'),(17727,'Nathan Ferreira Tiburcio','56250702400020','20'),(17728,'Nathan Goncalves Moreira Cancella','50289147600021','21'),(17729,'Nathan Pengue De Melo','58051530800022','22'),(17730,'Nauan Alves De Almeida','50400295800023','23'),(17731,'Nayama Souza Baldi','47384791700024','24'),(17732,'Nayan Cleber Junior Mont Alverne','56138915900025','25'),(17733,'Nayara Ferreira Faria','59661906600026','26'),(17734,'Nayara Jaqueline Ferreira Dos Santos','52978613800027','27'),(17735,'Nayara Zambianco Rafaldini','38361621900028','28'),(17736,'Naylla Gomes De Oliveira','59174784400029','29'),(17737,'Nelson De Siqueira Guido Filho','3792595900030','30'),(17738,'Nickolas Dias Saldanha','540229686400031','31'),(17739,'Nicolas Antonio Amorim Arruda','5953360500032','32'),(17740,'Nicolas Barbosa Carvalho','38332867600033','33'),(17741,'Nicolas Bernardino Costa','52821148100034','34'),(17742,'Nicolas Cardozo Do Nascimento','58061104800035','35'),(17743,'Nicolas Carminato Munhoz De Freitas','5355766400036','36'),(17744,'Nicolas Costa Andrade','46011760900037','37'),(17745,'Nicolas De Melo Marinho','59881823600038','38'),(17746,'Nicolas Evangelista De Souza','50482116700039','39'),(17747,'Nicolas Fernando Silva','54995552500040','40'),(17748,'Nicolas Marcelino Da Silva','60091928600041','41'),(17749,'Nicolas Salvador Da Silva','39459902000042','42'),(17750,'Nicolas Santos','38569009500043','43'),(17751,'Nicolas Silveira Santos','39568565500044','44'),(17752,'Nicolas William Da Silva Moretto','54990709900045','45'),(17753,'Nicole Bezerra Goncalves','50604787800046','46'),(17754,'Nicole Carvalho Da Silva','38467247400047','47'),(17755,'Nicole Chasci Silva','54640936200048','48'),(17756,'Nicole Da Silva Carvalho','3943381100049','49'),(17757,'Nicole De Paula Cerqueira','5297971500050','50'),(17758,'Nicole Fazolin Dos Santos','55279139800051','51'),(17759,'Nicole Giulia Dos Santos Lima','54584413700052','52'),(17760,'Nicole Loiola De Oliveira','3842279600053','53'),(17761,'Nicole Maria Dourado De Freitas','57690100300054','54'),(17762,'Nicole Siciliano Leme','57792334100055','55'),(17763,'Nicoli Gomes De Sousa','5536690000056','56'),(17764,'Nicollas De Sousa','50779351100057','57'),(17765,'Nicollas Henrique Geronimo Da Silva','50524156000058','58'),(17766,'Nicolle Da Costa Pinto','5871775500059','59'),(17767,'Nicolle Ferreira Filho','38034508000060','60'),(17768,'Nicolli Vitoria Fiorelli De Oliveira','53810720000061','61'),(17769,'Nicolly Ferreira Fernandes','56957310500062','62'),(17770,'Nicoly De Paula Silva','52466834600063','63'),(17771,'Nicoly De Sousa Alves','53265429800064','64'),(17772,'Nicoly Lemes Da Silva','50028821500065','65'),(17773,'Nicoly Soares De Lima','38866547600066','66'),(17774,'Nubia Emanuelle Ferreira Da Cruz','53671851900067','67'),(17775,'Nubia Natielle Barbosa Chagas','5339192300068','68'),(17776,'Nyla Gabriela Silva Dias','38800008900069','69'),(17777,'Ocenir Jose Da Costa Ferreira','29767523000070','70'),(17778,'Oliver Lopes Caparros','5416288000071','71'),(17779,'Olivia Silva Amann','52637897900072','72'),(17780,'Pablo Abid Castilho','59380820400073','73'),(17781,'Pablo Daniel Amorim Estrela Lima','38194627700074','74'),(17782,'Pablo Gomes De Sousa','38299237400075','75'),(17783,'Pablo Sabino Ferreira','5999137100076','76'),(17784,'Pablo Santana Cardoso De Almeida','53155057600077','77'),(17785,'Pablo Vinicius Da Silva','50359659000078','78'),(17786,'Paloma Abid Castilho','59380860500079','79'),(17787,'Paloma Coelho De Lemos','56959354200080','80'),(17788,'Paloma Pereira Brito','3750730500081','81'),(17789,'Paloma Weine Santos Viana','2112266700082','82'),(17790,'Pamela De Lima','56376250000083','83'),(17791,'Pamela Suellen Rocha','53908106100084','84'),(17792,'Pamela Teodoro Celestino','53637649900085','85'),(17793,'Pamella Pugliessa Leal Araujo','50289323000086','86'),(17794,'Paola De Lima Pires','50098550900087','87'),(17795,'Paola Freitas Bezerra','37805765000088','88'),(17796,'Paolla Borges Cardoso','53708063600089','89'),(17797,'Patricia De Paula Guets','55915191300090','90'),(17798,'Patricia Pereira Farias','37955832400091','91'),(17799,'Patricia Winny Araujo De Matos','39508323000092','92'),(17800,'Patrick Martins Claro Netto','38041702900093','93'),(17801,'Paula Kaori Tamai','53630697700094','94'),(17802,'Paulo Alberto Silva Sales','38236955500095','95'),(17803,'Paulo Barroso Da Silva Nascimento','56574876200096','96'),(17804,'Paulo Corazim Da Silva','50557934000097','97'),(17805,'Paulo Henrique De Oliveira Alves','5442626100098','98'),(17806,'Paulo Henrique Dos Santos Tristao','38398268600099','99'),(17807,'Paulo Henrique Fabiano','57729614000100','100'),(17808,'Paulo Henrique Lima Ventrame','58182096400101','101'),(17809,'Paulo Jose Farias','52713158100102','102'),(17810,'Paulo Sergio De Lima Filho','53330644900103','103'),(17811,'Paulo Vinicius Vieira De Souza','55941419500104','104'),(17812,'Paulo Vitor Souza Bortoleto','56554766500105','105'),(17813,'Pedro Augusto Palma','57180730600106','106'),(17814,'Pedro Da Silva Menezes','52427209800107','107'),(17815,'Pedro De Almeida Sparvolli','58437406900108','108'),(17816,'Pedro Dos Santos','54721206900109','109'),(17817,'Pedro Gabriel Otani Mendes Da Silva','39780824000110','110'),(17818,'Pedro Gomes Da Silva','50505059600111','111'),(17819,'Pedro Gustavo De Oliveira Cavalini','53020649300112','112'),(17820,'Pedro Henrique Almeida Hortela','50399362100113','113'),(17821,'Pedro Henrique Alves Lima','55316817400114','114'),(17822,'Pedro Henrique Amarante Galves','39995058800115','115'),(17823,'Pedro Henrique Candido Ribeiro','38187835100001','1'),(17824,'Pedro Henrique Da Cruz','50707952800002','2'),(17825,'Pedro Henrique De Melo E Silva','39995329200003','3'),(17826,'Pedro Henrique De Oliveira Alves','54426262100004','4'),(17827,'Pedro Henrique De Souza Ramos','38866774600005','5'),(17828,'Pedro Henrique Do Monte Almeida','5857853400006','6'),(17829,'Pedro Henrique Kenji De Luna Shimabukuro','55277680400007','7'),(17830,'Pedro Henrique Meneghetti Manca','52467664100008','8'),(17831,'Pedro Henrique Quiles Coelho','38614962800009','9'),(17832,'Pedro Henrique Quinsan Rocha','39638482100010','10'),(17833,'Pedro Henrique Vieira De Souza','53707098900011','11'),(17834,'Pedro Ian Santos Antonelli','60889562300012','12'),(17835,'Pedro Lucas Sabino Marcello','50531909300013','13'),(17836,'Pedro Oliveira Tavares','53217005200014','14'),(17837,'Pedro Romero Sanches Batista','39062230800015','15'),(17838,'Pedro Rossi Correia','58242896800016','16'),(17839,'Pedro Santos Basilio','62715043300017','17'),(17840,'Pedro Vinicius De Assis Oliveira','39006624200018','18'),(17841,'Peterson Da Silva Nascimento','53807692600019','19'),(17842,'Phellipe Araujo Dos Santos','5050531000020','20'),(17843,'Pietra Moreira Gama De Oliveira','54492515400021','21'),(17844,'Poliana Andrade Pinheiro','55370005400022','22'),(17845,'Poliana Wendy Silva Santos','5394565500023','23'),(17846,'Polyana Vitoria Kawakami Silva','39673303700024','24'),(17847,'Querem Hapuque Martinho','53742517200025','25'),(17848,'Rabeche Credendio Barbosa Da Silva','55691432600026','26'),(17849,'Radija Eulalia De Oliveira Alvees','54426201300027','27'),(17850,'Rafael Amaral De Oliveira','40606379500028','28'),(17851,'Rafael Antonio Novaes Bevilacqua','52467036500029','29'),(17852,'Rafael Camillo Rodrigues','60718348200030','30'),(17853,'Rafael Carlos De Lima Abreu','38668917900031','31'),(17854,'Rafael Dos Santos Monteiro Sousa','53221183200032','32'),(17855,'Rafael Ferreira Pinto','50180825500033','33'),(17856,'Rafael Jose Ferreira Da Silva','50243915400034','34'),(17857,'Rafael Mizuno Fraga','50070456900035','35'),(17858,'Rafael Oliveira Da Silva','5482460400036','36'),(17859,'Rafael Oliveira Melo','52341496100037','37'),(17860,'Rafael Santos Borazio','50545334400038','38'),(17861,'Rafael Siqueira Menezes','52294135700039','39'),(17862,'Rafaela Barbosa Ribeiro Dos Santos','50558512100040','40'),(17863,'Rafaela De Oliveira Da Silva','58134097800041','41'),(17864,'Rafaela Guadagnini Lima','57779121700042','42'),(17865,'Rafaela Guedes Valensoela','52272993900043','43'),(17866,'Rafaela Nunes Ribeiro','60933747600044','44'),(17867,'Rafaela Rota Scurato','700703800045','45'),(17868,'Rafaella Galdino Serra','50482175100046','46'),(17869,'Rafaella Ribeiro','58844956800047','47'),(17870,'Raiane Emanuelle Lino De Assuncao','49769989800048','48'),(17871,'Raiane Jacinto Da Cruz','56605602100049','49'),(17872,'Rainaia Pires De Sousa','5416195500050','50'),(17873,'Raissa Yumi Teruya Ferreira','39665723000051','51'),(17874,'Rakelly Da Silva Ferreira','5594442800052','52'),(17875,'Ramon Moreira De Souza','50484392800053','53'),(17876,'Ramon Naguel De Campos Barbosa','57223665700054','54'),(17877,'Raphael Lucio Oliveira','55251250300055','55'),(17878,'Raphael Nogueeira Da Silva','54845716500056','56'),(17879,'Raphaela Nunes Massola','38676438400057','57'),(17880,'Raquel Campos Ferreira','50968226100058','58'),(17881,'Raquel Cardoso Da Silva','29259230000059','59'),(17882,'Raquel Deveza Mendes Da Silva','50829411300060','60'),(17883,'Raquel Ferreira Dos Santos','59242303700061','61'),(17884,'Raquel Ferreira Pinto','50180833400062','62'),(17885,'Raquel Licanor Gomes','52642007800063','63'),(17886,'Raquel Pinheiro Dos Reis','3996568700064','64'),(17887,'Raquel Rocha Xavier','3833293600065','65'),(17888,'Raquel Rosa Da Silva','57416592700066','66'),(17889,'Raul Biscaro Benzi','54072638200067','67'),(17890,'Raul Sousa Perroni','54522054300068','68'),(17891,'Rayan Da Silva De Souza','3535494000069','69'),(17892,'Rayane Barbosa De Sa','38534750900070','70'),(17893,'Rayckson Silva De Oliveira','55941556400071','71'),(17894,'Rayssa Fernandes De Aquino','55315292000072','72'),(17895,'Rebeca Avallone Machado','38467313200073','73'),(17896,'Rebeca Cocki','56320337700074','74'),(17897,'Rebeca Correa De Moraes','52165335600075','75'),(17898,'Rebeca De Oliveira Pimenta','39965858000076','76'),(17899,'Rebeca Dos Santos Souza','53074017500077','77'),(17900,'Rebeca Maria Dos Reis Santos','57046809700078','78'),(17901,'Rebeca Melo Meneses','56561337600079','79'),(17902,'Rebecca Amaral De Freitas','5444798300080','80'),(17903,'Rebecca Muenzer Goncalves Da Silva','50319958800081','81'),(17904,'Rei Kusaba','58867420500082','82'),(17905,'Reinara Martins Da Silva','55317595600083','83'),(17906,'Renan Alves Costa','53747343900084','84'),(17907,'Renan Andrade De Lima','39995804600085','85'),(17908,'Renan Bernandes Uccio','50026628100086','86'),(17909,'Renan Carlos Silva','55107185000087','87'),(17910,'Renan Lucas Brandao Do Nascimento','54385365200088','88'),(17911,'Renan Nicanor De Godoy Santos','48779207500089','89'),(17912,'Renan Paro Oliveira','37894839800090','90'),(17913,'Renan Quilicone Wandeur','50929109000091','91'),(17914,'Renata Dos Santos De Abreu','54325132900092','92'),(17915,'Renata Silva Penteado','52085072500093','93'),(17916,'Renato Santos Ferreira','39273206300094','94'),(17917,'Renato Teodoro Soares','56711017500095','95'),(17918,'Rene Gabriel Guimaraes Ferreira','54073670300096','96'),(17919,'Renildo Souza Da Rocha','56078911700097','97'),(17920,'Renna Tronco Alves Pinto','62911989200098','98'),(17921,'Rhavine Sanches Dos Santos','58419944200099','99'),(17922,'Rhian Viana Hirata Da Silva','53248435600100','100'),(17923,'Rhodney De Araujo','54415880500101','101'),(17924,'Rian Tito Da Costa','50546222900102','102'),(17925,'Ricardo Neves Da Silva','56997665000103','103'),(17926,'Richard Soares Luz','52717328900104','104'),(17927,'Rikelme Moreira Cruz','3784663200105','105'),(17928,'Roana Camargo Da Silva','52030484600106','106'),(17929,'Roberta Kallyane Carmo Dos Santos','52402547200107','107'),(17930,'Roberto Bispo Filho','50934339900108','108'),(17931,'Roberto Gregorio Junior','38612669000109','109'),(17932,'Robson Bettencort De Lima','55367039600110','110'),(17933,'Robson De Lima Freitas','43608763700111','111'),(17934,'Robson Fabricio Santos','52138910000112','112'),(17935,'Rodrigo Bezerra Da Silva','55751990100113','113'),(17936,'Rodrigo Cosmo Dos Santos','3766373300001','1'),(17937,'Rodrigo De Assis Brito','37664114900002','2'),(17938,'Rodrigo Oliveira Bispo','39435460600003','3'),(17939,'Rodrigo Yuji Ivasa','53021539100004','4'),(17940,'Romulo Nunes Lira','50916214900005','5'),(17941,'Ronald Mateus Alencar Da Silva','38924794700006','6'),(17942,'Ronald Willi Da Silva Peixoto','60730068100007','7'),(17943,'Ronaldo Da Silva Melo','13839446500008','8'),(17944,'Ronildo Pereira De Almeida','23751804100009','9'),(17945,'Rosilei Saraiva Pessoa Ferreira','20212193800010','10'),(17946,'Rosivane De Almeida Moura','43828997300011','11'),(17947,'Rubens Sanches','53216379500012','12'),(17948,'Rute Oliveira','55142370500013','13'),(17949,'Ruth Caroline Feliciano Ramos','52137474100014','14'),(17950,'Ruth Da Silva Almeida','57053350800015','15'),(17951,'Ryan Aparecido De Moraes Souza','55512538500016','16'),(17952,'Ryan Araujo Franco','54742577600017','17'),(17953,'Ryan Dos Santos Pereira','55141622100018','18'),(17954,'Ryan Gabriel Lopes Ciolin Loipes Da Silva','55043865800019','19'),(17955,'Ryan Henrique Acevili Santos','54585093900020','20'),(17956,'Ryan Lucas Pereira Campos','39613299600021','21'),(17957,'Sabrina Aparecida Nunes Araujo','50363393800022','22'),(17958,'Sabrina Aquino Da Silva','49905543300023','23'),(17959,'Sabrina Ayres Paiva','55861185000024','24'),(17960,'Sabrina Beatriz Rocha Do Amaral','56088377800025','25'),(17961,'Sabrina Bonugli Oliveira','5594358500026','26'),(17962,'Sabrina De Melo Lima','62098718200027','27'),(17963,'Sabrina Dos Santos Eufrasio','39838398400028','28'),(17964,'Sabrina Faria Dos Reis','39614291600029','29'),(17965,'Sabrina Goncalves Da Silva','38582304600030','30'),(17966,'Sabrina Leonilda Oliveira','48227865100031','31'),(17967,'Sabrina Minelly Rodrigues Souza','48423608800032','32'),(17968,'Sabrina Nunes Castro','55422882800033','33'),(17969,'Sabrina Oliveira Souza','55369298700034','34'),(17970,'Sabrina Praxedes Tannuri','37317916900035','35'),(17971,'Sabrina Ribeiro','58844952000036','36'),(17972,'Sabrina Ribeiro Dos Santos','50253530100037','37'),(17973,'Sabrina Santos De Oliveira','54911204200038','38'),(17974,'Sabryna Marcelino Bego','55603541000039','39'),(17975,'Sabrynny Dos Santos Martins','55042361800040','40'),(17976,'Sag Salvadora De Seixa','15980841800041','41'),(17977,'Samara Batista Rodrigues','38532976300042','42'),(17978,'Samara Guilherme Da Silva','37569290300043','43'),(17979,'Samara Padilha Vieira','55779532100044','44'),(17980,'Samira Da Silva Gois','5776092100045','45'),(17981,'Samira Dos Santos Abrao','53670777700046','46'),(17982,'Samuel Barbosa Oliveira','53669334100047','47'),(17983,'Samuel Costa Silva','38569492100048','48'),(17984,'Samuel Da Silva Martinho','49091653300049','49'),(17985,'Samuel Davi Gomes De Viveiros','50830408800050','50'),(17986,'Samuel Oliveira Santos','37109090800051','51'),(17987,'Samuel Pedro Silva Dos Santos','37520789200052','52'),(17988,'Samyra Fernandes Miranda Da Silva','38158383100053','53'),(17989,'Sara Gabriely Souza Quirino','38042284000054','54'),(17990,'Sara Martins Da Silva','38301344600055','55'),(17991,'Sara Santos Reis','58062872300056','56'),(17992,'Sarah Gentino Dos Santos','37892017000057','57'),(17993,'Sarah Ladislau Gomes','58597877300058','58'),(17994,'Sarah Pires','6439505900059','59'),(17995,'Sarah Vitoria Lucero De Campos','38040914800060','60'),(17996,'Sarai Silva Pereira','59211665700061','61'),(17997,'Sergio Araujo De Assis','22352890000062','62'),(17998,'Sergio Gabriel Da Silva Araujo','53638186000063','63'),(17999,'Sergio Ricardo Pereira','2340180100064','64'),(18000,'Sergio Vitor Silva Barros','5615359800065','65'),(18001,'Shaiane Wendy Macena Silva','56867522800066','66'),(18002,'Shelda Dos Santos Laurindo','38962447000067','67'),(18003,'Shirlei Regina Santiago Martins De Araujo','35250624600068','68'),(18004,'Sidnei Viana Da Silva','62667667800069','69'),(18005,'Sidney Denis De Oliveira Souza','5413953500070','70'),(18006,'Sidney Junior Marques Carvalho','38332050100071','71'),(18007,'Sidney Pereira Da Silva','38034320400072','72'),(18008,'Sofia Cehanavicius Freire Mamao Gouveia','5072443100073','73'),(18009,'Sofia Maria Da Silva Pacheco','39781304100074','74'),(18010,'Sofia Oyagawa Mainetti','50545635700075','75'),(18011,'Sofia Petronieri De Almeida','53193902900076','76'),(18012,'Sofia Sena Tavares','38300931500077','77'),(18013,'Sofie Goncalves Guedes','57262288000001','1'),(18014,'Sophia De Felipe Souza','55277598800002','2'),(18015,'Sophia Oliveira De Souza','58480530500003','3'),(18016,'Sophia Rosin Barroquelo Goncalves','55141558700004','4'),(18017,'Stefane Caixeta Almeida','37913377500005','5'),(18018,'Stefanie Cristina Costa Batista','3769600500006','6'),(18019,'Stefanie Rodrigues Da Silva','53486302400007','7'),(18020,'Stefanny Novaes Sanches','37547668400008','8'),(18021,'Stefany Battistini Do Nascimento','57391818100009','9'),(18022,'Stefany Bucholcas Lima','57820099500010','10'),(18023,'Stefany Fonseca Dantas','39064946600011','11'),(18024,'Stefanye Matsuda De Souza','57802575900012','12'),(18025,'Stella Mota De Lima','50749588300013','13'),(18026,'Stephanie Brito De Souza','55590132400014','14'),(18027,'Stephanie De Souza Santos','38188476400015','15'),(18028,'Stephanie Pedro Dos Santos','57585622100016','16'),(18029,'Stephany Torres Do Nascimento','38884721900017','17'),(18030,'Sthefany Pereira De Andrade','58923280000018','18'),(18031,'Sthefany Silva Borges De Melo','39944522500019','19'),(18032,'Sueli Barbosa','38436108000020','20'),(18033,'Suellen Alves Dos Santos','52875850000021','21'),(18034,'Suellen Andressa Pereira Moreira','38499024100022','22'),(18035,'Suellen Cristiny Feliciano Campos','39535801200023','23'),(18036,'Suie Matias Saito','50120219500024','24'),(18037,'Susi Mendonca Da Silva','39782274100025','25'),(18038,'Suzana De Andrade Souza','57766479700026','26'),(18039,'Swellen Rodrigues Goncalves Cofani','4361964400027','27'),(18040,'Taina Araujo Mendes','56388101100028','28'),(18041,'Tainah Andrade Klein','38899011900029','29'),(18042,'Taisa Gabrielle Albuquerque Genda','50557642900030','30'),(18043,'Talita Julia Da Silva','39903250200031','31'),(18044,'Talita Matos Da Silva','58347978900032','32'),(18045,'Talita Matos De Oliveira','52012075900033','33'),(18046,'Talita Oliveira Bernal','39622189000034','34'),(18047,'Talles Bottaccini Ruiz','55723110300035','35'),(18048,'Tallysson Yuri Campelo Fidelis','38235967700036','36'),(18049,'Tamires Araujo De Souza','5426637900037','37'),(18050,'Tamires Barboza Dos Santos','38236137400038','38'),(18051,'Tamiris Souza Barbosa','54097491200039','39'),(18052,'Tarcisio Antonio Erculano Teixeira Da Silva','53019425900040','40'),(18053,'Tatiana Jesus Da Silva','30748125600041','41'),(18054,'Tayara Cristina Dos Anjos','38332959000042','42'),(18055,'Tayna Vitoria Santos Dionisio','39414882400043','43'),(18056,'Taynner Antunes Eufrasio','5536729900044','44'),(18057,'Tereza Beatriz De Matos Torres','54870204400045','45'),(18058,'Thago Fernandes Dias','57006524000046','46'),(18059,'Thaina De Barros Silva','53894483300047','47'),(18060,'Thaina Gomes Silva','5531708200048','48'),(18061,'Thaina Gonder Rodrigues Xavier','39753682300049','49'),(18062,'Thaina Mendes Gobetti','55317268200050','50'),(18063,'Thaina Siqueira Vasconcelos','55368316000051','51'),(18064,'Thaira Roma De Paula','59575016300052','52'),(18065,'Thais Agnes Krohn','57172518100053','53'),(18066,'Thais Barbosa Lino','44497296100054','54'),(18067,'Thais Da Silva Alves','50181020100055','55'),(18068,'Thais Da Silva Guilherme','38433470200056','56'),(18069,'Thais Da Silva Santos','52165078100057','57'),(18070,'Thais Da Silva Teodoro','58532310000058','58'),(18071,'Thais De Almeida Da Silva','39066394300059','59'),(18072,'Thais Maria Ferreira','4516371286100060','60'),(18073,'Thais Medeiros Da Silva','39272705500061','61'),(18074,'Thais Mendes Gobetti','55317641900062','62'),(18075,'Thais Mirelly Da Conceicao Sousa','56763339100063','63'),(18076,'Thais Reis Guirra Da Silva','36511574500064','64'),(18077,'Thais Soares Nascimento','50639097400065','65'),(18078,'Thais Vieira Souza','54161517800066','66'),(18079,'Thais Vitoria Ribeiro Basso Ferreira','5917227700067','67'),(18080,'Thaissa Da Silva Gomes','60165636200068','68'),(18081,'Thales Amaral','38734513900069','69'),(18082,'Thales Goncalves Silva','52980651400070','70'),(18083,'Thalina De Oliveira Carvalho','55801041600071','71'),(18084,'Thalita Alves Cortes Costa','53302222800072','72'),(18085,'Thalita Neri Santiago','38245208200073','73'),(18086,'Thalita Soares Mota','55292436200074','74'),(18087,'Thalles Araujo Pinheiro','57259939000075','75'),(18088,'Thalles Vinicius Bezerra Alves','55517977100076','76'),(18089,'Thalya Regina Lucas Fantim','56917120900077','77'),(18090,'Thamirys Regina Garbi','57180093200001','1'),(18091,'Thatiane Tognelli De Camargo Marques','38897007800002','2'),(18092,'Thauany Fernanda Silva De Melo','58595717400003','3'),(18093,'Thauany Passaretti Freire','55251172900004','4'),(18094,'Thawan Oliveira Simao','50748392300005','5'),(18095,'Thayane Moreira Reis','52732924100006','6'),(18096,'Thayna Andrade Celeste','56789377700007','7'),(18097,'Thayna Elizabeth Do Espirito Santo Diniz','36770567900008','8'),(18098,'Thayna Yasmin Souza Santos','5759624600009','9'),(18099,'Thaynara De Jesus Dine','54425273100010','10'),(18100,'Thiago Alves De Oliveira','55316995600011','11'),(18101,'Thiago Aparecido Dos Santos Martins','55875476400012','12'),(18102,'Thiago Cesar Adriano Da Silva','39570656700013','13'),(18103,'Thiago Condrasisen','38959686300014','14'),(18104,'Thiago De Figueredo Limeira','60547619600015','15'),(18105,'Thiago Emanuel Reis Pereira','414971500016','16'),(18106,'Thiago Gomes Da Silva','38237278500017','17'),(18107,'Thiago Henrique Moreto','59128534400018','18'),(18108,'Thiago Quirino','37371802000019','19'),(18109,'Thiago Ribeiro Granjeiro','54023339000020','20'),(18110,'Thiago Tadeu Bento Da Silva','48038383200021','21'),(18111,'Thierry Lichtenthaler','55806200300022','22'),(18112,'Thomass Alberto Fernandes','38299810800023','23'),(18113,'Thomaz Roque Rodrigues','48004598700024','24'),(18114,'Tiago De Oliveira Gutierre','38896799700025','25'),(18115,'Tiago Henrique Celestino De Paula Santos','38315424800026','26'),(18116,'Tiago Henrique Santos Perez','59584206900027','27'),(18117,'Tifany Mariane Ferreira','50638386600028','28'),(18118,'Tiffany Alves Ferreira Torres','5344993400029','29'),(18119,'Toassys Pereira Da Cunha','2458380400030','30'),(18120,'Tuany Marques Reiter Alves','55221138200031','31'),(18121,'Vagner Nicolau De Souza','17538817900032','32'),(18122,'Vagner Targino Freitas','53116962500033','33'),(18123,'Vallentino Prozzo Ranulfo','52713193300034','34'),(18124,'Valmir Castilho Junior','54072787800035','35'),(18125,'Vanessa Barbosa Santos','38499172500036','36'),(18126,'Vanessa Carvalho De Lima','50181060200037','37'),(18127,'Vanessa Isis Hoschett Morales De Oliveira','57165951200038','38'),(18128,'Vanessa Manarin Vara','39624445200039','39'),(18129,'Vanessa Senziani','57272730600040','40'),(18130,'Vanessa Souza Santos','39718980100041','41'),(18131,'Vanusa Andara Bispo Dos Santos','58709359600042','42'),(18132,'Veridiana Brandao Barbosa','39006809300043','43'),(18133,'Veronica Vitoria Rocha Figueira','59249595400044','44'),(18134,'Victor Augusto Vianna Gimenez','37476618600045','45'),(18135,'Victor Binder','36857876800046','46'),(18136,'Victor Correia Giacomi','38124939200047','47'),(18137,'Victor Da Silva Teixeira','5204585900048','48'),(18138,'Victor Dos Santos Araujo Lima','39306780400049','49'),(18139,'Victor Farinelli Moreto','55723817100050','50'),(18140,'Victor Guilherme Marianno Dias','3846916400051','51'),(18141,'Victor Hernandes Jardim','58225035300052','52'),(18142,'Victor Hugo De Melo Santos','55823215200053','53'),(18143,'Victor Hugo Ramiro Cota','38848951000054','54'),(18144,'Victor Martins Franchi','56916614700055','55'),(18145,'Victor Matheus Almeida Dos Santos','38614161700056','56'),(18146,'Victor Matheus Cruz','38624906400057','57'),(18147,'Victor Nunes Da Silva','38298904100058','58'),(18148,'Victor Paiva Rodrigues','5227403900059','59'),(18149,'Victor Rodrigues','38675209600060','60'),(18150,'Victor Silva Ramos','57447051700061','61'),(18151,'Victor Souza Cabral','3853405900062','62'),(18152,'Victoria Dos Reis Campos','52594885500063','63'),(18153,'Victoria Ferreira Dos Santos','3888522900064','64'),(18154,'Victoria Gamero Ventreschi','54105055200065','65'),(18155,'Victoria Isabelli Souza Demboski Rodrigues','52531464700001','1'),(18156,'Victoria Jacomel Camilo','50243600100002','2'),(18157,'Victoria Karollyna Rosa Daboin','52804332800003','3'),(18158,'Victoria Nathaly Carmo Dos Santos','52402555100004','4'),(18159,'Victoria Paulino Da Silva','39672809100005','5'),(18160,'Victoria Regina Da Silva','38961445200006','6'),(18161,'Victoria Reis Rocha','60691705600007','7'),(18162,'Victorya Francielly Dos Santos Lopes','52594433300008','8'),(18163,'Vikelle Candida De Brito Jesus','39783393300009','9'),(18164,'Vinciius Gandolfo Faustino','39031204600010','10'),(18165,'Vinicios Garcia Fagundes','5755828700011','11'),(18166,'Vinicios Oliveira Souza','50604120700012','12'),(18167,'Vinicius Bueno Barbosa','50621662700013','13'),(18168,'Vinicius Cardoso Spadina','38156556700014','14'),(18169,'Vinicius De Araujo Duarte','58349198400015','15'),(18170,'Vinicius De Melo Barbosa Da Silva','55539650200016','16'),(18171,'Vinicius De Souza Ferro','5630947600017','17'),(18172,'Vinicius Do Nascimento Generoso','5064069100018','18'),(18173,'Vinicius Gabriel Ferreira Lopes','59515932100019','19'),(18174,'Vinicius Haruki Kato','56266522500020','20'),(18175,'Vinicius Heberth Ceron Carvalho','37520107500021','21'),(18176,'Vinicius Lopes Pereira','49082376200022','22'),(18177,'Vinicius Luiz Sousa Costa','54771635700023','23'),(18178,'Vinicius Medrado Pacheco','39022923400024','24'),(18179,'Vinicius Pereira Silva','37894723000025','25'),(18180,'Vinicius Rosario Cordeiro','521921075900026','26'),(18181,'Vinicius Schiavo','50504673800027','27'),(18182,'Vinicius Silva Dos Reis','52819612100028','28'),(18183,'Vinicius Soares Santo','38610235100029','29'),(18184,'Vinicius Teixeira Barbosa','57745651900030','30'),(18185,'Vinicius Vianna Arrudas','6071638000031','31'),(18186,'Vinicius Willian Campos Galli','38711591200032','32'),(18187,'Vito Teodoro Dos Santos','39964700400033','33'),(18188,'Vitor Abner Silva','39195020400034','34'),(18189,'Vitor De Lima Cortes','58213987900035','35'),(18190,'Vitor De Souza Claudino Da Silva','50621046700036','36'),(18191,'Vitor De Souza Silva','3733229400037','37'),(18192,'Vitor Dias Da Silva','53946606200038','38'),(18193,'Vitor Evangelista De Oliveira','3900634000039','39'),(18194,'Vitor Frade De Souza','59207753600040','40'),(18195,'Vitor Francisco De Assis','38335693300041','41'),(18196,'Vitor Henrique Barreto','54652097200042','42'),(18197,'Vitor Henrique Machado','39333135000043','43'),(18198,'Vitor Hofmann De Freitas','53302370100044','44'),(18199,'Vitor Janovitch Nicoliche','1921647800045','45'),(18200,'Vitor Nascimento Dos Santos','3842247400046','46'),(18201,'Vitor Negreiro Andrade','37724473900047','47'),(18202,'Vitor Silva Moreira','38469938800048','48'),(18203,'Vitor Silva Santos','55366547900049','49'),(18204,'Vitoria Batista Maia','3994523100050','50'),(18205,'Vitoria Carla Amaral Da Rocha','38257687100051','51'),(18206,'Vitoria Caroline Da Franca Cruz','50709499200052','52'),(18207,'Vitoria Cavalcante Freitas','39214650200053','53'),(18208,'Vitoria Cristina De Carvalho Albernas','37926507200054','54'),(18209,'Vitoria Cristina Ferreira Dos Santos','54650952600055','55'),(18210,'Vitoria De Melo Silva Oliveira','56622082900056','56'),(18211,'Vitoria Dos Reis Muricy','39248542400057','57'),(18212,'Vitoria Eduarda Cavalaro Cruz','57948782900058','58'),(18213,'Vitoria Esmeria De Moura','64997163200059','59'),(18214,'Vitoria Estefanny De Sousa Rocha','52804789900060','60'),(18215,'Vitoria Fernandes Pires','38689163100061','61'),(18216,'Vitoria Gabriele De Matos Silva','5062076400062','62'),(18217,'Vitoria Gabriella De Paula Conceicao','21301883100063','63'),(18218,'Vitoria Gomes Da Silva','55900756500001','1'),(18219,'Vitoria Leite Veloso','39165492500002','2'),(18220,'Vitoria Maria Dos Santos','55732228500003','3'),(18221,'Vitoria Ramalho De Lima','59904585100004','4'),(18222,'Vitoria Rodrigues Nascimento','38897416300005','5'),(18223,'Vivian Aires De Carvalho','566831924200006','6'),(18224,'Viviane Alves Santana','34517603000007','7'),(18225,'Wagner Feliciano Da Silva','43130438500008','8'),(18226,'Wallace Caliel Dos Santos Silva','50967389200009','9'),(18227,'Walner Bezerra Da Silva','58071778100010','10'),(18228,'Wanessa Ribeiro Souza','53486236600011','11'),(18229,'Weider Brelmer De Paula De Almeida Ferreira','38126683700012','12'),(18230,'Weliton Dambrosi De Melo','39064504700013','13'),(18231,'Wellington Aparecido De Oliveira','49339831400014','14'),(18232,'Wellington Heleno Da Silva','54138163500015','15'),(18233,'Wellington Jose Magaton Filho','50150069800016','16'),(18234,'Wellington Soares Dos Santos','39831961300017','17'),(18235,'Wendell Camara Maschette','3808012200018','18'),(18236,'Wesley Barbosa Ferreira Da Silva','54930536100019','19'),(18237,'Wesley Henrique Ferrarezi','53670168400020','20'),(18238,'Wesley Inacio Romero','58195528600021','21'),(18239,'Wesley Luan Menezes Do Carmo Cardoso','52165150500022','22'),(18240,'Wesley Santos De Franca','53810674800023','23'),(18241,'Weslley Dos Santos Sousa','57599835000024','24'),(18242,'Weverson Inacio Da Silva Lemos','6319107500025','25'),(18243,'William Bello Da Guarda Ferreira','4295140500026','26'),(18244,'William De Souza Odoardi','55866263800027','27'),(18245,'William Fernandes Dos Santos','48833768900028','28'),(18246,'William Silva Guedes Da Costa','39107038100029','29'),(18247,'Willian Balieiro Calvo','39194071500030','30'),(18248,'Willian De Almeida Pedro','3759661600031','31'),(18249,'Willian De Almeida Rodrigues','56968260500032','32'),(18250,'Willian Renan Cavalcante De Queiroz','53694470200033','33'),(18251,'Willian Wallace Martins','50523361700034','34'),(18252,'Willians Gadelha De Sousa','56404547000035','35'),(18253,'Willy Moreira Santos','53017895300036','36'),(18254,'Yan Estevam Dos Santos','3967308400037','37'),(18255,'Yan Luiz Lins Albuquerque Silva Almaral','5901009700038','38'),(18256,'Yan Monteiro Guilherme','56900190000039','39'),(18257,'Yara Felix Da Costa','53143062500040','40'),(18258,'Yasmim Carlos Chernioglo','39571126500041','41'),(18259,'Yasmim De Sousa Lima','38157886000042','42'),(18260,'Yasmim Maria Cavalcante','53694462300043','43'),(18261,'Yasmin Aguiar Ataide','52593059000044','44'),(18262,'Yasmin Amorim De Sousa','53095978100045','45'),(18263,'Yasmin Arife Dos Santos','53355029400046','46'),(18264,'Yasmin Ayres Paiva','55861171000047','47'),(18265,'Yasmin Butini Tome','39334697300048','48'),(18266,'Yasmin De Souza','59139357800049','49'),(18267,'Yasmin Dias De Oliveira','57857148100050','50'),(18268,'Yasmin Elizabete Da Silva','1950769800051','51'),(18269,'Yasmin Figueiredo Da Silva','39862285100052','52'),(18270,'Yasmin Lima De Jesus','55107486300053','53'),(18271,'Yasmin Lopes De Oliveira','55099489000054','54'),(18272,'Yasmin Marcal Da Rocha Do Espirito Santo','56497940500055','55'),(18273,'Yasmin Mayumi De Queiroz','56916692500056','56'),(18274,'Yasmin Santos Milanelo Nogueira','39485416000057','57'),(18275,'Yasmin Santos Moreno','52097893600058','58'),(18276,'Yasmin Simoes Borges','55107782700059','59'),(18277,'Yasmin Soares De Souza','50566906700060','60'),(18278,'Yasmin Souza Lopes','50506455800061','61'),(18279,'Ygor Kelwin Braz Da Silva','49126411200062','62'),(18280,'Ygor Stanescu Leschics Bonafe','56906600100063','63'),(18281,'Yohana Pereira Santos','66083115600064','64'),(18282,'Yris Toneli Silverio','57435865100065','65'),(18283,'Andressa Larissa Paschoa Piacenti','37532578500001','1'),(18284,'Andressa Maria Cordeiro Laurentino','50384932700002','2'),(18285,'Bruno Ferreira Gomes','48429413100003','3'),(18286,'Carolina Da Silva Miyashiro','33964222100004','4'),(18287,'Gabriela Araujo Florentino','39478518600005','5'),(18288,'Gloria Maria Aparecido Da Silva','37912897400006','6'),(18289,'Isabela Clemente Neves','53290116200007','7'),(18290,'Isabella Fontes Vieira Da Costa','3725578200008','8'),(18291,'Marcos Capistrano De Lima','37471360100009','9'),(18292,'Maria Vitoria Ferreira Da Rocha','64413336300010','10'),(18293,'Miriam Cristina Pessoa','20750757000011','11'),(18294,'Pamela Janine Dlugosz','56336325300012','12'),(18295,'Suellen Chaves Galeano','36420657300013','13'),(18296,'Thais Regina Scavazza Da Silva','33309185100014','14'),(18297,'Thales Prates De Oliveira','38848492500015','15'),(18298,'Aline Fernandes Dos Santos Almeida','578191349','1'),(18299,'Aline Ferreira Borges','561137006','2'),(18300,'Aline Gibin Teodoro Da Silva','567268883','3'),(18301,'Aline Marchezoni Nery','541336812','4'),(18302,'Aline Siqueira Menezes','522941278','5'),(18303,'Allan Kleytton Silva Santana','500274459','6'),(18304,'Allana Rocha Santos','395230615','7'),(18305,'Almenara Galetti Scudeler','397819870','9'),(18306,'Almir Rogerio Zanelato','326271430','10'),(18307,'Alvaro Biazon Pessoa','386088810','11'),(18308,'Alyssa Heluany Zacarias Alves','393335252','12'),(18309,'Amanda Almeida Santos','551948139','13'),(18310,'Amanda Avellar','585021958','14'),(18311,'Amanda Barreto Corigliano','560427529','15'),(18312,'Amanda Confortini','558944826','17'),(18313,'Amanda De Oliveira Liao Carneiro','558757870','18'),(18314,'Amanda Dos Santos Batista','383991754','19'),(18315,'Amanda Dos Santos Correia Pio','546106961','20'),(18316,'Amanda Godoi Conte','601468119','21'),(18317,'Amanda Izabelly Silva Carvalho','536695350','22'),(18318,'Amanda Leite Da Silva','383314290','23'),(18319,'Amanda Martins De Araujo','375692733','25'),(18320,'Amanda Moreira De Souza','557230469','26'),(18321,'Amanda Santos Grizorte','541614757','27'),(18322,'Amanda Silva Rodrigues','388846112','28'),(18323,'Amanda Suellen Da Costa','565738288','29'),(18324,'Amanda Zuza Cegolin','551419416','30'),(18325,'Ana Beatriz Andrade De Souza','582797007','32'),(18326,'Ana Beatriz Da Silva','578955556','33'),(18327,'Ana Beatriz Marinho Gomes De Oliveira','530972025','34'),(18328,'Ana Beatriz Oliveira Coutinho','538113169','35'),(18329,'Ana Beatriz Pelegati','603141237','36'),(18330,'Ana Beatriz Pratti Dos Santos','556501810','37'),(18331,'Ana Beatriz Souza De Jesus','603523870','38'),(18332,'Ana Beatriz Vasconcelos Teles','598403450','39'),(18333,'Ana Beatryz De Angelo Guimaraes','523655393','40'),(18334,'Ana Carolina Batista Tenorio','639636044','41'),(18335,'Ana Carolina Bonilho Dos Santos','505569127','42'),(18336,'Ana Carolina Da Silva','576777912','44'),(18337,'Ana Carolina Martuzzo Bezerra','386954240','46'),(18338,'Ana Carolina Morais Souza','578284959','47'),(18339,'Ana Carolina Oliveira Tobias','564637257','48'),(18340,'Ana Carolina Sousa Lecho','591195537','49'),(18341,'Ana Caroline Da Costa Batista','551074127','50'),(18342,'Ana Caroline Silva Sousa','383629883','51'),(18343,'Ana Clara Lima Campos','397278380','53'),(18344,'Ana Clara Marques','528666162','54'),(18345,'Ana Claudia Da Silva Costa','578039217','55'),(18346,'Ana Claudia Rodrigues Da Silva','568182182','56'),(18347,'Ana Flavia Hayashe','533021091','57'),(18348,'Ana Gabrielle De Aguiar Mendes','531814853','59'),(18349,'Ana Julia De Sousa Almeida','531983328','60'),(18350,'Ana Julia Dourado Ravani','500659928','61'),(18351,'Ana Julia Macedo Inacio','543283331','62'),(18352,'Ana Julia Ribeiro Fernandes','545545195','63'),(18353,'Ana Karla De Souza Marques','540732175','64'),(18354,'Ana Karolina Do Nascimento Feres','398314494','65'),(18355,'Ana Laura Vilas Boas Facchin','535914994','66'),(18356,'Ana Luisa Carreira De Santiago','550568529','68'),(18357,'Ana Paula Costa Gomes','395696148','70'),(18358,'Ana Paula Da Costa Escaler','188864714','71'),(18359,'Ana Paula Pires Dos Reis','592922182','73'),(18360,'Ana Victoria Ferreira Dos Santos','601414871','74'),(18361,'Ana Yasmin Estrela','398301712','75'),(18362,'Anderson Bispo Dos Santos','469564301','76'),(18363,'Anderson Rodrigues Almeida','385699736','77'),(18364,'Anderson Santos Cerqueira','543134313','78'),(18365,'Andre Da Silva Pinto','429729066','79'),(18366,'Andre Dos Santos Souza','376843330','80'),(18367,'Andre Evangelista','501202602','81'),(18368,'Andre Firmino De Araujo','399962967','82'),(18369,'Andre Martins Prieto','636770990','83'),(18370,'Andre Rodrigues Machado','456421269','84'),(18371,'Andre Vitor Melo Juras','521633175','85'),(18372,'Andreia Andrade Do Nascimento','531438326','87'),(18373,'Andreia Cristina De Carvalho','256009594','88'),(18374,'Andresa Damiana Pereira','387997933','89'),(18375,'Andresa Mainetti','473069313','90'),(18376,'Andressa Elvira Menchon Silva','565887671','91'),(18377,'Andressa Jennifer Chizoba Nwude','384361158','92'),(18378,'Andressa Oliveira Da Silva','532390945','93'),(18379,'Andressa Satiro Dos Reis','506184407','94'),(18380,'Andressa Silva Sarmento','505040440','95'),(18381,'Andrey Dos Santos Batista','570723310','1'),(18382,'Andreza Oliveira Brito','560415825','2'),(18383,'Ane Caroline Marques','482202397','3'),(18384,'Anna Beatriz Dos Santos','520311231','4'),(18385,'Anna Bheatriz Dias Rocha','382365896','5'),(18386,'Anna Clara Cruz Armagni','381241701','6'),(18387,'Anna Julia Lins Franca Da Silva','585021922','7'),(18388,'Anny Beatris Moraes Oliveira','536994432','9'),(18389,'Anny Yumi Shimamoto','385608238','10'),(18390,'Antonia Edivan Araujo','233782655','11'),(18391,'Antonia Lorany Bezerra Alves','571047609','12'),(18392,'Antonia Tania Teixeira','195747471','13'),(18393,'Antonio Alan De Sousa Luz','503627082','14'),(18394,'Antonio Luis Barbosa De Sousa','521086140','15'),(18395,'Ariadne Blanco De Menezes','530205713','16'),(18396,'Ariadne Simon Lima','545840788','17'),(18397,'Ariane Crisolana Coelho Soares','381222883','18'),(18398,'Ariane De Oliveira','547232044','19'),(18399,'Arianny Querino Dos Santos','528775716','20'),(18400,'Ariany Prates De Lima','561543458','21'),(18401,'Arlon Ramalho Da Silva Reis','628935730','23'),(18402,'Arthur Arjona Do Amaral','503928628','24'),(18403,'Arthur Maia D\'Alessandro','509184625','26'),(18404,'Arthur Menezes Antunes','381243783','27'),(18405,'Arthur Oliveira Cardoso','568122628','28'),(18406,'Augusto Aquino Kerlin','588814684','32'),(18407,'Ayra Correia Da Costa','571802163','33'),(18408,'Barbara Borges De Andrade','571592417','34'),(18409,'Barbara Gomes Costa','506194000','35'),(18410,'Barbara Inacio Gomes Da Silva','389610290','36'),(18411,'Barbara Luiza Dos Santos Magalhaes','580372224','37'),(18412,'Barbara Mantovani Costa','542374160','38'),(18413,'Beatriz Areas Ferreira','393345786','42'),(18414,'Beatriz Barbosa Da Silva Lago','582452090','43'),(18415,'Beatriz Busch Marchetti','502421782','44'),(18416,'Beatriz Calicchio Fagundes','520979333','45'),(18417,'Beatriz Da Motta Ribeiro','520315560','46'),(18418,'Beatriz Da Silva De Freitas','384703987','47'),(18419,'Beatriz De Queiroz Viana','574422432','50'),(18420,'Beatriz Dornelas Bachega','532158714','52'),(18421,'Beatriz Duarte Dias','387346089','53'),(18422,'Beatriz Favero Bedin','384691754','54'),(18423,'Beatriz Leandro Silva','476195366','55'),(18424,'Beatriz Lourenconi Monteiro','553145290','56'),(18425,'Beatriz Lucena Tavares','588586640','57'),(18426,'Beatriz Monteiro Do Nascimento','581492419','58'),(18427,'Beatriz Nascimento Teles','386595343','59'),(18428,'Beatriz Oliveira Meireles','505566291','60'),(18429,'Beatriz Oliveira Ramos','531413731','61'),(18430,'Beatriz Pinheiro Telles De Freitas','635497852','62'),(18431,'Beatriz Ribeiro','568187088','63'),(18432,'Beatriz Santos Olegario','504500958','64'),(18433,'Beatriz Soares Tavares','534611138','66'),(18434,'Bernardina Veiga Da Silva Romera','326034687','69'),(18435,'Bianca Baptista Caetano','593928428','70'),(18436,'Bianca Barbosa Marques Prezentini','541635098','71'),(18437,'Bianca Brenda Alves De Oliveira','535379717','72'),(18438,'Bianca Bueno Schevenin','394853830','73'),(18439,'Bianca Carvalho Monice','558881750','74'),(18440,'Bianca Cristina De Sousa Carvalho','528606773','75'),(18441,'Bianca Custodio Carneiro','582640659','76'),(18442,'Bianca Da Silva Guilherme','384334696','77'),(18443,'Bianca De Oliveira Deberaldini','540147047','78'),(18444,'Bianca Eliodoro Totarelli Silva','520328838','80'),(18445,'Bianca Gomes De Moura','571942234','1'),(18446,'Bianca Mota Sales','390361010','3'),(18447,'Bianca Naomi Oyakawa Sato','574448743','4'),(18448,'Bianca Peres Santos','523401668','5'),(18449,'Bianca Pontes Sousa','392745057','6'),(18450,'Bianca Renata Americo De Oliveira','143030857','7'),(18451,'Bianca Santos De Oliveira','506528898','8'),(18452,'Bianca Sibaldo Maltoni','523071954','9'),(18453,'Bianca Silva De Souza','503985223','10'),(18454,'Bianca Stephanie Gonzalez Carvallo','355580020','11'),(18455,'Bianca Sussai Lazansky','554324430','12'),(18456,'Branca Fineto Pereira','567076714','13'),(18457,'Brenda Calegari De Barros','388359316','14'),(18458,'Brenda Dos Santos Teixeira','1953474','16'),(18459,'Brenda Jennyfer Vieira Da Silva','5053319307','17'),(18460,'Brenda Paulino Dos Santos','576967166','18'),(18461,'Brenda Soares Nicolau De Souza','368662962','19'),(18462,'Brendo Brito Santos','537452801','20'),(18463,'Bruna Alves Da Costa','381564976','24'),(18464,'Bruna Constantini','602745172','25'),(18465,'Bruna Da Silva Martinho','537425240','26'),(18466,'Bruna De Souza Moreira','391649358','27'),(18467,'Bruna Emily De Freitas Passeri','527558370','28'),(18468,'Bruna Ferreira Santos','430981200','29'),(18469,'Bruna Fontes Leite','387372593','30'),(18470,'Bruna Machado Do Rosario','397168160','31'),(18471,'Bruna Maria Aires Mendes De Souza','527255348','32'),(18472,'Bruna Millene Da Silva Santos','538951400','33'),(18473,'Bruna Ramos Dos Santos','383328937','35'),(18474,'Bruna Reis','559956850','36'),(18475,'Bruna Santos De Amaral','524162190','37'),(18476,'Bruna Silva De Souza','528042804','38'),(18477,'Bruna Vitoria Assis De Almeida','569342715','39'),(18478,'Bruno Alves De Mesquita','532400033','40'),(18479,'Bruno Barbosa','626408076','41'),(18480,'Bruno Borges Silva Trindade','524036263','42'),(18481,'Bruno Da Silva Amaral','389145830','43'),(18482,'Bruno Da Silva De Moura','390621640','44'),(18483,'Bruno De Oliveira','540727027','45'),(18484,'Bruno Eduardo Mendes Da Silva','395143056','46'),(18485,'Bruno Isaque Tavares Rocha','586641014','48'),(18486,'Bruno Kayki Ribeiro De Souza','570425517','49'),(18487,'Bruno Lucio Costa Silva','388668222','50'),(18488,'Bruno Matins Franceliano','509327643','51'),(18489,'Bruno Moreira Pinto','502397240','52'),(18490,'Bruno Pereira Bezerra','505066440','53'),(18491,'Bruno Rodrigues Dos Santos','604197585','54'),(18492,'Bruno Ruan Freitas Silva','605693936','55'),(18493,'Bruno Santos Braga','496256420','56'),(18494,'Bruno Santos Guerra','572537293','57'),(18495,'Bruno Silvas Santos','581540724','58'),(18496,'Bryan Jorge Franklin Soares','509686333','61'),(18497,'Caetano Matheus Lima','502920178','62'),(18498,'Caio Cesar Nogueira','506398730','66'),(18499,'Caio Eduardo De Souza Pereira','525335511','67'),(18500,'Caio Felix Grangeiro','386134029','68'),(18501,'Caio Henrique Da Silva Santos','508284582','69'),(18502,'Caio Vinicius Rodrigues De Lima','417737026','70'),(18503,'Caique Barbosa Ribeiro','427169320','71'),(18504,'Camila Batista Borges','391317441','72'),(18505,'Camila Bentley','520986532','73'),(18506,'Camila Bueno Francisco','532492882','74'),(18507,'Camila Ceciliano','388256140','76'),(18508,'Camila Dias Da Silva','397172369','77'),(18509,'Camila Do Nascimento Xavier Ferreira','532167971','78'),(18510,'Camila Fernandes Rosa','390067143','80'),(18511,'Camila Ferreira Rodrigues','522729228','81'),(18512,'Camila Fulgencio Silva','571192865','82'),(18513,'Camila Furlan Patricio','397818725','83'),(18514,'Camila Leite Carvalho','583638170','85'),(18515,'Camila Maria Sousa Martins','396714869','86'),(18516,'Camila Meira Campos','559810933','87'),(18517,'Camila Santos Gomes','507097683','1'),(18518,'Camila Silva Reis','387139369','2'),(18519,'Camila Soares Da Silva Carvalho','588997225','3'),(18520,'Camila Vieira Alves De Assis','577986004','4'),(18521,'Camila Vieira Lopes','571772020','5'),(18522,'Camile Silva De Souza','558647765','6'),(18523,'Camilla Carvalho Martins','392560045','7'),(18524,'Camilla Veronez Campos','530204927','8'),(18525,'Camille Costa De Almeida','587101325','9'),(18526,'Camille Gardinalle Barreto','571194874','10'),(18527,'Camille Santos Silva','509671792','11'),(18528,'Camilly Almeida Biancardi','593612516','12'),(18529,'Camilly Cordeiro Castello','606971040','13'),(18530,'Camilly Gomes Rodrigues Da Silva','534625496','14'),(18531,'Camilly Gro Soares','590947898','15'),(18532,'Camilly Velasco De Oliveira','521079007','16'),(18533,'Camily Dos Santos Moreira','543852829','17'),(18534,'Camily Prates De Lima','561774420','18'),(18535,'Camily Vitoria Dos Santos Oliveira','592462346','19'),(18536,'Carina Caltabiano De Oliveira','543124599','21'),(18537,'Carla Cardoso Pereira','533920516','22'),(18538,'Carla Caroline Bezerra Oliveira','577528889','23'),(18539,'Carla Regina Mendes','560134174','24'),(18540,'Carlos Alanf Pereira Maia Do Nascimento','507085085','25'),(18541,'Carlos Daniel Dos Santos Rodrigues','551402880','26'),(18542,'Carlos Eduardo Cavalcante Costa','390611876','27'),(18543,'Carlos Eduardo De Sousa Nascimento','003745313','28'),(18544,'Carlos Eduardo Silveira De Jesus Silva','399655475','30'),(18545,'Carlos Gardel De Franca Vieira','450468501','32'),(18546,'Carlos Henrique Da Silva Wanderley','568473401','33'),(18547,'Carlos Henrique Das Neves Moura','378473049','34'),(18548,'Carlos Nascimento Costa','438616406','35'),(18549,'Carolina Asano Ferreira','524037966','36'),(18550,'Carolina Figulani Batista Da Silva','534614061','37'),(18551,'Carolina Milani Bertazzi','564400543','39'),(18552,'Carolina Monteiro De Oliveira','491743518','40'),(18553,'Carolina Pidori Caminada','556399328','41'),(18554,'Carolina Rosa Mendes','571055333','42'),(18555,'Caroline Batista Dos Santos Goncalves','389711550','43'),(18556,'Caroline Da Silva Lopes De Araujo','375738680','44'),(18557,'Caroline De Moura Nakashima','608793723','45'),(18558,'Caroline Dos Santos Almeida','565664876','46'),(18559,'Caroliny De Lima Damacena','553702749','48'),(18560,'Cassiane Gloria Conceicao Da Silva','541002510','49'),(18561,'Cassio Henrique Dos Santos','390643180','50'),(18562,'Caue Ilan Dantas Lima','388951576','52'),(18563,'Celia Cristina Da Silva Pedrozo','289283528','54'),(18564,'Celine Corvalan Do Carmo','531439320','55'),(18565,'Cesar Freire De Santiago','397276620','56'),(18566,'Cesar Henrique Quintino Goncalves','591165119','57'),(18567,'Chaiane Santos De Sousa','507475550','58'),(18568,'Charles Ferreira Da Silva','481535603','59'),(18569,'Charles Ferreira Da Silva Filho','508132800','60'),(18570,'Christopher Wendell Garbi','523622788','62'),(18571,'Cicero Donizete Da Silva Crima','196730119','63'),(18572,'Cindy Gabriela Ferreira Valadao','520838208','65'),(18573,'Clara Arruda','385674685','67'),(18574,'Clara Isabeli Vieira Do Nascimento','543107668','68'),(18575,'Claudia Costa De Assis','530989591','69'),(18576,'Claudiane Alexandre De Lima','20085677951','70'),(18577,'Claudio Natalino De Brito','174608834','72'),(18578,'Conrado Moreira Da Costa','586944679','73'),(18579,'Crislaine Silva De Jesus Santos','554102079','74'),(18580,'Cristian Pascoal Gomes','437521023','75'),(18581,'Cristian Ruan Santos Duarte','558123557','76'),(18582,'Cristiano Alves Da Silva','238792195','77'),(18583,'Crystoffer Messias Zeferino','586277481','78'),(18584,'Cynthia Braz Martins','574841556','79'),(18585,'Daiane Vitoria Anjos Almeida','507794904','80'),(18586,'Daiani Bonetti Donon','546613792','81'),(18587,'Daisy Vitoria Nunes Fernandes De Oliveira','391658906','82'),(18588,'Damilis Da Paixao Silva','634476798','83'),(18589,'Daniel Antonio Bastos Filho','396740716','84'),(18590,'Daniel Henrique Da Silva','399036260','85'),(18591,'Daniel Henrique Pereira Silva','571512549','86'),(18592,'Daniel Lourenco De Morais','384670738','87'),(18593,'Daniel Neri De Jesus','533014062','88'),(18594,'Daniel Ortega Prado','332172880','89'),(18595,'Daniel Pedro Soares Monteiro Da Silva','380801322','90'),(18596,'Daniel Victor Dos Santos Souza','540741486','92'),(18597,'Daniela Eloiza Da Silva','388858527','93'),(18598,'Daniela Pereira Souza','526912881','1;'),(18599,'Daniele Romani De Almeida','397176673','4;'),(18600,'Danielly Barbosa Freire','572672184','5;'),(18601,'Danielly Cerqueira De Moura','391666230','6;'),(18602,'Daniely Maria Da Silva Da Conceicao','580391103','7;'),(18603,'Danillo Marchesano Ramos Alves','400198563','8;'),(18604,'Danilo Bengevenga Clemente','398314875','9;'),(18605,'Danilo Campelo Silva','603471626','10;'),(18606,'Danilo De Andrade Oliveira','569575618','11;'),(18607,'Danilo De Oliveira Barbosa','551730286','12;'),(18608,'Danilo De Oliveira Braz','548448541','13;'),(18609,'Danilo Dessio Pereira','394355301','14;'),(18610,'Danyele Hernandez','506386685','15;'),(18611,'Dara Aparecida Arantes Sena','584409114','16;'),(18612,'Davi Custodio Beiler Santana De Souza','506903837','17;'),(18613,'Davi De Barros Pereira','520148186','18;'),(18614,'David Bruno Delamo','532143711','21;'),(18615,'David Gomes Da Silva','526625156','22;'),(18616,'David Guilherme Andriotto Goncalves','582052622','23;'),(18617,'David Moreira Da Rocha','531353837','24;'),(18618,'David Pedro De Lima','540733337','25;'),(18619,'Dayane Almeida Damaceno','571202160','26;'),(18620,'Dayane Omena Da Silva','505243052','27;'),(18621,'Dayna Lilian Figueiredo','508513297','28;'),(18622,'Debora Cantalicio Da Silva','396151735','29;'),(18623,'Debora Rodrigues Da Silva','534862950','30;'),(18624,'Debora Selma Dos Santos Arias','532155300','31;'),(18625,'Debora Silva Barcello','552494793','32;'),(18626,'Denise Alves Rodrigues','177453722','33;'),(18627,'Denise Cristina De Lima Gomes','560562925','34;'),(18628,'Denise Neves Silveira','15953838','35;'),(18629,'Deyse Duarte Silva','534204430','36;'),(18630,'Diego Almeida Mendes','526896450','38;'),(18631,'Diego Alves Gadelha','497971471','39;'),(18632,'Diogo Da Silva Caldeira','387356514','41;'),(18633,'Diogo Goncalves Cricca','56949882','42;'),(18634,'Diogo Santinelli Zuim','548010742','43;'),(18635,'Douglas Carnauba Da Silva','425459822','44;'),(18636,'Eder Alexandre Todesco','348043363','46;'),(18637,'Ediclecio De Jesus Melo','523626150','47;'),(18638,'Edilene Da Silva','322733510','49;'),(18639,'Edson Pais Filho','582833681','50;'),(18640,'Edson Victor Araujo','526384566','51;'),(18641,'Eduarda Jota De Sousa','507462737','52;'),(18642,'Eduarda Luna De Oliveira','390127991','53;'),(18643,'Eduarda Nunes Dias','605104566','54;'),(18644,'Eduarda Vitoria Padovan Drudi','561146998','55;'),(18645,'Eduardo Augusto Mano','523455811','56;'),(18646,'Eduardo Gualberto Souza','505673253','57;'),(18647,'Eduardo Harano Da Costa','553686124','58;'),(18648,'Eduardo Santos Silva','535350375','59;'),(18649,'Eduardo Scarcela Araujo','502425295','61;'),(18650,'Egle Victoria Rodrigues Magalhaes Da Silva','570093405','62;'),(18651,'Elaine Cristina Correa','473467446','63;'),(18652,'Elaine Cristina Guedes Valensoela','253901054','64;'),(18653,'Elen Camilli Oliveira Soares','565259568','65;'),(18654,'Elen Nascimento Rodrigues','500291548','66;'),(18655,'Elias Sousa Barbosa','378936116','68;'),(18656,'Elis Dos Santos Machado','56595877','69;'),(18657,'Elisa Reis Santos Cavaline','530969154','70;'),(18658,'Elisa Simioni','55315560','71;'),(18659,'Elisabete Rodrigues Dos Santos Cuba','425446116','72;'),(18660,'Elisangela Lopes De Almeida','430220637','73;'),(18661,'Eliton Marcos Mendes Pereira','50917095','74;'),(18662,'Ellen Lima Rosignolo','382990316','76;'),(18663,'Eloisa Da Silva Crivilin','505232170','77;'),(18664,'Eloisa Leal Dos Santos','575515028','78;'),(18665,'Emanoela Ribeiro Martins','389601755','79;'),(18666,'Emanoele Capitulina De Pontes Araujo','532681575','80;'),(18667,'Emanuel Queiroz Nascimento','541817760','81;'),(18668,'Emerson Dos Santos Pereira','326352612','83;'),(18669,'Emerson Vieira Da Silva','436170231','84;'),(18670,'Emilly Braga Goncalves','540229866','85;'),(18671,'Emilly Lima Da Silva','540719055','86;'),(18672,'Emilly Maria Palmeira Morais','39964507','87;'),(18673,'Emilly Zanon Dias','551072520','88;'),(18674,'Emily Cardoso Gil Gomes','584498974','1;'),(18675,'Emily Dos Santos Barreto','595432049','2;'),(18676,'Emily Gabriele Feitosa','521642565','3;'),(18677,'Emily Lima Soares','52781443','4;'),(18678,'Emily Lopes Dos Santos','54426650','5;'),(18679,'Emily Vitoria Oliveira Morais','541007993','6;'),(18680,'Emmanuel Rocha Archilla','536728902','7;'),(18681,'Emmanuel Vinicius Marques Da Silva','575605923','8;'),(18682,'Emmily Vitoria De Souza Pedro','556474624','9;'),(18683,'Emylle Nalanda De Freitas Silva','605693869','10;'),(18684,'Emylle Sampaio De Sousa','386142579','11;'),(18685,'Enrico Goncalves Bueno','396729010','12;'),(18686,'Enzo Paschuini De Sousa','593920120','13;'),(18687,'Erica Rodrigues Martins','570463993','14;'),(18688,'Erick Arejano Gomes Batista','575041018','15;'),(18689,'Erick De Santana','520847064','16;'),(18690,'Erick Fabricio Oliveira Maciel','577607650','17;'),(18691,'Erick Henrique Feijo De Oliveira','388663170','19;'),(18692,'Erick Hernandes Da Silva','538934475','20;'),(18693,'Erika Maria Spessotto Dos Santos','573406297','21;'),(18694,'Erileia Soares De Sousa','53946224','22;'),(18695,'Erivania Maria Da Silva','527028642','23;'),(18696,'Eryk De Mesquita Lopes','389623635','24;'),(18697,'Estella Amabile Gavasi Amaral','551058638','27;'),(18698,'Estella Pivetta Do Amaral','640095707','28;'),(18699,'Ester De Souza Fernandes','545292591','29;'),(18700,'Ester Santos De Jesus','561193903','30;'),(18701,'Estevao Guimel Oliveira Rodrigues','572272649','31;'),(18702,'Esther Maciel De Souza Santos','388000995','32;'),(18703,'Etienne Cristina Da Luz Ferreira De Lima','522207327','33;'),(18704,'Eunara Adriany Silva','582908425','34;'),(18705,'Evandro De Araujo','305753502','35;'),(18706,'Evandro Fina Ramos','387349017','36;'),(18707,'Evellyn Gomes Da Silva','52712557','37;'),(18708,'Evelyn Andrade Do Nascimento','380403407','38;'),(18709,'Everton Da Silva Ferreira','419855646','40;'),(18710,'Ewellyn Sardinha Sodre','54839572','41;'),(18711,'Fabia Aperacida Da Silva','480575137','42;'),(18712,'Fabio Alves Bezerra','321281883','43;'),(18713,'Fabio Augusto Andrade De Sousa','582797858','44;'),(18714,'Fabio Cachone De Oliveira Silva','484906136','45;'),(18715,'Fabio Henrique Rodrigues Da Silva','394352683','46;'),(18716,'Fabio Maganha Moreira','56040900','47;'),(18717,'Fabio Yamashita Alves','572131574','49;'),(18718,'Fabio Yuzo Matoba','304017693','50;'),(18719,'Fabricio Genoveva Teixeira','520984638','51;'),(18720,'Fabricio Siqueira De Sousa','595860783','52;'),(18721,'Fabricio Thomaz Barbosa Da Silva','53392716','53;'),(18722,'Fagner Valdivino Ferreira','292899683','54;'),(18723,'Fatima Pinheiro De Godoi','590830089','55;'),(18724,'Felipe Basilio Marques','384353629','57;'),(18725,'Felipe Da Silva Alves','391503972','58;'),(18726,'Felipe De Paula Oliveira','503634177','60;'),(18727,'Felipe Lopes Alcantara','547217882','63;'),(18728,'Felipe Mamelli','581704277','64;'),(18729,'Felipe Mariano Berti','530204320','65;'),(18730,'Felipe Marques Rodrigo','381266357','66;'),(18731,'Felipe Moraes De Oliveira','545392093','67;'),(18732,'Felipe Nelli Martins','577392864','68;'),(18733,'Felipe Queiroz De Sousa','50600949','69;'),(18734,'Felipe Rampani De Oliveira','579950724','70;'),(18735,'Felipe Rodrigues Peixoto Da Silva','541051313','71;'),(18736,'Felipe Sousa Domingos','392816830','72;'),(18737,'Fernanda Cavalcante De Sa','525311920','74;'),(18738,'Fernanda Cavalcante De Souza Marques','572557681','75;'),(18739,'Fernanda Costa','508597298','76;'),(18740,'Fernanda De Sa Contin','581322332','77;'),(18741,'Fernanda Fonseca De Oliveira','392125407','78;'),(18742,'Fernanda Garcia Da Silva','574672667','79;'),(18743,'Fernanda Lozano Pradelli','642472683','80;'),(18744,'Fernanda Martins Ferreira','52861695','81;'),(18745,'Fernanda Melo Ventura','507031854','82;'),(18746,'Fernanda Miranda Okazaki','397894521','83;'),(18747,'Fernanda Neves Miranda','538267616','84;'),(18748,'Fernanda Vieira Pereira','394833053','2;'),(18749,'Fernando Candido Fianchi','521647666','3;'),(18750,'Fernando Dos Santos Alves','504818892','4;'),(18751,'Flavia Pereira Da Cruz','129988180','5;'),(18752,'Flavio Barroso Da Silva','481802058','6;'),(18753,'Flavio Vieira Diniz Junior','565598960','7;'),(18754,'Francielle Goncalves Teixeira','386138930','8;'),(18755,'Franciely Sarmento Da Silva','507095089','9;'),(18756,'Francine Milanes Barbosa','592916080','10;'),(18757,'Francisca Micheli Dasilva Teles','541616389','11;'),(18758,'Francisco Paulino Da Silva Neto','339407300','12;'),(18759,'Gabriel Adriano Dos Santos','602144966','13;'),(18760,'Gabriel Alexandre Camelo Chavin','598429207','14;'),(18761,'Gabriel Alves Silva','395232594','15;'),(18762,'Gabriel Amorim Silva','399390893','16;'),(18763,'Gabriel Andrade Sousa','502907320','17;'),(18764,'Gabriel Antunes Rodrigues','547224849','18;'),(18765,'Gabriel Araujo','526390244','19;'),(18766,'Gabriel Barros De Carvalho','539589111','21;'),(18767,'Gabriel Bense Ribeiro','572056916','22;'),(18768,'Gabriel Bovo Carvalho','575058924','23;'),(18769,'Gabriel Castro Dias','396217219','24;'),(18770,'Gabriel Cavalcante Alvares','572040568','25;'),(18771,'Gabriel Cobo Figueiro','601662714','26;'),(18772,'Gabriel Da Cunha Lisboa','383963278','27;'),(18773,'Gabriel Da Silva Carmo','443433835','28;'),(18774,'Gabriel Da Silva Carvalho','388238720','29;'),(18775,'Gabriel Daisuke Matsubara','376666171','31;'),(18776,'Gabriel De Azevedo Moreira','556972235','32;'),(18777,'Gabriel De Jesus Quintao','385627221','33;'),(18778,'Gabriel De Oliveira Nascimento','500025022','34;'),(18779,'Gabriel De Paula Santos','509344483','35;'),(18780,'Gabriel De Souza Ribeiro','594832111','36;'),(18781,'Gabriel De Souza Santana','06510651974','37;'),(18782,'Gabriel Dias Silva','395234657','38;'),(18783,'Gabriel Dos Santos','570711757','39;'),(18784,'Gabriel Dos Santos Luz','587276551','40;'),(18785,'Gabriel Felipe Da Silva','504834538','41;'),(18786,'Gabriel Fernander Blimbliem','543116542','42;'),(18787,'Gabriel Henrique Costa Silva','552510063','43;'),(18788,'Gabriel Henrique Magaton','501500534','44;'),(18789,'Gabriel Lacerda Pereira','543592649','45;'),(18790,'Gabriel Leme Nunes','488439267','46;'),(18791,'Gabriel Leonardi Gomes','548446921','47;'),(18792,'Gabriel Lima De Lana Pedrosa','503637683','48;'),(18793,'Gabriel Machado Da Costa','584111540','49;'),(18794,'Gabriel Mari Salles','503580200','50;'),(18795,'Gabriel Maximo De Oliveira','570286232','51;'),(18796,'Gabriel Monteiro De Santana','399708996','52;'),(18797,'Gabriel Padilha De Siqueira','382081092','53;'),(18798,'Gabriel Pereira Da Silva','505230630','54;'),(18799,'Gabriel Pereira Dos Santos','393737779','55;'),(18800,'Gabriel Portela Moreira','524043620','56;'),(18801,'Gabriel Rodrigues Alves Nunes','545832202','57;'),(18802,'Gabriel Rodrigues Martins','538943130','58;'),(18803,'Gabriel Sa Correa Da Silva','548006969','59;'),(18804,'Gabriel Santos','379260750','60;'),(18805,'Gabriel Santos Burger','576390719','61;'),(18806,'Gabriel Santos De Cantalice','522739672','62;'),(18807,'Gabriel Siqueira De Andrade','559147405','63;'),(18808,'Gabriel Souza Neves','388979677','65;'),(18809,'Gabriela Almeida Peres','551957293','67;'),(18810,'Gabriela Bonilha Irpelli','383217313','68;'),(18811,'Gabriela Chaves De Oliveira Silva','524676811','69;'),(18812,'Gabriela Da Silva Beserra','565448857','70;'),(18813,'Gabriela De Lima Damamcena','553700650','71;'),(18814,'Gabriela De Sousa Monteiro','527559740','72;'),(18815,'Gabriela Feereira Da Silva','559723052','74;'),(18816,'Gabriela Fernanda Dos Santos Ferreira','636195892','75;'),(18817,'Gabriela Fernanda Mendes','563738339','76;'),(18818,'Gabriela Ferreira Dos Santos','533026118','77;'),(18819,'Gabriela Goncalves Farias','601133493','78;'),(18820,'Gabriela Goncalves Reis','551058330','79;'),(18821,'Gabriela Lopes Da Silva','383807293','80;'),(18822,'Gabriela Marcos De Freitas','580215120','82;'),(18823,'Gabriela Morais Da Silva','523071024','83;'),(18824,'Gabriela Moreira Dos Santos','539708793','1;'),(18825,'Gabriela Paiva Dos Santos','551071254','2;'),(18826,'Gabriela Petroleo Ferreira','528610818','3;'),(18827,'Gabriela Rodrigues De Pinho','551956513','4;'),(18828,'Gabriela Romaneto Ribeiro','558070395','5;'),(18829,'Gabriela Romanini Silva','507085942','6;'),(18830,'Gabriela Rosa Franca Dos Santos','386137742','7;'),(18831,'Gabriela Santos Cenciani','504818776','8;'),(18832,'Gabriela Santos Portela','392807932','9;'),(18833,'Gabriele Alves Levy','386376712','11;'),(18834,'Gabriele Fernandes Viveiros','577462994','12;'),(18835,'Gabriella Aparecida Ormelli De Medeiros','521629767','13;'),(18836,'Gabriella Do Carmo Pereira','522762451','14;'),(18837,'Gabriella Oliveira Freitas','387349923','15;'),(18838,'Gabriella Zambelli Zigaib','605281567','16;'),(18839,'Gabrielle Batista Rocha','520313501','17;'),(18840,'Gabrielle Cristina Dos Santos','536162943','18;'),(18841,'Gabrielle Cristina Lebedeff','536878456','19;'),(18842,'Gabrielle Fonseca Theodoro Da Silva','385688246','20;'),(18843,'Gabrielle Silva Gomes','57707989','21;'),(18844,'Gabrielli De Souza Sa','523644073','22;'),(18845,'Gabrielly Araujo Alves','605904777','23;'),(18846,'Gabrielly Neves','627836896','24;'),(18847,'Gabrielly Ribeiro Dos Santos','57860100','25;'),(18848,'Gabriely Vasconcellos Goncalves','398300896','27;'),(18849,'Geanny Yassuda De Oliveira','505591455','28;'),(18850,'Geovana Nogueira Palmeira','577581144','29;'),(18851,'Geovanna Da Silva Moura','388964212','30;'),(18852,'Geovanna Ferrari Alves','391929318','32;'),(18853,'Geovanna Hellen Souza De Oliveira','601056401','33;'),(18854,'Geovanna Lopes Da Silva','542286671','34;'),(18855,'Geovanna Nunes Miranda','573118784','35;'),(18856,'Geovanna Rodrigues De Oliveira','541043353','36;'),(18857,'Gerson Rodrigues Pereira','474423074','38;'),(18858,'Gerson Sergio Santana','188636900','39;'),(18859,'Geruza Silva De Paula','376656025','40;'),(18860,'Gian Lucca Zutin Quaglio','576208048','41;'),(18861,'Gianlucca Da Silva Souza','548399268','42;'),(18862,'Giovana Acsa Bassi Do Santo','584465002','43;'),(18863,'Giovana Alves Melo','380220581','44;'),(18864,'Giovana Aparecida Mendes','392135036','45;'),(18865,'Giovana Barbosa Torrente','547734050','46;'),(18866,'Giovana Brito Rocha','540213342','47;'),(18867,'Giovana De Andrade Pestana','547209927','48;'),(18868,'Giovana Dos Santos Rodrigues','599081820','49;'),(18869,'Giovana Facundo Carneiro','389610276','50;'),(18870,'Giovana Lyssa Passos De Souza','507106805','52;'),(18871,'Giovana Zaboto De Jesus','534865744','54;'),(18872,'Giovani Araujo Nardi','521397339','55;'),(18873,'Giovani Pavan','381882949','56;'),(18874,'Giovanna Alves Santana','609286237','57;'),(18875,'Giovanna Andrade Pinheiro','539749941','58;'),(18876,'Giovanna Assoni Rodrigues Soares','533554755','59;'),(18877,'Giovanna Avila Alves Rodrigues','385670102','60;'),(18878,'Giovanna Cavalcanti Nunes','389617842','61;'),(18879,'Giovanna Cremonezi Vianna','38533915','63;'),(18880,'Giovanna D. Sousa Da Silva','541379628','64;'),(18881,'Giovanna Da Silva Savioli','578893691','65;'),(18882,'Giovanna Faquinetti Da Rocha','543844535','66;'),(18883,'Giovanna Felix Macedo','572561763','67;'),(18884,'Giovanna Ferrari Trevisan','582492567','68;'),(18885,'Giovanna Fonseca Do Nascimento','39333188','70;'),(18886,'Giovanna Gamboa De Melo','569748422','71;'),(18887,'Giovanna Garcia Marcos','395702586','72;'),(18888,'Giovanna Garcia Pereira','527320729','73;'),(18889,'Giovanna Gomes Dos Santos','568991461','74;'),(18890,'Giovanna Guadagnini Lima','57779257','75;'),(18891,'Giovanna Leticia Tavares Rodrigues','629288707','76;'),(18892,'Giovanna Martha Silva Pohli','633937423','78;'),(18893,'Giovanna Micaely Lima Godinho','572020041','79;'),(18894,'Giovanna Rodrigues Da Silva','443349344','81;'),(18895,'Giovanna Rodrigues Luz','531941851','82;'),(18896,'Giovanna Romao Caires Silva','568113822','83;'),(18897,'Giovanna Santos','540218170','84;'),(18898,'Giovanna Singh Dos Santos','590673105','86;'),(18899,'Giovanna Skorupa Dos Santos','557025898','87;'),(18900,'Giovanna Venancio Fidelis De Sousa','393467715','88;'),(18901,'Giovanna Vieira De Almeida Barreto Da Silva','558001269','89;'),(18902,'Giovanna Yumi Moreira Kina','381855132','90;'),(18903,'Giovanna Zulim Estradiote','505456515','91;'),(18904,'Giovanni Capeli Prado De Almeida','507486316','92;'),(18905,'Giovanni Henrique Bezerra','391942608','93;'),(18906,'Giovanni Lino Partezani','378150844','94;'),(18907,'Giovanni Rodrigues Giusti','505459498','95;'),(18908,'Giovanni Spessotto Sartori','553690681','97;'),(18909,'Gisele Pereira Arruda','386128236','98;'),(18910,'Giselle Santino Do Nascimento','533036847','99;'),(18911,'Gislane Da Costa Silva','651960745','100;'),(18912,'Giulia Antunes Rodrigues','52273828','1;'),(18913,'Giulia Carlos Chernioglo','395711277','2;'),(18914,'Giulia Caroline Pereira','394352907','3;'),(18915,'Giulia De Souza Bispo','556730550','4;'),(18916,'Giulia Galbiati Figueiredo De Oliveira','58183546','5;'),(18917,'Giulia Leal De Lima','52803742','6;'),(18918,'Giulia Mariah Soares','5574485338','7;'),(18919,'Giulia Vieira Nascimento','52210194','8;'),(18920,'Giulia Vitoria Cardoso Silva Romao','39995170','9;'),(18921,'Giuliana Zuza Cegolin','55141949','10;'),(18922,'Giullia Vianna Galera','54529861','11;'),(18923,'Giulliana Morais','378035642','12;'),(18924,'Gleica Rodrigues De Souza','39829849','14;'),(18925,'Gleyce Amorim De Sousa','383323538','15;'),(18926,'Gleyner Gabriel De Paula Ferreira','381266849','16;'),(18927,'Graziela Pereira De Lima','556430335','17;'),(18928,'Graziele De Moraes Cavalcante Da Silva','386143493','18;'),(18929,'Grazielly Da Silva Figueredo','579125038','19;'),(18930,'Guilherme Andrei Araujo Clemente','409221892','20;'),(18931,'Guilherme Antonio Alves Felix','383320811','21;'),(18932,'Guilherme Barbosa Pereira Santos','522343247','23;'),(18933,'Guilherme Bozi Ferreira','59736678','25;'),(18934,'Guilherme Bruno Oliveira De Araujo','505234245','26;'),(18935,'Guilherme Cavalcanti Ferretti','586859718','27;'),(18936,'Guilherme Crepaldi Da Silva','580005793','28;'),(18937,'Guilherme Dal Cortivo','588972472','29;'),(18938,'Guilherme De Carvalho Costa','505457969','30;'),(18939,'Guilherme De Francisco Rodrigues','505576454','31;'),(18940,'Guilherme De Oliveira Ferreira','524647872','32;'),(18941,'Guilherme De Souza Ferreira','567904842','33;'),(18942,'Guilherme Felipe Gois Santos','490246187','34;'),(18943,'Guilherme Ferreira Santos \'','390297422','35;'),(18944,'Guilherme Freitas Lopes','558192026','36;'),(18945,'Guilherme Gamba Antonio','540735425','37;'),(18946,'Guilherme Gomes Silva','39905283','38;'),(18947,'Guilherme Maciel Goncalves','62552164','39;'),(18948,'Guilherme Martins Neris','526891014','40;'),(18949,'Guilherme Martins Sales De Oliveira','387367275','41;'),(18950,'Guilherme Moreira Leite Da Silva','590562484','42;'),(18951,'Guilherme Mourao Alves','53215219','43;'),(18952,'Guilherme Nascimento Galvao Campos','376646196','44;'),(18953,'Guilherme Nunes Siqueira','397815086','45;'),(18954,'Guilherme Pilissari Eggert','379630527','46;'),(18955,'Guilherme Pinho Souza','559146954','47;'),(18956,'Guilherme Ramos Dos Santos','507469239','1;'),(18957,'Guilherme Ribeiro Barbosa','502881197','2;'),(18958,'Guilherme Rocha Matos','388335373','3;'),(18959,'Guilherme Rodrigues Souza','378353068','4;'),(18960,'Guilherme Santos Costa Carrinho','561325524','5;'),(18961,'Guilherme Santos Floriano Da Silva','522327084','6;'),(18962,'Guilherme Silva Sena','548009156','7;'),(18963,'Guilherme Valentim Oliveira','527551648','8;'),(18964,'Guilherme Vinicius De Carvalho Siqueira','584392576','9;'),(18965,'Gustavo Alves De Azevedo','385691026','10;'),(18966,'Gustavo Araujo Costa','538274785','11;'),(18967,'Gustavo Araujo Nunes Da Silva','523430097','12;'),(18968,'Gustavo Arcante Magalhaes Alves','598637308','13;'),(18969,'Gustavo Arthur Da Silva Pereira','505588626','14;'),(18970,'Gustavo Bastos Dos Santos','390308304','15;'),(18971,'Gustavo Cavalheiro Simoes','527182515','16;'),(18972,'Gustavo Da Silva Santos','584119379','17;'),(18973,'Gustavo Da Silva Soares','390291535','18;'),(18974,'Gustavo Dos Santos Carrera','391646710','19;'),(18975,'Gustavo Fagundes De Souza','58255942','20;'),(18976,'Gustavo Faquinetti','538928268','21;'),(18977,'Gustavo Francisco De Paula','389607599','22;'),(18978,'Gustavo Hideki De Oliveira Yokoyama','141027409','23;'),(18979,'Gustavo Leopoldino Da Silva','520125174','24;'),(18980,'Gustavo Lisboa De Viveiros','52307136','25;'),(18981,'Gustavo Martini','529179222','26;'),(18982,'Gustavo Martins Da Silva','579831899','27;'),(18983,'Gustavo Martins Dias','597626364','28;'),(18984,'Gustavo Medrado Pacheco','390231812','29;'),(18985,'Gustavo Menezes Fernandes','395974562','30;'),(18986,'Gustavo Nascimento Da Silva','570031977','31;'),(18987,'Gustavo Pacini Da Silva','554229237','32;'),(18988,'Gustavo Patricio Rosa De Sousa','608648139','33;'),(18989,'Gustavo Ribeiro Barbosa','502876621','34;'),(18990,'Gustavo Schuindt De Oliveira','539267703','36;'),(18991,'Gustavo Silva Morgado','537739026','37;'),(18992,'Gustavo Ziemens De Camargo','563026066','38;'),(18993,'Gusthavo Marcello Casarin','376282605','39;'),(18994,'Gyovana Antonio Da Silva','569701855','40;'),(18995,'Gyovanna Soares De Souza','58638571','41;'),(18996,'Hagatha Toledo Brandao','570716433','42;'),(18997,'Handro Silva Navas Lourenco','394175517','43;'),(18998,'Hayana Lorena Petinati','601164027','44;'),(18999,'Hayda Rodrigues Dos Santos','395956833','45;'),(19000,'Hebert Nascimento Da Costa','565096813','46;'),(19001,'Helena Akiko Yamada','424873850','47;'),(19002,'Helida Xavier Coutinho','17172291','1;'),(19003,'Hellen Bianca Soares Da Silva','607992311','2;'),(19004,'Hellen Fernanda Guicioli Do Nascimento','569479290','3;'),(19005,'Heloisa Bellisoni De Freitas','387131656','4;'),(19006,'Heloisa Dos Santos Lima Gasparino','384940076','5;'),(19007,'Heloisa Dos Santos Volpini','540523203','6;'),(19008,'Heloisa Franco Zamforin','545843030','7;'),(19009,'Heloisa Silva E Ferreira','563538880','9;'),(19010,'Heloisa Sousa Reis','386602906','10;'),(19011,'Hemily Lidia Rodrigues Aragao','507078706','11;'),(19012,'Hendryll Luiz Rodrigues De Brito Silva','528630581','12;'),(19013,'Henrique Alexsandro Sales Pessoa','553151289','13;'),(19014,'Henrique Cardoso Fava','58432523','15;'),(19015,'Henrique Cavalheiro Simoes','52718231','16;'),(19016,'Henrique De Lima Martins','1251933','17;'),(19017,'Henrique Gabriel De Almeida Mendes','378450177','18;'),(19018,'Henrique Mendes Da Silva','395685266','19;'),(19019,'Henrique Prada Trindade','529159430','21;'),(19020,'Henrique Valino Nakamura','55168706','22;'),(19021,'Herika Tavares Silva Santos','546499879','23;'),(19022,'Higor Butura Scaramal Da Silva','542665396','25;'),(19023,'Higor Cardoso Da Silva','534612623','26;'),(19024,'Higor Ferreira','504821234','27;'),(19025,'Hillary Ingrid Cardoso Da Silva','3883453539','28;'),(19026,'Hingrid Oliveira Da Silva','628377347','29;'),(19027,'Homero Pereira De Souza Filho','571544915','30;'),(19028,'Hugo Braz Da Silva','506202689','31;'),(19029,'Hugo Siva Mesquita\'','390612613','32;'),(19030,'Hugo Tiago Teixeira Marques','476264406','33;'),(19031,'Humberto Carlos Cardoso Da Silva','399957935','34;'),(19032,'Humberto Vitalino Da Silva','573919859','35;'),(19033,'Hyam Goncalves De Araujo','547206896','36;'),(19034,'Hyasmin Aparecido Rodrigues','544498008','37;'),(19035,'Iago Da Silva Wefer','385626320','39;'),(19036,'Ian Hayala Dos Santos','384353599','40;'),(19037,'Ianca Jennifer Aguiar Da Fonseca','1238027','41;'),(19038,'Iara Lima Macedo','397193683','42;'),(19039,'Iara Machado Guarnieri','566120975','43;'),(19040,'Iasmim Paulino De Almeida','375210659','44;'),(19041,'Iasmin Carneiro De Oliveira','386519444','45;'),(19042,'Ibernon Bispo Dos Santos','465228057','46;'),(19043,'Icaro Barros Martineli','443349770','47;'),(19044,'Igor Alves Dos Santos','521628507','48;'),(19045,'Igor Celestino Ramos','387345279','49;'),(19046,'Igor Ferreira Waibena','553144583','50;'),(19047,'Igor Policarpo Adami','532410531','51;'),(19048,'Igor Santos Botelho','384692564','52;'),(19049,'Igor Vital','382995454','53;'),(19050,'Ilkson Reis Marques De Lira Junior','585431383','54;'),(19051,'Ingrid Catarina Suliman Grudzinski','552781927','55;'),(19052,'Ingrid Ellen Silva Pinheiro','53303212','56;'),(19053,'Ingrid Gregorio Dos Santos','375070175','57;'),(19054,'Ingrid Heidemann','584317104','58;'),(19055,'Ingrid Lima Da Silva','565985462','59;'),(19056,'Ingrid Pinheiro Costa','392125067','60;'),(19057,'Ingrid Reginni Timm','577501458','61;'),(19058,'Ingrid Sakura Higa Ferreira','52466027','62;'),(19059,'Ingryd Goulart Da Silva','539473522','64;'),(19060,'Iolanda Gasparetti Vargas','579220473','66;'),(19061,'Iones De Almeida Gotardo','656554198','67;'),(19062,'Iris De Oliveira Campos','551969840','68;'),(19063,'Isaac Coaraci Pereira Do Nascimento','549567240','69;'),(19064,'Isaac Soares Da Silva','605939172','71;'),(19065,'Isabel Bertelli Vidal','572431934','72;'),(19066,'Isabela Dias Oliveira','388358129','74;'),(19067,'Isabela Ferreira','392750880','75;'),(19068,'Isabela Ferreira De Sousa','594235480','76;'),(19069,'Isabela Iesi Do Nascimento','585166572','77;'),(19070,'Isabela Kethely Da Silva Gimenes Ramos','544609712','78;'),(19071,'Isabela Lima Lacerda Dos Santos','522325919','79;'),(19072,'Isabela Lima Nascimento','538397792','80;'),(19073,'Isabela Nunes Mecenero','562746481','81;'),(19074,'Isabela Rodrigues Silva','609014134','82;'),(19075,'Isabela Salazar Da Silva','546504838','83;'),(19076,'Isabela Santos Silva','523638322','84;'),(19077,'Isabela Silva Porto','536695052','85;'),(19078,'Isabele Dias Dos Santos','548440815','86;'),(19079,'Isabele M Mousse','623203133','87;'),(19080,'Isabella Alves Borges De Jesus','56581161','89;'),(19081,'Isabella Alves De Queiroz Moura','502520486','90;'),(19082,'Isabella Cordeiro De Oliveira','376968370','93;'),(19083,'Isabella Costa Leone','604370738','94;'),(19084,'Isabella De Souza Rodrigues','20531956','95;'),(19085,'Isabella Gonzaga Guimaraes','396645021','96;'),(19086,'Isabella Lara Dos Santos Souza','604492194','97;'),(19087,'Isabella Marques Santos','55807313','98;'),(19088,'Isabella Martins Del Valle','607672857','99;'),(19089,'Isabella Martins Dos Santos','571028901','100;'),(19090,'Isabella Muniz Anunciato De Menezes','523274774','101;'),(19091,'Isabella Ostolin Rodrigues Domingos','577894006','102;'),(19092,'Isabella Simplicio Vieira','546407353','104;'),(19093,'Isabelle De Oliveira Moura','569011954','105;'),(19094,'Isabelle Oliveira Lopes','556329454','106;'),(19095,'Isabelle Teixeira Ozorio De Oliveira','388008775','107;'),(19096,'Isabelli De Oliveira Fernandes','551076720','108;'),(19097,'Isac Lucca Trigueiro Lauriano','622521317','109;'),(19098,'Isadhora Oliveira Figueiredo Rosario','533312279','110;'),(19099,'Luna Faustino Lima','52163815','111;'),(19100,'Nohan Esteves Roldao','372579636','112;'),(19101,'Raphael Gomes Da Silva','38863831','113;'),(19102,'Sebastian Rocha Monteiro','574321688','114;'),(19103,'Yan Daniel Oliveira Pandino','429224989','115;'),(19104,'Isabelli Rodrigues Magalhaes','627679249','1;'),(19105,'Isabelly Jesus De Araujo','55368534','2;'),(19106,'Isabelly Neves Pires','566285046','4;'),(19107,'Isabely Oliveira De Moura','399037196','5;'),(19108,'Isadora Carvalho Santos','504847442','6;'),(19109,'Isadora Soares Caetano','560037491','7;'),(19110,'Isaque De Sousa Pinheiro','647391235','8;'),(19111,'Isaquer Bertucci Santos','550477081','10;'),(19112,'Isoldenir Carlene Cezario De Marchi','38150539','11;'),(19113,'Israel Santos De Almeida','550762899','12;'),(19114,'Isys Nathalie Barreto','559162601','13;'),(19115,'Italo Piaui Dos Santos','544265634','14;'),(19116,'Iury Hermon Souza','387370481','15;'),(19117,'Ivan Silva De Lima','557984294','16;'),(19118,'Ives Morais Braga','505459840','17;'),(19119,'Iza Maria Freitas De Lima','539444054','18;'),(19120,'Izabela Bellini Lourenco','583166131','19;'),(19121,'Izabella Brandao De Lima','532832619','21;'),(19122,'Izabella Sayemi Carmello','504848057','22;'),(19123,'Izabelly De Souza Aleixo','60341137','23;'),(19124,'Izabelly Morais Bramont De Azevedo','545099973','24;'),(19125,'Jacqueline Escobar De Souza','401363508','25;'),(19126,'Jacqueline Regina Santos','530688220','26;'),(19127,'Jad Ellen Vieira Maria','55172304','27;'),(19128,'Jade Maria Alves Farias','397546798','28;'),(19129,'Jailton De Jesus Barbosa','482224368','31;'),(19130,'Jair Sales Fernandes Da Silva','642917085','32;'),(19131,'Jamille Mauricio Dos Santos','562869207','34;'),(19132,'Jamyres Muniz De Souza','576897681','35;'),(19133,'Janaina Karine Alves De Jesus','560262721','36;'),(19134,'Janaina Pereira Da Silva','558032011','38;'),(19135,'Janaina Vasconcelos Constante','567204212','39;'),(19136,'Jaqueline Almeida Santos','535901008','41;'),(19137,'Jaqueline De Souza Gomes','381092562','42;'),(19138,'Jaqueline Gordillo','378826244','43;'),(19139,'Jaqueline Helena Nascimento','523424905','44;'),(19140,'Jaqueline Lima Santana','375422249','45;'),(19141,'Jaqueline Lopes','522580348','46;'),(19142,'Jaqueline Moura Santos','388341361','47;'),(19143,'Jaqueline Provvidenti Silva','390658698','48;'),(19144,'Jefferson Pivetta','492080811','49;'),(19145,'Jeniffer Mendes Da Silva','502436633','50;'),(19146,'Jeniffer Silva Oliveira','386121199','51;'),(19147,'Jennifer Christina Dos Santos Silva','52861714','52;'),(19148,'Jennifer Kelly Carneiro De Araujo Dos Santos','533151776','53;'),(19149,'Jennifer Nicoli Oliveira Bernal','396221816','54;'),(19150,'Jessica Catarina Benedita De Melo','595290899','56;'),(19151,'Jessica Erica Da Silva Alencar','576955255','57;'),(19152,'Jessica Ortiz Yapura','380881445','58;'),(19153,'Jessica Reis Da Silva','380092049','59;'),(19154,'Jessyca Gomes Dos Santos','633554571','60;'),(19155,'Jheffini Rocha Monteiro','551065953','61;'),(19156,'Jheniffer Elisabete Estevam De Souza','600682730','62;'),(19157,'Jhennifer Bernardino De Oliveira','520126452','63;'),(19158,'Jheovana Marquete','544894613','64;'),(19159,'Jhian Carlos Soares Novaes','586361376','65;'),(19160,'Jhonatan Mateus Roque De Oliveira','499205650','66;'),(19161,'Joao Anthony Araujo Pinto','389146730','68;'),(19162,'Joao Augusto De Oliveira Fogo','385699542','69;'),(19163,'Joao Cleber Silva Rodrigues','588041774','70;'),(19164,'Joao Gabriel Goulart Da Silva','539473534','71;'),(19165,'Joao Henrique Silveira Da Silva','551961065','72;'),(19166,'Joao Luiz Goncalves','551065047','73;'),(19167,'Joao Otavio Rosa Cavalcanti','572164142','74;'),(19168,'Joao Paulo Dos Santos Silva','581975169','75;'),(19169,'Joao Pedro Amaral Freire','524368958','77;'),(19170,'Joao Pedro Gomes Da Silva','390310372','78;'),(19171,'Joao Pedro Martins Da Silva Alves','56940874','79;'),(19172,'Joao Pedro Olimpio','505074539','80;'),(19173,'Joao Pedro Siqueira','542650290','81;'),(19174,'Joao Victor Alvares De Brito','561425255','82;'),(19175,'Joao Victor Alves Siqueira Rissi','587227199','83;'),(19176,'Joao Victor Da Cruz Finotti','528896155','84;'),(19177,'Joao Victor De Morais Lima','562363944','85;'),(19178,'Joao Victor Ferreira Reis','396730796','86;'),(19179,'Joao Victor Leite Santos','624157726','87;'),(19180,'Joao Victor Menarbino Da Silva','52097797','89;'),(19181,'Joao Victor Silva Rosa','382834495','90;'),(19182,'Joao Vitor Da Costa Melo','538111549','91;'),(19183,'Joao Vitor Da Silva','651746176','92;'),(19184,'Joao Vitor Pombeiro Mogi','532391196','93;'),(19185,'Joao Vitor Ramos Marliere','544742643','94;'),(19186,'Joao Vitor Santos Muricy','391048600','95;'),(19187,'Joas Camargo Da Silva','642105182','96;'),(19188,'Joas Nascimento Da Silva','1416455','97;'),(19189,'Joel Stoppa Dos Santos','559325265','98;'),(19190,'Johnny Gabriel Santana De Oliveira','568957067','100;'),(19191,'Joice De Souza Oliveira','549305786','102;'),(19192,'Jonas Antonio Da Silva Nascimento','593474478','103;'),(19193,'Jonas Vaci Da Cruz','543127011','104;'),(19194,'Jonatas Alves Rodrigues','52930952','105;'),(19195,'Jonatas Fernandes Andrade','381858236','106;'),(19196,'Jonathan De Oliveira Alves Bezerra','53298951','107;'),(19197,'Jonathan Pereira Gomes','583175041','108;'),(19198,'Jonathans Kalel Viegas Santos','503975436','109;'),(19199,'Jorge Henrique Silva De Sousa','556488416','110;'),(19200,'Jose Carlos De Campos Neto','396661658','111;'),(19201,'Jose Fernandes Camargo Da Silva','595895505','112;'),(19202,'Jose Gabriel Teixeira Reis Da Silva','594352204','113;'),(19203,'Jose Roberto Galdino Serra','504821763','114;'),(19204,'Joyce Da Silva Almeida','375818947','115;'),(19205,'Joyce De Souza Messias','627926514','1;'),(19206,'Joyce Ribeiro De Oliveira','388966038','2;'),(19207,'Juan Carlos Ruiz','472176390','3;'),(19208,'Juan Monteiro Camargo Da Silva','587729375','4;'),(19209,'Juan Pablo Moreira','570198501','5;'),(19210,'Juan Ricardo Borba','395227690','7;'),(19211,'Juan Rodrigues Cardoso De Jesus','586033129','8;'),(19212,'Juan Victor Barbosa Duplas','529795371','9;'),(19213,'Julia Andrade Damasseno','536718283','10;'),(19214,'Julia Azevedo De Sa Nunes','587376612','11;'),(19215,'Julia Benedini Calister','528401919','12;'),(19216,'Julia Blanco Justi','503635017','13;'),(19217,'Julia Certorio Pereira','561311031','15;'),(19218,'Julia De Oliveira Cavalcante','553680651','16;'),(19219,'Julia Dias Cunha','555128118','17;'),(19220,'Julia Dos Santos Mendes De Lisboa','53945445','18;'),(19221,'Julia Dos Santos Silva','522176181','19;'),(19222,'Julia Favarao Florindo','564855416','20;'),(19223,'Julia Fernandes Wasques','530983564','21;'),(19224,'Julia Gabriela Murdiga Gondim','505055260','22;'),(19225,'Julia Hikari Kunihositi Kurahara','502424825','23;'),(19226,'Julia Lisboa Ramacho De Souza','501813536','24;'),(19227,'Julia Lopes Almeida Satolo','395702392','25;'),(19228,'Julia Lucia Silva De Araujo','393756221','26;'),(19229,'Julia Martins Costa','385698331','27;'),(19230,'Julia Matos Da Silva','522795742','28;'),(19231,'Julia Mendes Cruz','382380678','29;'),(19232,'Julia Mikelly De Almeida','509171503','30;'),(19233,'Julia Morales Carletti','63005622','31;'),(19234,'Julia Nalesso','381589523','32;'),(19235,'Julia Oliveira Costa De Souza','504006381','34;'),(19236,'Julia Pascoaleto Araujo','536594405','35;'),(19237,'Julia Quintino Da Silva','388950250','36;'),(19238,'Julia Rosa Zanelato','382993925','37;'),(19239,'Julia Silva Gomes Faria','592264804','39;'),(19240,'Julia Stephanie Teixeira Alvim','656315593','40;'),(19241,'Julia Teixeira Reis Da Silva','594352885','41;'),(19242,'Julia Vitoria Da Cunha Colucci','580486606','42;'),(19243,'Julia Zancanaro Previato','546562413','43;'),(19244,'Juliana Da Silva De Moura','390631322','44;'),(19245,'Juliana Domingos Dos Santos Rodrigues','578321439','45;'),(19246,'Juliana Nancy Rodrigues De Oliveira','537472770','47;'),(19247,'Juliane Vieira Felix','555957780','49;'),(19248,'Julio Candido Moura Da Silva','55578549','50;'),(19249,'Julio Cesar Ramos De Oliveira','561006878','52;'),(19250,'Julio Cesar Silva Ramos','529161813','53;'),(19251,'Julya Cristina Da Silva Calisto','508696999','55;'),(19252,'Julya Santos Menezes','567901415','56;'),(19253,'Junior Rodrigo Bento Ferreira','547209617','57;'),(19254,'Kaian De Souza Matias Silva','552510737','58;'),(19255,'Kailaine Heloise Goncalves De Souza','568095169','59;'),(19256,'Kailane Jesus Pereira','592157362','60;'),(19257,'Kailany Isabela Andrade Quirino','383010792','61;'),(19258,'Kaique Da Silva Veras','602187837','62;'),(19259,'Kaique Daniel Da Silva','376654508','63;'),(19260,'Kaique Ferreira Do Nascimento','437954365','64;'),(19261,'Kaique Jose Ambrosio','480677785','65;'),(19262,'Kalolayna Millaqueo Campi Parreira','389620932','66;'),(19263,'Kamila Aparecida Barbosa Santos','574306456','67;'),(19264,'Kamila Ayumi Takai Dos Santos','54312518','68;'),(19265,'Kamila Fernada Sousa Santos','508319432','69;'),(19266,'Kamilla Carvalho Do Prado','52097945','70;'),(19267,'Kamilly Messias Andrade','57422600','71;'),(19268,'Kamily Brandao Pasquino Dos Santos','570891048','72;'),(19269,'Kananda Alves Santos','393760923','73;'),(19270,'Karen Da Silva Reis','381237278','74;'),(19271,'Karen Larissa Oliveira','588763573','75;'),(19272,'Karen Morais Dos Santos','398315851','76;'),(19273,'Karen Rubim Soares','523624773','77;'),(19274,'Karina Abreu Vieira De Azevedo','580203852','1;'),(19275,'Karina Aparecida Barbosa Santos','574306316','2;'),(19276,'Karina Silva Benites','383539778','3;'),(19277,'Karine Aparecida Melendes','553167984','4;'),(19278,'Karine Barbosa Da Silva','54328802','5;'),(19279,'Karinne Santana Cordeiro','392145431','7;'),(19280,'Karoline Araujo Amorim','363549869','8;'),(19281,'Karolline Araujo Da Silva','540398366','9;'),(19282,'Kassiana Aparecida Da Silva','524016811','10;'),(19283,'Kathleen Ferreira Teixeira','578785808','11;'),(19284,'Kathleen Lopes De Araujo Lima','50544785','12;'),(19285,'Kathleen Silva De Melo','502874971','13;'),(19286,'Katiussa Eunice De Oliveira','541778675','14;'),(19287,'Katlen Dos Santos Assumpcao','520982903','15;'),(19288,'Katly Cristina Messias Freitas','548009375','16;'),(19289,'Kaua Ribeiro Da Silva','625846746','17;'),(19290,'Kauan Da Silva Franca','578317543','18;'),(19291,'Kauan De Andrade Almeida','379624461','19;'),(19292,'Kauan Tokashike De Oliveira','520305073','21;'),(19293,'Kauani Pereira Soares','38031481','22;'),(19294,'Kauany Ayanna Silva Simoes','55623604','23;'),(19295,'Kauany Martins De Abreu','504842936','24;'),(19296,'Kaue Borges De Oliveira','583177748','25;'),(19297,'Kaue Da Silva Araujo','549114890','26;'),(19298,'Kawan Hendrex Xavier Leal','376177561','27;'),(19299,'Kaylane Azevedo Da Silva','530962561','28;'),(19300,'Kaylane Marques Da Silva','556926535','29;'),(19301,'Kayque De Sousa','569470936','30;'),(19302,'Kayque Nascimento Dos Santos','376924111','31;'),(19303,'Keissy Evelyn Rodrigues Alves Dias','387281460','33;'),(19304,'Kelly Araujo Da Silva','577295482','34;'),(19305,'Kelly Ribeiro Granjeiro','413173951','35;'),(19306,'Kelson Gomes Da Silva','577812981','36;'),(19307,'Kelvin Bruno Lopes','38643296','37;'),(19308,'Kelvin Da Mata Nascimento','394452823','38;'),(19309,'Kelvin Ferreira Da Silva','526919127','39;'),(19310,'Kelvin Guimaraes Gomes','543833677','40;'),(19311,'Kennedy Trindade Pereira Da Silva','504854446','41;'),(19312,'Kerolaine Penteado De Oliveira','534619708','42;'),(19313,'Kessia Rayssa Esteves Sacramento','62361330','43;'),(19314,'Kesy Rosa Franca Dos Santos','386137663','44;'),(19315,'Kethleen Mayumi Nakagawa','50556046','46;'),(19316,'Kethylen Pereira Rodrigues','398032142','47;'),(19317,'Kethyllen Naiara Goncalves Da Silva','521643041','48;'),(19318,'Ketlyn Pena De Oliveira Martins','572215289','50;'),(19319,'Kevin Ryan De Freitas Altea','581516746','51;'),(19320,'Kevin Silva De Oliveira','55140016','52;'),(19321,'Khaua Ferreira Gomes Lima','572058147','53;'),(19322,'Khillyan Camille Brito Da Silva','521654099','54;'),(19323,'Kimberlly Vitoria Da Silva Lopes','545826743','55;'),(19324,'Kleber Antonio Correia','425804252','56;'),(19325,'Krizia Gomes Estrela Rodrigues','475376183','57;'),(19326,'Lais Da Silva Bruno','574474584','58;'),(19327,'Lais Fernandes Silva','507473474','59;'),(19328,'Lais Soares Veridiano','565441784','61;'),(19329,'Lana Damaceno Santos','545833462','62;'),(19330,'Lara Bessan Teruel','520065542','64;'),(19331,'Lara Hellen Freitas Cruz','523455914','65;'),(19332,'Lara Liz Faoro','508292013','66;'),(19333,'Lara Preccaro Galdino','505454047','67;'),(19334,'Larianne De Oliveiraanjos','566621089','68;'),(19335,'Larissa Alves Dos Santos','626056494','70;'),(19336,'Larissa Beatriz Costa Souza','385693308','71;'),(19337,'Larissa Bezerra Sena','507099291','72;'),(19338,'Larissa Calegari Peixoto','536691721','73;'),(19339,'Larissa Caroline Silva','550718357','74;'),(19340,'Larissa Conelheiro Do Prado','539458983','75;'),(19341,'Larissa De Souza Pereira','540724427','77;'),(19342,'Adria Santos Do Nascimento','586947530','3'),(19343,'Aleff Felipe Dos Santos Rodrigues','469967640','20'),(19344,'Eric Dos Santos Rodrigues','599081170','32'),(19345,'Larissa Gomes Gaspar','504852152','2'),(19346,'Larissa Guedes Cruz','575500906','3'),(19347,'Larissa Lopes De Souza','589132519','4'),(19348,'Larissa Nascimento Costa Da Silva','559496436','5'),(19349,'Larissa Oliveira','396631253','6'),(19350,'Larissa Oliveira Da Silva','566188685','7'),(19351,'Larissa Oliveira Ramos','53141372','8'),(19352,'Larissa Paulino Da Silva','369560530','9'),(19353,'Larissa Quirino Da Silva','396741447','10'),(19354,'Larissa Rodrigues Da Silva','475255264','11'),(19355,'Larissa Santos Campoi','566273342','12'),(19356,'Larissa Santos Da Silva','577235862','13'),(19357,'Larissa Santos Souza','385342652','14'),(19358,'Larissa Silva Campos','585608507','15'),(19359,'Larissa Silva Santos','507106982','16'),(19360,'Larissa Siqueira Tavares Alves','637242658','17'),(19361,'Larissa Vitoria De Souza Barros','5870799375','18'),(19362,'Laryssa De Sa Correa Coelho','625811872','19'),(19363,'Laryssa Mattias Ferreira','545282226','20'),(19364,'Latifa Rodrigues Mendonca','502917179','21'),(19365,'Laura Araujo De Luna','397165614','22'),(19366,'Laura Beatriz De Alexandria Santos','528615919','23'),(19367,'Laura Carozza Favero','567659823','24'),(19368,'Laura Christine Santos Souto','548774195','25'),(19369,'Laura Cruz De Oliveira','562688171','26'),(19370,'Laura De Souza Martins','505451797','27'),(19371,'Laura Goncalves Rodrigues','560923077','28'),(19372,'Laura Kato De Souza','527838433','29'),(19373,'Laura Ramos Macedo','539466323','30'),(19374,'Laura Souza De Carvalho','38922814','31'),(19375,'Laurielle De Souza Silva','570772825','33'),(19376,'Lauro Ferreira Dos Santos Jumior','420372192','34'),(19377,'Layane Freire Braz','507800746','36'),(19378,'Laysa Beatriz Nunes Guilherme','399667544','37'),(19379,'Laysa Carvalho Queiroz','551059904','38'),(19380,'Laysa Lorena Silva De Andrade','551732052','39'),(19381,'Laysa Monalise Barros Magalhaes','57785446','40'),(19382,'Leandro De Lima Moura','473908347','41'),(19383,'Leandro Dos Santos Severino','428471857','42'),(19384,'Leandro Lima De Jesus','520018254','43'),(19385,'Leandro Luiz Costa Andrade','545853862','44'),(19386,'Lediane Alves Xavier','404635842','45'),(19387,'Leia Silva De Oliveira','625351356','46'),(19388,'Leine Nikely Oliveira De Carvalho','548011102','47'),(19389,'Leomardo Miranda Fernandes','346361515','48'),(19390,'Leonardo Amaral Vieira','375208628','49'),(19391,'Leonardo Dias Lima','506194334','50'),(19392,'Leonardo Ferreira','579324084','51'),(19393,'Leonardo Hiroshi Tamashiro','53686939','53'),(19394,'Leonardo Morgon Da Silva','605292292','54'),(19395,'Leonardo Nogueira Tomaz','393320558','55'),(19396,'Leonardo Rodrigues Bispo','37960341','56'),(19397,'Leonardo Rodrigues Silva','502428697','57'),(19398,'Leonardo Tadeu Lamazales','534583167','58'),(19399,'Leonardo Vinicios Da Silva','544956102','59'),(19400,'Lethicia Monique Gutierrez','500291585','60'),(19401,'Leticia Alonso Broedel','563925516','61'),(19402,'Leticia Alves Aniceto De Melo','381245044','62'),(19403,'Leticia Corvalan Do Carmo','531439331','63'),(19404,'Leticia Costa Pereira','554755634','64'),(19405,'Leticia De Lima Neves','388837767','67'),(19406,'Leticia Ferreira Mendonca','522743766','68'),(19407,'Leticia Gomes Biserra','54990167','69'),(19408,'Leticia Hatsue Imai','55908738','70'),(19409,'Leticia Lima De Oliveira','550430829','71'),(19410,'Leticia Mariana Pereira','439534744','72'),(19411,'Leticia Molina De Sousa','585672209','73'),(19412,'Leticia Nascimento Matos','397837276','74'),(19413,'Leticia Nerinda Santos De Jesus','504012101','75'),(19414,'Leticia Pereira Nobrega Galvao','537070242','77'),(19415,'Leticia Pereira Rojas','388835783','78'),(19416,'Leticia Rodrigues Ribeiro','557257888','79'),(19417,'Leticia Roque Lima Oliveira','55968633','81'),(19418,'Leticia Santos Martins','560034090','83'),(19419,'Leticia Siqueira Silva','390075474','84'),(19420,'Leticia Stevani Dos Santos','398124322','85'),(19421,'Leticia Teraoka Neves','59558004','86'),(19422,'Leticia Vespero Camargo','554213771','87'),(19423,'Lidia Alves Nascimento','487101911','89'),(19424,'Lilian Coutinho Goncalves','50350824','90'),(19425,'Lisis Marcelly Rodrigues Dias','344096712','91'),(19426,'Livia Benicio De Assis','543823246','92'),(19427,'Livia Borges Petreca','399456867','93'),(19428,'Livia De Oliveira Gomes','504230578','95'),(19429,'Livia Dutra De Oliveira','582647617','96'),(19430,'Livia Hayuri Maruyama','604040738','97'),(19431,'Livia Loiola Leal','52405387','98'),(19432,'Livia Lourenco Zanardi','392123873','99'),(19433,'Livia Oliveira Fernandes','609632486','100'),(19434,'Livia Paz Macena Silva','574212425','101'),(19435,'Livia Pedrosa Mesquita','384341858','102'),(19436,'Livia Rodrigues Do Nascimento Souza','531169522','103'),(19437,'Livia Sales Almeida','390359221','104'),(19438,'Livia Soares Da Mata','399654355','105'),(19439,'Lizandra Silva Justino','390318681','106'),(19440,'Lohan Amorim De Oliveira','379638526','107'),(19441,'Lorena De Oliveira Sandoli','543279121','108'),(19442,'Lorena Medeiros Rodrigues Silva','586008202','109'),(19443,'Lorenza Cristina Da Conceicao Ramos','387056567','110'),(19444,'Lorraine Victoria Guimaraes Da Silva','509153483','112'),(19445,'Lorran Dos Anjos Flavio','381374191','113'),(19446,'Lorrana Ester De Sa Pereira','533020487','114'),(19447,'Lorruama Ferreira Gomes Dos Santos','574780324','115'),(19448,'Luan Alves De Jesus','532290250','1;'),(19449,'Luan Augusto Marcelino Selan','536891886','2;'),(19450,'Luan Orlando Soares Correia Da Silva','551482333','4;'),(19451,'Luan Rocha Dos Santos','520829311','5;'),(19452,'Luan Victor Sinezio Da Silva','521688498','6;'),(19453,'Luan Vieira De Araujo','566886510','7;'),(19454,'Luan Vinicus Antonangelo Veiga','386517320','8;'),(19455,'Luana Da Silva Estanislau','568319424','11;'),(19456,'Luana De Farias Santos','398309206','12;'),(19457,'Luana De Souza Carmo','391649796','13;'),(19458,'Luana Felix Vieira','55369098','14;'),(19459,'Luana Ferreira De Oliveira Sousa','570404058','15;'),(19460,'Luana Gabrielli Dos Santo Goncalves','551070614','16;'),(19461,'Luana Goncalves De Melo','52860790','17;'),(19462,'Luana Mello Teixeira Simao','548706736','19;'),(19463,'Luana Natalye Rigueira','538930305','20;'),(19464,'Luana Oliveira Da Silva','542660180','21;'),(19465,'Luana Rocha Valete','569709714','22;'),(19466,'Luanna Victoria Pereira Da Silva','384963018','23;'),(19467,'Luara Ramos De Souza','550427582','25;'),(19468,'Lucas Alessandro Ferreira','534618753','26;'),(19469,'Lucas Alexandre Lemes Dos Santos','584325149','27;'),(19470,'Lucas Almeida Melo De Gouveia','545388181','28;'),(19471,'Lucas Alves Braz','371840971','29;'),(19472,'Lucas Alves Dantas Duarte','507459519','30;'),(19473,'Lucas Boffi De Lima','553144637','31;'),(19474,'Lucas Castro De Souza','396742695','32;'),(19475,'Lucas Cherodia Consolini','557909600','33;'),(19476,'Lucas Costa Maia Vieira','577811496','34;'),(19477,'Lucas Costa Palagani','554559365','35;'),(19478,'Lucas Da Silva Carvalho','572887875','36;'),(19479,'Lucas Da Silva Marques','38939483','37;'),(19480,'Lucas Daniel Rodrigues','381262479','38;'),(19481,'Lucas De Lima Da Silva','535899579','39;'),(19482,'Lucas De Mattos Verdolini','545541219','40;'),(19483,'Lucas De Melo Magalhaes','379815321','41;'),(19484,'Lucas De Oliveira','549743583','42;'),(19485,'Lucas De Paiva Mendonca Silva','543279996','43;'),(19486,'Lucas De Sousa Bezerra','545550865','44;'),(19487,'Lucas De Souza Machado','600759143','45;'),(19488,'Lucas De Souza Mazaia','558218520','46;'),(19489,'Lucas Dos Santos Beck Archanjo','540721487','47;'),(19490,'Lucas Dos Santos Moreno Da Silva','522939727','48;'),(19491,'Lucas Duarte De Sousa','383620454','49;'),(19492,'Lucas Fernandes Marana','540209120','51;'),(19493,'Lucas Fernando De Lima','574910086','52;'),(19494,'Lucas Ferreira Gomes','594185166','53;'),(19495,'Lucas Ferreira Santos De Godoy Bueno','531427079','54;'),(19496,'Lucas Gomes De Freitas','521406493','56;'),(19497,'Lucas Henrique Costa Simplicio','584333018','58;'),(19498,'Lucas Henrique De Oliveira','533941696','59;'),(19499,'Lucas Henrique Sabino Carneiro','576138368','60;'),(19500,'Lucas Henrique Santos Da Costa','583550150','61;'),(19501,'Lucas Lima Ferreira','658968257','63;'),(19502,'Lucas Mendonca Da Silva Junior','594849834','65;'),(19503,'Lucas Miguel Parra Belmiro','540728202','66;'),(19504,'Lucas Moreira Maranhao Da Silva','558487804','67;'),(19505,'Lucas Nascimento Da Silva','526536755','68;'),(19506,'Lucas Nascimento Rodrigues De Lima','504699271','69;'),(19507,'Lucas Nogueira Prospero','569988627','70;'),(19508,'Lucas Pereira Brito','407558408','71;'),(19509,'Lucas Pinto Barbosa','472530690','72;'),(19510,'Lucas Ribeiro Franco','527176631','74;'),(19511,'Lucas Roberto Dos Santos','505472958','75;'),(19512,'Lucas Ryan Da Silva Nascimento','534617578','76;'),(19513,'Lucas Santos Santana','567875520','77;'),(19514,'Lucas Silva Brito','389490258','79;'),(19515,'Lucas Silva De Alencar','549326546','80;'),(19516,'Lucas Silva Dos Passos','473263127','81;'),(19517,'Lucas Sousa Nascimento','532403253','82;'),(19518,'Lucas Souza Alegrette De Almeida','535933666','83;'),(19519,'Lucas Souza Bicalho','522584044','84;'),(19520,'Lucas Tavares Da Silva','489516221','85;'),(19521,'Lucas Tude Martins Pereira','379236436','86;'),(19522,'Luccas Henrique Figueira Cortes','566818966','87;'),(19523,'Luciana Costa Barboza','40626269','88;'),(19524,'Luciano Oliveira Do Nascimento','475777396','89;'),(19525,'Luciano Oliveira Evangelista','556379949','90;'),(19526,'Luciano Prado Neves','561794236','91;'),(19527,'Luciene Izabel Dos Santos De Azevedo','350447615','92;'),(19528,'Luciene Souza Elias','395221274','93;'),(19529,'Lucilene Ferreira De Lima','376305757','94;'),(19530,'Ludmila Alves Machini','589759358','95;'),(19531,'Ludmila De Souza Pereira','528747605','96;'),(19532,'Ludo Alexander Franca','475762770','97;'),(19533,'Luidy Gregorio Ferraz Fernandes','568850166','98;'),(19534,'Luigi Mendes Soares','386145131','1;'),(19535,'Luigi Vedoveli Nicolau','543286435','2;'),(19536,'Luis Antonio De Souza Silva','582193904','3;'),(19537,'Luis Felipe Bakanichas Borges','396131839','4;'),(19538,'Luis Felipe Virgulino Da Silva','391904954','5;'),(19539,'Luis Gustavo Ribeiro Ferreira','526914245','6;'),(19540,'Luis Henrique Ribeiro Borri','387990860','7;'),(19541,'Luis Henrique Zoldan Luperini','533211499','8;'),(19542,'Luis Junior Rodrigues Bezerra','555759283','9;'),(19543,'Luisa Cristina Jesus Da Silva','391950046','10;'),(19544,'Luiz Carlos Rodrigues Branco','394352300','11;'),(19545,'Luiz Diego Dos Santos Volpini','54052315','12;'),(19546,'Luiz Fernando Gomes Da Silva','457493999','13;'),(19547,'Luiz Gustavo De Castro Ramos','59140431','14;'),(19548,'Luiz Gustavo Gomes Farias','523437250','15;'),(19549,'Luiz Henrique Leal Lacava','564359890','16;'),(19550,'Luiz Henrique Lira Cardoso','393742672','17;'),(19551,'Luiz Henrique Mendes Cavalheiro','627998380','18;'),(19552,'Luiz Henrique Ribeiro Daniel','390049414','19;'),(19553,'Luiz Henrique Velo','533319092','20;'),(19554,'Luiz Marcelino','191697102','21;'),(19555,'Luiz Miguel Rocha Seixeiro','398713327','22;'),(19556,'Luiza Akemi Maruyama','37520927','23;'),(19557,'Luiza Beatriz Alcantara Inocencio','556476335','24;'),(19558,'Luiza Lacerda Gonsalez','55489127','25;'),(19559,'Luiza Lima Alves','387213958','26;'),(19560,'Luiza Mayare Reis Soares','520145288','27;'),(19561,'Luiza Resende De Campos Battaglini Guerra','561331595','28;'),(19562,'Lukas Bueno De Barros','595501485','29;'),(19563,'Lukas Vinicius De Souza Macedo','531409569','30;'),(19564,'Luma Alves De Souza','523147089','31;'),(19565,'Luma Venancio De Assis','508197168','32;'),(19566,'Lyandra Vitoria Chicon De Sousa','559072016','33;'),(19567,'Magna Cilene Silva Pereira','243543062','35;'),(19568,'Maiara Almeida Da Silva','371282408','36;'),(19569,'Maicon Bruno Lopes Dias','573963976','37;'),(19570,'Maisa Alves Da Silva','640512021','39;'),(19571,'Maisa Do Nascimento Miranda','592838614','40;'),(19572,'Manoel Bileu Da Nobrega Neto','383003544','41;'),(19573,'Marcela Fuzetti Venturini','581653774','43;'),(19574,'Marcela Tonetto Figueiredo','38613425','44;'),(19575,'Marcella Fonseca De Souza','397828391','45;'),(19576,'Marcella Goncalves Zerbinatti','544247735','46;'),(19577,'Marcelly Francisco Silva','398306539','47;'),(19578,'Marcelo Augusto Neves Nascimento','534617268','48;'),(19579,'Marcelo Bueno','222738066','49;'),(19580,'Marcelo De Souza Lenhari','536720691','50;'),(19581,'Marcelo Ferreira De Oliveira','393637384','51;'),(19582,'Marcelo Henrique Oliveira Forte','578786035','52;'),(19583,'Marco Antonio Campos Carvalho','565230104','54;'),(19584,'Marco Antonio Da Silva Santos','570365739','55;'),(19585,'Marco Aurelio Dias Torres Machado','540734330','57;'),(19586,'Marco Henrique Claro Barreto','58458099','58;'),(19587,'Marcos Borges Smeets','52084953','59;'),(19588,'Marcos Felipe Dos Santos','39665647','60;'),(19589,'Marcos Rafael Martins Salomao','383323745','61;'),(19590,'Marcos Vinicius De Sousa Lopes Silva','538932831','62;'),(19591,'Marcos Vinicius Jacinto Souza','548454103','63;'),(19592,'Marcos Vinicius Oliveira Souza','235895847','64;'),(19593,'Marcos Vinicius Pereira','530220106','65;'),(19594,'Marcos Vinicius Santos Pinto','3836360666','66;'),(19595,'Marcus Victor Barbosa Dos Santos','609118444','67;'),(19596,'Maria Brenda Batista Nogueira','483406557','68;'),(19597,'Maria Carolina Navarreti Da Silva','553687281','69;'),(19598,'Maria Clara Pereira Dos Santos','556545606','70;'),(19599,'Maria De Fatima De Lira Silva','555908677','72;'),(19600,'Maria Eduarda Boaro Ferraz','604411170','73;'),(19601,'Maria Eduarda Correa','39333692','74;'),(19602,'Maria Eduarda Da Silva De Miranda','38613814','75;'),(19603,'Maria Eduarda Dos Santos','390304347','76;'),(19604,'Maria Eduarda Estevam Oliveira','568575635','78;'),(19605,'Maria Eduarda Ferreira Ramos','507797152','79;'),(19606,'Maria Eduarda Lins Mendes','39433629','80;'),(19607,'Maria Eduarda Martins Carvalho','3880031169','81;'),(19608,'Maria Eduarda Moraes Dantas','500212612','82;'),(19609,'Maria Eduarda Oliveira Forte','578785675','83;'),(19610,'Maria Eduarda Parreira','521890627','84;'),(19611,'Maria Eduarda Racpchan Martins','578614741','1;'),(19612,'Maria Eduarda Rodrigues Cezar','572513872','2;'),(19613,'Maria Eduardastahl De Almeida','589061252','3;'),(19614,'Maria Francieli Souza Da Silva','528380290','4;'),(19615,'Maria Gabriela Lemos Oliveira','557915016','5;'),(19616,'Maria Gabrielle Silva','591518211','6;'),(19617,'Maria Gabrielli Maciel Goncalo','541045143','7;'),(19618,'Maria Isabella Sotto De Souza','386136488','8;'),(19619,'Maria Julia Paulino Da Silva','549567719','9;'),(19620,'Maria Luiza Couto Santana','555252917','10;'),(19621,'Maria Luiza De Freitas Moraes','390069176','11;'),(19622,'Maria Patrocinia Cabral Lopes','77084664','12;'),(19623,'Maria Paula Rodrigues De Lemos Silva','500401895','14;'),(19624,'Maria Pereira Pinto','53672264','15;'),(19625,'Maria Rita Gomes De Lima','390310876','17;'),(19626,'Maria Sabrina Bezerra Lima','569824266','18;'),(19627,'Maria Shayanne Martins De Abreu','380219931','19;'),(19628,'Maria Susyane Do Nascimento','2008856849','20;'),(19629,'Maria Taiane De Souza Santos','20090473234','21;'),(19630,'Maria Vitoria Xavier Ruffini','601352907','22;'),(19631,'Marian Capucho Pereira','38885876','23;'),(19632,'Marian Chaves Cavalcante','389612844','24;'),(19633,'Mariana Batista Fernandes','38860807','26;'),(19634,'Mariana Blanco De Menezes','295100382','28;'),(19635,'Mariana Cristina Afonso Ferreira','385342366','29;'),(19636,'Mariana De Jesus Siqueira Leite','561763963','30;'),(19637,'Mariana Gomes','543254458','32;'),(19638,'Mariana Gomes Dos Santos','49981776','33;'),(19639,'Mariana Goncalves Da Costa','387889385','34;'),(19640,'Mariana Ketlyn De Abreu Boos','549329705','35;'),(19641,'Mariana Mardegan Guandalin De Assis','565878736','36;'),(19642,'Mariana Martins De Araujo','435472252','37;'),(19643,'Mariana Matos Soares','395685771','38;'),(19644,'Mariana Mel Strapaissi Mendes','575792693','39;'),(19645,'Mariana Proenca D\'Amaral','537879444','42;'),(19646,'Mariana Rodrigues Chaves Da Silva','38283348','43;'),(19647,'Mariana Sa Novaes','387988981','45;'),(19648,'Mariana Shade Ribeiro Da Silva','578466818','46;'),(19649,'Mariana Soares De Brito','380420272','47;'),(19650,'Mariana Vale Paixao','528902106','48;'),(19651,'Mariana Vidal Lima Dos Santos','563885294','49;'),(19652,'Mariana Ximenes De Souza','385669872','50;'),(19653,'Mariane Isabelle De Souza Lenhari','536720770','51;'),(19654,'Marilia Oliveira Prado','649332702','53;'),(19655,'Marina Maria De Oliveira Zanelato','76124885','54;'),(19656,'Marina Silva Dos Santos','570302080','55;'),(19657,'Mario Eugenio Silva','380790415','56;'),(19658,'Marya Eduarda Da Cunha Soares','52004020','57;'),(19659,'Mateus Alexandre Da Silva','386135800','58;'),(19660,'Mateus De Almeida','570951574','59;'),(19661,'Mateus Domentino','567577715','61;'),(19662,'Mateus Jose De Sousa Queiroz','570171878','62;'),(19663,'Mateus Santos Alves','570612068','63;'),(19664,'Mateus Santos Araujo','522730346','64;'),(19665,'Mateus Souza Pereire De Oliveira','568876374','65;'),(19666,'Matheus Araujo De Abreu','509905900','66;'),(19667,'Matheus Bunholi Soares','551400869','67;'),(19668,'Matheus Da Cruz Oliveira','558698177','68;'),(19669,'Matheus Dias Curiqueo','381572547','71;'),(19670,'Matheus Domingos De Lima','608346457','72;'),(19671,'Matheus Dos Santos Santana','505563411','73;'),(19672,'Matheus Dos Santos Souza','577923225','74;'),(19673,'Matheus Duarte Costa','503306289','75;'),(19674,'Matheus Felix De Macedo','507096861','76;'),(19675,'Matheus Gazzola Martines','50185907','77;'),(19676,'Matheus Gomes Rodrigues','599795670','78;'),(19677,'Matheus Goncalves Reis Silva','563904586','79;'),(19678,'Matheus Heidemann','393327486','80;'),(19679,'Matheus Henrique Alves','392139613','81;'),(19680,'Matheus Henrique Celestino','592476509','82;'),(19681,'Matheus Kennedy De Souza Vieira Dos Santos','595208794','83;'),(19682,'Matheus Klisman Brito Ferreira','386150291','84;'),(19683,'Matheus Marini Dos Reis','389595494','86;'),(19684,'Matheus Marques Da Silva','396139218','1;'),(19685,'Matheus Melo Soares','532411997','2;'),(19686,'Matheus Mendes Oliveira','383628623','3;'),(19687,'Matheus Moreira Da Cruz','398295098','4;'),(19688,'Matheus Nicolas Da Silva Benjamim Lima','398384010','5;'),(19689,'Matheus Nues Da Silva Maselli','588969813','6;'),(19690,'Matheus Pedrosa Barbosa','522794713','8;'),(19691,'Matheus Pereira De Souza','556885454','9;'),(19692,'Matheus Ramos Da Silva','598567150','10;'),(19693,'Matheus Rocha Da Silva','56270372','11;'),(19694,'Matheus Rodrigues Dos Santos','55956630','12;'),(19695,'Matheus Rodrigues Valdes','396729654','13;'),(19696,'Matheus Silva','384672826','14;'),(19697,'Matheus Soares Foloni','574396135','15;'),(19698,'Matheus Veiga Romera','529524922','16;'),(19699,'Mauricio Eurico Ramiro Da Silva','48766288','17;'),(19700,'Mauricio Ferreira Da Silva','347883540','18;'),(19701,'Mauricio Ludovico','540061517','19;'),(19702,'Mayara Chaves Cavalcante','389612856','21;'),(19703,'Mayara Cristina Coelho','50547203','22;'),(19704,'Mayara Farias','442556123','23;'),(19705,'Mayara Monize De Macedo Sepedro','3659527','24;'),(19706,'Mayara Mota De Souza','387113794','25;'),(19707,'Maylon Brenno Souza De Oliveira','388651970','27;'),(19708,'Maysa Limeira Da Silva','9867175','28;'),(19709,'Maysa Monteiro Xavier','545274588','29;'),(19710,'Melanie Ileke Rodrigues','577861918','30;'),(19711,'Melissa De Almeida Leite','38237602','31;'),(19712,'Melissa Feiler Carvalho','597155252','32;'),(19713,'Melissa Hidemi Morikawa','527173460','33;'),(19714,'Melissa Liz Ribeiro Dos Santos','391599203','34;'),(19715,'Melissa Lopes Dos Santos','391904851','35;'),(19716,'Melissa Vitoria Bueno Nunes','37934161','36;'),(19717,'Micaele De Morais Silva','391661516','38;'),(19718,'Michael Braz Xavier Junior','536726720','39;'),(19719,'Michael Fabio Da Silva Mazza','49936462','40;'),(19720,'Michele Dionisio Selotto','577603450','42;'),(19721,'Michelle Dos Anjos Silva','502453151','43;'),(19722,'Michelli Fritz Busch','2830313699','45;'),(19723,'Midia Vitoria Da Silva Lopes','627573563','47;'),(19724,'Miguel Dos Santos Marcelino','528670840','50;'),(19725,'Miguel Gustavo De Oliveira Santos Bento','525266689','51;'),(19726,'Mikael Eufrasio Schunks','564857476','52;'),(19727,'Milena Ariani Nunes Felix','388836416','54;'),(19728,'Milena Da Silva','58312902','55;'),(19729,'Milena Millare Odan Da Silva','594419025','56;'),(19730,'Milena Montanelli Dos Santos','383971019','57;'),(19731,'Milena Santos De Santana','523629308','58;'),(19732,'Milena Vitoria Quinelatto Rando','501350299','59;'),(19733,'Milene Santos De Souza','508232491','60;'),(19734,'Mileny Vitoria Candido Leme','542660623','61;'),(19735,'Millena Galvani Arano Da Costa','589187946','62;'),(19736,'Millena Marinho Moreira','564103305','63;'),(19737,'Milleny Coelho Vieira Dos Santos','595978861','65;'),(19738,'Milton Severino Dias Junior','222150105','66;'),(19739,'Mirella Guimaraes Mesquita','571739842','67;'),(19740,'Miriam Da Graca De Sousa Oliveira','508286566','68;'),(19741,'Mirian Siqueira De Oliveira','509185502','70;'),(19742,'Misael Messias Rigo Pereira Nicolau','633907182','72;'),(19743,'Moises De Oliveira De Franca','521632158','73;'),(19744,'Monalisa Evangelista Dos Santos','382988619','74;'),(19745,'Monaliza Alves Lopes','284988315','75;'),(19746,'Monissa Cruz','509336838','76;'),(19747,'Monize Porfiro Da Silva','557448979','77;'),(19748,'Moraci Rodrigues De Santana','394325035','78;'),(19749,'Murillo Roberto De Almeida','383798334','79;'),(19750,'Murilo Augustinelli Justo De Almeida','5200836297','80;'),(19751,'Murilo Bete Prata','397808008','81;'),(19752,'Murilo De Azevedo Ribeiro','527310542','82;'),(19753,'Murilo Dos Santos Barbosa','586464025','83;'),(19754,'Murilo Faria Dantas','529157561','84;'),(19755,'Murilo Moreno Vidotto','548006660','86;'),(19756,'Muryllo Max Oliveira Da Silva','525930449','87;'),(19757,'Mylena Vieira De Moura','506382709','88;'),(19758,'Naiara Torres Oliveira','389519066','90;'),(19759,'Naira Leonilda Da Silva','585499299','91;'),(19760,'Naira Rodrigues','526084169','92;'),(19761,'Nalanda Carvalho Cruz','399038851','93;'),(19762,'Nandielle Suellen Da Silva','52717631','94;'),(19763,'Natali Naiane Da Silva Cabral','455736212','95;'),(19764,'Natalia Almeida De Britto','575847992','96;'),(19765,'Natalia Aparecida Iglesias','559027175','97;'),(19766,'Natalia Augusto Geraldo','395693457','98;'),(19767,'Natalia Bertaco Cruz','384973280','99;'),(19768,'Natalia Fernandes De Souza','553683135','100;'),(19769,'Natalia Nayumi Souza Okayama','525299920','3;'),(19770,'Natalia Oliveira Rosa','523637408','4;'),(19771,'Natalie Lemes Morbeck','535917119','5;'),(19772,'Natalie Silva Nascimento','589675680','6;'),(19773,'Nathalia Cristina Coelho','505472879','7;'),(19774,'Nathalia Fernanda Da Silva','567564150','9;'),(19775,'Nathalia Martins De Franca','540211930','11;'),(19776,'Nathalia Raquel Muniz Honorio','567000254','14;'),(19777,'Nathalia Serafim Silva','389601603','15;'),(19778,'Nathalia Silva Franca','50159940','16;'),(19779,'Nathalia Vieira Santos','505446285','17;'),(19780,'Nathaly Terra Mendes','39666164','19;'),(19781,'Nathan Ferreira Tiburcio','562507024','20;'),(19782,'Nathan Goncalves Moreira Cancella','502891476','21;'),(19783,'Nathan Pengue De Melo','580515308','22;'),(19784,'Nauan Alves De Almeida','504002958','23;'),(19785,'Nayama Souza Baldi','473847917','24;'),(19786,'Nayan Cleber Junior Mont Alverne','561389159','25;'),(19787,'Nayara Ferreira Faria','596619066','26;'),(19788,'Nayara Jaqueline Ferreira Dos Santos','529786138','27;'),(19789,'Nayara Zambianco Rafaldini','383616219','28;'),(19790,'Naylla Gomes De Oliveira','591747844','29;'),(19791,'Nelson De Siqueira Guido Filho','37925959','30;'),(19792,'Nicolas Antonio Amorim Arruda','59533605','32;'),(19793,'Nicolas Barbosa Carvalho','383328676','33;'),(19794,'Nicolas Bernardino Costa','528211481','34;'),(19795,'Nicolas Cardozo Do Nascimento','580611048','35;'),(19796,'Nicolas Carminato Munhoz De Freitas','53557664','36;'),(19797,'Nicolas Costa Andrade','460117609','37;'),(19798,'Nicolas Fernando Silva','549955525','40;'),(19799,'Nicolas Salvador Da Silva','394599020','42;'),(19800,'Nicolas Santos','385690095','43;'),(19801,'Nicolas Silveira Santos','395685655','44;'),(19802,'Nicolas William Da Silva Moretto','549907099','45;'),(19803,'Nicole Carvalho Da Silva','384672474','47;'),(19804,'Nicole Chasci Silva','546409362','48;'),(19805,'Nicole Da Silva Carvalho','39433811','49;'),(19806,'Nicole De Paula Cerqueira','52979715','50;'),(19807,'Nicole Fazolin Dos Santos','552791398','51;'),(19808,'Nicole Giulia Dos Santos Lima','545844137','52;'),(19809,'Nicole Loiola De Oliveira','384227960','53;'),(19810,'Nicole Maria Dourado De Freitas','576901003','54;'),(19811,'Nicole Siciliano Leme','577923341','55;'),(19812,'Nicoli Gomes De Sousa','55366900','56;'),(19813,'Nicollas De Sousa','507793511','57;'),(19814,'Nicollas Henrique Geronimo Da Silva','505241560','58;'),(19815,'Nicolle Da Costa Pinto','58717755','59;'),(19816,'Nicolli Vitoria Fiorelli De Oliveira','538107200','61;'),(19817,'Nicolly Ferreira Fernandes','569573105','62;'),(19818,'Nicoly De Paula Silva','524668346','63;'),(19819,'Nicoly De Sousa Alves','532654298','64;'),(19820,'Nicoly Lemes Da Silva','500288215','65;'),(19821,'Nicoly Soares De Lima','388665476','66;'),(19822,'Nubia Natielle Barbosa Chagas','53391923','68;'),(19823,'Nyla Gabriela Silva Dias','388000089','69;'),(19824,'Ocenir Jose Da Costa Ferreira','297675230','70;'),(19825,'Oliver Lopes Caparros','54162880','71;'),(19826,'Olivia Silva Amann','526378979','72;'),(19827,'Pablo Abid Castilho','593808204','73;'),(19828,'Pablo Daniel Amorim Estrela Lima','381946277','74;'),(19829,'Pablo Gomes De Sousa','382992374','75;'),(19830,'Pablo Sabino Ferreira','599913710','76;'),(19831,'Pablo Santana Cardoso De Almeida','531550576','77;'),(19832,'Pablo Vinicius Da Silva','503596590','78;'),(19833,'Paloma Abid Castilho','593808605','79;'),(19834,'Paloma Coelho De Lemos','569593542','80;'),(19835,'Paloma Pereira Brito','37507305','81;'),(19836,'Paloma Weine Santos Viana','21122667','82;'),(19837,'Pamela De Lima','563762500','83;'),(19838,'Pamela Suellen Rocha','539081061','84;'),(19839,'Pamela Teodoro Celestino','536376499','85;'),(19840,'Pamella Pugliessa Leal Araujo','502893230','86;'),(19841,'Paola De Lima Pires','500985509','87;'),(19842,'Paola Freitas Bezerra','378057650','88;'),(19843,'Paolla Borges Cardoso','537080636','89;'),(19844,'Patricia De Paula Guets','559151913','90;'),(19845,'Patricia Pereira Farias','379558324','91;'),(19846,'Patricia Winny Araujo De Matos','395083230','92;'),(19847,'Patrick Martins Claro Netto','380417029','93;'),(19848,'Paula Kaori Tamai','536306977','94;'),(19849,'Paulo Alberto Silva Sales','382369555','95;'),(19850,'Paulo Corazim Da Silva','505579340','97;'),(19851,'Paulo Henrique De Oliveira Alves','54426261','98;'),(19852,'Paulo Henrique Dos Santos Tristao','383982686','99;'),(19853,'Paulo Henrique Fabiano','577296140','100;'),(19854,'Paulo Henrique Lima Ventrame','581820964','101;'),(19855,'Paulo Sergio De Lima Filho','533306449','103;'),(19856,'Paulo Vinicius Vieira De Souza','559414195','104;'),(19857,'Paulo Vitor Souza Bortoleto','565547665','105;'),(19858,'Pedro Augusto Palma','571807306','106;'),(19859,'Pedro Da Silva Menezes','524272098','107;'),(19860,'Pedro Dos Santos','547212069','109;'),(19861,'Pedro Gabriel Otani Mendes Da Silva','397808240','110;'),(19862,'Pedro Gomes Da Silva','505050596','111;'),(19863,'Pedro Gustavo De Oliveira Cavalini','530206493','112;'),(19864,'Pedro Henrique Almeida Hortela','503993621','113;'),(19865,'Pedro Henrique Alves Lima','553168174','114;'),(19866,'Pedro Henrique Amarante Galves','399950588','115;'),(19867,'Pedro Henrique Candido Ribeiro','381878351','1;'),(19868,'Pedro Henrique Da Cruz','507079528','2;'),(19869,'Pedro Henrique De Melo E Silva','399953292','3;'),(19870,'Pedro Henrique De Oliveira Alves','544262621','4;'),(19871,'Pedro Henrique De Souza Ramos','388667746','5;'),(19872,'Pedro Henrique Do Monte Almeida','58578534','6;'),(19873,'Pedro Henrique Kenji De Luna Shimabukuro','552776804','7;'),(19874,'Pedro Henrique Meneghetti Manca','524676641','8;'),(19875,'Pedro Henrique Quiles Coelho','386149628','9;'),(19876,'Pedro Henrique Quinsan Rocha','396384821','10;'),(19877,'Pedro Henrique Vieira De Souza','537070989','11;'),(19878,'Pedro Ian Santos Antonelli','608895623','12;'),(19879,'Pedro Lucas Sabino Marcello','505319093','13;'),(19880,'Pedro Oliveira Tavares','532170052','14;'),(19881,'Pedro Romero Sanches Batista','390622308','15;'),(19882,'Pedro Rossi Correia','582428968','16;'),(19883,'Pedro Santos Basilio','627150433','17;'),(19884,'Pedro Vinicius De Assis Oliveira','390066242','18;'),(19885,'Peterson Da Silva Nascimento','538076926','19;'),(19886,'Phellipe Araujo Dos Santos','505053100','20;'),(19887,'Poliana Andrade Pinheiro','553700054','22;'),(19888,'Poliana Wendy Silva Santos','539456550','23;'),(19889,'Polyana Vitoria Kawakami Silva','396733037','24;'),(19890,'Querem Hapuque Martinho','537425172','25;'),(19891,'Rabeche Credendio Barbosa Da Silva','556914326','26;'),(19892,'Radija Eulalia De Oliveira Alvees','544262013','27;'),(19893,'Rafael Amaral De Oliveira','406063795','28;'),(19894,'Rafael Antonio Novaes Bevilacqua','524670365','29;'),(19895,'Rafael Carlos De Lima Abreu','386689179','31;'),(19896,'Rafael Dos Santos Monteiro Sousa','532211832','32;'),(19897,'Rafael Jose Ferreira Da Silva','502439154','34;'),(19898,'Rafael Mizuno Fraga','500704569','35;'),(19899,'Rafael Oliveira Melo','523414961','37;'),(19900,'Rafael Siqueira Menezes','522941357','39;'),(19901,'Rafaela Barbosa Ribeiro Dos Santos','505585121','40;'),(19902,'Rafaela De Oliveira Da Silva','581340978','41;'),(19903,'Rafaela Guedes Valensoela','522729939','43;'),(19904,'Rafaela Nunes Ribeiro','609337476','44;'),(19905,'Rafaela Rota Scurato','7007038','45;'),(19906,'Rafaella Galdino Serra','504821751','46;'),(19907,'Rafaella Ribeiro','588449568','47;'),(19908,'Raiane Emanuelle Lino De Assuncao','497699898','48;'),(19909,'Raiane Jacinto Da Cruz','566056021','49;'),(19910,'Rakelly Da Silva Ferreira','55944428','52;'),(19911,'Ramon Moreira De Souza','504843928','53;'),(19912,'Ramon Naguel De Campos Barbosa','572236657','54;'),(19913,'Raphael Lucio Oliveira','552512503','55;'),(19914,'Raphael Nogueeira Da Silva','548457165','56;'),(19915,'Raphaela Nunes Massola','386764384','57;'),(19916,'Raquel Campos Ferreira','509682261','58;'),(19917,'Raquel Cardoso Da Silva','292592300','59;'),(19918,'Raquel Ferreira Dos Santos','592423037','61;'),(19919,'Raquel Ferreira Pinto','501808334','62;'),(19920,'Raquel Licanor Gomes','526420078','63;'),(19921,'Raquel Pinheiro Dos Reis','39965687','64;'),(19922,'Raquel Rocha Xavier','38332936','65;'),(19923,'Raquel Rosa Da Silva','574165927','66;'),(19924,'Raul Biscaro Benzi','540726382','67;'),(19925,'Raul Sousa Perroni','545220543','68;'),(19926,'Rayan Da Silva De Souza','353549400','69;'),(19927,'Rayane Barbosa De Sa','385347509','70;'),(19928,'Rayckson Silva De Oliveira','559415564','71;'),(19929,'Rayssa Fernandes De Aquino','553152920','72;'),(19930,'Rebeca Avallone Machado','384673132','73;'),(19931,'Rebeca Cocki','563203377','74;'),(19932,'Rebeca Correa De Moraes','521653356','75;'),(19933,'Rebeca Dos Santos Souza','530740175','77;'),(19934,'Rebeca Maria Dos Reis Santos','570468097','78;'),(19935,'Rebeca Melo Meneses','565613376','79;'),(19936,'Rebecca Amaral De Freitas','54447983','80;'),(19937,'Rei Kusaba','588674205','82;'),(19938,'Reinara Martins Da Silva','553175956','83;'),(19939,'Renan Alves Costa','537473439','84;'),(19940,'Renan Andrade De Lima','399958046','85;'),(19941,'Renan Bernandes Uccio','500266281','86;'),(19942,'Renan Carlos Silva','551071850','87;'),(19943,'Renan Lucas Brandao Do Nascimento','543853652','88;'),(19944,'Renan Nicanor De Godoy Santos','487792075','89;'),(19945,'Renan Quilicone Wandeur','509291090','91;'),(19946,'Renata Dos Santos De Abreu','543251329','92;'),(19947,'Renata Silva Penteado','520850725','93;'),(19948,'Renato Santos Ferreira','392732063','94;'),(19949,'Renato Teodoro Soares','567110175','95;'),(19950,'Rene Gabriel Guimaraes Ferreira','540736703','96;'),(19951,'Renildo Souza Da Rocha','560789117','97;'),(19952,'Renna Tronco Alves Pinto','629119892','98;'),(19953,'Rhodney De Araujo','544158805','101;'),(19954,'Rian Tito Da Costa','505462229','102;'),(19955,'Ricardo Neves Da Silva','569976650','103;'),(19956,'Richard Soares Luz','527173289','104;'),(19957,'Rikelme Moreira Cruz','37846632','105;'),(19958,'Roana Camargo Da Silva','520304846','106;'),(19959,'Roberta Kallyane Carmo Dos Santos','524025472','107;'),(19960,'Roberto Bispo Filho','509343399','108;'),(19961,'Roberto Gregorio Junior','386126690','109;'),(19962,'Robson Bettencort De Lima','553670396','110;'),(19963,'Robson De Lima Freitas','436087637','111;'),(19964,'Robson Fabricio Santos','521389100','112;'),(19965,'Rodrigo Bezerra Da Silva','557519901','113;'),(19966,'Rodrigo Cosmo Dos Santos','37663733','1;'),(19967,'Rodrigo De Assis Brito','376641149','2;'),(19968,'Rodrigo Oliveira Bispo','394354606','3;'),(19969,'Rodrigo Yuji Ivasa','530215391','4;'),(19970,'Romulo Nunes Lira','509162149','5;'),(19971,'Ronald Mateus Alencar Da Silva','389247947','6;'),(19972,'Ronaldo Da Silva Melo','138394465','8;'),(19973,'Ronildo Pereira De Almeida','237518041','9;'),(19974,'Rosilei Saraiva Pessoa Ferreira','202121938','10;'),(19975,'Rosivane De Almeida Moura','438289973','11;'),(19976,'Rubens Sanches','532163795','12;'),(19977,'Rute Oliveira','551423705','13;'),(19978,'Ruth Caroline Feliciano Ramos','521374741','14;'),(19979,'Ruth Da Silva Almeida','570533508','15;'),(19980,'Ryan Aparecido De Moraes Souza','555125385','16;'),(19981,'Ryan Araujo Franco','547425776','17;'),(19982,'Ryan Dos Santos Pereira','551416221','18;'),(19983,'Ryan Henrique Acevili Santos','545850939','20;'),(19984,'Ryan Lucas Pereira Campos','396132996','21;'),(19985,'Sabrina Aparecida Nunes Araujo','503633938','22;'),(19986,'Sabrina Aquino Da Silva','499055433','23;'),(19987,'Sabrina Ayres Paiva','558611850','24;'),(19988,'Sabrina Bonugli Oliveira','55943585','26;'),(19989,'Sabrina De Melo Lima','620987182','27;'),(19990,'Sabrina Dos Santos Eufrasio','398383984','28;'),(19991,'Sabrina Faria Dos Reis','396142916','29;'),(19992,'Sabrina Goncalves Da Silva','385823046','30;'),(19993,'Sabrina Leonilda Oliveira','482278651','31;'),(19994,'Sabrina Minelly Rodrigues Souza','484236088','32;'),(19995,'Sabrina Nunes Castro','554228828','33;'),(19996,'Sabrina Oliveira Souza','553692987','34;'),(19997,'Sabrina Praxedes Tannuri','373179169','35;'),(19998,'Sabrina Ribeiro','588449520','36;'),(19999,'Sabrina Ribeiro Dos Santos','502535301','37;'),(20000,'Sabrina Santos De Oliveira','549112042','38;'),(20001,'Sabryna Marcelino Bego','556035410','39;'),(20002,'Sabrynny Dos Santos Martins','550423618','40;'),(20003,'Sag Salvadora De Seixa','159808418','41;'),(20004,'Samara Batista Rodrigues','385329763','42;'),(20005,'Samara Guilherme Da Silva','375692903','43;'),(20006,'Samara Padilha Vieira','557795321','44;'),(20007,'Samira Da Silva Gois','57760921','45;'),(20008,'Samira Dos Santos Abrao','536707777','46;'),(20009,'Samuel Barbosa Oliveira','536693341','47;'),(20010,'Samuel Costa Silva','385694921','48;'),(20011,'Samuel Da Silva Martinho','490916533','49;'),(20012,'Samuel Oliveira Santos','371090908','51;'),(20013,'Samuel Pedro Silva Dos Santos','375207892','52;'),(20014,'Samyra Fernandes Miranda Da Silva','381583831','53;'),(20015,'Sara Gabriely Souza Quirino','380422840','54;'),(20016,'Sarah Gentino Dos Santos','378920170','57;'),(20017,'Sarah Ladislau Gomes','585978773','58;'),(20018,'Sarah Pires','64395059','59;'),(20019,'Sarah Vitoria Lucero De Campos','380409148','60;'),(20020,'Sarai Silva Pereira','592116657','61;'),(20021,'Sergio Araujo De Assis','223528900','62;'),(20022,'Sergio Gabriel Da Silva Araujo','536381860','63;'),(20023,'Sergio Ricardo Pereira','23401801','64;'),(20024,'Sergio Vitor Silva Barros','56153598','65;'),(20025,'Shaiane Wendy Macena Silva','568675228','66;'),(20026,'Shelda Dos Santos Laurindo','389624470','67;'),(20027,'Shirlei Regina Santiago Martins De Araujo','352506246','68;'),(20028,'Sidnei Viana Da Silva','626676678','69;'),(20029,'Sidney Denis De Oliveira Souza','54139535','70;'),(20030,'Sidney Junior Marques Carvalho','383320501','71;'),(20031,'Sidney Pereira Da Silva','380343204','72;'),(20032,'Sofia Cehanavicius Freire Mamao Gouveia','50724431','73;'),(20033,'Sofia Maria Da Silva Pacheco','397813041','74;'),(20034,'Sofia Oyagawa Mainetti','505456357','75;'),(20035,'Sofia Petronieri De Almeida','531939029','76;'),(20036,'Sofia Sena Tavares','383009315','77;'),(20037,'Sofie Goncalves Guedes','572622880','1;'),(20038,'Sophia De Felipe Souza','552775988','2;'),(20039,'Sophia Rosin Barroquelo Goncalves','551415587','4;'),(20040,'Stefane Caixeta Almeida','379133775','5;'),(20041,'Stefanie Cristina Costa Batista','37696005','6;'),(20042,'Stefanie Rodrigues Da Silva','534863024','7;'),(20043,'Stefanny Novaes Sanches','375476684','8;'),(20044,'Stefany Battistini Do Nascimento','573918181','9;'),(20045,'Stefany Bucholcas Lima','578200995','10;'),(20046,'Stefany Fonseca Dantas','390649466','11;'),(20047,'Stefanye Matsuda De Souza','578025759','12;'),(20048,'Stella Mota De Lima','507495883','13;'),(20049,'Stephanie De Souza Santos','381884764','15;'),(20050,'Stephany Torres Do Nascimento','388847219','17;'),(20051,'Sthefany Pereira De Andrade','589232800','18;'),(20052,'Sthefany Silva Borges De Melo','399445225','19;'),(20053,'Sueli Barbosa','384361080','20;'),(20054,'Suellen Andressa Pereira Moreira','384990241','22;'),(20055,'Suellen Cristiny Feliciano Campos','395358012','23;'),(20056,'Susi Mendonca Da Silva','397822741','25;'),(20057,'Suzana De Andrade Souza','577664797','26;'),(20058,'Swellen Rodrigues Goncalves Cofani','43619644','27;'),(20059,'Taina Araujo Mendes','563881011','28;'),(20060,'Tainah Andrade Klein','388990119','29;'),(20061,'Taisa Gabrielle Albuquerque Genda','505576429','30;'),(20062,'Talita Julia Da Silva','399032502','31;'),(20063,'Talita Matos Da Silva','583479789','32;'),(20064,'Talita Matos De Oliveira','520120759','33;'),(20065,'Talita Oliveira Bernal','396221890','34;'),(20066,'Talles Bottaccini Ruiz','557231103','35;'),(20067,'Tallysson Yuri Campelo Fidelis','382359677','36;'),(20068,'Tamires Barboza Dos Santos','382361374','38;'),(20069,'Tamiris Souza Barbosa','540974912','39;'),(20070,'Tatiana Jesus Da Silva','307481256','41;'),(20071,'Tayara Cristina Dos Anjos','383329590','42;'),(20072,'Tayna Vitoria Santos Dionisio','394148824','43;'),(20073,'Taynner Antunes Eufrasio','55367299','44;'),(20074,'Tereza Beatriz De Matos Torres','548702044','45;'),(20075,'Thago Fernandes Dias','570065240','46;'),(20076,'Thaina De Barros Silva','538944833','47;'),(20077,'Thaina Gomes Silva','55317082','48;'),(20078,'Thaina Gonder Rodrigues Xavier','397536823','49;'),(20079,'Thaina Mendes Gobetti','553172682','50;'),(20080,'Thaina Siqueira Vasconcelos','553683160','51;'),(20081,'Thaira Roma De Paula','595750163','52;'),(20082,'Thais Barbosa Lino','444972961','54;'),(20083,'Thais Da Silva Alves','501810201','55;'),(20084,'Thais Da Silva Guilherme','384334702','56;'),(20085,'Thais Da Silva Santos','521650781','57;'),(20086,'Thais De Almeida Da Silva','390663943','59;'),(20087,'Thais Maria Ferreira','45163712861','60;'),(20088,'Thais Medeiros Da Silva','392727055','61;'),(20089,'Thais Mendes Gobetti','553176419','62;'),(20090,'Thais Mirelly Da Conceicao Sousa','567633391','63;'),(20091,'Thais Reis Guirra Da Silva','365115745','64;'),(20092,'Thais Soares Nascimento','506390974','65;'),(20093,'Thais Vieira Souza','541615178','66;'),(20094,'Thais Vitoria Ribeiro Basso Ferreira','59172277','67;'),(20095,'Thaissa Da Silva Gomes','601656362','68;'),(20096,'Thales Amaral','387345139','69;'),(20097,'Thales Goncalves Silva','529806514','70;'),(20098,'Thalita Alves Cortes Costa','533022228','72;'),(20099,'Thalita Neri Santiago','382452082','73;'),(20100,'Thalita Soares Mota','552924362','74;'),(20101,'Thalles Araujo Pinheiro','572599390','75;'),(20102,'Thalles Vinicius Bezerra Alves','555179771','76;'),(20103,'Thalya Regina Lucas Fantim','569171209','77;'),(20104,'Thatiane Tognelli De Camargo Marques','388970078','2;'),(20105,'Thauany Fernanda Silva De Melo','585957174','3;'),(20106,'Thauany Passaretti Freire','552511729','4;'),(20107,'Thawan Oliveira Simao','507483923','5;'),(20108,'Thayane Moreira Reis','527329241','6;'),(20109,'Thayna Andrade Celeste','567893777','7;'),(20110,'Thayna Elizabeth Do Espirito Santo Diniz','367705679','8;'),(20111,'Thayna Yasmin Souza Santos','57596246','9;'),(20112,'Thaynara De Jesus Dine','544252731','10;'),(20113,'Thiago Aparecido Dos Santos Martins','558754764','12;'),(20114,'Thiago Cesar Adriano Da Silva','395706567','13;'),(20115,'Thiago De Figueredo Limeira','605476196','15;'),(20116,'Thiago Emanuel Reis Pereira','414971500','16;'),(20117,'Thiago Henrique Moreto','591285344','18;'),(20118,'Thiago Ribeiro Granjeiro','540233390','20;'),(20119,'Thiago Tadeu Bento Da Silva','480383832','21;'),(20120,'Thierry Lichtenthaler','558062003','22;'),(20121,'Thomass Alberto Fernandes','382998108','23;'),(20122,'Thomaz Roque Rodrigues','480045987','24;'),(20123,'Tiago Henrique Celestino De Paula Santos','383154248','26;'),(20124,'Tiago Henrique Santos Perez','595842069','27;'),(20125,'Tifany Mariane Ferreira','506383866','28;'),(20126,'Tiffany Alves Ferreira Torres','53449934','29;'),(20127,'Toassys Pereira Da Cunha','24583804','30;'),(20128,'Tuany Marques Reiter Alves','552211382','31;'),(20129,'Vagner Nicolau De Souza','175388179','32;'),(20130,'Vallentino Prozzo Ranulfo','527131933','34;'),(20131,'Valmir Castilho Junior','540727878','35;'),(20132,'Vanessa Barbosa Santos','384991725','36;'),(20133,'Vanessa Carvalho De Lima','501810602','37;'),(20134,'Vanessa Isis Hoschett Morales De Oliveira','571659512','38;'),(20135,'Vanessa Manarin Vara','396244452','39;'),(20136,'Vanessa Senziani','572727306','40;'),(20137,'Vanessa Souza Santos','397189801','41;'),(20138,'Vanusa Andara Bispo Dos Santos','587093596','42;'),(20139,'Veronica Vitoria Rocha Figueira','592495954','44;'),(20140,'Victor Augusto Vianna Gimenez','374766186','45;'),(20141,'Victor Binder','368578768','46;'),(20142,'Victor Correia Giacomi','381249392','47;'),(20143,'Victor Da Silva Teixeira','52045859','48;'),(20144,'Victor Dos Santos Araujo Lima','393067804','49;'),(20145,'Victor Farinelli Moreto','557238171','50;'),(20146,'Victor Guilherme Marianno Dias','38469164','51;'),(20147,'Victor Hernandes Jardim','582250353','52;'),(20148,'Victor Hugo Ramiro Cota','388489510','54;'),(20149,'Victor Martins Franchi','569166147','55;'),(20150,'Victor Matheus Almeida Dos Santos','386141617','56;'),(20151,'Victor Matheus Cruz','386249064','57;'),(20152,'Victor Nunes Da Silva','382989041','58;'),(20153,'Victor Paiva Rodrigues','52274039','59;'),(20154,'Victor Rodrigues','386752096','60;'),(20155,'Victor Silva Ramos','574470517','61;'),(20156,'Victor Souza Cabral','38534059','62;'),(20157,'Victoria Dos Reis Campos','525948855','63;'),(20158,'Victoria Ferreira Dos Santos','38885229','64;'),(20159,'Victoria Gamero Ventreschi','541050552','65;'),(20160,'Victoria Jacomel Camilo','502436001','2;'),(20161,'Victoria Karollyna Rosa Daboin','528043328','3;'),(20162,'Victoria Nathaly Carmo Dos Santos','524025551','4;'),(20163,'Victoria Reis Rocha','606917056','7;'),(20164,'Victorya Francielly Dos Santos Lopes','525944333','8;'),(20165,'Vikelle Candida De Brito Jesus','397833933','9;'),(20166,'Vinciius Gandolfo Faustino','390312046','10;'),(20167,'Vinicios Garcia Fagundes','57558287','11;'),(20168,'Vinicios Oliveira Souza','506041207','12;'),(20169,'Vinicius Bueno Barbosa','506216627','13;'),(20170,'Vinicius De Araujo Duarte','583491984','15;'),(20171,'Vinicius De Melo Barbosa Da Silva','555396502','16;'),(20172,'Vinicius De Souza Ferro','56309476','17;'),(20173,'Vinicius Do Nascimento Generoso','506406910','18;'),(20174,'Vinicius Gabriel Ferreira Lopes','595159321','19;'),(20175,'Vinicius Haruki Kato','562665225','20;'),(20176,'Vinicius Heberth Ceron Carvalho','375201075','21;'),(20177,'Vinicius Lopes Pereira','490823762','22;'),(20178,'Vinicius Luiz Sousa Costa','547716357','23;'),(20179,'Vinicius Medrado Pacheco','390229234','24;'),(20180,'Vinicius Pereira Silva','378947230','25;'),(20181,'Vinicius Rosario Cordeiro','5219210759','26;'),(20182,'Vinicius Schiavo','505046738','27;'),(20183,'Vinicius Silva Dos Reis','528196121','28;'),(20184,'Vinicius Teixeira Barbosa','577456519','30;'),(20185,'Vinicius Vianna Arrudas','60716380','31;'),(20186,'Vinicius Willian Campos Galli','387115912','32;'),(20187,'Vito Teodoro Dos Santos','399647004','33;'),(20188,'Vitor Abner Silva','391950204','34;'),(20189,'Vitor De Lima Cortes','582139879','35;'),(20190,'Vitor De Souza Claudino Da Silva','506210467','36;'),(20191,'Vitor De Souza Silva','37332294','37;'),(20192,'Vitor Evangelista De Oliveira','39006340','39;'),(20193,'Vitor Frade De Souza','592077536','40;'),(20194,'Vitor Francisco De Assis','383356933','41;'),(20195,'Vitor Henrique Barreto','546520972','42;'),(20196,'Vitor Henrique Machado','393331350','43;'),(20197,'Vitor Hofmann De Freitas','533023701','44;'),(20198,'Vitor Janovitch Nicoliche','19216478','45;'),(20199,'Vitor Nascimento Dos Santos','38422474','46;'),(20200,'Vitor Negreiro Andrade','377244739','47;'),(20201,'Vitor Silva Santos','553665479','49;'),(20202,'Vitoria Batista Maia','39945231','50;'),(20203,'Vitoria Carla Amaral Da Rocha','382576871','51;'),(20204,'Vitoria Caroline Da Franca Cruz','507094992','52;'),(20205,'Vitoria Cavalcante Freitas','392146502','53;'),(20206,'Vitoria Cristina De Carvalho Albernas','379265072','54;'),(20207,'Vitoria Cristina Ferreira Dos Santos','546509526','55;'),(20208,'Vitoria De Melo Silva Oliveira','566220829','56;'),(20209,'Vitoria Dos Reis Muricy','392485424','57;'),(20210,'Vitoria Eduarda Cavalaro Cruz','579487829','58;'),(20211,'Vitoria Esmeria De Moura','649971632','59;'),(20212,'Vitoria Estefanny De Sousa Rocha','528047899','60;'),(20213,'Vitoria Fernandes Pires','386891631','61;'),(20214,'Vitoria Gabriele De Matos Silva','50620764','62;'),(20215,'Vitoria Gabriella De Paula Conceicao','213018831','63;'),(20216,'Vitoria Gomes Da Silva','559007565','1'),(20217,'Vitoria Maria Dos Santos','557322285','3'),(20218,'Vivian Aires De Carvalho','5668319242','6'),(20219,'Viviane Alves Santana','345176030','7'),(20220,'Wagner Feliciano Da Silva','431304385','8'),(20221,'Wallace Caliel Dos Santos Silva','509673892','9'),(20222,'Walner Bezerra Da Silva','580717781','10'),(20223,'Wanessa Ribeiro Souza','534862366','11'),(20224,'Weider Brelmer De Paula De Almeida Ferreira','381266837','12'),(20225,'Wellington Aparecido De Oliveira','493398314','14'),(20226,'Wellington Heleno Da Silva','541381635','15'),(20227,'Wellington Jose Magaton Filho','501500698','16'),(20228,'Wellington Soares Dos Santos','398319613','17'),(20229,'Wendell Camara Maschette','380801220','18'),(20230,'Wesley Barbosa Ferreira Da Silva','549305361','19'),(20231,'Wesley Henrique Ferrarezi','536701684','20'),(20232,'Wesley Inacio Romero','581955286','21'),(20233,'Wesley Luan Menezes Do Carmo Cardoso','521651505','22'),(20234,'Wesley Santos De Franca','538106748','23'),(20235,'Weslley Dos Santos Sousa','575998350','24'),(20236,'Weverson Inacio Da Silva Lemos','631910750','25'),(20237,'William Bello Da Guarda Ferreira','429514050','26'),(20238,'William De Souza Odoardi','558662638','27'),(20239,'William Fernandes Dos Santos','488337689','28'),(20240,'William Silva Guedes Da Costa','391070381','29'),(20241,'Willian Balieiro Calvo','391940715','30'),(20242,'Willian De Almeida Pedro','375966160','31'),(20243,'Willian De Almeida Rodrigues','569682605','32'),(20244,'Willian Renan Cavalcante De Queiroz','536944702','33'),(20245,'Willian Wallace Martins','505233617','34'),(20246,'Willians Gadelha De Sousa','564045470','35'),(20247,'Willy Moreira Santos','530178953','36'),(20248,'Yan Estevam Dos Santos','396730840','37'),(20249,'Yan Luiz Lins Albuquerque Silva Almaral','590100970','38'),(20250,'Yan Monteiro Guilherme','569001900','39'),(20251,'Yara Felix Da Costa','531430625','40'),(20252,'Yasmim Carlos Chernioglo','395711265','41'),(20253,'Yasmim De Sousa Lima','381578860','42'),(20254,'Yasmim Maria Cavalcante','536944623','43'),(20255,'Yasmin Aguiar Ataide','525930590','44'),(20256,'Yasmin Amorim De Sousa','530959781','45'),(20257,'Yasmin Arife Dos Santos','533550294','46'),(20258,'Yasmin Butini Tome','393346973','48'),(20259,'Yasmin De Souza','591393578','49'),(20260,'Yasmin Dias De Oliveira','578571481','50'),(20261,'Yasmin Elizabete Da Silva','195076980','51'),(20262,'Yasmin Figueiredo Da Silva','398622851','52'),(20263,'Yasmin Lima De Jesus','551074863','53'),(20264,'Yasmin Lopes De Oliveira','550994890','54'),(20265,'Yasmin Santos Milanelo Nogueira','394854160','57'),(20266,'Yasmin Santos Moreno','520978936','58'),(20267,'Yasmin Simoes Borges','551077827','59'),(20268,'Yasmin Soares De Souza','505669067','60'),(20269,'Yasmin Souza Lopes','505064558','61'),(20270,'Ygor Kelwin Braz Da Silva','491264112','62'),(20271,'Ygor Stanescu Leschics Bonafe','569066001','63'),(20272,'Yohana Pereira Santos','660831156','64'),(20273,'Andressa Maria Cordeiro Laurentino','503849327','2'),(20274,'Bruno Ferreira Gomes','484294131','3'),(20275,'Carolina Da Silva Miyashiro','339642221','4'),(20276,'Gloria Maria Aparecido Da Silva','379128974','6'),(20277,'Isabela Clemente Neves','532901162','7'),(20278,'Isabella Fontes Vieira Da Costa','372557820','8'),(20279,'Marcos Capistrano De Lima','374713601','9'),(20280,'Maria Vitoria Ferreira Da Rocha','644133363','10'),(20281,'Miriam Cristina Pessoa','207507570','11'),(20282,'Pamela Janine Dlugosz','563363253','12'),(20283,'Suellen Chaves Galeano','364206573','13'),(20284,'Thais Regina Scavazza Da Silva','333091851','14'),(20285,'Thales Prates De Oliveira','388484925','15'),(20286,'Beatriz Alves De Souza','4067194889','40'),(20287,'Bianca Dias Alves','5856821204','79'),(20288,'Arthur Maia D Alessandro','5091846250','26'),(20289,'Guilherme Ferreira Santos','3902974220','35'),(20290,'Hugo Silva Mesquita','3906126130','32'),(20291,'Mariana Proenca D Amaral','5378794440','42'),(20292,'Larielle Santos Vieira de Oliveira','544449528','1'),(20293,'Julia Navalon Golia','5472228594','2'),(20294,'Adrieli Correia dos Santos','5304555146','4'),(20295,'Nickolas Dias Saldanha','540226762','7'),(20296,'Ana Luisa Silva de Aquino','5720022633','8'),(20297,'Cecilia Maria de Oliveira Guimaraes','5811826322','9'),(20459,'List Zamp','302','lists.zampirolli@gmail.com'),(20460,'Fabio Akamine','101','fabio.akamine@aluno.ufabc.edu.br'),(20461,'Lucas David Vadilho','102','lucas.david@aluno.ufabc.edu.br'),(20462,'Pedro Henrique Batistela Lopes','103','lopes.pedro@aluno.ufabc.edu.br'),(20463,'Juliana Sanches Marques','104','j.sanches@aluno.ufabc.edu.br'),(20464,'Gustavo Rodrigues Paes','105','gustavo.paes@aluno.ufabc.edu.br'),(20465,'Lucas Montagnani Calil Elias','106','lucas.montagnani@aluno.ufabc.edu.br'),(20466,'George Harrison Rocha','107','george.rocha@aluno.ufabc.edu.br'),(20467,'LEONARDO RYO NAKAGAWA','108','leonardo.ryo@aluno.ufabc.edu.br'),(20468,'Saulo Ramos','109','saulo.ramos@ufabc.edu.br'),(20469,'Muhsen Hammoud','110','muhsen.hammoud@ufabc.edu.br'),(20470,'Amanda Oliveira Bispo','111','a.bispo@aluno.ufabc.edu.br'),(20471,'Edson Pimentel','201','edson.pimentel@ufabc.edu.br'),(20472,'Francisco Zampirolli','202','fzampirolli@ufabc.edu.br'),(20473,'Itana Stiubiener','203','itana.stiubiener@ufabc.edu.br'),(20474,'Juliana Braga','204','juliana.braga@ufabc.edu.br'),(20475,'Luiz Rozante','205','luiz.rozante@ufabc.edu.br'),(20476,'Gordana Manic','206','manic.gordana@ufabc.edu.br'),(20477,'Fernando Teubl','207','fernando.teubl@ufabc.edu.br'),(20478,'Joao Paulo Gois','208','joao.gois@ufabc.edu.br'),(20479,'Aluno Teste Edson Pimentel','99371316','edson.p.pimentel@gmail.com'),(20490,'Camila Cristina Hemeque','11201810948','camila.hemeque@aluno.ufabc.edu.br'),(20491,'Bruna Basille Jacyntho','11201811027','b.basille@aluno.ufabc.edu.br'),(20503,'Daniela Pinheiro Araujo','11201921679','daniela.araujo@aluno.ufabc.edu.br'),(20524,'Thiago Borja Gracindo','11201812169','t.borja@aluno.ufabc.edu.br'),(20538,'RABESH NARUMI MURATA','11201921149','rabesh.murata@aluno.ufabc.edu.br'),(20573,'GABRIEL CICERO DA SILVA','11201810629','silva.gabriel@aluno.ufabc.edu.br'),(20608,'Karina Paula de Andrade Duarte','11201811368','andrade.duarte@aluno.ufabc.edu.br'),(20637,'Iago Dias Calegari','11201921886','iago.calegari@aluno.ufabc.edu.br'),(20666,'PIETRA VENEGAS BRANCO','11201921560','p.venegas@aluno.ufabc.edu.br'),(20680,'MATHEUS GUSTAVO LOPES FRADE','13201723211','matheus.gustavo@aluno.ufabc.edu.br'),(20701,'VALERIA GOMES BARBOZA','11201920629','v.gomes@aluno.ufabc.edu.br'),(20722,'Alan Danilo dos Santos Casote','11118016','alan.casote@aluno.ufabc.edu.br'),(20723,'ALINE VITORIA SILVA DE LIMA','11201810152','henrique.rossi@aluno.ufabc.edu.br'),(20724,'ANDRE LUIZ BASSETTO BOFFA','11201922182','wagner.s@aluno.ufabc.edu.br'),(20725,'Bruno de Oliveira Carvalho','21035014','alan.casote@aluno.ufabc.edu.br'),(20726,'Beatriz de Campos','11201920827','v.gomes@aluno.ufabc.edu.br'),(20727,'Beatriz Carneiro','11201810816','hugo.bento@aluno.ufabc.edu.br'),(20728,'Beatriz De Freitas Pereira','11201920765','v.gomes@aluno.ufabc.edu.br'),(20729,'BEATRIZ VITALE LAFLOUFA STANGHI','11201920234','t.moggi@aluno.ufabc.edu.br'),(20730,'Bruna Roberta Bento','11201811547','hugo.bento@aluno.ufabc.edu.br'),(20731,'CRISTIANE DE ARAUJO GOMES','11201822510','t.moggi@aluno.ufabc.edu.br'),(20732,'Caique Nascimento','11201920417','t.moggi@aluno.ufabc.edu.br'),(20733,'Gabriel De Andrade De Campos','11201810642','hugo.bento@aluno.ufabc.edu.br'),(20734,'DANGEL GONCALVES PEREIRA','11201932551','wagner.s@aluno.ufabc.edu.br'),(20735,'Daniela Guedes Da Silva','11201932607','wagner.s@aluno.ufabc.edu.br'),(20736,'DARIO ROSTO DELLA','11201722850','henrique.rossi@aluno.ufabc.edu.br'),(20737,'ERIKA BRASSEL ORELLANA','11201921702','vinicius.leme@aluno.ufabc.edu.br'),(20738,'Everson Messias Da Silva','11201720366','henrique.rossi@aluno.ufabc.edu.br'),(20739,'Fernanda Jandoso Souza','11201921542','vinicius.leme@aluno.ufabc.edu.br'),(20740,'GABRIEL FELIPE ROMANO DE JESUS','11201811548','hugo.bento@aluno.ufabc.edu.br'),(20741,'Gabriel Henrique Samora Pecego','11201921854','vinicius.leme@aluno.ufabc.edu.br'),(20742,'Gabrielly Vitoria Palmeira De Oliveira','11201811172','hugo.bento@aluno.ufabc.edu.br'),(20743,'FERNANDA GOMES CASTRO','11201922128','wagner.s@aluno.ufabc.edu.br'),(20744,'GUILHERME DALTRINO TEODORO','11201720938','henrique.rossi@aluno.ufabc.edu.br'),(20745,'Igor Rodrigues Ferreira','11201921722','vinicius.leme@aluno.ufabc.edu.br'),(20746,'GIOVANNA SANCHES MARTINI','11201920237','t.moggi@aluno.ufabc.edu.br'),(20747,'Fernando Schroder Rodrigues','11201722068','henrique.rossi@aluno.ufabc.edu.br'),(20748,'GABRIEL SENCIO DO PRADO FREIRES','11201920470','t.moggi@aluno.ufabc.edu.br'),(20749,'ISABELLA ALVES DE OLIVEIRA','11201920175','t.moggi@aluno.ufabc.edu.br'),(20750,'Isadora Goes Brandi','11201810125','henrique.rossi@aluno.ufabc.edu.br'),(20751,'Joao Antonio De Oliveira Saldanha','11201810421','hugo.bento@aluno.ufabc.edu.br'),(20752,'Jordana Yumi Ayrizono','11201811731','ronaldy.gomes@aluno.ufabc.edu.br'),(20753,'Jullyane Maria Silva','11201921690','vinicius.leme@aluno.ufabc.edu.br'),(20754,'Lucas Alves Sanches','11201920560','t.moggi@aluno.ufabc.edu.br'),(20755,'LEONARDO JOSE BERTELLI','11201822492','t.moggi@aluno.ufabc.edu.br'),(20756,'Joao Victor De Lima Rodrigues','11201810341','hugo.bento@aluno.ufabc.edu.br'),(20757,'LUCAS CAIRO MENDES','11201812327','ronaldy.gomes@aluno.ufabc.edu.br'),(20758,'Mariane Cristina Batista Malouf','11201920500','t.moggi@aluno.ufabc.edu.br'),(20759,'Mauricio Passos Loiola','11201810606','hugo.bento@aluno.ufabc.edu.br'),(20760,'MELISSA DE SANT ANNA BALAZS VIEIRA','11201920672','v.gomes@aluno.ufabc.edu.br'),(20761,'MOISES MARTINEZ RODRIGUES','11201920450','t.moggi@aluno.ufabc.edu.br'),(20762,'NAYARA VALERIA JOCA GONCALVES','11201920767','v.gomes@aluno.ufabc.edu.br'),(20763,'Lucas Nobre Batista','11201810915','hugo.bento@aluno.ufabc.edu.br'),(20764,'PEDRO HENRIQUE DA ROSA SILVA','11201921484','vinicius.leme@aluno.ufabc.edu.br'),(20765,'Rafael Mendes de Menezes','11201822454','t.moggi@aluno.ufabc.edu.br'),(20766,'RAFAEL GONSAGA ULIAN','11201810858','hugo.bento@aluno.ufabc.edu.br'),(20767,'Renan Zenerato Ramazzini','11201812155','ronaldy.gomes@aluno.ufabc.edu.br'),(20768,'RIZIA DOS SANTOS BORGES','11201920371','t.moggi@aluno.ufabc.edu.br'),(20769,'ROBERSON HIROSHI YAMAMOTO','11201920651','v.gomes@aluno.ufabc.edu.br'),(20770,'RODRIGO BELLOTTI PEREIRA','11201920286','t.moggi@aluno.ufabc.edu.br'),(20771,'Samuel Aquino Silva','11201810557','hugo.bento@aluno.ufabc.edu.br'),(20772,'TAINA SANTOS DAMASIO','11201721907','henrique.rossi@aluno.ufabc.edu.br'),(20773,'THAINA ROBERTA FERREIRA DE BARROS','11201811873','ronaldy.gomes@aluno.ufabc.edu.br'),(20774,'VICTOR HUGO DO AMARAL MAGALHAES','11201812376','t.moggi@aluno.ufabc.edu.br'),(20775,'VITOR BALTAZAR CASTELLO BRANCO','11201810521','hugo.bento@aluno.ufabc.edu.br'),(20776,'Vitoria Monteiro da Silva','11201811797','ronaldy.gomes@aluno.ufabc.edu.br'),(20777,'AMANDA MIGUEL COUTINHO','11201810344','hugo.bento@aluno.ufabc.edu.br'),(20778,'Allana Souza Monteiro','11201920702','v.gomes@aluno.ufabc.edu.br'),(20779,'ADINAN ALVES DE BRITO FILHO','11201920527','t.moggi@aluno.ufabc.edu.br'),(20780,'Alana Cruz Silva','11201920385','t.moggi@aluno.ufabc.edu.br'),(20781,'Aline Kaneko Nakamura','11201722296','henrique.rossi@aluno.ufabc.edu.br'),(20782,'ALINE MILENE MARTINS DOS SANTOS','11201922126','wagner.s@aluno.ufabc.edu.br'),(20783,'Ana Carolina Honorio Silva De Carvalho','11201922206','wagner.s@aluno.ufabc.edu.br'),(20784,'Ana Tercia Lacerda De Araujo','11201810212','hugo.bento@aluno.ufabc.edu.br'),(20785,'ANA CLAUDIA BRAGA DA SILVA','11201811481','hugo.bento@aluno.ufabc.edu.br'),(20786,'ANDERSON PEDRO VELASCO','11201811703','ronaldy.gomes@aluno.ufabc.edu.br'),(20787,'Andre Luis Sarandini Ferreira','11201921210','victor.atolino@aluno.ufabc.edu.br'),(20788,'Antonio Lucas Barbosa Ferreira','11201920165','t.moggi@aluno.ufabc.edu.br'),(20789,'Bruna Torres Boldrini','11201812114','ronaldy.gomes@aluno.ufabc.edu.br'),(20790,'Beatriz Fraga','11201921684','vinicius.leme@aluno.ufabc.edu.br'),(20791,'Beatriz Montejani','11201810431','hugo.bento@aluno.ufabc.edu.br'),(20792,'BEATRIZ PETENA','11201921416','victor.atolino@aluno.ufabc.edu.br'),(20793,'BEATRIZ QUEIROZ','11201811763','ronaldy.gomes@aluno.ufabc.edu.br'),(20794,'Bianca Gandin Rodrigues Bosio','11201921603','vinicius.leme@aluno.ufabc.edu.br'),(20795,'Brenda Silva','11201723033','henrique.rossi@aluno.ufabc.edu.br'),(20796,'Bruna Barbosa de Medeiros','11201921713','vinicius.leme@aluno.ufabc.edu.br'),(20797,'Bruna Morandi Reis Menzato','11201920156','t.moggi@aluno.ufabc.edu.br'),(20798,'Bruna Monteiro De Oliveira','11201921012','v.gomes@aluno.ufabc.edu.br'),(20799,'Bruno Gabriel Nascimento Pina','11201811461','hugo.bento@aluno.ufabc.edu.br'),(20800,'Camila Chinarelli Nogueira De Lazaro','11201921489','vinicius.leme@aluno.ufabc.edu.br'),(20801,'CAMILLA MARQUES DA SILVA','11201812381','t.moggi@aluno.ufabc.edu.br'),(20802,'Carlos Miguel Serroni Sousa','11097915','carlos.serroni@aluno.ufabc.edu.br'),(20803,'Beatriz Rosa','11201722747','henrique.rossi@aluno.ufabc.edu.br'),(20804,'Ana Araujo','11201921667','vinicius.leme@aluno.ufabc.edu.br'),(20805,'CAROLINE BAZONI TEIXEIRA','11201921681','vinicius.leme@aluno.ufabc.edu.br'),(20806,'CAROLINA FERREIRA DE SOUZA','13201910011','wagner.s@aluno.ufabc.edu.br'),(20807,'CATERINA VARGAS BUENO','11201921896','vinicius.leme@aluno.ufabc.edu.br'),(20808,'CINTIA DE ESPINDOLA BEZERRA','11201921781','vinicius.leme@aluno.ufabc.edu.br'),(20809,'Claudia Regina Vieira Silveira','11201920420','t.moggi@aluno.ufabc.edu.br'),(20810,'Cristian Vitor Santos De Oliveira','21065515','alan.casote@aluno.ufabc.edu.br'),(20811,'Dalton Leonard Acchetta','11201921643','vinicius.leme@aluno.ufabc.edu.br'),(20812,'Davi Alves Fernandes','11201722070','henrique.rossi@aluno.ufabc.edu.br'),(20813,'Eduardo Rocca Taioque','11201920652','v.gomes@aluno.ufabc.edu.br'),(20814,'Edson Eidi Hossotani','11119216','alan.casote@aluno.ufabc.edu.br'),(20815,'Elenir Lindaura da Silva','11201921905','vinicius.leme@aluno.ufabc.edu.br'),(20816,'Enzo Erbert','11201920245','t.moggi@aluno.ufabc.edu.br'),(20817,'Esther Eun Ji Yang','11201812306','ronaldy.gomes@aluno.ufabc.edu.br'),(20818,'FAGNER SANTOS','11201811248','hugo.bento@aluno.ufabc.edu.br'),(20819,'FELIPE BORSOTTI DE SOUZA','11201920696','v.gomes@aluno.ufabc.edu.br'),(20820,'FELIPE JAMACARU DIAS','11201810783','hugo.bento@aluno.ufabc.edu.br'),(20821,'FERNANDO GABRIEL MANIA DOS SANTOS','11201920931','v.gomes@aluno.ufabc.edu.br'),(20822,'Flauberto Leite Lima','11201921769','vinicius.leme@aluno.ufabc.edu.br'),(20823,'Gabriel Leal Teixeira','11201810274','hugo.bento@aluno.ufabc.edu.br'),(20824,'GABRIEL CONTENTE MONTEFUSCO','11201922352','wagner.s@aluno.ufabc.edu.br'),(20825,'GABRIEL PIMENTEL DE ARAUJO BRAGA','11201811020','hugo.bento@aluno.ufabc.edu.br'),(20826,'GABRIEL MARTINS GARCIA','11201920232','t.moggi@aluno.ufabc.edu.br'),(20827,'DEBORAH LUCIA EDUVIRGE MATHIAS DE JESUS','11201921728','vinicius.leme@aluno.ufabc.edu.br'),(20828,'ENZO OGUIDO KIM','11201920904','v.gomes@aluno.ufabc.edu.br'),(20829,'GABRIEL DE LIMA SANTOS','11201932512','wagner.s@aluno.ufabc.edu.br'),(20830,'Edson Pinheiro Pimentel','209','edson.p.pimentel@gmail.com'),(20831,'Francisco Assis Zampirolli','301','fzampirolli@gmail.com'),(20832,'Glenda Lanzoni Bolzan','11201812249','ronaldy.gomes@aluno.ufabc.edu.br'),(20833,'Isabella Caballero Baptista Pereira','11201920436','t.moggi@aluno.ufabc.edu.br'),(20834,'Gabriel Costa','21078216','alan.casote@aluno.ufabc.edu.br'),(20835,'GUILHERME FAGUNDES BARBOSA','21086915','henrique.rossi@aluno.ufabc.edu.br'),(20836,'Gabriel Rossetto Migliorini','11201921763','vinicius.leme@aluno.ufabc.edu.br'),(20837,'Gabrieli Parra Silva','11201811869','ronaldy.gomes@aluno.ufabc.edu.br'),(20838,'GABRIEL TEOFILO KLESSE AVANSO','11201920138','t.moggi@aluno.ufabc.edu.br'),(20839,'Gabriela Franco Goncalves','11201811246','hugo.bento@aluno.ufabc.edu.br'),(20840,'Gabriela Sayuri Reboucas Obana','11201921666','vinicius.leme@aluno.ufabc.edu.br'),(20841,'GABRIELA PEREIRA LEITE','11201920155','t.moggi@aluno.ufabc.edu.br'),(20842,'GISELE CRISTINA COSTA JARDIM','11201921284','victor.atolino@aluno.ufabc.edu.br'),(20843,'Guilherme Eras Marano','11201822547','t.moggi@aluno.ufabc.edu.br'),(20844,'GUILHERME VICTOR DONATONI SATURNO','11201920868','v.gomes@aluno.ufabc.edu.br'),(20845,'GUSTAVO DONATO DE FREITAS','11201921885','vinicius.leme@aluno.ufabc.edu.br'),(20846,'Gustavo Mattos Martelli Ferreira','21080514','alan.casote@aluno.ufabc.edu.br'),(20847,'HELOISA NASCIMENTO BERTIZOLA','11201810480','hugo.bento@aluno.ufabc.edu.br'),(20848,'Henrique Reis Rossi','21082915','henrique.rossi@aluno.ufabc.edu.br'),(20849,'Hugo Bento De Assis Silva','11201810181','hugo.bento@aluno.ufabc.edu.br'),(20850,'Iris Chang','11201811729','ronaldy.gomes@aluno.ufabc.edu.br'),(20851,'Izabella Pedrozo','11201921775','vinicius.leme@aluno.ufabc.edu.br'),(20852,'Igor Moreira Bezerra','11201812138','ronaldy.gomes@aluno.ufabc.edu.br'),(20853,'Igor Macedo Prates','11201810303','hugo.bento@aluno.ufabc.edu.br'),(20854,'Iris Campanella Cabral','11201920985','v.gomes@aluno.ufabc.edu.br'),(20855,'Isabella Naomi Pereira Pacheco','11201920896','v.gomes@aluno.ufabc.edu.br'),(20856,'ISABELLE OLIVEIRA SOUZA','11201721386','henrique.rossi@aluno.ufabc.edu.br'),(20857,'Isteffania Ferreira','11201920841','v.gomes@aluno.ufabc.edu.br'),(20858,'JENIFFER SANTOS CAMPOS','11201920100','t.moggi@aluno.ufabc.edu.br'),(20859,'Joao Victor Policello','11201810756','hugo.bento@aluno.ufabc.edu.br'),(20860,'Jonathan Spina','11201721812','henrique.rossi@aluno.ufabc.edu.br'),(20861,'Jose Wilker Ribeiro Souza','11201921455','vinicius.leme@aluno.ufabc.edu.br'),(20862,'Joyce Maria Ferreira Alexandre Lima','11201811609','andrade.duarte@aluno.ufabc.edu.br'),(20863,'Julia Nogueira Cassaro','11201822580','t.moggi@aluno.ufabc.edu.br'),(20864,'JULIA ROCHA PAULUCCI','11201920271','t.moggi@aluno.ufabc.edu.br'),(20865,'JULIA ROCHA PONCE','11201921036','v.gomes@aluno.ufabc.edu.br'),(20866,'Julia Rodrigues','11201822555','t.moggi@aluno.ufabc.edu.br'),(20867,'Kalil Santiago Louredo','11201810055','henrique.rossi@aluno.ufabc.edu.br'),(20868,'Karina Catuna Belchior','11201920867','v.gomes@aluno.ufabc.edu.br'),(20869,'KARINA HARUMI MATSUMOTO','11201921419','victor.atolino@aluno.ufabc.edu.br'),(20870,'LAIANE NUNES FARIAS DE SA','11201920918','v.gomes@aluno.ufabc.edu.br'),(20871,'GABRIELA FERNANDA NASCIMENTO DA SILVA','11201810361','hugo.bento@aluno.ufabc.edu.br'),(20872,'Gabriel Santana Silva','11201921863','vinicius.leme@aluno.ufabc.edu.br'),(20873,'Leticia Do Carmo Melo','11201921950','wagner.s@aluno.ufabc.edu.br'),(20874,'Leonardo Trindade Fernandes','11201811956','ronaldy.gomes@aluno.ufabc.edu.br'),(20875,'Nathalia Favero Amorim','11201921518','vinicius.leme@aluno.ufabc.edu.br'),(20876,'Luis Felipe Gois do Nascimento','11201722188','henrique.rossi@aluno.ufabc.edu.br'),(20877,'Maria Fernanda Malateaux De Oliveira','11201921959','wagner.s@aluno.ufabc.edu.br'),(20878,'Marco Antonio Figueira Barbosa','11201921842','vinicius.leme@aluno.ufabc.edu.br'),(20879,'Lucas Kiyota Da Costa','11201920121','t.moggi@aluno.ufabc.edu.br'),(20880,'LARISSA CANUTO DE PAULA','11201920627','t.moggi@aluno.ufabc.edu.br'),(20881,'LAURA FERNANDES ARAKI','11201921720','vinicius.leme@aluno.ufabc.edu.br'),(20882,'LETICIA BRISKIEVIEZ SILVA','11201932517','wagner.s@aluno.ufabc.edu.br'),(20883,'LILIAN DE MORAES DANTAS','13201910004','wagner.s@aluno.ufabc.edu.br'),(20884,'Livia Maria De Souza Silva','11201921654','vinicius.leme@aluno.ufabc.edu.br'),(20885,'LIZ MANCUSO','11201921551','vinicius.leme@aluno.ufabc.edu.br'),(20886,'Lucas Alencar','11201922146','wagner.s@aluno.ufabc.edu.br'),(20887,'Lucas De Oliveira Licursi','11201921738','vinicius.leme@aluno.ufabc.edu.br'),(20888,'LUCAS GUSTAVO PELINSON','11201920098','t.moggi@aluno.ufabc.edu.br'),(20889,'Lucas Pellegrino','11201932558','wagner.s@aluno.ufabc.edu.br'),(20890,'LUCAS SCARCCHETTI','11201921195','victor.atolino@aluno.ufabc.edu.br'),(20891,'Luisa Pataquini Dos Santos','11117714','luisa.pataquini@aluno.ufabc.edu.br'),(20892,'Luiz Eduardo Gracindo Silva','11110516','luiz.eduardo@aluno.ufabc.edu.br'),(20893,'LUIZ FERNANDO SOARES CARDOSO','11201920325','t.moggi@aluno.ufabc.edu.br'),(20894,'Luiza Farto De Camargo Fernandes','11201921680','vinicius.leme@aluno.ufabc.edu.br'),(20895,'MARIANA GONCALVES DO AMARAL','11201921893','vinicius.leme@aluno.ufabc.edu.br'),(20896,'MARIA EDUARDA MARQUES','11201812056','ronaldy.gomes@aluno.ufabc.edu.br'),(20897,'MARIANA ROSA SCHAIDA','11201922284','wagner.s@aluno.ufabc.edu.br'),(20898,'Matheus Barbosa Valim','11201810921','hugo.bento@aluno.ufabc.edu.br'),(20899,'MARIA EDUARDA DE SOUZA BRANDAO','11201922009','wagner.s@aluno.ufabc.edu.br'),(20900,'MARIANA CARVALHO DOS SANTOS','11201920635','v.gomes@aluno.ufabc.edu.br'),(20901,'Mateus Daud Valeri Machado','11201811260','hugo.bento@aluno.ufabc.edu.br'),(20902,'Mateus Silva','11201921520','vinicius.leme@aluno.ufabc.edu.br'),(20903,'Matheus Mazikina Garcez Dos Santos','11201920809','v.gomes@aluno.ufabc.edu.br'),(20904,'NATASHA RAMOS CAVALCANTE','11201921303','victor.atolino@aluno.ufabc.edu.br'),(20905,'Nayara dos Santos Almeida','11201920631','v.gomes@aluno.ufabc.edu.br'),(20906,'NAYARA AMARAL DE SOUZA','11201811242','hugo.bento@aluno.ufabc.edu.br'),(20907,'Nicolas Freire Vasconcelos','11201920310','t.moggi@aluno.ufabc.edu.br'),(20908,'Odilon do Nascimento Batista','11201810249','hugo.bento@aluno.ufabc.edu.br'),(20909,'PATRICIA PEREIRA DE ARAUJO','11201812028','ronaldy.gomes@aluno.ufabc.edu.br'),(20910,'Patrick Raphael Ferreira Bussolotti','11201921005','v.gomes@aluno.ufabc.edu.br'),(20911,'Paulo Aquino Cichetto','11201811624','ronaldy.gomes@aluno.ufabc.edu.br'),(20912,'Paulo Cesar Pastre Junior','11201921202','victor.atolino@aluno.ufabc.edu.br'),(20913,'Pedro Ives Silva Santos','11201921410','victor.atolino@aluno.ufabc.edu.br'),(20914,'Lucas De Souza Ferreira','11201920732','v.gomes@aluno.ufabc.edu.br'),(20915,'Rodrigo Barros Gomes','11201810398','hugo.bento@aluno.ufabc.edu.br'),(20916,'THEO COLEONE','11201921912','vinicius.leme@aluno.ufabc.edu.br'),(20917,'RAFAEL DE FREITAS SILVA','11201722377','henrique.rossi@aluno.ufabc.edu.br'),(20918,'Vinicius Gimenez','11201921947','wagner.s@aluno.ufabc.edu.br'),(20919,'Rebecca Haruka Yoshida Inazumi','11201810466','hugo.bento@aluno.ufabc.edu.br'),(20920,'VICTOR YUITI IAMASAKI','11201921446','vinicius.leme@aluno.ufabc.edu.br'),(20921,'Raphael dos Santos Izidio Meira','11201921852','vinicius.leme@aluno.ufabc.edu.br'),(20922,'Sandro Mariano Silva Filho','11201921251','victor.atolino@aluno.ufabc.edu.br'),(20923,'PRISCILA CARVALHO DA SILVA','11201811221','hugo.bento@aluno.ufabc.edu.br'),(20924,'Priscila Santos','11201922134','wagner.s@aluno.ufabc.edu.br'),(20925,'PRISCILLA BATISTA VICENTE DA SILVA','11201921564','vinicius.leme@aluno.ufabc.edu.br'),(20926,'RODRIGO DARIVA MORGANTI','11201920163','t.moggi@aluno.ufabc.edu.br'),(20927,'Rafael Maura Passos','11201921668','vinicius.leme@aluno.ufabc.edu.br'),(20928,'Rafaella Louise De Oliveira Santana','11201921500','vinicius.leme@aluno.ufabc.edu.br'),(20929,'Raissa Vieira De Souza','11201822504','t.moggi@aluno.ufabc.edu.br'),(20930,'Renan Rocha Torres','11201932486','wagner.s@aluno.ufabc.edu.br'),(20931,'Ronaldy Cristiano Gomes','11201720348','henrique.rossi@aluno.ufabc.edu.br'),(20932,'Samira Militao Saab Militao Saab','11201921059','v.gomes@aluno.ufabc.edu.br'),(20933,'SARAH OLINDA PINHEIRO','11201920467','t.moggi@aluno.ufabc.edu.br'),(20934,'WELLINGTON FERREIRA SOARES','11201921427','victor.atolino@aluno.ufabc.edu.br'),(20935,'STEPHANIA RODRIGUES DOS SANTOS FERREIRA','11201922117','wagner.s@aluno.ufabc.edu.br'),(20936,'Thiago Bigoli','11201810958','hugo.bento@aluno.ufabc.edu.br'),(20937,'TAIRON HENRIQUE DE PAULA DUTRA','11201812109','ronaldy.gomes@aluno.ufabc.edu.br'),(20938,'Tais Rocha De Sousa','11201920214','t.moggi@aluno.ufabc.edu.br'),(20939,'Thiago Correa','11201812366','t.moggi@aluno.ufabc.edu.br'),(20940,'Thiago Furlan','11201811409','hugo.bento@aluno.ufabc.edu.br'),(20941,'VERONICA CASAGRANDE','11201921106','victor.atolino@aluno.ufabc.edu.br'),(20942,'VITOR TOCUDA MATSUNAGA','11201920511','t.moggi@aluno.ufabc.edu.br'),(20943,'Vitor Barros','11201922326','wagner.s@aluno.ufabc.edu.br'),(20944,'VICTOR BALCIUNAS ATOLINO','11201822401','t.moggi@aluno.ufabc.edu.br'),(20945,'VICTORIA NEDINA NUNES','11201811786','ronaldy.gomes@aluno.ufabc.edu.br'),(20946,'Vinicius Goncalves Da Silva','11201921124','victor.atolino@aluno.ufabc.edu.br'),(20947,'VINICIUS TAVARES IUNES','11201921279','victor.atolino@aluno.ufabc.edu.br'),(20948,'VINICIUS CASAL LEME','11201920210','t.moggi@aluno.ufabc.edu.br'),(20949,'VINICIUS MORENO ROGATO','11201920780','v.gomes@aluno.ufabc.edu.br'),(20950,'WAGNER CAVALCANTE SANTOS','11201722526','henrique.rossi@aluno.ufabc.edu.br'),(20951,'Yumi Suzuki','11201912415','t.moggi@aluno.ufabc.edu.br'),(20952,'ALESSANDRO JEAN GIGI','11070616',''),(20953,'BRYAN BIALOKUR DA CRUZ','11052316',''),(20954,'CHUNG MOU KIN','11065015',''),(20955,'DANIEL ESPINDOLA DA SILVA','11201720556',''),(20956,'EDSON GOMES MARTINELLI','11097416',''),(20957,'ELTON LAGROTERIA DOS SANTOS','11050712',''),(20958,'FELIPE PERDIGAO ANDRADE','11090116',''),(20959,'FILIPI DE CARVALHO BRABO','11040016',''),(20960,'GUILHERME CAVALCANTE SANTANA','11201722823',''),(20961,'JONATAS DUARTE SOUZA','11036516',''),(20962,'LUCAS DAVID VADILHO','21006816',''),(20963,'LUCAS GANCIAR MARTINS','11056716',''),(20964,'LUCAS MASATO SAKURAI LEMOS DOS SANTOS','11107616',''),(20965,'LUCAS PEREIRA DA SILVA','11201722984',''),(20966,'MATHEUS DE ARAUJO VARGAS','11043314',''),(20967,'MATHEUS FELLONE DOS SANTOS','21007915',''),(20968,'MILENA SILVA BONFIM','11003315',''),(20969,'OTAVIO LOURENCO DA SILVA','13201812292',''),(20970,'RAFAEL AKIO SHISHITO MATOS','11079516',''),(20971,'RICARDO YOICHI TSUTSUMIUCHI','11004912',''),(20972,'VICTOR PARPINELLI ANANIAS DA SILVA','11072516',''),(20973,'VINICIUS LOURENCO DA SILVA','11065816',''),(20974,'VITOR MARINI BLASELBAUER','11048115',''),(20975,'WALACE CRUZ CORREIA','11201722221',''),(20976,'WESLEY PEREIRA DA SILVA','11006216',''),(20977,'ALEXANDRE ROBERTO NEME KULPEL','21059614',''),(20978,'ALINE RODRIGUES DA SILVA','11201721440',''),(20979,'BEATRIZ ALCARAS GUTIERREZ','11201811922',''),(20980,'BRUNA DE JESUS MOREIRA','21048814',''),(20981,'BRUNO FERNANDO COSTA','21024614',''),(20982,'CARLOS EDUARDO COSTA SANTOS','13201812195',''),(20983,'DANILO MAROTA DE OLIVEIRA','21017210',''),(20984,'DIEGO NUNES FERREIRA','11201922018',''),(20985,'EDUARDO FUMIO SUENAGA','11055713',''),(20986,'EDUARDO SILVA LAVIGNE SOUZA','11017616',''),(20987,'ERICK NOGUEIRA RESAFFE','11068015',''),(20988,'FELIPE MOTA DO NASCIMENTO','13201812186',''),(20989,'FERNANDO NUNES INSERRA','11201722636',''),(20990,'GABRIEL COSTA AZEVEDO','11201721625',''),(20991,'GABRIEL GOMES BUENO','21041314',''),(20992,'GABRIEL RIBEIRO ITAGYBA','11201722384',''),(20993,'GIOVANA MENDONCA DUARTE','11201811916',''),(20994,'GIOVANNA MASSOCO TICIANELLI','21063916',''),(20995,'GIOVANNA PECORARI COELHO','11201812130',''),(20996,'GUILHERME BENINE GIOVEDI','11201822415',''),(20997,'GUSTAVO MENEZES DE SIRQUEIRA','11201720908',''),(20998,'HANA PORTELA FRIAS','11201812008',''),(20999,'HEITOR HENRIQUE CICILIANO','11019015',''),(21000,'HENRIQUE PERES DE SOUZA','13201723204',''),(21001,'HIGOR RODRIGUES PAIXAO','11020515',''),(21002,'IGOR FERREIRA GONCALVES','11201811321',''),(21003,'JEFERSON GUIMARAES DE SOUZA','11108612',''),(21004,'JESSICA PAULA DA SILVA','11201720844',''),(21005,'JESSICA TEIXEIRA LIMA','11201812135',''),(21006,'JONAS VITOR RODRIGUES INACIO','11051813',''),(21007,'JULIO CEZAR DUMONT VENERANDO','11076015',''),(21008,'KARINA LOPES DE SOUZA','11201721092',''),(21009,'LAELSOM GOMES DA SILVA JUNIOR','11084316',''),(21010,'LARYSSA MAIRENA MARINHO','11201722943',''),(21011,'LAURIE VIANA TEIXEIRA','21014011',''),(21012,'LEONARDO DIAS CHIVITES','11067016',''),(21013,'LEONARDO WAGNER DUARTE DINIZ','11201721566',''),(21014,'LETICIA ALVES DOS SANTOS','11106016',''),(21015,'LETICIA DE LIMA CIRIACO','11072511',''),(21016,'LIVIA MARIA CIANCIULLI','21012612',''),(21017,'MARCOS ROMERO','11008915',''),(21018,'MARIANA LINS SARTORI','21051512',''),(21019,'MATEUS ROBLES DE SOUZA','11048616',''),(21020,'MATHEUS PAULO BATISTA GRANDI','11046015',''),(21021,'NATHÃLIA CAROLINE DE OLIVEIRA PINTO','21088416',''),(21022,'NATHAN OKIDA TAMOTU','11201722778',''),(21023,'NELSON HENRIQUE PERISSOTO','21070516',''),(21024,'PAOLA GONCALVES DA CRUZ RATO','11063516',''),(21025,'PAULO VITOR RODRIGUES NUNES VIEIRA','21085814',''),(21026,'PEDRO ENRICO AGRIPINO RODRIGUES','11201811963',''),(21027,'PEDRO MICHELONI RAGHI','21039815',''),(21028,'RAFAELLA BOER ZANON DA SILVA','11048116',''),(21029,'RENATA DOS SANTOS SILVA PAES','21044016',''),(21030,'SANDOR FLEURY PEREIRA','11201822473',''),(21031,'STEFANI CRISTINA TROMBINI IZAIAS','21064115',''),(21032,'THALES BRANDON SIQUEIRA SANTOS','11201722846',''),(21033,'THALLES DE ANTONIO TREVIZAN','21016216',''),(21034,'THOMAZ LOFF DA SILVA','11201822516',''),(21035,'TIAGO FERREIRA POSSARLE','11121016',''),(21036,'TIAGO RIBEIRO DOS SANTOS NETO','11201722173',''),(21037,'VICTOR AUGUSTO BAZOGLI','13201712916',''),(21038,'VICTOR HENRIQUE SCHEER E LIMA','11093016',''),(21039,'VINICIUS LOPES ANTONIO','11201722794',''),(21040,'WILLIAM SANTOS DE MELO','13201910046',''),(21041,'YARA MAIA ALVES','11108813',''),(21042,'X','11202099',''),(21043,'Y','11202098',''),(21044,'Z','11202097',''),(21045,'Alexandre Santos','11074314','alexandre.s@aluno.ufabc.edu.br'),(21046,'Andre Oliveira','11059713','andre.anderson@aluno.ufabc.edu.br'),(21047,'Andre Santos','11030516','a.santana@aluno.ufabc.edu.br'),(21048,'Angelo Neto','11126215','angelo.maggio@aluno.ufabc.edu.br'),(21049,'Bruno Borghese','21028815','b.borghese@aluno.ufabc.edu.br'),(21050,'Caroline Anacleto','11102213','caroline.s@aluno.ufabc.edu.br'),(21051,'Eduardo Ferreira','11019314','eduardo.castilho@aluno.ufabc.edu.br'),(21052,'Emerson Moura','99999999','moura.emerson@aluno.ufabc.edu.br'),(21053,'Eracton Ramalho','21011814','eracton.ramalho@aluno.ufabc.edu.br'),(21054,'Gabriel Barros','11201720140','ikenaga.gabriel@aluno.ufabc.edu.br'),(21055,'Gustavo Pereira','11032414','g.almeida@aluno.ufabc.edu.br'),(21056,'Gustavo Fogolin','11029711','gustavo.fogolin@aluno.ufabc.edu.br'),(21057,'Gustavo Franca','11041615','gustavo.lucas@aluno.ufabc.edu.br'),(21058,'Henrique Batista','11050714','henrique.batista@aluno.ufabc.edu.br'),(21059,'Hugo Takahashi','11144808','hugo.takahashi@aluno.ufabc.edu.br'),(21060,'Ivo Reinert','11201721360','ivo.miguel@aluno.ufabc.edu.br'),(21061,'Joao Machado','11201720180','machado.joao@aluno.ufabc.edu.br'),(21062,'Juliana Lopes','21075612','juliana.ribeiro@aluno.ufabc.edu.br'),(21063,'Litali Santos','11100216','litali.santos@aluno.ufabc.edu.br'),(21064,'Marcelo Pena','11039314','marcelo.pena@aluno.ufabc.edu.br'),(21065,'Marcelo Gomes','11022014','marcelo.gomes@aluno.ufabc.edu.br'),(21066,'Mariana Candido','11035514','m.gregorio@aluno.ufabc.edu.br'),(21067,'Matheus Santos','11114014','matheus.prudencio@aluno.ufabc.edu.br'),(21068,'Nilton Pinheiro','11038512','nilton.pinheiro@aluno.ufabc.edu.br'),(21069,'Paulo Junior','11201720794','paulo.junior@aluno.ufabc.edu.br'),(21070,'Rafael Zanatta','11100808','rafael.znatta@gmail.com'),(21071,'Rafael Silva','11061013','ribeiro.rafael@aluno.ufabc.edu.br'),(21072,'Rodney Rabelo','21027514','rodney.cruz@aluno.ufabc.edu.br'),(21073,'Victor Ribeiro','21057716','victor.santana@aluno.ufabc.edu.br'),(21074,'William Silva','21046314','william.sena@aluno.ufabc.edu.br'),(21075,'Mauro Mascarenhas','11020215','mauro.mascarenhas@aluno.ufabc.edu.br');
/*!40000 ALTER TABLE `student_student` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `topic_answer`
--

DROP TABLE IF EXISTS `topic_answer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `topic_answer` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `answer_text` longtext NOT NULL,
  `answer_feedback` longtext NOT NULL,
  `question_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `topic_answer_question_id_9112ef5a_fk_topic_question_id` (`question_id`),
  CONSTRAINT `topic_answer_question_id_9112ef5a_fk_topic_question_id` FOREIGN KEY (`question_id`) REFERENCES `topic_question` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5894 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `topic_answer`
--

LOCK TABLES `topic_answer` WRITE;
/*!40000 ALTER TABLE `topic_answer` DISABLE KEYS */;
INSERT INTO `topic_answer` VALUES (6,'[[code:correctAnswer]]','',2),(7,'[[code:createWrongAnswers([5,100])]]','',2),(8,'[[code:correctAnswer]]','',3),(9,'[[code:wrongAnswer]]','',3),(10,'Lista usando Ponteiro','',3),(11,'Pilha usando Ponteiro','',3),(12,'Árvore','',3),(13,'Grafo','',3),(14,'[[code:correctAnswer]]','',4),(15,'[[code:createWrongAnswers([2])]]','',4),(16,'Lista usando Ponteiro','',4),(17,'Árvore','',4),(18,'Grafo','',4),(19,'[[code:correctAnswer]]','',5),(20,'[[code:createWrongAnswers([5,4])]]','',5),(38,'Governan\\c{c}a de TI garante um melhor uso dos investimentos de todos os setores da empresa e da governan\\c{c}a corporativa.','',11),(39,'Governan\\c{c}a de TI se preocupa com os riscos e com os requisitos de conformidade.','',11),(40,'Governan\\c{c}a de TI tem a ver com a implanta\\c{c}\\~{a}o de melhores pr\\\'{a}ticas aplic\\\'{a}veis \\`{a} TI.','',11),(41,'H\\\'{a} necessidade de alinhar a TI ao neg\\\'{o}cio.','',11),(42,'TI n\\~{a}o gera valor para o neg\\\'{o}cio.','',12),(43,'Governan\\c{c}a de TI pode possibilitar um melhor uso dos investimentos de TI e do gerenciamento de recursos cr\\\'{i}ticos de TI.','',12),(44,'Governan\\c{c}a de TI se preocupa com os riscos e com os requisitos de conformidade.','',12),(45,'Governan\\c{c}a de TI tem a ver com a implanta\\c{c}\\~{a}o de melhores pr\\\'{a}ticas aplic\\\'{a}veis \\`{a} TI.','',12),(46,'A pouca utiliza\\c{c}\\~{a}o das m\\\'{i}dias sociais para a comunica\\c{c}\\~{a}o entre empresas e seus clientes.','',13),(47,'Processos de gest\\~{a}o de clientes altamente sofisticados, atrav\\\'{e}s de aplicativo.','',13),(48,'Utiliza\\c{c}\\~{a}o e an\\\'{a}lise de grandes volumes de dados.','',13),(49,'Exig\\^{e}ncia de maior transpar\\^{e}ncia nos neg\\\'{o}cios.','',13),(50,'Exig\\^{e}ncia de menor transpar\\^{e}ncia nos neg\\\'{o}cios.','',14),(51,'Processos de gest\\~{a}o de clientes altamente sofisticados, atrav\\\'{e}s de aplicativo.','',14),(52,'Utiliza\\c{c}\\~{a}o e an\\\'{a}lise de grandes volumes de dados.','',14),(53,'A maior utiliza\\c{c}\\~{a}o de dispositivos m\\\'{o}veis pr\\\'{o}prios por parte de colaboradores.','',14),(54,'Implantar mecanismos para governar a administra\\c{c}\\~{a}o e a utiliza\\c{c}\\~{a}o dos ativos humanos, financeiros, f\\\'{i}sicos, de Propriedade Intelectual, de Relacionamento e de Informa\\c{c}\\~{a}o e TI.','',15),(55,'Monitorar para verificar a conformidade do direcionamento do uso de TI.','',15),(56,'Implantar mecanismos para garantia da continuidade de neg\\\'{o}cio contra interrup\\c{c}\\~{o}es e falhas.','',15),(57,'Promover compliance, gest\\~{a}o de riscos, e alinhamento da TI a marcos de regula\\c{c}\\~{a}o externo.','',15),(58,'O MIT-CISR \\\'{e} simples, tem grande aplicabilidade na pr\\\'{a}tica e pode ser empregado em conjunto com outros frameworks consolidados no mercado, como COBIT e ITIL.','',16),(59,'No framework MIT-CISR deve ser usado apenas um dos dois recursos fundamentais: a Matriz de Arranjos de Governan\\c{c}a ou o Framework de Governan\\c{c}a de TI.','',16),(60,'A Matriz de Arranjos de Governan\\c{c}a possibilita a harmoniza\\c{c}\\~{a}o entre a estrat\\\'{e}gia da empresa, os arranjos de governan\\c{c}a de TI, e as metas de desempenho do neg\\\'{o}cio.','',16),(61,'A Framework de Governan\\c{c}a de TI relaciona cinco decis\\~{o}es de TI com como elas s\\~{a}o tomadas.','',16),(62,'O MIT-CISR usa dois recursos fundamentais: a Matriz de Arranjos de Governan\\c{c}a e o Framework de Governan\\c{c}a de TI.','',17),(63,'A Matriz de Arranjos de Governan\\c{c}a possibilita a harmoniza\\c{c}\\~{a}o entre a estrat\\\'{e}gia da empresa, os arranjos de governan\\c{c}a de TI, e as metas de desempenho do neg\\\'{o}cio.','',17),(64,'O MIT-CISR \\\'{e} simples e tem grande aplicabilidade na pr\\\'{a}tica por\\\'{e}m n\\~{a}o pode ser empregado em conjunto com outros frameworks consolidados no mercado como COBIT e ITIL.','',17),(65,'A Framework de Governan\\c{c}a de TI relaciona cinco decis\\~{o}es de TI com como elas s\\~{a}o tomadas.','',17),(66,'O alinhamento estrat\\\'{e}gico refere-se \\`{a} estrutura organizacional e funcional de TI, aos processos de gest\\~{a}o e opera\\c{c}\\~{a}o dos produtos e servi\\c{c}os de TI.','',18),(67,'A etapa de decis\\~{a}o tem a ver com as responsabilidades pelas decis\\~{o}es relativas \\`{a} TI; e trata da defini\\c{c}\\~{a}o de prioridades de projetos e servi\\c{c}os e da aloca\\c{c}\\~{a}o efetiva de recursos monet\\\'{a}rios no contexto de um portf\\\'{o}lio de TI.','',18),(68,'Na etapa de estrutura, processos, opera\\c{c}\\~{o}es e gest\\~{a}o s\\~{a}o (re)definidas as opera\\c{c}\\~{o}es de sistemas, infraestrutura, suporte t\\\'{e}cnico, seguran\\c{c}a da informa\\c{c}\\~{a}o, etc.','',18),(69,'A etapa de gest\\~{a}o do valor e do desempenho refere-se \\`{a} determina\\c{c}\\~{a}o, coleta e gera\\c{c}\\~{a}o de indicadores de resultados dos processos, produtos e servi\\c{c}os de TI.','',18),(70,'A etapa de gest\\~{a}o do valor trata da defini\\c{c}\\~{a}o de prioridades de projetos e servi\\c{c}os e da aloca\\c{c}\\~{a}o efetiva de recursos monet\\\'{a}rios no contexto de um portf\\\'{o}lio de TI.','',19),(71,'O alinhamento estrat\\\'{e}gico refere-se ao planejamento estrat\\\'{e}gico da tecnologia da informa\\c{c}\\~{a}o.','',19),(72,'A etapa de decis\\~{a}o tem a ver com as responsabilidades pelas decis\\~{o}es relativas \\`{a} TI.','',19),(73,'Na etapa de estrutura, processos, opera\\c{c}\\~{o}es e gest\\~{a}o s\\~{a}o (re)definidas as opera\\c{c}\\~{o}es de sistemas, infraestrutura, suporte t\\\'{e}cnico, seguran\\c{c}a da informa\\c{c}\\~{a}o, etc.','',19),(74,'Permite gerenciar e governar de forma centralizada as \\\'{a}reas funcionais da TI.','',20),(75,'Pode ser aplicado em empresas de qualquer natureza, mercado ou tamanho.','',20),(76,'Ajuda as empresas a atingirem seus objetivos de governan\\c{c}a e gerenciamento da TI em \\^{a}mbito corporativo.','',20),(77,'Ajuda as empresas a otimizarem o valor da sua TI, balanceando os riscos versus os benef\\\'{i}cios.','',20),(78,'Deve ser aplicado em empresas de tamanho m\\\'{e}dio ou grande.','',21),(79,'Ajuda as empresas a atingirem seus objetivos de governan\\c{c}a e gerenciamento da TI em \\^{a}mbito corporativo.','',21),(80,'Ajuda as empresas a otimizarem o valor da sua TI, balanceando os riscos versus os benef\\\'{i}cios.','',21),(81,'Habilita a TI a ser gerenciada e governada de forma hol\\\'{i}stica por toda a empresa (incluindo \\\'{a}reas de neg\\\'{o}cio, \\\'{a}reas funcionais da TI e partes interessadas internas e externas).','',21),(82,'Permitir uma vis\\~{a}o hol\\\'{i}stica implica estar alinhado com frameworks importantes como ITIL, TOGAF, normas ISO, e outros modelos da ISACA (tais como Val IT, Risk IT, BMIS)','',22),(83,'Para satisfazer as necessidades das partes interessadas, as necessidades devem ser traduzidas, usando um sistema de metas em cascata, em metas corporativas gen\\\'{e}ricas, metas relacionadas \\`{a} TI e metas dos habilitadores de TI.','',22),(84,'Cobrir a empresa de ponta a ponta tem a ver com a governan\\c{c}a e a gest\\~{a}o da informa\\c{c}\\~{a}o e da tecnologia relacionadas onde quer que estejam.','',22),(85,'Separar governan\\c{c}a de gest\\~{a}o estabelece uma diferen\\c{c}a clara nos conceitos de governan\\c{c}a e gest\\~{a}o reconhecendo que envolvem diferentes tipos de atividades e estruturas organizacionais.','',22),(86,'Aplicar um framework integrado \\\'{u}nico tem a ver com fornecer m\\\'{e}tricas que podem ser utilizadas para medir o atingimento de cada meta corporativa.','',23),(87,'Para satisfazer as necessidades das partes interessadas, as necessidades devem ser traduzidas, usando um sistema de metas em cascata, em metas corporativas gen\\\'{e}ricas, metas relacionadas \\`{a} TI e metas dos habilitadores de TI.','',23),(88,'Cobrir a empresa de ponta a ponta tem a ver com a governan\\c{c}a e a gest\\~{a}o da informa\\c{c}\\~{a}o e da tecnologia relacionadas onde quer que estejam.','',23),(89,'Separar governan\\c{c}a de gest\\~{a}o estabelece uma diferen\\c{c}a clara nos conceitos de governan\\c{c}a e gest\\~{a}o reconhecendo que envolvem diferentes tipos de atividades e estruturas organizacionais.','',23),(90,'A gest\\~{a}o \\\'{e} responsabilidade do corpo diretivo da empresa.','',24),(91,'A governan\\c{c}a assegura que as necessidades, condi\\c{c}\\~{o}es e op\\c{c}\\~{o}es das partes interessadas sejam avaliadas para determinar objetivos corporativos a serem atingidos.','',24),(92,'A governan\\c{c}a estabelece prioridades, tomando decis\\~{o}es e monitorando o desempenho e a conformidade em rela\\c{c}\\~{a}o \\`{a} dire\\c{c}\\~{a}o e aos objetivos acordados.','',24),(93,'A gest\\~{a}o planeja, constr\\\'{o}i, executa e monitora atividades de forma alinhada com a dire\\c{c}\\~{a}o estabelecida pelo grupo de governan\\c{c}a.','',24),(94,'A gest\\~{a}o estabelece prioridades, tomando decis\\~{o}es e monitorando o desempenho e a conformidade em rela\\c{c}\\~{a}o \\`{a} dire\\c{c}\\~{a}o e aos objetivos acordados.','',25),(95,'A governan\\c{c}a \\\'{e} responsabilidade do corpo diretivo da empresa.','',25),(96,'A governan\\c{c}a assegura que as necessidades, condi\\c{c}\\~{o}es e op\\c{c}\\~{o}es das partes interessadas sejam avaliadas para determinar objetivos corporativos a serem atingidos.','',25),(97,'A gest\\~{a}o planeja, constr\\\'{o}i, executa e monitora atividades de forma alinhada com a dire\\c{c}\\~{a}o estabelecida pelo grupo de governan\\c{c}a.','',25),(98,'Cinco dom\\\'{i}nios de processos correspondem \\`{a} \\\'{a}rea de gest\\~{a}o','',26),(99,'Os processos s\\~{a}o agrupados nas duas \\\'{a}reas-chave de governan\\c{c}a e gest\\~{a}o','',26),(100,'Existem tr\\^{e}s pr\\\'{a}ticas de governan\\c{c}a: avalia\\c{c}\\~{a}o, dire\\c{c}\\~{a}o e monitora\\c{c}\\~{a}o','',26),(101,'O dom\\\'{i}nio Construir, Adquirir e Implementar (BAI) cobre a identifica\\c{c}\\~{a}o, desenvolvimento e/ou aquisi\\c{c}\\~{a}o de solu\\c{c}\\~{o}es de TI','',26),(102,'Existem tr\\^{e}s processos de governan\\c{c}a: avalia\\c{c}\\~{a}o, dire\\c{c}\\~{a}o e monitora\\c{c}\\~{a}o','',27),(103,'Os processos s\\~{a}o agrupados nas duas \\\'{a}reas-chave de governan\\c{c}a e gest\\~{a}o','',27),(104,'Quatro dom\\\'{i}nios de processos correspondem \\`{a} \\\'{a}rea de gest\\~{a}o','',27),(105,'O dom\\\'{i}nio Alinhar, Planejar e Organizar (APO) identifica as formas atrav\\\'{e}s das quais a TI pode contribuir melhor para o atendimento dos objetivos de neg\\\'{o}cio','',27),(106,'\\\'{e} poss\\\'{i}vel monitorar passo a passo as melhorias dos processos rumo \\`{a} estrat\\\'{e}gia da organiza\\c{c}\\~{a}o.','',28),(107,'Estabelece os quatro n\\\'{i}veis de capacidade que um processo pode atingir.','',28),(108,'Inclui dois atributos de desempenho para cada um dos n\\\'{i}veis de capacidade.','',28),(109,'O maior n\\\'{i}vel de capacidade de um processo \\\'{e} atingido quando o processo implementado cumpre o seu prop\\\'{o}sito.','',28),(110,'O menor n\\\'{i}vel de capacidade de um processo \\\'{e} quando ele est\\\'{a} incompleto.','',29),(111,'Estabelece os cinco n\\\'{i}veis de capacidade que um processo pode atingir.','',29),(112,'Inclui dois atributos de desempenho para cada um dos n\\\'{i}veis de capacidade.','',29),(113,'O maior n\\\'{i}vel de capacidade de um processo \\\'{e} atingido quando o processo implementado cumpre o seu prop\\\'{o}sito.','',29),(114,'Avalia\\c{c}\\~{a}o dos clientes e servi\\c{c}os da empresa.','',30),(115,'Delinear uma estrutura de controle e gest\\~{a}o baseada em um modelo de processos.','',30),(116,'Atua\\c{c}\\~{a}o na governan\\c{c}a em v\\\'{a}rios n\\\'{i}veis.','',30),(117,'Avalia\\c{c}\\~{a}o dos riscos operacionais de TI.','',30),(118,'Clientes e usu\\\'{a}rios de aplica\\c{c}\\~{o}es.','',31),(119,'Gestores de neg\\\'{o}cio.','',31),(120,'Gestores de TI.','',31),(121,'Auditores e \\\'{a}reas de garantia de qualidade.','',31),(122,'O principal objetivo da ITIL \\\'{e} prover um conjunto de pr\\\'{a}ticas de gerenciamento de processos de TI usados no mercado.','',32),(123,'Um servi\\c{c}o \\\'{e} um “meio de entregar valor aos clientes, facilitando o atingimento dos resultados que os clientes desejam, tirando deles a propriedade dos custos e riscos espec\\\'{i}ficos”.','',32),(124,'O gerenciamento de servi\\c{c}os pode ser definido como “um conjunto de capacita\\c{c}\\~{o}es organizacionais especializadas para fornecer valor aos clientes na forma de servi\\c{c}os”.','',32),(125,'O ciclo de vida de um servi\\c{c}o est\\\'{a} dividido em cinco est\\\'{a}gios: Estrat\\\'{e}gia, Desenho, Transi\\c{c}\\~{a}o, Opera\\c{c}\\~{a}o e Melhoria Cont\\\'{i}nua.','',32),(126,'O ciclo de vida de um servi\\c{c}o est\\\'{a} dividido em quatro est\\\'{a}gios: Estrat\\\'{e}gia, Desenho, Transi\\c{c}\\~{a}o e Opera\\c{c}\\~{a}o.','',33),(127,'Um servi\\c{c}o \\\'{e} um “meio de entregar valor aos clientes, facilitando o atingimento dos resultados que os clientes desejam, tirando deles a propriedade dos custos e riscos espec\\\'{i}ficos”.','',33),(128,'O principal objetivo da ITIL \\\'{e} prover um conjunto de pr\\\'{a}ticas de gerenciamento de servi\\c{c}os de TI testadas e comprovadas no mercado.','',33),(129,'O gerenciamento de servi\\c{c}os pode ser definido como “um conjunto de capacita\\c{c}\\~{o}es organizacionais especializadas para fornecer valor aos clientes na forma de servi\\c{c}os”.','',33),(130,'A Opera\\c{c}\\~{a}o de Servi\\c{c}o orienta sobre como fazer de forma sistem\\\'{a}tica melhorias incrementais e de larga escala na qualidade do servi\\c{c}o.','',34),(131,'A Estrat\\\'{e}gia de Servi\\c{c}o descreve os princ\\\'{i}pios que s\\~{a}o \\\'{u}teis para criar pol\\\'{i}ticas, diretrizes e processos de gerenciamento de servi\\c{c}os ao longo do ciclo de vida de servi\\c{c}o.','',34),(132,'O Desenho de Servi\\c{c}o detalha aspectos do gerenciamento do cat\\\'{a}logo de servi\\c{c}os, do n\\\'{i}vel de servi\\c{c}o, da capacidade, da disponibilidade, da continuidade, da seguran\\c{c}a da informa\\c{c}\\~{a}o e dos fornecedores.','',34),(133,'A Transi\\c{c}\\~{a}o de Servi\\c{c}o detalha os processos de gerenciamento da libera\\c{c}\\~{a}o e da distribui\\c{c}\\~{a}o, teste e valida\\c{c}\\~{a}o de servi\\c{c}o, avalia\\c{c}\\~{a}o e gerenciamento do conhecimento.','',34),(134,'O Desenho de Servi\\c{c}o aborda a cria\\c{c}\\~{a}o de valor atrav\\\'{e}s dos servi\\c{c}os, os ativos de servi\\c{c}o, provedores e tipos de servi\\c{c}os, gerenciamento financeiro, portf\\\'{o}lio de servi\\c{c}os, desenvolvimento organizacional, riscos estrat\\\'{e}gicos, etc.','',35),(135,'A Estrat\\\'{e}gia de Servi\\c{c}o descreve os princ\\\'{i}pios que s\\~{a}o \\\'{u}teis para criar pol\\\'{i}ticas, diretrizes e processos de gerenciamento de servi\\c{c}os ao longo do ciclo de vida de servi\\c{c}o.','',35),(136,'A Transi\\c{c}\\~{a}o de Servi\\c{c}o detalha os processos de gerenciamento da libera\\c{c}\\~{a}o e da distribui\\c{c}\\~{a}o, teste e valida\\c{c}\\~{a}o de servi\\c{c}o, avalia\\c{c}\\~{a}o e gerenciamento do conhecimento.','',35),(137,'A Opera\\c{c}\\~{a}o de Servi\\c{c}o detalha os processos de gerenciamento de eventos, incidentes, problemas, acesso e de cumprimento de requisi\\c{c}\\~{o}es.','',35),(138,'Transi\\c{c}\\~{a}o de Servi\\c{c}o - gerenciamento de problemas e eventos','',36),(139,'Estrat\\\'{e}gia de Servi\\c{c}o - gerenciamento financeiro de TI','',36),(140,'Desenho de Servi\\c{c}o - gerenciamento da seguran\\c{c}a da informa\\c{c}\\~{a}o','',36),(141,'Opera\\c{c}\\~{a}o de Servi\\c{c}o - gerenciamento de acesso','',36),(142,'Desenho de Servi\\c{c}o - gerenciamento de problemas e eventos','',37),(143,'Estrat\\\'{e}gia de Servi\\c{c}o - gerenciamento financeiro de TI','',37),(144,'Opera\\c{c}\\~{a}o de Servi\\c{c}o - gerenciamento de acesso','',37),(145,'Transi\\c{c}\\~{a}o de Servi\\c{c}o - valida\\c{c}\\~{a}o e teste de servi\\c{c}o','',37),(146,'Gerenciamento Financeiro: visa gerenciar o ciclo financeiro do Cat\\\'{a}logo de Servi\\c{c}os de TI de uma organiza\\c{c}\\~{a}o.','',38),(147,'Coordena\\c{c}\\~{a}o do Desenho: garante que os objetivos e as metas do est\\\'{a}gio sejam atingidos, fornecendo e mantendo um ponto \\\'{u}nico de coordena\\c{c}\\~{a}o e controle de todos os demais processos deste est\\\'{a}gio.','',38),(148,'Gerenciamento de Problemas: visa minimizar os impactos adversos de incidentes e problemas para o neg\\\'{o}cio, quando causados por falhas na infraestrutura de TI.','',38),(149,'Gerenciamento de Acesso: controla o acesso de usu\\\'{a}rios ao direito de utilizar os servi\\c{c}os, garantindo-o \\`{a}queles que foram previamente autorizados e restringindo-o a todos os demais.','',38),(150,'Gerenciamento de Incidentes: visa manter o registro dos poss\\\'{i}veis incidentes no servi\\c{c}o.','',39),(151,'Gerenciamento do Portf\\\'{o}lio de Servi\\c{c}os: m\\\'{e}todo que visa governar os investimentos em gerenciamento de servi\\c{c}os atrav\\\'{e}s da empresa gerenci\\\'{a}-los para que adicionem valor ao neg\\\'{o}cio.','',39),(152,'Cumprimento de Requisi\\c{c}\\~{o}es: trata requisi\\c{c}\\~{o}es dos usu\\\'{a}rios que n\\~{a}o foram geradas por um incidente, mas que foram originadas a partir de uma solicita\\c{c}\\~{a}o de servi\\c{c}o.','',39),(153,'Gerenciamento do Cat\\\'{a}logo de Servi\\c{c}os: garante uma fonte \\\'{u}nica de informa\\c{c}\\~{o}es consistentes e atualizadas sobre todos os servi\\c{c}os que est\\~{a}o operacionais e sobre aqueles que est\\~{a}o sendo preparados para entrar em opera\\c{c}\\~{a}o.','',39),(154,'Redu\\c{c}\\~{a}o do n\\\'{u}mero de servi\\c{c}os e colaboradores.','',40),(155,'Redu\\c{c}\\~{a}o dos custos relacionados aos incidentes e problemas, operacionais e de suporte de treinamento.','',40),(156,'Melhoria da disponibilidade dos sistemas e aplica\\c{c}\\~{o}es.','',40),(157,'Maior clareza no custeio dos servi\\c{c}os.','',40),(158,'Menor utiliza\\c{c}\\~{a}o dos recursos de TI e taxa de atingimento do tempo de resposta para incidentes em servi\\c{c}os relacionados \\`{a} Internet.','',41),(159,'Melhoria da satisfa\\c{c}\\~{a}o dos clientes e dos colaboradores.','',41),(160,'Redu\\c{c}\\~{a}o dos custos relacionados aos incidentes e problemas, operacionais e de suporte de treinamento.','',41),(161,'Maior clareza no custeio dos servi\\c{c}os.','',41),(162,'O MIT-CISR e o ITIL s\\~{a}o frameworks de gest\\~{a}o.','',42),(163,'O MIT-CISR, o COBIT e o ITIL usam matrizes de responsabilidades.','',42),(164,'O COBIT e ITIL t\\^{e}m ciclos de melhoria cont\\\'{i}nua com 7 fases.','',42),(165,'O MIT-CISR, o COBIT e o ITIL podem ser usados em conjunto.','',42),(166,'O MIT-CISR, o COBIT e o ITIL n\\~{a}o devem ser usados em conjunto.','',43),(167,'O MIT-CISR \\\'{e} um framework para governan\\c{c}a e o ITIL para gest\\~{a}o.','',43),(168,'O MIT-CISR, o COBIT e o ITIL usam matrizes de responsabilidades.','',43),(169,'O COBIT e ITIL t\\^{e}m ciclos de melhoria cont\\\'{i}nua com 7 fases.','',43),(170,'[[code:correctAnswer]] % alternativa correta - sempre a primeira','',45),(171,'[[code:createWrongAnswers([5,10])]]','',45),(175,'44 % alternativa correta - sempre a primeira','',68),(176,'35','',68),(177,'43','',68),(178,'55','',68),(179,'47','',68),(180,'[[code:correctAnswer]] % alternativa correta - sempre a primeira','',69),(181,'[[code:correctAnswer-1]]','',69),(182,'[[code:correctAnswer-2]]','',69),(183,'[[code:correctAnswer+3]]','',69),(184,'[[code:correctAnswer+5]]','',69),(185,'[[code:correctAnswer]]','',70),(186,'[[code:wrongAnswer]]','',70),(187,'Pilha usando Ponteiro','',70),(188,'Árvore','',70),(189,'Pantera','',71),(190,'Onça','',71),(191,'Gato','',71),(192,'Tigre','',71),(193,'Leoa','',71),(194,'$\\sharp C=\\sharp{\\mathbb{R}}$','',72),(195,'$\\sharp C=\\sharp{\\mathbb{N}}$','',72),(196,'$\\sharp{\\mathbb{N}}<\\sharp C<\\sharp{\\mathbb{R}}$','',72),(197,'It\'s impossible to determine $\\sharp C$','',72),(198,'$[[code:a1]]$','',73),(199,'$[[code:a2]]$','',73),(200,'$[[code:a3]]$','',73),(201,'$[[code:a4]]$','',73),(202,'$[[code:a5]]$','',73),(203,'$[[code:a1]]$','',74),(204,'$[[code:a2]]$','',74),(205,'$[[code:a3]]$','',74),(206,'$[[code:a4]]$','',74),(207,'$[[code:a5]]$','',74),(208,'$[[code:b1]]$','',75),(209,'$[[code:b2]]$','',75),(210,'$[[code:b3]]$','',75),(211,'$[[code:b4]]$','',75),(212,'[[code:PT_BR(correctAnswer)]]','',76),(213,'[[code:PT_BR(correctAnswer-1)]]','',76),(214,'[[code:correctAnswer-2]]','',76),(215,'[[code:PT_BR(correctAnswer+1)]]','',76),(216,'[[code:PT_BR(correctAnswer+2)]]','',76),(247,'$a >= b$','',83),(248,'$a <= b$','',83),(249,'$a <  b$','',83),(250,'$a == b$','',83),(251,'$a >  b$','',83),(252,'$a != b$','',83),(253,'$a >  b$','',84),(254,'$a >= b$','',84),(255,'$a <= b$','',84),(256,'$a <  b$','',84),(257,'$a == b$','',84),(258,'$a != b$','',84),(259,'Nenhuma das Alternativas.','',85),(260,'Apenas a alternativa I.','',85),(261,'Apenas a alternativa II.','',85),(262,'Apenas a alternativa III.','',85),(263,'Apenas a alternativa IV.','',85),(264,'Apenas as alternativas III e IV.','',85),(265,'Todas as alternativas.','',86),(266,'Apenas uma alternativa.','',86),(267,'Menos de duas alternativas.','',86),(268,'Nenhuma das alternativas.','',86),(269,'Três alternativas.','',86),(270,'Quatro alternativas.','',86),(271,'[[code:correctAnswer]]','',87),(272,'[[code:createWrongAnswers([5,10])]]','',87),(283,'[[code:correctAnswer]]','',89),(284,'[[code:createWrongAnswers([5,30])]]','',89),(295,'[[code:correctAnswer]]','',91),(296,'[[code:createWrongAnswers([5,9])]]','',91),(307,'[[code:correctAnswer]]','',93),(308,'[[code:createWrongAnswers([5,9])]]','',93),(325,'[[code:correctAnswer]]','',96),(326,'[[code:createWrongAnswers([5,10])]]','',96),(347,'$((A + C) < (B * 2) OR (C + B * 3) < (A * 3))$','',100),(348,'$(C * 3) <= (3 + C * 2)$','',100),(349,'$((B * 4) >= (A + A * 2) AND (5 + 5) >= (A))$','',100),(350,'$(A + 3) > (B + C)$','',100),(351,'$((B + A) > (C + C) AND (A - C) < (B - A))$','',100),(352,'Nenhuma outra alternativa está correta.','',100),(353,'$(a < b)$','',101),(354,'$(a >= b)$','',101),(355,'$(a <= b)$','',101),(356,'$(a > b)$','',101),(357,'NÃO $(a = b)$','',101),(358,'Nenhuma outra alternativa está correta.','',101),(359,'verdadeiro','',102),(360,'falso','',102),(361,'indefinido','',102),(362,'infinito','',102),(363,'negativo','',102),(364,'nulo','',102),(366,'[[code:correctAnswer]]','',103),(367,'[[code:createWrongAnswers([5,30])]]','',103),(378,'[[code:correctAnswer]]','',105),(379,'[[code:createWrongAnswers([5,10])]]','',105),(384,'[[code:correctAnswer]]','',106),(385,'[[code:createWrongAnswers([5,10])]]','',106),(390,'[[code:correctAnswer]]','',107),(391,'[[code:createWrongAnswers([5,12])]]','',107),(396,'[[code:correctAnswer]]','',108),(397,'[[code:createWrongAnswers([5,12])]]','',108),(412,'[[code:(np.array(correctAnswer))]]','',58),(413,'[[code:(np.array(correctAnswer)+2)]]','',58),(414,'[[code:(np.array(correctAnswer)+4)]]','',58),(415,'[[code:(np.array(correctAnswer)-1)]]','',58),(416,'[[code:(np.array(correctAnswer)-2)]]','',58),(417,'[[code:(np.array(correctAnswer)-9)]]','',58),(418,'[[code:(np.array(correctAnswer))]]','',145),(419,'[[code:(np.array(correctAnswer)+2)]]','',145),(420,'[[code:(np.array(correctAnswer)+4)]]','',145),(421,'[[code:(np.array(correctAnswer)+6)]]','',145),(422,'[[code:(np.array(correctAnswer)+8)]]','',145),(423,'[[code:(np.array(correctAnswer)+10)]]','',145),(424,'[[code:(np.array(correctAnswer))]]','',44),(425,'[[code:(np.array(correctAnswer)+1)]]','',44),(426,'[[code:(np.array(correctAnswer))]]','',142),(427,'[[code:(np.array(correctAnswer)+1)]]','',142),(428,'Certificador/avaliador CMMI;','',148),(429,'Chief Information Officer;','',148),(430,'Programador de aplicações;','',148),(431,'Analista de sistemas;','',148),(432,'Testador de software;','',148),(433,'Polimorfismo;','',149),(434,'Herança;','',149),(435,'Objetos;','',149),(436,'Encapsulamento;','',149),(437,'Instância;','',149),(438,'Façade;','',150),(439,'Adapter;','',150),(440,'Builder;','',150),(441,'DAO;','',150),(442,'Factory method;','',150),(443,'A instanciação de uma classe para apenas um objeto;','',151),(444,'A instanciação de uma classe para objetos simples;','',151),(445,'A quantidade de classes;','',151),(446,'As relações entre classes e objetos;','',151),(447,'Classes de atributos complexos;','',151),(448,'Diagrama de componentes;','',152),(449,'Diagrama de atividades;','',152),(450,'Diagrama de caso de uso;','',152),(451,'Diagrama de sequência;','',152),(452,'Diagrama de máquina de estados;','',152),(453,'É uma base efetiva para reutilização em larga escala;','',153),(454,'Ela permite obter e manter controle do projeto, gerenciar sua complexidade e manter a integridade do sistema;','',153),(455,'Ela fornece uma base para gerenciamento de projeto;','',153),(456,'Ela facilita a realização de testes;','',153),(457,'Nenhuma das outras respostas está correta;','',153),(458,'Para ajudar na compreensão de sistemas complexos. Sim;','',154),(459,'Para abstrair as diferentes fases do desenvolvimento. Sim;','',154),(460,'Para abstrair as diferentes fases do desenvolvimento. Não;','',154),(461,'Para formar uma base coesa com a implementação. Sim;','',154),(462,'Nenhuma das outras respostas está correta;','',154),(463,'Número de consultas internas;','',155),(464,'Número de entradas externas;','',155),(465,'Número de saídas externas;','',155),(466,'Número de consultas externas;','',155),(467,'Número de arquivos lógicos internos;','',155),(468,'entradas externas;','',156),(469,'consultas externas;','',156),(470,'medidas externas;','',156),(471,'números externos;','',156),(472,'saídas externas;','',156),(473,'Arquivo de interface externa;','',157),(474,'Arquivo de lógica externa;','',157),(475,'Arquivo de saída lógica;','',157),(476,'Arquivo de entrada externa;','',157),(477,'Arquivo de saída externa;','',157),(478,'entradas externas e de consultas externas;','',158),(479,'desvios condicionais e de arquivos lógicos internos;','',158),(480,'estruturas complexas e de loops e cases;','',158),(481,'registros das tabelas e de arquivos de interface externa;','',158),(482,'tabelas e de saídas externas;','',158),(483,'Arquivos de Interface Externa;','',159),(484,'Arquivos lógicos internos;','',159),(485,'Consultas externas;','',159),(486,'Saídas externas;','',159),(487,'Entradas externas;','',159),(488,'uma tela de login:','',160),(489,'os dados passados entre online e batch dentro das fronteiras da mesma aplicação;','',160),(490,'as informações provenientes de cálculos ou procedimentos para obtenção de dados derivados;','',160),(491,'as mensagens de erros ou de confirmação associadas às EE, SE ou CE;','',160),(492,'os relatórios de vendas semanais que requerem o uso de algoritmos e cálculos;','',160),(493,'I e III, apenas;','',161),(494,'I e II, apenas;','',161),(495,'II e III, apenas;','',161),(496,'I, II e III;','',161),(497,'III, apenas;','',161),(503,'Quantidade de entradas do usuário. Quantidades de saídas do usuário. Número de consultas do usuário. Quantidade de arquivos. Quantidade de interfaces externas;','',163),(504,'Quantidade de exceções. Quantidade de linhas de código. Quantidade de usuários. Quantidade de arquivos. Quantidade de interfaces externas;','',163),(505,'Quantidade de entradas do usuário. Quantidades de saídas do usuário. Quantidade de exceções. Quantidade de linhas de código. Quantidade de usuários;','',163),(506,'Quantidade de linhas de código. Quantidades de funções. Quantidade de exceções. Quantidade de linhas de código. Quantidade de usuários;','',163),(507,'Quantidade de usuários. Quantidade de subsistemas. Quantidade de arquivos. Quantidade de interfaces externas. Quantidade de linhas de código;','',163),(508,'Esforço de Desenvolvimento, que corresponde ao tamanho funcional de um software e ao esforço gasto no seu desenvolvimento, medido em pessoas-hora, resultando na quantidade de horas e, consequentemente, no preço estimado de desenvolvimento do sistema.','',164),(509,'Arquivos Lógicos Internos, que correspondem aos arquivos mantidos e utilizados pelo sistema sendo contado;','',164),(510,'Arquivos de Interface Externa, que correspondem aos arquivos utilizados pelo sistema sendo contado, porém mantidos por outros sistemas;','',164),(511,'Entradas Externas, que correspondem a transações cujo objetivo é a manutenção de arquivos ou a alteração do comportamento do sistema;','',164),(512,'Consultas Externas, que correspondem a transações cujo objetivo é a apresentação de informações aos usuários, provenientes dos arquivos, sem a geração de dados derivados, atualização de arquivos ou a utilização de cálculos/fórmulas;','',164),(518,'medir o custo do projeto baseado nos requisitos funcionais e não funcionais e na tecnologia utilizada;','',166),(519,'medir como e em qual linguagem o software é construído;','',166),(520,'medição de contratos de software;','',166),(521,'medição de desempenho, usabilidade e portabilidade do software;','',166),(522,'medir o tamanho do software com base nos programas e em suas funções ou métodos e nas linhas de código utilizadas para cada funcionalidade;','',166),(523,'pode ser aplicada para medir o tamanho de um sistema antes de desenvolvê-lo, de forma que seu custo seja previsto mais adequadamente;','',167),(524,'deve ser utilizada para estimar a complexidade ciclomática dos programas de computador baseado em suas funções;','',167),(525,'é aplicável antes mesmo dos requisitos funcionais do software serem definidos;','',167),(526,'é baseada no número de linhas de código produzidas, sendo mais adequada para medir a produtividade da equipe de programadores;','',167),(527,'permite a contagem de pontos de função somente para estimar o esforço de desenvolvimento de novos projetos;','',167),(528,'Teste de Regressão;','',168),(529,'Teste Caixa-branca;','',168),(530,'Teste Caixa-preta;','',168),(531,'Teste Unitário;','',168),(532,'Teste de Integração;','',168),(533,'verifica se as alterações/inclusões de código estão corretas e não afetam o que já estava funcionando;','',169),(534,'tem como foco as menores unidades codificadas do software;','',169),(535,'é usado para validar se a implementação está de acordo com  a especificação;','',169),(536,'testa os conhecidos requisitos não-funcionais;','',169),(537,'analisa se as partes, quando colocadas para trabalhar juntas, não conduzem a erros;','',169),(538,'unitários, de integração e de aceitação;','',170),(539,'funcionais, de integração e de aceitação;','',170),(540,'alfa, beta e de sistema;','',170),(541,'unitários, de componentes e de sistema;','',170),(542,'funcionais, de componentes e de integração;','',170),(543,'Teste de responsividade;','',171),(544,'Teste de não regressão de performance;','',171),(545,'Teste de stress;','',171),(546,'Teste de carga;','',171),(547,'Teste fumaça;','',171),(548,'Para a elaboração de testes do tipo caixa branca é necessário conhecer a estrutura interna dos programas sob teste;','',172),(549,'A técnica denominada particionamento de equivalência é um tipo de teste classificado como sendo de caixa branca;','',172),(550,'A técnica denominada caminhos independentes é um tipo de teste classificado como sendo de caixa preta;','',172),(551,'As técnicas de teste de caixa branca aplicam-se apenas a software de pequeno porte;','',172),(552,'As técnicas de teste de caixa preta aplicam-se apenas a software desenvolvido com linguagens orientadas a objeto;','',172),(553,'unidade; integração; validação; sistema;','',173),(554,'sistema; unidade; integração; validação;','',173),(555,'validação; sistema; unidade; integração;','',173),(556,'unidade; integração; sistema; validação;','',173),(557,'integração; validação; sistema;  unidade;','',173),(558,'de caixa-preta;','',174),(559,'alfa;','',174),(560,'de integração;','',174),(561,'de caixa-branca;','',174),(562,'de unidade;','',174),(563,'acrescenta porções de código ainda não testadas;','',175),(564,'acrescenta novos módulos de medida de desempenho de software;','',175),(565,'introduz comentários adicionais ao código fonte;','',175),(566,'remove porções de código já testadas;','',175),(567,'remove os comandos de desvio incondicional existentes;','',175),(568,'Teste Caixa Branca e Teste Caixa Preta;','',176),(569,'Teste de Aceitação e Teste de Unidade;','',176),(570,'Teste Estrutural e Teste de Aceitação;','',176),(571,'Teste de Usabilidade e Teste de Confiabilidade;','',176),(572,'Teste de Carga e Teste de Stress;','',176),(573,'a verificação compreende a atividade de analisar se o software atende suas especificações;','',177),(574,'a verificação e a validação são atividades curtas que devem ser realizadas por apenas um analista;','',177),(575,'a verificação não é aplicada a software instalado em sistemas embutidos;','',177),(576,'a validação só é feita para software aplicado ao controle de processos;','',177),(577,'não há distinção entre os objetivos da verificação e da validação;','',177),(578,'fazer com que o software falhe e verificar se ocorre, corretamente, sua recuperação;','',178),(579,'rodar um teste de grande tempo de duração, esperando que não haja falhas registradas no software;','',178),(580,'verificar se apenas usuários autorizados conseguem acessar o sistema;','',178),(581,'verificar se o software atende adequadamente aos limites máximos de utilização estabelecidos;','',178),(582,'verificar se são atendidos os tempos máximos e médios especificados para a realização das tarefas;','',178),(583,'unidade;  caixa-branca;','',179),(584,'sistema;  caixa-preta;','',179),(585,'integração;  beta;','',179),(586,'unidade;  alfa;','',179),(587,'carga;  caixa-preta;','',179),(588,'Diagrama de classes e diagrama de pacotes;','',186),(589,'Diagrama de objetos e diagrama de casos de uso;','',186),(590,'Diagrama de componentes e diagrama de sequência;','',186),(591,'Diagrama de máquina de estados e diagrama de instalação;','',186),(592,'Nenhuma das outras alternativas;','',186),(593,'Uma população variada de vínculos de relacionamentos entre instâncias de classe;','',187),(594,'Uma população variada de relações de redundâncias entre instâncias de classe;','',187),(595,'Uma classificação de vínculos de relacionamentos entre classes de atributos;','',187),(596,'Uma população constante de valores de relacionamentos quantitativos entre atributos de instâncias;','',187),(597,'Uma estrutura de equivalências entre relacionamentos de instâncias de posicionamento de classes;','',187),(598,'Conjunto de elementos que interagem para coletar, manipular e disseminar dados e informações;','',188),(599,'É a comunicação entre vários componentes;','',188),(600,'É um sistema para gerar relatórios;','',188),(601,'Representa a percepção e a compreensão de um conjunto de dados e de como estes dados podem ser úteis para uma tarefa específica;','',188),(602,'É um programa que armazena dados no computador;','',188),(603,'Dados: são fatos não trabalhados - como o nome de um empregado. Informação: são os dados processados, modo que adquirem um valor adicional;','',189),(604,'Informação é sempre um dado sem valor;','',189),(605,'Dado é a informação processada;','',189),(606,'Dados: é um gráfico gerado pelo computador. Informação: são relatórios gerados pelo sistema;','',189),(607,'Dados: são relatórios gerados pelo sistema Informação: o sexo de uma pessoa é um exemplo;','',189),(608,'Hardware, Software, Banco de Dados, Telecomunicação, Procedimentos, Pessoas;','',190),(609,'Hardware, Software, Banco de Dados;','',190),(610,'Hardware, Software, Telecomunicação, Procedimentos, Pessoas;','',190),(611,'Hardware, Software, Banco de Dados, Telecomunicação, Procedimentos;','',190),(612,'Hardware, Software, Banco de Dados, Telecomunicação;','',190),(613,'Capacidade de permitir que usuários individuais ajustem seus próprios sistemas e práticas de trabalho da maneira que preferirem;','',191),(614,'Capacidade de suporte a organizações globais com múltiplas instalações;','',191),(615,'Capacidade de suporte a múltiplas entidades legais, múltiplos idiomas e múltiplas moedas;','',191),(616,'Capacidade de integrar software para suporte a funções de manufatura e finanças;','',191),(617,'Capacidade de suporte a organizações nacionais com múltiplas instalações;','',191),(618,'Software de aplicação;','',192),(619,'Software de produtividade pessoal;','',192),(620,'Software de sistema operacional;','',192),(621,'Software utilitário;','',192),(622,'Nenhuma das outras alternativas;','',192),(623,'Inclui somente aspectos técnicos na produção de software;','',193),(624,'Refere-se a software desenvolvido por equipes;','',193),(625,'Usa princípios de engenharia ao invés de arte;','',193),(626,'Abordagem sistemática, disciplinada e quantificável para a produção de software;','',193),(627,'Usa métodos, processos e ferramentas para a produção de software;','',193),(633,'Levantamento de requisitos, análise de requisitos, registro dos requisitos;','',195),(634,'Entrada de dados, processamento da informação, apresentação dos resultados;','',195),(635,'Desenvolvimento de protótipo, ambiente de testes, implementação do sistema;','',195),(636,'Desenvolvimento, homologação, produção;','',195),(637,'Projeto lógico, projeto físico, implementação e manutenção;','',195),(638,'2-2-1;','',196),(639,'1-2-1;','',196),(640,'1-2-2;','',196),(641,'1-1-1;','',196),(642,'2-1-1;','',196),(643,'V-V-F-V;','',197),(644,'V-V-F-F;','',197),(645,'F-F-V-V;','',197),(646,'F-F-V-F;','',197),(647,'F-V-F-V;','',197),(648,'V-V-V-F;','',198),(649,'V-V-F-F;','',198),(650,'F-F-V-V;','',198),(651,'F-F-V-F;','',198),(652,'F-V-F-V;','',198),(653,'3-1-2-4;','',199),(654,'1-3-2-4;','',199),(655,'1-3-4-3;','',199),(656,'3-1-4-3;','',199),(657,'2-1-3-4;','',199),(658,'V-V-V-V;','',200),(659,'V-V-F-F;','',200),(660,'F-F-V-V;','',200),(661,'F-F-V-F;','',200),(662,'F-V-F-V;','',200),(663,'1-3-2-4;','',201),(664,'1-2-3-4;','',201),(665,'1-3-4-1;','',201),(666,'3-1-4-3;','',201),(667,'2-1-3-4;','',201),(668,'estado;','',202),(669,'colaboração;','',202),(670,'sequência;','',202),(671,'classe;','',202),(672,'caso de uso;','',202),(673,'[[code:a0L]] linhas e [[code:a0C]] colunas','',264),(674,'[[code:a1L]] linhas e [[code:a1C]] colunas','',264),(675,'[[code:a2L]] linhas e [[code:a2C]] colunas','',264),(676,'[[code:a3L]] linhas e [[code:a3C]] colunas','',264),(677,'[[code:a4L]] linhas e [[code:a4C]] colunas','',264),(678,'[[code:a5L]] linhas e [[code:a5C]] colunas','',264),(679,'$p*n + q$','',265),(680,'$p*(n-1) + q$','',265),(681,'$(p+1)*n + q$','',265),(682,'$(p-1)*n - q$','',265),(683,'$(p-1)*n + q$','',265),(684,'$(p+1) . n - q$','',265),(685,'12','',266),(686,'11','',266),(687,'13','',266),(688,'10','',266),(689,'14','',266),(690,'8','',266),(691,'5','',267),(692,'4','',267),(693,'3','',267),(694,'2','',267),(695,'1','',267),(696,'6','',267),(697,'-1, 1, 0','',268),(698,'1, 0, -1','',268),(699,'0, -1, 1','',268),(700,'-1, 0, 1','',268),(701,'1, -1, 0','',268),(702,'1, 1, 0','',268),(709,'7','',270),(710,'6','',270),(711,'1','',270),(712,'4','',270),(713,'3','',270),(714,'2','',270),(715,'Se for fornecido 1 para k, será impresso “Insucesso” duas vezes.','',271),(716,'O algoritmo não funciona quando há elementos repetidos no vetor, portanto, o vetor não pode ter elementos repetidos.','',271),(717,'Somente se o valor de k não for encontrado no vetor será impresso “Insucesso”.','',271),(718,'Faltou o comando a = falso depois de escrever(“Insucesso”) no senão do comando se para esta frase ser impressa uma única vez na pesquisa sequencial malsucedida no vetor.','',271),(719,'Se for fornecido 1 para k, será impresso “Sucesso” duas vezes.','',271),(720,'Este pseudo-código nunca entre no enquanto','',271),(721,'400','',272),(722,'200','',272),(723,'9','',272),(724,'8','',272),(725,'7','',272),(726,'1','',272),(727,'AZAZONAS','',273),(728,'AMASZONA','',273),(729,'SMAZONAS','',273),(730,'AMASSONA','',273),(731,'AMAZONAS','',273),(732,'ZONAAMAS','',273),(733,'o vetor permite o acesso a uma grande quantidade de dados em memória usando-se apenas um nome de variável.','',274),(734,'os vetores são utilizados em computação gráfica representando os minúsculos pontos diferenciados pela sua cor.','',274),(735,'vetores é o conjunto de todos os segmentos orientados equipolentes a um segmento dado.','',274),(736,'o vetor é a representação gráfica de uma reta orientada possuindo mesma intensidade, direção e sentido.','',274),(737,'o vetor pode armazenar valores de diferentes tipos de dados.','',274),(738,'Nenhuma das respostas está correta.','',274),(739,'Em pseudocódigo, uma sintaxe válida de atribuição em um vetor pode ser: 1X[1] = 45','',275),(740,'Trata-se de variáveis do mesmo tipo, que possuem um mesmo identificador (nome), e são alocadas aleatoriamente na memória.','',275),(741,'Como as variáveis tem o mesmo nome, o que as distingue é um índice que referencia sua localização dentro da estrutura.','',275),(742,'Na seguinte declaração: “nome” é o nome da variável, “tamanho” é a quantidade de variáveis que vão compor o vetor e “tipo” é o tipo básico dos dados que serão armazenados no vetor.','',275),(743,'Vetor também é conhecido como variável composta homogênea unidimensional.','',275),(744,'Matriz é também conhecido como vetor bidimensional.','',275),(745,'2, 2, 4, 0, 0','',276),(746,'4, 3, 1, 6, 2','',276),(747,'1, 6, 2, 4, 3','',276),(748,'1, 2, 3, 4, 5','',276),(749,'0, 2, 1, 4, 0','',276),(750,'2, 2, 0, 0, 0','',276),(751,'8','',277),(752,'6','',277),(753,'4','',277),(754,'2','',277),(755,'10','',277),(756,'12','',277),(757,'26','',278),(758,'11','',278),(759,'10','',278),(760,'6','',278),(761,'0','',278),(762,'22','',278),(763,'55','',279),(764,'13','',279),(765,'21','',279),(766,'33','',279),(767,'42','',279),(768,'141','',279),(769,'1,2,3,4,5,6,7,8','',280),(770,'4,1,8,2,7,3,6,5','',280),(771,'4,3,2,1,8,7,6,5','',280),(772,'5,6,7,8,1,2,3,4','',280),(773,'8,7,6,5,4,3,2,1','',280),(774,'1,2,3,4,8,7,6,5','',280),(775,'187654329','',281),(776,'987654321','',281),(777,'543219876','',281),(778,'987651234','',281),(779,'123456789','',281),(780,'176543289','',281),(781,'34 - 81 - 0 - 0 - 0','',282),(782,'0 - 81 - 0 - 0 - 0','',282),(783,'34 - 81 - 79 - 0 - 0','',282),(784,'34 - 81 - 79 - 25 - 0','',282),(785,'34 - 81 - 79 - 25 - 60','',282),(786,'0 - 0 - 0 - 0 - 0','',282),(787,'5','',283),(788,'4','',283),(789,'3','',283),(790,'6','',283),(791,'7','',283),(792,'2','',283),(793,'27 e 33.','',284),(794,'57 e 33.','',284),(795,'33 e 41.','',284),(796,'21 e 27.','',284),(797,'21 e 12.','',284),(798,'12 e 21.','',284),(799,'{2,3,4,5,8}','',285),(800,'{4,3,2,1,7}','',285),(801,'{5,3,2,1,7}','',285),(802,'{6,5,4,3,9}','',285),(803,'{8,2,3,4,5}','',285),(804,'{2,4,3,5,8}','',285),(805,'[[code:correctAnswer]]','',290),(806,'[[code:wrongAnswer0]]','',290),(807,'[[code:wrongAnswer1]]','',290),(808,'[[code:wrongAnswer2]]','',290),(809,'[[code:wrongAnswer3]]','',290),(810,'[[code:wrongAnswer4]]','',290),(812,'[[code:correctAnswer]]','',291),(813,'[[code:wrongAnswer0]]','',291),(814,'[[code:wrongAnswer1]]','',291),(815,'[[code:wrongAnswer2]]','',291),(816,'[[code:wrongAnswer3]]','',291),(817,'[[code:wrongAnswer4]]','',291),(819,'[[code:correctAnswer]]','',292),(820,'[[code:wrongAnswer0]]','',292),(821,'[[code:wrongAnswer1]]','',292),(822,'[[code:wrongAnswer2]]','',292),(823,'[[code:wrongAnswer3]]','',292),(824,'[[code:wrongAnswer4]]','',292),(825,'[[code:correctAnswer]]','',293),(826,'[[code:wrongAnswer0]]','',293),(827,'[[code:wrongAnswer1]]','',293),(828,'[[code:wrongAnswer2]]','',293),(829,'[[code:wrongAnswer3]]','',293),(830,'[[code:wrongAnswer4]]','',293),(832,'[[code:correctAnswer]]','',294),(833,'[[code:wrongAnswer0]]','',294),(834,'[[code:wrongAnswer1]]','',294),(835,'[[code:wrongAnswer2]]','',294),(836,'[[code:wrongAnswer3]]','',294),(837,'[[code:wrongAnswer4]]','',294),(838,'[[code:correctAnswer]]','',295),(839,'[[code:createWrongAnswers([5,10])]]','',295),(840,'[[code:correctAnswer]]','',296),(841,'[[code:createWrongAnswers([5,10])]]','',296),(842,'Obter a representação hexadecimal de números de 0 a 15','',297),(843,'Obter a representação binária de números de 0 a 15','',297),(844,'Obter a representação decimal de quaisquer números hexadecimais','',297),(845,'Obter a representação hexadecimal de quaisquer números decimais','',297),(846,'Obter a representação binária de quaisquer números decimais','',297),(847,'Obter a representação decimal de números binários de 0 a 15','',297),(848,'O método retorna \' \' para números maiores que 15','',298),(849,'O método não faz validação para números maiores que 15','',298),(850,'O método vai dar erro (travar) para números maiores que 15','',298),(851,'O método vai dar erro (travar) para números negativos','',298),(852,'O método não faz validação para números negativos','',298),(853,'O método retorna \'0\' para números negativos','',298),(854,'Obter a representação decimal de hexadecimais de \'0\' a \'F\'','',299),(855,'Obter a representação binária de hexadecimais de \'0\' a \'F\'','',299),(856,'Obter a representação decimal de quaisquer números hexadecimais','',299),(857,'Obter a representação hexadecimal de quaisquer números decimais','',299),(858,'Obter a representação binária de quaisquer números decimais','',299),(859,'Obter a representação decimal de números binários de \'0\' a \'F\'','',299),(860,'O método retorna -1 para números maiores que \'F\'','',300),(861,'O método não faz validação para valores maiores que \'F\'','',300),(862,'O método vai dar erro (travar) para valores maiores que \'F\'','',300),(863,'O método vai dar erro (travar) para valores menores que \'0\'','',300),(864,'O método não faz validação para números menores que \'0\'','',300),(865,'O método retorna \' \' para números menores que \'0\'','',300),(866,'String [],String [],String,int','',301),(867,'String,String [],String,int','',301),(868,'char [],char,char,int','',301),(869,'char,char [],char,int','',301),(870,'int [],String [],char,int','',301),(871,'char [],int [],char,char','',301),(872,'String [],String [],String,int','',302),(873,'String,String [],String,int','',302),(874,'char [],char,char,int','',302),(875,'char,char [],char,int','',302),(876,'int [],String [],char,int','',302),(877,'char [],int [],char,char','',302),(878,'String [],String,String,int','',303),(879,'String,String [],String,int','',303),(880,'char [],char,char,int','',303),(881,'char,char [],char,int','',303),(882,'int [],String [],char,int','',303),(883,'char [],int [],char,char','',303),(884,'[][],String [][],i*16+j,int','',304),(885,'[][],String [][],j*16+i,int','',304),(886,'String,String [][],i*15+j,char','',304),(887,'char [][],char[],i*j,char','',304),(888,'char [],char [][],i*10+j,int','',304),(889,'int [][],String [],j*10+i,double','',304),(890,'String [][],String [][],String,i*16+j','',305),(891,'String [][],String [][],String,j*16+i','',305),(892,'String,String [][],String,i*15+j','',305),(893,'char [][],char[],char,i*j','',305),(894,'char [],char [][],char,i*10+j','',305),(895,'int [][],String [],char,j*10+i','',305),(896,'String,[][],i*16+j,int','',306),(897,'String,[][],j*16+i,int','',306),(898,'String,String [][],i*15+j,char','',306),(899,'char [][],char[],i*j,char','',306),(900,'char [],char [][],i*10+j,int','',306),(901,'int [][],String [],j*10+i,double','',306),(902,'String,\"X\", \"V\", \"IV\", \"IX\"','',307),(903,'String, \"X\", \"IV\", \"V\", \"XI\"','',307),(904,'char [], \"IX\", \"V\", \"IV\", \"X\"','',307),(905,'char [], \"X\", \"V\", \"I\", \"I\"','',307),(906,'String, \"X\", \"V\", \"IV\", \"X\"','',307),(907,'char [], \"IX\", \"IV\", \"V\", \"X\"','',307),(908,'String, \"I\", \"V\", \"IV\", \"IX\"','',308),(909,'String, \"X\", \"IV\", \"V\", \"XI\"','',308),(910,'char [], \"IX\", \"V\", \"IV\", \"X\"','',308),(911,'char [], \"X\", \"V\", \"I\", \"I\"','',308),(912,'String, \"X\", \"V\", \"IV\", \"X\"','',308),(913,'char [], \"IX\", \"IV\", \"V\", \"X\"','',308),(914,'String, \"V\", \"I\", \"IV\", \"IX\"','',309),(915,'String, \"V\", \"IV\", \"V\", \"XI\"','',309),(916,'char [], \"IX\", \"V\", \"IV\", \"X\"','',309),(917,'char [], \"X\", \"V\", \"I\", \"I\"','',309),(918,'String, \"X\", \"V\", \"IV\", \"X\"','',309),(919,'char [], \"IX\", \"IV\", \"V\", \"X\"','',309),(920,'n-1, n-1, 0','',310),(921,'n, n, 0','',310),(922,'n+1, n+1, 0','',310),(923,'n, n, 1','',310),(924,'n+1, n+1, 1','',310),(925,'n, n, -1','',310),(926,'n-1, n-1, 0','',311),(927,'n, n, 0','',311),(928,'n+1, n+1, 0','',311),(929,'n, n, 1','',311),(930,'n+1, n+1, 1','',311),(931,'n, n, -1','',311),(932,'n-1, n-1, 1','',312),(933,'n-1, n-1, 0','',312),(934,'n, n-1, 1','',312),(935,'n+1, n+1, 0','',312),(936,'n, n, 1','',312),(937,'n+1, n+1, 1','',312),(938,'String, 255','',313),(939,'String, 127','',313),(940,'char, 255','',313),(941,'char, 127','',313),(942,'char, 512','',313),(943,'String, 512','',313),(944,'String, 255','',314),(945,'String, 127','',314),(946,'char, 255','',314),(947,'char, 127','',314),(948,'char, 512','',314),(949,'String, 512','',314),(950,'String, 255','',315),(951,'String, 127','',315),(952,'char, 255','',315),(953,'char, 127','',315),(954,'char, 512','',315),(955,'String, 512','',315),(956,'String, [], String, String','',316),(957,'String, String [], String, int','',316),(958,'char [], char, char, int','',316),(959,'char, char [], char, int','',316),(960,'int [], String [], char, int','',316),(961,'char [], int [], char, char','',316),(962,'[], String [], String, String','',317),(963,'[], String [], String, int','',317),(964,'char [], char, char, int','',317),(965,'char, char [], char, int','',317),(966,'int [], String [], char, int','',317),(967,'char [], int [], char, char','',317),(968,'String [], String, String, int','',318),(969,'String, String [], String, int','',318),(970,'char [], char, char, int','',318),(971,'char, , char [], char, int','',318),(972,'String [], char [], char, int','',318),(973,'char [], int, char, char','',318),(974,'String, [][], String, i*16+j','',319),(975,'String, [][], String, j*16+i','',319),(976,'String, String [][], String, i*15+j','',319),(977,'char [][], char[], char, i*j','',319),(978,'char [], char [][], char, i*10+j','',319),(979,'int [][], String [], char, j*10+i','',319),(980,'String, [][], String, i*16+j','',320),(981,'String, [][], String, j*16+i','',320),(982,'String, String [][], String, i*15+j','',320),(983,'char [][], char[], char, i*j','',320),(984,'char [], char [][], char, i*10+j','',320),(985,'int [][], String [], char, j*10+i','',320),(986,'[][], String [][], String, i*16+j','',321),(987,'[][], String [][], String, j*16+i','',321),(988,'String, String [][], String, i*15+j','',321),(989,'char [][], char[], char, i*j','',321),(990,'char [], char [][], char, i*10+j','',321),(991,'int [][], String [], char, j*10+i','',321),(992,'String, \"I\", \"V\", \"IV\", \"IX\"','',322),(993,'String, \"I\", \"IV\", \"V\", \"XI\"','',322),(994,'char [], \"IX\", \"V\", \"IV\", \"X\"','',322),(995,'char [], \"X\", \"V\", \"I\", \"I\"','',322),(996,'String, \"X\", \"V\", \"IV\", \"X\"','',322),(997,'char [], \"IX\", \"IV\", \"V\", \"X\"','',322),(998,'String, \"I\", \"I\", \"IV\", \"IX\"','',323),(999,'String, \"X\", \"I\", \"V\", \"XI\"','',323),(1000,'char [], \"IX\", \"V\", \"IV\", \"X\"','',323),(1001,'char [], \"X\", \"V\", \"I\", \"I\"','',323),(1002,'String, \"X\", \"V\", \"IV\", \"X\"','',323),(1003,'char [], \"IX\", \"IV\", \"V\", \"X\"','',323),(1004,'String,  \"X\",  \"I\",  \"IV\",  \"IX\"','',324),(1005,'String, \"X\", \"IV\", \"V\", \"XI\"','',324),(1006,'char [], \"IX\", \"V\", \"IV\", \"X\"','',324),(1007,'char [], \"X\", \"V\", \"I\", \"I\"','',324),(1008,'String, \"X\", \"V\", \"IV\", \"X\"','',324),(1009,'char [], \"IX\", \"IV\", \"V\", \"X\"','',324),(1010,'Apenas 4 entradas','',325),(1011,'Apenas 2 entradas','',325),(1012,'Apenas 1 entrada','',325),(1013,'Apenas 3 entradas','',325),(1014,'Todas as entradas','',325),(1015,'Nenhuma das entradas','',325),(1016,'Apenas 2 entradas','',326),(1017,'Apenas 1 entrada','',326),(1018,'Apenas 3 entradas','',326),(1019,'Apenas 4 entradas','',326),(1020,'Todas as entradas','',326),(1021,'Nenhuma das entradas','',326),(1022,'Apenas 2 entradas','',327),(1023,'Apenas 1 entrada','',327),(1024,'Apenas 3 entradas','',327),(1025,'Apenas 4 entradas','',327),(1026,'Todas as entradas','',327),(1027,'Nenhuma das entradas','',327),(1028,'Apenas 2 entradas','',328),(1029,'Apenas 1 entrada','',328),(1030,'Apenas 3 entradas','',328),(1031,'Apenas 4 entradas','',328),(1032,'Todas as entradas','',328),(1033,'Nenhuma das entradas','',328),(1034,'o número de entradas e saídas externas e o número de consultas externas.','',332),(1035,'o número de comandos do tipo case e a quantidade de memória utilizada.','',332),(1036,'a quantidade de memória e o número de tabelas utilizadas no sistema.','',332),(1037,'a velocidade de processamento e o número de consultas externas.','',332),(1038,'o número de tabelas utilizadas no sistema e o número de comandos do tipo case.','',332),(1039,'$0,65$','',333),(1044,'$0,6$','',333),(1045,'$0,75$','',333),(1046,'$0,64$','',333),(1047,'$0,55$','',333),(1048,'$139,7$','',334),(1049,'$139,8$','',334),(1050,'$140,0$','',334),(1051,'$139,9$','',334),(1052,'$139,6$','',334),(1053,'Processamento em lotes de atualização de bases cadastrais a partir de arquivos de movimento.','',335),(1054,'Telas de filtro de relatório e consultas.','',335),(1055,'Telas de login com objetivo de verificar se o usuário pode ou não acessar o sistema.','',335),(1056,'Relatórios que possuem totalização de dados.','',335),(1057,'Informações que possuem formato gráfico.','',335),(1058,'somente I e II.','',337),(1059,'somente I.','',337),(1060,'somente II.','',337),(1061,'somente II e III.','',337),(1062,'I, II e III.','',337),(1063,'O código é projetado para ser reutilizado?','',338),(1064,'Há mais de 10 funções no sistema?','',338),(1065,'Os usuários do sistema terão treinamento?','',338),(1066,'Há o uso de interrupções no sistema?','',338),(1067,'A equipe de desenvolvimento é experiente?','',338),(1068,'[[code:correctAnswer]]','',348),(1069,'[[code:createWrongAnswers([5,100])]]','',348),(1070,'[[code:(\'%.2f\'%correctAnswer)]]','',349),(1071,'[[code:(\'%.2f\'%(correctAnswer+1))]]','',349),(1072,'[[code:(\'%.2f\'%(correctAnswer+2))]]','',349),(1073,'[[code:(\'%.2f\'%(correctAnswer+3))]]','',349),(1074,'[[code:(\'%.2f\'%(correctAnswer+4))]]','',349),(1075,'[[code:(\'%.2f\'%(correctAnswer-1))]]','',349),(1076,'[[code:correctAnswer]]','',350),(1077,'[[code:correctAnswer+1]]','',350),(1078,'[[code:correctAnswer+2]]','',350),(1079,'[[code:correctAnswer+4]]','',350),(1080,'[[code:correctAnswer-5]]','',350),(1081,'[[code:correctAnswer-1]]','',350),(1301,'Conectar todos os dispositivos e elementos que constituem o computador','',402),(1302,'Interligar, através de uma conexão de alto desempenho, o processador, a memória cache e a memória principal','',402),(1303,'Interligar, através de conexões hierarquizadas, o disco (HD), monitor e teclado/mouse ao processador','',402),(1304,'Interligar, através de conexões hierarquizadas, os dispositivos externos ao computador','',402),(1305,'Interligar, através de conectores padronizados (tipo PCI), diferentes placas de expansão ao computador','',402),(1306,'No barramento paralelo, passam sinais de endereços, de dados e de controle','',403),(1307,'No barramento serial, somente sinais de dados, em alta velocidade','',403),(1308,'No barramento paralelo, passam sinais de endereços e de dados','',403),(1309,'No barramento paralelo, passam sinais de dados e de controle','',403),(1310,'No barramento serial, passam sinais de endereços e de dados','',403),(1311,'Front Side Bus (System Bus), PCI','',404),(1312,'VGA (Monitor), Ethernet, USB','',404),(1313,'Front Side Bus (System Bus), SATA, PCI, VGA (Monitor), Ethernet, USB','',404),(1314,'Front Side Bus (System Bus), VGA (Monitor), SATA, PCI, USB','',404),(1315,'VGA (Monitor), SATA, PCI, USB','',404),(1316,'PCI, Front Side Bus (System Bus)','',405),(1317,'USB, Ethernet, VGA (Monitor)','',405),(1318,'USB, Ethernet, VGA (Monitor), PCI, SATA, Front Side Bus (System Bus)','',405),(1319,'USB, PCI, SATA, VGA (Monitor), Front Side Bus (System Bus)','',405),(1320,'USB, PCI, SATA, VGA (Monitor)','',405),(1321,'Crosstalk e sincronismo dos sinais','',406),(1322,'Roteamento de dezenas e centenas de linhas em paralelo','',406),(1323,'Limite pequeno e insuficiente na distância entre os dispositivos','',406),(1324,'Não permite o acesso multiponto','',406),(1325,'Velocidade de transmissão mais baixa e limite na amplitude do sinal','',406),(1326,'Os barramentos paralelos tem problemas de impedância dos condutores que a serial não tem','',407),(1327,'Ao projetar os condutores como linhas de comunicação seriais, reduzem-se os problemas que haviam nos barramentos paralelos','',407),(1328,'Os problemas dos barramentos paralelos impuseram limites na velocidade de transmissão de dados','',407),(1329,'Os barramentos seriais podem ser projetados para reduzir o problema de crosstalk','',407),(1330,'Os barramentos seriais não necessitam do sinal de clock para sincronizar os sinais paralelos','',407),(1331,'É um problema nos barramentos paralelos onde um condutor induz um sinal na linha vizinha','',408),(1332,'É a interferência no sinal de recepção devido ao sinal de transmissão','',408),(1333,'É um problema nos barramentos de comunicação devido à resistência dos condutores','',408),(1334,'É um problema nos barramentos seriais devido à capacitância entre os condutores paralelos','',408),(1335,'É um problema nos barramentos de comunicação devido à transmissão de sinais senoidais','',408),(1336,'Nos barramentos paralelos, é a necessidade de sincronizar a chegada de todos os sinais','',409),(1337,'Nos barramentos paralelos, é a necessidade de sincronizar a saída de todos os sinais','',409),(1338,'Nos barramentos seriais, é a necessidade de um sinal de clock (relógio) para ler o bit','',409),(1339,'Nos barramentos paralelos, é a necessidade de um sinal de clock (relógio) para ajustar o \"bitrate\"','',409),(1340,'Nos barramentos seriais, é a necessidade de sincronizar a chegada de todos os sinais','',409),(1341,'Nos barramentos paralelos, é a necessidade de sincronizar a chegada de todos os sinais','',410),(1342,'Nos barramentos paralelos, é a necessidade de sincronizar a saída de todos os sinais','',410),(1343,'Nos barramentos seriais, é a necessidade de um sinal de clock (relógio) para ler o bit','',410),(1344,'Nos barramentos paralelos, é a necessidade de um sinal de clock (relógio) para ajustar o \"bitrate\"','',410),(1345,'Nos barramentos seriais, é a necessidade de sincronizar a chegada de todos os sinais','',410),(1346,'Com a inserção de um bit (stub bit) sem dados a cada 4 ou 5 bits de dados','',411),(1347,'Não é sincronizado porque os barramentos seriais não enviam o sinal de clock','',411),(1348,'Os barramentos seriais não necessitam sincronização','',411),(1349,'É auto-sincronizado com os bits de dados','',411),(1350,'É sincronizado com um sinal de clock enviado junto com o sinal de dados','',411),(1351,'É uma especificação de barramento paralelo com dupla leitura por ciclo de clock, utilizada na interconexão entre a memória e a CPU','',412),(1352,'É um barramento paralelo utilizado em várias interconexões, inclusive entre a memória e a CPU','',412),(1353,'É uma especificação de pente de memórias utilizado como memória principal no IBM-PC','',412),(1354,'É uma técnica de dobrar o tempo de transmissão de dados utilizada em diversos barramentos do PC','',412),(1355,'É uma especificação de motherboard que utiliza esta tecnologia para aumentar a velocidade entre a memória e a CPU','',412),(1356,'É uma especificação de barramento paralelo de alto desempenho, utilizada na interconexão entre a memória e a CPU','',413),(1357,'É um barramento paralelo utilizado em várias interconexões, inclusive entre a memória e a CPU','',413),(1358,'É uma especificação de pente de memórias utilizado como memória principal no IBM-PC','',413),(1359,'É uma técnica de dobrar o tempo de transmissão de dados utilizada em diversos barramentos do PC','',413),(1360,'É uma especificação de motherboard que utiliza esta tecnologia para aumentar a velocidade entre a memória e a CPU','',413),(1361,'Ethernet é multiponto, tem alta latência e acesso probabilístico enquanto que Fibre Channel é ponto-a-ponto, tem baixa latência e é determinístico','',414),(1362,'Ethernet é baseado em fios metálicos enquanto que Fibre Channel é em fibra ótica','',414),(1363,'Ethernet transmite com taxas mais elevadas e distâncias mais longas que Fibre Channel','',414),(1364,'Fibre Channel transmite com taxas mais elevadas e distâncias mais longas que Ethernet','',414),(1365,'Fibre Channel não tem estrutura hierarquizável, resultando em escalabilidade e flexibilidade mais limitada que Ethernet','',414),(1366,'Infiniband é baseado em roteamento de pacotes em alta velocidade, resultando em melhor escalabilidade e flexibilidade que Fibre Channel','',415),(1367,'Infiniband é baseado em fios metálicos enquanto que Fibre Channel é em fibra ótica','',415),(1368,'Infiniband transmite com taxas mais elevadas e distâncias mais longas que Fibre Channel','',415),(1369,'Fibre Channel transmite com taxas mais elevadas e distâncias mais longas que Infiniband','',415),(1370,'Infiniband é multiponto, tem alta latência e acesso probabilístico enquanto que Fibre Channel é ponto-a-ponto, tem baixa latência e é determinístico','',415),(1371,'É o tempo entre a solicitação da comunicação e o início efetivo da transmissão','',416),(1372,'É o tempo gasto pelo protocolo de comunicação','',416),(1373,'É o atraso decorrente da comunicação','',416),(1374,'É a taxa de erros da comunicação digital (BER - bit error rate)','',416),(1375,'É o tempo em que a comunicação ficou indisponível','',416),(1376,'Assegura a realização da comunicação em intervalos pré-determinados de tempo','',417),(1377,'É quando a comunicação possui uma latência dentro de um intervalo pré-determinado de tempo','',417),(1378,'É o comportamento previsível do protocolo de comunicação','',417),(1379,'É quando a comunicação possui uma taxa de erros baixa e estável (BER - bit error rate)','',417),(1380,'É a medida da disponibilidade da comunicação','',417),(1381,'SIMD','',418),(1382,'CRAY','',418),(1383,'MISD','',418),(1384,'MIMD','',418),(1385,'Cluster','',418),(1386,'MIMD','',419),(1387,'CRAY','',419),(1388,'MISD','',419),(1389,'SIMD','',419),(1390,'Cluster','',419),(1391,'MISD','',420),(1392,'MIMD','',420),(1393,'TMR (Triple Modular Redundancy)','',420),(1394,'SIMD','',420),(1395,'Cluster','',420),(1396,'Ponto-a-ponto','',421),(1397,'Hipercubo','',421),(1398,'Anel toroidal','',421),(1399,'Estrela','',421),(1400,'Malha (ou Mesh)','',421),(1401,'Ponto-a-ponto','',422),(1402,'Hipercubo','',422),(1403,'Anel toroidal','',422),(1404,'Estrela','',422),(1405,'Malha (ou Mesh)','',422),(1406,'Implementado pelo compilador e controlado pelo Sistema Operacional','',423),(1407,'Implementado em hardware e controlado por harware e pelo compilador','',423),(1408,'Implementado e controlado por hardware','',423),(1409,'Implementado e controlado por software aplicativo','',423),(1410,'Implementado em hardware e controlado pelo Sistema Operacional','',423),(1411,'Implementado e controlado por software aplicativo','',424),(1412,'Implementado em hardware e controlado pelo Sistema Operacional','',424),(1413,'Implementado em hardware e controlado por harware e pelo compilador','',424),(1414,'Implementado e controlado por hardware','',424),(1415,'Implementado pelo compilador e controlado pelo Sistema Operacional','',424),(1416,'Compilação de programas','',425),(1417,'Particionamento (divisão em partes)','',425),(1418,'Escalação e distribuição (fork)','',425),(1419,'Sincronização e troca de informações','',425),(1420,'Consolidação dos resultados (join)','',425),(1421,'Estrutura da linguagem natural','',426),(1422,'Nível do paralelismo','',426),(1423,'Granularidade do particionamento (grossa ou fina)','',426),(1424,'Grau de acoplamento (forte ou fraco)','',426),(1425,'Comunicação (interconexão) dos computadores','',426),(1426,'Computação sequencial','',427),(1427,'Computação em pipeline','',427),(1428,'Computação sincronizada (em fase)','',427),(1429,'Computação dividir e conquistar (fork e join)','',427),(1430,'Computação replicada (servidor de tarefas)','',427),(1431,'Computação serial','',428),(1432,'Computação em pipeline','',428),(1433,'Computação sincronizada (em fase)','',428),(1434,'Computação dividir e conquistar (fork e join)','',428),(1435,'Computação orientada a dados (Data-flow)','',428),(1436,'Limite superior de processamento, além do qual o desempenho irá CAIR.','',429),(1437,'Limite superior de processamento, além do qual o desempenho irá ESTAGNAR.','',429),(1438,'Limite superior de processamento, a partir do qual o desempenho terá uma taxa de crescimento cada vez menor.','',429),(1439,'Capacidade ilimitada de processamento, pois computadores adicionais compensarão a tarefa de coordenação.','',429),(1440,'Capacidade ilimitada de processamento, tanto que cada ano são lançados Supercomputadores com cada vez mais processadores.','',429),(1441,'É uma composição de hardware, software e pessoas, interligados entre si para realizar uma tarefa ou função computacional','',430),(1442,'É um conjunto complexo de processadores, discos, roteadores e dispositivos interligados por barramentos e redes de comunicação','',430),(1443,'É um sistema que tem como função realizar determinados serviços aos usuários, e é composto por servidores e softwares aplicativos','',430),(1444,'É uma composição de softwares básicos e aplicativos que executam determinada função computacional','',430),(1445,'É um conjunto de elementos computacionais que disponibilizam aplicativos aos usuários','',430),(1446,'Extranet e Computação em Nuvem (parte do sistema é de terceiros)','',431),(1447,'Terminal (thin-client)-Hospedeiro (Host), Cliente-servidor e Intranet','',431),(1448,'Cliente-servidor, Intranet e Extranet','',431),(1449,'Intranet e Extranet','',431),(1450,'Intranet, Extranet e Computação em Nuvem (parte do sistema é de terceiros)','',431),(1451,'Capacidade (estático), desempenho (dinâmico) e tempo de resposta','',432),(1452,'Para CPU: MIPS, GFLOPS, Clock (GHz); para Comunicação: Gbps, GBps; para Armazenamento: GB e TB','',432),(1453,'Desempenho médio ou sustentado e desempenho de pico','',432),(1454,'Tempos de execução medidos de diversos aplicativos padronizados (Benchmark)','',432),(1455,'Capacidades de processamento para diversas condições de carga (milhões de transações por segundo)','',432),(1456,'A sua operação correta não depende só do resultado da computação, mas também do tempo em que é produzido','',433),(1457,'São sistemas que interagem com o mundo real','',433),(1458,'São sistemas que possuem um alto desempenho produzindo resultados computacionais em tempo mínimo','',433),(1459,'São sistemas rígidos e de comportamento estável, processando as entradas sempre da mesma forma','',433),(1460,'Todas as alternativas estão corretas','',433),(1461,'Confiabilidade, disponibilidade, taxa de falhas e taxa de reparo','',434),(1462,'Taxa de falhas e Confiabilidade R(t)','',434),(1463,'MTTF (Mean Time to Failure), MTBF (Mean Time Between Failures) e MTTR (Mean Time To Repair)','',434),(1464,'Segurança (Safety), Confiabilidade R(t) e Taxa de Falhas','',434),(1465,'Confiabilidade R(t) e Disponibilidade A(t)','',434),(1466,'Confiabilidade depende só da taxa de falhas e a Disponibilidade considera as taxas de falhas e a de reparo','',435),(1467,'Confiabilidade é a probabilidade do sistema funcionar o tempo todo, enquanto que a Disponibilidade é por um intervalo de tempo pré-estabelecido','',435),(1468,'Confiabilidade estima o tempo até a falha, e a Disponibilidade o tempo até a restauração','',435),(1469,'Confiabilidade reflete a confiança que temos no sistema, e a Disponibilidade a prontidão do sistema','',435),(1470,'Confiabilidade é a probabilidade do sistema falhar e a Disponibilidade é a probabilidade do sistema estar operando','',435),(1471,'É a medida de probabilidade de um sistema que não operou por uma hora a cada mil horas de serviço','',436),(1472,'Não tem significado, pois é um valor de medida de Confiabilidade e não de Disponibilidade','',436),(1473,'É resultado da Disponibilidade de um sistema paralelo de 3 elementos redundantes com Disponibilidade de 0,9 cada','',436),(1474,'É a razão entre o tempo de reparo e o tempo de operação','',436),(1475,'Significa que é um sistema de altíssima Disponibilidade, quase perfeito (A=1)','',436),(1476,'Tem uma fase de vida útil, onde a taxa de falhas é baixa e é constante; fora desta fase a taxa é crescente','',437),(1477,'Tem uma fase inicial de mortalidade infantil, decorrente de erros de projeto','',437),(1478,'Tem uma fase de vida útil, onde a taxa de falhas vai subindo gradativamente devido ao desgaste','',437),(1479,'Tem uma fase final (fim da vida útil) onde a taxa de falhas vai caindo à medida que sobram poucos elementos','',437),(1480,'Tem uma fase inicial onde força-se a redução da falha através de testes de stress (Burn-in)','',437),(1481,'Tem uma fase de vida útil, onde a taxa de falhas parece \"dente de serra\"; fora desta fase a taxa é crescente','',438),(1482,'Tem uma fase inicial de mortalidade infantil, decorrente de testes de stress (Burn-in)','',438),(1483,'Tem uma fase de vida útil, onde a taxa de falhas vai reduzindo gradativamente devido a redução de bugs','',438),(1484,'Tem uma fase final onde a taxa de falhas vai estabilizando pois diferente de hardware, o software não desgasta','',438),(1485,'Tem uma fase de vida útil, onde a taxa de falhas é baixa e é constante; fora desta fase a taxa é crescente','',438),(1486,'Evolução tecnológica das válvulas, transístores, circuitos integrados e para VLSI','',439),(1487,'Junção de dois conceitos: calculadora programável e processamento de dados','',439),(1488,'Evolução do conceito de calculadora programável','',439),(1489,'Evolução do conceito de processamento de dados','',439),(1490,'Constante desenvolvimento do VLSI, que integra cada vez mais transistores em um chip','',439),(1491,'O bit é mais imune a ruídos do que os sinais analógicos','',440),(1492,'O processo de digitalização não gera erros','',440),(1493,'A leitura do sinal digital não gera erros ou ruídos','',440),(1494,'A eletrônica digital é melhor que a eletrônica analógica','',440),(1495,'A reprodução do sinal digital não envolve eletrônica analógica','',440),(1496,'Potencializa as aplicações da computação através do processamento das informações (Hardware e Software)','',441),(1497,'Reduz drasticamente os erros, pois os sinais digitais tem mais qualidade que os sinais analógicos','',441),(1498,'Simplifica o tratamento da informação, pois o sistema digital é mais simples (só tem 0 e 1) que o analógico','',441),(1499,'Traz vantagens, pois a comunicação digital é melhor que o analógico','',441),(1500,'Traz vantagens, pois o armazenamento digital é melhor que o analógico','',441),(1501,'Potencializa as aplicações da computação através do processamento das informações (Hardware e Software)','',442),(1502,'Reduz drasticamente os erros, pois os sinais digitais tem mais qualidade que os sinais analógicos','',442),(1503,'Simplifica o tratamento da informação, pois o sistema digital é mais simples (só tem 0 e 1) que o analógico','',442),(1504,'A comunicação digital é melhor que o analógico','',442),(1505,'O armazenamento digital é melhor que o analógico','',442),(1506,'Decorre de pesados investimentos em processos de fabricação, instrumentos de precisão, química e mecânica fina, entre outros','',443),(1507,'Estava previsto na lei de Moore, que estabelece que a quantidade de transistores em um chip dobra a cada 18 meses','',443),(1508,'Decorre da evolução da computação que permite a miniaturização do transistor','',443),(1509,'Decorre porque a 4a geração de Computadores (VLSI) ainda está ativa','',443),(1510,'Decorre da evolução do software aplicativo que permite o projeto de transistores menores','',443),(1511,'16 bits de saída, sendo que todos estarão com sinal \"0\", exceto a quinta saída com nível \"1\"','',444),(1512,'16 bits de saída, sendo que todos estarão com sinal \"0\", exceto a quarta saída com nível \"1\"','',444),(1513,'4 bits de saída, sendo que todos estarão com sinal \"0\", exceto a quarta saída com nível \"1\"','',444),(1514,'4 bits de saída, sendo que todos estarão com sinal \"0\", exceto a terceira saída com nível \"1\"','',444),(1515,'2 bits de saída, com os sinais \"10\", indicando o bit 2 da entrada (bits: 3, 2, 1, 0)','',444),(1516,'16 bits de saída, sendo que todos estarão com sinal \"0\", exceto a terceira saída com nível \"1\"','',445),(1517,'16 bits de saída, sendo que todos estarão com sinal \"0\", exceto a segunda saída com nível \"1\"','',445),(1518,'4 bits de saída, sendo que todos estarão com sinal \"0\", exceto a segunda saída com nível \"1\"','',445),(1519,'4 bits de saída, sendo que todos estarão com sinal \"0\", exceto a terceira saída com nível \"1\"','',445),(1520,'2 bits de saída, com os sinais \"01\", indicando o bit 1 da entrada (bits: 3, 2, 1, 0)','',445),(1521,'Busca de uma instrução na memória pela CPU','',446),(1522,'Parte do ciclo de instrução responsável pela execução da instrução','',446),(1523,'Incremento do registrador Program Counter (PC) que aponta para a próxima instrução','',446),(1524,'Responsável pela geração do ciclo de máquina','',446),(1525,'Busca de um dado na memória pela CPU','',446),(1526,'É um ciclo de período fixo onde são executadas todas as ETAPAS da instrução','',447),(1527,'É o ciclo responsável exclusivamente pela execução de uma instrução','',447),(1528,'Incrementa o registrador Program Counter (PC) que aponta para a próxima instrução','',447),(1529,'Responsável pela geração do clock de instruções','',447),(1530,'Etapa de busca de uma instrução na memória pela CPU','',447),(1531,'Um ciclo de instrução é composto por diversos ciclos de máquinas necessários para a execução de todas as etapas de uma instrução','',448),(1532,'Um ciclo de máquina é composto por diversos ciclos de instruções necessários para a execução de todas as etapas de uma instrução','',448),(1533,'Os ciclos de máquina e de instruções são executados em paralelo no pipeline para aumentar o desempenho da CPU','',448),(1534,'O ciclo de máquina é responsável pela execução das etapas \"fixas\" de uma instrução, como fetch e incremento do PC. O ciclo de instrução executa apenas a etapa específica da instrução','',448),(1535,'O ciclo de instruções é responsável pela geração das etapas do ciclo de máquina','',448),(1536,'Estabelece a base de tempo para as quadraturas em que os ciclos de máquina são divididos','',449),(1537,'Responsável pelo relógio de tempo real do computador','',449),(1538,'Permite cronometrar a execução das instruções da CPU','',449),(1539,'Permite cronometrar o acesso à memória pela CPU','',449),(1540,'Responsável exclusivo pelo desempenho da CPU','',449),(1541,'São sinais de comando dos dispositivos internos da CPU gravados em uma memória ROM, e que são gerados a partir do código das instruções','',450),(1542,'É um programa escrito em Assembly para o funcionamento da CPU','',450),(1543,'É qualquer programa escrito em código das instruções em Assembly da CPU','',450),(1544,'É um programa básico necessário para o funcionamento da CPU','',450),(1545,'Permite a conversão da linguagem Assembly em código das instruções correspondentes','',450),(1546,'Permite armazenar o conteúdo do Program Counter na pilha, para que possa retornar ao fluxo de controle anterior','',451),(1547,'No tratamento da interrupção, indica a pilha onde deverão ser armazenados os valores do acumulador e registradores utilizados','',451),(1548,'Permite armazenar os valores do acumulador e registradores utilizados pela Sub-rotina','',451),(1549,'Permite armazenar os endereços das pilhas onde estão os valores do acumulador e registradores utilizados','',451),(1550,'Indica a pilha onde deverão ser armazenados os valores do acumulador e registradores utilizados','',451),(1551,'Compatibilidade com softwares existentes','',452),(1552,'Todas instruções executadas por hardware','',452),(1553,'Maximizar a taxa de execução de instruções','',452),(1554,'Restringir o acesso à memória: somente LOAD e STORE','',452),(1555,'Ter bastante registradores','',452),(1556,'Ambos são estruturas internas da CPU dedicados a acelerar o fluxo de dados','',453),(1557,'Permite a execução paralela de instruções, cada uma em estágios/etapas diferentes','',453),(1558,'Utiliza hardware especializado para cada estágio/etapa da instrução','',453),(1559,'Tem como objetivo executar uma instrução a cada ciclo de máquina','',453),(1560,'O Superescalar tem hardware especializado para cada tipo de instrução','',453),(1561,'Os Caches L1, L2 e L3 (e L4) possuem cópias de diferentes blocos da memória principal','',454),(1562,'Os Caches possuem níveis, com diferentes tamanhos, velocidades e funções','',454),(1563,'O hit-rate indica a quantidade de acertos que o Cache obteve com os dados e instruções que a CPU acessou','',454),(1564,'O write-back refere-se aos dados alterados que são escritas de volta nos diversos níveis do Cache','',454),(1565,'O branch prediction refere-se à análise do Cache de instruções para localizar futuros saltos de instruções','',454),(1566,'São alterações dinâmicas da ordem de execução das instruções com o objetivo de manter o pipeline e o superescalar fluindo','',455),(1567,'São módulos responsáveis pela execução paralela de instruções, que dependendo da velocidade de execução, alteram-se a ordem','',455),(1568,'São instruções não previstas pelo Sistema Operacional, que são inseridas dinamicamente no fluxo de execuções','',455),(1569,'São instruções não previstas pelo Compilador, que são inseridas dinamicamente no fluxo de execuções','',455),(1570,'A CPU está sempre analisando o Cache de instruções para evitar executar instruções que podem estar fora de ordem','',455),(1571,'Alterar dinamicamente a fila de execução de programas aplicativos para otimizar o desempenho','',456),(1572,'Transferir variáveis da memória externa para registradores internos da CPU para aumentar o desempenho','',456),(1573,'Traduzir o programa escrito em uma linguagem de alto nível para o código de instruções Assembly da CPU','',456),(1574,'Segmentar os blocos de códigos e de dados para compatibilizar com o tamanho dos blocos do Cache','',456),(1575,'Alterar a ordem de execução das instruções para manter o pipeline e o superescalar fluindo','',456),(1576,'No barramento paralelo, passam sinais de endereços, de dados e de controle','',457),(1577,'No barramento serial, somente sinais de dados, em alta velocidade','',457),(1578,'No barramento paralelo, passam sinais de endereços e de dados','',457),(1579,'No barramento paralelo, passam sinais de dados e de controle','',457),(1580,'No barramento serial, passam sinais de endereços e de dados','',457),(1581,'Os barramentos paralelos tem problemas de impedância dos condutores que a serial não tem','',458),(1582,'Ao projetar os condutores como linhas de comunicação seriais, reduzem-se os problemas que haviam nos barramentos paralelos','',458),(1583,'Os problemas dos barramentos paralelos impuseram limites na velocidade de transmissão de dados','',458),(1584,'Os barramentos seriais podem ser projetados para reduzir o problema de crosstalk','',458),(1585,'Os barramentos seriais não necessitam do sinal de clock para sincronizar os sinais paralelos','',458),(1586,'É um problema nos barramentos paralelos onde um condutor induz um sinal na linha vizinha','',459),(1587,'É a interferência no sinal de recepção devido ao sinal de transmissão','',459),(1588,'É um problema nos barramentos de comunicação devido à resistência dos condutores','',459),(1589,'É um problema nos barramentos seriais devido à capacitância entre os condutores paralelos','',459),(1590,'É um problema nos barramentos de comunicação devido à transmissão de sinais senoidais','',459),(1591,'Nos barramentos paralelos, é a necessidade de sincronizar a chegada de todos os sinais','',460),(1592,'Nos barramentos paralelos, é a necessidade de sincronizar a saída de todos os sinais','',460),(1593,'Nos barramentos seriais, é a necessidade de um sinal de clock (relógio) para ler o bit','',460),(1594,'Nos barramentos paralelos, é a necessidade de um sinal de clock (relógio) para ajustar o \"bitrate\"','',460),(1595,'Nos barramentos seriais, é a necessidade de sincronizar a chegada de todos os sinais','',460),(1596,'Nos barramentos paralelos, é a necessidade de sincronizar a chegada de todos os sinais','',461),(1597,'Nos barramentos paralelos, é a necessidade de sincronizar a saída de todos os sinais','',461),(1598,'Nos barramentos seriais, é a necessidade de um sinal de clock (relógio) para ler o bit','',461),(1599,'Nos barramentos paralelos, é a necessidade de um sinal de clock (relógio) para ajustar o \"bitrate\"','',461),(1600,'Nos barramentos seriais, é a necessidade de sincronizar a chegada de todos os sinais','',461),(1601,'É o tempo entre a solicitação da comunicação e o início efetivo da transmissão','',462),(1602,'É o tempo total gasto pelo protocolo de comunicação','',462),(1603,'É o atraso de transmissão decorrente da comunicação','',462),(1604,'É a taxa de erros da comunicação digital (BER - bit error rate)','',462),(1605,'É o tempo em que a comunicação ficou indisponível','',462),(1606,'Assegura a realização da comunicação em intervalos pré-determinados de tempo','',463),(1607,'É quando a comunicação possui uma latência dentro de um intervalo pré-determinado de tempo','',463),(1608,'É o comportamento fixo do protocolo de comunicação','',463),(1609,'É quando a comunicação possui uma taxa de erros baixa e estável (BER - bit error rate)','',463),(1610,'É a medida da disponibilidade da comunicação','',463),(1611,'SIMD','',464),(1612,'CRAY','',464),(1613,'MISD','',464),(1614,'MIMD','',464),(1615,'Cluster','',464),(1616,'MIMD','',465),(1617,'CRAY','',465),(1618,'MISD','',465),(1619,'SIMD','',465),(1620,'Cluster','',465),(1621,'MISD','',466),(1622,'MIMD','',466),(1623,'TMR (Triple Modular Redundancy)','',466),(1624,'SIMD','',466),(1625,'Cluster','',466),(1626,'Computação sequencial','',467),(1627,'Computação em pipeline','',467),(1628,'Computação sincronizada (em fase)','',467),(1629,'Computação dividir e conquistar (fork e join)','',467),(1630,'Computação replicada (servidor de tarefas)','',467),(1631,'Computação serial','',468),(1632,'Computação em pipeline','',468),(1633,'Computação sincronizada (em fase)','',468),(1634,'Computação dividir e conquistar (fork e join)','',468),(1635,'Computação orientada a dados (Data-flow)','',468),(1636,'A sua operação correta não depende só do resultado da computação, mas também do tempo em que é produzido','',469),(1637,'São sistemas que interagem com o mundo real','',469),(1638,'São sistemas que possuem um alto desempenho produzindo resultados computacionais em tempo mínimo','',469),(1639,'São sistemas rígidos e de comportamento estável, processando as entradas sempre da mesma forma','',469),(1640,'Todas as alternativas estão corretas','',469),(1641,'Confiabilidade, disponibilidade, taxa de falhas e taxa de reparo','',470),(1642,'Taxa de falhas e Confiabilidade R(t)','',470),(1643,'MTTF (Mean Time to Failure), MTBF (Mean Time Between Failures) e MTTR (Mean Time To Repair)','',470),(1644,'Segurança (Safety), Confiabilidade R(t) e Taxa de Falhas','',470),(1645,'Confiabilidade R(t) e Disponibilidade A(t)','',470),(1646,'Confiabilidade depende só da taxa de falhas e a Disponibilidade considera as taxas de falhas e a de reparo','',471),(1647,'Confiabilidade é a probabilidade do sistema funcionar o tempo todo, enquanto que a Disponibilidade é por um intervalo de tempo pré-estabelecido','',471),(1648,'Confiabilidade estima o tempo até a falha, e a Disponibilidade o tempo até a restauração','',471),(1649,'Confiabilidade reflete a confiança que temos no sistema, e a Disponibilidade a prontidão do sistema','',471),(1650,'Confiabilidade é a probabilidade do sistema falhar e a Disponibilidade é a probabilidade do sistema estar operando','',471),(1651,'Existe diferença entre pesquisa básica e aplicada em suas respectivas essências.','',472),(1652,'Pesquisa básica é para definir atividades sem fins lucrativos, voltada à compreensão da natureza e de suas leis, sendo este precursora do progresso tecnológico.','',472),(1653,'A pesquisa aplicada não cabe converter descoberta da pesquisa básica em inovações tecnológicas e sim em pesquisa dirigida.','',472),(1654,'Uma nação para ter progresso industrial independe do domínio da base científica.','',472),(1655,'As pesquisas básicas e aplicadas se desenvolvem juntas e não caminha em lados opostos.','',472),(1656,'O Santos Dumont desenvolveu as suas atividades com finalidade de uso.','',473),(1657,'Tal como César Lattes desenvolveu as primeiras teorias para serem aplicadas.','',473),(1658,'Trata-se do 1º quadrante onde se estabele o aparecimento de anomalias.','',473),(1659,'O Santos Dumont e Carlos Chagas estavam envolvidos no entendimento dos fenômenos.','',473),(1660,'O Santos Dumont e Lois Pasteur contribuiram no 2º quadrante.','',473),(1661,'Identificação de anomalias é quando o paradigma apresenta discrepâncias em relação à natureza onde é iniciada a revolução científica.','',474),(1662,'Paradigma estabelecido é aceito parcialmente da comunidade científica ou recém-estabelecido, em substituição ao anterior.','',474),(1663,'Consolidação conceitual é uma etapa final de provas, o candidato a um novo paradigma está em fase inicial de consolidação e começa a ser debatida e discutida.','',474),(1664,'Não é processo prático no ponto de vista de inovação tecnológica. Atualmente muitos processos e produtos entram rapidamente em obsolescência ou são muito voláteis. Portanto, muitos paradigmas são questionados para aplicação prática.','',474),(1665,'Na crise conceitual, as anomalias são discutidas e debatidas. É onde não ocorre revolução científica entre partidários do paradigma atual e do proposto. Aqui não ocorre desenvolvimento de novas ideias e conceitos','',474),(1666,'Novidade, atividade inventiva e aplicação industrial.','',475),(1667,'Novidade e atividade inventiva.','',475),(1668,'Atividade inventiva e aplicação industrial.','',475),(1669,'Novidade, ato inventivo e aplicação industrial;','',475),(1670,'Novidade e ato inventivo.','',475),(1671,'São novidades associadas a fatos já presentes na natureza e não constadas.','',476),(1672,'Não desencadeiam as alterações dos paradigmas.','',476),(1673,'São fatos simples e isolado e não demanda tempo para discussão.','',476),(1674,'Não tem resistência no campo científico e são aceitas sem grandes questionamentos.','',476),(1675,'Podem ser patenteadas e ter exclusividade para exploração comercial.','',476),(1676,'A primeira asserção é uma proposição falsa, e a segunda, uma proposição verdadeira.','',477),(1677,'As duas asserções são proposições verdadeiras e a segunda é uma justificativa correta da primeira.','',477),(1678,'As duas asserções são proposições verdadeiras, mas a segunda não é uma justificativa correta da primeira.','',477),(1679,'A primeira asserção é uma proposição verdadeira, e a segunda, uma proposição falsa.','',477),(1680,'Tanto a primeira quanto a segunda asserções são proposições falsas.','',477),(1681,'O que tem objetivo de realizar novas descobertas ou gerar teorias.','',478),(1682,'Conjunto de conhecimentos apoiado por \"realizações científicas passadas\" ou paradigmas, e aceito por toda uma comunidade científica.','',478),(1683,'É difundida através de livros e catálogos científicos.','',478),(1684,'A principal finalidade é a comprovação de resultados já esperados, ou seja, voltada à determinação do fato significativo, a harmonização do fato com a teoria e a articulação da teoria.','',478),(1685,'Sua atividade fundamental é proporcionar conhecimentos já consagrados para a aplicação prática.','',478),(1686,'Se o terceiro, sem autorização, utiliza a invenção para pesquisa.','',479),(1687,'Se a invenção é um produto, o terceiro, sem autorização, aliena, se oferece para alienar, usa ou importa o produto.','',479),(1688,'Se a invenção é um processo, o terceiro, sem autorização, usa ou oferece para uso tal processo.','',479),(1689,'Se a invenção é um processo, o terceiro, sem autorização, usa ou importa qualquer produto obtido diretamente por meio desse processo.','',479),(1690,'Se a invenção é um produto, o terceiro, sem autorização, aliena ou se oferece para alienar o produto.','',479),(1691,'A valorização da capacidade intelectual, no Brasil, está altamente centrada na produção de publicações, o que garante ao país um papel de destaque como exportador de tecnologias.','',480),(1692,'A comercialização de tecnologia via licenciamento é uma atividade mais internacional que doméstica, já que as empresas detentoras de tecnologia procuram evitar o fomento de concorrentes diretos nos mercados em que atuam.','',480),(1693,'A comercialização de tecnologias é condicionada pelos interesses competitivos das empresas, pela dinâmica de funcionamento de cada setor, pelo tipo e estágio da tecnologia envolvida, entre outros fatores.','',480),(1694,'A compra de uma tecnologia mais avançada permite um salto tecnológico em processos e produtos. Porém, não havendo um esforço próprio para adaptar a tecnologia adquirida, ocorre um ganho de eficiência estático, pois não haverá melhorias subsequentes de produtividade.','',480),(1695,'As universidades e os centros de pesquisas representam uma fonte independente de tecnologia, já que não estão ligados a empresas produtoras de bens e serviços. Assim, algumas das limitações observadas no comércio de tecnologia entre empresas não ocorrem nas relações universidade-empresa.','',480),(1696,'Se somente a afirmativa II estiver correta.','',481),(1697,'Se todas as afirmativas estiverem corretas.','',481),(1698,'Se somente a afirmativa I estiver correta.','',481),(1699,'Se somente as afirmativas I e II estiverem corretas.','',481),(1700,'Se somente as afirmativas II e III estiverem corretas.','',481),(1701,'As descobertas de fenômenos naturais, elementos da natureza, materiais e seres encontrados na natureza são amparados pela harmonia legislativa internacional e é vedada registro como propriedade intelectual.','',482),(1702,'É garantido pela lei que as ideias de maneira em geral podem ser registradas como propriedade industrial.','',482),(1703,'Em pesquisa básica são descobertos fenômenos que podem ser exploradas comercialmente com exclusividade para a amparada pela lei.','',482),(1704,'As descobertas são essenciais para o processo de inovação baseado em pesquisa dirigida e tem exclusividade para exploração comercial amparada pelas leis.','',482),(1705,'Os processos de inovação baseadas em descobertas é explorada comercialmente em forma de sigilo tem vigência legal de tempo para uso exclusivo.','',482),(1706,'Modelos de padrões em estudo como uma série de questionamentos por grupo de estudiosos.','',483),(1707,'Seus fundamentos já discutidos e fundamentados pela comunidade científica reunida ao seu redor, conferindo à realização científica um estágio de conhecimento consolidado e explicado.','',483),(1708,'Fundamentos que geram práticas científicas posteriores.','',483),(1709,'Fundamentos que proporcionam resultados previamente conhecidos esperados.','',483),(1710,'Quando uma realização científica passada é defendida por membros da comunidade ao ser comparada a outras atividades científicas permite que qualquer tipo de problema seja resolvido por grupos diferentes de estudiosos.','',483),(1711,'Tem objetivo de gerar novas descobertas essenciais para uso em inovações tecnológicas.','',484),(1712,'É difundida através de livros e revistas científicas.','',484),(1713,'A finalidade é comprovar resultados já esperados, ou seja, voltada à determinação do fato significativo, à harmonização do fato com teoria e sua respectiva articulação.','',484),(1714,'Há consenso de se usar a teoria disponível para prever informações factuais dotadas de valores intrínsecos.','',484),(1715,'É essencialmente executada pelos profissionais de tecnologia e aplicada em indústrias.','',484),(1716,'Propõe-se a criar inovações tendo em vista as anomalias que são observadas no processo de fabricação de um produto.','',485),(1717,'É um paradigma bem articulado, que qualitativamente prevê resultados de leis quantitativas muito antes que instrumentos e aparelhos fossem criados para verificar esses efeitos.','',485),(1718,'É uma atividade essencialmente desenvolvida pelos tecnólogos, engenheiros e cientistas para solucionar um problema.','',485),(1719,'É apoiada em um paradigma capaz de resolver um problema e situação onde é preciso soluções.','',485),(1720,'Faz o uso de consenso de se usar a teoria disponível para prever informações factuais dotadas de valores intrínsecos.','',485),(1721,'O direito de impedir terceiro, sem o seu consentimento, de produzir, usar, colocar à venda, vender ou importar com estes propósitos produto objeto de patente ou processo ou produto obtido diretamente por processo patenteado.','',486),(1722,'O direito de uso exclusivo do objeto patenteado em todo o território nacional.','',486),(1723,'O direito de uso, gozo e fruição de todo o conteúdo da patente, conforme concedida;.','',486),(1724,'Todos os direitos inerentes aos institutos da posse e da propriedade ao que está descrito.','',486),(1725,'Todos os direitos inerentes aos institutos da posse e da propriedade ao que está descrito ou reivindicado.','',486),(1726,'Os árabes foram precursores da atual ciência, traduziram vasta informação científica do grego.','',487),(1727,'Os egípcios foram precursores da investigação científica desde as mais civilizações da humanidade.','',487),(1728,'Os gregos nunca dissociaram religião da ciência, tendo em vista a vasta mitologia que até hoje são amplamente difundidas na cultura ocidental.','',487),(1729,'A ciência grega foi base direta da europeia na idade média, tendo em vista muitos textos em latim traduzidos de gregos.','',487),(1730,'As primeiras universidades foram fundadas na Europa sendo esta base científica para Newton e Galileu.','',487),(1731,'A atividade manual sempre esteve ao cargo dos escravos durante o império romano ou a cargos dos artesões no regime feudal.','',488),(1732,'A posição social do cientista não era fundamental.','',488),(1733,'Os filósofos naturais pesquisavam fenômenos com intuito puramente econômico.','',488),(1734,'O uso buscava o entendimento sem fins lucrativos, ou seja, somente o entendimento.','',488),(1735,'Os recursos dos mecenas eram fundos de investimento oriundos de artesões que buscavam melhor desempenho econômico.','',488),(1736,'O processo gerador de inovação tecnológica não ocorre apenas no final da pesquisa pura e sim ao longo de todo percurso.','',489),(1737,'Não há linearidade entre pesquisa pura e aplicada, ambas ocorrem aleatoriamente.','',489),(1738,'A pesquisa pura e aplica não estabelecem interfaces sem intercâmbios de informações.','',489),(1739,'Novos campos científicos são gerados pesquisa aplicada essencialmente pelo desenvolvimento de equipamentos avançados.','',489),(1740,'As anomalias observadas em paradigmas no primeiro quadrante são essenciais para desenvolvimento de pesquisa aplicada.','',489),(1741,'É errôneo pensar que toda evolução tecnológica depende da ciência básica;','',490),(1742,'As atividades simples não impulsionam tecnologia.','',490),(1743,'E o caso do EUA que se desenvolveu devido à avançada base científica no final do século XIX.','',490),(1744,'Grande parte da inovação tecnológica originou da ciência básica.','',490),(1745,'O avanço da ciência não é consequência da tecnologia.','',490),(1746,'Em todos os países cresce o interesse em se atrelar a ciência e tecnologia, com altos investimentos para a indústria, de modo a fortalecer também a pesquisa aplicada em busca do uso, como forma de apoio ao processo de inovação.','',491),(1747,'Nas últimas décadas não se tem dúvidas sobre pesados investimentos em pesquisa pura, frente aos benefícios gerados.','',491),(1748,'A pesquisa e o desenvolvimento experimental têm como objetivo aumentar o volume da produção industrial garantindo o paradigma.','',491),(1749,'A pesquisa básica tem como objetivo apenas a reprodução de práticas e provas comprometida com a aplicação na pesquisa aplicada.','',491),(1750,'A pesquisa estratégica não tem ampla classe de usuários, sendo este restrita a uma organização patrocinadora.','',491),(1751,'O terceiro quadrante corresponde à pesquisa pura voltada para o uso.','',492),(1752,'O primeiro quadrante não é caraterizado por fenômenos particulares e objetivam entendimento e seu uso;','',492),(1753,'No segundo quadrante busca se o uso e consolidação das anomalias observadas.','',492),(1754,'No quarto quadrante refere-se à busca do entendimento sem definição do paradigma.','',492),(1755,'Pode se observar que não existe diferença temporal nos quadrantes.','',492),(1756,'Em produtos e processos.','',493),(1757,'Em produtos, aplicações novas de meios conhecidos e aperfeiçoamento de invenção obrigatoriamente já em domínio público.','',493),(1758,'Em métodos e processos.','',493),(1759,'Em produtos, aplicações novas de meios conhecidos e aperfeiçoamento de qualquer invenção, mesmo que não se encontre em domínio público.','',493),(1760,'Em processo ou produto obtido diretamente por processo patenteado.','',493),(1761,'Qualquer pessoa física ou jurídica que tenha legitimidade para obter a patente.','',494),(1762,'Apenas o inventor ou inventores.','',494),(1763,'Apenas a pessoa a quem o contrato de trabalho determinar que pertencem os direitos sobre a invenção.','',494),(1764,'Apenas os sucessores do ou dos inventores.','',494),(1765,'Qualquer pessoa física ou jurídica.','',494),(1766,'Para um técnico versado no assunto, não decorrer de maneira evidente ou óbvia do estado da técnica.','',495),(1767,'Para um técnico não versado no assunto, decorrer de maneira evidente ou óbvia do estado da técnica.','',495),(1768,'Para um técnico versado no assunto, não decorrer de maneira comum ou usual do estado da técnica.','',495),(1769,'Para um técnico versado no assunto, não decorrer de maneira comum ou vulgar do estado da técnica.','',495),(1770,'Para um técnico não versado no assunto, decorrer de maneira comum ou usual do estado da técnica.','',495),(1771,'Garante práticas contra concorrência desleal desde que seja atendida as legislações nacionais.','',496),(1772,'No documento de uma patente não apresenta suficiência descritiva para fins industriais.','',496),(1773,'A patente uma vez concedida passará a ter exclusividade com prazo indeterminado passando de 20 anos para o detentor.','',496),(1774,'Os documentos patentários são acessados desde que remunere o detentor, ou seja, se trata de um documento sigiloso.','',496),(1775,'As marcas não tem proteção assegurada pelos tratados internacionais e qualquer pessoa física ou jurídica pode explorar comercialmente.','',496),(1776,'Estágio em que os principais objetivos de desempenho das operações são a confiabilidade e o custo do produto.','',497),(1777,'Customização alta com frequentes mudanças no projeto original.','',497),(1778,'Necessidades do mercado amplamente atendidas pelo produto.','',497),(1779,'Vendas com tendência ao crescimento devido ao custo do produto ser elevado.','',497),(1780,'Poucos concorrentes oferecerão o mesmo produto, e a empresa tem como objetivo principal a flexibilidade.','',497),(1781,'III e IV.','',498),(1782,'I e II.','',498),(1783,'I e III.','',498),(1784,'II e III.','',498),(1785,'II e IV.','',498),(1786,'Identificar objetivos - analisar causas.','',499),(1787,'Identificar oportunidade - analisar os resultados finais.','',499),(1788,'Avaliar a situação - identificar os custos finais.','',499),(1789,'Analisar causas - identificar efeitos sociais.','',499),(1790,'Analisar a situação econômica - avaliar preços.','',499),(1791,'Definição dos requisitos.','',500),(1792,'Estudo de viabilidade.','',500),(1793,'Design.','',500),(1794,'Encerramento.','',500),(1795,'Execução.','',500),(1796,'Atende a requisitos mínimos estabelecidos em norma ou regulamento técnico.','',501),(1797,'É o mais viável do ponto de vista econômico-industrial.','',501),(1798,'É qualitativamente superior a outros congêneres não avaliados ofertados no mercado.','',501),(1799,'Atende aos requisitos mais rigorosos de uma norma ou regulamento técnico.','',501),(1800,'Possui índice de falhas ou não conformidades iguala zero.','',501),(1801,'O modelo linear de processo de inovação é representado por uma sequência ordenada de estágios ou fases distintas e separadas.','',502),(1802,'O processo de inovação e, portanto, o seu gerenciamento, são atribuições do departamento de pesquisa e desenvolvimento da empresa inovadora, tendo em vista se tratar de competência estritamente científica e tecnológica, concernente tanto a novos produtos, quanto a novos processos.','',502),(1803,'O gerenciamento das atividades de inovação em uma empresa industrial permite eliminar definitivamente as incertezas quanto à execução e aos resultados de um projeto de desenvolvimento tecnológico, visto se tratar de investimento predeterminado, com recursos, período de execução e organização conhecidos.','',502),(1804,'Uma sucessão de inovações incrementais certamente culmina em uma inovação radical, caso sejam mantidas as mesmas condições e recursos ao longo do período de desenvolvimento.','',502),(1805,'Um projeto típico de desenvolvimento tecnológico em empresa inovadora possui as seguintes fases: identificação da oportunidade; conceito; desenvolvimento propriamente dito; prototipagem; lançamento em produção e produção em massa.','',502),(1806,'São corretas apenas as afirmativas II e III.','',503),(1807,'É correta apenas a afirmativa II.','',503),(1808,'São corretas apenas as afirmativas I e III.','',503),(1809,'São corretas apenas as afirmativas I e II.','',503),(1810,'São corretas as afirmativas I, II e III.','',503),(1811,'Em um processo motivacional, se a necessidade for satisfeita, cria-se um bem-estar, ou seja, o processo motivacional é eficaz, contudo, caso a necessidade não seja satisfeita, é possível que seja gerado um processo de frustração, conflito e estresse.','',504),(1812,'As organizações precisam de pessoas para atingir os seus objetivos e alcançar a sua visão e missão de futuro, assim como as pessoas necessitam das organizações para atingirem as suas metas e realizações pessoais. Desse modo, é importante manter as pessoas motivadas e satisfeitas para que trabalhem no alcance das metas e objetivos traçados. Consequentemente, a motivação deve fazer parte da política de recursos humanos, mas não da definição da estratégia organizacional.','',504),(1813,'Um dos grandes desafios para um gestor de recursos humanos, em uma organização, é motivar os seus colaboradores. Uma vez que cada pessoa é um ser único e distinto de todos os outros, é necessário adequar as estratégias da organização às estratégias das pessoas que trabalham para que os indivíduos se sintam motivados.','',504),(1814,'A motivação extrínseca reporta-se a comportamentos de trabalho que são efetuados com entusiasmo. O próprio trabalho provoca satisfação na pessoa que o desempenha, fazendo que o indivíduo o execute com prazer, sentindo-se motivado extrinsecamente.','',504),(1815,'Necessidades fisiológicas, de segurança, sociais, de amor, de estima e de autorrealização são divididas em dois grupos pela teoria da modificação do comportamento organizacional. O primeiro grupo inclui as necessidades de ordem superior - sociais, de amor, de estima e de autorrealização -, que podem ser satisfeitas de forma intrínseca. O segundo grupo inclui as necessidades de ordem inferior - fisiológicas e de segurança -, que podem ser satisfeitas externamente.','',504),(1816,'Em que os resultados da inovação são visíveis a outros usuários.','',505),(1817,'Pelo qual o produto é percebido como difícil de entender ou de usar.','',505),(1818,'Pelo qual o produto é percebido como melhor, para competir ou substituir tecnologias existentes.','',505),(1819,'Em que a inovação pode ser previamente experimentada em uma situação de baixo risco.','',505),(1820,'Em que a inovação é compatível com valores, normas e experiência dos usuários.','',505),(1821,'Crescimento econômico e distribuição de renda;','',506),(1822,'Inovação e competitividade;','',506),(1823,'Atividades de pesquisa e desenvolvimento (P&D) e inovação tecnológica;','',506),(1824,'Atividades de pesquisa e desenvolvimento (P&D) e produtividade;','',506),(1825,'Inovação e crescimento econômico.','',506),(1826,'Ao fluxo de bens e da conferência física.','',507),(1827,'À gestão de informações logísticas e medidas de desempenho.','',507),(1828,'À gestão de informações logísticas e medidas de montante de produção.','',507),(1829,'Ao fluxo de caixa e de custos operacionais.','',507),(1830,'Às atividades totalmente desenvolvidas pela empresa, envolvendo todas as áreas da mesma, com o objetivo de converter materiais em produto acabado, com agregação de valor ao material.','',507),(1831,'A frequência de levantamento de satisfação do fornecedor e do grau de competitividade da empresa.','',508),(1832,'O tempo de levantamento de assuntos relacionados a níveis de serviço.','',508),(1833,'A frequência de levantamento de satisfação do cliente.','',508),(1834,'O tempo de tratamento de um pedido de mudança nos níveis de serviço.','',508),(1835,'O impacto da qualidade de recursos financeiros adicionais para o atendimento do nível de serviço definido.','',508),(1836,'II e IV estão corretas;','',509),(1837,'I e II estão corretas;','',509),(1838,'II e IV estão erradas;','',509),(1839,'III e IV estão corretas;','',509),(1840,'II e III estão erradas.','',509),(1841,'A busca de ideias contidas em bancos de patentes que oferecem boas pistas sobre inovações em gestação é um método de vigilância tecnológica.','',510),(1842,'Estudos prospectivos sempre envolvem declarações sobre o futuro com probabilidades associadas aos acontecimentos.','',510),(1843,'A metodologia de extrapolação de tendências é a única que ode ser empregada em estudos de prospectiva tecnológica.','',510),(1844,'O conhecimento da identidade de cada participante por parte dos demais e a interação presencial entre eles são algumas das propriedades do método Delphi.','',510),(1845,'A análise morfológica, muito usada para avaliação dos ambientes onde se desenvolvem inovações, explora as tendências de um conjunto de atributos ou variáveis que permitem fazer previsões sobre a evolução dos sistemas de inovações.','',510),(1846,'O I item é correto.','',511),(1847,'O item II é correto;','',511),(1848,'Os itens I e II estão corretos;','',511),(1849,'Os itens I e II estão incorretos;','',511),(1850,'O item I é incorreto.','',511),(1851,'A técnica Delphi é uma das mais indicadas no estudo de prospecção tecnológica.','',512),(1852,'O processo de prospecção tecnológica envolve o reconhecimento explícito de que o desenvolvimento tecnológico é determinado por uma lógica intrínseca e, consequentemente, acontece de maneira independente.','',512),(1853,'Na prospecção tecnológica, devem-se priorizar os estudos estatísticos em lugar dos estudos de planejamento estratégico.','',512),(1854,'A prospecção tecnológica não deve ser entendida como uma estratégia, e sim como uma ação adhocrática que atenda às necessidades emergentes da sociedade.','',512),(1855,'Na prospecção tecnológica, não é aconselhável utilizar uma combinação de métodos de levantamento de dados para a obtenção de informações qualitativas e quantitativas.','',512),(1856,'As empresas pioneiras na implementação de inovações podem ser consideradas condutoras do processo de inovação, mas o impacto econômico das inovações vai depender da adoção das inovações por outras empresas.','',513),(1857,'A inovação que causa um impacto significativo em um mercado e na atividade econômica das empresas desse mercado é a incremental, cujo conceito é centrado no impacto das inovações, em oposição à sua novidade.','',513),(1858,'A primeira implementação de uma nova tecnologia de produção, em uma de cinco fábricas pertencentes a uma mesma empresa é contada como inovação, assim como a implementação da mesma tecnologia nas demais quatro fábricas daquela empresa.','',513),(1859,'A empresa que realizou atividades de inovação durante o período de análise, desde que essas atividades resultem na implementação de uma inovação, é ativamente inovadora.','',513),(1860,'Um método de produção já implementado por outras empresas não pode ser considerado inovação para uma nova empresa, mesmo que ele seja novo para essa empresa.','',513),(1861,'Um esforço temporário para criar um produto, serviço ou resultado exclusivo é realizado, tendo sido estabelecido um período para sua execução, com início e término definidos.','',514),(1862,'A sistematização das atividades para a produção de um serviço de natureza contínua e que tem como objetivo utilizar os recursos físicos existentes na organização é realizada.','',514),(1863,'O foco é a realização das atividades do nível operacional que, por envolver o pessoal técnico, pode ser otimizada, minimizando os custos de produção e de admissão de pessoal.','',514),(1864,'Uma metodologia que preconiza a execução das atividades operacionais por meio de tecnologia de automação é estabelecida, minimizando a necessidade de mão de obra.','',514),(1865,'Uma metodologia para a criação de um produto ou serviço com escopo variável, porém de natureza cíclica, é estabelecida, possibilitando a utilização dos recursos existentes na empresa.','',514),(1866,'Organização.','',515),(1867,'Planejamento.','',515),(1868,'Direção.','',515),(1869,'Controle.','',515),(1870,'Coordenação.','',515),(1871,'Estabelecer estrutura de ensino a distância dos conceitos e procedimentos de funcionamento da organização e implementar programa de tutoria em que um colaborador mais antigo seria fonte de conhecimento da organização para um mais novo.','',516),(1872,'Desconsiderar a capacitação dos colaboradores, já que esta implica investimentos significativos que serão perdidos rapidamente.','',516),(1873,'Criar uma universidade corporativa, que teria a responsabilidade de estabelecer um treinamento de longo prazo para os colaboradores da organização.','',516),(1874,'Terceirizar a atividade de capacitação.','',516),(1875,'Certificar a organização em diferentes modelos de referências e normas, de modo a que a empresa garanta que a organização funcionará independente de um turn-over elevado dos colaboradores e que o conhecimento da organização não será perdido.','',516),(1876,'O Vale do Silício reúne vários conceitos, como os de sistema de inovação e cluster, por exemplo.','',517),(1877,'A difusão da inovação em um cluster se dá exclusivamente através das universidades locais.','',517),(1878,'A Lei da Inovação insere-se no contexto do sistema nacional de inovação e, a partir dela, as empresas brasileiras que inovam pautam suas ações.','',517),(1879,'O Brasil é o único país onde o incentivo aos spin-offs tem sido alvo das políticas de ciência, tecnologia e inovação (PCTIs).','',517),(1880,'Os fundos setoriais se inserem nos sistemas regional e local de inovação, considerando que foram uma iniciativa dos estados e que contam também com recursos dos próprios estados.','',517),(1881,'As necessidades de estima, em   uma   perspectiva organizacional, podem ser relacionadas à noção de status, com possibilidade de ascensão na carreira e de ter visibilidade social.','',518),(1882,'As necessidades de auto realização podem estar afetas à noção de relacionamentos, dizendo respeito à valorização de pertencer a um grupo formal ou informal, clube ou sociedade.','',518),(1883,'As necessidades fisiológicas podem ser descritas como o transporte, a estabilidade, a segurança e a integridade física.','',518),(1884,'As necessidades de segurança têm como exemplos a alimentação, a habitação e o vestuário.','',518),(1885,'As necessidades do amor estão bastante associadas à possibilidade de desenvolvimento pleno das competências ou potencial das pessoas.','',518),(1886,'O desenvolvimento se caracteriza pelo aumento sustentado da produtividade e da renda por habitante, desacompanhado do processo de acumulação de capital e da incorporação de progresso técnico.','',519),(1887,'O desenvolvimento econômico pode ser definido como processo de mudança social pelo qual o crescente número de necessidades humanas, pré-existentes ou criadas pela própria mudança, são satisfeitas por meio de uma diferenciação no sistema produtivo, gerado pela introdução de inovações tecnológicas.','',519),(1888,'A evolução do sistema capitalista brasileiro se associa a uma contradição entre a modernização do sistema produtivo e a marginalização social, caracterizando um padrão de desenvolvimento dual. O padrão tecnológico é descolado da demanda geral da sociedade, havendo uma estrutura produtiva funcional e adequada para a péssima distribuição de renda do país.','',519),(1889,'O avanço do país no desenvolvimento com equidade envolve uma grande diferenciação do sistema produtivo, o que caracteriza a inovação, e uma forte expansão do mercado interno de massa, incorporando segmentos enormes da população que estão excluídos.','',519),(1890,'As relações de dependência e a hierarquização econômica e de poder entre os países estão associadas, no presente, a quem detém (ou não) os conhecimentos produtivos essenciais aos paradigmas tecnológicos dominantes no mundo contemporâneo (tecnologias de informação em bens e serviços, biotecnologia, química fina, novos materiais, equipamentos, etc.).','',519),(1891,'A ação governamental no campo  da  inovação  visa unicamente ampliar a oferta de conhecimento científico e tecnológico, via expansão do sistema universitário e de pesquisa público, bem como a oferta de bens e serviços tecnológicos - recursos humanos     qualificados, laboratórios científicos atualizados, serviços tecnológicos prestados por instituições públicas de pesquisa e a própria realização    de    pesquisas    científicas,    na consecução do objetivo maior de estimular o desenvolvimento econômico e, em particular, o progresso técnico da economia.','',520),(1892,'As políticas de inovação se tornam atualmente mais importantes, tendo em vista seu papel crucial para intensificar a competitividade, por meio do fortalecimento da capacidade de aprender de indivíduos e empresas.','',520),(1893,'A mudança de paradigma inaugura uma nova era tecno-econômica envolvendo a criação de setores e atividades com novas formas de gerar e transmitir conhecimentos e inovações, produzir e comercializar bens e serviços, definir e implementar estratégias e políticas, organizar e operar empresas e outras instituições públicas e privadas (de ensino e pesquisa, financiamento, promoção etc.).','',520),(1894,'A ênfase nas medidas de apoio à inovação tecnológica, por parte dos países mais avançados, está estreitamente vinculada ao desenvolvimento, difusão e utilização eficiente das novas tecnologias (especialmente as de informação e comunicação) na economia baseada no conhecimento.','',520),(1895,'Um conceito-chave é o reconhecimento de que as políticas comerciais, de investimento e tecnológicas devem ser consideradas de maneira holística, conjuntamente e não de maneira separada. A interface entre tais políticas é particularmente visível nas políticas de apoio à exportação e no erguimento das barreiras não tarifárias.','',520),(1896,'Mudança tecnológica disruptiva.','',521),(1897,'Retardo da mudança tecnológica.','',521),(1898,'Capacitação do pessoal.','',521),(1899,'Foco escolhido de atuação.','',521),(1900,'Tecnologias com alta maturação de investimento.','',521),(1901,'Apenas a 2 e a 4 estão corretas','',522),(1902,'Apenas a 1 e a 6 estão corretas','',522),(1903,'Apenas a 3 e a 5 estão corretas','',522),(1904,'Todas estão erradas','',522),(1905,'Apenas a 2 e a 6 estão corretas','',522),(1906,'Apenas a 4 e a 5 estão corretas','',522),(1907,'Apenas a 1 e a 2 estão corretas','',523),(1908,'Apenas a 1 e a 6 estão corretas','',523),(1909,'Apenas a 3 e a 4 estão corretas','',523),(1910,'Todas estão erradas','',523),(1911,'Apenas a 5 e a 6 estão corretas','',523),(1912,'Apenas a 4 e a 5 estão corretas','',523),(1913,'Apenas a 4 e a 6 estão corretas','',524),(1914,'Apenas a 2 e a 4 estão corretas','',524),(1915,'Apenas a 1 e a 6 estão corretas','',524),(1916,'Apenas a 2 e a 5 estão corretas','',524),(1917,'Estão corretas a 2, a 4 e a 5','',524),(1918,'Apenas a 4 e a 5 estão corretas','',524),(1919,'A partir do segundo dia.','',525),(1920,'Somente após 16 dias.','',525),(1921,'A empresa não terá lucro.','',525),(1922,'Desde o primeiro dia.','',525),(1923,'Somente após 4 dias','',525),(1924,'Somente após 10 dias.','',525),(1925,'R\\$700,00 de prejuízo acumulado','',526),(1926,'R\\$558,00 de prejuízo acumulado.','',526),(1927,'R\\$753,00 de prejuízo acumulado.','',526),(1928,'Não houve prejuízo algum.','',526),(1929,'R\\$500,00 de prejuízo acumulado.','',526),(1930,'R\\$333,00 de prejuízo acumulado.','',526),(1931,'Não houve prejuízo algum.','',527),(1932,'R\\$558,00 de prejuízo acumulado.','',527),(1933,'R\\$753,00 de prejuízo acumulado.','',527),(1934,'R\\$700,00 de prejuízo acumulado.','',527),(1935,'R\\$500,00 de prejuízo acumulado.','',527),(1936,'R\\$333,00 de prejuízo acumulado.','',527),(1937,'Estão corretas a 2, a 4 e a 5','',528),(1938,'Estão corretas a 1, a 5 e a 6','',528),(1939,'Apenas a 2 e a 4 estão corretas','',528),(1940,'Apenas a 1 e a 6 estão corretas','',528),(1941,'Apenas a 2 e a 5 estão corretas','',528),(1942,'Apenas a 4 e a 5 estão corretas','',528),(1943,'Apenas a 3 e a 5 estão corretas','',529),(1944,'Estão corretas a 2, a 4 e a 5','',529),(1945,'Estão corretas a 1, a 4 e a 5','',529),(1946,'Apenas a 2 e a 4 estão corretas','',529),(1947,'Apenas a 1 e a 3 estão corretas','',529),(1948,'Apenas a 4 e a 5 estão corretas','',529),(1949,'Estão corretas a 2, a 4, a 5 e a 6','',530),(1950,'Estão corretas a 2, a 3 e a 5','',530),(1951,'Estão corretas a 1, a 4 e a 5','',530),(1952,'Apenas a 2 e a 4 estão corretas','',530),(1953,'Apenas a 1 e a 3 estão corretas','',530),(1954,'Apenas a 4 e a 5 estão corretas','',530),(1955,'Apenas a 3 e a 6 estão corretas','',531),(1956,'Estão corretas a 2, a 3 e a 5','',531),(1957,'Estão corretas a 1, a 4 e a 5','',531),(1958,'Apenas a 2 e a 4 estão corretas','',531),(1959,'Apenas a 1 e a 3 estão corretas','',531),(1960,'Apenas a 4 e a 5 estão corretas','',531),(1961,'Apenas a 2 e a 4 estão corretas','',532),(1962,'Apenas a 1 e a 4 estão corretas','',532),(1963,'Apenas a 5 e a 6 estão corretas','',532),(1964,'Todas estão erradas','',532),(1965,'Apenas a 3 e a 6 estão corretas','',532),(1966,'Apenas a 2 e a 5 estão corretas','',532),(1967,'O coeficiente de dispersão é 0,95387','',533),(1968,'Existe uma fraca correlação negativa entre Idade e Renda','',533),(1969,'O coeficiente de dispersão é 0,97666','',533),(1970,'Não existe forte correlação linear entre Idade e Renda','',533),(1971,'Existe forte correlação linear negativa entre Idade e Renda','',533),(1972,'Existe correlação entre Idade e Renda, mas ela é altamente não-linear','',533),(1973,'Estão corretas a 1, a 3 e a 6','',534),(1974,'Estão corretas a 1, a 5 e a 6','',534),(1975,'Apenas a 3 e a 6 estão corretas','',534),(1976,'Apenas a 2 e a 6 estão corretas','',534),(1977,'Apenas a 1 e a 3 estão corretas','',534),(1978,'Apenas a 5 e a 6 estão corretas','',534),(1979,'Apenas a 1 e a 2 estão corretas','',535),(1980,'Apenas a 5 e a 6 estão corretas','',535),(1981,'Todas estão erradas','',535),(1982,'Apenas a 3 e a 6 estão corretas','',535),(1983,'Apenas a 2 e a 3 estão corretas','',535),(1984,'Apenas a 3 e a 4 estão corretas','',535),(1985,'Estão corretas a 1, a 3 e a 6','',536),(1986,'Estão corretas a 2, a 3 e a 6','',536),(1987,'Todas estão erradas','',536),(1988,'Apenas a 2 e a 4 estão corretas','',536),(1989,'Apenas a 1 e a 3 estão corretas','',536),(1990,'Apenas a 4 e a 6 estão corretas','',536),(1991,'Apenas a 1 e a 2 estão corretas','',537),(1992,'Apenas a 5 e a 6 estão corretas','',537),(1993,'Todas estão erradas','',537),(1994,'Apenas a 3 e a 6 estão corretas','',537),(1995,'Apenas a 2 e a 3 estão corretas','',537),(1996,'Apenas a 3 e a 4 estão corretas','',537),(1997,'Apenas a 1 e a 6 estão corretas','',538),(1998,'Estão corretas a 1, a 3 e a 6','',538),(1999,'Estão corretas a 2, a 3 e a 6','',538),(2000,'Apenas a 2 e a 4 estão corretas','',538),(2001,'Apenas a 1 e a 3 estão corretas','',538),(2002,'Apenas a 4 e a 6 estão corretas','',538),(2003,'se(sortear())\\{','',539),(2004,'se()\\{','',539),(2005,'sortear()\\{','',539),(2006,'andarSul(2)','',539),(2007,'virarDireita()','',539),(2008,'senão\\{','',539),(2009,'senão\\{','',540),(2010,'se()\\{','',540),(2011,'sortear()\\{','',540),(2012,'andarNorte (2)','',540),(2013,'virarDireita()','',540),(2014,'se(sortear())\\{','',540),(2015,'andarNorte(2)','',541),(2016,'se()\\{','',541),(2017,'Sortear()\\{','',541),(2018,'virarDireita(2)','',541),(2019,'se(sortear())\\{','',541),(2020,'senão\\{','',541),(2021,'andarOeste(2)','',542),(2022,'se()\\{','',542),(2023,'sortear()\\{','',542),(2024,'virarEsquerda()','',542),(2025,'se(sortear())\\{','',542),(2026,'senão\\{','',542),(2027,'Apenas a 2 e a 3 estão corretas','',543),(2028,'Estão corretas a 2, a 4, a 5 e a 6','',543),(2029,'Estão corretas a 2, a 3 e a 5','',543),(2030,'Estão corretas a 3, a 4, a 5 e a 6','',543),(2031,'Apenas a 2 e a 4 estão corretas','',543),(2032,'Apenas a 3 e a 5 estão corretas','',543),(2033,'Estão corretas a 1, a 4 e a 5','',544),(2034,'Apenas a 2 e a 3 estão corretas','',544),(2035,'Estão corretas a 2, a 4, a 5 e a 6','',544),(2036,'Estão corretas a 2, a 3 e a 5','',544),(2037,'Estão corretas a 3, a 4, a 5 e a 6','',544),(2038,'Apenas a 1 e a 6 estão corretas','',544),(2039,'Estão corretas a 2, a 5 e a 6','',545),(2040,'Apenas a 2 e a 3 estão corretas','',545),(2041,'Estão corretas a 2, a 4, a 5 e a 6','',545),(2042,'Estão corretas a 2, a 3 e a 5','',545),(2043,'Estão corretas a 1, a 4, a 5 e a 6','',545),(2044,'Apenas a 1 e a 6 estão corretas','',545),(2045,'$-5/4$','',546),(2046,'$1/2$','',546),(2047,'$-3/4$','',546),(2048,'$3/4$','',546),(2049,'$-1$','',546),(2050,'$1$','',547),(2051,'$0$','',547),(2052,'$-1$','',547),(2053,'$-2$','',547),(2054,'$1/2$','',547),(2055,'$9-9ln(27)$','',548),(2056,'$-18ln(3) + 1$','',548),(2057,'$-9+ln(27)$','',548),(2058,'$ln(3)+9$','',548),(2059,'$3-3ln(3)$','',548),(2060,'$-13$','',549),(2061,'$-23$','',549),(2062,'$-7$','',549),(2063,'$3$','',549),(2064,'$-53$','',549),(2065,'$\\frac{1}{\\sqrt{2\\pi}}$','',550),(2066,'$\\frac{1}{2\\sqrt{\\pi}}$','',550),(2067,'$\\sqrt{\\frac{\\pi}{2}}$','',550),(2068,'$\\frac{\\pi}{\\sqrt{2}}$','',550),(2069,'$\\sqrt{2\\pi}+\\frac{1}{\\sqrt{2\\pi}}$','',550),(2070,'$1$','',551),(2071,'$-1$','',551),(2072,'$2$','',551),(2073,'$-2$','',551),(2074,'$0$','',551),(2075,'$e\\sqrt[3]4$','',552),(2076,'$e^{\\sqrt[3]4}$','',552),(2077,'$\\frac{e}{\\sqrt[3]4}$','',552),(2078,'$2e^{\\sqrt[3]4}$','',552),(2079,'$\\frac{e^{\\sqrt[3]4}}{\\sqrt[3]4}$','',552),(2080,'$\\frac{3}{2+8(ln2)^2}$','',553),(2081,'$\\frac{3}{1+ln16}$','',553),(2082,'$\\frac{3}{2+2(ln4)}$','',553),(2083,'$\\frac{2}{3+3(ln4)^2}$','',553),(2084,'$\\frac{6}{4+4ln4}$','',553),(2085,'$3,85$','',554),(2086,'$3,75$','',554),(2087,'$3,95$','',554),(2088,'$3,90$','',554),(2089,'$3,80$','',554),(2090,'$4,15$','',555),(2091,'$4,25$','',555),(2092,'$4,20$','',555),(2093,'$4,05$','',555),(2094,'$4,10$','',555),(2095,'$1,9975$','',556),(2096,'$1,9995$','',556),(2097,'$1,9985$','',556),(2098,'$1,9992$','',556),(2099,'$1,9965$','',556),(2100,'$0,05$','',557),(2101,'$0,005$','',557),(2102,'$0,5$','',557),(2103,'$0,055$','',557),(2104,'$0,55$','',557),(2105,'$1,03$','',558),(2106,'$1,3$','',558),(2107,'$1,003$','',558),(2108,'$1,033$','',558),(2109,'$1,303$','',558),(2110,'$1$','',559),(2111,'$1,1$','',559),(2112,'$0,9$','',559),(2113,'$0,95$','',559),(2114,'$1,01$','',559),(2115,'$\\frac{-1}{20\\pi}$','',560),(2116,'$\\frac{-1}{10\\pi}$','',560),(2117,'$\\frac{-1}{80\\pi}$','',560),(2118,'$\\frac{1}{20\\pi}$','',560),(2119,'$\\frac{1}{40\\pi}$','',560),(2120,'$\\frac{12}{10\\pi}$','',561),(2121,'$\\frac{10}{\\pi}$','',561),(2122,'$\\frac{1,2}{10\\pi}$','',561),(2123,'$\\frac{10}{2\\pi}$','',561),(2124,'$\\frac{10}{12\\pi}$','',561),(2125,'$\\frac{1}{25\\pi}$','',562),(2126,'$\\frac{1}{50\\pi}$','',562),(2127,'$\\frac{1}{100\\pi}$','',562),(2128,'$\\frac{1}{75\\pi}$','',562),(2129,'$\\frac{1}{45\\pi}$','',562),(2130,'$\\frac{8}{9\\pi}$','',563),(2131,'$\\frac{4}{9\\pi}$','',563),(2132,'$\\frac{4}{3\\pi}$','',563),(2133,'$\\frac{8}{3\\pi}$','',563),(2134,'$\\frac{2}{9\\pi}$','',563),(2135,'$+\\infty$','',564),(2136,'$0$','',564),(2137,'$2$','',564),(2138,'$1$','',564),(2139,'$\\frac{1}{2}$','',564),(2140,'$0$','',565),(2141,'$2$','',565),(2142,'$-1$','',565),(2143,'$-\\infty$','',565),(2144,'$1$','',565),(2145,'$1$','',566),(2146,'$0$','',566),(2147,'$3$','',566),(2148,'$+\\infty$','',566),(2149,'$\\frac{1}{3}$','',566),(2150,'$e^{\\frac{1}{2}}$','',567),(2151,'$ln(2)$','',567),(2152,'$1$','',567),(2153,'$+\\infty$','',567),(2154,'$0$','',567),(2155,'$\\frac{1}{5}$','',568),(2156,'$0$','',568),(2157,'$5$','',568),(2158,'$1$','',568),(2159,'$\\frac{5}{3}$','',568),(2160,'$\\frac{1}{2}$','',569),(2161,'$\\frac{1}{4}$','',569),(2162,'$\\frac{\\sqrt 2}{2}$','',569),(2163,'$\\frac{2}{\\sqrt 2}$','',569),(2164,'$1$','',569),(2165,'$(-1,+\\infty)$','',570),(2166,'$(1,+\\infty)$','',570),(2167,'$(-1,0)$','',570),(2168,'$(0,+\\infty)$','',570),(2169,'$(-\\infty,1)$','',570),(2170,'$(-2,+\\infty)$','',571),(2171,'$(2,+\\infty)$','',571),(2172,'$(-2,2)$','',571),(2173,'$(-1,+\\infty)$','',571),(2174,'$(-\\infty,2)$','',571),(2175,'$y=0$','',572),(2176,'$y=x+1$','',572),(2177,'$y=-x+1$','',572),(2178,'Não existe','',572),(2179,'$y=-x-1$','',572),(2180,'$x=-2$ e $x=2$','',573),(2181,'$y=ln(4)$','',573),(2182,'$y=ln(4)$ e $x=2$','',573),(2183,'$y=2x+1$','',573),(2184,'$y=2x-1$ e $x=-2$','',573),(2185,'$(0,2)$','',574),(2186,'$(-2,2)$','',574),(2187,'$(-\\infty,-2)$','',574),(2188,'(-2,0)','',574),(2189,'$(-\\infty,-2)\\cup(0,2)$','',574),(2190,'$(-1,0)$','',575),(2191,'$(-4/3,0)$','',575),(2192,'$(-1,-1/2)$','',575),(2193,'(-4/3,-1)','',575),(2194,'$(-1/4,0)$','',575),(2195,'Não existe','',576),(2196,'$(0,+\\infty)$','',576),(2197,'$(-1,8/3)$','',576),(2198,'$(-1,0)$','',576),(2199,'$(8/3,+\\infty)$','',576),(2200,'$y=x$','',577),(2201,'$y=x$ e $y=-x$','',577),(2202,'$x=-1$ e $y=-x$','',577),(2203,'$y=x+1$ e $x=-1$','',577),(2204,'$y=-x+1$ e $x=-1$','',577),(2205,'$(-\\infty,-\\sqrt 3)\\cup(0,\\sqrt 3)$','',578),(2206,'$(-\\infty,-1)\\cup(1,\\sqrt 3)$','',578),(2207,'$(-\\infty,-1)$','',578),(2208,'$(-1,0)\\cup(0,1)$','',578),(2209,'$(0,\\sqrt3)$','',578),(2210,'$(-\\infty,-2)\\cup(0,+\\infty)$','',579),(2211,'$(-\\infty,-1)$','',579),(2212,'$(-\\infty,-1)\\cup(0,+\\infty)$','',579),(2213,'$(1,+\\infty)$','',579),(2214,'$(-\\infty,-1)\\cup(1,+\\infty)$','',579),(2215,'$(0,+\\infty)$','',580),(2216,'$(-1,+\\infty)$','',580),(2217,'$(-\\infty,-1)$','',580),(2218,'$(1,+\\infty)$','',580),(2219,'$(-1,1)$','',580),(2220,'$1$','',581),(2221,'$e^{\\frac{2\\sqrt 3}{9}$','',581),(2222,'$e^{\\frac{\\sqrt 3}{6}$','',581),(2223,'$2$','',581),(2224,'$e^{\\frac{\\sqrt 3}{9}$','',581),(2225,'$\\frac{5^515^{15}}{20^{20}}$','',582),(2226,'$\\frac{15^{20}}{20^{15}}$','',582),(2227,'$\\frac{5^5+15^{15}}{5^{20}+15^{20}}$','',582),(2228,'$\\frac{20^{15}}{5^5+20^{20}}$','',582),(2229,'$\\frac{5^5+10^{15}}{15^{20}}$','',582),(2230,'$0$','',583),(2231,'$ln(3/4)$','',583),(2232,'$ln(4\\3)$','',583),(2233,'$-1$','',583),(2234,'$ln(1/2)$','',583),(2235,'$-\\sqrt 3$','',584),(2236,'$-2$','',584),(2237,'$0$','',584),(2238,'$-\\sqrt 2$','',584),(2239,'$-1$','',584),(2240,'$50$','',585),(2241,'$25\\sqrt 2$','',585),(2242,'$100$','',585),(2243,'$15\\sqrt 2$','',585),(2244,'$10\\sqrt 2$','',585),(2245,'$15$','',586),(2246,'$2\\sqrt{15}$','',586),(2247,'$15\\sqrt 2$','',586),(2248,'$\\frac{\\sqrt {15}}{2}$','',586),(2249,'$10\\sqrt 2$','',586),(2250,'$180\\times 10^3$','',587),(2251,'$160\\times10^3$','',587),(2252,'$280\\times10^3$','',587),(2253,'$168\\times10^3$','',587),(2254,'$208\\times10^3$','',587),(2255,'$980\\times10^3$','',588),(2256,'$580\\times10^3$','',588),(2257,'$890\\times10^3$','',588),(2258,'$280\\times10^3$','',588),(2259,'$850\\times10^3$','',588),(2260,'$245\\times10^3$','',589),(2261,'$490\\times10^3$','',589),(2262,'$285\\times10^3$','',589),(2263,'$425\\times10^3$','',589),(2264,'$445\\times10^3$','',589),(2265,'$45$','',590),(2266,'$3\\sqrt{15}$','',590),(2267,'$15\\sqrt 3$','',590),(2268,'$\\frac{\\sqrt {15}}{3}$','',590),(2269,'$15$','',590),(2270,'$\\frac{7}{4}$','',599),(2271,'$\\frac{1}{2}$','',599),(2272,'$\\frac{-3}{4}$','',599),(2273,'$0$','',599),(2274,'$\\frac{-1}{2}$','',599),(2275,'$\\frac{-7}{9}$','',600),(2276,'$\\frac{2}{9}$','',600),(2277,'$-1$','',600),(2278,'$0$','',600),(2279,'$\\frac{-9}{2}$','',600),(2280,'$0$','',601),(2281,'$2$','',601),(2282,'$1$','',601),(2283,'$\\frac{1}{2}$','',601),(2284,'$\\frac{-1}{2}$','',601),(2285,'$9(ln2)^3+ln2$','',602),(2286,'$4ln2$','',602),(2287,'$10(ln2)^3+1$','',602),(2288,'$27ln2+1$','',602),(2289,'$3ln8+ln2$','',602),(2290,'$0$','',603),(2291,'$1$','',603),(2292,'$2$','',603),(2293,'$-1$','',603),(2294,'$-2$','',603),(2295,'$-1$','',604),(2296,'$e^{(\\frac{\\pi}{2})^2}$','',604),(2297,'$0$','',604),(2298,'$e^{(\\frac{\\pi}{2})^2}-1$','',604),(2299,'$1-e^{-1}$','',604),(2300,'$-6\\sqrt[3]2$','',605),(2301,'$3\\sqrt[3]3-1$','',605),(2302,'$\\sqrt[3]2-1$','',605),(2303,'$\\sqrt[3]5-1$','',605),(2304,'$5\\sqrt[3]2$','',605),(2305,'$\\frac{33}{20}$','',606),(2306,'$\\frac{23}{10}$','',606),(2307,'$\\frac{13}{5}$','',606),(2308,'$\\frac{43}{10}$','',606),(2309,'$\\frac{23}{20}$','',606),(2310,'$\\frac{\\pi}{3}$','',607),(2311,'$\\pi-1$','',607),(2312,'$\\pi$','',607),(2313,'$0$','',607),(2314,'$\\pi+1$','',607),(2315,'$4$','',608),(2316,'$e-\\frac{1}{2}$','',608),(2317,'$-e+2$','',608),(2318,'$2e$','',608),(2319,'$1$','',608),(2320,'$\\frac{1}{4}$','',609),(2321,'$\\frac{-1}{2}$','',609),(2322,'$0$','',609),(2323,'$1$','',609),(2324,'$\\frac{-1}{8}$','',609),(2325,'$\\frac{-3}{2}$','',610),(2326,'$-1$','',610),(2327,'$0$','',610),(2328,'$1$','',610),(2329,'$\\frac{1}{2}$','',610),(2330,'$1$','',611),(2331,'$\\frac{1}{6}$','',611),(2332,'$\\frac{5}{6}$','',611),(2333,'$2$','',611),(2334,'$\\frac{2}{3}$','',611),(2335,'$\\frac{17}{6}$','',612),(2336,'$\\frac{7}{6}$','',612),(2337,'$\\frac{13}{6}$','',612),(2338,'$\\frac{11}{5}$','',612),(2339,'$\\frac{11}{6}$','',612),(2340,'$22$','',613),(2341,'$12$','',613),(2342,'$\\frac{11}{2}$','',613),(2343,'$15$','',613),(2344,'$\\frac{15}{2}$','',613),(2345,'$\\frac{7}{3}$','',614),(2346,'$\\frac{5}{2}$','',614),(2347,'$\\frac{7}{6}$','',614),(2348,'$\\frac{1}{2}$','',614),(2349,'$\\frac{14}{3}$','',614),(2350,'$\\frac{8\\pi}{3}$','',615),(2351,'$\\frac{\\pi}{6}$','',615),(2352,'$\\frac{3\\pi}{2}$','',615),(2353,'$2\\pi$','',615),(2354,'$\\frac{2\\pi}{3}$','',615),(2355,'$\\frac{307\\pi}{30}$','',616),(2356,'$\\frac{107\\pi}{6}$','',616),(2357,'$\\frac{176\\pi}{15}$','',616),(2358,'$\\frac{47\\pi}{5}$','',616),(2359,'$\\frac{139\\pi}{5}$','',616),(2360,'$\\frac{\\pi}{10}$','',617),(2361,'$\\frac{\\pi}{5}$','',617),(2362,'$\\frac{2\\pi}{5}$','',617),(2363,'$\\frac{\\pi}{20}$','',617),(2364,'$\\frac{2\\pi}{15}$','',617),(2365,'$\\frac{5\\pi}{14}$','',618),(2366,'$\\frac{\\pi}{5}$','',618),(2367,'$\\frac{7\\pi}{10}$','',618),(2368,'$\\frac{2\\pi}{7}$','',618),(2369,'$\\frac{\\pi}{28}$','',618),(2370,'$\\frac{\\pi}{16}$','',619),(2371,'$\\frac{5\\pi}{6}$','',619),(2372,'$\\frac{\\pi}{2}$','',619),(2373,'$\\pi$','',619),(2374,'$\\frac{\\pi}{3}$','',619),(2375,'$\\pi$','',620),(2376,'$\\frac{\\pi}{6}$','',620),(2377,'$\\frac{\\pi}{13}$','',620),(2378,'$3\\pi$','',620),(2379,'$\\frac{\\pi}{3}$','',620),(2380,'$\\frac{81\\pi}{16}$','',621),(2381,'$\\frac{55\\pi}{6}$','',621),(2382,'$\\frac{\\pi}{18}$','',621),(2383,'$6\\pi$','',621),(2384,'$\\frac{31\\pi}{6}$','',621),(2385,'$16\\pi$','',622),(2386,'$\\frac{\\pi}{6}$','',622),(2387,'$\\frac{\\pi}{2}$','',622),(2388,'$4\\pi$','',622),(2389,'$\\frac{8\\pi}{3}$','',622),(2390,'[[code:correctAnswer]]','',623),(2391,'[[code:correctAnswer-1]]','',623),(2392,'[[code:correctAnswer+1]]','',623),(2393,'[[code:correctAnswer-2]]','',623),(2394,'[[code:correctAnswer]], insuficiente.','',624),(2395,'[[code:correctAnswer-0.1]], insuficiente.','',624),(2396,'[[code:correctAnswer+0.1]], insuficiente.','',624),(2397,'[[code:correctAnswer-0.2]], suficiente.','',624),(2398,'-3,8; -1,5 e 4,4','',625),(2399,'-1,5; 3,8 e 4,4','',625),(2400,'-1,5; -3,8 e 2,9','',625),(2401,'1,5; 2,9 e 3,8','',625),(2402,'$[[code:b1]]$','',626),(2403,'$[[code:b2]]$','',626),(2404,'$[[code:b3]]$','',626),(2405,'$[[code:b4]]$','',626),(2406,'1101110,111; 156,7 e 6E,E.','',627),(2407,'1100101,111; 145,7 e 65,E.','',627),(2408,'1100111,101; 147,5 e 6E,A.','',627),(2409,'1100101,011; 157,6 e 6E,5.','',627),(2410,'10111010,11; 272,6 e 186,75.','',628),(2411,'10101011,11; 257,6 e 171,75.','',628),(2412,'10110101,01; 265,4 e 181,25.','',628),(2413,'10101111,11; 276,2 e 187,56.','',628),(2414,'158,1 e 2002,0112.','',629),(2415,'158,1 e 602,0105.','',629),(2416,'134,1 e 2002,0112.','',629),(2417,'134,1 e 602,0105.','',629),(2418,'101000,101; 1000,11011 e 1011,10110.','',630),(2419,'101000,101; 1000,11011 e 1011,10010.','',630),(2420,'101010,101; 1000,11011 e 1011,10110.','',630),(2421,'101001,101; 1001,11011 e 1011,10010.','',630),(2422,'$g=0$ sempre que $f=0$.','',631),(2423,'$f=0$ sempre que $g=0$.','',631),(2424,'$g=0$ sempre que $f=1$.','',631),(2425,'$f=0$ sempre que $g=1$.','',631),(2426,'Uma porta OU, uma E e uma invers\\~ao.','',632),(2427,'Uma porta OU, duas E e uma invers\\~ao.','',632),(2428,'Duas portas E e duas invers\\~oes.','',632),(2429,'Duas portas E e uma invers\\~ao.','',632),(2430,'-675 e -1101.','',633),(2431,'-675 e -1103.','',633),(2432,'-674 e -1101.','',633),(2433,'-674 e -1103.','',633),(2434,'5.','',634),(2435,'8.','',634),(2436,'4.','',634),(2437,'7.','',634),(2438,'Sempre 0 e 1.','',635),(2439,'Sempre 1 e 1.','',635),(2440,'Sempre 0 e 0.','',635),(2441,'Sempre 1 e 0.','',635),(2442,'65,7.','',636),(2443,'72,6.','',636),(2444,'62,8.','',636),(2445,'75,1.','',636),(2446,'11,25 e 2,25.','',637),(2447,'2,25 e 11,25.','',637),(2448,'Ambas 2,25.','',637),(2449,'Ambas 11,25.','',637),(2450,'0,74; 2,06; 3,06 e 4,64.','',638),(2451,'0,74; 3,06; 2,06 e 4,64.','',638),(2452,'4,64; 3,06; 2,06 e 0,74.','',638),(2453,'4,64; 2,06; 3,06 e 0,74.','',638),(2454,'1011,10110; 1000,11011 e 101000,101.','',639),(2455,'1011,10110; 1000,11011 e 101001,101.','',639),(2456,'1011,10110; 1001,11011 e 101000,101.','',639),(2457,'1011,10010; 1000,11011 e 101000,101.','',639),(2458,'1011,10110; 1001,11011 e 101001,101.','',639),(2459,'1011,10010; 1001,11011 e 101000,101.','',639),(2460,'1011,10010; 1000,11011 e 101001,101.','',639),(2461,'1011,10010; 1001,11011 e 101001,101.','',639),(2462,'Uma porta E e uma invers\\~ao.','',640),(2463,'Uma porta OU e uma invers\\~ao.','',640),(2464,'Uma porta E e uma OU.','',640),(2465,'Uma porta E e duas invers\\~oes.','',640),(2466,'Uma porta OU, duas E e uma invers\\~ao.','',640),(2467,'Uma porta OU, uma E e duas invers\\~oes.','',640),(2468,'Tr\\^es portas OU, uma E e duas invers\\~oes.','',640),(2469,'Tr\\^es portas OU, duas E e uma invers\\~ao.','',640),(2470,'65,7 s\\\'imbolos por acesso;','',641),(2471,'67,5 s\\\'imbolos por acesso;','',641),(2472,'56,7 s\\\'imbolos por acesso;','',641),(2473,'75,6 s\\\'imbolos por acesso;','',641),(2474,'76,5 s\\\'imbolos por acesso;','',641),(2475,'96,7 s\\\'imbolos por acesso;','',641),(2476,'88,3 s\\\'imbolos por acesso;','',641),(2477,'83,8 s\\\'imbolos por acesso;','',641),(2478,'00,  01,  10, 110 e 111.','',642),(2479,'00,  01,  10, 101 e 110.','',642),(2480,'00,  01,  10, 101 e 111.','',642),(2481,'00,  01,  10, 100 e 110.','',642),(2482,'00,  01,  11, 110 e 111.','',642),(2483,'00,  01,  11, 101 e 110.','',642),(2484,'00,  01,  11, 101 e 111.','',642),(2485,'00,  01,  11, 100 e 110.','',642),(2486,'2,28.','',643),(2487,'1,50.','',643),(2488,'1,55.','',643),(2489,'3,14.','',643),(2490,'3,41.','',643),(2491,'5,10.','',643),(2492,'8,28','',643),(2493,'8,22','',643),(2494,'tu, ut,  tt,  ti,  if,  fr, ru, uti.','',644),(2495,'tu, ut,  tt, tif, ifr, fru, uti.','',644),(2496,'tu, ut,  tt, tif, fru, uti.','',644),(2497,'tu, ut,  tt, tti, ifr, fru, ruti.','',644),(2498,'tu, ut, utt,  ti, ifr, fru, ruti.','',644),(2499,'tu, ut, utt, tti,  if,  fr, ruti.','',644),(2500,'tu, ut, utt,  ti,  if, ffr, ruti.','',644),(2501,'tu, ut, utt, tti,  if, fru,  uti.','',644),(2502,'3, 2 e 1.','',645),(2503,'4, 3 e 2.','',645),(2504,'3, 2 e 0 (n\\~ao corrige).','',645),(2505,'3, 1 e 1.','',645),(2506,'4, 3 e 1.','',645),(2507,'3, 1 e 0 (n\\~ao corrige).','',645),(2508,'3, 3 e 0 (n\\~ao corrige).','',645),(2509,'4, 4 e 2.','',645),(2510,'4, 2 e 0 (n\\~ao corrige).','',645),(2511,'010110001.','',646),(2512,'010110011.','',646),(2513,'010010001.','',646),(2514,'010110010.','',646),(2515,'010110101.','',646),(2516,'010110111.','',646),(2517,'010010101.','',646),(2518,'010110110.','',646),(2519,'0011001.','',647),(2520,'1011001.','',647),(2521,'0111001.','',647),(2522,'0001001.','',647),(2523,'0010011.','',647),(2524,'1011011.','',647),(2525,'0111011.','',647),(2526,'0001011.','',647),(2527,'0011001.','',648),(2528,'1011001.','',648),(2529,'0111001.','',648),(2530,'0001001.','',648),(2531,'0010001.','',648),(2532,'0011101','',648),(2533,'0011011.','',648),(2534,'0011000.','',648),(2535,'Potência é dada pela multiplicação da força e a velocidade.','',649),(2536,'Potência é dada pela multiplicação da força e o deslocamento.','',649),(2537,'Potência é dada pela divisão da força pela velocidade.','',649),(2538,'Potência é dada pela divisão do trabalho e a velocidade.','',649),(2539,'Nenhuma das respostas.','',649),(2540,'Pode ser obtida do produto entre o momento de inércia e a velocidade angular ao quadrado dividido por 2.','',650),(2541,'Nenhuma das respostas.','',650),(2542,'Pode ser obtida do produto entre o momento de potência e a velocidade angular ao quadrado dividido por 2.','',650),(2543,'Pode ser obtida do produto entre o trabalho rotacional e a velocidade.','',650),(2544,'Pode ser obtida do produto entre o torque e a velocidade angular.','',650),(2545,'A potência de rotação é dada pelo produto entre o torque e a velocidade angular.','',651),(2546,'Nenhuma das respostas.','',651),(2547,'A potência de rotação é dada pela divisão entre o torque e a velocidade angular.','',651),(2548,'A potência de rotação é dada pelo produto entre o momento de inércia e a velocidade angular','',651),(2549,'A potência de rotação é dada pelo produto entre torque e o momento de inércia.   %Grupo 2','',651),(2550,'O vapor se expande na turbina fazendo uma força resultante transversal nas pás rotativas que giram o eixo e geram potência.','',652),(2551,'O vapor se comprime na turbina fazendo uma força resultante transversal nas pás rotativas que giram o eixo e geram potência.','',652),(2552,'O vapor se expande na turbina fazendo uma força paralela ao eixo que gira e gera potência.','',652),(2553,'O vapor se comprime na turbina fazendo uma força paralela ao eixo que gira e gera potência.','',652),(2554,'Nenhuma das respostas.','',652),(2555,'A potência desta turbina é proporcional a vazão volumétrica que passa por ela e a energia potencial gravitacional por unidade de massa proporcionada pela barragem.','',653),(2556,'A potência desta turbina é dada pelo produto entre a densidade da água, velocidade angular, aceleração da gravidade e altura da barragem.','',653),(2557,'A potência desta turbina é dada pelo produto entre a densidade da água, aceleração da gravidade, vazão mássica e altura da barragem.','',653),(2558,'A potência desta turbina é proporcional a vazão mássica e a densidade da água e inversamente proporcional a altura da barragem e a aceleração da gravidade.','',653),(2559,'Nenhuma das respostas.','',653),(2560,'A potência eólica é proporcional ao cubo da velocidade do vento.','',654),(2561,'A potência eólica é proporcional ao cubo do raio da pá do rotor eólico.','',654),(2562,'A potência eólica é proporcional ao quadrado da velocidade do vento.','',654),(2563,'A potência eólica é proporcional ao quadrado da densidade do ar.','',654),(2564,'Nenhuma das respostas.   %Grupo 3','',654),(2565,'O trabalho elétrico é igual a carga elétrica multiplicada pela diferença de potencial elétrico.','',655),(2566,'A potência elétrica é igual a carga elétrica multiplicada pela diferença de potencial elétrico.','',655),(2567,'Na geração de potência elétrica acopla-se o eixo da turbina elétrica ao gerador fotovoltaico.','',655),(2568,'A lei de Faraday diz que a força eletromotriz é proporcional a taxa de variação do fluxo do campo elétrico.','',655),(2569,'A força eletromotriz das usinas hidroelétricas é baseada na conversão de energia elétrica em energia mecânica.','',655),(2570,'Os sistemas de potência térmicos são constituídos de 4 equipamentos principais: caldeira, reator, gerador elétrico e bomba.','',656),(2571,'Os sistemas de potência térmicos são constituídos de 4 equipamentos principais: caldeira, turbina, condensador e bomba.','',656),(2572,'No projeto de usinas térmicas considera-se regime permanente de escoamento do fluido de trabalho. Nestas condições, a vazão mássica que entra no volume de controle é igual a que sai.','',656),(2573,'A energia potencial gravitacional por unidade de massa é dada pelo produto da aceleração da gravidade e altura.','',656),(2574,'A energia cinética por unidade de massa é dada pela velocidade do fluido ao quadrado dividida por 2.','',656),(2575,'1457,8 MW','',657),(2576,'1874,3 MW','',657),(2577,'2915,5 MW','',657),(2578,'2205,0 MW','',657),(2579,'3430,0 MW','',657),(2580,'1874,3 MW','',658),(2581,'1457,8 MW','',658),(2582,'2915,5 MW','',658),(2583,'2205,0 MW','',658),(2584,'3430,0 MW','',658),(2585,'2915,5 MW','',659),(2586,'2205,0 MW','',659),(2587,'3430,0 MW','',659),(2588,'1457,8 MW','',659),(2589,'1874,3 MW  %Grupo 8','',659),(2590,'0,79 MW e 190 aerogeradores','',660),(2591,'1,22 MW e 123 aerogeradores','',660),(2592,'1,77 MW e 85 aerogeradores','',660),(2593,'2,10 MW e 71 aerogeradores','',660),(2594,'1,48 MW e 102 aerogeradores','',660),(2595,'1,22 MW e 123 aerogeradores','',661),(2596,'1,77 MW e 85 aerogeradores','',661),(2597,'0,79 MW e 190 aerogeradores','',661),(2598,'2,10 MW e 71 aerogeradores','',661),(2599,'1,48 MW e 102 aerogeradores','',661),(2600,'1,77 MW e 85 aerogeradores','',662),(2601,'2,10 MW e 71 aerogeradores','',662),(2602,'1,48 MW e 102 aerogeradores','',662),(2603,'0,79 MW e 190 aerogeradores','',662),(2604,'1,22 MW e 123 aerogeradores  % Grupo 9','',662),(2605,'960 W e 3,13 horas','',663),(2606,'41,7 W e 720 horas','',663),(2607,'25 W e 1200 horas','',663),(2608,'29,4 W e 1020 horas','',663),(2609,'50 W e 600 horas','',663),(2610,'41,7 W e 720 horas','',664),(2611,'25 W e 1200 horas','',664),(2612,'960 W e 3,13 horas','',664),(2613,'29,4 W e 1020 horas','',664),(2614,'50 W e 600 horas','',664),(2615,'25 W e 1200 horas','',665),(2616,'29,4 W e 1020 horas','',665),(2617,'50 W e 600 horas','',665),(2618,'960 W e 3,13 horas','',665),(2619,'41,7 W e 720 horas  % Grupo 10','',665),(2620,'83,3 A','',666),(2621,'69,4 A','',666),(2622,'59,5 A','',666),(2623,'52,1 A','',666),(2624,'13,9 A','',666),(2625,'69,4 A','',667),(2626,'59,5 A','',667),(2627,'83,3 A','',667),(2628,'52,1 A','',667),(2629,'13,9 A','',667),(2630,'59,5 A','',668),(2631,'52,1 A','',668),(2632,'83,3 A','',668),(2633,'69,4 A','',668),(2634,'13,9 A','',668),(2635,'Na geração fotovoltaica os elétrons liberados são levados para a banda de condução em semicondutores e produzem corrente elétrica.','',669),(2636,'A radiação solar incidindo sobre a Terra converte-se na geração fotovoltaica em energia radiante.','',669),(2637,'Na geração fotovoltaica os elétrons liberados pela absorção da radiação solar são levados para a banda de condução de materiais condutores elétricos e produzem diferença de potencial magnético.','',669),(2638,'Na geração fotovoltaica os elétrons liberados são levados para a banda de condução em semicondutores e produzem taxa de variação do fluxo magnético.','',669),(2639,'Nenhuma das respostas.  %Grupo 04','',669),(2640,'Os sistemas de potência térmicos são constituídos de 4 equipamentos principais: caldeira, reator, gerador elétrico e bomba.','',670),(2641,'Os sistemas de potência térmicos são constituídos de 4 equipamentos principais: caldeira, turbina, condensador e bomba.','',670),(2642,'No projeto de usinas térmicas considera-se regime permanente de escoamento do fluido de trabalho. Nestas condições, a vazão mássica que entra no volume de controle é igual a que sai.','',670),(2643,'A energia potencial gravitacional por unidade de massa é dada pelo produto da aceleração da gravidade e altura.','',670),(2644,'A energia cinética por unidade de massa é dada pela velocidade do fluido ao quadrado dividida por 2.','',670),(2645,'Uma das formas de trabalho é aquela realizada pela pressão do fluido empurrando uma massa de fluido a sua frente. Esta forma é chamada de trabalho no volume de controle.','',671),(2646,'Uma das formas de trabalho é aquela realizada na rotação de eixo da turbina (trabalho no volume de controle).','',671),(2647,'O trabalho de escoamento por unidade de massa é dado pelo produto da pressão e volume específico do fluido.','',671),(2648,'O fluido sob pressão tem capacidade de realizar trabalho e pode ser interpretado como contendo energia de pressão.','',671),(2649,'A entalpia é a energia por unidade de massa composta por energia térmica e energia de pressão.   %Grupo 5','',671),(2650,'Em uma caldeira ou reator nuclear calor é transferido ao fluido. A componente da entalpia fortemente aumentada é a energia de pressão.','',672),(2651,'Em uma turbina trabalho é realizado sobre as pás da turbina. A componente da entalpia fortemente reduzida é a energia de pressão.','',672),(2652,'Em um condensador calor é removido do fluido de trabalho. A componente da entalpia fortemente reduzida é a energia térmica.','',672),(2653,'Em uma bomba trabalho é transferido ao fluido. A componente da entalpia fortemente aumentada é a energia de pressão.','',672),(2654,'O trabalho de escoamento por unidade de massa é dado pelo produto da pressão e volume específico do fluido.','',672),(2655,'Em geral, nos sistemas térmicos gasosos considera-se a energia interna do sistema como sendo a quantidade de energia potencial gravitacional nele contida.','',673),(2656,'Um gás ideal é modelado como tendo elementos constituintes pontos materiais dotados de energia cinética translacional e que não interagem uns com os outros a não ser por choque entre eles.','',673),(2657,'A primeira lei da termodinâmica pode ser descrita pela equação $\\Delta U = \\Delta Q - W$.','',673),(2658,'A segunda lei da termodinâmica está relacionada ao fato de ser impossível a construção de um dispositivo que, sem intervenção do meio exterior, consiga transferir calor de um corpo para outro de temperatura mais elevada.','',673),(2659,'A segunda lei procura descrever algo que não ocorre. A lei indica que nunca se observou calor ser transferido espontaneamente do corpo mais frio para o mais quente.  %Grupo 6','',673),(2660,'A terceira lei da termodinâmica diz ser possível reduzir a temperatura de um sistema até 0 K. A temperatura de 0 K em um sistema é atingível.','',674),(2661,'A energia térmica está associada a agitação ou movimento das moléculas dos gases. Consequentemente podemos concluir que a energia térmica é a forma como a energia cinética de um gás, por exemplo, se manifesta.','',674),(2662,'Ciclos térmicos podem produzir movimentos por meio de movimentos reciprocantes.','',674),(2663,'Em turbinas a gás o ar é comprimido por meio de uma bomba e levado até a câmara de combustão. A câmara também recebe o combustível gasoso (predominantemente CH4) e a mistura é queimada. A temperatura da nova mistura gasosa aumenta e o gás se expande possibilitando girar a turbina e realizar trabalho.','',674),(2664,'Nenhuma das resposta.','',674),(2665,'Em um ciclo de Rankine o fluido realiza trabalho sobre a bomba e reduz sua entalpia.','',675),(2666,'Em motores de veículos, a  mistura de ar e combustível é queimada em um sistema cilindro-pistão e aproveita-se a energia mecânica produzida pela expansão do gás aquecido. O deslocamento do veículo é conseguido via a transformação do movimento de vaivém do pistão (movimento reciprocante) em movimento linear.','',675),(2667,'O vapor é utilizado em máquinas térmicas devido a expansão volumétrica ser muito grande  na transformação de fase líquida para gasosa (vapor). O vapor produzido atinge altas pressões que permitem a realização de trabalho na turbina.','',675),(2668,'No condensador ocorre transferência de calor do fluido de trabalho que se encontra na forma de vapor de baixa pressão. Este vapor muda de fase e se transforma em líquido a baixa pressão.','',675),(2669,'No reator nuclear ocorre a geração de calor por meio da reações de fissão. Este calor é transferido para o fluido que aumenta sua entalpia. A componente da entalpia que aumenta no fluido é a energia térmica.   %Grupo 7','',675),(2670,'[[code:correctAnswer]]','',676),(2671,'[[code:createWrongAnswers([4,10])]]','',676),(2672,'[[code:correctAnswer]]','',677),(2673,'[[code:correctAnswer+1]]','',677),(2674,'[[code:correctAnswer+2]]','',677),(2675,'[[code:correctAnswer-2]]','',677),(2676,'[[code:correctAnswer-3]]','',677),(2677,'Charles Babbage, que inventou a máquina analítica mecânica','',678),(2678,'Ada Augusta Lovelace, que inventou os primeiros comandos para uma calculadora programável','',678),(2679,'Jacquard, que inventou a máquina de tecer programável','',678),(2680,'Hermann Hollelith, que inventou a máquina de tabulação programável','',678),(2681,'Blaise Pascal, que inventou a primeira calculadora mecânica','',678),(2682,'Hermann Hollelith, que inventou a máquina de tabulação programável','',679),(2683,'Charles Babbage, que inventou a máquina analítica mecânica','',679),(2684,'Ada Augusta Lovelace, que inventou os primeiros comandos para uma calculadora programável','',679),(2685,'Jacquard, que inventou a máquina de tecer programável','',679),(2686,'Blaise Pascal, que inventou a primeira calculadora mecânica','',679),(2687,'Jacquard, que inventou a máquina de tecer programável','',680),(2688,'Hermann Hollelith, que inventou a máquina de tabulação programável','',680),(2689,'Charles Babbage, que inventou a máquina analítica mecânica','',680),(2690,'Ada Augusta Lovelace, que inventou os primeiros comandos para uma calculadora programável','',680),(2691,'Blaise Pascal, que inventou a primeira calculadora mecânica','',680),(2692,'Um projeto pode criar um produto, que pode ser um item final ou um item componente de outro item ou uma capacidade de realizar um serviço, como funções de negócios que dão suporte à produção ou à distribuição, ou ainda um resultado, como um documento de pesquisa.','',681),(2693,'Cada projeto cria um produto, serviço ou resultado que pode servir a diferentes finalidades. Isso porque sempre são criados elementos repetitivos que estão presentes em algumas entregas do projeto.','',681),(2694,'Um projeto possui um início e um término definidos. Entretanto o término não será alcançado quando se concluir que os objetivos não serão ou não poderão ser atingidos e o projeto for encerrado, ou quando o mesmo não for mais necessário.','',681),(2695,'Temporário, significa necessariamente de curta duração. Além disso, geralmente o termo temporário se aplica ao produto, serviço ou resultado criado pelo projeto, embora alguns projetos possam criar um resultado duradouro.','',681),(2696,'As tarefas de um projeto nunca são novas para a equipe de desenvolvimento, por isso o planejamento é mais rápido e requer menos dedicação do que outro trabalho da empresa. Além disso, os projetos são empreendidos apenas na área de TI, embora possam envolver múltiplas unidades organizacionais.','',681),(2697,'Na organização matricial balanceada de uma estrutura organizacional de projeto, a combinação entre a organização funcional e por projeto não oferece, ao gerente de projeto, autoridade total no controle do projeto e de seus recursos financeiros.','',682),(2698,'O ciclo de vida de um projeto refere-se às fases e atividades necessárias para se executar um projeto específico, em uma organização, sem definir, no entanto, prazo de entrega ou equipe envolvida.','',682),(2699,'O término ou início de uma nova fase de um projeto não deve estar atrelado à entrega de um produto ou serviço, pois é possível se ter diversas fases que acontecem paralelamente com interdependência de resultados, o que poderia afetar a realização completa das atividades contidas na fase.','',682),(2700,'O custo das mudanças no início de um projeto é sempre elevado, por isso, durante a execução do projeto, esse custo deve ser aliviado em função de serem prováveis as mudanças de escopo, prazo e recursos em função de inúmeras variáveis que podem surgir no percurso do projeto.','',682),(2701,'Como autoridade máxima do gerenciamento de projetos em uma organização, o PMO deve garantir que as políticas que ele implementar serão seguidas por todos, para tanto, ele deve estar situado em uma estrutura organizacional do tipo funcional.','',682),(2702,'Qualidade Total.','',683),(2703,'Reengenharia.','',683),(2704,'Quarta Onda.','',683),(2705,'Pattern Wave.','',683),(2706,'Empowerment.','',683),(2707,'Testes ajudam na modelagem do projeto de software guiando o desenvolvedor no desenho das classes.','',684),(2708,'Após a implementação do projeto de software, os componentes de testes devem ser descartados porque não se tornarão parte da manutenção do projeto.','',684),(2709,'Não há necessidade de refatoração de código, uma vez que essa técnica de desenvolvimento pressupõe que o código será produzido em padrões aceitáveis.','',684),(2710,'O desenvolvedor precisa escrever casos de teste automatizados que vão além das fronteiras do projeto de software para validar o comportamento esperado em processos externos.','',684),(2711,'Testes de unidade automatizados que definam requisitos em código são criados somente após escrever o código da aplicação.','',684),(2712,'Verificar se, todas as chamadas de função e métodos, têm o número correto de parâmetros.','',685),(2713,'Verificar se todas as constantes foram nomeadas.','',685),(2714,'Verificar se todas as variáveis de entrada são usadas.','',685),(2715,'Verificar se, para cada instrução condicional, a condição está correta.','',685),(2716,'Verificar se cada loop do código irá terminar.','',685),(2717,'O Scrum não reconhece títulos para os integrantes da Equipe de Desenvolvimento que não seja o Desenvolvedor, independentemente do trabalho que está sendo realizado pela pessoa. Não há exceções para esta regra. II. Uma sprint pode ser cancelada antes do seu time-box terminar. Somente o Product Owner tem a autoridade para cancelar a sprint.','',686),(2718,'Consiste de profissionais que realizam o trabalho de entregar uma versão utilizável que potencialmente incrementa o produto \"pronto\" ao final de cada sprint. II. É um time-box de uma semana ou menos, durante o qual uma versão incremental potencialmente utilizável do produto é criada.','',686),(2719,'São auto-organizadas. Somente o Scrum Master pode dizer à Equipe de Desenvolvimento como transformar o produto em incrementos de funcionalidades potencialmente utilizáveis. II. São compostas por uma reunião de planejamento da sprint, o trabalho de desenvolvimento, uma revisão da sprint e a retrospectiva da sprint.','',686),(2720,'Com menos de nove integrantes diminui a interação e resulta em um menor ganho de produtividade. Havendo mais de doze integrantes é exigida muita coordenação. II. Cada sprint tem a definição do que é para ser construído, um plano projetado e flexível que irá guiar a construção, o trabalho e o resultado do produto.','',686),(2721,'Pode conter sub-equipes dedicadas a domínios específicos de conhecimento, tais como teste ou análise de negócios. II. Permitem previsibilidade que garante a inspeção e adaptação do progresso em direção à meta pelo menos a cada quinzena corrida.','',686),(2722,'Indisponibilidade de recursos financeiros pode ser considerada uma fraqueza da empresa.','',687),(2723,'A localização estratégica da empresa pode ser considerada uma oportunidade para a empresa.','',687),(2724,'A existência de poucos concorrentes na região pode ser considerada uma força da empresa.','',687),(2725,'Impostos elevados e exigências legais rigorosas podem ser considerados fraquezas da empresa.','',687),(2726,'Custos de manutenção elevados podem ser considerados uma ameaça para a empresa.','',687),(2727,'Consistency, Availability, Partition tolerance.','',688),(2728,'Concurrency, Access, Time','',688),(2729,'Consistency, Atomicity, Parallel processing.','',688),(2730,'Concurrency, Availability, Pear processing.','',688),(2731,'Control, Atomicity, Partition network','',688),(2732,'Análise de Monte Carlo.','',689),(2733,'Análise de listas de verificação.','',689),(2734,'Revisão de documentação.','',689),(2735,'Análise SWOT.','',689),(2736,'Opinião especializada.','',689),(2737,'Gerenciamento de riscos de software consiste em avaliar e controlar os riscos, que afetam o projeto, processo ou produto de software.','',690),(2738,'O gerenciamento de riscos de software não envolve os riscos ambientais, que possam afetar o projeto.','',690),(2739,'O controle de riscos é feito pelos planos de casos de uso.','',690),(2740,'O controle de riscos é realizado por membros externos ao projeto.','',690),(2741,'O gerenciamento de riscos de software consiste, apenas, no gerenciamento dos Testes de Caixa Branca do Software.','',690),(2742,'Estratégia da força bruta, estratégia do rastreamento e estratégia da eliminação da causa.','',691),(2743,'Estratégia da força bruta, estratégia do esforço e estratégia ascendente.','',691),(2744,'Estratégia do rastreamento, estratégia de integração e estratégia ascendente.','',691),(2745,'Estratégia do esforço, estratégia de integração e estratégia da eliminação da causa.','',691),(2746,'Estratégia do rastreamento, estratégia de integração e estratégia da eliminação da causa.','',691),(2747,'Paradoxo do pesticida - Teste antecipado - Testes dependem do contexto.','',692),(2748,'Testes apontam a presença de falhas - Testes dependem do contexto - Testes apontam os custos.','',692),(2749,'Depende dos requisitos -Testes apontam a presença de falhas - Paradoxo do pesticida.','',692),(2750,'Teste antecipado - Testes apontam os custos - Ausência de erros é uma ilusão.','',692),(2751,'Ausência de erros é uma ilusão - Agrupamento de defeitos - Dependem dos requisitos.','',692),(2752,'Visa testar as falhas decorrentes da integração dos módulos do sistema.','',693),(2753,'Tem como objetivo explorar a menor unidade de um projeto.','',693),(2754,'Visa descobrir falhas por meio da utilização do mesmo.','',693),(2755,'Teste realizado pelos usuários finais do software.','',693),(2756,'Tem a mesma aplicação do teste de aceitação','',693),(2757,'A validação, atividade fundamental para a garantia da qualidade de um software, deve ser bem planejada e, durante o desenvolvimento do software, executada com eficácia.','',694),(2758,'No desenvolvimento de um produto de software, as atividades de validação são normalmente executadas somente sobre o produto final, em ambiente operacional.','',694),(2759,'Somente após a codificação de um componente ou de um produto de software é possível validar os requisitos identificados para esse componente ou produto.','',694),(2760,'Verificação consiste no processo de exame de um produto para a determinação de sua conformidade com as necessidades do usuário, e validação, no exame do resultado de uma atividade para a determinação de sua conformidade com os requisitos estabelecidos para essa atividade.','',694),(2761,'Revisão por pares é uma técnica de validação que demonstra que o produto correto está sendo desenvolvido.','',694),(2762,'Protocolo de controle de transferência e endereçamento;','',695),(2763,'Sistema de verificação de erros para protocolos de transmissão;','',695),(2764,'Protocolo que não é usado na internet;','',695),(2765,'Protocolo de transmissão de dados síncrono;','',695),(2766,'Modelo descritivo do roteamento de dados para a Internet.','',695),(2767,'linguagem utilizada para se efetivar a comunicação;','',696),(2768,'hardware que permite o acesso físico do micro à rede;','',696),(2769,'senha que viabiliza a conexão;','',696),(2770,'password comum a todos os micros conectados à rede;','',696),(2771,'software que permite a integração dos equipamentos à rede;','',696),(2772,'IPconfig','',697),(2773,'Netstat','',697),(2774,'Arp','',697),(2775,'Nmap','',697),(2776,'Qualquer uma das outras alternativas','',697),(2777,'ARP','',698),(2778,'HTTP','',698),(2779,'Reverse-ARP','',698),(2780,'PING','',698),(2781,'DNS','',698),(2782,'4, 3, 7, 2, 1, 5, 6','',699),(2783,'1, 3, 5, 4, 5, 2, 6','',699),(2784,'4, 3, 7, 1, 5, 2, 6','',699),(2785,'7, 5, 1, 4, 6, 2, 3','',699),(2786,'4, 3, 7, 1, 5, 6, 2','',699),(2787,'Um possível caminho para um destino.','',700),(2788,'O melhor caminho até um destino conhecido.','',700),(2789,'O melhor caminho até um destino desconhecido.','',700),(2790,'Um relatório sobre a conexão de dois computadores.','',700),(2791,'O tempo que um pacote demora a chegar de uma origem a um destino.','',700),(2792,'254','',701),(2793,'127','',701),(2794,'508','',701),(2795,'255 x 255 x 255 = 16581375','',701),(2796,'Ilimitados','',701),(2797,'Simple Mail Transfer Protocol (SMTP)','',702),(2798,'Internet Message Access Protocol (IMAP)','',702),(2799,'Post Office Protocol (POP)','',702),(2800,'WebMail','',702),(2801,'Todos as anteriores','',702),(2802,'Endereço IP de origem, endereço IP de destino, protocolo(s) de roteamento.','',703),(2803,'Endereço MAC de origem, endereço MAC de destino, protocolo(s) de roteamento.','',703),(2804,'Protocolo(s) de roteamento.','',703),(2805,'Endereço IP de origem e destino.','',703),(2806,'Endereço MAC de origem e destino.','',703),(2807,'32, 128','',704),(2808,'32, 64','',704),(2809,'64, 128','',704),(2810,'8, 32','',704),(2811,'32, 36','',704),(2812,'PAN, LAN, WAN, IAN','',705),(2813,'LAN, WAN, PAN, IAN','',705),(2814,'LAN, PAN, IAN, WAN','',705),(2815,'PAN, LAN, IAN, WAN','',705),(2816,'LAN, PAN, WAN, YAN','',705),(2817,'Servem para definir os melhores caminhos para as redes distintas ao roteador.','',706),(2818,'Servem para definir caminhos estáticos para outras redes.','',706),(2819,'Servem para definir caminhos dinâmicos para outras redes.','',706),(2820,'Server para comunicas duas redes distintas.','',706),(2821,'Podem ser usados em comutadores de pacotes.','',706),(2822,'IP em MAC, camada 2.','',707),(2823,'IP em MAC, camada 6.','',707),(2824,'MAC em IP, camada 2.','',707),(2825,'DNS em IP, camada 3.','',707),(2826,'IP em DNS, camada 3.','',707),(2827,'11, 16, 3','',708),(2828,'11, 12, 13','',708),(2829,'10, 11, 12','',708),(2830,'10, 21, 3','',708),(2831,'12, 11, 13','',708),(2832,'Todas as alternativas.','',709),(2833,'Sequenciamento.','',709),(2834,'Controle de erro.','',709),(2835,'Controle de fluxo.','',709),(2836,'Multiplexação de mensagens.','',709),(2837,'Estrela, LAN','',710),(2838,'WAN, Star','',710),(2839,'Barramento, LAN','',710),(2840,'Estrela, WAN','',710),(2841,'WAN, LAN','',710),(2842,'Todas as alternativas.','',711),(2843,'A função de cada camada deve ser escolhida tendo em vista a definição de protocolos padronizados internacionalmente.','',711),(2844,'Os limites de camadas devem ser escolhidos para minimizar o fluxo de informações pelas interfaces.','',711),(2845,'Uma camada deve ser criada onde houver necessidade de outro grau de abstração.','',711),(2846,'O número de camadas deve ser grande o bastante para que funções distintas não precisem ser desnecessariamente colocadas na mesma camada e pequeno o suficiente para que a arquitetura não se torne difícil de controlar.','',711),(2847,'I, II e IV','',712),(2848,'I e II','',712),(2849,'I e III','',712),(2850,'I E IV','',712),(2851,'Todas as alternativas.','',712),(2852,'URL','',713),(2853,'Location','',713),(2854,'HTTP','',713),(2855,'IP','',713),(2856,'DNS','',713),(2857,'criar pontos controlados por autorizações informais;','',714),(2858,'a implantação de defesas em ambientes críticos;','',714),(2859,'que não haja acesso a ambientes controlados;','',714),(2860,'que eventuais atacantes cheguem muito perto das ameaças desconhecidas;','',714),(2861,'restringir acesso a ambientes controlados.','',714),(2862,'\"Bisbilhotar\" os pacotes de dados que passam pela placa de rede;','',715),(2863,'Capturar, exibir e modificar pacotes de dados que trafegam na Internet;','',715),(2864,'Proteger os pacotes de dados que passam pela placa de rede;','',715),(2865,'Observar os pacotes originados e destinados a máquina local;','',715),(2866,'Capturar e modificar informações que transitam pela rede local.','',715),(2867,'Os pacotes têm um tempo de vida para atingir o destino antes de morrer;','',716),(2868,'Os pacotes são sempre roteados até encontrar o destino;','',716),(2869,'Pacotes não dirigidos ao destino são sempre ignorados pelo mesmo;','',716),(2870,'Pacotes não dirigidos ao destino são sempre descartados pelo mesmo;','',716),(2871,'Há apenas uma rota entre a origem e o destino dos pacotes.	  %QE::internet:: Se uma conexão de 50Mbps opera a 50% de eficiência com \\em{overheading} de 10$\\%$, %quanto tempo aproximadamente demoraria para transferir um arquivo de 450MBytes?\n %A: 2 minutos	\n %A: 10 segundos	    \n %A: 20 segundos	\n %A: 1 minuto	 \n %A: 10 minutos','',716),(2872,'Um link para o site da UFABC, com o titulo impresso na página \\url{http:www.ita.br} e com informação de mouse over com o site da USP. Abrindo em uma nova janela.','',717),(2873,'Um link para o site da USP, com o titulo impresso na página \\url{http://www.ita.br} e com informação de mouse over com o site da UFABA: Abrindo em uma nova janela.','',717),(2874,'Um link para o site da UFABC, com o titulo impresso na página \\url{http://www.ita.br} e com informação de mouse over com o site da UFABA: Abrindo na mesma janela','',717),(2875,'Um link para o site da ITA, com o titulo impresso na página \\url{http://www.usp.br} e com informação de mouse over com o site da UFABA: Abrindo em uma nova janela.','',717),(2876,'Um link para o site da UFABC, com o titulo impresso na página \\url{http://www.ita.br} e com informação de mouse over com o site da USP. Abrindo em na mesma janela.','',717),(2877,'As classes Cartão de Crédito e Boleto são subclasses da classe base Pagamento;','',718),(2878,'Para uma única instância de Pedido podem haver múltiplas instâncias da classe Pagamento;','',718),(2879,'Cada instância de Pedido pode estar associada a várias instâncias de Consumidor;','',718),(2880,'Cada instância de Pedido deve possuir uma única instância de Produto;','',718),(2881,'Todas as alternativas são falsas;','',718),(2882,'É um diagrama de classes;','',719),(2883,'É um diagrama de casos de uso;','',719),(2884,'É um diagrama de sequência;','',719),(2885,'É um diagrama de testes;','',719),(2886,'É um diagrama de implantação ;','',719),(2887,'O usuário deve ser capaz de realizar buscas pelo nome e pelo tipo de produto','',720),(2888,'O sistema deve estar disponível durante 99,9\\% do tempo','',720),(2889,'O sistema deve ter capacidade de atender 10.000 usuários simultâneos','',720),(2890,'O tempo de resposta às requisições dos usuários dever de no máximo 500ms.','',720),(2891,'A comunicação entre os componentes distribuídos do sistemas devem ser criptografadas','',720),(2892,'No modelo incremental, existe uma sequência de atividades, similares ao modelo em cascata, que são executadas múltiplas vezes, de modo que o projeto é dividido em pequenos incrementos;','',721),(2893,'O modelo em cascata é dividido em um conjunto de atividades, que podem ser executadas em qualquer ordem;','',721),(2894,'No modelo baseado em componentes, o desenvolvedor precisa implementar todos os componentes que serão utilizados pelo sistema;','',721),(2895,'O modelo espiral é  dividido em atividades, como a de projeto. Sua vantagem é cada fase é executada uma única vez;','',721),(2896,'No modelo em cascata, o objetivo é produzir um protótipo funcional do software logo no início do processo, de modo que o cliente possa testar este protótipo e sugerir melhorias;','',721),(2897,'Uma organização de repositório central, onde o banco de dados atuaria como um repositório central dos dados da loja e dos produtos, facilitando o controle sobre estes dados;','',722),(2898,'Uma organização cliente-servidor, onde o sistema de banco de dados ficaria como cliente e os vários módulos do sistema seriam os servidores, aumentando sua flexibilidade;','',722),(2899,'Uma organização cliente-servidor, onde o sistema de banco de dados ficaria como um servidor central e os demais módulos, como o de vendas, como servidores secundários, o que melhoria o desempenho do banco de dados;','',722),(2900,'Uma organização em camadas, onde o banco de dados ficaria na camada inferior do sistema e os demais módulos em camadas superiores, o que melhoraria o desempenho da rede de dados;','',722),(2901,'Uma organização em camadas, onde o banco de dados ficaria na camada superior do sistemas e os demais módulos em camadas inferiores, o que melhoraria o desempenho da rede de dados;','',722),(2902,'Na programação orientada a objetos é possível criar apenas uma instância (objeto) de cada classe (tipo). O uso do conceito de herança reduz esse problema, pois nesse caso é possível criar uma instância de cada subclasse derivada.','',723),(2903,'Ao utilizar herança, podemos definir uma classe base e uma ou mais subclasses derivadas, que herdam o comportamento e a interface da classe base, mas podem modificar parte de sua funcionalidade;','',723),(2904,'Um modo de alterar a funcionalidade de uma classe derivada é adicionando novos métodos, que não são parte da classe base, mas permitem realizar operações específicas na subclasse derivada;','',723),(2905,'Um modo de alterar a funcionalidade da subclasse derivada é reimplementando um ou mais métodos que a classe de base já implemente. Neste caso, a interface das classes pai e filhos são iguais, mas seu comportamento é diferente;','',723),(2906,'Na composição, temos uma classe A que contém objetos de outras classes. Esta composição facilita o reuso de código, pois uma mesma classe B pode ser utilizada como parte de múltiplas classes;','',723),(2907,'O padrão Singleton permite garantir que uma única instância de uma classe A será criada. Neste padrão, a própria classe A é responsável por garantir que uma única instância dela será criada ;','',724),(2908,'Os padrões de projeto fornecem soluções arquiteturais para projetos de software. Sua desvantagem é que as soluções apresentadas são aplicáveis apenas a softwares específicos, não podendo ser reutilizadas em outros softwares;','',724),(2909,'O objetivo dos padrões de software é permitir a criação de componentes padrões, que podem ser distribuídos como bibliotecas de componentes para uso por outros desenvolvedores;','',724),(2910,'Ao usar o padrão de projeto Adaptador em um sistema distribuído, criamos um adaptador que é responsável por cuidar de todos os detalhes da transmissão de dados pela rede e pela criptografia destes dados;','',724),(2911,'O padrão Singleton é um padrão estrutural, pois ele define como o conjunto de classes e objetos de uma aplicação serão estruturados.','',724),(2912,'Em um modelo cliente-servidor, os clientes são sempre máquinas simples que possuem apenas a interface com o usuário, enquanto todo o processamento da requisição é realizado nos servidores;','',725),(2913,'As arquiteturas orientadas a serviço são baseadas no conceito de serviços Web (Web services), onde empresas fornecem serviços que podem ser utilizados por sistemas de outras empresas.','',725),(2914,'O padrão Broker utiliza um componente denominado Broker (negociador), que realiza a intermediação da comunicação entre 2 componentes, gerenciando os detalhes da comunicação;','',725),(2915,'O padrão publisher/subscriber permite o desenvolvimento de sistemas composto por módulos, onde as notificações geradas por um módulo são enviadas apenas para os módulos interessados naquela notificação;','',725),(2916,'O Java RMI é um exemplo de arquitetura de objetos distribuídos, onde os objetos Java podem ser alocados em máquias distribuídas de modo quase transparente ao programador.','',725),(2917,'Apenas a alternativa III;','',726),(2918,'Apenas a alternativa I;','',726),(2919,'Apenas a alternativa II;','',726),(2920,'As alternativas I e II;','',726),(2921,'As alternativas II e III;','',726),(2922,'Propriedade do código, onde cada desenvolvedor é dono de uma parte do código e, para garantir sua qualidade, é o único que pode modificá-lo.','',727),(2923,'Simplicidade, onde recomenda-se utilizar sempre a solução mais simples que resolva o problema proposto;','',727),(2924,'Comunicação, que inclui a comunicação entre desenvolvedores, de cliente para os desenvolvedores e dos desenvolvedores para o cliente;','',727),(2925,'Uso extensivo de testes, especialmente testes unitários, de modo a garantir a qualidade do código;','',727),(2926,'Coragem, para descartar e reescrever trechos de código ruim e para realizar refatorações;','',727),(2927,'1-Requisitos,  2-Projeto, 3-Implementação, 4-Verificação e 5- Manutenção','',728),(2928,'1-Avaliação, 2-Desempenho, 3-Requisição, 4-Verificação e 5-Manutenção','',728),(2929,'1-Requisitos, 2-Desenvolvimento, 3-Implantação, 4-Correção e 5-Manutenção','',728),(2930,'1-Requisitos, 2-Projetos, 3-Correção, 4-Verificação e 5-Reavaliação','',728),(2931,'Nenhuma das Alternativas','',728),(2932,'Modelo em Camadas','',729),(2933,'Modelo Cliente Servidor','',729),(2934,'Modelo de Repositório Central','',729),(2935,'Modelo Híbrido','',729),(2936,'Nenhuma das Alternativas','',729),(2937,'Modelo Incremental','',730),(2938,'Modelo Cascata','',730),(2939,'Modelo Espiral','',730),(2940,'Modelo Baseado em Componentes','',730),(2941,'Nenhuma das Alternativas','',730),(2942,'Estudo de viabilidade, análise de requisitos, especificação de requisitos e validação de requisitos.','',731),(2943,'Estudo de Rentabilidade, análise de requisitos, especificação de requisitos e validação de requisitos.','',731),(2944,'Análise de requisitos, especificação de requisitos, validação de requisitos e desenvolvimento de requisitos.','',731),(2945,'Estudo de viabilidade, análise de requisitos, especificação de requisitos e negociação de requisitos.','',731),(2946,'Nenhuma das Alternativas','',731),(2947,'Manutenção e Evolução','',732),(2948,'Projeto e Implementação','',732),(2949,'Teste e Validação','',732),(2950,'Analise de Requisitos e Especificação','',732),(2951,'Nenhuma das Alternativas','',732),(2952,'A metodologia RUP para desenvolvimento de software','',733),(2953,'O modelo incremental de desenvolvimento de software','',733),(2954,'O modelo espiral de desenvolvimento de software','',733),(2955,'O modelo baseado em componentes para o desenvolvimento de software','',733),(2956,'Nenhuma das Alternativas','',733),(2957,'I-Concepção, II-Elaboração, III-Construção e IV-Transição','',734),(2958,'I-Consolidação, II-Exemplificação, III-Elaboração e IV-Transposição','',734),(2959,'I-Conclusão, II-Elaboração, III-Construção e IV-Transição','',734),(2960,'I- Concepção, II-Elaboração, III-Construção e IV-Instalação','',734),(2961,'Nenhuma das Alternativas','',734),(2962,'Modelo Cliente Servidor','',735),(2963,'Modelo de Repositório Central','',735),(2964,'Modelo em Camadas','',735),(2965,'Modelo Híbrido','',735),(2966,'Nenhuma das Alternativas','',735),(2967,'Classe','',736),(2968,'Atributos','',736),(2969,'Herança','',736),(2970,'Métodos','',736),(2971,'Nenhuma das Alternativas','',736),(2972,'Itens I e II configuram desvantagens do modelo.','',737),(2973,'Apenas a IV configura desvantagem do modelo.','',737),(2974,'Apenas a II configura desvantagem do modelo.','',737),(2975,'Itens I, II e III configuram desvantagens do modelo.','',737),(2976,'Nenhuma das Alternativas','',737),(2977,'aumento do desempenho de processamento','',738),(2978,'tolerância a falhas: fornecer o serviço esperado mesmo na presença de uma falha','',738),(2979,'validação: remover falhas','',738),(2980,'previsão de falhas: estimativas sobre a presença de falhas','',738),(2981,'os dados são armazenados no disco rígido.','',739),(2982,'é constituída por memórias estáticas (SRAM) de grande velocidade de acesso.','',739),(2983,'contribui para o aumento da velocidade de processamento.','',739),(2984,'armazena os dados mais utilizados durante o processamento.','',739),(2985,'Comparativo de desempenho baseado na execução de grupos de aplicativos padronizados.','',740),(2986,'Corresponde ao conteúdo do contador de programa antes da execução de uma instrução de salto.','',740),(2987,'Conjunto de instruções de máquina de um microprocessador.','',740),(2988,'Tempo transcorrido entre dois ciclos de máquina consecutivos.','',740),(2989,'RAM dinâmica','',741),(2990,'RAM estática','',741),(2991,'ROM','',741),(2992,'EPROM','',741),(2993,'A existência de duas ou mais CPUs interligadas e trabalhando juntas com ou sem compartilhamento de memória.','',742),(2994,'A execução de apenas um único programa de cada vez, ou seja, qualquer outro programa deve aguardar o término do programa corrente para ser executado.','',742),(2995,'Complexidade e eficiência superiores a outros tipos de sistemas operacionais, compartilhamento de recursos por diferentes programas e aumento da produtividade com redução de custos.','',742),(2996,'A necessidade de um conjunto de rotinas que oferecem serviços aos usuários do sistema e suas aplicações, bem como a outras rotinas do próprio sistema.','',742),(2997,'Enviar uma mensagem de aviso aos demais periféricos.','',743),(2998,'Identificar a origem da Interrupção.','',743),(2999,'Carregar o PC (Program Counter) com o endereço da rotina de tratamento.','',743),(3000,'Executar a rotina de tratamento da interrupção.','',743),(3001,'19 bits','',744),(3002,'18 bits','',744),(3003,'17 bits','',744),(3004,'16 bits','',744),(3005,'ao universo físico, ao universo da informação e ao universo do usuário.','',745),(3006,'ao universo da informação, ao universo físico e ao universo do usuário.','',745),(3007,'ao universo do usuário, ao universo físico e ao universo da informação.','',745),(3008,'ao universo físico, ao universo do usuário e ao universo da informação.','',745),(3009,'Armazenamento do conteúdo do contador de programa (PC) na pilha','',746),(3010,'Fetch da instrução, da memória para o registrador de instruções (IR)','',746),(3011,'Determinação do tipo de instrução carregada (Decode)','',746),(3012,'Execução da instrução','',746),(3013,'É o programa, do Sistema Operacional, responsável por executar as chamadas de sistema.','',747),(3014,'É o conjunto de comandos responsáveis pela interface operacional entre o Sistema Operacional e os programas de usuários.','',747),(3015,'É o sistema utilizado para ocultar as peculiaridades do armazenamento e recuperação de dados.','',747),(3016,'É o conjunto de rotinas ou procedimentos que oferecem serviços aos usuários do sistema e suas aplicações.','',747),(3017,'Servidor Web','',748),(3018,'Servidor de Aplicações','',748),(3019,'Servidor de Impressão','',748),(3020,'Servidor de Banco de Dados','',748),(3021,'Falha','',749),(3022,'Defeito','',749),(3023,'Erro','',749),(3024,'Abertura','',749),(3025,'Quarta Geração dos Computadores.','',750),(3026,'Terceira Geração dos Computadores.','',750),(3027,'Segunda Geração dos Computadores.','',750),(3028,'Primeira Geração dos Computadores.','',750),(3029,'contido em memória do tipo ROM, interna ao microprocessador, que determina os sinais de controle sobre ULA, registradores internos, contadores e demais partes internas ao microprocessador.','',751),(3030,'executado após um processo de Tradução, que origina um outro conjunto de instruções reconhecidas pelo Hardware.','',751),(3031,'que oferece uma interface padrão para os computadores.','',751),(3032,'responsável por realizar a geração de um conjunto de instruções reconhecidas pela máquinas','',751),(3033,'A Portabilidade','',752),(3034,'O aumento de desempenho em processamento','',752),(3035,'O aumento de desempenho em tratamento multimídia','',752),(3036,'A maior proximidade com o usuário','',752),(3037,'E','',753),(3038,'OU','',753),(3039,'XOU','',753),(3040,'Negação','',753),(3041,'OU','',754),(3042,'E','',754),(3043,'XOU','',754),(3044,'Negação','',754),(3045,'EPROM','',755),(3046,'EEPROM','',755),(3047,'ROM','',755),(3048,'RAM','',755),(3049,'BSB (Back Side Bus): exclusivo para memórias Cache instalados na placa mãe (motherboard).','',756),(3050,'FSB (Front Side Bus): também conhecido como System Bus ou Barramento de Sistema, é utilizado para acessar a memória principal e os demais dispositivos do computador.','',756),(3051,'PCI (Peripheral Component Interconnect): barramento principal de conexão de dispositivos externos do PC.','',756),(3052,'IDE (Integrated Drive Electronics) ou ATA (Advanced Technology Attachment): barramento exclusivo para dispositivos de armazenamento.','',756),(3053,'Temperatura','',757),(3054,'Capacidade','',757),(3055,'Tempo de acesso','',757),(3056,'Rotação','',757),(3057,'aquela formada pelos chips de memória DRAM.','',758),(3058,'formada pelo HardDisk e outras unidades de armazenamento.','',758),(3059,'a que inclui uma memória do tipo ROM, contendo o microprograma.','',758),(3060,'o conjunto de memórias internas a dispositivos como Placa de Vídeo e PenDrive.','',758),(3061,'(1) Registradores; (2) Caches; (3) RAM; (4) Dispositivos de armazenamento','',759),(3062,'(1) Caches; (2) Registradores; (3) RAM; (4) Dispositivos de armazenamento','',759),(3063,'(1) RAM; (2) Caches; (3) Dispositivos de armazenamento; (4) Registradores','',759),(3064,'(1) Dispositivos de armazenamento; (2) Registradores; (3) Caches; (4) RAM','',759),(3065,'Kernel','',760),(3066,'System Calls','',760),(3067,'Sistemas de Arquivos','',760),(3068,'Shell','',760),(3069,'os sinais de controle WR e CS estejam ativos.','',761),(3070,'os sinais de controle RD e CS estejam ativos.','',761),(3071,'apenas o sinal de controle CS esteja ativo.','',761),(3072,'apenas o sinal de controle WR esteja ativo.','',761),(3073,'SRAM','',762),(3074,'DRAM','',762),(3075,'Flash','',762),(3076,'Disco rígido','',762),(3077,'É o circuito integrado que armazena os dados antes de serem transferidos para a RAM instalada no computador.','',763),(3078,'É a taxa de transferência de dados entre HardDisk e computador.','',763),(3079,'É o conjunto de cabos que une o computador ao HardDisk.','',763),(3080,'É a memória RAM instalada no computador onde está o HardDisk.','',763),(3081,'detector de zero','',764),(3082,'detector de paridade','',764),(3083,'detector de carry','',764),(3084,'detector de nível','',764),(3085,'Contador de Programa (PC).','',765),(3086,'Registrador de dados da memória (MDR).','',765),(3087,'Registrador de endereços da memória (MAR).','',765),(3088,'Registrador de Interrupção (IR).','',765),(3089,'Ciclo de Busca.','',766),(3090,'Op Code.','',766),(3091,'Decode.','',766),(3092,'Ciclo de Instrução.','',766),(3093,'uma microoperação.','',767),(3094,'um microcomando.','',767),(3095,'uma microinstrução.','',767),(3096,'uma instrução de máquina.','',767),(3097,'custo elevado','',768),(3098,'dimensões reduzidas','',768),(3099,'durabilidade superior à durabilidade das válvulas','',768),(3100,'tempo de resposta reduzido','',768),(3101,'emprego de válvulas','',769),(3102,'emprego de relês eletromecânicos','',769),(3103,'emprego de transistores','',769),(3104,'uso de cartões perfurados','',769),(3105,'XOU','',770),(3106,'OU','',770),(3107,'NOU','',770),(3108,'E','',770),(3109,'o mecanismo de tradução do endereço virtual para o endereço físico.','',771),(3110,'a técnica de gerência de memória onde o espaço de endereçamento virtual e o espaço de endereçamento real são divididos em blocos do mesmo tamanho, chamados páginas.','',771),(3111,'o conjunto de páginas que um processo referencia constantemente.','',771),(3112,'o mecanismo que orienta o sistema no sentido de obter um melhor aproveitamento da memória.','',771),(3113,'ampliação da diferença de velocidade entre processadores e unidades de armazenamento (exs.: chips de memória e Discos rígidos).','',772),(3114,'existência de memórias com capacidade elevada como as DRAM.','',772),(3115,'necessidade de um Sistema Operacional com chipset e BIOS adequados.','',772),(3116,'necessidade de ampliar a capacidade de memória RAM sem acréscimo de custo.','',772),(3117,'valor DOIS e valor DEZ','',773),(3118,'valor DEZ e valor QUATRO','',773),(3119,'valor OITO e valor QUATRO','',773),(3120,'valor DEZ e valor DOIS','',773),(3121,'valor DOIS e valor QUATRO','',773),(3122,'deve obrigatoriamente ser feita por meio de dispositivos tais como microfones, câmeras, sensores, etc.','',774),(3123,'pode opcionalmente ser feita por meio da digitalização','',774),(3124,'não envolve amostragem nem quantização','',774),(3125,'nenhuma das outras respostas está correta','',774),(3126,'não precisa ser feita por meio de dispositivos tais como microfones, câmeras, sensores, etc.','',774),(3127,'podem ser codificadas em bits $\\&$ bytes','',775),(3128,'variam de forma contínua','',775),(3129,'não podem ser representadas por números inteiros','',775),(3130,'podem ser representadas por números reais','',775),(3131,'variam de forma indiscreta','',775),(3132,'variam de forma discreta','',776),(3133,'variam de forma contínua','',776),(3134,'podem ser codificadas em byts $\\&$ bites','',776),(3135,'podem ser representadas por números irracionais','',776),(3136,'não podem ser representadas por números naturais','',776),(3137,'valor TRÊS e valor ONZE','',777),(3138,'valor TRÊS e valor QUATRO','',777),(3139,'valor ONZE e valor QUATRO','',777),(3140,'valor ONZE e valor TRÊS','',777),(3141,'valor DEZ e valor DOIS','',777),(3142,'A Codificação de texto no Windows usa o código ASCII mais os Caracteres Internacionais','',778),(3143,'Nenhuma das OUTRAS alternativas está correta','',778),(3144,'A codificação ISO 8859-1 é compatível com Windows','',778),(3145,'A codificação UTF-8 não é compatível com ASCII','',778),(3146,'A codificação Unicode não está relacionada ao uso do bit como texto','',778),(3147,'George Boole está relacionado ao uso do bit como lógica','',779),(3148,'O sistema binário utiliza o bit como texto','',779),(3149,'Unicode está relacionado ao uso do bit como número','',779),(3150,'Nenhuma das OUTRAS alternativas está correta','',779),(3151,'Pixel está relacionado ao uso do bit como número','',779),(3152,'Unicode está relacionado ao uso do bit como texto','',780),(3153,'George Boole está relacionado ao uso do bit como texto','',780),(3154,'Nenhuma das OUTRAS alternativas está correta','',780),(3155,'Pixel está relacionado ao uso do bit como som','',780),(3156,'O sistema binário utiliza o bit como lógica','',780),(3157,'variam de forma discreta','',781),(3158,'variam de forma contínua','',781),(3159,'não podem ser representadas por números inteiros','',781),(3160,'podem ser representadas por números reais','',781),(3161,'não podem ser codificadas em bits $\\&$ bytes','',781),(3162,'Os primeiros ambientes de interação homem-máquina eram orientados por linhas de comando','',782),(3163,'Ambientes orientados a ponto não permitem o uso de gráficos','',782),(3164,'Ambientes orientados por tela são um subtipo de ambientes orientados a ponto','',782),(3165,'Nenhuma das OUTRAS alternativas está correta','',782),(3166,'Os ambientes de interação homem-máquina orientados a ponto são anteriores aos ambientes orientados a texto','',782),(3167,'valor TREZE e valor TREZE','',783),(3168,'valor ONZE e valor TREZE','',783),(3169,'valor TREZE e valor TRÊS','',783),(3170,'valor TREZE e valor QUATRO','',783),(3171,'valor DOZE e valor QUATRO','',783),(3172,'valor TRÊS e valor ONZE','',784),(3173,'valor ONZE e valor DOZE','',784),(3174,'valor TRÊS e valor QUATRO','',784),(3175,'valor ONZE e valor TRÊS','',784),(3176,'valor DOIS e valor DEZ','',784),(3177,'valor ONZE e valor TRÊS','',785),(3178,'valor DOIS e valor DEZ','',785),(3179,'valor ONZE e valor DOZE','',785),(3180,'valor TRÊS e valor ONZE','',785),(3181,'valor TRÊS e valor QUATRO','',785),(3182,'Nenhuma das OUTRAS alternativas está correta','',786),(3183,'Torna menos robusto o armazenamento e a preservação da informação','',786),(3184,'As informações no formato digital não podem ser manipuladas e tratadas por programas e processadores','',786),(3185,'Consiste na conversão de informação digital (valores binários) em informação analógica (intensidade, número real)','',786),(3186,'Envolve amostragem, mas não quantização','',786),(3187,'Envolve amostragem e quantização','',787),(3188,'Torna mais fácil e menos robusto o armazenamento e a preservação da informação','',787),(3189,'As informações no formato digital não podem ser manipuladas e tratadas por programas e processadores','',787),(3190,'Consiste na conversão de informação digital (valores binários) em informação analógica (intensidade, número real)','',787),(3191,'Nenhuma das OUTRAS alternativas está correta','',787),(3192,'Nenhuma das OUTRAS alternativas está correta','',788),(3193,'Os primeiros ambientes de interação homem-máquina eram orientados por tela','',788),(3194,'Ambientes orientados por tela são um subtipo de ambientes orientados a ponto','',788),(3195,'Os ambientes de interação homem-máquina orientados a ponto são anteriores aos ambientes orientados a texto','',788),(3196,'Ambientes orientados a ponto não permitem o uso de gráficos','',788),(3197,'(1,0,1)','',789),(3198,'(1,1,0)','',789),(3199,'(1,0,0)','',789),(3200,'(0,1,0)','',789),(3201,'(0,1,1)','',789),(3202,'nenhuma das outras respostas está correta','',790),(3203,'depende unicamente da resolução de pixels por polegada (ppi)','',790),(3204,'mede a distância entre as linhas ou colunas em uma imagem','',790),(3205,'não tem nada a ver com resolução ótica','',790),(3206,'é definida como o número de valores dependentes de pixel por unidade de volume','',790),(3207,'(1,0,0)','',791),(3208,'(0,1,1)','',791),(3209,'(1,0,1)','',791),(3210,'(0,1,0)','',791),(3211,'(1,1,0)','',791),(3212,'(1,1,0)','',792),(3213,'(0,1,0)','',792),(3214,'(1,0,1)','',792),(3215,'(0,1,1)','',792),(3216,'(1,0,0)','',792),(3217,'é sinônimo de resolução ótica em scanners','',793),(3218,'nenhuma das outras respostas está correta','',793),(3219,'é definida como o número de valores dependentes de pixel por unidade de comprimento','',793),(3220,'depende unicamente da resolução de pixels por polegada (ppi)','',793),(3221,'mede quão próximas podem ser diferenciadas as linhas ou colunas em uma imagem','',793),(3222,'Luminância, saturação e matiz','',794),(3223,'Nenhuma das OUTRAS alternativas está correta','',794),(3224,'Luminância, diferença de croma azul e diferença de croma vermelho','',794),(3225,'Matiz, luminância e crominância','',794),(3226,'Croma, luma e matiz','',794),(3227,'Os sistemas true color possuem mais de 16 milhões de cores','',795),(3228,'Os sistemas true color usam dithering para aumentar a resolução espacial','',795),(3229,'Os sistemas true color usam paletas de 16 bits por cor','',795),(3230,'Os sistemas true color usam full pallete, com $2^18$ (dois elevado a dezoito) cores','',795),(3231,'Nenhuma das OUTRAS alternativas está correta','',795),(3232,'Ciano, Magenta e Amarelo','',796),(3233,'Magenta, amarelo, ciano e preto','',796),(3234,'Vermelho, amarelo e azul','',796),(3235,'Magenta, preto, verde e vermelho','',796),(3236,'Vermelho, verde, azul e preto','',796),(3237,'Os sistemas de paletas podem usar dithering para \"aumentar\" (perceptivamente) a resolução de cores','',797),(3238,'Os sistemas full pallete possuem $2^8$ (dois elevado a oito) cores','',797),(3239,'Nenhuma das OUTRAS alternativas está correta','',797),(3240,'Os sistemas de paletas possuem mais de 16 bilhões de cores','',797),(3241,'Os sistemas de paletas sempre usam paletas de 6 bits por cor','',797),(3242,'é apenas uma forma de codificação de informações RGB','',798),(3243,'é usado para separar um sinal de luma (Y\\\') com baixa resolução e dois componentes de croma (Cb e Cr) de alta resolução','',798),(3244,'Nenhuma das OUTRAS alternativas está correta','',798),(3245,'é um espaço de cor absoluto','',798),(3246,'é uma aproximação prática, onde as cores vermelho, verde e azul são transformados em informações perceptualmente menos significativas','',798),(3247,'Cb é a componente de diferença de croma azul e Cr é a diferença de croma vermelho','',799),(3248,'é uma aproximação prática, onde as cores vermelho, verde e azul são transformados em informações perceptualmente menos significativas','',799),(3249,'é apenas uma forma de codificação de informações CMY','',799),(3250,'Y\\\' (com apóstrofe) é a componente de luminância e se distingue de Y que é a luma','',799),(3251,'Nenhuma das OUTRAS alternativas está correta','',799),(3252,'Magenta, amarelo, ciano e preto','',800),(3253,'Vermelho, verde, azul e preto','',800),(3254,'Magenta, preto, verde e vermelho','',800),(3255,'Ciano, Magenta e Amarelo','',800),(3256,'Vermelho, amarelo e azul','',800),(3257,'Nenhuma das OUTRAS alternativas está correta','',801),(3258,'Os sistemas true color possuem mais de 16 bilhões de cores','',801),(3259,'Os sistemas true color usam full pallete, com $2^18$ (dois elevado a dezoito) cores','',801),(3260,'Os sistemas true color usam dithering para aumentar a resolução espacial','',801),(3261,'Os sistemas true color usam paletas de 16 bits por cor','',801),(3262,'sem perdas usado no formato de imagens BMP','',802),(3263,'com perdas usado no formato BMP','',802),(3264,'sem perdas usado no formato de imagens MPEG','',802),(3265,'sem perdas usado no formato de imagens JPEG','',802),(3266,'com perdas usado no formato de imagens TIFF','',802),(3267,'sem perdas usado no formato de imagens TIFF','',803),(3268,'presente nos formatos de imagens PCX e JPEG','',803),(3269,'que usa uma combinação do algoritmo LZZ (baseado em dicionário) e codificação de Huffman (baseado em entalpia)','',803),(3270,'com perdas usado no formato de imagens JPEG','',803),(3271,'sem perdas usado no formato de imagens JPEG','',803),(3272,'utiliza decomposição Wavelet','',804),(3273,'Possui uma taxa de compressão inferior a JPEG','',804),(3274,'Usa um método de compressão baseado na DCT','',804),(3275,'Nenhuma das OUTRAS alternativas está correta','',804),(3276,'é anterior ao formato JPEG','',804),(3277,'cujo uso era controlado por patentes, mas atualmente caiu em domínio público','',805),(3278,'com perdas usado no formato BMP','',805),(3279,'sem perdas usado no formato de imagens MPEG','',805),(3280,'que era de domínio público, mas atualmente é controlado por patentes','',805),(3281,'cujo uso nunca foi controlado por patentes','',805),(3282,'baseado em dicionários adaptativos','',806),(3283,'sem perdas usado no formato de imagens JPEG','',806),(3284,'cujo uso nunca foi controlado por patentes','',806),(3285,'baseado em entropia','',806),(3286,'com perdas usado no formato BMP','',806),(3287,'Nenhuma das OUTRAS alternativas está correta','',807),(3288,'É anterior ao formato JPEG','',807),(3289,'Possui uma taxa de compressão inferior a JPEG','',807),(3290,'Usa um método de compressão baseado na DCT','',807),(3291,'Não utiliza decomposição Wavelet','',807),(3292,'que usa um dicionário para armazenar as seqüências de pixels encontradas na imagem e depois codifica nele a posição das seqüências','',808),(3293,'cujo antecessor era o algoritmo LZW','',808),(3294,'que era de domínio público, mas atualmente é controlado por patentes','',808),(3295,'com perdas usado no formato BMP','',808),(3296,'cujo uso nunca foi controlado por patentes','',808),(3297,'que usa uma combinação do algoritmo LZ77 (baseado em dicionário) e codificação de Huffman (baseado em entropia)','',809),(3298,'com perdas usado no formato de imagens TIFF','',809),(3299,'sem perdas usado no formato de imagens JPEG','',809),(3300,'presente nos formatos de imagens TIFF e MPEG','',809),(3301,'sem perdas usado no formato de imagens MPEG','',809),(3302,'O método da deflação utiliza codificação binária pelo método Huffman','',810),(3303,'O método da deflação não é usado no formato TIFF','',810),(3304,'Nenhuma das OUTRAS alternativas está correta','',810),(3305,'O método da deflação não utiliza dicionários','',810),(3306,'O método da deflação é de compressão com perdas','',810),(3307,'Usa um método de compressão baseado na quantização dos coeficientes da DCT','',811),(3308,'Possui uma baixa taxa de compressão','',811),(3309,'É impróprio para fotografias','',811),(3310,'Nenhuma das OUTRAS alternativas está correta','',811),(3311,'Utiliza compressão sem perdas','',811),(3312,'Utiliza compressão com perdas','',812),(3313,'Usa um método de compressão baseado na quantização dos coeficientes da transformada Wavelet','',812),(3314,'É impróprio para fotografias','',812),(3315,'Possui uma baixa taxa de compressão','',812),(3316,'Nenhuma das OUTRAS alternativas está correta','',812),(3317,'O método da deflação não é de compressão com perdas','',813),(3318,'O método da deflação não é usado no formato TIFF','',813),(3319,'O método da deflação não utiliza entropia','',813),(3320,'O método da deflação não utiliza dicionários','',813),(3321,'Nenhuma das OUTRAS alternativas está correta','',813),(3322,'usada no formato de imagens BMP','',814),(3323,'um método de compressão de imagens baseado em dicionários adaptativos','',814),(3324,'um método de compressão de imagens com perdas','',814),(3325,'um método de compressão de imagens baseado em entropia','',814),(3326,'usada no formato de imagens JPEG','',814),(3327,'Existem 2 soluções possíveis: congelamento e esvaziamento','',815),(3328,'A solução de esvaziamento considera menos importante a redundância local que a global','',815),(3329,'Nenhuma das OUTRAS alternativas está correta','',815),(3330,'Consiste em evitar ao máximo possível os fenômenos de congelamento e esvaziamento','',815),(3331,'Como a a memória necessária não é um problema hoje em dia, basta aumentar o tamanho dos dicionários','',815),(3332,'periódicas ou aperiódicas','',816),(3333,'progressivas ou estacionárias','',816),(3334,'nenhuma das outras alternativas está correta','',816),(3335,'simples ou complexas','',816),(3336,'senoidais ou complexas','',816),(3337,'O comprimento de onda é medido em metros','',817),(3338,'A velocidade de propagação do som na água, a 15 graus celsius, é de 1230 quilômetros por segundo','',817),(3339,'A intensidade é inversamente proporcional ao quadrado da pressão sonora efetiva','',817),(3340,'A intensidade de um som relaciona-se com a sua frequência','',817),(3341,'A frequência é diretamente proporcional ao período','',817),(3342,'progressivas ou estacionárias','',818),(3343,'senoidais ou complexas','',818),(3344,'periódicas ou aperiódicas','',818),(3345,'nenhuma das outras alternativas está correta','',818),(3346,'senoidais ou ruidosas','',818),(3347,'senoidais ou complexas','',819),(3348,'periódicas ou aperiódicas','',819),(3349,'simples ou complexas','',819),(3350,'nenhuma das outras alternativas está correta','',819),(3351,'progressivas ou estacionárias','',819),(3352,'o comprimento de onda é inversamente proporcional à frequência','',820),(3353,'o período é diretamente proporcional à frequência','',820),(3354,'nenhuma das outras alternativas está correta','',820),(3355,'a amplitude indica o número de movimentos completos que as partículas materiais realizam em um segundo','',820),(3356,'o comprimento de onda corresponde ao espaço percorrido pela onda em 2 ciclos','',820),(3357,'Se a taxa de amostragem for maior que o dobro da máxima frequência presente no sinal, com certeza não haverá aliasing','',821),(3358,'O fenômeno de replicação de frequências ocorre independentemente do fenômeno de aliasing','',821),(3359,'Nenhuma das OUTRAS alternativas está correta','',821),(3360,'Um sinal analógico pode ser completamente recuperado a partir de suas amostras, desde que elas tenham sido tomadas a uma taxa ligeiramente superior à máxima freqüência presente na forma de onda analógica (em hertz)','',821),(3361,'O processo de amostrar periodicamente um sinal no tempo gera frequências replicadas','',821),(3362,'Se a taxa de amostragem for maior que duas vezes a máxima frequência presente no sinal, com certeza não haverá aliasing','',822),(3363,'Nenhuma das OUTRAS alternativas está correta','',822),(3364,'O processo de amostrar uniformemente um sinal no tempo gera duplicação de frequências','',822),(3365,'O fenômeno de replicação de frequências ocorre independentemente do fenômeno de aliasing','',822),(3366,'Um analógico pode ser completamente recuperado a partir de suas amostras, desde que elas tenham sido tomadas a uma taxa ligeiramente superior à máxima frequência presente no sinal (em hertz)','',822),(3367,'É um processo com perdas','',823),(3368,'Deve ser uniforme','',823),(3369,'Trata-se de uma discretização do sinal na frequência','',823),(3370,'O valor da amostra quantizada é igual ao valor real da amostra','',823),(3371,'Nenhuma das outras alternativas está correta','',823),(3372,'O processo de amostrar uniformemente um sinal no tempo gera replicação de frequências','',824),(3373,'Nenhuma das OUTRAS alternativas está correta','',824),(3374,'Um sinal analógico pode ser completamente recuperado a partir de suas amostras, desde que elas tenham sido tomadas a uma taxa ligeiramente superior à máxima frequência presente na forma de onda analógica (em hertz)','',824),(3375,'O fenômeno de replicação de frequências ocorre independentemente do fenômeno de aliasing','',824),(3376,'Se a taxa de amostragem for maior que a máxima frequência presente no sinal, com certeza não haverá aliasing','',824),(3377,'Para áudio estéreo digitalizado à taxa de 44,1 kHz e 16 bits por amostra, cada minuto ocupa 10 milhões e 584 mil bytes de memória','',825),(3378,'Um CD contendo som digitalizado à taxa de 44,1 kHz e 16 bits por amostra é capaz de armazenar várias horas de áudio estéreo','',825),(3379,'É usada no formato MP3','',825),(3380,'É uma sequência de amostras não quantizadas','',825),(3381,'Nenhuma das OUTRAS alternativas está correta','',825),(3382,'Trata-se de uma discretização do sinal em amplitude','',826),(3383,'O valor da amostra quantizada é igual ao valor real da amostra','',826),(3384,'Deve ser uniforme','',826),(3385,'Nenhuma das outras alternativas está correta','',826),(3386,'É um processo sem perdas','',826),(3387,'Para áudio monocanal (mono) digitalizado à taxa de 8 kHz e usando 8 bits por amostra, cada segundo ocupa 64 mil bytes de memória','',827),(3388,'É usada no formato JPEG','',827),(3389,'Um CD contendo som estéreo digitalizado à taxa de 44,1 kHz e 16 bits por amostra é capaz de armazenar muitas horas de gravação','',827),(3390,'Nenhuma das OUTRAS alternativas está correta','',827),(3391,'É uma sequência de amostras não quantizadas','',827),(3392,'Pode ser uniforme ou não','',828),(3393,'O valor da amostra quantizada é exatamente igual ao valor real da amostra','',828),(3394,'Nenhuma das outras alternativas está correta','',828),(3395,'Trata-se de uma discretização do sinal em frequência','',828),(3396,'É um processo sem perdas','',828),(3397,'A frequência é o inverso do período','',829),(3398,'O comprimento de onda é medido em hertz','',829),(3399,'A intensidade é inversamente proporcional ao quadrado da pressão sonora efetiva','',829),(3400,'A velocidade de propagação do som na água, a 15 graus celsius, é de 1230 quilômetros por segundo','',829),(3401,'A intensidade de um som relaciona-se com a sua frequência','',829),(3402,'ocorre quando dois sinais, um de baixa e outro de alta intensidade ocorrem simultaneamente e estão próximos em freqüência','',830),(3403,'se o sinal mais forte estiver abaixo de um limiar de mascaramento, o sinal mais fraco o torna inaudível','',830),(3404,'quanto menor a intensidade (em dB) do som mais forte, mais amplo será o efeito de mascaramento','',830),(3405,'nenhuma das outras alternativas está correta','',830),(3406,'ocorre de forma independente da audição humana','',830),(3407,'é a linguagem que muitos instrumentos musicais utilizam atualmente para se comunicar entre si','',831),(3408,'nenhuma das outras alternativas está correta','',831),(3409,'estão fortemente relacionados com fenômenos psicoacústicos da audição humana','',831),(3410,'são usados no formato MPEG-1/Áudio','',831),(3411,'podem ser usados somente em computadores','',831),(3412,'É posterior e mais eficiente que a codificação MP3','',832),(3413,'Usa um método de compressão sem perdas','',832),(3414,'É essencialmente a mesma da camada III do padrão MPEG-1/Áudio','',832),(3415,'É usada no MPEG-3 Audio codec','',832),(3416,'Nenhuma das OUTRAS alternativas está correta','',832),(3417,'nenhuma das outras alternativas está correta','',833),(3418,'estão fortemente relacionados com fenômenos psicoacústicos da audição humana','',833),(3419,'são usados no formato MPEG-1/Áudio','',833),(3420,'não podem ser usados em computadores','',833),(3421,'não estão relacionados com instrumentos musicais','',833),(3422,'É essencialmente a mesma da camada III do padrão MPEG-1/Áudio','',834),(3423,'Usa um método de compressão sem perdas','',834),(3424,'Nenhuma das OUTRAS alternativas está correta','',834),(3425,'É uma abreviatura da sigla completa MPEG-3 Audio codec','',834),(3426,'É posterior e mais eficiente que a codificação AAC','',834),(3427,'é maior quando ocorre dentro de uma mesma banda crítica','',835),(3428,'é maior quando ocorre entre bandas críticas separadas','',835),(3429,'é um fenômeno da acústica objetiva','',835),(3430,'nenhuma das outras alternativas está correta','',835),(3431,'ocorre de forma independente da audição humana','',835),(3432,'É anterior e menos eficiente que a codificação AAC','',836),(3433,'É uma abreviatura da sigla completa MPEG-3 Audio codec','',836),(3434,'Nenhuma das OUTRAS alternativas está correta','',836),(3435,'É essencialmente a mesma da camada II do padrão MPEG-3/Áudio','',836),(3436,'Usa um método de compressão sem perdas','',836),(3437,'nenhuma das outras alternativas está correta','',837),(3438,'é maior quando ocorre entre bandas críticas separadas','',837),(3439,'ocorre de forma independente da audição humana','',837),(3440,'é menor quando ocorre dentro de uma mesma banda crítica','',837),(3441,'é um fenômeno da acústica objetiva','',837),(3442,'As principais são a síntese FM e a síntese PCM','',838),(3443,'DirectX é um driver para sintetizadores virtuais desenvolvido pela Apple®','',838),(3444,'A síntese subtrativa é baseada na Série de Fourier','',838),(3445,'A síntese aditiva consiste basicamente em filtrar e amplificar os harmônicos de uma onda gerada por um oscilador','',838),(3446,'Nenhum sintetizador granular permite ajustar o tempo de ataque e decaimento (envelope)','',838),(3447,'Vorbis é usada em alguns jogos de videogame, websites e estações de rádio, porém em menor escala quando comparado a MP3','',839),(3448,'Testes de audição de mostraram que em baixa taxa (menos de 64 kbits/s) Vorbis tem qualidade superior a HE-MP3, porém inferior a LC-MP3','',839),(3449,'MP3 é mais comumente usada nos formatos contentores MPEG-1 E MPEG-3, ao passo que Vorbis é mais comumente usada no formato contentor Ogg','',839),(3450,'A Wikipédia usa MP3 preferencialmente a Vorbis','',839),(3451,'Vorbis é livre de patentes assim como MP3','',839),(3452,'Cada mensagem MIDI é, geralmente, composta por 3 palavras e cada palavra por sua vez é composta de 10 bits','',840),(3453,'Nenhuma das OUTRAS alternativas está correta','',840),(3454,'O formato GM foi padronizado pela primeira vez em 1997','',840),(3455,'Um arquivo MIDI contém formas de onda de áudio para síntese de música','',840),(3456,'MIDI pode ser usado para sintetizar áudio diretamente em computadores, mas não permite a comunicação entre instrumentos musicais e equipamentos eletrônicos','',840),(3457,'A Wikipédia usa Vorbis preferencialmente a AAC','',841),(3458,'Testes de audição de mostraram que em baixa taxa (menos de 64 kbits/s) Vorbis tem qualidade superior a HE-AAC, porém inferior a LC-AAC','',841),(3459,'AAC é mais comumente usada nos formatos contentores MPEG-1 E MPEG-3, ao passo que Vorbis é mais comumente usada no formato contentor Obb','',841),(3460,'Vorbis não é livre de patentes como ocorre com AAC','',841),(3461,'Vorbis não é usada em jogos de videogame, websites ou estações de rádio','',841),(3462,'Nenhuma das OUTRAS alternativas está correta','',842),(3463,'Cada mensagem MIDI é, geralmente, composta por 8 palavras e cada palavra por sua vez é composta de 16 bits','',842),(3464,'Um arquivo MIDI contém formas de onda de áudio para síntese de música','',842),(3465,'MIDI pode ser usado para sintetizar áudio diretamente em computadores, mas não permite a comunicação entre instrumentos musicais e equipamentos eletrônicos','',842),(3466,'O formato GM foi padronizado pela primeira vez em 1997','',842),(3467,'A codificação é feita usando 8 bits por amostra','',843),(3468,'É padronizado pela norma ITU-T G732','',843),(3469,'A Lei $\\mu$ é usada na Europa e a Lei A nos Estados Unidos','',843),(3470,'A taxa de amostragem é de 16 kHz','',843),(3471,'O sinal de voz é quantizado linearmente','',843),(3472,'É usado em VoIP (voz sobre IP)','',844),(3473,'Não usa um livros de códigos (codebooks) como entrada (excitação) do modelo de predição linear','',844),(3474,'O algoritmo original foi simulado em 1883 por Schroeder e Atal','',844),(3475,'É padronizado pela norma ITU-T G779','',844),(3476,'Não admite variantes','',844),(3477,'O processo de digitalização utiliza predição linear','',845),(3478,'O sinal de voz é quantizado aleatoriamente','',845),(3479,'O sinal de voz é digitalizado usando 12 bits por amostra','',845),(3480,'É padronizado pela norma ITU-T G747','',845),(3481,'A taxa de amostragem é de 4 kHz','',845),(3482,'está sujeita a dois tipos de erros de quantização: sobrecarga de inclinação e ruído granular','',846),(3483,'A principal desvantagem da DM é sua simplicidade','',846),(3484,'a taxa de amostragem é de 16 kHz','',846),(3485,'o sinal de entrada é amostrado a uma taxa muito inferior à mínima (que seria 2 vezes a largura de faixa do sinal) a fim de propositadamente aumentar a correlação entre amostras adjacentes do sinal','',846),(3486,'O desempenho de um modulador delta pode ser melhorado consideravelmente tornando fixo o passo de quantização (?), de modo a eliminar distorção por sobrecarga de inclinação','',846),(3487,'As vogais são produzidas com vibração das cordas vocais','',847),(3488,'Nenhuma das OUTRAS alternativas está correta','',847),(3489,'Os sinais das consoantes \"surdas\" são perfeitamente periódicos','',847),(3490,'O sinal de voz não pode ser comprimido porque não apresenta redundância','',847),(3491,'A característica ruidosa dos sons fricativos não é provocada pela turbulência do ar','',847),(3492,'O sinal de voz não é quantizado linearmente','',848),(3493,'A taxa de amostragem é de 16 kHz','',848),(3494,'A Lei $\\mu$ é usada na Europa e a Lei A nos Estados Unidos','',848),(3495,'A codificação é feita usando 6 bits por amostra','',848),(3496,'É padronizado pela norma ITU-T G712','',848),(3497,'inclui DM como um caso especial','',849),(3498,'É padronizado pela norma ITU-T G762','',849),(3499,'A codificação é feita usando 9 bits por amostra','',849),(3500,'O sinal é quantizado diretamente, sem filtro de predição','',849),(3501,'A taxa de amostragem é de 26 kHz','',849),(3502,'O modelo fonte-filtro simplificado é composto basicamente por um gerador de impulsos (impulse train generator), por um gerador de ruído aleatório (random noise generator) e por um filtro digital variante no tempo (time-vayaing digital filter)','',850),(3503,'A modelagem por analogia terminal (terminal analog modeling) é mais complexa que as modelagens baseadas em acústica e mecânica dos fluidos','',850),(3504,'Os VOCODERS (codificadores de voz) de uso comercial na atualidade foram desenvolvidos tendo como suporte teórico os modelos de produção da fala baseados em acústica e mecânica dos fluidos','',850),(3505,'Nenhuma das OUTRAS alternativas está correta','',850),(3506,'A excitação do tipo sonora (voiced) é matematicamente modelada por um gerador de ruído branco (gerador de sinal aleatório), ao passo que a excitação do tipo surda (unvoiced) é modelada por um trem de impulsos','',850),(3507,'A codificação é feita usando 4 bits por amostra','',851),(3508,'A quantização é fixa e a predição é adaptativa','',851),(3509,'A sua taxa de bits é o dobro da taxa do PCM','',851),(3510,'É padronizado pela norma ITU-T G712','',851),(3511,'Sua complexidade computacional é em média 100 vezes maior que a do PCM','',851),(3512,'Usa livros de códigos (codebooks) como entrada (excitação) do modelo de predição linear','',852),(3513,'Não é usado em VoIP (voz sobre IP)','',852),(3514,'Não admite variantes','',852),(3515,'O algoritmo original foi simulado em 1883 por Schroeder e Atal','',852),(3516,'É padronizado pela norma ITU-T G779','',852),(3517,'A excitação do tipo sonora (voiced) é matematicamente modelada por um trem de impulsos, ao passo que a excitação do tipo surda (unvoiced) é modelada por um gerador de ruído branco (gerador de sinal aleatório)','',853),(3518,'A modelagem por analogia terminal (terminal analog modeling) é mais complexa que as modelagens baseadas em acústica e mecânica dos fluidos','',853),(3519,'Os VOCODERS (codificadores de voz) de uso comercial na atualidade foram desenvolvidos tendo como suporte teórico os modelos de produção da fala baseados em acústica e mecânica dos fluidos','',853),(3520,'Nenhuma das OUTRAS alternativas está correta','',853),(3521,'O modelo fonte-filtro completo é composto por um gerador de impulsos (impulse train generator), por um gerador de ruído aleatório (random noise generator) e por um filtro digital variante no tempo (time-vayaing digital filter)','',853),(3522,'A característica ruidosa dos sons fricativos é provocada pela turbulência do ar','',854),(3523,'As vogais são produzidas sem a vibração das cordas vocais','',854),(3524,'Os sinais das consoantes \"surdas\" são periódicos','',854),(3525,'Nenhuma das OUTRAS alternativas está correta','',854),(3526,'O sinal de voz não pode ser comprimido porque não apresenta redundância','',854),(3527,'Sua complexidade computacional é em média 10 vezes maior que a do PCM','',855),(3528,'A codificação é feita usando 6 bits por amostra','',855),(3529,'A sua taxa de bits é o dobro da taxa do PCM','',855),(3530,'É padronizado pela norma ITU-T G712','',855),(3531,'A quantização é fixa e a predição é adaptativa','',855),(3532,'Vídeos com um baixo FPS (<15) parecem estar \"congelados\", uma vez que nosso olho e nosso cérebro são capazes de captar e processar um número muito mais elevado de quadros por segundo','',856),(3533,'Televisões comuns apresentam aspect ratio 16:9; televisões mais modernas apresentam aspect ratio 4:3','',856),(3534,'Resolução é a característica que define a quantidade de quadros do vídeo','',856),(3535,'TVs de alta definição (HDTV) exibem resoluções de até 192x108p60','',856),(3536,'Nenhuma das OUTRAS alternativas está correta','',856),(3537,'menor que a de uma câmara fotográfica digital de 4 megapixels','',857),(3538,'maior que a de uma câmara fotográfica digital de 5 megapixels','',857),(3539,'maior que a de uma câmara fotográfica digital de 8 megapixels','',857),(3540,'menor que a de uma webcam de 1.3 megapixels','',857),(3541,'menor que a de uma webcam de 1.2 megapixels','',857),(3542,'O Brasil adota uma variação deste formato, com 30 FPS, denominada PAL-M','',858),(3543,'18$\\%$ das linhas são utilizadas para sincronização, resultando em uma resolução real de 680x480','',858),(3544,'É utilizado no Brasil na TV digital aberta','',858),(3545,'Não utiliza linhas entrelaçadas','',858),(3546,'Utiliza 39,97 quadros por segundo','',858),(3547,'Nenhuma das OUTRAS alternativas está correta','',859),(3548,'Ambas não podem ser usadas em discos no formato Blu-ray','',859),(3549,'MPEG-1 Video usa apenas compressão espacial, enquanto que H.264/MPEG-4 AVC utiliza também a compressão temporal','',859),(3550,'Ambas são completamente livres de patentes','',859),(3551,'Ambas são usadas no padrão americano de TV digital','',859),(3552,'Trata-se de um formato de vídeo analógico','',860),(3553,'É utilizado no Brasil para TV aberta','',860),(3554,'18$\\%$ das linhas são utilizadas para sincronização, resultando em uma resolução real de 680x480','',860),(3555,'Utiliza 39,97 quadros por segundo','',860),(3556,'Não utiliza linhas entrelaçadas','',860),(3557,'H.264/MPEG-4 AVC pode ser usada em discos no formato Blu-ray','',861),(3558,'Ambas são usadas no padrão DVB de TV digital','',861),(3559,'Nenhuma das OUTRAS alternativas está correta','',861),(3560,'Ambas são completamente livres de patentes','',861),(3561,'MPEG-1 Video usa apenas compressão espacial, enquanto que H.264/MPEG-4 AVC utiliza também a compressão temporal','',861),(3562,'Resolução é a característica que define a quantidade de pixels em cada quadro do vídeo','',862),(3563,'Vídeos com um alto FPS (>100) parecem estar \"congelados\", uma vez que nosso olho e nosso cérebro são capazes de captar e processar um número muito mais elevado de quadros por segundo','',862),(3564,'TVs de alta definição (HDTV) exibem resoluções de até 192x108p60','',862),(3565,'Televisões comuns apresentam aspect ratio 16:9; televisões mais modernas apresentam aspect ratio 4:3','',862),(3566,'Nenhuma das OUTRAS alternativas está correta','',862),(3567,'utiliza linhas entrelaçadas','',863),(3568,'Utiliza 39,97 quadros por segundo','',863),(3569,'É utilizado no Brasil na TV digital aberta','',863),(3570,'18$\\%$ das linhas são utilizadas para sincronização, resultando em uma resolução real de 680x480','',863),(3571,'O Brasil adota uma variação deste formato, com 60 FPS, denominada PAL-M','',863),(3572,'Utiliza 29,97 quadros por segundo','',864),(3573,'É utilizado no Brasil para TV aberta','',864),(3574,'Trata-se de um formato de vídeo digital','',864),(3575,'18$\\%$ das linhas são utilizadas para sincronização, resultando em uma resolução real de 680x480','',864),(3576,'Não utiliza linhas entrelaçadas','',864),(3577,'Nenhuma das OUTRAS alternativas está correta','',865),(3578,'A maioria dos codecs de vídeo atuais usa somente compressão espacial (intra-frame)','',865),(3579,'A compressão temporal de frames de vídeo individuais é geralmente baseada na DCT','',865),(3580,'A compactação temporal funciona calculando a soma entre os quadros sucessivos após armazenar cada um deles','',865),(3581,'Uma delas é a sub-amostragem de luminância','',865),(3582,'Está definida na norma ISO/IEC-11172-2','',866),(3583,'Nenhuma das OUTRAS alternativas está correta','',866),(3584,'É posterior e mais eficiente que a codificação AVC','',866),(3585,'É essencialmente a mesma da camada III do padrão MPEG-1/Áudio','',866),(3586,'Usa um método de compressão sem perdas','',866),(3587,'A maioria dos codecs de vídeo atuais usa compressão espacial (intra-frame) e temporal (inter-frame) combinadas','',867),(3588,'A compactação temporal funciona calculando a soma entre os quadros sucessivos após armazenar cada um deles','',867),(3589,'A compressão temporal de frames de vídeo individuais é geralmente baseada na DCT','',867),(3590,'Nenhuma das OUTRAS alternativas está correta','',867),(3591,'Uma delas é a sub-amostragem de luminância','',867),(3592,'Nenhuma das OUTRAS alternativas está correta','',868),(3593,'Usa um método de compressão sem perdas','',868),(3594,'É essencialmente a mesma da camada III do padrão MPEG-1/Áudio','',868),(3595,'Está definida na norma ISO/IEC-12272-2','',868),(3596,'É posterior e mais eficiente que a codificação AVC','',868),(3597,'entrada, processamento, saída, realimentação, controle','',869),(3598,'dados, informação, conhecimento, pessoas','',869),(3599,'fornecedores, clientes, concorrentes, acionistas','',869),(3600,'hardware, software, rede, banco de dados','',869),(3601,'Nenhuma das OUTRAS alternativas está correta','',869),(3602,'Conjunto de elementos que interagem para coletar, manipular e disseminar dados e informações;','',870),(3603,'É a comunicação entre vários componentes;','',870),(3604,'É um sistema para gerar relatórios;','',870),(3605,'Representa a percepção e a compreensão de um conjunto de dados e de como estes dados podem ser úteis para uma tarefa específica;','',870),(3606,'É um programa que armazena dados no computador.','',870),(3607,'Dados: são fatos não trabalhados como o nome de um empregado. Informação: uma coleção de fatos organizados de modo que adquirem um valor adicional','',871),(3608,'Informação é sempre um dado sem valor','',871),(3609,'Dado é a informação processada','',871),(3610,'Dados: é um gráfico gerado pelo computador. Informação: são relatórios gerados pelo sistema','',871),(3611,'Dados: são relatórios gerados pelo sistema: Informação: o sexo de uma pessoa é um exemplo','',871),(3612,'Programa de computador','',872),(3613,'Programa de Computador, Banco de Dados, Documentação','',872),(3614,'Código binário','',872),(3615,'Programa de Computador, Banco de Dados, Documentação, Manual do Usuário','',872),(3616,'Programa de computador, Banco de Dados','',872),(3617,'Todas as alternativas estão corretas','',873),(3618,'Excel','',873),(3619,'Word','',873),(3620,'Programas de sistema operacional','',873),(3621,'Programas de análise de vendas','',873),(3622,'Refere-se a software desenvolvido por equipes;','',874),(3623,'Usa princípios de engenharia ao invés de arte;','',874),(3624,'Abordagem sistemática, disciplinada e quantificável para a produção de software;','',874),(3625,'Usa métodos, processos e ferramentas para a produção de software;','',874),(3626,'Inclui somente aspectos técnicos na produção de software.','',874),(3627,'Analista de Sistemas','',875),(3628,'Chief Information Officer','',875),(3629,'Programador de aplicações','',875),(3630,'Certificador CMMI','',875),(3631,'Testador de Software','',875),(3632,'Requisito, Análise, Projeto, Código, Teste e Operação','',876),(3633,'Análise, Implementação e Teste','',876),(3634,'Requisito, Implementação e Operação','',876),(3635,'Código e Teste','',876),(3636,'Código e Manutenção','',876),(3637,'Hardware, Software, Banco de Dados, Telecomunicação, Procedimentos, Pessoas','',877),(3638,'Hardware, Software, Banco de Dados','',877),(3639,'Hardware, Software, Banco de Dados, Telecomunicação, Procedimentos','',877),(3640,'Hardware, Software, Banco de Dados, Telecomunicação','',877),(3641,'Hardware, Software, Banco de Dados, Telecomunicação, Procedimentos, Processos','',877),(3642,'Dar suporte nos processos e operações, suporte na tomada de decisões e suporte nas estratégias em busca de vantagem competitive','',878),(3643,'Melhorar a qualidade do produto e processo','',878),(3644,'Criação de novos produtos e serviços','',878),(3645,'Melhorar a qualidade da informação','',878),(3646,'Nenhuma das OUTRAS alternativas está correta','',878),(3647,'Nenhuma das OUTRAS alternativas está correta','',879),(3648,'Uma organização é um exemplo de sistema;','',879),(3649,'Recursos econômicos são entradas;','',879),(3650,'Bens e serviços são saídas;','',879),(3651,'Os SI fornecem para a administração informações (realimentação/feedback) sobre as operações do sistema para a sua direção e manutenção (controle);','',879),(3652,'Os Sistemas de Informação de apoio às operações empresariais e aos processos tem foco no nível estratégico da organização','',880),(3653,'Os Sistemas de Informação corporativos estão intimamente relacionados com a estrutura, a cultura, e os processos de negócios da organização','',880),(3654,'Em geral existem três papéis que os Sistemas de Informação fornecem a uma organização: apoio às operações, à tomada de decisão e apoio às estratégias para vantagem competitiva','',880),(3655,'Os Sistemas de Informação são usados por organizações para controlar e monitorar processos de valor agregado para garantir a eficácia e eficiência dos negócios','',880),(3656,'Os Sistemas de Informação podem estruturar a base de conhecimentos da organização','',880),(3657,'São transações comerciais realizadas entre empresas, com o uso da Internet','',881),(3658,'Forma de comércio eletrônico em que empresas vendem produtos diretamente aos consumidores finais','',881),(3659,'Conjunto de redes e sub-redes de alta velocidade usado para o comércio eletrônico','',881),(3660,'Modelo de negócio baseado na Web para venda direta de produtos entre pessoas físicas','',881),(3661,'Forma de conexão remota entre dois computadores, também conhecida por Peer-to-peer','',881),(3662,'C2C','',882),(3663,'B2G','',882),(3664,'G2G','',882),(3665,'G2C','',882),(3666,'Todas as alternativas estão corretas','',882),(3667,'Contabilidade','',883),(3668,'Marketing','',883),(3669,'Financeiro','',883),(3670,'Manufatura','',883),(3671,'Aumoxarifado','',883),(3672,'Entrada de dados, processamento de transações, manutenção de banco de dados, geração de documentos e relatórios, processamento de consultas','',884),(3673,'Processamento de pedidos, processamento de clientes, processamento de fornecedores, processamento de consultas','',884),(3674,'Coleta de dados, edição de dados e correção de dados','',884),(3675,'Em lotes, em tempo real, e em tempo real com processamento adiado','',884),(3676,'Nenhuma das OUTRAS alternativas está correta','',884),(3677,'EAI - Integração das Aplicações da Empresa','',885),(3678,'ERP - Planejamento dos Recursos da Empresa','',885),(3679,'E-Commerce - Comercio Eletrônico','',885),(3680,'ECS - Sistemas de Colaboração na Empresa','',885),(3681,'Nenhuma das OUTRAS alternativas está correta','',885),(3682,'CRM - Gestão do Relacionamento com o Cliente','',886),(3683,'SIG - Sistemas de Informação Gerencial','',886),(3684,'EIS - Sistemas de Informação Executiva','',886),(3685,'KM  - Sistemas de Gestão do Conhecimento','',886),(3686,'ERP - Planejamento dos Recursos da Empresa','',886),(3687,'SCM - Gestão da Cadeia de Suprimentos','',887),(3688,'ECS - Sistema de Colaboração Empresarial','',887),(3689,'SIG - Sistemas de Informação Gerencial','',887),(3690,'KM  - Sistemas de Gestão do Conhecimento','',887),(3691,'EIS - Sistemas de Informação Executiva','',887),(3692,'ERP - Planejamento dos Recursos da Empresa','',888),(3693,'SIG - Sistemas de Informação Gerencial','',888),(3694,'ECS - Sistema de Colaboração Empresarial','',888),(3695,'EIS - Sistemas de Informação Executiva','',888),(3696,'KM  - Sistemas de Gestão do Conhecimento','',888),(3697,'EIS - Sistemas de Informação Executiva','',889),(3698,'SIG - Sistemas de Informação Gerencial','',889),(3699,'SAD - Sistemas de Apoio à Decisão','',889),(3700,'KM  - Sistemas de Gestão do Conhecimento','',889),(3701,'ERP - Planejamento dos Recursos da Empresa','',889),(3702,'Perpetuar os padrões de procedimentos da empresa como estão','',890),(3703,'Lidar com grande volume de dados provenientes de fontes diversas','',890),(3704,'Apresentar flexibilidade na elaboração e apresentação de relatórios','',890),(3705,'Fornecer tanto orientação textual quanto gráfica','',890),(3706,'Permitir análises detalhadas','',890),(3707,'SIG - Sistemas de Informação Gerencia','',891),(3708,'SAD - Sistemas de Apoio à Decisão','',891),(3709,'EIS - Sistemas de Informação Executiva','',891),(3710,'KM  - Sistemas de Gestão do Conhecimento','',891),(3711,'Nenhuma das OUTRAS alternativas está correta','',891),(3712,'Redes neurais','',892),(3713,'Sistemas especialistas','',892),(3714,'Processamento de linguagem natural','',892),(3715,'Sistemas de visão','',892),(3716,'Nenhuma das OUTRAS alternativas está correta','',892),(3717,'Realidade Virtual','',893),(3718,'Inteligência Artificial','',893),(3719,'Sistemas Especialistas','',893),(3720,'Sistemas de Gestão do Conhecimento','',893),(3721,'Nenhuma das OUTRAS alternativas está correta','',893),(3722,'Sistemas Especialistas','',894),(3723,'Inteligência Artificial','',894),(3724,'Realidade Virtual','',894),(3725,'Sistemas de Gestão do Conhecimento','',894),(3726,'Nenhuma das OUTRAS alternativas está correta','',894),(3727,'Sistemas de Gestão do Conhecimento','',895),(3728,'Inteligência Artificial','',895),(3729,'Realidade Virtual','',895),(3730,'Sistemas Especialistas','',895),(3731,'Nenhuma das OUTRAS alternativas está correta','',895),(3732,'Explicativa','',896),(3733,'Exploratória','',896),(3734,'Aplicada','',896),(3735,'Experimental','',896),(3736,'Básica','',896),(3737,'Exploratória','',897),(3738,'Explicativa','',897),(3739,'Aplicada','',897),(3740,'Experimental','',897),(3741,'Básica','',897),(3742,'Aplicada','',898),(3743,'Exploratória','',898),(3744,'Explicativa','',898),(3745,'Experimental','',898),(3746,'Básica','',898),(3747,'Experimental','',899),(3748,'Exploratória','',899),(3749,'Aplicada','',899),(3750,'Explicativa','',899),(3751,'Básica','',899),(3752,'Básica','',900),(3753,'Explicativa','',900),(3754,'Aplicada','',900),(3755,'Experimental','',900),(3756,'Exploratória','',900),(3757,'Hipótese','',901),(3758,'Enunciado','',901),(3759,'Teoria','',901),(3760,'Problema','',901),(3761,'Proposição','',901),(3762,'Método científico parte da observação assistemática de fatos, seguido da realização de experiências, das deduções lógicas e da comprovação científica dos resultados obtidos.','',902),(3763,'Método científico é a tentativa de resolver problemas por meio de suposições, isto é, de hipóteses, que possam ser testadas através de observações ou experiências.','',902),(3764,'Método científico refere-se a um aglomerado de regras básicas de como deve ser o procedimento a fim de produzir conhecimento dito científico.','',902),(3765,'Método científico é o caminho que se deve seguir para levar à formulação de uma teoria científica.','',902),(3766,'Método científico pode ser definido como a maneira ou o conjunto de regras básicas empregadas em uma investigação científica.','',902),(3767,'Popular','',903),(3768,'Científico','',903),(3769,'Religioso','',903),(3770,'Filosófico','',903),(3771,'Nenhuma das alternativas está correta','',903),(3772,'Filosófico','',904),(3773,'Científico','',904),(3774,'Religioso','',904),(3775,'Popular','',904),(3776,'Nenhuma das alternativas está correta','',904),(3777,'Científico','',905),(3778,'Popular','',905),(3779,'Religioso','',905),(3780,'Filosófico','',905),(3781,'Nenhuma das alternativas está correta','',905),(3782,'Filosófico','',906),(3783,'Popular','',906),(3784,'Religioso','',906),(3785,'Científico','',906),(3786,'Nenhuma das alternativas está correta','',906),(3787,'A advertência do ministério da Saúde tem fundamento científico, porque o fumo é um dos causadores de doenças pulmonares e altamente cancerígeno','',907),(3788,'A advertência do governo tem caráter moralista, porque preocupa-se com o mal exemplo social dessa prática para as crianças;','',907),(3789,'A advertência do governo tem fundamentação filosófica, porque homens não fumantes são mais felizes.','',907),(3790,'A advertência do governo tem caráter religioso, porque pretende associar a prática do fumo à quebra de um dogma;','',907),(3791,'A advertência do governo tem fundamento popular, porque o preço do cigarro não permite que todas as pessoas comprem cigarros;','',907),(3792,'Premissas falsas e verdadeiras','',908),(3793,'Premissas falsas','',908),(3794,'Premissas informativas','',908),(3795,'Premissas inconclusivas','',908),(3796,'Premissas verdadeiras','',908),(3797,'Científico','',909),(3798,'Indutivo','',909),(3799,'Hipotético-dedutivo','',909),(3800,'Dedutivo','',909),(3801,'Nenhuma das alternativas está correta','',909),(3802,'O texto fala do método presente no conhecimento científico.','',910),(3803,'O texto fala do conhecimento filosófico presente no saber do senso comum.','',910),(3804,'O texto fala do método indutivo no conhecimento filosófico.','',910),(3805,'O texto fala do senso comum presente no conhecimento filosófico.','',910),(3806,'O texto fala da reflexão presente no saber do senso comum.','',910),(3807,'Although crystallization of identical particles or particles of different sizes or shapes can be readily achieved, the repertoire of methods to assemble binary lattices of particles of the same sizes but with different properties is very limited.','',911),(3808,'Self-assembly of components larger than molecules into ordered arrays is an efficient way of preparing microstructured materials with interesting mechanical and optical properties.','',911),(3809,'This paper describes electrostatic self-assembly of two types of macroscopic components of identical dimensions using interactions that are generated by contact electrification.','',911),(3810,'The systems we have examined comprise two kinds of objects (usually spheres) made  of different polymericmaterials that charge with opposite electrical polarities when agitated on flat, metallic surfaces.','',911),(3811,'The interplay of repulsive interactions between like-charged objects and attractive interactions betweenunlike-charged ones results in the self-assembly of these objects into highly ordered, closed arrays. Remarkably, some of the assemblies that form are not electroneutral that is, they possess a net charge.','',911),(3812,'se for objeto de investigação planejada, desenvolvida e redigida conforme as normas metodológicas consagradas pela ciência.','',912),(3813,'se for usado apenas o processo que envolva os fatos e sua interpretação.','',912),(3814,'se gerar conhecimentos, para a aplicação prática, dirigidos à solução de problemas específicos.','',912),(3815,'se for motivada basicamente pela curiosidade.','',912),(3816,'se remeter para as contribuições de diferentes autores sobre o tema, atentando para as fontes secundárias.','',912),(3817,'Indução','',913),(3818,'Dedução','',913),(3819,'Inferência','',913),(3820,'Enunciado','',913),(3821,'Intuição','',913),(3822,'Indução','',914),(3823,'Dedução','',914),(3824,'Inferência','',914),(3825,'Conotação','',914),(3826,'Conclusão','',914),(3827,'Refletir sobre um assunto que ainda não foi satisfatoriamente respondido','',915),(3828,'Análise de obras de artes renascentistas','',915),(3829,'Tem como base o senso comum','',915),(3830,'Assunto sem discussão','',915),(3831,'Reflete os fatos religiosos','',915),(3832,'Manter a preocupação com o tema, consultar bibliografia compatível, justificar o tema escolhido, compatibilizando com os problemas formulados.','',916),(3833,'Manter a problematização e dispensar as hipóteses.','',916),(3834,'Manter a justificativa, porém rejeitar os objetivos gerais e específicos.','',916),(3835,'Manter somente o tema e o problema.','',916),(3836,'Manter preocupação com o tema que deve ser sempre original, conciliando a justificativa, problemas e objetivos.','',916),(3837,'Resumo','',917),(3838,'Desenvolvimento','',917),(3839,'Introdução','',917),(3840,'Referências','',917),(3841,'Conclusão','',917),(3842,'direta ou indireta','',918),(3843,'direta ou resumida','',918),(3844,'importante ou menos importante','',918),(3845,'direta ou final','',918),(3846,'indireta ou suplementar','',918),(3847,'citação de um texto a que tivemos acesso a partir de outro documento','',919),(3848,'omissão da citação sem alterar o sentido do texto','',919),(3849,'transcrição das idéias de um autor usando suas próprias palavras','',919),(3850,'transcrição literal de parágrafo usando exatamente as palavras usadas pelo autor do trabalho consultado','',919),(3851,'transcrição textual de parte da obra do autor consultado.','',919),(3852,'A possibilidade de sistematizar e problematizar novas ideias, a partir dos conceitos e métodos estudados.','',920),(3853,'A capacidade de memorizar a bibliografia estudada ao longo do curso','',920),(3854,'O domínio e a capacidade de reproduzir os conteúdos específicos aprendidos em seu curso.','',920),(3855,'A habilidade de realizar boas sínteses (resumos) das principais teorias da sua área de conhecimento.','',920),(3856,'A rejeição de novos autores, já que em toda área é fundamental a divulgação dos teóricos clássicos de cada área de conhecimento.','',920),(3857,'A obtenção de informações sobre a situação atual do tema ou problema pesquisado.','',921),(3858,'A definição do objetivo geral e dos objetivos específicos do projeto de pesquisa ou trabalho','',921),(3859,'A definição das técnicas de pesquisa que deverão ser utilizadas, em função das variáveis','',921),(3860,'A definição das variáveis dependentes e independentes utilizadas no problema de pesquisa','',921),(3861,'A obtenção de subsídios para a formulação da(s) hipótese(s) da pesquisa e correlação entre as variáveis.','',921),(3862,'um conjunto de um ou mais atributos que, tomados coletivamente, permitem identificar de maneira unívoca uma entidade em um conjunto de entidades, que é escolhida pelo projetista do banco de dados como de significado principal.','',922),(3863,'um conjunto de operações que tem como entrada uma ou duas relações que produzem como resultado uma nova relação.','',922),(3864,'um refinamento do conjunto de entidades em níveis sucessivos de subgrupos que indica um processo top-down de projeto, no qual as diferenciações são feitas de modo explícito.','',922),(3865,'uma propriedade decisiva das entidades de níveis superior e inferior criadas pela especialização e pela generalização.','',922),(3866,'o número de entidades em relação às quais outras entidades e os relacionamentos são diferenciados.','',922),(3867,'SELECT Nome FROM Cliente WHERE Fone IS NULL','',923),(3868,'SELECT Nome FROM Cliente WHERE Fone = \'null\'','',923),(3869,'SELECT Nome FROM Cliente WHERE Fone LIKE \'NULL\'','',923),(3870,'SELECT Nome, Fone (NULL) FROM Cliente','',923),(3871,'SELECT Nome (Fone NULL) FROM Cliente','',923),(3872,'Um atributo que pode ser a combinação de vários atributos','',924),(3873,'Um atributo que pode ter muitos valores','',924),(3874,'Uma nova entidade no banco de dados','',924),(3875,'Uma relação entre duas tabelas','',924),(3876,'Um conjunto de relações entre tabelas distintas','',924),(3877,'Um atributo que pode assumir diversos valores distintos','',925),(3878,'Vários atributos que significam a mesma coisa','',925),(3879,'Uma nova tabela para os atributos','',925),(3880,'A relação 1-N entre as tabelas','',925),(3881,'Uma entidade fraca','',925),(3882,'OUTER JOIN, combinado com WHERE','',926),(3883,'INNER JOIN, combinado com WHERE','',926),(3884,'Apenas WHERE','',926),(3885,'Não é possível no SGBD, temos que fazer este tipo de operação na aplicação','',926),(3886,'INNER JOIN, combinado com GROUP BY','',926),(3887,'Em outras palavras, qual o custo de cada departamento com seus funcionários','',927),(3888,'Quantos funcionários trabalham em cada projeto','',927),(3889,'Quantos funcionários existem em cada departamento','',927),(3890,'O comando está errado','',927),(3891,'O histórico de recebimentos de cada funcionário','',927),(3892,'SELECT nomeF, Year(data) AS tempo FROM Funcionario ORDER BY tempo DESC','',928),(3893,'SELECT nomeF, get\\_year(data) FROM Funcionario','',928),(3894,'SELECT nomeF, data AS data FROM Funcionario INNER JOIN ProjFunc using (idFunc)','',928),(3895,'SELECT nomeF, Year(data) AS tempo FROM Funcionario GROUP BY tempo','',928),(3896,'SELECT nomeF, data AS tempo FROM Funcionario HAVING Year(data) DESC','',928),(3897,'Todos os funcionarios e seus respectivos projetos (independente de data)','',929),(3898,'Os projetos atuais de cada funcionário','',929),(3899,'Apenas o último projeto de cada funcionário','',929),(3900,'O Primeiro projeto de cada funcionário','',929),(3901,'O Número de projetos de cada funcionário','',929),(3902,'SELECT nomeF, idProj FROM Funcionario LEFT OUTER JOIN ProjFunc USING (idFunc) WHERE Year(dataI) = 2018 AND idProj IS NULL','',930),(3903,'Esse tipo de listagem tem que ser feito apenas na aplicação','',930),(3904,'SELECT nomeF, descrP FROM Funcionario INNER JOIN ProjFunc USING (idFunc) WHERE idProj IS NULL','',930),(3905,'SELECT nomeF FROM Funcionario WHERE idFunc NOT IN (SELECT idFunc FROM ProjFunc)','',930),(3906,'SELECT nomeF FROM Funcionario INNER JOIN ProjFunc USING (idFunc) WHERE idProj < 0','',930),(3907,'Cliente (30, \"Simone Cunha\"); e    Item (2, 2, 15);','',931),(3908,'Pedido (30, 2, 2, 2010);      e    Item (30, 4, 2);','',931),(3909,'Pedido (2, 1, 3, 2010);       e    Cliente (4, \"Marcelo de Almeida\");','',931),(3910,'Cliente (2, \"Pedro Santos\");  e    Cliente (3, \"Marta Ramos\");','',931),(3911,'Item (2, 3, 5);               e    Item (3, 4, 10);','',931),(3912,'Deve-se utilizar HAVING para fazer este tipo de filtro','',932),(3913,'O WHERE serve tanto para filtrar registros quanto contagens e agrupamentos','',932),(3914,'Ambos servem para este tipo de filtro','',932),(3915,'Nenhum dos dois serve. Não é possível fazer este tipo de filtro','',932),(3916,'O filtro tem que ser feito na aplicação','',932),(3917,'O id e o nome do funcionário que tem um salário maior que todos os funcionários que trabalham no projeto 2','',933),(3918,'O Funcionário que trabalha no Projeto 2','',933),(3919,'A quantidade de funcionários do Projeto 2','',933),(3920,'Qual departamento tem mais funcionários no projeto 2','',933),(3921,'Qual o Id e o Nome dos Funcionários do projeto 2','',933),(3922,'1.','',934),(3923,'2.','',934),(3924,'3.','',934),(3925,'4.','',934),(3926,'0.','',934),(3927,'3.','',935),(3928,'1.','',935),(3929,'2.','',935),(3930,'4.','',935),(3931,'0.','',935),(3932,'2.','',936),(3933,'1.','',936),(3934,'3.','',936),(3935,'4.','',936),(3936,'0.','',936),(3937,'4.','',937),(3938,'1.','',937),(3939,'3.','',937),(3940,'2.','',937),(3941,'0.','',937),(3942,'0.','',938),(3943,'1.','',938),(3944,'3.','',938),(3945,'4.','',938),(3946,'2.','',938),(3947,'distribuir sem custo apenas o programa executável.','',939),(3948,'limitar o tempo de utilização gratuito.','',939),(3949,'cobrar pelo uso de funcionalidades adicionais do \\emph{software} aberto.','',939),(3950,'restringir o seu uso para fins comerciais.','',939),(3951,'manter sigilo de partes do seu código fonte.','',939),(3952,'restringir a modificação do código fonte.','',940),(3953,'limitar o tempo de utilização gratuito.','',940),(3954,'cobrar pelo uso de funcionalidades adicionais do \\emph{software} aberto.','',940),(3955,'restringir o seu uso para fins não acadêmicos.','',940),(3956,'manter sigilo de partes do seu código fonte.','',940),(3957,'ter restrições impostas pelo desenvolvedor.','',941),(3958,'limitar o tempo de utilização gratuito.','',941),(3959,'cobrar pelo uso de funcionalidades adicionais do \\emph{software} aberto.','',941),(3960,'proibir o uso em produtos comerciais.','',941),(3961,'manter sigilo de partes do seu código fonte.','',941),(3962,'restringir a redistribuição do código fonte.','',942),(3963,'limitar o tempo de utilização gratuito.','',942),(3964,'cobrar pelo uso de funcionalidades adicionais do \\emph{software} aberto.','',942),(3965,'proibir o uso em mais de uma máquina do usuário.','',942),(3966,'manter sigilo de partes do seu código fonte.','',942),(3967,'cobrar por serviços de manutenção.','',943),(3968,'restringir o uso do programa.','',943),(3969,'limitar o tempo de utilização gratuito.','',943),(3970,'cobrar pelo uso funcionalidades adicionais do \\emph{software} aberto.','',943),(3971,'manter sigilo de partes do seu código fonte.','',943),(3972,'Todo \\emph{software} livre é aberto.','',944),(3973,'Todo \\emph{software} aberto é livre.','',944),(3974,'(nenhuma das outras alternativas)','',944),(3975,'Todo \\emph{software} gratuito é livre.','',944),(3976,'Todo \\emph{software} gratuito é aberto.','',944),(3977,'Um \\emph{software} livre é aberto.','',945),(3978,'Um \\emph{software} aberto é livre.','',945),(3979,'Um \\emph{software} gratuito é livre.','',945),(3980,'(nenhuma das outras alternativas)','',945),(3981,'Um \\emph{software} gratuito é aberto.','',945),(3982,'Todo \\emph{software} aberto é gratuito.','',946),(3983,'Todo \\emph{software} gratuito é livre.','',946),(3984,'Todo \\emph{software} aberto é livre.','',946),(3985,'Todo \\emph{software} gratuito é aberto.','',946),(3986,'(nenhuma das outras alternativas)','',946),(3987,'Um \\emph{software} livre é gratuito.','',947),(3988,'Um \\emph{software} gratuito é aberto.','',947),(3989,'Um \\emph{software} aberto é livre.','',947),(3990,'Um \\emph{software} gratuito é livre.','',947),(3991,'(nenhuma das outras alternativas)','',947),(3992,'Todo \\emph{software} aberto tem uso irrestrito.','',948),(3993,'Todo \\emph{software} com uso irrestrito é livre.','',948),(3994,'Todo \\emph{software} aberto é livre.','',948),(3995,'(nenhuma das outras alternativas)','',948),(3996,'Todo \\emph{software} com uso irrestrito é aberto.','',948),(3997,'criar um ambiente computacional com um sistema operacional que é executado utilizando os recursos de uma máquina virtual.','',949),(3998,'criar um ambiente de \\emph{software} que permite simular realidade virtual num sistema operacional convidado.','',949),(3999,'criar um ambiente computacional de realidade virtual que utiliza os recursos de uma máquina virtual.','',949),(4000,'criar um ambiente de \\emph{software} que permite simular realidade virtual num sistema operacional hospedeiro.','',949),(4001,'criar um ambiente computacional com um sistema operacional que é executado utilizando os recursos de uma máquina física.','',949),(4002,'executar um sistema operacional convidado que utiliza os recursos de uma máquina virtual criada por um sistema operacional hospedeiro.','',950),(4003,'executar um sistema operacional convidado que utiliza os recursos de uma máquina virtual criada por um sistema operacional convidado.','',950),(4004,'executar um sistema operacional convidado que utiliza os recursos de uma máquina física criada por um sistema operacional hospedeiro.','',950),(4005,'executar um sistema operacional hospedeiro que utiliza os recursos de uma máquina virtual criada por um sistema operacional hospedeiro.','',950),(4006,'executar um sistema operacional hospedeiro que utiliza os recursos de uma máquina física criada por um sistema operacional convidado.','',950),(4007,'executar aplicativos de um sistema operacional convidado dentro de uma máquina virtual.','',951),(4008,'executar aplicativos de um sistema operacional convidado dentro de uma máquina física.','',951),(4009,'executar aplicativos de um sistema operacional hospedeiro dentro de uma máquina virtual.','',951),(4010,'executar um sistema operacional hospedeiro dentro de um aplicativo virtual.','',951),(4011,'executar um sistema operacional hospedeiro dentro de uma máquina física.','',951),(4012,'rodar aplicativos de um sistema operacional convidado dentro de uma máquina virtual.','',952),(4013,'rodar aplicativos de um sistema operacional convidado dentro de uma máquina física.','',952),(4014,'rodar aplicativos de um sistema operacional hospedeiro dentro de uma máquina virtual.','',952),(4015,'rodar um sistema operacional hospedeiro dentro de um aplicativo virtual.','',952),(4016,'rodar um sistema operacional hospedeiro dentro de uma máquina física.','',952),(4017,'criar um sistema operacional convidado dentro de uma máquina virtual.','',953),(4018,'criar um sistema operacional convidado dentro de uma máquina física.','',953),(4019,'criar um sistema operacional hospedeiro dentro de uma máquina virtual.','',953),(4020,'criar um sistema operacional hospedeiro dentro de uma máquina física.','',953),(4021,'(nenhuma das outras alternativas)','',953),(4022,'o usuário atual não têm privilégios de super usuário (\\textit{super user}).','',954),(4023,'é necessário trocar de usuário (\\textit{switch user}) para um usuário comum.','',954),(4024,'é necessário encerrar a seção do shell como super usuário (\\textit{super user}).','',954),(4025,'é necessário iniciar a seção do shell como usuário simples (\\textit{simple user}).','',954),(4026,'o usuário atual não têm privilégios de usuário simples (\\textit{simple user}).','',954),(4027,'o usuário atual não têm privilégios de super usuário (\\textit{super user}).','',955),(4028,'é necessário trocar de usuário (\\textit{switch user}) para um usuário comum.','',955),(4029,'é necessário encerrar a seção do shell como super usuário (\\textit{super user}).','',955),(4030,'é necessário iniciar a seção do shell como usuário simples (\\textit{simple user}).','',955),(4031,'o usuário atual não têm privilégios de usuário simples (\\textit{simple user}).','',955),(4032,'o usuário atual não têm privilégios de super usuário (\\textit{super user}).','',956),(4033,'é necessário trocar de usuário (\\textit{switch user}) para um usuário comum.','',956),(4034,'é necessário encerrar a seção do shell como super usuário (\\textit{super user}).','',956),(4035,'é necessário iniciar a seção do shell como usuário simples (\\textit{simple user}).','',956),(4036,'o usuário atual não têm privilégios de usuário simples (\\textit{simple user}).','',956),(4037,'o usuário atual não têm privilégios de super usuário (\\textit{super user}).','',957),(4038,'é necessário trocar de usuário (\\textit{switch user}) para um usuário comum.','',957),(4039,'é necessário encerrar a seção do shell como super usuário (\\textit{super user}).','',957),(4040,'é necessário iniciar a seção do shell como usuário simples (\\textit{simple user}).','',957),(4041,'o usuário atual não têm privilégios de usuário simples (\\textit{simple user}).','',957),(4042,'o usuário atual não têm privilégios de super usuário (\\textit{super user}).','',958),(4043,'é necessário trocar de usuário (\\textit{switch user}) para um usuário comum.','',958),(4044,'é necessário encerrar a seção do shell como super usuário (\\textit{super user}).','',958),(4045,'é necessário iniciar a seção do shell como usuário simples (\\textit{simple user}).','',958),(4046,'o usuário atual não têm privilégios de usuário simples (\\textit{simple user}).','',958),(4047,'Este é um arquivo; o dono pode ler e gravar; o grupo pode ler; os outros podem ler.','',959),(4048,'O nome do arquivo está oculto.','',959),(4049,'O arquivo foi modificado em 2017.','',959),(4050,'O arquivo foi criado por ubun.','',959),(4051,'(nenhuma das outras alternativas)','',959),(4052,'O nome do arquivo é x.','',960),(4053,'Este é um arquivo; o dono pode gravar; o grupo pode ler; os outros podem ler e gravar.','',960),(4054,'O arquivo foi modificado em 2017.','',960),(4055,'O arquivo foi criado por ubun.','',960),(4056,'(nenhuma das outras alternativas)','',960),(4057,'O arquivo tem 2017 bytes.','',961),(4058,'Este é um arquivo; o dono pode ler e gravar; o grupo pode ler; os outros não têm permissão alguma.','',961),(4059,'O nome do arquivo está oculto.','',961),(4060,'O arquivo foi criado por ubun.','',961),(4061,'(nenhuma das outras alternativas)','',961),(4062,'O arquivo foi criado por irin.','',962),(4063,'Este é um arquivo; o dono pode ler e gravar; o grupo pode ler; os outros podem ler.','',962),(4064,'O nome do arquivo está oculto.','',962),(4065,'O arquivo foi modificado em 2017.','',962),(4066,'(nenhuma das outras alternativas)','',962),(4067,'(nenhuma das outras alternativas)','',963),(4068,'Este é um arquivo; o dono pode ler e gravar; o grupo pode ler; os outros podem ler.','',963),(4069,'O nome do arquivo está oculto.','',963),(4070,'O arquivo foi modificado em 2017.','',963),(4071,'O arquivo foi criado por ubun.','',963),(4072,'V ; V ; F.','',964),(4073,'V ; F ; F.','',964),(4074,'F ; V ; F.','',964),(4075,'F ; F ; F.','',964),(4076,'(nenhuma das outras alternativas)','',964),(4077,'V ; V ; F.','',965),(4078,'V ; F ; F.','',965),(4079,'F ; V ; F.','',965),(4080,'F ; F ; F.','',965),(4081,'(nenhuma das outras alternativas)','',965),(4082,'V ; V ; F.','',966),(4083,'V ; F ; F.','',966),(4084,'F ; V ; F.','',966),(4085,'F ; F ; F.','',966),(4086,'(nenhuma das outras alternativas)','',966),(4087,'V ; V ; F.','',967),(4088,'V ; F ; F.','',967),(4089,'F ; V ; F.','',967),(4090,'F ; F ; F.','',967),(4091,'(nenhuma das outras alternativas)','',967),(4092,'V ; V ; F.','',968),(4093,'V ; F ; F.','',968),(4094,'F ; V ; F.','',968),(4095,'F ; F ; F.','',968),(4096,'(nenhuma das outras alternativas)','',968),(4097,'Erro','',969),(4098,'1 * 1 = 1','',969),(4099,'0 * 1 = 0','',969),(4100,'1 * 2 = 2','',969),(4101,'0 * 0 = 0','',969),(4102,'Erro','',970),(4103,'1 * 1 = 1','',970),(4104,'0 * 1 = 0','',970),(4105,'1 * 2 = 2','',970),(4106,'0 * 0 = 0','',970),(4107,'1 * 2 = 2','',971),(4108,'Erro','',971),(4109,'1 * 1 = 1','',971),(4110,'0 * 1 = 0','',971),(4111,'0 * 0 = 0','',971),(4112,'Erro','',972),(4113,'1 * 1 = 1','',972),(4114,'0 * 1 = 0','',972),(4115,'1 * 2 = 2','',972),(4116,'0 * 0 = 0','',972),(4117,'1 * 2 = 2','',973),(4118,'Erro','',973),(4119,'1 * 1 = 1','',973),(4120,'0 * 1 = 0','',973),(4121,'0 * 0 = 0','',973),(4122,'O programador criou um grupo, adicionou um usuário a este grupo e exibiu os grupos deste usuário.','',974),(4123,'O root criou um grupo, adicionou-se ao grupo e exibiu os usuários deste grupo.','',974),(4124,'O programador criou um grupo, adicionou-se ao grupo e exibiu os usuários deste grupo.','',974),(4125,'O root criou um usuário, adicionou-se a um grupo e exibiu os grupos deste usuário.','',974),(4126,'O programador criou um grupo, adicionou-se a um grupo e exibiu os usuários desse grupo.','',974),(4127,'O programador criou um grupo, adicionou um usuário a este grupo e exibiu os grupos deste usuário.','',975),(4128,'O root criou um grupo, adicionou-se ao grupo e exibiu os usuários deste grupo.','',975),(4129,'O programador criou um grupo, adicionou-se ao grupo e exibiu os usuários deste grupo.','',975),(4130,'O root criou um usuário, adicionou-se a um grupo e exibiu os grupos deste usuário.','',975),(4131,'O programador criou um grupo, adicionou-se a um grupo e exibiu os usuários desse grupo.','',975),(4132,'O programador criou um grupo, adicionou um usuário a este grupo e exibiu os grupos deste usuário.','',976),(4133,'O root criou um grupo, adicionou-se ao grupo e exibiu os usuários deste grupo.','',976),(4134,'O programador criou um grupo, adicionou-se ao grupo e exibiu os usuários deste grupo.','',976),(4135,'O root criou um usuário, adicionou-se a um grupo e exibiu os grupos deste usuário.','',976),(4136,'O programador criou um grupo, adicionou-se a um grupo e exibiu os usuários desse grupo.','',976),(4137,'O programador criou um grupo, adicionou um usuário a este grupo e exibiu os grupos deste usuário.','',977),(4138,'O root criou um grupo, adicionou-se ao grupo e exibiu os usuários deste grupo.','',977),(4139,'O programador criou um grupo, adicionou-se ao grupo e exibiu os usuários deste grupo.','',977),(4140,'O root criou um usuário, adicionou-se a um grupo e exibiu os grupos deste usuário.','',977),(4141,'O programador criou um grupo, adicionou-se a um grupo e exibiu os usuários desse grupo.','',977),(4142,'O programador criou um grupo, adicionou um usuário a este grupo e exibiu os grupos deste usuário.','',978),(4143,'O root criou um grupo, adicionou-se ao grupo e exibiu os usuários deste grupo.','',978),(4144,'O programador criou um grupo, adicionou-se ao grupo e exibiu os usuários deste grupo.','',978),(4145,'O root criou um usuário, adicionou-se a um grupo e exibiu os grupos deste usuário.','',978),(4146,'O programador criou um grupo, adicionou-se a um grupo e exibiu os usuários desse grupo.','',978),(4147,'OpenOffice, MySQL, Mozilla Firefox.','',979),(4148,'OpenOffice, WinRAR, WinZip, Acrobat Reader.','',979),(4149,'Opera Browser, MySQL, Mozilla Firefox.','',979),(4150,'Opera Browser, WinRAR, WinZip, Mozilla Firefox.','',979),(4151,'(nenhuma das outras alternativas)','',979),(4152,'OpenOffice, MySQL, Acrobat Reader.','',980),(4153,'OpenOffice, WinRAR, WinZip, Acrobat Reader.','',980),(4154,'Opera Browser, MySQL, Mozilla Firefox.','',980),(4155,'Opera Browser, WinRAR, WinZip, Mozilla Firefox.','',980),(4156,'(nenhuma das outras alternativas)','',980),(4157,'OpenOffice, MySQL, Mozilla Firefox.','',981),(4158,'OpenOffice, WinRAR, WinZip, Acrobat Reader.','',981),(4159,'Opera Browser, MySQL, Mozilla Firefox.','',981),(4160,'Opera Browser, WinRAR, WinZip, Mozilla Firefox.','',981),(4161,'(nenhuma das outras alternativas)','',981),(4162,'OpenOffice, MySQL, Mozilla Firefox.','',982),(4163,'OpenOffice, WinRAR, WinZip, Acrobat Reader.','',982),(4164,'Opera Browser, MySQL, Mozilla Firefox.','',982),(4165,'Opera Browser, WinRAR, WinZip, Mozilla Firefox.','',982),(4166,'(nenhuma das outras alternativas)','',982),(4167,'OpenOffice, MySQL, Mozilla Firefox.','',983),(4168,'OpenOffice, WinRAR, WinZip, Acrobat Reader.','',983),(4169,'Opera Browser, MySQL, Mozilla Firefox.','',983),(4170,'Opera Browser, WinRAR, WinZip, Mozilla Firefox.','',983),(4171,'(nenhuma das outras alternativas)','',983),(4172,'GPL (Free Software Foundation), MPL (Mozilla), BSD (Berkeley).','',984),(4173,'GPL (Free Software Foundation), MPL (Mozilla), EULA (Microsoft).','',984),(4174,'GPL (Free Software Foundation), Freeware, MIT.','',984),(4175,'Shareware, Freeware, BSD (Berkeley).','',984),(4176,'Shareware, Freeware, EULA (Microsoft).','',984),(4177,'Shareware, Freeware, EULA (Microsoft).','',985),(4178,'GPL (Free Software Foundation), MPL (Mozilla), BSD (Berkeley).','',985),(4179,'GPL (Free Software Foundation), MPL (Mozilla), EULA (Microsoft).','',985),(4180,'GPL (Free Software Foundation), Freeware, MIT.','',985),(4181,'Shareware, Freeware, BSD (Berkeley).','',985),(4182,'GPL (Free Software Foundation), Apache, BSD (Berkeley).','',986),(4183,'GPL (Free Software Foundation), Apache, EULA (Microsoft).','',986),(4184,'GPL (Free Software Foundation), Freeware, MIT.','',986),(4185,'Shareware, Freeware, BSD (Berkeley).','',986),(4186,'Shareware, Freeware, EULA (Microsoft).','',986),(4187,'Demoware, Freeware, EULA (Microsoft).','',987),(4188,'GPL (Free Software Foundation), MPL (Mozilla), BSD (Berkeley).','',987),(4189,'GPL (Free Software Foundation), MPL (Mozilla), EULA (Microsoft).','',987),(4190,'GPL (Free Software Foundation), Freeware, MIT.','',987),(4191,'Demoware, Freeware, BSD (Berkeley).','',987),(4192,'GPL (Free Software Foundation), Apache, BSD (Berkeley).','',988),(4193,'GPL (Free Software Foundation), Apache, EULA (Microsoft).','',988),(4194,'GPL (Free Software Foundation), Freeware, MIT.','',988),(4195,'Demoware, Freeware, BSD (Berkeley).','',988),(4196,'Demoware, Freeware, EULA (Microsoft).','',988),(4197,'garante o direito de usar o produto para qualquer finalidade; não permite modificar o produto; cobra taxas de licenciamento e cobra pagamento ao desenvolvedor.','',989),(4198,'restringe o direito de usar o produto; não permite modificar o produto; não permite acesso ao código fonte.','',989),(4199,'não permite modificar o produto; impõe restrições à distribuição de cópias; pode conceder algumas proteções e garantias ao usuário.','',989),(4200,'impõe restrições à distribuição de cópias; pode conceder algumas proteções e garantias ao usuário; cobra taxas de licenciamento e cobra pagamento ao desenvolvedor.','',989),(4201,'(nenhuma das outras alternativas)','',989),(4202,'restringe o direito de usar o produto; permite modificar o produto; cobra taxas de licenciamento e cobra pagamento ao desenvolvedor.','',990),(4203,'restringe o direito de usar o produto; não permite modificar o produto; não permite acesso ao código fonte.','',990),(4204,'não permite modificar o produto; impõe restrições à distribuição de cópias; pode conceder algumas proteções e garantias ao usuário.','',990),(4205,'impõe restrições à distribuição de cópias; pode conceder algumas proteções e garantias ao usuário; cobra taxas de licenciamento e cobra pagamento ao desenvolvedor.','',990),(4206,'(nenhuma das outras alternativas)','',990),(4207,'restringe o direito de usar o produto; permite acesso ao código fonte; cobra taxas de licenciamento e cobra pagamento ao desenvolvedor.','',991),(4208,'restringe o direito de usar o produto; não permite modificar o produto; não permite acesso ao código fonte.','',991),(4209,'não permite modificar o produto; impõe restrições à distribuição de cópias; pode conceder algumas proteções e garantias ao usuário.','',991),(4210,'impõe restrições à distribuição de cópias; pode conceder algumas proteções e garantias ao usuário; cobra taxas de licenciamento e cobra pagamento ao desenvolvedor.','',991),(4211,'(nenhuma das outras alternativas)','',991),(4212,'(nenhuma das outras alternativas)','',992),(4213,'restringe o direito de usar o produto; não permite acesso ao código fonte; cobra taxas de licenciamento e cobra pagamento ao desenvolvedor.','',992),(4214,'restringe o direito de usar o produto; não permite modificar o produto; não permite acesso ao código fonte.','',992),(4215,'não permite modificar o produto; impõe restrições à distribuição de cópias; pode conceder algumas proteções e garantias ao usuário.','',992),(4216,'impõe restrições à distribuição de cópias; pode conceder algumas proteções e garantias ao usuário; cobra taxas de licenciamento e cobra pagamento ao desenvolvedor.','',992),(4217,'(nenhuma das outras alternativas)','',993),(4218,'restringe o direito de usar o produto; não permite modificar o produto; cobra taxas de licenciamento e cobra pagamento ao desenvolvedor.','',993),(4219,'restringe o direito de usar o produto; não permite modificar o produto; não permite acesso ao código fonte.','',993),(4220,'não permite modificar o produto; impõe restrições à distribuição de cópias; pode conceder algumas proteções e garantias ao usuário.','',993),(4221,'impõe restrições à distribuição de cópias; pode conceder algumas proteções e garantias ao usuário; cobra taxas de licenciamento e cobra pagamento ao desenvolvedor.','',993),(4222,'Privacidade do usuário','',994),(4223,'Integridade de dados','',994),(4224,'Disponibilidade de sistemas','',994),(4225,'Confidencialidade da informação','',994),(4226,'Integridade de telecomunicações','',994),(4227,'Um risco é bloqueado se uma vulnerabilidade for controlada por mecanismos de segurança.','',995),(4228,'O risco de perda de dados existe se o usuário adotar senha frágil.','',995),(4229,'Se houver ponto de vulnerabilidade, uma ameaça pode existir mesmo com a presença de controles.','',995),(4230,'Se atacante puder explorar pontos vulneráveis em um sistema, poderá provocar perdas.','',995),(4231,'Mecanismos de controle podem ser usados para remover ou reduzir uma vulnerabilidade.','',995),(4232,'Sistemas que usam canal público como a internet não podem transmitir dados classificados como secretos.','',996),(4233,'A interceptação de dados em um canal de comunicação implica perda de confidencialidade, se os dados não estiverem cifrados.','',996),(4234,'A disponibilidade de informações pode ser afetada caso uma ameaça de interrupção se efetive por falha em segurança física.','',996),(4235,'Modificação não autorizada em registros de um banco de dados implica falta de integridade.','',996),(4236,'A criação de uma conta falsa de usuário administrador representa quebra de integridade e pode levar a quebra de confidencialidade.','',996),(4237,'Linhas telefônicas podem ser interceptadas (grampeadas) e, portanto, não podem conferir confidencialidade.','',997),(4238,'Um portal de notícias na Web tipicamente requer integridade, para que seu conteúdo não seja adulterado, e disponibilidade.','',997),(4239,'Um sistema financeiro que permita transações via Web tipicamente requer confidencialidade, integridade e disponibilidade simultaneamente.','',997),(4240,'Webmail é exemplo de sistema que requer que os três requisitos básicos de segurança sejam implementados (confidencialidade, integridade e disponibilidade).','',997),(4241,'Um programa infectado por vírus é exemplo de perda de integridade.','',997),(4242,'Programas que realizam monitoramento de tráfego de internet são ferramentas que quebram a confidencialidade das comunicações.','',998),(4243,'Autenticidade é um serviço de segurança que visa garantir com quem se está comunicando.','',998),(4244,'Controle de acesso é um serviço de segurança que auxilia na implementação de autenticidade de entidade.','',998),(4245,'Reordenação e repetição de pacotes de internet são exemplos ataque a integridade.','',998),(4246,'É exemplo que requer irretratabilidade: contratos digitais que não podem ser retratados após serem firmados.','',998),(4247,'Corporações que planejarem uma política de segurança garantem a proteção de seus dados.','',999),(4248,'Segurança da Informação é uma questão de gestão, pois envolve estratégias de negócios e definição de procedimentos para proteção de dados.','',999),(4249,'Políticas de segurança da informação devem englobar restrições para acessos físicos a ambientes e procedimentos comportamentais dos recursos humanos.','',999),(4250,'Normas internacionais para segurança da informação, quando seguidas, podem melhorar a competitividade de empresas, ao reduzirem riscos.','',999),(4251,'Common Criteria pode ser usado em conjunto com outras normas de segurança, com o objetivo de auxiliar na produção de sistemas seguros.','',999),(4252,'Se a chave tiver mesmo comprimento que a mensagem, é inviável decifrar uma cifra de Vigenere.','',1000),(4253,'Se Ki é o i-ésimo caractere da chave, considerando-se que a chave se repete até preencher o comprimento da mensagem, para decifrar basta calcular (Ci - Ki + 26)(mod 26)','',1000),(4254,'A cifra de Vigenere é vulnerável a ataque de análise de frequência de letras, embora em menor grau que a cifra de César.','',1000),(4255,'Quanto mais longo for um texto codificado pela cifra de Vigenere mais eficiente se torna a técnica de criptanálise de Babbage.','',1000),(4256,'Quanto mais curta for a chave mais rapidamente uma cifra de Vigenere pode ser quebrada.','',1000),(4257,'A cifra de Hill é insegura, pois usa a técnica de substituição monoalfabética, com base em uma chave numérica em forma de matriz.','',1001),(4258,'Uma matriz de ordem não quadrada não pode ser usada como chave secreta na cifra de Hill.','',1001),(4259,'Uma matriz não inversível não pode ser usada como chave secreta na cifra de Hill.','',1001),(4260,'A matriz identidade teoricamente pode ser usada como chave secreta na cifra de Hill, mas na prática é completamente insegura.','',1001),(4261,'A cifra de Hill é insegura para uso nos dias atuais, pois a captura de grande quantidade de tráfego de mensagens cifradas com uma mesma chave pode levar ao descobrimento da chave secreta.','',1001),(4262,'A cifra de Hill é uma cifra polialfabética que também aplica a técnica de transposição, pois a multiplicação matricial provoca um embaralhamento dos caracteres, alterando suas posições.','',1002),(4263,'Inventar e usar uma cifra proprietária, inédita e portanto desconhecida, vai contra o princípio de Kerckhoffs.','',1002),(4264,'Usar um padrão de indústria, como o AES, cujo algoritmo é público e amplamente estudado, é seguir um princípio de Kerckhoffs.','',1002),(4265,'Uma fraqueza da cifra de Vigenere é que ela satisfaz o princípio de Confusão, mas não o de Difusão.','',1002),(4266,'Resultados da Teoria da Informação permitiram caracterizar que baixa entropia representa redundância, o que indica vulnerabilidade da cifra.','',1002),(4267,'O 3DES é mais forte e mais lento que o DES, porém mais fraco e mais veloz que AES.','',1003),(4268,'O DES realiza substituições e transposições várias vezes para cada bloco, de forma a eliminar relações lineares entre chave e mensagem.','',1003),(4269,'A escolha do vetor de inicialização (VI) para o modo de operação CBC deve ser criteriosa para não adicionar vulnerabilidade.','',1003),(4270,'AES não é o único padrão em cifra de bloco em uso no mundo.','',1003),(4271,'O modo de operação escolhido para ser usado com uma cifra de bloco de bloco pode inserir vulnerabilidade a ela.','',1003),(4272,'SHA-2, assim como o antecessor SHA-1, é considerado obsoleto e deve ser removido de sistemas computacionais e criptossistemas que dependem de hash.','',1004),(4273,'Código de detecção de erros como CRC não pode substituir hash criptográfico, pois não satisfaz simultaneamente propriedades como resistência a colisão e a primeira e segunda inversões.','',1004),(4274,'Se for computacionalmente viável prever o valor de um único bit de saída de uma função hash, com probabilidade significativa acima de 50\\%, é possível prever também outros bits.','',1004),(4275,'Se uma função hash criptográfica satisfizer o efeito avalanche e as 3 propriedades básicas, pode ser usada para auxiliar na detecção de adulteração de arquivos.','',1004),(4276,'Aplicar uma função hash sobre um valor de senha alfanumérica produz um resultado binário com maior entropia que o dado de entrada.','',1004),(4277,'MAC é uma denominação para autenticação de mensagem baseada em função hash.','',1005),(4278,'Função hash, por definição, não depende de chave secreta.','',1005),(4279,'HMAC combina função hash com mensagem e chave secreta compartilhada entre emissor e receptor, de modo a implementar autenticação de origem da mensagem.','',1005),(4280,'Autenticação de origem de mensagem é necessário, por exemplo, para um sistema ser capaz de rejeitar pacotes falsos injetados na rede.','',1005),(4281,'O uso de código de autenticação de mensagem permite que adulterações sejam detectadas.','',1005),(4282,'A dificuldade de fatoração de inteiros protege o RSA, pois não sabemos fatorar inteiros muito longos.','',1006),(4283,'Para que uma chave secreta não possa ser calculada a partir da chave pública, uma estratégia comum é usar um problema computacional difícil, como o de fatoração de inteiros ou logaritmo discreto.','',1006),(4284,'Como a chave pública está relacionada matematicamente com a chave secreta, é possível operar com uma chave e inverter a operação com a outra.','',1006),(4285,'Como a chave pública está relacionada matematicamente com a chave secreta, é necessário que os parâmetros para geração do par de chaves sejam criteriosamente definidos.','',1006),(4286,'Nenhuma das outras alternativas.','',1006),(4287,'PKCS\\#1 especifica como o RSA pode ser implementado de forma segura e deterministicamente.','',1007),(4288,'O expoente $e$ da chave pública é a inversa modular do expoente secreto $d$ do RSA, de modo de $(m^e)^d = m^1 = m$, nos respectivos cálculos de aritmética modular.','',1007),(4289,'O RSA ser comutativo significa que, em essência, vale: $(m^e)^d = (m^d)^e = m$, nos respectivos cálculos de aritmética modular.','',1007),(4290,'Por conta das operações de exponenciação, o RSA é lento quando comparado com o AES.','',1007),(4291,'Para obter maior eficiência nas operações de cifragem, é comum a escolha de expoente de chave pública na forma $(2^i + 1)$.','',1007),(4292,'A autorização de um usuário para entrar em um sistema é concedida quando a identificação é bem sucedida e vale para apenas uma sessão de comunicação.','',1008),(4293,'Autenticação de mensagem possibilita determinar se a origem de uma mensagem é de um usuário/equipamento que compartilha o mesmo segredo que o receptor.','',1008),(4294,'Autenticação de entidade pressupõe uma comunicação em tempo real entre dois participantes.','',1008),(4295,'A verificação de uma entidade ocorre após sua correta identificação.','',1008),(4296,'Reconhecimento de voz é um tipo de autenticação por biometria dinâmica.','',1008),(4297,'Transmitir e armazenar hash de senha é a forma recomendada para gestão de senhas.','',1009),(4298,'Embora seja mais vulnerável a ataques, o mecanismo de autenticação por senha é o mais popular e mais usado.','',1009),(4299,'Por possuírem baixa aleatoriedade e baixa entropia, senhas não devem ser usadas como chave simétrica.','',1009),(4300,'Senhas construídas a partir das iniciais das palavras de uma frase pessoal e relativamente longa são menos vulneráveis a ataque de dicionário.','',1009),(4301,'Argon2 é um algoritmo recomendado para se implementar mecanismos de autenticação por senha.','',1009),(4302,'Em autenticação unilateral por desafio-resposta de chave pública, o servidor encripta um nonce com sua chave secreta, para que o requerente decripte usando a chave pública.','',1010),(4303,'Mecanismo de autenticação por senha é vulnerável a ataque de repetição quando não há forma de se identificar temporalmente um acesso.','',1010),(4304,'A diferença entre autenticação por senha e desafio-resposta é que no segundo não há transmissão de segredos.','',1010),(4305,'Em autenticação por desafio-resposta, quem deseja obter acesso é desafiado a dar como resposta um cálculo que somente o conhecedor de um segredo seria capaz de efetuar.','',1010),(4306,'Autenticação mútua é necessária quando usuário e servidor precisam de garantias de quem é o seu interlocutor.','',1010),(4307,'Mecanismos de autenticação biométrica são o que há mais avançado e seguro para controle de acesso.','',1011),(4308,'Identificadores biométricos podem ser fisiológicos ou comportamentais, como impressão digital e voz, respectivamente.','',1011),(4309,'Autenticação biométrica requer presença física na fase de inscrição e no momento do reconhecimento.','',1011),(4310,'Identificação biométrica pode envolver não-cooperação do usuário, enquanto autenticação pressupõe cooperação.','',1011),(4311,'Ao contrário do que muitos usuários imaginam, mecanismo de biometria por impressão digital armazena e compara pontos (minutia) e não a fotografia das pontas dos dedos.','',1011),(4312,'Atacantes numa rede de computadores são detectados pelo mecanismo firewall.','',1012),(4313,'Firewall pode proteger uma rede corporativa de alguns tipos de vírus que chegam pela Internet.','',1012),(4314,'Novos vírus podem passar por um firewall, por isso são necessárias atualização e reconfiguração contínuas.','',1012),(4315,'Firewall pode impedir a passagem de pacotes legítimos e criar transtornos aos usuários.','',1012),(4316,'Um firewall do tipo permissivo tem a desvantagem de estar mais vulnerável a ataques desconhecidos.','',1012),(4317,'Firewall é o mecanismo de defesa mais abrangente, por atuar no nível de pacotes de rede.','',1013),(4318,'Firewalls do tipo filtro de pacotes com base em estados de sessão são mais lentos que os filtros estáticos.','',1013),(4319,'Tabelas de estados de conexões permitem o tratamento de ataques específicos formados por pacotes individualmente corretos, mas inconsistentes ou danosos em seu conjunto.','',1013),(4320,'Servidor Proxy que intermedia conexões TCP/IP funcionam como um Firewall.','',1013),(4321,'Sistema de Prevenção de Intrusão é uma evolução de firewall do tipo proxy e são capazes de desencapsular os pacotes até o nível de aplicação.','',1013),(4322,'Por operar em nível de rede e transporte, firewall do tipo Proxy é mais completo que firewall de filtro.','',1014),(4323,'Firewalls do tipo filtro de pacotes são indicados para permitir alta vazão de tráfego.','',1014),(4324,'Filtro de pacotes com regras estáticas é a estratégia mais barata para firewall.','',1014),(4325,'Serviços de rede com portas dinâmicas, tipicamente criadas por aplicações em nível de usuário, são de difícil configuração em firewalls de filtro.','',1014),(4326,'Firewalls do tipo filtro podem habilitar a passagem de pacotes com endereços falsificados de IP.','',1014),(4327,'Um firewall ineficiente, que não esteja impedindo ataques à rede corporativa, deve ser substituído por um IDS mais sofisticado.','',1015),(4328,'A implementação de IDS baseado em Host depende do sistema operacional, mas independe da topologia de rede.','',1015),(4329,'IDS baseado em rede depende de sensores espalhados em pontos estratégicos.','',1015),(4330,'A monitoria e gestão dos sensores de Network IDS é primordial para o funcionamento de NIDS.','',1015),(4331,'NIDS pode identificar ataques em tempo real.','',1015),(4332,'Análise baseada em comportamento anômalo costuma gerar mais falsos negativos.','',1016),(4333,'IDS baseado em conhecimento requer atualizações constantes de sua base de assinaturas.','',1016),(4334,'IDS baseado em comportamento alerta viés estatístico sobre o histórico de uso da rede.','',1016),(4335,'Em geral, é mais difícil configurar um IDS baseado em comportamento que um baseado em conhecimento.','',1016),(4336,'IDS baseado em conhecimento é mais vulnerável a ataques inéditos.','',1016),(4337,'Ataques a segurança podem ser detectados por políticas de segurança.','',1017),(4338,'Existem mecanismos de segurança que implementam recuperação de dados.','',1017),(4339,'Criptografia é um exemplo de mecanismo de segurança para prevenção de perdas.','',1017),(4340,'A detecção de um ataque requer respostas previstas em um documento de política de segurança.','',1017),(4341,'Mecanismo de autenticação e assinatura digital são exemplos de controles de vulnerabilidade.','',1017),(4342,'Embora não trafegue a chave secreta de um usuário, o protocolo Diffie-Hellman permite que, a partir da chave compartilhada, seja possível calculá-la, por meio do ataque man-in-the-middle.','',1018),(4343,'O protocolo Diffie-Hellman permite que uma chave secreta seja calculada a partir de dados públicos trocados entre duas entidades.','',1018),(4344,'Sem protocolo de acordo de chave secreta, operações de e-commerce e internet banking, por exemplo, não poderiam ocorrer em tempo real.','',1018),(4345,'A correta escolha de parâmetros do sistema, como primo p grande, é fundamental para garantir a segurança de uma combinação de chave secreta entre dois participantes via canal público.','',1018),(4346,'O problema do Logaritmo Discreto protege expoentes secretos, por um tempo considerável se p for grande.','',1018),(4347,'A assinatura digital sobre um documento eletrônico garante a irretratabilidade de operação.','',1019),(4348,'Assinatura digital confere autenticidade de origem pois a assinatura é realizada com a chave secreta do remetente.','',1019),(4349,'Uma assinatura digital pode ser publicamente verificada por qualquer um que conhecer a chave pública.','',1019),(4350,'O RSA pode ser usado para assinar digitalmente, bastando usar a chave secreta para assinar e respectiva a chave pública para verificar a assinatura.','',1019),(4351,'O DSA, assim como o Diffie-Hellman, baseia sua segurança na dificuldade de calcular o expoente secreto, ou seja, resolver o logaritmo discreto.','',1019),(4352,'Uma autoridade de registro é uma entidade que faz parte de uma ICP com o objetivo de registrar o par de chaves de chaves escolhida por um usuário.','',1020),(4353,'O certificado digital de chave pública é um documento que uma autoridade certificadora assina, confirmando a legitimidade de um valor de chave pública, vinculando-o a uma entidade dona.','',1020),(4354,'Uma infraestrutura de chaves públicas é um instrumento para assegurar que chaves falsas não sejam usadas em benefício de um malfeitor.','',1020),(4355,'O padrão X-509 para especificação de certificado digital requer uma autoridade de fé pública para que a criptografia assimétrica possa ser usada mundialmente em comunicações seguras.','',1020),(4356,'No Brasil, para operações eletrônicas com o governo e para questões de irretratabilidade jurídica, é usada a infraestrutura ICP-Brasil.','',1020),(4357,'Uma VPN garante o sigilo da comunicação, pois cada roteador ao longo do caminho é autenticado.','',1021),(4358,'VPN usa tráfego cifrado e somente o destinatário final pode decifrar.','',1021),(4359,'No canal público, que é a Internet, circulam pacotes cifrados.','',1021),(4360,'Uma VPN pode incluir código MAC para autenticar cada pacote.','',1021),(4361,'IPSec é um protocolo que pode unir duas redes que o adotam, implementando uma VPN.','',1021),(4362,'Para ter sistemas protegidos, sejam eles computadores pessoais ou corporativos, basta instalar o tipo correto de firewall.','',1022),(4363,'O firewall tipicamente é um sistema de defesa que fica instalado no perímetro de uma rede de computadores privativa, com o objetivo de filtrar o tráfego que entra e que sai.','',1022),(4364,'O firewall pode funcionar como uma porta-corta fogo, separando a internet pública de uma intranet privada.','',1022),(4365,'A eficiência de um firewall depende de políticas de segurança adequadas e claras, da respectiva configuração de regras e revisão contínua.','',1022),(4366,'Firewall possui capacidade para registrar atividades de uso da Internet.','',1022),(4367,'Biometria por íris é um exemplo de mecanismo de autenticação forte que dispensa segundo fator.','',1023),(4368,'Autenticação por senha seguida de uma senha de uso único é uma alternativa de autenticação por dois fatores que evita ataques de repetição em uma mesma sessão de comunicação autenticada.','',1023),(4369,'Tokens numéricos em aplicativos de celular são exemplo de segundo fator de autenticação baseado em algo que o usuário possui (aparelho com um determinado número de celular).','',1023),(4370,'Smartcards tipicamente implementam dois fatores: o cartão que o usuário possui e a senha/PIN que o usuário conhece.','',1023),(4371,'Senha como primeiro fator e desafio-resposta por assinatura digital como segundo fator, é factível desde que a chave pública seja devidamente validada por meio de certificado digital.','',1023),(4398,'Todas as ERB\'s de um sistema móvel celular estão conectadas à uma central de controle, denominada de Central Geral de Radiação - CGR.','',1030),(4399,'No sistema de telefonia celular, cada célula corresponde a uma área geográfica que é atendida ou coberta por um transmissor de baixa potência chamado de Estação Rádio Base - ERB.','',1030),(4400,'Em uma rede celular é possível ter regiões cobertas por mais de uma célula assim como regiões não cobertas por nenhuma célula.','',1030),(4401,'Handoff é o procedimento para a transferência do controle de uma ERB para outra, conforme o usuário se locomove permitindo manter a conexão do dispositivo móvel.','',1030),(4402,'(i) é falsa mas (ii) é verdadeira.','',1031),(4403,'Ambas (i) e (ii) são verdadeiras.','',1031),(4404,'(i) é verdadeira mas (ii) é falsa.','',1031),(4405,'Ambas (i) e (ii) são falsas.','',1031),(4406,'Não é possível concluir.','',1031),(4407,'Ambas (i) e (ii) são verdadeiras','',1032),(4408,'(i) é verdadeira mas (ii) é falsa','',1032),(4409,'(i) é falsa mas (ii) é verdadeira','',1032),(4410,'Ambas (i) e (ii) são falsas','',1032),(4411,'Não é possível concluir','',1032),(4412,'(i) é verdadeira mas (ii) é falsa','',1033),(4413,'Ambas (i) e (ii) são verdadeiras','',1033),(4414,'(i) é falsa mas (ii) é verdadeira','',1033),(4415,'Ambas (i) e (ii) são falsas','',1033),(4416,'Não é possível concluir','',1033),(4417,'(i) é falsa, (ii) e (iii) são verdadeiras','',1034),(4418,'(i) e (iii) são verdadeiras, (ii) é falsa','',1034),(4419,'(i), (ii) e (iii) são verdadeiras','',1034),(4420,'(i), (ii) e (iii) são falsas','',1034),(4421,'(ii) é verdadeira, (i) e (iii) são falsas','',1034),(4422,'UHF','',1035),(4423,'HF','',1035),(4424,'VHF','',1035),(4425,'SHF','',1035),(4426,'EHF','',1035),(4427,'6 MHz','',1036),(4428,'200 Hz','',1036),(4429,'114 kHz','',1036),(4430,'60 MHz','',1036),(4431,'54 Mhz','',1036),(4432,'9 MHz','',1037),(4433,'139 Hz','',1037),(4434,'65 kHz','',1037),(4435,'74 MHz','',1037),(4436,'200 Mhz','',1037),(4437,'6 MHz','',1038),(4438,'174 Hz','',1038),(4439,'180 kHz','',1038),(4440,'354 MHz','',1038),(4441,'60 MHz','',1038),(4442,'Pode ser utilizada para estabelecer redes dinamicamente, conforme a necessidade (ex.: em uma conferência).','',1039),(4443,'Utiliza estações base que permitem a comunicação entre computadores (estações sem fio) e a rede fixa.','',1039),(4444,'Permite a integração de vários pontos de acesso através da rede fixa, formando o que é chamado de ESS (Extended Service Set).','',1039),(4445,'A norma IEEE 802.11 é o principal padrão, conhecida popularmente como Wi-Fi.','',1039),(4446,'Está presente nos mais diversos locais como, escritórios, instituições educacionais, aeroportos, locais públicas, residências, etc.','',1039),(4447,'A norma IEEE 802.16 se refere a um tipo de WLAN - Wireless Local Area Network.','',1040),(4448,'Redes de sensores sem fio se enquadram na categoria WPAN (Wireless Personal Area Network).','',1040),(4449,'O padrão IEEE 802.15.1 também é conhecido como Bluetooth.','',1040),(4450,'As redes WPAN operam em bandas de frequência não licenciadas, conhecidas como ISM (Industrial, Scientific and Medical).','',1040),(4451,'A norma IEEE 802.11 também é conhecido como Wi-Fi.','',1040),(4452,'(iii) é verdadeira, (i) e (ii) são falsas','',1041),(4453,'(i) é falsa, (ii) e (iii) são verdadeiras','',1041),(4454,'(i), (ii) e (iii) são verdadeiras','',1041),(4455,'(i), (ii) e (iii) são falsas','',1041),(4456,'(ii) e (iii) são verdadeiras, (i) é falsa','',1041),(4457,'30','',1042),(4458,'18','',1042),(4459,'33','',1042),(4460,'60','',1042),(4461,'12','',1042),(4462,'48','',1043),(4463,'12','',1043),(4464,'33','',1043),(4465,'96','',1043),(4466,'44','',1043),(4467,'Time Division Multiple Access (TDMA)','',1044),(4468,'Frequency Division Multiple Access (FDMA)','',1044),(4469,'Code Division Multiple Access (CDMA)','',1044),(4470,'Uma combinação de TDMA e FDMA','',1044),(4471,'Uma combinação de FDMA e CDMA','',1044),(4472,'(i) é falsa, (ii) e (iii) são verdadeiras','',1045),(4473,'(i), (ii) e (iii) são verdadeiras','',1045),(4474,'(i), (ii) e (iii) são falsas','',1045),(4475,'(i) e (ii) são verdadeiras, (iii) é falsa','',1045),(4476,'(i) é verdadeira, (ii) e (iii) são falsas','',1045),(4477,'(i) e (iii) são falsas, (ii) é verdadeira','',1046),(4478,'(i) é falsa, (ii) e (iii) são verdadeiras','',1046),(4479,'(i), (ii) e (iii) são verdadeiras','',1046),(4480,'(i), (ii) e (iii) são falsas','',1046),(4481,'(i) é verdadeira, (ii) e (iii) são falsas','',1046),(4482,'Ambas (i) e (ii) são verdadeiras','',1047),(4483,'(i) é verdadeira mas (ii) é falsa','',1047),(4484,'(i) é falsa mas (ii) é verdadeira','',1047),(4485,'Ambas (i) e (ii) são falsas','',1047),(4486,'Não é possível concluir','',1047),(4487,'(i) e (iii) são verdadeiras, (ii) é falsa','',1048),(4488,'(i), (ii) e (iii) são verdadeiras','',1048),(4489,'(i), (ii) e (iii) são falsas','',1048),(4490,'(ii) e (iii) são verdadeiras, (i) é falsa','',1048),(4491,'(i) é verdadeira, (ii) e (iii) são falsas','',1048),(4492,'Se refere ao procedimento que trata a transferência automática de conexões quando o usuário móvel se locomove e ultrapassa de uma célula para outra.','',1049),(4493,'Um importante parâmetro para avaliar uma estratégia de Gerenciamento de Localização é a razão entre a taxa de consultas e a taxa de migração.','',1049),(4494,'É um procedimento que possibilita manter atualizada a informação sobre a localização dos usuários móveis.','',1049),(4495,'Requer duas operações básicas: busca (lookup), para obter a localização corrente de um computador móvel e atualização (update), para a atualizar a localização do computador móvel quando o usuário migra.','',1049),(4496,'Em redes celulares, são utilizadas bases de dados de localização conhecidas como HLR e VLR.','',1049),(4497,'Update por \"blanket pages\"','',1050),(4498,'Update por tempo','',1050),(4499,'Update por número de handoffs','',1050),(4500,'Update na Transposição de Limite de AL','',1050),(4501,'Todas as alternativas correspondem a estratégias de atualização de localização.','',1050),(4502,'A adaptação pode ser realizada em diferentes níveis: Aplicação, Middleware, SO, etc., porém é mais eficaz quando é tratada somente no nível da Aplicação.','',1051),(4503,'Um exemplo de adaptação na camada de Middleware é a transformação/redução dos dados a serem transmitidos (p.ex. áudio / vídeo streaming).','',1051),(4504,'A adaptação é uma propriedade importante de softwares para computação móvel, para tratar problemas devido à mobilidade e ao meio de transmissão sem fio.','',1051),(4505,'Regulagem da potência de transmissão é um exemplo de adaptação na camada de Hardware.','',1051),(4506,'Na camada do SO, pode-se citar adaptações relacionadas ao uso e/ ou compartilhamento de recursos  (p.ex. processador ou interface de rede).','',1051),(4507,'(i) é falsa mas (ii) é verdadeira','',1052),(4508,'(i) é verdadeira mas (ii) é falsa','',1052),(4509,'Ambas (i) e (ii) são verdadeiras','',1052),(4510,'Ambas (i) e (ii) são falsas','',1052),(4511,'Não é possível concluir','',1052),(4512,'O Proxy é o representante do cliente localizado na rede fixa, e pode realizar otimizações para reduzir problemas de comunicação através do meio sem fio (ex.: largura de banda limitada).','',1053),(4513,'É adequada para dispositivos móveis com maior capacidade de processamento, armazenamento e autonomia de energia.','',1053),(4514,'O Proxy permite a migração de funcionalidade uma vez que é capaz de transferir-se para a máquina do cliente.','',1053),(4515,'O Proxy é um elemento localizado no cliente, pode tratar problemas de desconexões armazenando dados em cache.','',1053),(4516,'Todas as alternativas são incorretas.','',1053),(4517,'Os Tags ativos recebem a energia por indução eletromagnética que é gerada pelo leitor do RFID.','',1054),(4518,'É composto por 3 componentes: Antena,Transponder e Transceptor.','',1054),(4519,'O Transponder é a parte do sistema que é anexado ao elemento que se deseja identificar, também é conhecido como Tag.','',1054),(4520,'O Transceptor é um equipamento que identifica os Tags monitorando-os através da antena.','',1054),(4521,'A  Antena é a interface entre o Tag e o Transceptor.','',1054),(4522,'(i) e (ii) são verdadeiras, (iii) é falsa','',1055),(4523,'(ii) e (iii) são verdadeiras, (i) é falsa','',1055),(4524,'(i) e (iii) são verdadeiras, (ii) é falsa','',1055),(4525,'(i), (ii) e (iii) são verdadeiras','',1055),(4526,'(i), (ii) e (iii) são falsas','',1055),(4527,'A localização dos sensores de uma RSSF é aleatória, não requer intervenção manual.','',1056),(4528,'As unidades (nós) em uma RSSF são autônomas, possuem processador e memória local.','',1056),(4529,'O monitoramento de tráfego em rodovias é um exemplo de aplicação de RSSF.','',1056),(4530,'Câmeras de vídeo, sensores acústicos, sensores de temperatura, de luminosidade, de pressão, detectores sísmicos são exemplos de elementos típicos de uma RSSF.','',1056),(4531,'Todas as alternativas estão corretas.','',1056),(4532,'(i) e (iii) são verdadeiras, (ii) é falsa','',1057),(4533,'(i), (ii) e (iii) são verdadeiras','',1057),(4534,'(i), (ii) e (iii) são falsas','',1057),(4535,'(ii) e (iii) são verdadeiras, (i) é falsa','',1057),(4536,'(i) é verdadeira, (ii) e (iii) são falsas','',1057),(4537,'None of the other answers','',72),(4538,'None of the other answers','',75),(4539,'Grafo','',70),(4540,'[[code:correctAnswer]]','',1071),(4545,'[[code:e01]]','',1071),(4546,'[[code:e02]]','',1071),(4547,'[[code:e03]]','',1071),(4548,'[[code:e04]]','',1071),(4549,'[[code:correctAnswer]]','',1072),(4550,'[[code:e01]]','',1072),(4551,'[[code:e02]]','',1072),(4552,'[[code:e03]]','',1072),(4553,'[[code:e04]]','',1072),(4554,'[[code:correctAnswer]]','',1075),(4555,'[[code:e01]]','',1075),(4556,'[[code:e02]]','',1075),(4557,'[[code:e03]]','',1075),(4558,'[[code:e04]]','',1075),(4559,'[[code:correctAnswer]]','',1077),(4561,'[[code:e01]]','',1077),(4562,'[[code:e02]]','',1077),(4563,'[[code:e03]]','',1077),(4564,'[[code:e04]]','',1077),(4565,'[[code:correctAnswer]]','',1078),(4567,'[[code:e01]]','',1078),(4568,'[[code:e02]]','',1078),(4569,'[[code:e03]]','',1078),(4570,'[[code:e04]]','',1078),(4571,'[[code:correctAnswer]]','',1079),(4572,'[[code:e01]]','',1079),(4573,'[[code:e02]]','',1079),(4574,'[[code:e03]]','',1079),(4575,'[[code:e04]]','',1079),(4576,'[[code:correctAnswer]]','',1080),(4577,'[[code:e01]]','',1080),(4578,'[[code:e02]]','',1080),(4579,'[[code:e03]]','',1080),(4580,'[[code:e04]]','',1080),(4581,'[[code:correctAnswer]]','',1083),(4582,'[[code:e01]]','',1083),(4583,'[[code:e02]]','',1083),(4584,'[[code:e03]]','',1083),(4585,'[[code:e04]]','',1083),(4586,'Energia é a quantidade física que representa a capacidade de realizar trabalho.','',1084),(4587,'Energia é a quantidade física que fornece a transformação de energia útil em energia primária.','',1084),(4588,'Energia é a quantidade física que fornece a transformação de energia primária em energia útil.','',1084),(4589,'Energia é a quantidade física de energia primária útil para a sociedade.','',1084),(4590,'Nenhuma das respostas.','',1084),(4591,'Nenhuma das respostas.','',1085),(4592,'Energia é a quantidade física que representa a capacidade da natureza dissipar calor.','',1085),(4593,'Energia é a quantidade física que fornece a transformação de força útil em energia primária.','',1085),(4594,'Energia é a quantidade física que fornece a transformação de força primária em energia útil.','',1085),(4595,'Energia é a quantidade física de energia primária útil para a sociedade.','',1085),(4596,'Energia primária é aquela encontrada na natureza.','',1086),(4597,'Nenhuma das respostas.','',1086),(4598,'Energia é a quantidade física que não representa a capacidade da natureza dissipar calor.','',1086),(4599,'Energia é a quantidade física que fornece a transformação de força útil em energia primária.','',1086),(4600,'Energia é a quantidade física que fornece a transformação de força primária em energia útil.','',1086),(4601,'140,8 J','',1087),(4602,'114,8 J','',1087),(4603,'75,8 J','',1087),(4604,'36,8 J','',1087),(4605,'10,8 J','',1087),(4606,'114,8 J','',1088),(4607,'140,8 J','',1088),(4608,'75,8 J','',1088),(4609,'36,8 J','',1088),(4610,'10,8 J','',1088),(4611,'75,8 J','',1089),(4612,'114,8 J','',1089),(4613,'140,8 J','',1089),(4614,'36,8 J','',1089),(4615,'10,8 J','',1089),(4616,'36,8 J','',1090),(4617,'75,8 J','',1090),(4618,'114,8 J','',1090),(4619,'140,8 J','',1090),(4620,'10,8 J','',1090),(4621,'10,8 J','',1091),(4622,'36,8 J','',1091),(4623,'75,8 J','',1091),(4624,'114,8 J','',1091),(4625,'140,8 J','',1091),(4626,'31,15 MJ','',1092),(4627,'26,23 MJ','',1092),(4628,'28,04 MJ','',1092),(4629,'23,69 MJ','',1092),(4630,'33,45 MJ','',1092),(4631,'26,23 MJ','',1093),(4632,'31,15 MJ','',1093),(4633,'28,04 MJ','',1093),(4634,'23,69 MJ','',1093),(4635,'33,45 MJ','',1093),(4636,'28,04 MJ','',1094),(4637,'26,23 MJ','',1094),(4638,'31,15 MJ','',1094),(4639,'23,69 MJ','',1094),(4640,'33,45 MJ','',1094),(4641,'20 kg','',1095),(4642,'22 kg','',1095),(4643,'18 kg','',1095),(4644,'24 kg','',1095),(4645,'16 kg','',1095),(4646,'22 kg','',1096),(4647,'20 kg','',1096),(4648,'18 kg','',1096),(4649,'24 kg','',1096),(4650,'16 kg','',1096),(4651,'18 kg','',1097),(4652,'22 kg','',1097),(4653,'20 kg','',1097),(4654,'24 kg','',1097),(4655,'16 kg','',1097),(4656,'Energia primária é aquela encontrada na natureza, energia secundária é aquela que se obtem a partir dos centros de transformação e energia de uso final é a forma da energia utilizada nos equipamentos e sistemas úteis à sociedade.','',1098),(4657,'Energia secundária é aquela encontrada na natureza, energia primária é aquela que se obtem a partir dos centros de transformação e energia de uso final é a forma da energia utilizada nos equipamentos e sistemas úteis à sociedade.','',1098),(4658,'Energia primária é aquela encontrada na natureza, energia útil é aquela que se obtem a partir dos centros de transformação e energia de uso final é a forma da energia utilizada nos equipamentos e sistemas utilizados pela sociedade.','',1098),(4659,'Energia útil é aquela encontrada na natureza, energia secundária é aquela que se obtem a partir dos centros de transformação e energia de uso final é a forma da energia utilizada nos equipamentos e sistemas utilizados pela ociedade.','',1098),(4660,'Energia primária é aquela encontrada na natureza, energia de uso final aquela que se obtem a partir dos centros de transformação e energia útil é a forma da energia utilizada nos equipamentos e sistemas úteis à sociedade.','',1098),(4661,'As formas de interação existentes na natureza são a eletromagnética, gravitacional, nuclear forte e nuclear fraca.','',1099),(4662,'As formas de interação existentes na natureza são a elétrica forte, elétrica fraca, magnética, gravitacional e nuclear forte e nuclear fraca.','',1099),(4663,'As formas de interação existentes na natureza são a eletromagnética, gravitacional forte, gravitacional fraca e nuclear.','',1099),(4664,'As formas de interação existentes na natureza são fortes e fracas e incluem a eletromagnética, gravitacional e quântica.','',1099),(4665,'Nenhuma das respostas.','',1099),(4666,'Podemos considerar como falsa a hipótese de que a energia oriunda das fontes fósseis como o petróleo vem fundalmente do Sol.','',1100),(4667,'O petróleo é oriundo da decomposição da matéria orgânica que ocorreu a milhões de anos atrás.','',1100),(4668,'A matéria orgânica existente na Terra foi produzida por meio do processo da fotossíntese que utiliza energia oriunda do Sol.','',1100),(4669,'Podemos considerar como verdadeira a hipótese de que a energia oriunda do petróleo vem fundamentalmente do Sol.','',1100),(4670,'A energia nuclear não é originária do Sol mas, sim, da interação forte, reação nuclear de fissão e desintegrações nucleares.','',1100),(4671,'A classificação do carvão está associada à sua densidade (leve ou pesado) e o conteúdo de enxofre.','',1101),(4672,'A energia das marés está associada à ação gravitacional do Sol e da Lua.','',1101),(4673,'A rotação da Terra é o principal fator que influencia a frequência das marés.','',1101),(4674,'Há um consenso de que as marés possuem forte influência na dissipação da energia cinética de rotação da Terra tornando os dias mais longos, mas há também outros fenômenos como terremotos que produzem efeito contrário.','',1101),(4675,'A classificação do petróleo está associada à densidade (leve ou pesado) e o conteúdo de enxofre.','',1101),(4676,'Potência é dada pela multiplicação da força e a velocidade.','',1102),(4677,'Potência é dada pela multiplicação da força e o deslocamento.','',1102),(4678,'Potência é dada pela divisão da força pela velocidade.','',1102),(4679,'Potência é dada pela divisão do trabalho e a velocidade.','',1102),(4680,'Nenhuma das respostas.','',1102),(4681,'Nenhuma das respostas.','',1103),(4682,'Pode ser obtida do produto entre o momento de potência e a velocidade angular ao quadrado dividido por 2.','',1103),(4683,'Pode ser obtida do produto entre o trabalho rotacional e a velocidade.','',1103),(4684,'Pode ser obtida do produto entre o torque e a velocidade angular.','',1103),(4685,'Pode ser obtida do produto entre o momento angular, a velocidade angular ao quadrado dividido por 2.','',1103),(4686,'A potência de rotação é dada pelo produto entre o torque e a velocidade angular.','',1104),(4687,'Nenhuma das respostas.','',1104),(4688,'A potência de rotação é dada pela divisão entre o torque e a velocidade angular.','',1104),(4689,'A potência de rotação é dada pelo produto entre o momento de inércia e a velocidade angular','',1104),(4690,'A potência angular é dada pelo produto entre torque e o momento de inércia.','',1104),(4691,'O vapor se expande na turbina fazendo uma força resultante transversal nas pás rotativas que giram o eixo e geram potência.','',1105),(4692,'O vapor se comprime na turbina fazendo uma força resultante transversal nas pás rotativas que giram o eixo e geram potência.','',1105),(4693,'O vapor se expande na turbina fazendo uma força paralela ao eixo que gira e gera potência.','',1105),(4694,'O vapor se comprime na turbina fazendo uma força paralela ao eixo que não gira e gera potência.','',1105),(4695,'Nenhuma das respostas.','',1105),(4696,'Energia primária é aquela encontrada na natureza, energia secundária é aquela que se obtem a partir dos centros de transformação e energia de uso final é a forma da energia utilizada nos equipamentos e sistemas úteis à sociedade.','',1106),(4697,'Energia secundária é aquela encontrada na natureza, energia primária é aquela que se obtem a partir dos centros de transformação e energia de uso final é a forma da energia utilizada nos equipamentos e sistemas úteis à sociedade.','',1106),(4698,'Energia primária é aquela encontrada na natureza, energia útil é aquela que se obtem a partir dos centros de transformação e energia de uso final é a forma da energia utilizada nos equipamentos e sistemas utilizados pela sociedade.','',1106),(4699,'Energia útil é aquela encontrada na natureza, energia secundária é aquela que se obtem a partir dos centros de transformação e energia de uso final é a forma da energia utilizada nos equipamentos e sistemas utilizados pela ociedade.','',1106),(4700,'Energia primária é aquela encontrada na natureza, energia de uso final aquela que se obtem a partir dos centros de transformação e energia útil é a forma da energia utilizada nos equipamentos e sistemas úteis à sociedade.','',1106),(4701,'Uma das formas de trabalho é aquela realizada pela pressão do fluido empurrando uma massa de fluido a sua frente (trabalho no volume de controle).','',1107),(4702,'Uma das formas de trabalho é aquela realizada na rotação de eixo da turbina (trabalho no volume de controle).','',1107),(4703,'O trabalho de escoamento por unidade de massa é dado pelo produto da pressão e volume específico do fluido.','',1107),(4704,'O fluido sob pressão tem capacidade de realizar trabalho e pode ser interpretado como contendo energia de pressão.','',1107),(4705,'A entalpia é a energia por unidade de massa composta por energia térmica e energia de pressão.','',1107),(4706,'As formas de interação existentes na natureza são a eletromagnética, gravitacional, nuclear forte e nuclear fraca.','',1108),(4707,'As formas de interação existentes na natureza são a elétrica forte, elétrica fraca, magnética, gravitacional e nuclear forte e nuclear fraca.','',1108),(4708,'As formas de interação existentes na natureza são a eletromagnética, gravitacional forte, gravitacional fraca e nuclear.','',1108),(4709,'As formas de interação existentes na natureza são fortes e fracas e incluem a eletromagnética, gravitacional e quântica.','',1108),(4710,'Nenhuma das respostas.','',1108),(4711,'Podemos considerar como falsa a hipótese de que a energia oriunda das fontes fósseis como o petróleo vem fundalmente do Sol.','',1109),(4712,'O petróleo é oriundo da decomposiçao da matéria orgânica que ocorreu a milhões de anos atrás.','',1109),(4713,'A matéria orgânica existente na Terra foi produzida por meio do processo da fotossíntese que utiliza energia oriunda do Sol.','',1109),(4714,'Podemos considerar como verdadeira a hipótese de que a energia oriunda do petróleo vem fundamentalmente do Sol.','',1109),(4715,'A energia nuclear não é originária do Sol mas, sim, da interação forte, reação nuclear de fissão e desintegrações nucleares.','',1109),(4716,'A classificação do carvão está associada à sua densidade (leve ou pesado) e o conteúdo de enxofre.','',1110),(4717,'A energia das marés está associada à ação gravitacional do Sol e da Lua.','',1110),(4718,'A rotação da Terra é o principal fator que influencia a frequência das marés.','',1110),(4719,'Há um consenso de que as marés possuem forte influência na dissipação da energia cinética de rotação da Terra tornando os dias mais longos, mas há também outros fenômenos como terremotos que produzem efeito contrário.','',1110),(4720,'A classificação do petróleo está associada à densidade (leve ou pesado) e o conteúdo de enxofre.','',1110),(4721,'O sol pode ser considerado um reator nuclear de fissão.','',1111),(4722,'Nas reações químicas ocorre a conservação da energia e a conservação da massa. A afirmação de Lavosier de que na natureza nada se perde, nada se cria, tudo se transforma está relacionada à conservação da massa.','',1111),(4723,'Nas reações nucleares ocorre a conservação da massa e energia em conjunto pois ocorre conversão de massa em energia e vice-versa. A equivalência entre energia e massa é dada pela equação de Einstein, E = m c2 (velocidade da luz ao quadrado).','',1111),(4724,'A radiação eletromagnética inclui raios gama, raios X, radiação ultravioleta, luz visível, infravermelho, microonda e ondas de rádio. A diferença entre elas é a frequência, f. A energia do fóton da energia eletromagnética é dada por E = hf, onde h é a constante de Planck.','',1111),(4725,'Os fótons produzidos no Sol fazem inúmeras interações com as partículas e elementos que compõem o Sol, levando centenas de milhares de anos para chegar até a sua superfície. De lá até a Terra levam menos que 10 minutos.','',1111),(4726,'3318,4 KJ','',1112),(4727,'4148,0 KJ','',1112),(4728,'4728,7 KJ','',1112),(4729,'3792,0 KJ','',1112),(4730,'4740,0 KJ','',1112),(4731,'4148,0 KJ','',1113),(4732,'4728,7 KJ','',1113),(4733,'3318,4 KJ','',1113),(4734,'3792,0 KJ','',1113),(4735,'4740,0 KJ','',1113),(4736,'4728,7 KJ','',1114),(4737,'3318,4 KJ','',1114),(4738,'4148,0 KJ','',1114),(4739,'3792,0 KJ','',1114),(4740,'4740,0 KJ','',1114),(4741,'250,8 m2','',1115),(4742,'200,6 m2','',1115),(4743,'133,8 m2','',1115),(4744,'83,6 m2','',1115),(4745,'33,4 m2','',1115),(4746,'200,6 m2','',1116),(4747,'250,8 m2','',1116),(4748,'133,8 m2','',1116),(4749,'83,6 m2','',1116),(4750,'33,4 m2','',1116),(4751,'133,8 m2','',1117),(4752,'83,6 m2','',1117),(4753,'33,4 m2','',1117),(4754,'200,6 m2','',1117),(4755,'250,8 m2','',1117),(4756,'3,26 MW','',1118),(4757,'1,45 MW','',1118),(4758,'5,79 MW','',1118),(4759,'0,97 MW','',1118),(4760,'3,88 MW','',1118),(4761,'5,79 MW','',1119),(4762,'0,97 MW','',1119),(4763,'3,88 MW','',1119),(4764,'3,26 MW','',1119),(4765,'1,45 MW','',1119),(4766,'3,88 MW','',1120),(4767,'3,26 MW','',1120),(4768,'5,79 MW','',1120),(4769,'0,97 MW','',1120),(4770,'1,45 MW','',1120),(4771,'4939,2 MW','',1121),(4772,'3087,0 MW','',1121),(4773,'1234,8 MW','',1121),(4774,'3528,0 MW','',1121),(4775,'2205,0 MW','',1121),(4776,'3087,0 MW','',1122),(4777,'4939,2 MW','',1122),(4778,'1234,8 MW','',1122),(4779,'3528,0 MW','',1122),(4780,'2205,0 MW','',1122),(4781,'1234,8 MW','',1123),(4782,'4939,2 MW','',1123),(4783,'3087,0 MW','',1123),(4784,'3528,0 MW','',1123),(4785,'2205,0 MW','',1123),(4786,'$L=\\{(a)^*(b)^*\\}$','',1124),(4787,'$L=\\{a^mb^n\\}$','',1124),(4788,'$L=\\{a^nb^n\\}$','',1124),(4789,'$L=\\{(ab)^n\\}$','',1124),(4790,'$G=(V_n,V_t,\\{S\\to aS | B,\\,B\\to b | bB\\},S)$','',1125),(4791,'$G=(V_n,V_t,\\{S\\to AB,\\,A\\to aA | a,\\,B\\to bB | b\\},S)$','',1125),(4792,'$G=(V_n,V_t,\\{S\\to aA,\\,A\\to aA|B,\\,B\\to bB|\\lambda\\},S)$','',1125),(4793,'$G=(V_n,V_t,\\{S\\to A|B,\\,A\\to aA|\\lambda,\\,B\\to bB|\\lambda\\},S)$','',1125),(4794,'$(1)^*((00)^*(1)^*)^*01$','',1126),(4795,'$(1)^m(00)^n(1)^*01$','',1126),(4796,'$(1)^*(00)^m(1)^n01$','',1126),(4797,'$(1)^*(001)^*01$','',1126),(4798,'$a(ba)^*c^m$','',1127),(4799,'$a(ba)^nc^m$','',1127),(4800,'$(aba)^*c^m$','',1127),(4801,'$(aba)^nc^m$','',1127),(4802,'First$(S)=$First$(L)=\\{ (,a \\}$, First$(L’)=\\{\\sharp,\\spadesuit \\}$.\\newline .','',1128),(4803,'First$(S)=\\{ (,a\\}$, First$(L)=\\{ (,a,\\sharp,\\spadesuit \\}$, First$(L’)= \\{\\sharp,\\spadesuit \\}$.\\newline .','',1128),(4804,'First$(S)=\\{ ( ,a\\}$, First$(L)=$First$(L’)=\\{\\sharp,\\spadesuit,\\lambda\\}$.\\newline .','',1128),(4805,'First$(S)=\\{ ( ,a\\}$, First$(L)=\\{ ( ,a,S\\}$, First$(L’)=\\{\\sharp,\\spadesuit,\\lambda\\}$.\\newline .','',1128),(4806,'$S\\to A|a$, $A\\to Bc|b$, $B\\to bbB\'|cB\'$, $B’\\to cbB’|\\lambda$\\newline .','',1129),(4807,'$S\\to AB$, $A\\to a$, $B\\to B\'B|a|b|\\lambda$, $B’\\to c$\\newline .','',1129),(4808,'$S\\to AB|B$, $A\\to a$, $B\\to B\'B|a|b|\\lambda$, $B’\\to c$\\newline .','',1129),(4809,'Nada, pois tal gram\\\'atica \\\'e LL(1)\\newline .','',1129),(4810,'A 1a. pertence \\`a linguagem mas a 2a. n\\~ao.','',1130),(4811,'Ambas pertencem \\`a linguagem.','',1130),(4812,'Nenhuma delas pertencem \\`a linguagem.','',1130),(4813,'A 2a. pertence \\`a linguagem mas a 1a. n\\~ao.','',1130),(4814,'{\\rm Haver\\\'a erro somente no segundo {\\tt b}, que subir\\\'a na \\\'arvore at\\\'e o segundo n\\\'o {\\tt tipo}.','',1131),(4815,'{\\rm Haver\\\'a erro somente no segundo {\\tt b}, que subir\\\'a na \\\'arvore at\\\'e o n\\\'o principal {\\tt prog}.','',1131),(4816,'{\\rm Haver\\\'a erro no segundo {\\tt b}, e onde falta {\\tt ;} e tamb\\\'em no s\\\'imbolo {\\tt \\}}, pois n\\~ao podemos ter um programa \"vazio\".','',1131),(4817,'O compilador n\\~ao d\\\'a erro, pois todo {\\tt int} \\\'e tamb\\\'em {\\tt float}.','',1131),(4818,'Pode-se empilhar + e em seguida $\\star$, por\\\'em n\\~ao conseguiremos reduzir este +.','',1132),(4819,'Pode-se empilhar + seguido de $\\star$, por\\\'em n\\~ao conseguiremos reduzir o $\\star$.','',1132),(4820,'Pode-se empilhar $\\star$ seguido de +, por\\\'em n\\~ao conseguiremos reduzir o $\\star$.','',1132),(4821,'Pode-se empilhar $\\star$ seguido de +, e este + poder\\\'a ser reduzido.','',1132),(4822,'7 n\\\'os intermedi\\\'arios','',1133),(4823,'6 n\\\'os intermedi\\\'arios','',1133),(4824,'8 n\\\'os intermedi\\\'arios','',1133),(4825,'9 n\\\'os intermedi\\\'arios','',1133),(4956,'Se a taxa interna de retorno calculada for maior que o custo de capital, o projeto de investimento deve ser aceito.','',1165),(4957,'O valor presente líquido é uma técnica de análise de orçamentos de capital que não considera o valor do dinheiro no tempo.','',1165),(4958,'A taxa interna de retorno é a taxa de desconto com a qual o valor presente das entradas de caixa excede o valor do investimento inicial.','',1165),(4959,'Se o período de payback calculado for menor que o período máximo aceitável, o projeto de investimento deve ser rejeitado.','',1165),(4960,'Se o resultado do cálculo do valor presente líquido for menor que zero, a empresa obterá um retorno maior que seu custo de capital.','',1165),(4961,'Se sua TIR for maior do que o valor máximo entre a TIR do projeto Y e 7 \\%.','',1166),(4962,'Sua TIR for menor do que a TIR do projeto Y.','',1166),(4963,'Se seu payback descontado for menor do que o do projeto Y.','',1166),(4964,'Se sua TIR for maior do que 7 \\%.','',1166),(4965,'Se o valor presente do fluxo de receita, calculado à taxa de 7 \\%, superar o investimento inicial.','',1166),(4966,'Apenas os itens I e III estão certos.','',1167),(4967,'Apenas o item I está certo.','',1167),(4968,'Apenas o item II está certo.','',1167),(4969,'Apenas os itens II e III estão certos.','',1167),(4970,'Todos os itens estão certos.','',1167),(4971,'Positiva.','',1168),(4972,'Inexistente.','',1168),(4973,'Negativa.','',1168),(4974,'Nula.','',1168),(4975,'Apenas confirmatória de que o projeto de maior TIR cria mais valor.','',1168),(4976,'Descontado com a taxa nominal, em que o cálculo da TIR estará correto se o saldo de caixa encontrado no final for zero.','',1169),(4977,'Descontado com a TIR, em que o cálculo da TIR estará correto se o valor presente líquido (VPL) encontrado no final for zero.','',1169),(4978,'Descontado com a TIR, em que o cálculo da TIR estará correto se o valor presente líquido (VPL) for igual a taxa de risco.','',1169),(4979,'Direto sem desconto, em que o cálculo da TIR estará correto se a soma das entradas e saídas forem iguais a zero.','',1169),(4980,'Indireto sem desconto, em que o cálculo da TIR estará correto se a soma das entradas e saídas forem iguais ao fator de desconto.','',1169),(4981,'Empresa investirá se a TIR social for maior do que seu custo de capital, para este tipo de investimento.','',1170),(4982,'Taxa interna de retorno social (TIR social) do projeto deve ser calculada usando o valor do salário médio da região.','',1170),(4983,'Taxa interna de retorno privado (TIR privada) do projeto deve ser calculada usando o valor do salário pago pela empresa.','',1170),(4984,'TIR social é maior do que a TIR privada.','',1170),(4985,'Empresa investirá se a TIR privada for maior do que seu custo de capital, para este tipo de investimento.','',1170),(4986,'Veículos utilizados para transporte de empregados.','',1171),(4987,'Terrenos utilizados no negócio da entidade.','',1171),(4988,'Prédios destinados à revenda.','',1171),(4989,'Obras de arte expostas na sede da entidade.','',1171),(4990,'Marcas formadas internamente.','',1171),(4991,'A aplicação do método de depreciação denominado soma dos algarismos dos anos resulta em quotas crescentes ou decrescentes de depreciação.','',1172),(4992,'A quota de depreciação é o valor resultante da aplicação da taxa sobre o valor correspondente ao custo de aquisição do bem.','',1172),(4993,'O método de depreciação escolhido deve ser utilizado durante toda a vida útil do ativo, a fim de que sejam mantidas a uniformidade e comparabilidade das informações.','',1172),(4994,'O cálculo das quotas de depreciação e a respectiva contabilização devem ter como referência o mês em que o bem tenha sido incorporado ao ativo da entidade.','',1172),(4995,'Se a depreciação acumulada alcançar 100 \\% do valor depreciável, as quotas deverão continuar a ser calculadas, desde que o bem ainda esteja em uso na entidade.','',1172),(4996,'Bens de uso comum de vida útil indeterminada, desde que absorvam recursos públicos, estarão sujeitos ao regime de depreciação.','',1173),(4997,'A depreciação, a amortização e a exaustão deverão ser reconhecidas até que o valor líquido contábil do ativo seja igual a zero.','',1173),(4998,'A depreciação, a amortização e a exaustão de um ativo começam quando o item é adquirido.','',1173),(4999,'A depreciação e a amortização cessam quando o ativo se torna obsoleto ou é retirado temporariamente de operação.','',1173),(5000,'A capacidade de geração de benefícios futuros deverá ser considerada ao se estimar a vida útil econômica de um ativo.','',1173),(5001,'O método de depreciação aplicado a um ativo deve ser revisado, pelo menos, ao final de cada exercício e, se houver alteração significativa no padrão de consumo previsto, o método deve ser modificado.','',1174),(5002,'Uma vez escolhido o método de depreciação, a empresa não poderia ter mudado o critério, em decorrência das normas contábeis exigirem sua aplicação, por toda vida útil do bem.','',1174),(5003,'O método de depreciação deve ser mudado sempre que houver mudança nas vendas de produtos, refletindo a sazonalidade, estando correto o procedimento.','',1174),(5004,'A legislação prevê obrigatoriamente a mudança de critérios anualmente de acordo com a evolução da produção de bens da empresa, estando inadequada a mudança.','',1174),(5005,'A depreciação é uma estimativa do desgaste do bem e sempre que a empresa entender que existe um método que melhor adeque os resultados à estratégia da empresa deve ser modificado.','',1174),(5006,'Depreciável, amortizável ou exaurido.','',1175),(5007,'Líquido Contábil.','',1175),(5008,'Contábil Original Líquido.','',1175),(5009,'Realizável Líquido.','',1175),(5010,'Realizável.','',1175),(5011,'Ao período de recuperação do investimento total inicial, quando as despesas se igualam às receitas acumuladas.','',1176),(5012,'Ao período de recuperação do investimento descontado com base em uma taxa de juros pré-definida.','',1176),(5013,'À riqueza em dinheiro gerada pelo negócio ao longo dos primeiros dois anos de atividade.','',1176),(5014,'Á taxa de desconto que iguala os fluxos de entrada com os de saída de caixa.','',1176),(5015,'À taxa que mede o retorno do negócio sobre o capital investido.','',1176),(5016,'Dado superestimado em termos de velocidade de retorno.','',1177),(5017,'Resultado que leva em conta o valor do dinheiro no tempo.','',1177),(5018,'Resultado maior que o encontrado pelo payback descontado.','',1177),(5019,'Resultado que considera todos os fluxos de caixa do projeto.','',1177),(5020,'Dado coerente com a matemática financeira.','',1177),(5021,'Informa o tempo de retorno de um investimento considerando o valor do dinheiro no tempo.','',1178),(5022,'Informa o valor líquido de um investimento considerando o valor do dinheiro no tempo.','',1178),(5023,'Informa o tempo de retorno de um investimento desconsiderando o valor do dinheiro no tempo.','',1178),(5024,'Informa a taxa de rentabilidade de um investimento considerando o valor do dinheiro no tempo.','',1178),(5025,'Mede a taxa de retorno do investimento','',1178),(5026,'I, II e III, apenas.','',1179),(5027,'I, II e IV, apenas.','',1179),(5028,'II, III e IV, apenas.','',1179),(5029,'I, III e IV, apenas.','',1179),(5030,'I, II, III e IV.','',1179),(5031,'O método de payback é utilizado para informar o tempo de retorno do investimento e é obtido calculando-se o número de anos que serão necessários para que os fluxos de caixa futuros acumulados igualem o montante do investimento inicial.','',1180),(5032,'A idéia básica do método da Taxa Interna de Retorno é a de que se calcula um indicador que depende das taxas de juros vigentes no mercado.','',1180),(5033,'Embora existam vários critérios que auxiliam no processo de decisão de investimentos, desaconselha-se em geral a utilização do método do Valor Presente Líquido, já que ele não indica se há aumento do valor da empresa.','',1180),(5034,'A vantagem do método do Valor Presente Líquido é expressar os resultados em termos de uma taxa, cujo significado é mais facilmente assimilado do que aqueles expressos em unidades monetárias.','',1180),(5035,'Supondo dois projetos de investimento, o Valor Presente Líquido do projeto considerado em conjunto não necessariamente será igual ao Valor Presente Líquido dos projetos considerados separadamente.','',1180),(5036,'Projeto Y libera caixa mais rapidamente que X.','',1181),(5037,'Projeto X implica maior investimento inicial que Y.','',1181),(5038,'Valor presente líquido de X é menor que o de Y.','',1181),(5039,'Taxa interna de retorno de X é maior que a de Y.','',1181),(5040,'Escala de X é maior que a de Y.','',1181),(5041,'Do valor presente líquido é o mais rigoroso e isento de falhas técnicas.','',1182),(5042,'Do pay-back é o melhor, porque ao empresário interessa primeiramente saber em quanto tempo terá o seu capital de volta.','',1182),(5043,'Da relação benefício/custo é o menos utilizado na prática mas é conveniente porque sempre aponta o mesmo valor, independentemente de manipulações algébricas.','',1182),(5044,'Da taxa interna de retorno é o mais indicado porque prescinde de informações externas ao projeto e não apresenta qualquer inconveniente do ponto de vista técnico.','',1182),(5045,'Do valor presente líquido unitário é muito bom, porque não discrimina a escala dos projetos, à semelhança do método do pay-back .','',1182),(5046,'Projeto A libera caixa (liquidez) para outros usos mais rapidamente que B, pelo menos inicialmente.','',1183),(5047,'axa interna de retorno de A é maior que a de B.','',1183),(5048,'Valor presente líquido de A é maior que o de B.','',1183),(5049,'Investimento inicial exigido pelo projeto A é menor do que o exigido pelo B.','',1183),(5050,'Projeto A é preferível a B, se forem mutuamente exclusivos.','',1183),(5051,'Liberam caixa de modo similar pelo menos nos dois anos iniciais.','',1184),(5052,'Têm taxas internas de retorno iguais.','',1184),(5053,'Têm valores presentes líquidos iguais.','',1184),(5054,'Depende só do diferencial de risco a escolha entre os dois.','',1184),(5055,'São de 50 \\% a.a. as taxas internas de retorno dos dois projetos.','',1184),(5056,'Apenas II, III e IV.','',1185),(5057,'Apenas I.','',1185),(5058,'Apenas I e IV.','',1185),(5059,'Apenas III.','',1185),(5060,'I, II, III e IV.','',1185),(5061,'Apenas as afirmativas I e II estão corretas.','',1186),(5062,'Apenas a afirmativa IV está correta.','',1186),(5063,'Apenas as afirmativas I e IV estão corretas.','',1186),(5064,'Apenas as afirmativas II e III estão corretas.','',1186),(5065,'Apenas a afirmativa I está correta.','',1186),(5066,'Para um projeto, cujos fluxos de caixa são inicialmente negativos e apresentam um único momento de reversão de sinal, a partir do qual passam a ser positivos até o final do projeto, o período de payback descontado é sempre maior ou igual ao período de payback simples.','',1187),(5067,'Os indicadores relação custo-benefício, taxa interna de retorno e valor presente são formas diferentes de medir a mesma coisa e, por essa razão, na escolha entre dois projetos, não podem induzir respostas conflitantes.','',1187),(5068,'O melhor indicador para a seleção de projetos é a relação custo-benefício.','',1187),(5069,'A taxa interna de retorno é a taxa à qual o capital adiantado para um investimento é recuperado por meio das vendas dos serviços desse investimento ao mercado doméstico.','',1187),(5070,'valor presente de um projeto é um indicador pobre de sua viabilidade, pois não considera o valor do dinheiro no tempo.','',1187),(5071,'Duas TIR;','',1188),(5072,'Zero TIR;','',1188),(5073,'Uma TIR;','',1188),(5074,'Três TIR;','',1188),(5075,'Quatro TIR.','',1188),(5076,'Maior TIR, mas que pode ser o de menor Valor Presente Líquido - VPL.','',1189),(5077,'Maior Valor Presente Líquido - VPL;','',1189),(5078,'Menor Valor Presente Líquido - VPL;','',1189),(5079,'Valor Presente Líquido -  VPL nulo;','',1189),(5080,'Maior TIR e, por isso, sempre terá Valor Presente Líquido - VPL positivo;','',1189),(5081,'[[code:correctAnswer]]','',1191),(5082,'[[code:e01]]','',1191),(5083,'[[code:e02]]','',1191),(5084,'[[code:e03]]','',1191),(5085,'[[code:e04]]','',1191),(5086,'[[code:correctAnswer]]','',1192),(5087,'[[code:e01]]','',1192),(5088,'[[code:e02]]','',1192),(5089,'[[code:e03]]','',1192),(5090,'[[code:e04]]','',1192),(5096,'[[code:correctAnswer]]','',1195),(5097,'[[code:e01]]','',1195),(5098,'[[code:e02]]','',1195),(5099,'[[code:e03]]','',1195),(5100,'[[code:e04]]','',1195),(5156,'Sabe-se que o custo efetivo total de um financiamento é determinado pela taxa operacional que inclui todos os encargos e despesas que incidem na operação, por exemplo, taxa de juros cobrada pela instituição, seguros, registro de contrato, entre outras. Nesse sentido, ao se compararem taxas operacionais de instituições financeiras distintas para determinada operação de financiamento, a mais vantajosa para o cliente sempre será aquela que apresenta a menor taxa de juros.','',1213),(5157,'O valor presente de determinada variável econômica corresponde ao valor futuro, descontando-se a determinada taxa de juros.','',1213),(5158,'Considerando-se um período de capitalização igual ou superior a dois e uma mesma taxa de juros, um montante sujeito a capitalização no regime de juros compostos sempre apresentará rendimento maior que a capitalização no regime de juros simples.','',1213),(5159,'Um capital aplicado em título de capitalização produzirá montante inferior ao gerado pela aplicação do mesmo capital, pelo mesmo período, em caderneta de poupança, visto que, nos títulos de capitalização, os custos relativos a premiações, no caso de haver sorteios, e as despesas administrativas do emissor são descontados dos pagamentos efetuados no título.','',1213),(5160,'Com relação a fundos de investimentos, depósitos de poupança e títulos de capitalização, julgue os itens subsecutivos. Os fundos de investimento que se destinam a clientes com perfil mais conservador e que invistam em ativos cuja rentabilidade acompanhe, direta ou indiretamente, indicador de desempenho predefinido qualificam-se como fundos referenciados.','',1213),(5161,'Considerando que uma empresa comercial venda mercadorias a prazo para receber o pagamento por meio de prestações que tragam juros embutidos no seu valor, julgue os itens que se seguem, relativos ao reconhecimento da receita por parte dessa empresa comercial. Os juros serão reconhecidos como receitas financeiras ao longo do prazo da operação, tomando-se por base a taxa nominal de juros da operação.','',1214),(5162,'A diversificação de carteira com o objetivo de reduzir o risco é produtiva até determinado ponto, além do qual a incorporação de novos ativos deixa de produzir efeito identificável no risco da carteira.','',1214),(5163,'Se a expectativa de mercado for de queda da taxa de juros, então o preço de mercado de um título de renda fixa sem cupom deverá aumentar em resposta à queda dos juros.','',1214),(5164,'O valor presente de determinada variável econômica corresponde ao valor futuro, descontando-se a determinada taxa de juros.','',1214),(5165,'Considerando-se um período de capitalização igual ou superior a dois e uma mesma taxa de juros, um montante sujeito a capitalização no regime de juros compostos sempre apresentará rendimento maior que a capitalização no regime de juros simples.','',1214),(5166,'Estão corretas as afirmativas I, II e III.','',1215),(5167,'Apenas I e III são corretas e II incorreta.','',1215),(5168,'As afirmativas I, II e III são incorretas.','',1215),(5169,'Apenas as afirmativas I e II estão corretas e a III é incorreta.','',1215),(5170,'A afirmativa I é a única correta e as afirmtivas II e III são incorretas.','',1215),(5171,'A taxa de juros real corresponde à taxa efetiva corrigida pelo índice inflacionário do período.','',1216),(5172,'A taxa efetiva é aquela em que o período de formação e incorporação dos juros ao capital é diferente do período a que a taxa está referida, como, por exemplo, taxa de 37\\% a.a. com capitalização mensal.','',1216),(5173,'A taxa nominal é aquela em que o período de formação e incorporação dos juros ao capital coincide com aquele a que a taxa está referida.','',1216),(5174,'Taxa nominal é a taxa descontada a inflação do período.','',1216),(5175,'Taxa de juros real e taxa de juros simples são sinônimos.','',1216),(5176,'Taxa de risco, taxa livre de risco e inflação.','',1217),(5177,'Taxa de risco e spread.','',1217),(5178,'Taxa de risco, taxa livre de risco e taxa de juro real.','',1217),(5179,'Taxa referencial, taxa de risco e inflação.','',1217),(5180,'Taxa de juro real, taxa de risco e spread.','',1217),(5181,'Quanto maior o prazo de aplicação (n), maiores os juros ganhos na operação.','',1218),(5182,'Quanto maior a taxa de juros (i) da operação, menor será o montante (M) resgatado.','',1218),(5183,'O montante (M) é igual ao capital (C), multiplicado pela taxa de juros (i) e pelo prazo da operação (n).','',1218),(5184,'A diferença entre o capital aplicado e o montante resgatado, nessa ordem, corresponde aos juros da operação.','',1218),(5185,'Os juros ganhos em uma aplicação dependem, exclusivamente, do capital (C) aplicado inicialmente.','',1218),(5186,'Para um mesmo capital, uma mesma taxa e um mesmo prazo, o montante obtido a juros compostos sempre será maior que o montante obtido a juros simples.','',1219),(5187,'Formação do montante em juros simples é linear.','',1219),(5188,'Formação do montante em juros compostos é exponencial.','',1219),(5189,'Determinado capital aplicado por N meses, à taxa mensal de juros simples de i\\%, apresentará o mesmo valor de juros para cada um dos N meses.','',1219),(5190,'Determinado capital aplicado por N meses, à taxa mensal de juros compostos de i\\%, apresentará valor diferente para os juros de cada um dos N meses.','',1219),(5191,'I(V), II(F) e III(V).','',1220),(5192,'I(V), II(V) e III(F).','',1220),(5193,'I(V), II(F) e III(F).','',1220),(5194,'I(F), II(F) e III(V).','',1220),(5195,'I(F), II(F) e III(F).','',1220),(5196,'[[code:\'{:,.2f}\'.format(float(correctAnswer))]]','',1235),(5197,'[[code:\'{:,.2f}\'.format(float(correctAnswer+1))]]','',1235),(5198,'[[code:\'{:,.2f}\'.format(float(correctAnswer-2))]]','',1235),(5199,'[[code:\'{:,.2f}\'.format(float(correctAnswer-1))]]','',1235),(5200,'[[code:\'{:,.2f}\'.format(float(correctAnswer-8))]]','',1235),(5201,'[[code:correctAnswer]]','',1236),(5202,'[[code:createWrongAnswers([4,10])]] % 4 different wrong alternatives between +/- 10','',1236),(5203,'[[code:correctAnswer]] % correct answer','',1237),(5204,'[[code:createWrongAnswers([2])]]  % create 2 different wrong answers','',1237),(5205,'Tree','',1237),(5206,'Pointer','',1237),(5207,'44 % alternativa correta - sempre a primeira','',1243),(5208,'35','',1243),(5209,'43','',1243),(5210,'55','',1243),(5211,'47','',1243),(5212,'[[code:correctAnswer]]','',1244),(5213,'[[code:createWrongAnswers([4,10])]]','',1244),(5214,'[[code:correctAnswer]]','',1245),(5215,'[[code:correctAnswer-1]]','',1245),(5216,'[[code:correctAnswer-2]]','',1245),(5217,'[[code:correctAnswer+1]]','',1245),(5218,'[[code:correctAnswer+2]]','',1245),(5226,'[[code:correctAnswer]]','',1246),(5229,'[[code:correctAnswer + random.randrange(-10, 10, 1)]]','',1246),(5230,'Charles Babbage, que inventou a máquina analítica mecânica','',1247),(5231,'Ada Augusta Lovelace, que inventou os primeiros comandos de um programa','',1247),(5232,'Jacquard, que inventou a máquina de tecer programável','',1247),(5233,'Hermann Hollelith, que inventou a máquina de tabulação programável','',1247),(5234,'Blaise Pascal, que inventou a primeira calculadora mecânica','',1247),(5235,'Hermann Hollelith, que inventou a máquina de tabulação programável','',1248),(5236,'Charles Babbage, que inventou a máquina analítica mecânica','',1248),(5237,'Ada Augusta Lovelace, que inventou os primeiros comandos de um programa','',1248),(5238,'Jacquard, que inventou a máquina de tecer programável','',1248),(5239,'Blaise Pascal, que inventou a primeira calculadora mecânica','',1248),(5240,'Jacquard, que inventou a máquina de tecer programável','',1249),(5241,'Hermann Hollelith, que inventou a máquina de tabulação programável','',1249),(5242,'Charles Babbage, que inventou a máquina analítica mecânica','',1249),(5243,'Ada Augusta Lovelace, que inventou os primeiros comandos de um programa','',1249),(5244,'Blaise Pascal, que inventou a primeira calculadora mecânica','',1249),(5245,'Ada Augusta Lovelace, que inventou os comandos para uma máquina mecânica inexistente','',1250),(5246,'Jacquard, que inventou a máquina de tecer programável','',1250),(5247,'Hermann Hollelith, que inventou a máquina de tabulação programável','',1250),(5248,'Charles Babbage, que inventou a máquina analítica programável','',1250),(5249,'Blaise Pascal, que inventou a primeira calculadora mecânica','',1250),(5250,'Junção de dois conceitos: calculadora programável e processamento de dados','',1251),(5251,'Evolução do conceito de calculadora programável','',1251),(5252,'Evolução do conceito de processamento de dados','',1251),(5253,'Evolução tecnológica das válvulas, transístores, circuitos integrados e VLSI','',1251),(5254,'Evolução do VLSI, que integra cada vez mais transistores em um chip','',1251),(5255,'Evolução tecnológica das válvulas, transístores, circuitos integrados e VLSI','',1252),(5256,'Junção de dois conceitos: calculadora programável e processamento de dados','',1252),(5257,'Evolução do conceito de calculadora programável','',1252),(5258,'Evolução do conceito de processamento de dados','',1252),(5259,'Evolução do VLSI, que integra cada vez mais transistores em um chip','',1252),(5260,'Evolução do VLSI, que integra cada vez mais transistores em um chip','',1253),(5261,'Evolução tecnológica das válvulas, transístores, circuitos integrados e para VLSI','',1253),(5262,'Junção de dois conceitos: calculadora programável e processamento de dados','',1253),(5263,'Evolução do conceito de calculadora programável','',1253),(5264,'Evolução do conceito de processamento de dados','',1253),(5265,'Incluir as Instruções na memória do computador, além dos Dados','',1254),(5266,'Utilização da lógica binária, ao invés da decimal','',1254),(5267,'Utilização dos transístores no lugar das válvulas, na construção de computadores','',1254),(5268,'Construir o primeiro computador eletrônico, o ENIAC','',1254),(5269,'Uma arquitetura de computador baseada em válvulas','',1254),(5270,'Incluir as Instruções na memória do computador, além dos Dados','',1255),(5271,'Utilização da lógica binária, ao invés da decimal','',1255),(5272,'Utilização dos transístores no lugar das válvulas, na construção de computadores','',1255),(5273,'Utilização VLSI no lugar do Circuito Integrado, na construção de computadores','',1255),(5274,'Uma arquitetura de computador baseada em válvulas','',1255),(5275,'Demonstração do funcionamento do somador binário em 1940','',1256),(5276,'Desenvolvimento da álgebra booleana pelo matemático Boole','',1256),(5277,'Descoberta do transístor, que veio a substituir as válvulas','',1256),(5278,'Utilização do relé eletromecânico (chave liga/desliga) nos primeiros computadores','',1256),(5279,'Desenvolvimento do VLSI, que é baseado em sistema digital','',1256),(5280,'Primeira empresa a implementar a arquitetura Von Neumann em um circuito integrado','',1257),(5281,'Empresa inventora da UCP (ou CPU)','',1257),(5282,'Primeira empresa a implementar uma calculadora eletrônica em um circuito integrado','',1257),(5283,'Empresa inventora do Computador Pessoal (PC)','',1257),(5284,'Empresa inventora do LSI - \"Large Scale Integration\"','',1257),(5285,'Potencializa as aplicações da computação através do processamento das informações (Hardware e Software)','',1258),(5286,'Reduz drasticamente os erros, pois os sinais digitais não tem erros','',1258),(5287,'Simplifica o tratamento da informação, pois o sistema digital é mais simples (só tem 0 e 1) que o analógico','',1258),(5288,'Traz vantagens, pois a comunicação digital é melhor que o analógico','',1258),(5289,'Traz vantagens, pois o armazenamento digital é melhor que o analógico','',1258),(5290,'Potencializa as aplicações da computação através do processamento das informações (Hardware e Software)','',1259),(5291,'Reduz drasticamente os erros, pois os sinais digitais não tem erros','',1259),(5292,'A comunicação digital é melhor que o analógico','',1259),(5293,'O armazenamento digital é melhor que o analógico','',1259),(5294,'O bit é mais imune a ruídos do que os sinais analógicos do vinil','',1260),(5295,'O processo de digitalização da música não tem erros','',1260),(5296,'A leitura do sinal do CD é ótica, que não gera erros ou ruídos','',1260),(5297,'A eletrônica digital é melhor que a eletrônica analógica','',1260),(5298,'A reprodução do sinal do CD não envolve eletrônica analógica','',1260),(5299,'O bit é mais imune a ruídos do que os sinais analógicos','',1261),(5300,'O processo de digitalização não gera erros','',1261),(5301,'A leitura do sinal digital não gera erros ou ruídos','',1261),(5302,'A eletrônica digital é melhor que a eletrônica analógica','',1261),(5303,'A reprodução do sinal digital não envolve eletrônica analógica','',1261),(5304,'Processamento, Armazenamento, Comunicação e Dispositivos de Entrada e Saída','',1262),(5305,'Processador, Memória, Discos e Interface com o usuário (monitor, teclado, mouse, impressora)','',1262),(5306,'Processador, Memória primária, Memória secundária, e Interfaces (Usuário, E/S e Comunicação)','',1262),(5307,'Processamento, Memória, Armazenamento, Comunicação e Dispositivos de Entrada e Saída','',1262),(5308,'Processador, Memória primária, Memória secundária, e Dispositivos de Entrada e Saída','',1262),(5309,'A função dos Sistemas Operacionais de computadores pessoais como Windows é somente a Interface com o Usuário','',1263),(5310,'O Sistema Operacional em Tempo Real (RTOS) altera a ordem de execução das aplicações em função do deadline das suas saídas','',1263),(5311,'O Linux é um Sistema Operacional para computadores pessoais (PC) baseado no Unix desenvolvido na década de 70','',1263),(5312,'O Sistema Operacional coloca os Softwares Aplicativos em uma fila de execução para ordenar o acesso à CPU','',1263),(5313,'As funções do Sistema Operacional são: gerenciar o hardware e o software aplicativo, além de prover uma interface padronizada do hardware','',1263),(5314,'Decorre de pesados investimentos em processos de fabricação, instrumentos de precisão, química e mecânica fina, entre outros','',1264),(5315,'Estava previsto na lei de Moore, que estabelece que a quantidade de transistores em um chip dobra a cada 18 meses','',1264),(5316,'Decorre da evolução da computação que permite a miniaturização do transistor','',1264),(5317,'Decorre porque a 4a geração de Computadores (VLSI) ainda está ativa','',1264),(5318,'Decorre da evolução do software aplicativo que permite o projeto de transistores menores','',1264),(5319,'Pode aumentar a capacidade de armazenamento individual dos discos','',1265),(5320,'Pode utilizar a paridade para Corrigir o disco com falhas','',1265),(5321,'Pode aumentar o desempenho, reduzindo o tempo médio de acesso aos dados armazenados','',1265),(5322,'Pode aumentar a confiabilidade dos dados, devido à redundância dos discos','',1265),(5323,'Pode aumentar o desempenho E a confiabilidade do conjunto de discos','',1265),(5324,'Utilizar a paridade para Corrigir o disco com falhas','',1266),(5325,'Aumentar a capacidade de armazenamento individual dos discos','',1266),(5326,'Aumentar o tempo médio de acesso aos dados armazenados','',1266),(5327,'Aumentar a taxa de falhas, devido à maior quantidade de discos operando','',1266),(5328,'Reduzir a confiabilidade do conjunto de discos','',1266),(5329,'25','',1267),(5330,'20','',1267),(5331,'15','',1267),(5332,'10','',1267),(5333,'30','',1267),(5334,'23','',1268),(5335,'07','',1268),(5336,'14','',1268),(5337,'43','',1268),(5338,'31','',1268),(5339,'11','',1269),(5340,'08','',1269),(5341,'05','',1269),(5342,'01 e um capacitor','',1269),(5343,'14','',1269),(5344,'25','',1270),(5345,'20','',1270),(5346,'15','',1270),(5347,'10','',1270),(5348,'05','',1270),(5349,'AND, OR, NOT e Soma binária','',1271),(5350,'AND, OR, NOT, Soma binária, Subtração (Complemento de 1), Incremento e Decremento','',1271),(5351,'AND, OR, NAND, NOR, XOR, NOT, Incremento e Decremento','',1271),(5352,'Soma, Subtração, Multiplicação, Divisão, AND, OR, NOT','',1271),(5353,'Soma, Subtração, AND, OR, NAND, NOR, XOR, NOT','',1271),(5354,'16 bits de saída, sendo que todos estarão com sinal \"0\", exceto a quinta saída com nível \"1\"','',1272),(5355,'16 bits de saída, sendo que todos estarão com sinal \"0\", exceto a quarta saída com nível \"1\"','',1272),(5356,'4 bits de saída, sendo que todos estarão com sinal \"0\", exceto a quarta saída com nível \"1\"','',1272),(5357,'4 bits de saída, sendo que todos estarão com sinal \"0\", exceto a terceira saída com nível \"1\"','',1272),(5358,'2 bits de saída, com os sinais \"10\", indicando o bit 2 da entrada (bits: 3, 2, 1, 0)','',1272),(5359,'16 bits de saída, sendo que todos estarão com sinal \"0\", exceto a terceira saída com nível \"1\"','',1273),(5360,'16 bits de saída, sendo que todos estarão com sinal \"0\", exceto a segunda saída com nível \"1\"','',1273),(5361,'4 bits de saída, sendo que todos estarão com sinal \"0\", exceto a segunda saída com nível \"1\"','',1273),(5362,'4 bits de saída, sendo que todos estarão com sinal \"0\", exceto a terceira saída com nível \"1\"','',1273),(5363,'2 bits de saída, com os sinais \"01\", indicando o bit 1 da entrada (bits: 3, 2, 1, 0)','',1273),(5364,'Busca de uma instrução na memória pela CPU','',1274),(5365,'Parte do ciclo de instrução responsável pela execução da instrução','',1274),(5366,'Incremento do registrador Program Counter (PC) que aponta para a próxima instrução','',1274),(5367,'Responsável pela geração do ciclo de máquina','',1274),(5368,'Busca de um dado na memória pela CPU','',1274),(5369,'É um ciclo de período fixo onde são divididas as etapas da instrução','',1275),(5370,'É o ciclo responsável exclusivamente pela execução de uma instrução','',1275),(5371,'Incrementa o registrador Program Counter (PC) que aponta para a próxima instrução','',1275),(5372,'Responsável pela geração do clock de instruções','',1275),(5373,'Etapa de busca de uma instrução na memória pela CPU','',1275),(5374,'Um ciclo de instrução é composto por diversos ciclos de máquinas necessários para a execução de todas as etapas de uma instrução','',1276),(5375,'Um ciclo de máquina é composto por diversos ciclos de instruções necessários para a execução de todas as etapas de uma instrução','',1276),(5376,'Os ciclos de máquina e de instruções são executados em paralelo no pipeline para aumentar o desempenho da CPU','',1276),(5377,'O ciclo de máquina é responsável pela execução das etapas \"fixas\" de uma instrução, como fetch e incremento do PC. O ciclo de instrução executa apenas a etapa específica da instrução','',1276),(5378,'O ciclo de instruções é responsável pela geração das etapas do ciclo de máquina','',1276),(5379,'Estabelece a base de tempo para as quadraturas em que os ciclos de máquina são divididos','',1277),(5380,'Responsável pelo relógio de tempo real do computador','',1277),(5381,'Permite cronometrar a execução das instruções da CPU','',1277),(5382,'Estabelece a base de tempo para as quadraturas em que os ciclos de instruções são divididos','',1277),(5383,'Responsável exclusivo pelo desempenho da CPU','',1277),(5384,'São sinais dos dispositivos internos da CPU gravados em uma memória ROM gerados a partir do código das instruções','',1278),(5385,'É um programa escrito em Assembly para o funcionamento da CPU','',1278),(5386,'É qualquer programa escrito em código das instruções em Assembly da CPU','',1278),(5387,'É um programa básico gravado em uma memória ROM para o funcionamento da CPU','',1278),(5388,'Permite a conversão da linguagem Assembly em código das instruções correspondentes','',1278),(5389,'PC e IR para a área de programas, e MAR e MDR para a área de dados','',1279),(5390,'PC e IR para a área de dados, e MAR e MDR para a área de programas','',1279),(5391,'PC e MAR para acesso ao conteúdo da memória externa','',1279),(5392,'PC contém o código da instrução e o MAR contém o dado','',1279),(5393,'PC (endereços) e MAR (dados) contêm os valores dos barramentos em parênteses','',1279),(5394,'Permite armazenar o conteúdo do Program Counter na pilha, para que possa retornar ao fluxo de controle anterior','',1280),(5395,'No tratamento da interrupção, indica a pilha onde deverão ser armazenados os valores do acumulador e registradores utilizados','',1280),(5396,'Permite armazenar os valores do acumulador e registradores utilizados pela Sub-rotina','',1280),(5397,'Permite armazenar os endereços das pilhas onde estão os valores do acumulador e registradores utilizados','',1280),(5398,'Indica a pilha onde deverão ser armazenados os valores do acumulador e registradores utilizados','',1280),(5399,'Operações lógicas e aritméticas, Operações com Fluxo de dados, e Operações com Fluxo de controle','',1281),(5400,'Operações lógicas, Operações booleanas, e Operações aritméticas','',1281),(5401,'AND, OR, INV (NOT), ADD (Soma), SUB (Subtração), GOTO (Salto), JZ (Salto condicional), JNZ, CALL e RET','',1281),(5402,'Operações lógicas e aritméticas e Operações com Fluxo de dados','',1281),(5403,'Operações lógicas e aritméticas e Operações com Fluxo de controle','',1281),(5404,'Compatibilidade com softwares existentes','',1282),(5405,'Todas instruções executadas por hardware','',1282),(5406,'Maximizar a taxa de execução de instruções','',1282),(5407,'Restringir o acesso à memória: somente LOAD e STORE','',1282),(5408,'Ter bastante registradores','',1282),(5409,'Ambos são estruturas internas da CPU dedicados a acelerar o fluxo de dados','',1283),(5410,'Permite a execução paralela de instruções, cada uma em estágios/etapas diferentes','',1283),(5411,'Utiliza hardware especializado para cada estágio/etapa da instrução','',1283),(5412,'Tem como objetivo executar uma instrução a cada ciclo de máquina','',1283),(5413,'O Superescalar tem hardware especializado para cada tipo de instrução','',1283),(5414,'São memórias estáticas que tem como objetivo compatibilizar as velocidades de acesso entre a CPU e a memória principal','',1284),(5415,'São cópias da memória principal com o objetivo de ter redundância de dados e instruções','',1284),(5416,'São memórias rápidas que tem como objetivo compatibilizar as diferentes densidades de dados entre a CPU e a memória principal','',1284),(5417,'São dispositivos que permitem o acesso da CPU à memória principal','',1284),(5418,'Contém instruções e dados temporários utilizados pela CPU','',1284),(5419,'Os Caches L1, L2 e L3 (e L4) possuem cópias de diferentes partes da memória principal','',1285),(5420,'Os Caches possuem níveis, com diferentes tamanhos, velocidades e funções','',1285),(5421,'O hit-rate indica a quantidade de acertos que o Cache obteve com os dados e instruções que a CPU acessou','',1285),(5422,'O write-back refere-se aos dados alterados que são escritas de volta nos diversos níveis do Cache','',1285),(5423,'O branch prediction refere-se à análise do Cache de instruções para localizar e preparar futuras instruções','',1285),(5424,'São alterações dinâmicas da ordem de execução das instruções com o objetivo de manter o pipeline e o superescalar fluindo','',1286),(5425,'São módulos responsáveis pela execução paralela de instruções, que dependendo da velocidade de execução, alteram-se a ordem','',1286),(5426,'São instruções não previstas pelo Sistema Operacional, que são inseridas dinamicamente no fluxo de execuções','',1286),(5427,'São instruções não previstas pelo Compilador, que são inseridas dinamicamente no fluxo de execuções','',1286),(5428,'A CPU está sempre analisando o Cache de instruções para evitar executar instruções que podem estar fora de ordem','',1286),(5429,'É o módulo responsável pelo descarte de resultados da execução do \"then\" ou do \"else\" quando estes blocos foram ambos executados enquanto se esperava o resultado da avaliação da condição do \"if\"','',1287),(5430,'É o módulo responsável pelo descarte de resultados inválidos após detecção de falhas de execução','',1287),(5431,'É o módulo responsável pelo descarte de resultados inválidos após execução fora de ordem da CPU','',1287),(5432,'É o módulo responsável pelo descarte de resultados de instruções não previstas pelo Sistema Operacional','',1287),(5433,'É o módulo responsável pelo descarte de resultados de instruções não previstas pelo Compilador','',1287),(5434,'Alterar dinamicamente a fila de execução de programas aplicativos para otimizar o desempenho','',1288),(5435,'Transferir variáveis da memória externa para registradores internos da CPU para aumentar o desempenho','',1288),(5436,'Traduzir o programa escrito em uma linguagem de alto nível para o código de instruções Assembly da CPU','',1288),(5437,'Segmentar os blocos de instruções e de dados para compatibilizar com o tamanho dos blocos do Cache','',1288),(5438,'Alterar a ordem de execução das instruções do programa para manter o pipeline e o superescalar fluindo','',1288),(5439,'Simplifica o tratamento da informação, pois o sistema digital é mais simples (só tem 0 e 1) que o analógico','',1259),(5440,'Patente de invenção e patente de modelo de utilidade;','',1289),(5441,'Patente de invenção, patente de modelo de utilidade, patente de modelo industrial e patente de desenho industrial;','',1289),(5442,'Patente de invenção, patente de modelo de utilidade e patente de desenho industrial;','',1289),(5443,'Patente de invenção;','',1289),(5444,'Patente de modelo industrial e patente de desenho industrial.','',1289),(5445,'Qualquer pessoa física ou jurídica que tenha legitimidade para obter a patente;','',1290),(5446,'Apenas o inventor ou inventores;','',1290),(5447,'Apenas a pessoa a quem o contrato de trabalho determinar que pertencem os direitos sobre a invenção;','',1290),(5448,'Apenas os sucessores do ou dos inventores;','',1290),(5449,'Qualquer pessoa física ou jurídica.','',1290),(5450,'Após 18 meses contados do depósito do pedido de patente no Brasil ou de sua prioridade, se houver;','',1291),(5451,'Após a realização da busca e conclusão do exame técnico;','',1291),(5452,'Após 60 dias contados do depósito do pedido de patente no Brasil ou de sua prioridade, se houver;','',1291),(5453,'Apenas após o depositante requerer a publicação do pedido de patente, mediante pagamento de retribuição específica;','',1291),(5454,'Imediatamente após o depósito do pedido de patente no Brasil.','',1291),(5455,'Após o depositante requerer o exame, dentro do prazo de 36 meses do depósito do pedido no Brasil;','',1292),(5456,'Imediatamente após a publicação do pedido de patente;','',1292),(5457,'Após 60 dias contados do depósito do pedido de patente no Brasil ou de sua prioridade, se houver;','',1292),(5458,'Após 18 meses contados do depósito do pedido de patente no Brasil ou de sua prioridade, se houver;','',1292),(5459,'Imediatamente após o depósito do pedido de patente no Brasil.','',1292),(5460,'Formulário específico; relatório descritivo; reivindicações; desenhos ou fotografias, se for o caso; resumo; comprovante de recolhimento da retribuição relativa ao depósito;','',1293),(5461,'Relatório descritivo; reivindicações; desenhos ou fotografias se for o caso; resumo;','',1293),(5462,'Formulário específico; relatório descritivo; reivindicações; desenhos ou fotografias, se for o caso; comprovante de recolhimento da retribuição relativa ao depósito; procuração e declaração do inventor;','',1293),(5463,'Relatório descritivo; reivindicações;','',1293),(5464,'Formulário específico; relatório descritivo; reivindicações; desenhos ou fotografias, se for o caso; resumo.','',1293),(5465,'Um acessório da patente, que serve para proteger aperfeiçoamento introduzido no objeto da invenção, dentro do mesmo conceito inventivo, ainda que destituído de atividade inventiva frente ao objeto da patente;','',1294),(5466,'Um certificado que atesta a qualidade da invenção reivindicada em um pedido de patente;','',1294),(5467,'Um parecer emitido pelo examinador, atestando que a invenção patenteada representa um avanço frente ao estado da técnica;','',1294),(5468,'Um certificado emitido pelo examinador durante o exame técnico, autorizando a inclusão de mais uma invenção no pedido de patente, mediante pagamento de retribuição específica;','',1294),(5469,'Um acessório da patente que permite que se protejam invenções que não pertencem ao mesmo conceito inventivo da patente principal e que expira juntamente com a patente.','',1294),(5470,'Os atos praticados pelo inventor publicamente durante os 12 (doze) meses que precederam a data de depósito do referido pedido de patente;','',1295),(5471,'Os atos praticados por terceiros publicamente durante os 12 (doze) meses que precederam a data de depósito do referido pedido de patente;','',1295),(5472,'Os atos praticados pelo inventor publicamente em feiras e exposições oficialmente reconhecidas durante os 180 (cento e oitenta) dias que precederam a data de depósito do referido pedido de patente;','',1295),(5473,'Os atos praticados publicamente pelo inventor a qualquer tempo;','',1295),(5474,'Os atos praticados pelo inventor publicamente durante os 180 (cento e oitenta) dias que precederam a data de depósito do referido pedido de patente.','',1295),(5475,'Pelas reivindicações, interpretadas com auxílio do relatório descritivo e desenhos;','',1296),(5476,'Pelo relatório descritivo, interpretado com auxílio das reivindicações;','',1296),(5477,'Pelas reivindicações, interpretadas com auxílio do resumo e dos desenhos;','',1296),(5478,'Pelo resumo, interpretado com auxílio das reivindicações;','',1296),(5479,'Pelo relatório descritivo, interpretado com auxílio do resumo e dos desenhos.','',1296),(5480,'Novidade, atividade inventiva e aplicação industrial;','',1297),(5481,'Novidade e atividade inventiva;','',1297),(5482,'Atividade inventiva e aplicação industrial;','',1297),(5483,'Novidade, ato inventivo e aplicação industrial;','',1297),(5484,'Novidade e ato inventivo.','',1297),(5485,'Tudo aquilo que foi tornado acessível ao público no Brasil ou no exterior, por descrição escrita ou oral, por uso ou qualquer outro meio, antes da data de depósito do pedido de patente ou de sua prioridade;','',1298),(5486,'Tudo aquilo que foi tornado acessível ao público no Brasil ou no exterior, por descrição escrita ou oral, por uso ou qualquer outro meio, antes do exame do pedido;','',1298),(5487,'Tudo aquilo que foi tornado acessível ao público no Brasil antes da data de depósito do pedido de patente ou de sua prioridade;','',1298),(5488,'Tudo aquilo que foi tornado acessível ao público no Brasil ou no exterior, apenas por descrição escrita, antes da data de depósito do pedido de patente ou de sua prioridade;','',1298),(5489,'Todas as patentes que foram tornadas acessíveis ao público no Brasil ou no exterior, antes da data de depósito do pedido de patente ou de sua prioridade.','',1298),(5490,'A lei que regula direitos e obrigações relativas à propriedade industrial e aos tratados em vigor no Brasil;','',1299),(5491,'A lei que regula direitos e obrigações relativas à propriedade industrial e aos tratados em vigor no Brasil, alterados pelos atos normativos estabelecidos pelo presidente do INPI;','',1299),(5492,'A lei que regula direitos e obrigações relativas à propriedade industrial e aos tratados em vigor no Brasil, alterados pelos atos normativos estabelecidos pelo presidente do INPI e pelas diretrizes ou manuais de exame técnico;','',1299),(5493,'O exame técnico está exclusivamente subordinado aos atos normativos estabelecidos pelo presidente do INPI, diretrizes e manuais de exame técnico;','',1299),(5494,'A lei que regula direitos e obrigações relativas à propriedade industrial, não estando subordinado aos tratados em vigor no Brasil.','',1299),(5495,'O direito de impedir terceiro, sem o seu consentimento, de produzir, usar, colocar à venda, vender ou importar com estes propósitos produto objeto de patente ou processo ou produto obtido diretamente por processo patenteado;','',1300),(5496,'O direito de uso exclusivo do objeto patenteado em todo o território nacional;','',1300),(5497,'O direito de uso, gozo e fruição de todo o conteúdo da patente, conforme concedida;','',1300),(5498,'Todos os direitos inerentes aos institutos da posse e da propriedade ao que está descrito;','',1300),(5499,'Todos os direitos inerentes aos institutos da posse e da propriedade ao que está descrito ou reivindicado.','',1300),(5500,'Que provar o depósito mais antigo, independentemente das datas de invenção ou criação;','',1301),(5501,'Que provar a divulgação de invenção ou modelo de utilidade ocorrida durante os 12 (doze) meses que precederem a data de depósito ou a da prioridade do pedido de patente;','',1301),(5502,'Que provar a data de invenção mais antiga, por todos os meios de prova admitidos em direito;','',1301),(5503,'Que provar a data de criação mais antiga, por todos os meios de prova admitidos em direito;','',1301),(5504,'Que provar o depósito mais antigo, independentemente das datas de prioridade interna ou internacional.','',1301),(5505,'Que a invenção atende aos requisitos de novidade, atividade inventiva e aplicação industrial, que o relatório descreve clara e suficientemente o objeto, de modo a possibilitar sua realização por técnico no assunto e que indica, quando for o caso, a melhor forma de execução;','',1302),(5506,'Que a invenção atende aos requisitos de novidade, atividade inventiva e aplicação industrial, mesmo que o relatório não descreva clara e suficientemente o objeto, de modo a possibilitar sua realização por técnico no assunto;','',1302),(5507,'Que a invenção soluciona um problema técnico, atende aos requisitos de novidade e aplicação industrial, descrevendo o relatório, clara e suficientemente, o objeto, de modo a possibilitar sua realização por técnico no assunto, e que indica, quando for o caso, a melhor forma de execução;','',1302),(5508,'A prévia anuência da Agência Nacional de Vigilância Sanitária (ANVS);','',1302),(5509,'Que a invenção, quando de processo, atende aos requisitos de novidade, ato inventivo e aplicação industrial, que o relatório descreve clara e suficientemente o objeto, de modo a possibilitar sua realização por técnico no assunto e que indica, quando for o caso, a melhor forma de execução.','',1302),(5510,'Ao produto de uso prático, ou parte deste, suscetível de aplicação industrial, mas nunca ao processo;','',1303),(5511,'Ao produto de uso prático, ou parte deste, suscetível de aplicação industrial ou ao processo ou produto obtido diretamente por processo de uso prático, ou parte deste, suscetível de aplicação industrial;','',1303),(5512,'Ao produto de uso prático, ou parte deste, suscetível de aplicação industrial e ao processo ou produto obtido diretamente por processo de uso prático, ou parte deste, suscetível de aplicação industrial;','',1303),(5513,'Ao produto de uso prático, ou parte deste, suscetível de aplicação industrial, o que inclui reivindicações de uso do produto, mas nunca ao processo ou produto obtido diretamente por processo de uso prático, ou parte deste, suscetível de aplicação industrial;','',1303),(5514,'Ao produto de uso prático, ou parte deste, suscetível de aplicação industrial, ao processo ou produto obtido diretamente por processo de uso prático, ou parte deste, suscetível de aplicação industrial e a todo e qualquer aperfeiçoamento.','',1303),(5515,'Sempre que, para um técnico no assunto, não decorra de maneira evidente ou óbvia do estado da técnica e, que, não decorra de maneira comum ou vulgar do estado da técnica;','',1304),(5516,'Sempre que, para um técnico no assunto, fique comprovada a existência de ato inventivo e de atividade inventiva;','',1304),(5517,'Sempre que, para um técnico no assunto, não decorra de maneira comum ou evidente do estado da técnica e, que, não decorra de maneira vulgar ou óbvia do estado da técnica;','',1304),(5518,'Quando o objeto reivindicado no pedido de patente ou modelo de utilidade estiver compreendido no estado da técnica;','',1304),(5519,'Sempre que, para um técnico no assunto, não decorra de maneira comum ou vulgar do estado da técnica e, que, não decorra de maneira evidente ou óbvia do estado da técnica.','',1304),(5520,'Descobertas, teorias científicas e métodos implementados por programas de computador;','',1305),(5521,'As obras científicas;','',1305),(5522,'Tabuleiros de jogo;','',1305),(5523,'Produtos terapêuticos ou de diagnóstico, para aplicação no corpo humano ou animal;','',1305),(5524,'Aperfeiçoamento de produtos e processos em domínio público.','',1305),(5525,'Por tudo aquilo tornado acessível ao público antes da data de depósito do pedido de patente, por descrição escrita ou oral, por uso ou qualquer outro meio, no Brasil ou no exterior, ressalvado a prioridade internacional e nacional e o período de graça;','',1306),(5526,'Por todo o conteúdo de pedido depositado no Brasil, e ainda não publicado, a partir da data de depósito, ou da prioridade reivindicada, ainda que não venha a ser publicado;','',1306),(5527,'Por tudo aquilo tornado acessível ao público antes da data de depósito do pedido de patente, por descrição escrita ou oral, por uso ou qualquer outro meio, somente no Brasil;','',1306),(5528,'Por tudo aquilo tornado acessível ao público antes da data de depósito do pedido de patente, somente por descrição escrita no Brasil ou no exterior, ressalvada a prioridade internacional e nacional e o período de graça;','',1306),(5529,'Pela divulgação de invenção ou modelo de utilidade, quando ocorrida durante os 12 (doze) meses que precederem a data de depósito ou a da prioridade do pedido de patente.','',1306),(5530,'Ambos serão indeferidos, por falta de novidade;','',1307),(5531,'Apenas o pedido do inventor B será deferido, por ser ele o primeiro a depositar;','',1307),(5532,'Ambos serão deferidos;','',1307),(5533,'Apenas o pedido do inventor B será deferido, por ser ele o primeiro a inventar;','',1307),(5534,'Apenas o pedido do inventor A será deferido, uma vez que o depósito de seu pedido ocorreu durante os 12(doze) meses que sucederam a data de divulgação, estando assim amparado pelo período de graça.','',1307),(5535,'A lei assegura o direito de prioridade ao conteúdo integral do pedido, sendo cobertas pelos direitos de prioridade as alterações no relatório descritivo, desenhos e quadro reivindicatório do pedido depositado no país que não se estendam além do conteúdo da prioridade reivindicada;','',1308),(5536,'A lei assegura o direito de prioridade ao conteúdo do relatório descritivo, desenhos e reivindicações, não sendo permitida qualquer alteração no pedido depositado no país;','',1308),(5537,'A lei não assegura o direito de prioridade ao conteúdo do relatório descritivo e desenhos, mas somente ao quadro reivindicatório, não sendo permitida qualquer alteração no quadro reivindicatório do pedido depositado no país;','',1308),(5538,'A lei assegura o direito de prioridade ao conteúdo do relatório descritivo e desenhos, sendo permitida toda e qualquer alteração no quadro reivindicatório do pedido depositado no país;','',1308),(5539,'A lei assegura o direito de prioridade ao conteúdo do relatório descritivo e desenhos, sendo permitidas alterações exclusivamente no quadro reivindicatório do pedido depositado no país que não se estendam além do conteúdo da prioridade reivindicada.','',1308),(5540,'Apenas a identificação do depositante e do inventor (que pode preferir o anonimato), fixando, entretanto, o conteúdo do pedido através de desenhos (se for o caso) e/ou relatório, que não poderá ser emendado para incluir matéria não revelada originalmente;','',1309),(5541,'Obrigatoriamente, requerimento, relatório descritivo, reivindicações, desenhos (se for o caso), resumo, e comprovante do pagamento da retribuição relativa ao depósito;','',1309),(5542,'Obrigatoriamente, relatório descritivo, desenhos (se for o caso) e quadro reivindicatório;','',1309),(5543,'Obrigatoriamente, relatório descritivo, uma vez que desenhos não podem ser utilizados para fixar o conteúdo de um pedido de patente;','',1309),(5544,'Obrigatoriamente, de quadro reivindicatório para fixar o conteúdo do pedido de patente.','',1309),(5545,'Em produtos e processos;','',1310),(5546,'Em produtos, aplicações novas de meios conhecidos e aperfeiçoamento de invenção obrigatoriamente já em domínio público;','',1310),(5547,'Em métodos e processos;','',1310),(5548,'Em produtos, aplicações novas de meios conhecidos e aperfeiçoamento de qualquer invenção, mesmo que não se encontre em domínio público;','',1310),(5549,'Em processo ou produto obtido diretamente por processo patenteado.','',1310),(5550,'A possibilidade de incluir reivindicações que aumentem a abrangência do direito e alterem as categorias das reivindicações, desde que o objeto da patente não se estenda além do conteúdo do pedido originalmente depositado;','',1311),(5551,'A proibição de incluir reivindicações que aumentem a abrangência do direito, mesmo que o objeto da patente não se estenda além do conteúdo do pedido originalmente depositado;','',1311),(5552,'A possibilidade de inclusão de matéria nova;','',1311),(5553,'A proibição de alterar as categorias das reivindicações no pedido;','',1311),(5554,'A possibilidade de alterar, exclusivamente, erros materiais e de digitação.','',1311),(5555,'De pedidos de patente de produto ou processo concedidos após 14/05/1997;','',1312),(5556,'De pedidos de patentes relativos a produtos farmacêuticos e produtos químicos para a agricultura, que tenham sido depositados entre 1º de janeiro de 1995 e 14 de maio de 1997;','',1312),(5557,'De pedidos de patentes de processo apresentados entre 1º de janeiro de 1995 e 14 de maio de 1997, aos quais o art. 9º, alínea \"c\", da lei nº 5.772, de 21 de dezembro de 1971, não conferia proteção;','',1312),(5558,'De pedidos de patentes de produto apresentados entre 1º de janeiro de 1995 e 14 de maio de 1997, aos quais o art. 9º, alíneas \"b\" e \"c\", da lei nº 5.772, de 1971, não conferia proteção e cujos depositantes não tenham exercido a faculdade prevista nos artigos 230 e 231 da lei 9.279/96;','',1312),(5559,'De pedidos de patente cujo prazo entre o depósito ou prioridade e a concessão da carta patente seja de, no máximo, 5 anos.','',1312),(5560,'Arquivamento definitivo;','',1313),(5561,'Suspensão do exame;','',1313),(5562,'Arquivamento com direito a recurso;','',1313),(5563,'Indeferimento;','',1313),(5564,'Emissão de nova exigência.','',1313),(5565,'Requerimento; relatório descritivo; reivindicações; desenhos, e for o caso; resumo; comprovante do pagamento da retribuição relativa ao depósito;','',1314),(5566,'Relatório descritivo; reivindicações;','',1314),(5567,'Requerimento; relatório descritivo; reivindicações; desenhos, se for o caso; resumo; comprovante do pagamento da retribuição relativa ao depósito; procuração;','',1314),(5568,'Relatório descritivo; reivindicações; desenhos, se for o caso; resumo;','',1314),(5569,'Requerimento; relatório descritivo; reivindicações; desenhos, se for o caso; resumo.','',1314),(5570,'Para efeitos de determinação de novidade e atividade inventiva, o pedido de patente brasileiro não será prejudicado por fatos ocorridos após a data da prioridade reivindicada;','',1315),(5571,'A data de depósito no Brasil será a data da prioridade reivindicada;','',1315),(5572,'O prazo de vigência da patente brasileira será contado a partir da data da prioridade reivindicada;','',1315),(5573,'Para efeitos de busca, apenas serão considerados os documentos publicados após a data da prioridade reivindicada;','',1315),(5574,'O exame do pedido de patente com reivindicação de prioridade será efetuado com preferência sobre pedidos de patente depositados sem prioridade.','',1315),(5575,'Encerra a instância administrativa e à parte insatisfeita resta apenas recorrer ao Poder Judiciário;','',1316),(5576,'Enseja recurso ao Presidente do INPI;','',1316),(5577,'Enseja recurso ao Ministro do Desenvolvimento, Indústria e Comércio Exterior;','',1316),(5578,'Enseja recurso apenas quando ela anula o registro, mas não quando mantém a vigência do mesmo;','',1316),(5579,'Deve concluir pela manutenção da vigência do registro sempre que for verificado que o registro foi concedido com infração de dispositivos da Lei de Propriedade Industrial (Lei N° 9279/96).','',1316),(5580,'Tornar pedido de depósito internacional produzir em cada país designado o mesmo efeito apresentado juntamente de cada administração nacional;','',1317),(5581,'Tornar uma patente com abrangência internacional protegendo no mundo inteiro sem a necessidade de atender a questão da territoriedade;','',1317),(5582,'É um tratado que abrange todos os países e portanto não é necessário fazer o pedido em cada país;','',1317),(5583,'O PCT tem concessão da vigência da patente mais do que 20 anos;','',1317),(5584,'O PCT não tem como objetivo fazer repreensão à concorrência desleal.','',1317),(5585,'Consideram-se bens móveis, para os efeitos legais, os direitos de propriedade industrial;','',1318),(5586,'Não considera invenção como bem, por se tratar de mera ideia que se tornou pública;','',1318),(5587,'Considera como bens móveis sem efeitos legais tendo em vista sua importância para o desenvolvimento social;','',1318),(5588,'Abrange todas as questões de propriedade intelectual, tais como, obras de arte, música e livros;','',1318),(5589,'As questões sobre patentes podem ser registradas em qualquer cartório reconhecido pela União.','',1318),(5590,'A licença por se tratar de medicamento;','',1319),(5591,'A licença por abuso de direitos;','',1319),(5592,'A licença por abuso de poder econômico;','',1319),(5593,'A licença de dependência;','',1319),(5594,'A licença por interesse público;','',1319),(5595,'Para os pedidos internacionais depositados em virtude de tratado em vigor no Brasil, a tradução não deverá ser apresentada no prazo de 60 (sessenta) dias contados da data da entrada no processamento nacional;','',1320),(5596,'A reivindicação de prioridade será feita no ato de depósito, podendo ser suplementada dentro de 60 (sessenta) dias por outras prioridades anteriores à data do depósito no Brasil;','',1320),(5597,'A reivindicação de prioridade será comprovada por documento hábil da origem, contendo número, data, título, relatório descritivo e, se for o caso, reivindicações e desenhos, acompanhado de tradução simples da certidão de depósito ou documento equivalente, contendo dados identificadores do pedido, cujo teor será de inteira responsabilidade do depositante;','',1320),(5598,'Se não efetuada por ocasião do depósito, a comprovação deverá ocorrer em até 180 (cento e oitenta) dias contados do depósito;','',1320),(5599,'No caso de o pedido depositado no Brasil estar fielmente contido no documento da origem, será suficiente uma declaração do depositante a este respeito para substituir a tradução simples.','',1320),(5600,'Acelera e estimula o progresso econômico dos apenas países desenvolvidos pelo incremento da eficácia dos sistemas legais nacionais de proteção às invenções;','',1321),(5601,'Tem como objetivo simplificar e tornar mais econômica a obtenção de proteção patentária em diferentes países simultaneamente;','',1321),(5602,'Facilita e acelera o acesso às informações técnicas contidas nos documentos que descrevem as novas invenções;','',1321),(5603,'Nenhuma das disposições do PCT deve ser interpretada como restrição aos direitos previstos na Convenção da União de Paris em benefício dos nacionais ou domiciliados em qualquer dos Estados Contratantes;','',1321),(5604,'Pelo tratado, os Estados contratantes constituem-se em estado de União com o propósito de contribuir para o desenvolvimento da ciência e tecnologia.','',1321),(5605,'Fotografias podem ser protegidas como desenho industrial desde que tenham aplicação industrial.','',1322),(5606,'Os desenhos industriais registráveis não poderão conter textos, logotipos, timbres, rubricas, símbolos, marcas ou outras expressões.','',1322),(5607,'A extinção do registro se dá pela expiração do prazo de vigência, pela renúncia do titular e falta de pagamento dos quinquênios ou falta de procurador devidamente qualificado e domiciliado no País.','',1322),(5608,'Após a concessão, o titular poderá requerer o exame de mérito quanto à novidade e originalidade, a qualquer tempo da vigência do registro de Desenho Industrial.','',1322),(5609,'A atribuição do registro é feita sem exame prévio quanto à novidade e originalidade.','',1322),(5610,'Após a expedição do certificado de registro de desenho industrial não poderão ser instaurados processos de nulidade.','',1323),(5611,'São requisitos para a proteção: Novidade, Originalidade e servir de tipo de fabricação industrial.','',1323),(5612,'Após a concessão, o titular poderá requerer o exame de mérito quanto à novidade e originalidade, a qualquer tempo da vigência do registro de Desenho Industrial.','',1323),(5613,'Consiste na proteção da forma plástica ornamental de um objeto, proporcionando resultado visual novo e original na sua configuração externa e que possa servir de tipo de fabricação industrial.','',1323),(5614,'O pedido de DI deverá referir-se a um único objeto, sendo permitidas até 20 variantes em um mesmo pedido.','',1323),(5615,'O registro de desenho industrial protege tanto a cor quanto o tipo de material utilizado.','',1324),(5616,'Modelos e desenho industriais devem ser protegidos no INPI.','',1324),(5617,'O registro de Desenho Industrial vigora por 10 (dez) anos contados da data do depósito, prorrogáveis por mais 3 (três) períodos sucessivos de 5 (cinco) anos.','',1324),(5618,'São consideradas variantes, aqueles objetos que contiverem pequenas modificações do produto original, sem prejudicar as características deste (mesmas características distintivas preponderantes).','',1324),(5619,'São requisitos para a proteção: Novidade, Originalidade e servir de tipo de fabricação industrial.','',1324),(5620,'A exclusividade de direito é de 70 anos após ano seguinte da morte do autor.','',1325),(5621,'Um ano após a morte do autor torna-se domínio público.','',1325),(5622,'Após publicação tem 50 anos de excluvidade para os representantes legais.','',1325),(5623,'Apenas 10 anos após a publicação.','',1325),(5624,'São prorrogáveis a cada 10 anos após a morte do autor independente do registro.','',1325),(5625,'A exclusividade de direito é de 50 anos após ano seguinte do registro junto ao INPI.','',1326),(5626,'É passível apenas de proteção como patente.','',1326),(5627,'Tal como patente, sua vigência de exclusividade é de 20 anos após o registro.','',1326),(5628,'É registrado em cartório em qualquer cidade.','',1326),(5629,'No Brasil o software pode ser protegido como patente mesmo não sendo embarcado num dispositivo.','',1326),(5630,'O INPI é a instituição responsável pelo registro de obras literárias, artísticas e outras tantas no que se refere a direito de autor.','',1327),(5631,'O direito de autor tem como principal objetivo a proteção da expressão de ideias, reservando para seus autores o direito exclusivo sobre a reprodução de seus trabalhos.','',1327),(5632,'O direito de autor nasce com a criação da obra e não necessita de registro.','',1327),(5633,'O direito de autor possui duas naturezas: Direitos morais e direitos patrimoniais.','',1327),(5634,'São direitos patrimoniais: Direito de reprodução; Direito de comercialização; Direito de locação; Direito de autorização de modificações (edição, adaptação e tradução); entre outros.','',1327),(5635,'Quem adquire uma obra artística poderá proferir modificações na mesma a qualquer tempo, sem a necessidade de autorização do autor por se tratar de um bem privado.','',1328),(5636,'São direitos patrimoniais: Direito de reprodução; Direito de comercialização; Direito de locação; Direito de autorização de modificações (edição, adaptação e tradução); entre outros.','',1328),(5637,'O regime jurídico para a proteção aos Programas de Computador é o do Direito do Autor, disciplinado pela Lei de Software.','',1328),(5638,'Os direitos patrimoniais relativos ao programa de computador pertencem exclusivamente ao empregador ou contratante, salvo estipulação em contrário, se: Desenvolvido na vigência de contrato de trabalho ou de vínculo estatutários;','',1328),(5639,'As modalidades de Propriedade Intelectual para a proteção de Programas de Computador não são excludentes; São complementares!','',1328),(5640,'Estar registrada no Brasil e ser considerada de alto renome.','',1329),(5641,'Apenas ser notoriamente conhecida no seu ramo de atividade, independentemente de estar depositada ou registrada no Brasil.','',1329),(5642,'Ser uma marca que os concorrentes evidentemente não podem desconhecer em razão de sua atividade, independentemente de estar depositada ou registrada no Brasil.','',1329),(5643,'Ser também parte integrante da razão social da empresa.','',1329),(5644,'Estar registrada no Brasil em nome de uma empresa estrangeira.','',1329),(5645,'Goza de proteção independentemente de ser registrado como marca, pois é notoriamente conhecido e somente pode ser registrado com consentimento do próprio Édson Arantes do Nascimento.','',1330),(5646,'Gozará de proteção apenas se for registrado como marca perante o INPI.','',1330),(5647,'Deixou de gozar de proteção quando Pelé encerrou sua carreira de jogador de futebol.','',1330),(5648,'É merecedor de grau inferior de proteção quando comparado aos apelidos de jogadores mais jovens, como \"ZICO\".','',1330),(5649,'Deixará de gozar de proteção quando Pelé vier a falecer.','',1330),(5654,'Da visão.','',1332),(5655,'Do tato.','',1332),(5656,'Do olfato.','',1332),(5657,'Do paladar.','',1332),(5658,'Da audição.','',1332),(5659,'O titular do registro ou o depositante do pedido de registro da marca.','',1333),(5660,'Somente o titular do registro da marca.','',1333),(5661,'Somente o depositante do pedido de registro da marca com procuração.','',1333),(5662,'Somente pessoa física detentora dos direitos autorais do design da marca.','',1333),(5663,'Qualquer pessoa com legítimo interesse no uso da marca que tenha em mãos o design da marca.','',1333),(5664,'No Brasil a marca de Certificação só poderá ser requerida por pessoa com interesse comercial ou industrial direto no produto ou serviço.','',1334),(5665,'Marca coletiva é aquela usada para identificar produtos ou serviços provindos de membros de uma determinada entidade.','',1334),(5666,'O sistema de registro de marca no Brasil é atributivo de direito, isto é, a sua propriedade e o seu uso exclusivo somente são adquiridos pelo registro.','',1334),(5667,'As condições de validade aplicáveis a marcas são: distintividade, liceidade, disponibilidade e veracidade.','',1334),(5668,'Quanto à natureza, as marcas podem ser: de Produto, de Serviço, Coletiva e de Certificação.','',1334),(5669,'Marca de garantia é aquela usada para dar credibilidade a instituições e empresas novas no mercado como startups.','',1335),(5670,'A proteção de marcas está relacionada a importantes fatores de diferenciação entre produtos concorrentes assemelhados.','',1335),(5671,'A proteção assegurada à marca recai sobre produtos, mercadorias ou serviços correspondentes ao ramo de atividade do requerente.','',1335),(5672,'Como regra geral, àquele que primeiro depositar um pedido milita a prioridade do registro.','',1335),(5673,'Marca coletiva é aquela usada para identificar produtos ou serviços provindos de membros de uma determinada entidade.','',1335),(5674,'Para um logotipo no qual a principal marca da empresa esteja escrita na cor azul.','',1336),(5675,'Para a cor azul dos uniformes, de tal forma que ninguém mais poderá produzir uniformes iguais.','',1336),(5676,'A palavra azul.','',1336),(5677,'A cor azul, de tal forma que seus concorrentes jamais poderão utilizar tal cor','',1336),(5678,'A tonalidade azul caracteristica definida e registrada em escala de cores pantone oficial.','',1336),(5679,'Formal.','',1337),(5680,'Técnica.','',1337),(5681,'Exame de novidade e originalidade.','',1337),(5682,'Compatibilidade técnica com os computadores.','',1337),(5683,'Deve ser antes registrado como patente.','',1337),(5684,'Todas as alternativas estão corretas.','',1338),(5685,'Poderão ser apreendidos, de ofício ou a requerimento do interessado, pelas autoridades alfandegárias, no ato de conferência, os produtos assinalados como falsificadas, alteradas ou imitadas ou que apresentem falsa indicação de procedência.','',1338),(5686,'Nos crimes contra propriedade industrial previsto na LPI somente se procede mediante a queixa, salvo quanto ao crime do artigo 191, em que a ação penal será publicada.','',1338),(5687,'A ação penal e as diligências preliminares de busca e apreensão, nos crimes contra propriedade industrial, regulam pelo disposto no Código de Processo Penal, com as modificações constantes na LPI.','',1338),(5688,'Na diligência de busca e apreensão, em crime contra patente que tenha por objeto a invenção de processo, o oficial do juízo será acompanhado por perito, que verificará, preliminarmente, a existência do ilícito, podendo o juiz ordenar a apreensão de produtos obtidos pelo contrafator com o emprego do processo patenteado.','',1338),(5689,'Provindos de membros de uma determinada entidade.','',1339),(5690,'Considerados de interesse social.','',1339),(5691,'De uma mesma categoria e provenientes de uma mesma região geográfica.','',1339),(5692,'De uma mesma empresa.','',1339),(5693,'De uso coletivo.','',1339),(5694,'No Brasil podem ser registrados apenas IG de regiões do Brasil.','',1340),(5695,'O associativismo é a regra para o exercício do direito ao uso exclusivo do nome geográfico na sua atividade econômica, afastando a sua exploração individual.','',1340),(5696,'O nome geográfico que não constitua Indicação de Procedência ou Denominação de Origem poderá servir de elemento característico de marca para produto ou serviço, desde que não induza falsa procedência.','',1340),(5697,'As IG são tratadas e acordo com os Aspectos dos Direitos de Propriedade Intelectual Relacionados com o Comércio - TRIPS.','',1340),(5698,'Na IG A proteção se estende à representação gráfica ou figurativa da indicação geográfica, bem como à representação geográfica de país, cidade, região ou localidade de seu território cujo nome seja indicação geográfica.','',1340),(5699,'Mesmo quando o nome geográfico houver tornando-se de uso comum, designando produto ou serviço, será considerado Indicação Geográfica.','',1341),(5700,'O nome geográfico que não constitua Indicação de Procedência ou Denominação de Origem poderá servir de elemento característico de marca para produto ou serviço, desde que não induza falsa procedência.','',1341),(5701,'A Indicação Geográfica é registrado junto ao INPI.','',1341),(5702,'Constitui Indicação Geográfica de Procedência ou a Denominação de Origem.','',1341),(5703,'O uso da Indicação Geográfica é restrito aos produtores de serviço estabelecidos no local, exigindo-se ainda, em relação às denominações de origem, o atendimento aos requisitos de qualidade.','',1341),(5704,'Linhagem; cultivar distinta; cultivar estável; e, cultivar homogênea.','',1342),(5705,'Linhagem; cultivar distinta; cultivar homogênea; e, cultivar estável.','',1342),(5706,'Cultivar homogênea; cultivar estável; cultivar distinta; e, linhagem.','',1342),(5707,'Cultivar homogênea; cultivar distinta; cultivar estável; e, linhagem.','',1342),(5708,'Cultivar distinta; linhagem, cultivar homogênea; e, cultivar estável.','',1342),(5709,'É considerada homogênea uma cultivar que seja suficientemente madura e melhorada.','',1343),(5710,'A proteção de cultivares no Brasil é considerada uma proteção sui generis e possui legislação específica.','',1343),(5711,'A proteção das cultivares no Brasil protege plantas geneticamente modificadas.','',1343),(5712,'A legislação referente a cultivares essencialmente derivadas impede que ela seja comercializada sem retorno financeiro ao obtentor de cultivar inicial.','',1343),(5713,'Denominações protegidas ou em processo de proteção em outro país deverão ser mantidas; Exemplo cultivar de maçã Fuji.','',1343),(5714,'A forma estética de um biscoito pode ser protegida por patente.','',1344),(5715,'A proteção de desenho industrial é feita pelo registo no INPI.','',1344),(5716,'A proteção das cultivares no Brasil é feita pelo ministério da agricultura e tem prazo de validade de 15 ou 18 anos dependendo da variedade protegida.','',1344),(5717,'Não se confunde com a patente, o desenho industrial ou a marca, apesar de poder ser constituído por elementos passíveis de registro, a exemplo da composição de embalagens por marca e desenho industrial.','',1344),(5718,'Embora não disciplinado na lei de propriedade industrial, o conjunto-imagem de bens e produtos é passível de proteção judicial quando a utilização de conjunto similar resulte em ato de concorrência desleal, em razão de confusão ou associação com bens e produtos concorrentes.','',1344),(5719,'Embora não disciplinado na lei de propriedade industrial, o conjunto-imagem de bens e produtos é passível de proteção judicial quando a utilização de conjunto similar resulte em ato que seja  contrário  à moral e aos bons costumes.','',1345),(5720,'O conjunto-imagem (trade dress) é a soma de elementos visuais e sensitivos que traduzem uma forma peculiar e suficientemente distintiva de apresentação do bem no mercado consumidor.','',1345),(5721,'Cosméticos com embalagens que tem fortes características visuais associadas a marcas conhecidas de alimentos foram condenadas a retirar os produtos do mercado por se entender que desta forma elas estariam usufruindo da boa reputação da marca para iludir os consumidores quanto à qualidade de seus produtos.','',1345),(5722,'A pirataria é o ato de copiar uma obra intelectual sem a devida autorização do autor, para uso pessoal ou de comercialização ilegal.','',1345),(5723,'A diferença entre plágio e contrafação é que nesta última há um intuito há um intuito de obtenção de vantagem econômica, já no plágio a motivação é social e reside na usurpação do direito ao reconhecimento da autoria do obra.','',1345),(5724,'Auto-plágio é o plágio realizado especificamente com relação a veículos automotores.','',1346),(5725,'As contrafações mais conhecidas em propriedade intelectual são contrafação, pirataria e plágio.','',1346),(5726,'O conceito de software livre concede liberdade ao usuário para executar, acessar e modificar o código fonte, e redistribuir cópias com ou sem modificações e não fere direitos de propriedade intelectual.','',1346),(5727,'Plágio direto é reconhecido como a cópia na íntegra sem fazer referência ao autor ou à obra.','',1346),(5728,'Plágio indireto ocorre, por exemplo, quando o redator utiliza suas próprias palavras, porém o texto que ele elabora não é original porque diz de forma diversa o que foi consultado em uma fonte específica.','',1346),(5733,'São considerados propriedade intelectual apenas marcas patentes, desenhos industriais e indicação geográfica.','',1348),(5734,'Propriedade intelectual abarca marcas patentes, desenhos industriais e indicação geográfica e proteção ao software.','',1348),(5735,'A lei de propriedade industrial trata também da proteção das relações concorrenciais.','',1348),(5736,'Pode-se dizer que a proteção de propriedade industrial é uma forma de privilegiar grandes industriais, pois o processo é custoso e exige conhecimento técnico/jurídico específico.','',1348),(5737,'Pode-se dizer que a proteção de propriedade industrial foi elaborada para promover o avanço tecnológico, uma vez que as informações protegidas devem ser divulgadas publicamente, exceto em casos de exceção previstos na lei.','',1348),(5738,'Fotografias podem ser protegidas como desenho industrial desde que tenham aplicação industrial.','',1349),(5739,'Os desenhos industriais registráveis não poderão conter textos, logotipos, timbres, rubricas, símbolos, marcas ou outras expressões.','',1349),(5740,'A extinção do registro se dá pela expiração do prazo de vigência, pela renúncia do titular e falta de pagamento dos quinquênios ou falta de procurador devidamente qualificado e domiciliado no País.','',1349),(5741,'Após a concessão, o titular poderá requerer o exame de mérito quanto à novidade e originalidade, a qualquer tempo da vigência do registro de Desenho Industrial.','',1349),(5742,'A atribuição do registro é feita sem exame prévio quanto à novidade e originalidade.','',1349),(5743,'Após a expedição do certificado de registro de desenho industrial não poderão ser instaurados processos de nulidade.','',1350),(5744,'São requisitos para a proteção: Novidade, Originalidade e servir de tipo de fabricação industrial.','',1350),(5745,'Após a concessão, o titular poderá requerer o exame de mérito quanto à novidade e originalidade, a qualquer tempo da vigência do registro de Desenho Industrial.','',1350),(5746,'Consiste na proteção da forma plástica ornamental de um objeto, proporcionando resultado visual novo e original na sua configuração externa e que possa servir de tipo de fabricação industrial.','',1350),(5747,'O pedido de DI deverá referir-se a um único objeto, sendo permitidas até 20 variantes em um mesmo pedido.','',1350),(5748,'O registro de desenho industrial protege tanto a cor quanto o tipo de material utilizado.','',1351),(5749,'Modelos e desenho industriais devem ser protegidos no INPI.','',1351),(5750,'O registro de Desenho Industrial vigora por 10 (dez) anos contados da data do depósito, prorrogáveis por mais 3 (três) períodos sucessivos de 5 (cinco) anos.','',1351),(5751,'São consideradas variantes, aqueles objetos que contiverem pequenas modificações do produto original, sem prejudicar as características deste (mesmas características distintivas preponderantes).','',1351),(5752,'São requisitos para a proteção: Novidade, Originalidade e servir de tipo de fabricação industrial.','',1351),(5753,'A exclusividade de direito é de 70 anos após ano seguinte da morte do autor.','',1352),(5754,'Um ano após a morte do autor torna-se domínio público.','',1352),(5755,'Após publicação tem 50 anos de excluvidade para os representantes legais.','',1352),(5756,'Apenas 10 anos após a publicação.','',1352),(5757,'São prorrogáveis a cada 10 anos após a morte do autor independente do registro.','',1352),(5758,'A exclusividade de direito é de 50 anos após ano seguinte do registro junto ao INPI.','',1353),(5759,'É passível apenas de proteção como patente.','',1353),(5760,'Tal como patente, sua vigência de exclusividade é de 20 anos após o registro.','',1353),(5761,'É registrado em cartório em qualquer cidade.','',1353),(5762,'No Brasil o software pode ser protegido como patente mesmo não sendo embarcado num dispositivo.','',1353),(5763,'O INPI é a instituição responsável pelo registro de obras literárias, artísticas e outras tantas no que se refere a direito de autor.','',1354),(5764,'O direito de autor tem como principal objetivo a proteção da expressão de ideias, reservando para seus autores o direito exclusivo sobre a reprodução de seus trabalhos.','',1354),(5765,'O direito de autor nasce com a criação da obra e não necessita de registro.','',1354),(5766,'O direito de autor possui duas naturezas: Direitos morais e direitos patrimoniais.','',1354),(5767,'São direitos patrimoniais: Direito de reprodução; Direito de comercialização; Direito de locação; Direito de autorização de modificações (edição, adaptação e tradução); entre outros.','',1354),(5768,'Quem adquire uma obra artística poderá proferir modificações na mesma a qualquer tempo, sem a necessidade de autorização do autor por se tratar de um bem privado.','',1355),(5769,'São direitos patrimoniais: Direito de reprodução; Direito de comercialização; Direito de locação; Direito de autorização de modificações (edição, adaptação e tradução); entre outros.','',1355),(5770,'O regime jurídico para a proteção aos Programas de Computador é o do Direito do Autor, disciplinado pela Lei de Software.','',1355),(5771,'Os direitos patrimoniais relativos ao programa de computador pertencem exclusivamente ao empregador ou contratante, salvo estipulação em contrário, se: Desenvolvido na vigência de contrato de trabalho ou de vínculo estatutários;','',1355),(5772,'As modalidades de Propriedade Intelectual para a proteção de Programas de Computador não são excludentes; São complementares!','',1355),(5773,'Estar registrada no Brasil e ser considerada de alto renome.','',1356),(5774,'Apenas ser notoriamente conhecida no seu ramo de atividade, independentemente de estar depositada ou registrada no Brasil.','',1356),(5775,'Ser uma marca que os concorrentes evidentemente não podem desconhecer em razão de sua atividade, independentemente de estar depositada ou registrada no Brasil.','',1356),(5776,'Ser também parte integrante da razão social da empresa.','',1356),(5777,'Estar registrada no Brasil em nome de uma empresa estrangeira.','',1356),(5778,'Goza de proteção independentemente de ser registrado como marca, pois é notoriamente conhecido e somente pode ser registrado com consentimento do próprio Édson Arantes do Nascimento.','',1357),(5779,'Gozará de proteção apenas se for registrado como marca perante o INPI.','',1357),(5780,'Deixou de gozar de proteção quando Pelé encerrou sua carreira de jogador de futebol.','',1357),(5781,'É merecedor de grau inferior de proteção quando comparado aos apelidos de jogadores mais jovens, como \"ZICO\".','',1357),(5782,'Deixará de gozar de proteção quando Pelé vier a falecer.','',1357),(5783,'Distinguir o produto de outro idêntico, semelhante ou afim, de origem diversa.','',1358),(5784,'Dar um nome pelo qual os consumidores possam identificar produtos concorrentes, fabricados por diferentes indústrias.','',1358),(5785,'Possibilitar que os publicitários possam criar campanhas para a venda do produto.','',1358),(5786,'Trazer à mente do consumidor a lembrança dos produtos concorrentes.','',1358),(5787,'Da visão.','',1359),(5788,'Do tato.','',1359),(5789,'Do olfato.','',1359),(5790,'Do paladar.','',1359),(5791,'Da audição.','',1359),(5792,'O titular do registro ou o depositante do pedido de registro da marca.','',1360),(5793,'Somente o titular do registro da marca.','',1360),(5794,'Somente o depositante do pedido de registro da marca com procuração.','',1360),(5795,'Somente pessoa física detentora dos direitos autorais do design da marca.','',1360),(5796,'Qualquer pessoa com legítimo interesse no uso da marca que tenha em mãos o design da marca.','',1360),(5797,'No Brasil a marca de Certificação só poderá ser requerida por pessoa com interesse comercial ou industrial direto no produto ou serviço.','',1361),(5798,'Marca coletiva é aquela usada para identificar produtos ou serviços provindos de membros de uma determinada entidade.','',1361),(5799,'O sistema de registro de marca no Brasil é atributivo de direito, isto é, a sua propriedade e o seu uso exclusivo somente são adquiridos pelo registro.','',1361),(5800,'As condições de validade aplicáveis a marcas são: distintividade, liceidade, disponibilidade e veracidade.','',1361),(5801,'Quanto à natureza, as marcas podem ser: de Produto, de Serviço, Coletiva e de Certificação.','',1361),(5802,'Marca de garantia é aquela usada para dar credibilidade a instituições e empresas novas no mercado como startups.','',1362),(5803,'A proteção de marcas está relacionada a importantes fatores de diferenciação entre produtos concorrentes assemelhados.','',1362),(5804,'A proteção assegurada à marca recai sobre produtos, mercadorias ou serviços correspondentes ao ramo de atividade do requerente.','',1362),(5805,'Como regra geral, àquele que primeiro depositar um pedido milita a prioridade do registro.','',1362),(5806,'Marca coletiva é aquela usada para identificar produtos ou serviços provindos de membros de uma determinada entidade.','',1362),(5807,'Para um logotipo no qual a principal marca da empresa esteja escrita na cor azul.','',1363),(5808,'Para a cor azul dos uniformes, de tal forma que ninguém mais poderá produzir uniformes iguais.','',1363),(5809,'A palavra azul.','',1363),(5810,'A cor azul, de tal forma que seus concorrentes jamais poderão utilizar tal cor','',1363),(5811,'A tonalidade azul caracteristica definida e registrada em escala de cores pantone oficial.','',1363),(5812,'Formal.','',1364),(5813,'Técnica.','',1364),(5814,'Exame de novidade e originalidade.','',1364),(5815,'Compatibilidade técnica com os computadores.','',1364),(5816,'Deve ser antes registrado como patente.','',1364),(5817,'Todas as alternativas estão corretas.','',1365),(5818,'Poderão ser apreendidos, de ofício ou a requerimento do interessado, pelas autoridades alfandegárias, no ato de conferência, os produtos assinalados como falsificadas, alteradas ou imitadas ou que apresentem falsa indicação de procedência.','',1365),(5819,'Nos crimes contra propriedade industrial previsto na LPI somente se procede mediante a queixa, salvo quanto ao crime do artigo 191, em que a ação penal será publicada.','',1365),(5820,'A ação penal e as diligências preliminares de busca e apreensão, nos crimes contra propriedade industrial, regulam pelo disposto no Código de Processo Penal, com as modificações constantes na LPI.','',1365),(5821,'Na diligência de busca e apreensão, em crime contra patente que tenha por objeto a invenção de processo, o oficial do juízo será acompanhado por perito, que verificará, preliminarmente, a existência do ilícito, podendo o juiz ordenar a apreensão de produtos obtidos pelo contrafator com o emprego do processo patenteado.','',1365),(5822,'Provindos de membros de uma determinada entidade.','',1366),(5823,'Considerados de interesse social.','',1366),(5824,'De uma mesma categoria e provenientes de uma mesma região geográfica.','',1366),(5825,'De uma mesma empresa.','',1366),(5826,'De uso coletivo.','',1366),(5827,'No Brasil podem ser registrados apenas IG de regiões do Brasil.','',1367),(5828,'O associativismo é a regra para o exercício do direito ao uso exclusivo do nome geográfico na sua atividade econômica, afastando a sua exploração individual.','',1367),(5829,'O nome geográfico que não constitua Indicação de Procedência ou Denominação de Origem poderá servir de elemento característico de marca para produto ou serviço, desde que não induza falsa procedência.','',1367),(5830,'As IG são tratadas e acordo com os Aspectos dos Direitos de Propriedade Intelectual Relacionados com o Comércio - TRIPS.','',1367),(5831,'Na IG A proteção se estende à representação gráfica ou figurativa da indicação geográfica, bem como à representação geográfica de país, cidade, região ou localidade de seu território cujo nome seja indicação geográfica.','',1367),(5832,'Mesmo quando o nome geográfico houver tornando-se de uso comum, designando produto ou serviço, será considerado Indicação Geográfica.','',1368),(5833,'O nome geográfico que não constitua Indicação de Procedência ou Denominação de Origem poderá servir de elemento característico de marca para produto ou serviço, desde que não induza falsa procedência.','',1368),(5834,'A Indicação Geográfica é registrado junto ao INPI.','',1368),(5835,'Constitui Indicação Geográfica de Procedência ou a Denominação de Origem.','',1368),(5836,'O uso da Indicação Geográfica é restrito aos produtores de serviço estabelecidos no local, exigindo-se ainda, em relação às denominações de origem, o atendimento aos requisitos de qualidade.','',1368),(5837,'Linhagem; cultivar distinta; cultivar estável; e, cultivar homogênea.','',1369),(5838,'Linhagem; cultivar distinta; cultivar homogênea; e, cultivar estável.','',1369),(5839,'Cultivar homogênea; cultivar estável; cultivar distinta; e, linhagem.','',1369),(5840,'Cultivar homogênea; cultivar distinta; cultivar estável; e, linhagem.','',1369),(5841,'Cultivar distinta; linhagem, cultivar homogênea; e, cultivar estável.','',1369),(5842,'É considerada homogênea uma cultivar que seja suficientemente madura e melhorada.','',1370),(5843,'A proteção de cultivares no Brasil é considerada uma proteção sui generis e possui legislação específica.','',1370),(5844,'A proteção das cultivares no Brasil protege plantas geneticamente modificadas.','',1370),(5845,'A legislação referente a cultivares essencialmente derivadas impede que ela seja comercializada sem retorno financeiro ao obtentor de cultivar inicial.','',1370),(5846,'Denominações protegidas ou em processo de proteção em outro país deverão ser mantidas; Exemplo cultivar de maçã Fuji.','',1370),(5847,'A forma estética de um biscoito pode ser protegida por patente.','',1371),(5848,'A proteção de desenho industrial é feita pelo registo no INPI.','',1371),(5849,'A proteção das cultivares no Brasil é feita pelo ministério da agricultura e tem prazo de validade de 15 ou 18 anos dependendo da variedade protegida.','',1371),(5850,'Não se confunde com a patente, o desenho industrial ou a marca, apesar de poder ser constituído por elementos passíveis de registro, a exemplo da composição de embalagens por marca e desenho industrial.','',1371),(5851,'Embora não disciplinado na lei de propriedade industrial, o conjunto-imagem de bens e produtos é passível de proteção judicial quando a utilização de conjunto similar resulte em ato de concorrência desleal, em razão de confusão ou associação com bens e produtos concorrentes.','',1371),(5852,'Embora não disciplinado na lei de propriedade industrial, o conjunto-imagem de bens e produtos é passível de proteção judicial quando a utilização de conjunto similar resulte em ato que seja  contrário  à moral e aos bons costumes.','',1372),(5853,'O conjunto-imagem (trade dress) é a soma de elementos visuais e sensitivos que traduzem uma forma peculiar e suficientemente distintiva de apresentação do bem no mercado consumidor.','',1372),(5854,'Cosméticos com embalagens que tem fortes características visuais associadas a marcas conhecidas de alimentos foram condenadas a retirar os produtos do mercado por se entender que desta forma elas estariam usufruindo da boa reputação da marca para iludir os consumidores quanto à qualidade de seus produtos.','',1372),(5855,'A pirataria é o ato de copiar uma obra intelectual sem a devida autorização do autor, para uso pessoal ou de comercialização ilegal.','',1372),(5856,'A diferença entre plágio e contrafação é que nesta última há um intuito há um intuito de obtenção de vantagem econômica, já no plágio a motivação é social e reside na usurpação do direito ao reconhecimento da autoria do obra.','',1372),(5857,'Auto-plágio é o plágio realizado especificamente com relação a veículos automotores.','',1373),(5858,'As contrafações mais conhecidas em propriedade intelectual são contrafação, pirataria e plágio.','',1373),(5859,'O conceito de software livre concede liberdade ao usuário para executar, acessar e modificar o código fonte, e redistribuir cópias com ou sem modificações e não fere direitos de propriedade intelectual.','',1373),(5860,'Plágio direto é reconhecido como a cópia na íntegra sem fazer referência ao autor ou à obra.','',1373),(5861,'Plágio indireto ocorre, por exemplo, quando o redator utiliza suas próprias palavras, porém o texto que ele elabora não é original porque diz de forma diversa o que foi consultado em uma fonte específica.','',1373),(5862,'Plágio consentido: é aquele onde, mesmo com a anuência do autor original resulta em fraude intelectual.','',1374),(5863,'A simples reprodução do texto integral ou de parte de uma propriedade intelectual e/ ou artística tem a denominação de plágio.','',1374),(5864,'É considerado design gráfico: logotipo de empresa, estampa de tecidos para aplicação industrial etc.','',1374),(5865,'A proteção do design no Brasil pode ser feita tanto para o design gráfico quanto de produto.','',1374),(5866,'São considerados propriedade intelectual apenas marcas patentes, desenhos industriais e indicação geográfica.','',1375),(5867,'Propriedade intelectual abarca marcas patentes, desenhos industriais e indicação geográfica e proteção ao software.','',1375),(5868,'A lei de propriedade industrial trata também da proteção das relações concorrenciais.','',1375),(5869,'Pode-se dizer que a proteção de propriedade industrial é uma forma de privilegiar grandes industriais, pois o processo é custoso e exige conhecimento técnico/jurídico específico.','',1375),(5870,'Pode-se dizer que a proteção de propriedade industrial foi elaborada para promover o avanço tecnológico, uma vez que as informações protegidas devem ser divulgadas publicamente, exceto em casos de exceção previstos na lei.','',1375),(5871,'A proteção do design gráfico pode ser feita, no Brasil, exclusivamente por proteção de marca.','',1347),(5872,'Plágio consentido: é aquele onde, mesmo com a anuência do autor original resulta em fraude intelectual.','',1347),(5873,'A simples reprodução do texto integral ou de parte de uma propriedade intelectual e/ ou artística tem a denominação de plágio.','',1347),(5874,'É considerado design gráfico: logotipo de empresa, estampa de tecidos para aplicação industrial etc.','',1347),(5875,'A proteção do design no Brasil pode ser feita tanto para o design gráfico quanto de produto.','',1347),(5876,'[[code:correctAnswer]]','',1378),(5877,'[[code:alternativas_erradas[0]]]','',1378),(5878,'[[code:alternativas_erradas[1]]]','',1378),(5879,'[[code:alternativas_erradas[2]]]','',1378),(5880,'[[code:alternativas_erradas[3]]]','',1378),(5881,'$x=3$','',1389),(5882,'$x=4$','',1389),(5883,'$x=5$','',1389),(5884,'$[[code:a1]]$','',1393),(5885,'$[[code:a2]]$','',1393),(5886,'$[[code:a3]]$','',1393),(5887,'1','',1390),(5888,'2','',1390),(5889,'3','',1390),(5890,'8','',1391),(5891,'7','',1391),(5892,'6','',1391);
/*!40000 ALTER TABLE `topic_answer` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `topic_question`
--

DROP TABLE IF EXISTS `topic_question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `topic_question` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `question_group` varchar(50) NOT NULL,
  `question_short_description` varchar(50) NOT NULL,
  `question_text` longtext NOT NULL,
  `question_type` varchar(2) NOT NULL,
  `question_difficulty` varchar(2) NOT NULL,
  `question_bloom_taxonomy` varchar(10) NOT NULL,
  `question_parametric` varchar(3) NOT NULL,
  `question_last_update` date DEFAULT NULL,
  `question_who_created_id` int(11) DEFAULT NULL,
  `topic_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `topic_question_question_who_created_0b2f6e68_fk_account_u` (`question_who_created_id`),
  KEY `topic_question_topic_id_aa9661f2_fk_topic_topic_id` (`topic_id`),
  CONSTRAINT `topic_question_question_who_created_0b2f6e68_fk_account_u` FOREIGN KEY (`question_who_created_id`) REFERENCES `account_user` (`id`),
  CONSTRAINT `topic_question_topic_id_aa9661f2_fk_topic_topic_id` FOREIGN KEY (`topic_id`) REFERENCES `topic_topic` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1399 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `topic_question`
--

LOCK TABLES `topic_question` WRITE;
/*!40000 ALTER TABLE `topic_question` DISABLE KEYS */;
INSERT INTO `topic_question` VALUES (2,'mat 01','lab - elementos recebem função 2','% texto da questão\r\nConstrua uma matriz $[[code:a0]] \\times [[code:a1]]$ cujo elemento na posição $(i,j)$ vale $((((i+1) * [[code:a2]]) + ((j+1) * [[code:a3]])) \\mod{100})$. Calcule a soma dos elementos dessa matriz. Considere que os índices $i$ das linhas e $j$ das colunas começam em zero.\r\n\r\n\r\n[[def:\r\n# testar em repl.it/languages/python\r\ndef algorithm(a):\r\n    a0 = int(a[0])\r\n    a1 = int(a[1])\r\n    a2 = int(a[2])\r\n    a3 = int(a[3])\r\n    P = np.zeros((a0,a1))\r\n    for i in range(a0):\r\n        for j in range(a1):\r\n            P[i,j] = (((i+1) * a2) + ((j+1) * a3)) % 100\r\n    return int(P.sum())\r\n\r\n# variáveis a serem usadas no texto da questão e alternativas\r\na0=random.randrange(60, 80, 1)  # sortear um número entre 60 e 80\r\na1=random.randrange(60, 80, 1)\r\na2=random.choice([7, 13, 19])   # sortear um número dentre estes três\r\na3=random.choice([11, 17, 23])\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0,a1,a2,a3])\r\n]]\r\n\r\n\r\n\r\n% primeira alternativa sempre a correta, e todas distintas\r\n% createWrongAnswers([5,10]) - cria 5 alternativas erradas distintas entre a correta +/- 10','QM','3','remember','yes','2019-01-24',1,5),(3,'vet 02','conceito 1D 2D','% texto da questão\r\nO(a) \\_\\_\\_\\_\\_\\_ em Estrutura de Dados é também conhecido (a) como array [[code:a0]]-dimensional. Assinale a alternativa que complete a lacuna.\r\n\r\n[[def:\r\n# código para retornar a resposta correta, com as variáveis abaixo\r\nglobal correctAnswer, wrongAnswer, a0, a1\r\n\r\na1 = [\"Uni\",\"Bi (ou Multi)\"]  # aparece no texto\r\na0 = random.choice(a1)        # sortear uma que vai aparecer no texto\r\n\r\nif a0==a1[0]:                 # se foi sorteada a primeira resposta\r\n  correctAnswer = \"Vetor\"     # aparece na resposta\r\n  wrongAnswer = \"Matriz\"\r\nelse:\r\n  correctAnswer = \"Matriz\"    # aparece na resposta\r\n  wrongAnswer = \"Vetor\"\r\n]]','QM','1','remember','yes','2019-01-24',1,4),(4,'mat 01','conceito 1D 2D 3D','% texto da questão\r\nO(a) \\_\\_\\_\\_\\_\\_ em Estrutura de Dados é também conhecido (a) como array [[code:a0]]-dimensional. Assinale a alternativa que complete a lacuna.\r\n\r\n[[def:\r\n# código para retornar a resposta correta, com as variáveis abaixo\r\na1 = [\"1D\",\"2D\",\"3D\"]                      # aparece no texto\r\na2 = [\"Vetor\",\"Matriz\",\"Vídeo ou Volume\"]  # aparece na resposta\r\na0 = random.choice(a1)    # sortear uma que vai aparecer no texto\r\n\r\ndef algorithm(a):\r\n    global a1,a2\r\n    resp = \"\"\r\n    for i in range(0,len(a1)):\r\n    	if a[0] == a1[i]:\r\n       	   resp = a2[i]\r\n    return resp\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0])\r\n]]\r\n\r\n\r\n% primeira alternativa sempre a correta, e todas distintas\r\n% createWrongAnswers([2]) - cria 2 alternativa(s) errada(s) distinta(s) entre a correta','QM','1','remember','yes','2019-01-24',1,5),(5,'4','simula função Z','% texto da questão\r\nDado o vetor w tal que $w[i]=i[[code:a1]]$, para $i=0$ até $[[code:a0]]$. Dado o algoritmo $Z$ abaixo, qual será a soma do conteúdo de vetor $w$ depois de executado o algoritmo $Z$?\r\n\\begin{lstlisting}\r\nFuncao Z()\r\ninteiro i, aux, q\r\npara (i=0;i<[[code:a0]]-1;i++) {\r\n     q = i + 1\r\n     aux = w[q]\r\n     w[q] = w[[[code:a0]] - q]\r\n     w[[[code:a0]]-q] = aux\r\n}\r\n\\end{lstlisting}\r\n\r\n\r\n[[def:\r\n# código para retornar a resposta correta, com as variáveis abaixo\r\na0 = random.choice([4, 5, 6])   # sortear um número dentre estes três\r\na1 = random.choice([\"+1\",\"-1\",\"+2\",\"-2\"]) \r\nimport numpy as np\r\n\r\ndef algorithm(a):\r\n    a0=int(a[0])\r\n    a1=a[1]\r\n    w = np.array(range(a0+1))+eval(a1)\r\n\r\n    for i in range(a0-1):\r\n       q = i + 1\r\n       aux = w[q]\r\n       w[q] = w[a0-q]\r\n       w[a0-q] = aux\r\n    return sum(w)\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0,a1])\r\n]]\r\n\r\n\r\n\r\n% primeira alternativa sempre a correta, e todas distintas\r\n% createWrongAnswers([2]) - cria 2 alternativa(s) errada(s) distinta(s) entre a correta','QM','4','remember','yes','2019-01-24',1,4),(6,'','conceito  P1, Atividades, Projeto e P2','Considere  uma matriz matCONCEITOS de 150 linhas e 4 colunas, onde cada linha representa um aluno e cada coluna representa os conceitos das avaliações P1, Atividades, Projeto e P2. Esta matriz deve armazenar em cada elemento valores A, B, C, D ou F.   \r\n\r\nNote que a função GeraMat, que preenche uma matriz com conceitos gerados “aleatoriamente” já está disponível (vide código abaixo) para você chamar no seu programa principal. \r\n\r\nPara cada um dos itens abaixo você deverá escrever uma função e fazer sua respectiva chamada no programa principal.\r\n\r\n\\begin{enumerate}[label=(\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n%\\item Escreva a função ContaConceitos que recebe por parâmetro a matriz de conceitos (gerada pela função \"GeraMat\")  e exibe a quantidade de conceitos Y da avaliação Z.\r\n%Você deverá perguntar ao usuário, dentro da função, o valor de Y (conceito A, B, C, D ou F) e o valor de Z (número da avaliação 0 a 3, correspondendo a P1, P2, etc).\r\n%Por exemplo, se o usuário informar Y=\'A\' e Z = 3, a função ContaConceitos deve informar quantos alunos tiveram conceito \'A\' na avaliação P2 (coluna 3 da matriz).\r\n\r\n\\item Escreva a função \"GeraMedia\" para preencher um vetor com números reais em que cada elemento do vetor representará a média de um aluno calculada a partir dos conceitos constantes na sua respectiva linha da matriz.  Para calcular a média de cada aluno, considere que  A=4.0, B=3.0, C = 2.0, D = 1.0 e F=0.0. Considere também os seguintes pesos: P1=[[code:a0]]\\%, Atividades = 10\\%, Projeto=15\\% e P2=[[code:a1]]\\%. A média de cada aluno será um valor entre 0.0 e 4.0. \r\n\r\nExemplo: Se numa linha da Matriz tem A, A, B, D  a média será $( (4*[[code:a0]]) + (4*10) + (3*15) + (1*[[code:a1]] ) ) / 100 =  [[code:a2]]$\r\n\r\n\\item Escreva a função ImprimeConceitoFinal que deve receber por parâmetro o VETOR gerado no item (a) e imprimir na tela o conceito correspondente de cada aluno considerando as seguintes regras:\\\\\r\n\\vspace{3mm}\r\nse VALOR $<$ 0.8, CONCEITO\\_FINAL = F, senão\\\\\r\nse VALOR $<$ 1.5, CONCEITO\\_FINAL = D, senão\\\\\r\nse VALOR $<$ 2.5, CONCEITO\\_FINAL = C, senão\\\\\r\nse VALOR $<$ 3.6, CONCEITO\\_FINAL = B, senão\\\\\r\nCONCEITO\\_FINAL = A\r\n\\end{enumerate}\r\n\r\nSugestão: não precisa validar entradas.\r\n\r\n\\begin{table}[h]\r\n\\begin{tabular}{|l|}\r\n\\hline\r\n\\multicolumn{1}{|c|}{\\textbf{Java}} \\\\ \\hline\r\n\\begin{lstlisting}\r\n// Gera Matriz de Conceitos\r\nstatic void GeraMat(char Mat[][], int nlinhas, int ncolunas) {\r\n  char conceitos[] = {\'A\', \'B\', \'C\', \'D\',\'F\'};\r\n  int i, j, valor;\r\n  for (i = 0; i < nlinhas; i++) {\r\n     for (j = 0; j < ncolunas; j++) {\r\n        valor = (int) (Math.random() * 5);  // gera um numero entre 0 e 4\r\n        // pega o conceito correspondente no vetor conceitos\r\n        Mat[i][j] = conceitos[valor];  \r\n      } \r\n    } \r\n}\r\n\\end{lstlisting}                                 \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\r\n[[def:\r\n# variáveis a serem usadas no texto da questão e alternativas\r\na0=random.randrange(30, 40, 1)  # sortear um número entre 30 e 40\r\na1=75-a0\r\na2 = (4*a0 + 4*10 + 3*15 + 1*a1) / 100 \r\n]]','QT','3','remember','yes','2019-01-24',1,6),(11,'1','Aula010','Sobre governan\\c{c}a de TI, selecione a alternativa falsa.','QM','1','remember','no','2019-01-24',1,7),(12,'1','Aula011','Sobre governan\\c{c}a de TI, selecione a alternativa  falsa.','QM','1','remember','no','2019-01-24',1,7),(13,'2','Aula012','A Governan\\c{c}a de TI \\\'{e} motivada por muitos fatores. Assinale a alternativa que \\\'{e} falsa.','QM','1','remember','no','2019-01-24',1,7),(14,'2','Aula013','A Governan\\c{c}a de TI \\\'{e} motivada por muitos fatores. Assinale a alternativa que \\\'{e} falsa.','QM','1','remember','no','2019-01-24',1,7),(15,'3','Aula014','A Governan\\c{c}a de TI \\\'{e} uma disciplina que busca v\\\'{a}rios objetivos. Assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,7),(16,'4','Aula016','Sobre o framework MIT-CISR, assinale a alternativa verdadeira.','QM','1','remember','no','2019-01-24',1,7),(17,'4','Aula017','Sobre o framework MIT-CISR, assinale a alternativa  verdadeira.','QM','1','remember','no','2019-01-24',1,7),(18,'5','Aula018','Sobre o Ciclo da Governan\\c{c}a de TI, assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,7),(19,'5','Aula019','Sobre o Ciclo da Governan\\c{c}a de TI, assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,7),(20,'6','Aula0210','Sobre o framework CobiT, assinale a  alternativa falsa.','QM','1','remember','no','2019-01-24',1,8),(21,'6','Aula0211','Sobre o framework CobiT assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,8),(22,'7','Aula0212','Sobre os princ\\\'{i}pios-chave para a governan\\c{c}a e gest\\~{a}o da TI empresarial na vis\\~{a}o do COBIT, assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,8),(23,'7','Aula0213','Sobre os princ\\\'{i}pios-chave para a governan\\c{c}a e  gest\\~{a}o da TI empresarial na vis\\~{a}o do COBIT, assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,8),(24,'8','Aula0214','Sobre o princ\\\'{i}pio de \"Separar governan\\c{c}a de gest\\~{a}o\" do COBIT, assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,8),(25,'8','Aula0215','Sobre o princ\\\'{i}pio de \"Separar governan\\c{c}a de gest\\~{a}o\" do COBIT, assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,8),(26,'9','Aula0216','Sobre o modelo de refer\\^{e}ncia de processos do COBIT, marque a alternativa falsa.','QM','1','remember','no','2019-01-24',1,8),(27,'9','Aula0217','Sobre o modelo de refer\\^{e}ncia de processos do COBIT, marque a alternativa falsa.','QM','1','remember','no','2019-01-24',1,8),(28,'10','Aula0218','Sobre o modelo de capacidade de processos, assinale a alternativa verdadeira.','QM','1','remember','no','2019-01-24',1,8),(29,'10','Aula0219','Sobre o modelo de capacidade de processos,  assinale a alternativa verdadeira.','QM','1','remember','no','2019-01-24',1,8),(30,'11','Aula0220','O COBIT N\\~{A}O \\\'{e} aplicado para','QM','1','remember','no','2019-01-24',1,8),(31,'11','Aula0221','O p\\\'{u}blico alvo do COBIT N\\~{A}O inclui','QM','1','remember','no','2019-01-24',1,8),(32,'12','Aula0322','Conforme o framework ITIL, assinale qual das seguintes alternativas \\\'{e} falsa.','QM','1','remember','no','2019-01-24',1,9),(33,'12','Aula0323','Conforme o framework ITIL,  assinale qual das seguintes alternativas \\\'{e} falsa.','QM','1','remember','no','2019-01-24',1,9),(34,'13','Aula0324','Sobre as caracter\\\'{i}sticas das publica\\c{c}\\~{o}es que comp\\~{o}em o n\\\'{u}cleo da ITIL, assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,9),(35,'13','Aula0325','Sobre as caracter\\\'{i}sticas das publica\\c{c}\\~{o}es  que comp\\~{o}em o n\\\'{u}cleo da ITIL, assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,9),(36,'14','Aula0326','Assinale a alternativa falsa, dentre as seguintes rela\\c{c}\\~{o}es entre os est\\\'{a}gios de servi\\c{c}os da ITIL e seus processos.','QM','1','remember','no','2019-01-24',1,9),(37,'14','Aula0327','Dentre as seguintes rela\\c{c}\\~{o}es   entre os est\\\'{a}gios de servi\\c{c}os da ITIL e seus processos, assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,9),(38,'15','Aula0328','Sobre os processos de estrat\\\'{e}gia,  desenho e opera\\c{c}\\~{a}o de servi\\c{c}os conforme o ITIL, assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,9),(39,'15','Aula0329','Sobre os processos de estrat\\\'{e}gia, desenho e opera\\c{c}\\~{a}o de servi\\c{c}os conforme o ITIL, assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,9),(40,'16','Aula0330','A implementa\\c{c}\\~{a}o do Gerenciamento de Servi\\c{c}os de TI atrav\\\'{e}s da ITIL poder\\\'{a} trazer resultados qualitativos, exceto:','QM','1','remember','no','2019-01-24',1,9),(41,'16','Aula0331','A implementa\\c{c}\\~{a}o do Gerenciamento de Servi\\c{c}os de TI atrav\\\'{e}s da ITIL poder\\\'{a} trazer resultados qualitativos, exceto:','QM','1','remember','no','2019-01-24',1,9),(42,'17','Aula0432','Sobre os frameworks de gest\\~{a}o e   governan\\c{c}a estudados, assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,10),(43,'17','Aula0433','Sobre os frameworks de gest\\~{a}o e governan\\c{c}a estudados, assinale a alternativa falsa.','QM','1','remember','no','2019-01-24',1,10),(44,'teo q2','if-eleição','No segundo turno de uma eleição para [[code:cargo]] há dois candidatos, considerando que os totais de votos já foram computados. Elabore um programa para \\textbf{(a)} ler os totais de votos, \\textbf{(b)} calcular e escrever a porcentagem de votos para cada candidato e também para brancos e nulos (exemplo: \\texttt{Porcentagem de votos brancos = 5\\%}). Finalmente, \\textbf{(c)} escrever a porcentagem de votos válidos para cada candidato (exemplo: \\texttt{Candidato 1 teve 55\\% dos votos válidos}) e quem ganhou a eleição ou se houve empate (exemplo: \\texttt{Candidato 1 venceu a eleição para [[code:cargo]]}), considerando, por exemplo:\r\n\r\n\\begin{itemize} \\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Total de votos para candidato 1 = [[code:a0]];\r\n\\item Total de votos para candidato 2 = [[code:a1]];\r\n\\item Total de votos nulos = [[code:a2]];\r\n\\item Total de votos em branco = [[code:a3]].\r\n\\end{itemize}\r\n\r\n\\noindent \\textbf{Atenção:} Esses 4 totais de votos deverão ser lidos do teclado como 4 números inteiros e deverão ser validados no programa. A regra definida diz que o eleito para [[code:cargo]]  deve ter pelo menos 50\\% mais um dos votos válidos. Estão excluídos desse cálculo os brancos e os nulos. Considere também que se tiver empate, teremos uma nova eleição.\\\\\r\n\r\n%Solução a ser retirada da versão final:\r\n\r\n%\\begin{enumerate}[label=\\alph*)]  \\itemsep0pt\\parskip0pt\\parsep0pt\r\n%\\item Porcentagem de votos para cada candidato 1 = [[code:a4]] \\%;\r\n%\\item Porcentagem de votos para cada candidato 2 = [[code:a5]] \\%;\r\n%\\item Porcentagem de votos nulos = [[code:a6]] \\%;\r\n%\\item Porcentagem de votos em branco = [[code:a7]] \\%;\r\n%\\end{enumerate}     \r\n\r\n%\\begin{enumerate}[label=\\alph*)]  \\itemsep0pt\\parskip0pt\\parsep0pt\r\n%\\item Porcentagem de votos válidos para cada candidato 1 = [[code:a8]] \\%;\r\n%\\item Porcentagem de votos válidos para cada candidato 2 = [[code:a9]] \\%;\r\n%\\end{enumerate}     \r\n%Vencedor: [[code:a10]]\r\n\r\n%\\drawLines{63}\r\n\r\n\\\r\n\r\n[[def:\r\ncargo = random.choice([\"Presidente\",\"Governador\", \"Prefeito\", \"Síndico\"]) \r\n\r\na0=random.randrange(40000000, 60000000, 1)  # sortear um número entre 4 e 6\r\na1=random.randrange(40000000, 60000000, 1) \r\na2=random.randrange(10000000, 20000000, 1) \r\na3=random.randrange(10000000, 20000000, 1) \r\n\r\n# RESPOSTA\r\ntotal = a0+a1+a2+a3\r\n\r\na4 = np.around(a0/total*100, decimals=2)\r\na5 = np.around(a1/total*100, decimals=2)\r\na6 = np.around(a2/total*100, decimals=2)\r\na7 = np.around(a3/total*100, decimals=2)\r\n\r\na8 = np.around(a0/(a0+a1)*100, decimals=2)\r\na9 = np.around(a1/(a0+a1)*100, decimals=2)\r\n\r\nif a0>a1:\r\n  a10 = \"Candidato 1\"\r\nelif a0<a1:\r\n  a10 = \"Candidato 2\"\r\nelse:\r\n  a10 = \"Empate\"\r\n]]','QM','2','remember','yes','2019-01-30',1,2),(45,'mat 02','elementos recebem função 1','Crie uma matriz $[[code:a0]] \\times [[code:a1]]$ de inteiros, com elementos $(i, j) = i + j$, com índices começando em zero, imprima a soma dos elementos da matriz.\r\n\r\n[[def:\r\na0=random.randrange(4,6)\r\na1=random.randrange(4,6)\r\n\r\nA=np.zeros((a0, a1), dtype=np.int)\r\nfor i in range(a0):\r\n  for j in range(a1):\r\n    A[i][j]=i+j\r\n\r\nglobal correctAnswer\r\ncorrectAnswer = np.sum(A)\r\n]]','QM','1','remember','yes','2019-01-30',1,5),(46,'','ingressos','Construa um algoritmo para gerenciar a venda de ingressos (ocupação) das cadeiras da ala de cadeiras numeradas de um estádio de futebol, que tem [[code:a0]] lugares, organizados em 2 setores com [[code:a1]] fileiras com [[code:a2]] cadeiras cada fila em cada um dos setores. Inicialize as matrizes (uma para cada setor)  com todas as posições inicializadas com a indicação \"v\",  indicando que elas estão vazias. Para cada nova venda de ingresso,  o programa deve solicitar ao usuário: o setor,  o número da fila e o número da cadeira. Se a poltrona estiver \"vazia\", deve-se alterar seu conteúdo para o valor \"p\" , indicando que o lugar foi vendido. Se não estiver vazia,  o programa deve emitir uma mensagem: \"cadeira já foi vendida\". O programa deve funcionar por meio de um menu, com duas opções, sendo: A) Vender Ingresso B) Exibir o total de ingressos vendidos e C) Encerrar o Programa. \\\\\r\n\r\n\r\n[[def:\r\n# variáveis a serem usadas no texto da questão/alternativas\r\na0=random.choice([480, 440])   # sortear um número dentre estes dois\r\nif a0==480:\r\n  a1 = 40\r\n  a2 = 60\r\nelse:\r\n  a1 = 10\r\n  a2 = 11\r\n]]','QT','2','remember','yes','2019-01-30',1,5),(47,'','lista presença','A tabela a seguir é utilizada para armazenar a lista de presença de uma turma de alunos durante um quadrimestre. Cada linha da tabela representa um aluno e cada coluna corresponde a uma aula. Para representar essa lista de presença é utilizada uma matriz de inteiros, onde cada posição da matriz só pode ter os valores 0 (presença) ou 1 (falta). A última coluna é utilizada para armazenar o total de faltas para cada aluno no final do quadrimestre.','QT','2','remember','yes','2019-01-30',1,5),(48,'','matriz diagonal','Escreva um programa que:\r\n\r\n- leia um número inteiro positivo n (não precisa fazer validação, isto é, suponha que n é fornecido\r\ncorretamente);\r\n\r\n- cria uma matriz com capacidade para n linhas e n colunas, de números inteiros;\r\n\r\n- lê valores inteiros positivos do usuário e armazena esses valores na matriz (não precisa fazer validação de dados);\r\n\r\n- imprime o número de elementos pares acima de diagonal\r\nprincipal, ou caso não haja elementos pares acima de diagonal\r\nprincipal, imprime ``Não há elementos pares acima de diagonal\r\nprincipal\'\'.\r\n\r\n- imprime o número de elementos ímpares abaixo de\r\ndiagonal secundária, ou caso não haja elementos impares abaixo de\r\ndiagonal secundária, imprime ``Não há elementos  impares abaixo de\r\ndiagonal secundária\'\'.\r\n\r\n- imprime: média de todos os elementos da matriz. \r\n\r\n\\vspace{1 cm}\r\n\\textit {OBS: escreva comentários (explique variáveis principais, comente o que\r\ncada parte do algoritmo faz).\r\nSeu algoritmo deve funcionar para todas as entradas, e não somente\r\npara exemplo apresentado abaixo.}\r\n\r\nUm exemplo:\r\n\r\nSe $n=5$ e a matriz \r\n\r\n\\begin{displaymath}\r\n\\begin{bmatrix}\r\n1&2&3&4&3\\\\\r\n1&2&3&3&4\\\\\r\n1&2&3&4&4\\\\\r\n1&3&4&4&4\\\\\r\n3&2&4&4&6\\\\\r\n\\end{bmatrix}\r\n\\end{displaymath}\r\n\r\n Os elementos acima da diagonal principal são: 2,3,3,4,3,4,3,4,4,4. E\r\n os elementos abaixo da diagonal secundária são 2,4,4,4,4,4,4,4,4,6. \r\n\r\nPortanto, o algoritmo deve imprimir:\r\n\r\n{\\bf O número de elementos pares acima de diagonal principal é: 6\r\n\r\nNão há elementos  ímpares abaixo de\r\ndiagonal secundária.\r\n\r\nA média de todos os elementos da matriz é: 3.0}','QT','2','remember','no','2019-01-30',1,5),(49,'','matriz pow','Escreva um programa que leia na entrada um inteiro $n$, $1 \\leq n \\leq 10$, e construa e imprima uma matriz quadrada $A(n \\times n)$ tal como ilustrado nos exemplos da figura abaixo. Não precisa fazer validação, isto é, suponha que $n$ é fornecido corretamente.\r\n\r\nDica: você pode obter o valor de $x^y$ em Java usando {\\tt Math.pow(x,y)}; se você está usando PortugalStudio, então você pode obter $x^y$ usando {\\tt mat.potencia(x,y)} (não esquecer de fazer {\\tt inclua biblioteca Matematica --> mat}).\r\n\r\nSe você escolher programar usando PortugolStudio, aloque uma matriz $(10,10)$ e, caso $n<10$, então preencha e imprima somente as posições da matriz compatíveis com o valor de $n$. Por exemplo, se $n=2$, preencha e imprima somente 4 posições da matriz conforme ilustrado na figura. Isso porque o Portugol novo não aceita alocar tamanho de vetor/matriz em  tempo de execução.\r\n\r\n%https://www.dropbox.com/s/vycdkga92y217ps/q2_rec.png?dl=0 \r\n%\\begin{figure}[h]\r\n%  \\centering \\epsfig{file=exemplosQ2.eps,width=10cm}\r\n%  \\caption{Exemplos de valor de $n$ à esquerda e a matriz resultante correspondente à direita.}\r\n%  \\label{exemplo}\r\n%\\end{figure}\r\n\r\n\\begin{figure}[h!]\\centering\r\n\\write18{wget -c https://www.dropbox.com/s/vycdkga92y217ps/q2_rec.png?dl=0 -O ./tmp/lr_pi_fig_q2.png}\r\n\\includegraphics[scale=0.25]{lr_pi_fig_q2}\r\n\\end{figure}','QT','2','remember','no','2019-01-30',1,5),(50,'','matriz xadrez','João e Maria jogam o seguinte jogo em um tabuleiro de xadrez de tamanho $n$ por $n$. Em cada casa do tabuleiro, João coloca alguns grãos de [[code:grao]]. Maria então deve adivinhar se há mais grãos de [[code:grao]] nas casas pretas ou nas casas brancas.\r\n\r\nFaça um programa que ajuda Maria: o seu programa deve ler $n$ (um inteiro par de $2$ a $[[code:tam0]]$). Em seguida você deve ler uma matriz $A$ de tamanho $n$ por $n$, onde $A[i][j]$ é o número de grãos de [[code:grao]] na posição $(i,j)$ do tabuleiro. A sua resposta deve ser impressa em uma única linha contendo três números separados por espaços em brancos: o número de grãos em casas [[code:cor1]]s, o número de grãos em casas [[code:cor2]]s e um número $r$ (onde $r=0$ se o número de grãos em casas [[code:cor1]]s for maior que o número em casas [[code:cor2]]s; $r=1$, se o número de grãos em casas [[code:cor2]]s é maior; e $r=2$ se há empate).\r\n\r\nA primeira casa do tabuleiro sempre é [[code:cor1]]! Não faça validação de dados e não imprima nenhuma mensagem ao usuário (apenas imprima a resposta).\r\n\r\n\\noindent Exemplos:\r\n\r\n2 $\\rightarrow$ este é o valor de $n$\r\n\r\n1 \\ 3\r\n\r\n2 \\ 4\r\n\r\nResposta:\r\n\r\n5 \\ 5 \\ 2  $\\rightarrow$ 5 grãos em casas [[code:cor1]]s, 5 em casas [[code:cor2]]s, empate\r\n\r\n\\vspace{5mm}\r\n\r\n2\r\n\r\n1 \\ 0\r\n\r\n0 \\ 1 \r\n\r\nResposta: \r\n\r\n2 \\ 0 \\ 0\r\n\r\n\\vspace{5mm}\r\n\r\n4\r\n\r\n3 \\ 0 \\ 4 \\ 3\r\n\r\n5 \\ 6 \\ 7 \\ 1\r\n\r\n2 \\ 3 \\ 4 \\ 4\r\n\r\n1 \\ 2 \\ 3 \\ 4 \r\n\r\nResposta: \r\n\r\n26 \\ 26 \\ 2\r\n\r\n[[def:\r\ntam0=random.choice([18,20,22,24])\r\ncor1=random.choice([\"branca\",\"preta\"])\r\nif cor1==\"branca\":\r\n  cor2=\"preta\"\r\nelse:\r\n  cor2=\"branca\"\r\ngrao=random.choice([\"arroz\",\"feijão\",\"milho\"])\r\n]]','QT','2','remember','yes','2019-01-30',1,5),(51,'','verifica linha coluna','O trecho de programa a seguir solicita a digitação via teclado de uma matriz de caracteres.\r\n\r\n\\vspace{2mm}\r\n\\hline\r\n\\begin{lstlisting}\r\nimport java.util.Scanner;\r\npublic class Questao3 {\r\n    public static void main(String[] args) {\r\n        final int LIN = [[code:a0]];\r\n        final int COL = [[code:a0]];\r\n        Scanner sc = new Scanner(System.in);\r\n        char M[][] = new char[LIN][COL];\r\n        // preenchendo a matriz\r\n        for (int i = 0; i < LIN; i++) {\r\n            for (int j = 0; j < COL; j++) {\r\n                System.out.print(\"Digite uma letra: \");\r\n                M[i][j] = sc.next().charAt(0);\r\n            }\r\n        }\r\n        // - continue o programa a partir daqui    \r\n    }\r\n}\r\n\\end{lstlisting} &  \\\\ \\hline\r\n\\vspace{2mm}\r\n\r\n\\noindent Complete o programa acima com a seguinte funcionalidade: \r\n\r\n\\noindent Dado um inteiro [[code:a1]], o programa deve verificar se a {\\textbf{linha}} [[code:a1]] contém todos os elementos iguais entre si. Em caso positivo, deve ser apresentada a saída: “A linha [[code:a1]] possui todos os elementos iguais a k”, onde k é o valor do elemento. Caso contrário, o programa deve examinar a {\\textbf{coluna}} [[code:a1]] e verificar se esta contém todos os elementos iguais entre si, e neste caso, deve ser apresentada a saída:  “A coluna [[code:a1]] possui todos os elementos iguais a k”. Ou, senão, deve ser apresentada a saída: “Tanto a linha [[code:a1]], como a coluna [[code:a1]], não contêm todos os elementos iguais entre si”. O valor de [[code:a1]] (índice) deverá ser solicitado ao usuário. \r\nDica: Imprima a matriz logo após a leitura de dados. \r\n\r\n\\noindent {\\textbf{Obs.: Obrigatório o uso de laços de repetição.}}\r\n\r\n\r\n[[def:\r\na0=random.randrange(3, 5, 1)  \r\na1=random.choice([\"x\",\"y\",\"z\"]) \r\n]]','QT','2','remember','yes','2019-01-30',1,5),(53,'','matriz fatorial','Escreva um programa completo que:\r\n\r\n(a) lê, via teclado, dois números inteiros {\\bf L} e {\\bf  C} maiores que\r\num (não precisa fazer validação de dados).\r\n\r\n(b)  cria o módulo \"Fatorial\". Esse módulo  \"Fatorial\"  deve receber como parâmetros (argumentos) de entrada dois\r\nnúmeros  inteiros $x$ e $y$ maiores que zero. Módulo calcula e devolve o valor de  \r\n$(x+y) !$, ou seja, fatorial de $(x+y)$, usando a fórmula\r\n$$ (x + y) ! = (x+y) * (x+y-1) * (x+y -2) * \\ldots * 1 $$\r\nObs: $ 0! =1$.\r\n\r\n(c) cria o módulo \"ImprimeMatriz\", que recebe como parâmetros uma matriz\r\nM de números inteiros, o número de linhas e o número de colunas desta\r\nmatriz.  Módulo imprime a matriz M formatada (ou seja, linha por linha).\r\n\r\n(d) cria o módulo \"MatrizFinal\". Esse módulo  recebe como\r\nparâmetros os números {\\bf  L}  e {\\bf C}  lidos no início de bloco\r\nprincipal (item(a)). Este  módulo deve\r\ngerar  a matriz de dimensoes $L \\times C$, onde o elemento na posição\r\n$(i,j)$ desta matriz vai ser o valor devolvido pelo método \"Fatorial\", com parâmetros de entrada i e j. O módulo também deve imprimir esta matriz gerada final chamando o módulo para imprimir a matriz \"ImprimeMatriz\".\r\n\r\n\\vspace{0.5 cm}\r\n\\textit {OBS: escreva comentários (explique variáveis principais, comente o que\r\ncada parte do algoritmo faz).\r\nSeu algoritmo deve funcionar para todas as entradas, e não somente\r\npara exemplo apresentado abaixo. Porém, se você escolher programar usando Portugol Studio, use os valores de $L$ e $C$ de exemplo abaixo, como valores pré-determinados no item (a), (pois o Portugol novo não aceita alocar tamanho de vetor/matriz em  tempo de execução.)}\r\n\r\nUm exemplo:\r\n\r\nSe $L=[[code:Linhas]], C=[[code:Colunas]]$  o seu algoritmo (ou seja, módulo \"MatrizFinal\")  deve imprimir\r\n\r\n[[code:imprimirMatriz]]\r\n\r\n\r\n\r\n[[def:\r\n# É MAIS FÁCIL TESTAR ESSE CÓDIGO EM https://repl.it/languages/python\r\nimport random\r\nimport numpy as np\r\nfrom math import factorial\r\n\r\ndef factorialMatrix(Linhas,Colunas):\r\n  A = np.zeros((Linhas,Colunas)).astype(int)\r\n  for i in range(0,Linhas):\r\n    for j in range(0,Colunas):\r\n      A[i,j] = factorial(i+j)\r\n  return A\r\n\r\ndef printMatrix(A):\r\n  str1=\'\'\'\r\n\\\\begin{displaymath}\r\n\\\\begin{bmatrix}\r\n\'\'\'\r\n  for i in range(A.shape[0]):\r\n    for j in range(A.shape[1]):\r\n      str1+=str(A[i,j])\r\n      if j<A.shape[1]-1:\r\n        str1+=\"&\"\r\n    str1+=\"\\\\\\\\\\n\"  \r\n  str1+=\'\'\'\r\n\\\\end{bmatrix}\r\n\\\\end{displaymath}\r\n\'\'\'\r\n  return str1      \r\n\r\nLinhas = random.randrange(2,6,1)\r\nColunas = random.randrange(6,9,1)\r\n\r\nA=factorialMatrix(Linhas,Colunas)\r\nimprimirMatriz = printMatrix(A)\r\n]]','QT','3','remember','yes','2019-01-30',1,6),(54,'','Matriz Transposta','Considere uma matriz quadrada $A$ de inteiros. Considere uma matriz transposta $B$, como sendo igual a $A$, porém, refletida na diagonal principal. Veja exemplo abaixo para uma matriz $5\\times 5$. Considere também um triângulo retângulo superior a diagonal, os elementos em cinza na matriz $A$ a seguir (análogo para um triângulo inferior a diagonal).\r\n\r\n% gerado por https://www.tablesgenerator.com/\r\n\\begin{table}[h]\r\n\\begin{tabular}{ccccclccccc}\r\n\\cline{1-5} \\cline{7-11}\r\n\\multicolumn{1}{|c|}{3} & \\multicolumn{1}{|c|}{\\cellcolor{lightgray}5} & \\multicolumn{1}{c|}{\\cellcolor{lightgray}2} & \\multicolumn{1}{c|}{\\cellcolor{lightgray}1} & \\multicolumn{1}{c|}{\\cellcolor{lightgray}4} & \\multicolumn{1}{l|}{} & \\multicolumn{1}{c|}{3} & \\multicolumn{1}{c|}{5} & \\multicolumn{1}{c|}{4} & \\multicolumn{1}{c|}{7} & \\multicolumn{1}{c|}{7} \\\\ \r\n\\cline{1-5} \\cline{7-11} \r\n\\multicolumn{1}{|c|}{5} & \\multicolumn{1}{c|}{4} & \\multicolumn{1}{c|}{\\cellcolor{lightgray}2} & \\multicolumn{1}{c|}{\\cellcolor{lightgray}5} & \\multicolumn{1}{c|}{\\cellcolor{lightgray}3} & \\multicolumn{1}{l|}{} & \\multicolumn{1}{c|}{5} & \\multicolumn{1}{c|}{4} & \\multicolumn{1}{c|}{5} & \\multicolumn{1}{c|}{4} & \\multicolumn{1}{c|}{8} \r\n\\\\ \\cline{1-5} \\cline{7-11} \r\n\\multicolumn{1}{|c|}{4} & \\multicolumn{1}{c|}{5} & \\multicolumn{1}{c|}{7} & \\multicolumn{1}{c|}{\\cellcolor{lightgray}2} & \\multicolumn{1}{c|}{\\cellcolor{lightgray}1} & \\multicolumn{1}{l|}{} & \\multicolumn{1}{c|}{2} & \\multicolumn{1}{c|}{2} & \\multicolumn{1}{c|}{7} & \\multicolumn{1}{c|}{7} & \\multicolumn{1}{c|}{1} \r\n\\\\ \\cline{1-5} \\cline{7-11} \r\n\\multicolumn{1}{|c|}{7} & \\multicolumn{1}{c|}{4} & \\multicolumn{1}{c|}{7} & \\multicolumn{1}{c|}{2} & \\multicolumn{1}{c|}{\\cellcolor{lightgray}9} & \\multicolumn{1}{l|}{} & \\multicolumn{1}{c|}{1} & \\multicolumn{1}{c|}{5} & \\multicolumn{1}{c|}{2} & \\multicolumn{1}{c|}{2} & \\multicolumn{1}{c|}{5} \r\n\\\\ \\cline{1-5} \\cline{7-11} \r\n\\multicolumn{1}{|c|}{7} & \\multicolumn{1}{c|}{8} & \\multicolumn{1}{c|}{1} & \\multicolumn{1}{c|}{5} & \\multicolumn{1}{c|}{6} & \\multicolumn{1}{l|}{} & \\multicolumn{1}{c|}{4} & \\multicolumn{1}{c|}{3} & \\multicolumn{1}{c|}{1} & \\multicolumn{1}{c|}{9} & \\multicolumn{1}{c|}{6} \r\n\\\\ \\cline{1-5} \\cline{7-11} \r\n                        &                        & A                      &                        &                        &                       &                        &                        & B                      &                        &                       \r\n\\end{tabular}\r\n\\end{table}\r\n\r\n%\\vspace{-3mm}\r\n\\noindent Escreva um programa completo com os seguintes \\textbf{módulos chamados no bloco principal}:\r\n\r\n\\begin{enumerate}[label=(\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item gerar uma matriz $A$ de dimensões $[[code:a0]] \\times [[code:a0]]$ de inteiros aleatórios entre $0$ e $9$ (código fornecido abaixo $GeraMatriz$);\r\n\\item criar um módulo chamado $imprimeMatriz(A)$ e usar este módulo para imprimir a matriz $A$;\r\n\\item criar um módulo chamado $B=matrizTransposta(A)$, que retorna a matriz $B$, transposta de $A$ (imprimir a matriz $B$, chamando o módulo anterior);\r\n\\item criar um módulo para retornar [[code:a1]] dos elementos do triângulo  [[code:a2]] a diagonal de $A$ (imprimir o resultado).\r\n\\end{enumerate}\r\n\r\n\r\n\r\n\\vspace{-1mm}\r\n\\noindent \\textbf{Java:}\r\n\\vspace{0mm}\r\n%\\hline\r\n\\begin{lstlisting}\r\n    static void GeraMatriz(int Mat[][], int L, int C) {\r\n        for (int i = 0; i < L; i++) {\r\n            for (int j = 0; j < C; j++) {\r\n                Mat[i][j] = (int) (Math.random() * 10);  // gera um numero entre 0 e 9\r\n            } } }\r\n\\end{lstlisting}   &  \\\\ %\\hline\r\n\\vspace{1mm}\r\n\r\n\\noindent \\textbf{Portugol:}\r\n\\vspace{-1mm}\r\n%\\hline\r\n\\begin{lstlisting}\r\n    funcao GeraMatriz(inteiro Mat[][], inteiro L, inteiro C) {\r\n  	para (inteiro i = 0; i < L; i++) {\r\n            para (inteiro j = 0; j < C; j++) {\r\n        	Mat[i][j] = Util.sorteia(0,10)  // gera um numero entre 0 e 9  \r\n            } } }\r\n\\end{lstlisting}   &  \\\\ %\\hline\r\n%\\vspace{2mm}\r\n\r\n[[def:\r\na0=random.choice([21,23,25,27]) \r\na1=random.choice([\"a média\",\"o maior\",\"o menor\"]) \r\na2=random.choice([\"superior\",\"inferior\"]) \r\n]]','QT','3','remember','yes','2019-01-30',1,6),(55,'','Rosa dos ventos','Uma posição qualquer $a_0=(i,j)$ de uma matriz é chamada de \\textbf{[[code:direcao]]  [[code:maiormenor]]} se tem valor [[code:maiormenor]] do que os valores vizinhos nas posições [[code:direcao_viz]], conforme tabela abaixo. Veja abaixo à esquerda uma matriz $A=[[code:Linhas]] \\times [[code:Colunas]]$ e à direita a sua matriz \\textbf{[[code:direcao]]  [[code:maiormenor]]} (na ilustração, considere ``-\'\' no lugar de ``-1\'\').\r\n\r\n\\begin{table}[h!]\r\n\\centering\r\n\\begin{tabular}{lllll}\r\n\\cline{1-3}\r\n\\multicolumn{1}{|l|}{$a_8=$ Noroeste} & \\multicolumn{1}{l|}{$a_1=$ Norte} & \\multicolumn{1}{l|}{$a_2=$ Nordeste} &  &  \\\\ \\cline{1-3}\r\n\\multicolumn{1}{|l|}{$a_7=$ Oeste}      & \\multicolumn{1}{l|}{$a_0=(i,j)$}       & \\multicolumn{1}{l|}{$a_3=$ Leste}      &  &  \\\\ \\cline{1-3}\r\n\\multicolumn{1}{|l|}{$a_6=$ Sudoeste} & \\multicolumn{1}{l|}{$a_5=$ Sul}    & \\multicolumn{1}{l|}{$a_4=$ Sudeste}  &  &  \\\\ \\cline{1-3}\r\n                         &                         &                         &  & \r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\vspace{-3mm}\r\n\r\n%\\textbf{Exemplo:} esquerda A e direita \\textbf{[[code:direcao]]  [[code:maiormenor]]} (usar valor -1 no lugar de -).\r\n\r\n\\begin{figure}[h!]\r\n  \\centering{\r\n  \\vspace{-1mm}\r\n  \\includegraphics[scale=0.55]{[[code:fig0]]} \\hspace{-3mm}\r\n  \\includegraphics[scale=0.55]{[[code:fig1]]} \r\n\\end{figure}\r\n\r\n\\vspace{-3mm}\r\n\\noindent Escreva um programa completo com os seguintes \\textbf{módulos chamados no bloco principal}:\r\n\r\n\\begin{enumerate}[label=(\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item gerar uma matriz $A$ de dimensões  $A=[[code:Linhas]] \\times [[code:Colunas]]$ de inteiros aleatórios entre $0$ e $9$ (código fornecido abaixo $GeraMatriz$);\r\n\\item criar um módulo chamado $imprimeMatriz(A)$ e usar este módulo para imprimir a matriz $A$;\r\n\\item criar um módulo para retornar a matriz  \\textbf{[[code:direcao]]  [[code:maiormenor]]} de $A$ (imprimir o resultado, chamando o módulo anterior).\r\n\\end{enumerate}\r\n\r\n\r\n\\vspace{-1mm}\r\n\\noindent \\textbf{Java:}\r\n\\vspace{0mm}\r\n%\\hline\r\n\\begin{lstlisting}\r\n    static void GeraMatriz(int Mat[][], int L, int C) {\r\n        for (int i = 0; i < L; i++) {\r\n            for (int j = 0; j < C; j++) {\r\n                Mat[i][j] = (int) (Math.random() * 10);  // gera um numero entre 0 e 9\r\n            } } }\r\n\\end{lstlisting}   &  \\\\ %\\hline\r\n\\vspace{1mm}\r\n\r\n\\noindent \\textbf{Portugol:}\r\n\\vspace{-1mm}\r\n%\\hline\r\n\\begin{lstlisting}\r\n    funcao GeraMatriz(inteiro Mat[][], inteiro L, inteiro C) {\r\n  	para (inteiro i = 0; i < L; i++) {\r\n            para (inteiro j = 0; j < C; j++) {\r\n        	Mat[i][j] = Util.sorteia(0,10)  // gera um numero entre 0 e 9  \r\n            } } }\r\n\\end{lstlisting}   &  \\\\ %\\hline\r\n%\\vspace{2mm}\r\n\r\n\r\n[[def:\r\n# É MAIS FÁCIL TESTAR ESSE CÓDIGO EM https://repl.it\r\n\r\nimport random\r\n\r\ndir=random.choice([1,2,3,4,5,6,7,8])  \r\n#dir=random.choice([1])  \r\n# CRIS, ESCOLHA AQUI AS VARIAÇÕES, \r\n# EX. SE FOR APENAS NORTE/SUL, MUDAR PARA [1,5]\r\n\r\ndirecaoAll=[\"Norte\",\"Nordeste\",\"Leste\",\"Sudeste\",\"Sul\",\"Sudoeste\",\"Oeste\",\"Noroeste\"]\r\ndirecao=direcaoAll[dir-1]\r\nmaiormenor=random.choice([\"maior\",\"menor\"]) \r\n\r\ndef drawMatrix(A,myfile):\r\n  fig, ax = plt.subplots()\r\n  mat = ax.imshow(A, cmap=\'Pastel1\', interpolation=\'nearest\')\r\n  for x in range(A.shape[0]):\r\n    for y in range(A.shape[1]):\r\n        ax.annotate(str(A[x, y])[0], xy=(y, x), horizontalalignment=\'center\', verticalalignment=\'center\')\r\n  plt.show()\r\n  fig.savefig(\'./tmp/\'+ myfile +\'.png\', dpi=300)\r\n  plt.close()\r\n\r\nm = random.randrange(7,9,1)    # número de linhas\r\nn = random.randrange(15,21,1) # número de colunas\r\nLinhas=m \r\nColunas=n \r\nA = np.random.random((m, n))*10\r\nA = A.astype(int)\r\n\r\nfig0=\"q2_fig0\"\r\ndrawMatrix(A,fig0)\r\n\r\n#direcoes 0      1      2      3      4      5      6        7       8\r\noffset=[[0,0],[-1,0],[-1,1],[0,1],[1,1],[1,0],[1,-1],[0,-1],[-1,-1]]\r\ndef direcoes(offset,dir):\r\n  if dir==1:\r\n    dir1=8\r\n  else:\r\n    dir1=dir-1\r\n  if dir==8:\r\n    dir2=1\r\n  else:\r\n    dir2=dir+1\r\n  return (dir1,dir,dir2)\r\n\r\n(dir1,dir0,dir2) = direcoes(offset,dir)\r\n\r\nB=np.zeros(A.shape)-1\r\nB=B.astype(int)\r\nfor i in range(1,m-1):\r\n  for j in range(1,n-1):\r\n    if maiormenor==\"menor\":\r\n      if A[i+offset[dir1][0],j+offset[dir1][1]] > A[i,j] and A[i+offset[dir0][0],j+offset[dir0][1]] > A[i,j] and A[i+offset[dir2][0],j+offset[dir2][1]] > A[i,j]:\r\n        B[i,j]=A[i,j]\r\n    else:\r\n      if A[i+offset[dir1][0],j+offset[dir1][1]] < A[i,j] and A[i+offset[dir0][0],j+offset[dir0][1]] < A[i,j] and A[i+offset[dir2][0],j+offset[dir2][1]] < A[i,j]:\r\n        B[i,j]=A[i,j]\r\n\r\nfig1=\"q2_fig1\"\r\ndrawMatrix(B,fig1)\r\n\r\ndirecao_viz=\"$a_\"+str(dir1)+\"$, $a_\"+str(dir0)+\"$, $a_\"+str(dir2)+\"$\"\r\n]]','QT','3','remember','yes','2019-01-30',1,6),(56,'','torneio (moodle) v1','Um torneio classificatório de vôlei de praia é disputado no sistema todos-contra-todos (cada equipe enfrenta uma vez todos os possíveis adversários) por [[code:a0]] equipes. \r\n\\\r\nOu seja, no total há [[code:a1]] rodadas de jogos (cada time joga com [[code:a1]] equipes). Uma equipe se classifica para a fase seguinte se vencer pelo menos [[code:a2]]\\%  de suas partidas. \r\n\\\r\nOs resultados dos jogos são representados por uma {\\bf matriz de inteiros}, em que cada linha da matriz representa uma equipe e cada coluna representa uma rodada do torneio. \r\n\\\r\nConsidere que em cada célula da matriz tem o dígito $[[code:dig1]]$ representando VITÓRIA e o dígito $[[code:dig2]]$ representando DERROTA.  \r\n\\ \\ \\\r\n\\textbf{Pede-se:}\\vspace{-3mm}\r\n\\begin{enumerate}[label=(\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Declare uma constante $N = [[code:a0]]$ e uma constante $M = [[code:a1]]$. Na hora de fazer os “testes” você pode mudar esse $N$ para valores menores para minimizar a digitação.\r\n\r\n\\vspace{-4mm}\r\n\\begin{table}[h!]\r\n\\centering\r\n\\begin{tabular}{|l|l|}\r\n\\hline\r\n\\textbf{Portugol} & \\texttt{const inteiro N = [[code:a0]] } \\\\ \\hline\r\n\\textbf{Java}       & \\texttt{final int N = [[code:a0]];}     \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\\vspace{-4mm}\r\n\r\n\\item Declare uma matriz de $N \\times M$ (de inteiros) para representar os $[[code:a0]]$ times e $[[code:a1]]$ rodadas, e armazenas os resultados.\r\n\r\n\\item Faça uso da função \\textbf{FLeMatriz} para ler os elementos da matriz. Note que a função \\textbf{FLeMatriz} está disponível no final dessa questão. A função não faz validação de dados e não é necessário fazer.\r\n\r\n\\item Considere, que o dígito [[code:dig1]] representa “vitória” e [[code:dig2]] representa “derrota”. ATENÇÃO: utilize exatamente esses dois dígitos para representar vitória e derrota.\r\n\r\n\\item Escreva uma função denominada \\textbf{FResultado} que deve mostrar na tela, para cada uma das $N$ equipes se ela foi classificada ou eliminada, no seguinte formato:\r\n“Equipe i classificada\" ou \"Equipe i eliminada\", sendo “i” o  número da equipe. Note que seu programa deve continuar funcionando para matriz com $N=100$ e $M=99$ ou $N=1000$ e $M=999$.\r\n\\end{enumerate}\r\n\r\n\\vspace{-4mm}\r\n\\begin{table}[h!]\r\n\\centering\r\n\\begin{tabular}{|l|l|}\r\n\\hline\r\n\\textbf{Portugol} & \\texttt{funcao FResultado(inteiro Mat[][], inteiro L, inteiro C) } \\\\ \r\n                            & \\texttt{// L é o número de linhas e C é o número de colunas} \\\\ \\hline\r\n\\textbf{Java}       &  \\texttt{public static void FResultado(int Mat[][], int L, int C) } \\\\ \r\n                            & \\texttt{// L é o número de linhas e C é o número de colunas} \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\\vspace{-4mm}\r\n\r\n\\vspace{-1mm}\r\n\\noindent \\textbf{Java:}\r\n\\begin{lstlisting}\r\n    public static void FLeMatriz(int Mat[][], int L, int C) {\r\n        for (int i = 0; i < Mat.length; i++) { // linhas i\r\n            for (int j = 0; j < Mat[0].length; j++) { // coluna j\r\n                Mat[i][j] = scan.nextInt(); // lê elemento i,j\r\n            }\r\n        }\r\n    }\r\n\\end{lstlisting}   \r\n\\vspace{-1mm}\r\n\r\n\\noindent \\textbf{Portugol:}\r\n%\\vspace{2mm}\r\n%\\hline\r\n\\begin{lstlisting}\r\n    funcao FLeMatriz(int Mat[][], inteiro L, inteiro C) {\r\n 		inteiro i, j\r\n  		para (i = 0; i < L; i++) {\r\n     		     para (j = 0; j < C; j++) {\r\n        			leia(Mat[i][j] )  \r\n        	    } \r\n        	} \r\n     }\r\n\\end{lstlisting}%   &  \\\\ \\hline\r\n\\vspace{-1mm}\r\n\r\n\r\n\\noindent\\textbf{ATENÇÃO:} \\\\ Submeter o arquivo \\textbf{prova2q3.java} (com a resposta) e o arquivo \\textbf{modelo.txt}, contendo apenas o texto \\textbf{Modelo: [[code:modelo]]}. Primeiro enviar o arquivo java e depois e arquivo txt.\r\n\r\n\\vspace{-1mm}\r\n\r\n[[code:imprimirMatriz]] \r\n\r\n[[def:\r\n# para teste: https://repl.it/languages/python\r\nimport random, numpy as np\r\na0=6\r\na1=a0-1\r\noper2=[45,55]\r\na2=random.choice(oper2) # sortear um número entre 70% e 75%\r\n\r\noper3=[2,5,8]\r\na3 =  random.choice(oper3) \r\n\r\ndig1=a3#oper3[0] # vitoria\r\ndig2=0#oper3[1]   # derrota\r\n\r\n# Mod a0  a2 a3\r\n#    A   6  45 2\r\n#    B   6  55 2\r\n#    C   6  45 5\r\n#    D   6  55 5\r\n#    E   6  45 8\r\n#    F   6  55 8\r\nmodelo = \"ERRO\"\r\nif a2==oper2[0] and a3==oper3[0]:\r\n  modelo = \"A\"\r\nif a2==oper2[1] and a3==oper3[0]:\r\n  modelo = \"B\"\r\nif a2==oper2[0] and a3==oper3[1]:\r\n  modelo = \"C\"\r\nif a2==oper2[1] and a3==oper3[1]:\r\n  modelo = \"D\"\r\nif a2==oper2[0] and a3==oper3[2]:\r\n  modelo = \"E\"\r\nif a2==oper2[1] and a3==oper3[2]:\r\n  modelo = \"F\"\r\n\r\ndef printMatrix(A):\r\n  str1=\'\'\'\r\n\\\\noindent\\\\textbf{Exemplo:}\r\n\\\\begin{displaymath}\r\n\\\\begin{bmatrix}\r\n\'\'\'\r\n\r\n  for i in range(A.shape[0]):\r\n    for j in range(A.shape[1]):\r\n      str1+=str(A[i,j])\r\n      if j<A.shape[1]-1:\r\n        str1+=\"&\"\r\n    str1+=\"\\\\\\\\\\n\"  \r\n\r\n  str1+=\'\'\'\r\n\\\\end{bmatrix}\r\n\\\\end{displaymath}\r\n\'\'\'\r\n  return str1      \r\n\r\nA = np.random.randint(2, size=(a0, a1))\r\nA[A[:][:]==0]=dig1\r\nA[A[:][:]==1]=dig2\r\n\r\n# PARA TESTAR\r\nimprimirMatriz = printMatrix(A)\r\n\r\nimprimirMatriz += \"\\nResposta:\\\\\\\\\" \r\n\r\nfor i in range(a0):\r\n  tam=0\r\n  for j in range(a1):\r\n    if A[i][j]==dig1:\r\n      tam+=1\r\n  if (tam/a1)>=a2/100.0:\r\n    imprimirMatriz += \"\\nEquipe %s classificada\\\\\\\\\" % str(i)\r\n  else:\r\n    imprimirMatriz += \"\\nEquipe %s eliminada\\\\\\\\\" % str(i)\r\n\r\n]]','QT','3','remember','yes','2019-01-30',1,6),(58,'teo-lab-QM-QT q3','for-soma divisores; max','O número \\textbf{12} tem como divisores 1, 2, 3, 4, 6 e 12. Se somarmos todos os seus divisores, o resultado é \\textbf{28}. Faça um programa que retorne o maior número abaixo de \\textbf{[[code:numero]]} que tem a maior soma dos seus divisores. Informe na saída do programa qual é este número e qual é a sua soma, respectivamente.\r\n\r\n\\\r\n\r\n% ATENÇÃO: se for usar como uma questão de múltipla escolha, comentar o EXEMPLO que segue\r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\r\nEntrada: [[code:numero]]\r\n\r\nSaída: Numero=[[code:correctAnswerN]] e Soma Maxima=[[code:correctAnswerMax]]\r\n\r\n\r\n[[def:\r\n#https://repl.it/languages/python\r\nimport random\r\n\r\nnumero = random.randrange(950,1100,1)\r\n\r\ncorrectAnswerMax = 0\r\nfor i in range(1, numero+1):\r\n  divisores = 0\r\n  for i in range(1, numero):\r\n    if numero % i == 0:\r\n      divisores += i\r\n      #print divisores,i\r\n\r\n  if correctAnswerMax < divisores:\r\n    correctAnswerMax=divisores\r\n    correctAnswerN = i\r\n\r\nglobal correctAnswer\r\ncorrectAnswer = [correctAnswerN,correctAnswerMax]\r\n]]','QT','3','remember','yes','2019-01-30',1,3),(60,'teo q3','while-média par/ímpar/menor/maior','Escreva um programa que solicita ao usuário uma quantidade indeterminada (a entrada de dados deve ser encerrada quando o número 0 (zero) for digitado) de números inteiros estritamente positivos ou negativos.\\\\\r\n\r\n\\noindent\r\n\\textbf{Atenção:} o número 0 (zero) não entra nas contas abaixo, somente números estritamente positivos e negativos. Também não precisa fazer validação de dados, isto é, suponha que os números fornecidos são números inteiros.\\\\\r\n\r\n\\noindent\r\nO programa deve calcular e escrever:\r\n\r\n\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item A média aritmética dos números [[code:a0]]  digitados. \r\n\\item O [[code:a1]] dos números [[code:a0]] negativos digitado.\r\n\\end{itemize}\r\n\\\\\r\n\r\n\\noindent\r\nSe não for digitado nenhum número [[code:a2]] estritamente positivo ou negativo, então o programa deve escrever \"Não existem números [[code:a0]]\".\\\\\r\n\r\n\\noindent\r\nSe não for digitado nenhum número [[code:a2]] negativo, então o programa deve escrever \"Não existem números [[code:a0]] negativos”.\\\\\r\n\r\n\\noindent\r\n\\textbf{EXEMPLO A:} 2, -2, 1, 4, 4, -7, 0\r\n\r\nA média aritmética dos números [[code:a0]] digitados é [[code:e1]]\r\n\r\nO [[code:a1]] dos números [[code:a0]] negativos digitado é [[code:e1n]]\\\\\r\n\r\n\\noindent\r\n\\textbf{EXEMPLO B:} 2, 4, 6, 3, 7, 0\r\n\r\nA média aritmética dos números [[code:a0]] digitados é [[code:e2]]\r\n\r\nNão existem números [[code:a0]] negativos\r\n\r\n\\drawLines{55}\r\n\r\n[[def:\r\na0 = random.choice([\"pares\",\"ímpares\"]) \r\na1 = random.choice([\"menor\",\"maior\"]) \r\nif a0==\"pares\":\r\n  a2=\"par\"\r\n  e1 = 2.0\r\n  e2 = 4.0\r\n  e1n = -2\r\nelse:\r\n  a2=\"ímpar\"\r\n  e1 = -3.0\r\n  e2 = 5.0\r\n  e1n = -7\r\n]]','QT','3','remember','yes','2019-01-30',1,3),(62,'','Fibonacci','A série de Fibonacci é definida do seguinte modo:\r\n\r\n\\[\r\n\\left\\{ \\begin{array}{l}\r\n	F_0 = 1  \\\\\r\n	F_1 = 1  \\\\\r\n	F_i = F_{i-1} + F_{i-2}, \\mbox{para} \\   i>1	\r\n	\\end{array} \r\n	\\right.\r\n\\]\r\n\r\nEscreva um programa que contenha trechos de código para:\r\n\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item ler um número inteiro estritamente positivo $n$ (não precisa fazer validação, isto é, suponha que $n$ é fornecido corretamente);\r\n\\item criar um vetor de números inteiros de $n$ posições;\r\n\\item preencher o vetor de maneira que o elemento de índice $i$, $0 \\leq i \\leq n-1$, contenha o valor $F_i$;\r\n\\item imprimir a soma de todos os valores do vetor que sejam múltiplos de 4.\r\n\\end{itemize}','QT','1','remember','no','2019-01-30',1,4),(63,'','soma convergente','Dizemos que um vetor de $n$ números inteiros, com $n$ par, é do tipo {\\bf soma convergente} se as seguintes desigualdades são satisfeitas:\r\n\\begin{description}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item[  --]  a soma do primeiro elemento do vetor com o último elemento do vetor é maior do que a soma do segundo elemento do vetor com o penúltimo elemento do vetor;\r\n\\item[  --] a soma do segundo elemento do vetor com o penúltimo elemento do vetor é maior do que a soma do terceiro elemento do vetor com o antepenúltimo elemento do vetor;\r\n\\item[  --] $\\ldots $\r\n\\item[  --] assim por diante até que a soma dos dois elementos do centro do vetor sejam menores do que a soma de seus vizinhos.\r\n\\end{description}\r\n\r\nVamos a um exemplo. O vetor V = [4 \\ 3 \\ 2 \\ 2 \\ 3 \\ 4 ] é de soma convergente porque valem as seguintes desigualdades:\r\n\\begin{description}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item[  --]  $V[0] + V[5] > V[1] + V[4]$;\r\n\\item[  --]  $V[1] + V[4] > V[2] + V[3]$ ;\r\n\\end{description}\r\n\r\nUm outro exemplo. O vetor V = [4 \\ 3 \\ 5 \\ 2 \\ 3 \\ 4 ] {\\bf não} é de soma convergente porque {\\bf não} é verdadeiro que $V[1] + V[4] > V[2] + V[3]$.\r\n\r\nEscreva um programa que contenha trechos de código para:\r\n\\begin{itemize}\r\n\\item ler um número inteiro estritamente positivo par $n$ (não precisa fazer validação, isto é, suponha que $n$ é fornecido corretamente);\r\n\\item criar um vetor $V$ de números inteiros de $n$ posições;\r\n\\item ler $n$ valores inteiros do usuário e armazená-los em $V$;\r\n\\item imprimir o vetor $V$;\r\n\\item determinar se $V$ é ou não de {\\bf soma convergente} (se for, imprimir ``É sim de soma convergente\'\'; senão, imprimir ``Não é de soma convergente\'\').\r\n\\end{itemize}\r\n\r\nObs.: Se você escolher programar usando Portugol Studio, use $n=20$ como valor pré-determinado porque o Portugol novo não aceita alocar tamanho de vetor/matriz em  tempo de execução.\r\n\r\n%Obs.: suponha que os números que você armazenará em $V$ estão todos no intervalo que vai de $-32.768$ a $32.767$.','QT','1','remember','no','2019-01-30',1,4),(64,'','vetor semiparticionado','Dado um vetor $V$ de $n$ elementos (suponha que $n$ é ímpar e positivo), o semiparticionado [[code:a2]] de $V$ é obtido pelas seguintes operações:\r\n\\vspace{-2mm}\r\n\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item  se o [[code:primeiro]] elemento de V for [[code:a1]] do que o [[code:ultimo]] elemento V, trocar a posição desses dois elementos;\r\n\\item  se o [[code:segundo]] elemento de V for [[code:a1]] do  que [[code:penultimo]] elemento V, trocar a posição desses dois elementos;\r\n%\\item  se o terceiro elemento de V for [[code:a1]] do que o antepenúltimo elemento de V, trocar a posição desses dois elementos;\r\n\\item   … \r\n\\item   assim por diante até que as posições dos elementos vizinhos do elemento mediano (“do meio”) sejam trocadas, caso necessário.\r\n\\end{itemize}\r\n\r\n\\noindent Aqui uma representação esquemática das possíveis operações de troca que são realizadas para se obter o semiparticionado  [[code:a2]] de um vetor:\r\n\r\n\\begin{figure}[h!]\\centering\r\n\\write18{wget -c https://www.dropbox.com/s/mo7nqsxkqbowpa7/q1_fig_par.png -O ./tmp/q1_fig_par.png}\r\n\\write18{wget -c https://www.dropbox.com/s/arhttakrw6wa3g5/q1_fig_impar.png -O ./tmp/q1_fig_impar.png}\r\n\\write18{wget -c https://www.dropbox.com/s/etmt2ftcw253rla/q1_fig.png -O ./tmp/q1_fig.png}\r\n\\includegraphics[scale=0.30]{[[code:fig0]]}\r\n\\end{figure}\r\n\r\n\\vspace{-5mm}\r\n\\noindent Exemplos:  \r\n\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item  Se $V$ é dado por $V =$ [ 0 \\ 9 \\ 3 \\ 8 \\ 4 \\ 7 \\ -1 \\ 2 \\ -2 ], então o semiparticionado  [[code:a2]] de $V$ será o vetor: \r\n\r\n\\hspace{3.3cm}\r\n[ [[code:ex1]] ]                                                      \r\n\r\n\\item  Se $V$ é dado por $V =$ [ -4 \\ 0 \\ 1 \\ 2 \\ 10 \\ 3 \\ 5 \\ 0 \\ 8 ], então o semiparticionado  [[code:a2]] de $V$ será o vetor: \r\n\r\n\\hspace{3.3cm}\r\n[ [[code:ex2]] ]                         \r\n\r\n\\item  Se $V$ contém apenas um elemento, o semiparticionado  [[code:a2]] de $V$ é o próprio $V$.\r\n\\end{itemize}\r\n\r\n\\noindent Faça um programa que:\r\n\\begin{enumerate}[label=(\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item  leia um número inteiro $n$ estritamente positivo ímpar (não precisa fazer validação, isto é,  suponha que $n$ é fornecido corretamente);\r\n\\item  cria um vetor $V$ com com capacidade para $n$ elementos inteiros;\r\n\\item  lê $n$ valores inteiros do usuário e armazena-os em $V$;\r\n\\item  transforme $V$ no semiparticionado  [[code:a2]] de $V$;\r\n\\item  imprima o semiparticionado  [[code:a2]] de $V$.\r\n\\end{enumerate}\r\n\r\n\\noindent \\textbf{Restrição importante: você não pode usar vetor auxiliar.}\r\n\\vspace{3mm}\r\n\r\n[[def:\r\na0=random.randrange(18, 25, 1)        \r\na1=random.choice([\"maior\",\"menor\"]) \r\na2=random.choice([\"par\",\"ímpar\",\"total\"]) \r\nif a2==\"par\":\r\n   primeiro = \"primeiro (índice 0)\"\r\n   ultimo = \"último (índice n-1)\"\r\n   segundo = \"segundo  (índice 2)\"\r\n   penultimo = \"penúltimo  (índice n-3)\"\r\n   fig0 = \"q1_fig_par\"\r\n\r\n   if a1==\"maior\":\r\n       #           0 \\ 9 \\ 3 \\ 8 \\ 4 \\ 7 \\ -1 \\ 2 \\ -2\r\n       ex1 = \"-2 \\ 9 \\ -1 \\ 8 \\ 4 \\ 7 \\ 3 \\ 2 \\ 0\"\r\n       #         -4 \\ 0 \\ 1 \\ 2 \\ 10 \\ 3 \\ 5 \\ 0 \\ 8\r\n       ex2 = \"-4 \\ 0 \\ 1 \\ 2 \\ 10 \\ 3 \\ 5 \\ 0 \\ 8\"\r\n   else:\r\n       #         0 \\ 9 \\ 3 \\ 8 \\ 4 \\ 7 \\ -1 \\ 2 \\ -2\r\n       ex1 = \"0 \\ 9 \\ 3 \\ 8 \\ 4 \\ 7 \\ -1 \\ 2 \\ -2\"\r\n       #        -4 \\ 0 \\ 1 \\ 2 \\ 10 \\ 3 \\ 5 \\ 0 \\ 8\r\n       ex2 = \"8 \\ 0 \\ 5 \\ 2 \\ 10 \\ 3 \\ 1 \\ 0 \\ -4 \"\r\n\r\nelif a2==\"ímpar\":\r\n   primeiro = \"primeiro (índice 1)\"\r\n   ultimo = \"último (índice n-2)\"\r\n   segundo = \"segundo  (índice 3)\"\r\n   penultimo = \"penúltimo  (índice n-4)\"\r\n   fig0 = \"q1_fig_impar\"\r\n\r\n   if a1==\"maior\":\r\n       #          0 \\ 9 \\ 3 \\ 8 \\ 4 \\ 7 \\ -1 \\ 2 \\ -2\r\n       ex1 =  \"0 \\ 2 \\ 3 \\ 7 \\ 4 \\ 8 \\ -1 \\ 9 \\ -2\"\r\n       #         -4 \\ 0 \\ 1 \\ 2 \\ 10 \\ 3 \\ 5 \\ 0 \\ 8\r\n       ex2 = \"-4 \\ 0 \\ 1 \\ 2 \\ 10 \\ 3 \\ 5 \\ 0 \\ 8\"\r\n   else:\r\n       #         0 \\ 9 \\ 3 \\ 8 \\ 4 \\ 7 \\ -1 \\ 2 \\ -2\r\n       ex1 = \"0 \\ 9 \\ 3 \\ 8 \\ 4 \\ 7 \\ -1 \\ 2 \\ -2\"\r\n       #        -4 \\ 0 \\ 1 \\ 2 \\ 10 \\ 3 \\ 5 \\ 0 \\ 8\r\n       ex2 =\"-4 \\ 0 \\ 1 \\ 3 \\ 10 \\ 2 \\ 5 \\ 0 \\ 8 \"\r\n\r\nelse:\r\n   primeiro = \"primeiro (índice 0)\"\r\n   ultimo = \"último (índice n-1)\"\r\n   segundo = \"segundo  (índice 1)\"\r\n   penultimo = \"penúltimo  (índice n-2)\"\r\n   fig0 = \"q1_fig\"\r\n\r\n   if a1==\"maior\":\r\n       ex1 = \"-2 \\ 2 \\ -1 \\ 7 \\ 4 \\ 8 \\ 3 \\ 9 \\ 0\"\r\n       ex2 = \"-4 \\ 0 \\ 1 \\ 2 \\ 10 \\ 3 \\ 5 \\ 0 \\ 8\"\r\n   else:\r\n      ex1 = \"0 \\ 9 \\ 3 \\ 8 \\ 4 \\ 7 \\ -1 \\ 2 \\ -2\"\r\n      ex2 = \"8 \\ 0 \\ 5 \\ 3 \\ 10 \\ 2 \\ 1 \\ 0 \\ -4\"\r\n]]','QT','1','remember','yes','2019-01-30',1,4),(65,'','média elementos','Um vetor de [[code:a0]] posições é utilizado para armazenar os pesos dos alunos de uma turma. O seguinte trecho de código preenche o vetor com números aleatórios. \r\n\\vspace{2mm}\r\n\\hline\r\n\\begin{lstlisting}\r\npublic class Questao1 {\r\n    public static void main(String[] args) {\r\n        final int MAX = [[code:a0]];\r\n        double V[] = new double[MAX];\r\n        for (int i = 0; i < MAX; i++) {\r\n           // gera um numero aleatorio e armazena no vetor\r\n            V[i] = Math.random() * 70 + 30;   \r\n        }\r\n        // -- continue o programa a partir daqui        \r\n    }\r\n}\r\n\\end{lstlisting}   &  \\\\ \\hline\r\n\\vspace{2mm}\r\n\r\n\\noindent Complete o programa acima acrescentando as seguintes funcionalidades:\r\n\r\n\\noindent Imprimir os elementos do vetor. Em seguida, calcule e imprima a média aritmética dos pesos. Apresente as posições do vetor que contém valores [[code:a1]] do que a média calculada e também imprima esses seus valores. Mostre mensagens como: “Aluno x, peso: xx”.\r\n\\vspace{3mm}\r\n\r\n\r\n[[def:\r\na0=random.randrange(18, 25, 1)        \r\na1=random.choice([\"maiores\",\"menores\"]) \r\n]]','QT','1','remember','yes','2019-01-30',1,4),(66,'','sortear elemento','O seguinte trecho de programa preenche um vetor com números gerados aleatoriamente.\r\n\r\n\\begin{table}[h]\r\n\\begin{tabular}{|l|l|}\r\n\\hline\r\n\\multicolumn{1}{|c|}{\\textbf{Java}} & \\multicolumn{1}{c|}{\\textbf{Portugol}} \\\\ \\hline\r\n\\begin{lstlisting}\r\npublic class Questao1 {\r\n  public static void main(String[] args) {\r\n    final int MAX = 50;\r\n    int V[] = new int[MAX];\r\n    System.out.println(\"Preencher vetor:\");\r\n    for(int i=0; i < MAX; i++) {\r\n       // gera num. aleatorio e insere em V\r\n       V[i] = (int)(Math.random()*72-21);\r\n     } 			 			\r\n     // -- continue a partir daqui... 	\r\n   } \r\n}\r\n\\end{lstlisting}\r\n                               &\r\n\\begin{lstlisting}\r\nprograma {\r\n  inclua biblioteca Util\r\n  funcao inicio() { \r\n    const inteiro MAX = 50\r\n    inteiro V[MAX], i\r\n    escreva(\"Preencher vetor: \\n\")\r\n    para(i=0; i < MAX; i++) {\r\n       // gera num. aleat. e insere em V\r\n       V[i] = Util.sorteia(-20, 50)\r\n    } \r\n    //-- continue a partir daqui…\r\n  }  \r\n}	\r\n\\end{lstlisting}                                    \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\\vspace{-3mm}\r\nComplete o programa acima de modo que as seguintes operações sejam executadas: \r\n\\vspace{-1mm}\r\n\\begin{enumerate}[label=(\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\\item Imprimir os elementos do vetor. Em seguida, exibir o elemento de índice  [[code:a0]] do vetor e a quantidade de números maiores do que este elemento.  \r\n\r\n\\item Solicitar ao usuário um número inteiro k e fazer a busca desse número k no vetor. Se encontrado, imprimir o(s) índice(s) do vetor onde esse número ocorre (apresentar mensagens como: \"k ocorreu na posição x\"). Caso contrário, se k não for encontrado no vetor, apresentar uma mensagem como: \"k não foi encontrado no vetor”.\r\n\\end{enumerate}\r\n\r\n\r\n[[def:\r\n# variáveis a serem usadas no texto da questão/alternativas\r\na0=random.randrange(5, 15, 1)  # sortear um número entre 30 e 40\r\n]]','QT','1','remember','yes','2019-01-30',1,4),(67,'','lanchonete','Uma lanchonete possui o seguinte cardápio:\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\begin{tabular}{|c|l|c|}\r\n\\hline\r\n\\textbf{Código} & \\textbf{Item} & \\textbf{Preço Unitário} \\\\ \\hline\r\n100             & Pão de Queijo          & 1,10                    \\\\ \\hline\r\n101             & Bauru                  & 1,30                    \\\\ \\hline\r\n102             & Cachorro quente        & 1,50                    \\\\ \\hline\r\n103             & Cheeseburger           & 1,30                    \\\\ \\hline\r\n104             & Suco                   & 2,00                    \\\\ \\hline\r\n105             & Refrigerante           & 1,00                    \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\noindent Faça um programa para armazenar este cardápio da lanchonete utilizando vetores. Em seguida, o programa deverá imprimir o cardápio para o usuário, antes que ele faça seu pedido. O programa deverá solicitar ao usuário, o código do item do pedido e sua quantidade. Ao final, o programa deverá calcular o valor da compra do usuário e imprimir este valor na tela. Considere que a cada execução do programa mais de um item poderá ser calculado. Quando o usuário digitar 0 (zero) para o código do item, significa que não existem mais itens a calcular.','QT','1','remember','no','2019-01-30',1,4),(68,'','template-equação0','Crie uma matriz $3 \\times 5$ de inteiros, com elementos $(i, j) = i + j$, com índices começando em zero, imprima a soma dos elementos da matriz.','QT','1','remember','no','2019-01-30',1,11),(69,'','template-equation-parametric0','% Part I: description of a question \r\nBuild a matrix of generic dimensions, for example, $[[code:a0]] \\times [[code:a1]]$ whose elements $(i,j)$ are $((((i+1) * [[code:a2]]) + ((j+1) * [[code:a3]])) \\mod{100})$. Compute the sum of the entries of this matrix. Indexes $i$ of rows and $j$ of columns begin with $0$.\r\n\r\n% Part II: we need to write cases here as a comment\r\n\\begin{comment}\r\n[[code:cases_moodle]]\r\n\\end{comment}\r\n\r\n% Part III: python code\r\n[[def:\r\ndef algorithm(a): # code to return a correct answer\r\n  a0, a1, a2, a3 = a\r\n  P = np.zeros((a0,a1))\r\n  for i in range(a0): # for each line\r\n    for j in range(a1): # for each column\r\n      P[i,j] = (((i+1)*a2)+((j+1)*a3))%100\r\n  return int(P.sum())\r\n\r\ndef myRandom():\r\n  a0=random.randrange(60, 80, 1)\r\n  a1=random.randrange(60, 80, 1)\r\n  return [a0,a1]\r\n\r\n# same equation for each model/variation Exam\r\na0, a1 = myRandom()\r\na2=random.choice([7, 13, 19])\r\na3=random.choice([11, 17, 23])\r\nglobal correctAnswer\r\n\r\ninp1=[a0,a1,a2,a3]\r\nout1 = algorithm(inp1)\r\ncorrectAnswer=out1\r\n\r\n# other test cases\r\na0, a1 = myRandom()\r\ninp2=[a0,a1,a2,a3]\r\nout2 = algorithm(inp2)\r\na0, a1 = myRandom()\r\ninp3=[a0,a1,a2,a3]\r\nout3 = algorithm(inp3)\r\n\r\n#           [ [case1], [case2], [case3], ... ]\r\ninput  = [  inp1   ,  inp2   ,  inp3 ]\r\noutput= [ [out1] , [out2]  ,  [out3] ]\r\ncases_moodle = getCasesMoodle(input, output)\r\n]]','QM','1','remember','yes','2019-01-30',1,123),(70,'','q2','% texto da questão\r\nO(a) \\_\\_\\_\\_\\_\\_ em Estrutura de Dados é também conhecido (a) como array [[code:a0]]-dimensional. Assinale a alternativa que complete a lacuna.\r\n\r\n% necessario para gerar casos de testes no moodle ==> mude verbatim <==> comment apos finalizar a questao\r\n\r\n\\begin{comment}\r\n[[code:moodle_cases]]\r\n\\end{comment}\r\n\r\n[[def:\r\n# código para retornar a resposta correta, com as variáveis abaixo\r\nglobal correctAnswer, wrongAnswer, a0, a1\r\n\r\na1 = [\"Uni\",\"Bi (ou Multi)\"]  # aparece no texto\r\na0 = random.choice(a1)        # sortear uma que vai aparecer no texto\r\n\r\nif a0==a1[0]:                 # se foi sorteada a primeira resposta\r\n  correctAnswer = \"Vetor\"     # aparece na resposta\r\n  wrongAnswer = \"Matriz\"\r\nelse:\r\n  correctAnswer = \"Matriz\"    # aparece na resposta\r\n  wrongAnswer = \"Vetor\"\r\n\r\ncases = {}\r\ncases[\'input\']    = np.array([[a0, \'lac-I\'],[\'entrada2\']]).tolist()\r\ncases[\'output\'] = np.array([[correctAnswer, \'lac-O\'],[\'saida2\']]).tolist()\r\nimport json \r\nmoodle_cases = json.dumps(cases)\r\n]]','QM','1','remember','yes','2019-01-30',1,12),(71,'grupo 1','TEMPLATE-01: FIGURA','Qual é a melhor resposta para o nome do animal que aparece na figura a seguir:\r\n\r\n\\begin{figure}[h!]\\centering\r\n\\write18{wget -c https://cdn.pixabay.com/photo/2017/02/04/22/37/panther-2038656_960_720.png -O ./tmp/fz_pi_fig01.png}\r\n\\fbox{\\includegraphics[scale=0.25]{fz_pi_fig01}}\r\n\\end{figure}','QM','1','remember','no','2019-01-30',1,13),(72,'grupo 1','TEMPLATE-02: FIGURA','Consider the Cantor set $C$ whose construction is depicted in Figure~\\ref{Cantor}. About $\\sharp C$ we can say that:\r\n\r\n%https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/Cantor_set_in_seven_iterations.svg/729px-Cantor_set_in_seven_iterations.svg.png\r\n%https://cdn.pixabay.com/photo/2017/02/04/22/37/panther-2038656_960_720.png\r\n\r\n\\begin{figure}[h!]\\centering\r\n\\write18{wget -c https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/Cantor_set_in_seven_iterations.svg/729px-Cantor_set_in_seven_iterations.svg.png -O ./tmp/cantor.png}\r\n\\fbox{\\includegraphics[scale=0.25]{cantor}}\r\n\\label{Cantor}\r\n\\end{figure}','QM','1','remember','no','2019-01-30',1,13),(73,'','template-integral0','% texto da questão\r\nQual é o resultado da equação:\r\n\r\n$$[[code:a0]]$$\r\n\r\n(Testando equação em latex com a biblioteca simbólica sympy, ver docs.sympy.org)\r\n\r\n[[def:\r\nx = symbols(\'x\')\r\neq = np.random.randint(3,6)*x**2 + np.random.randint(3,6)*x + np.random.randint(3,6)\r\n\r\na0 = latex(Integral(eq, x))\r\n\r\na1 = latex(integrate(eq, x))    \r\na2 = latex(integrate(eq*x, x))\r\na3 = latex(integrate(eq/x, x))\r\na4 = latex(integrate(x**5 + x + 1, x))\r\na5 = latex(integrate(x**6 + x + 1, x))\r\n]]\r\n\r\n% alternativas','QM','1','remember','yes','2019-01-30',1,14),(74,'','template-integral-fig0','% texto da questão\r\nQual o resultado desta equação:\r\n\r\n$$[[code:a0]]$$\r\n\r\nIlustrada na figura abaixo:\r\n\r\n\\begin{figure}[h]\r\n  \\centering\r\n  \\includegraphics[scale=0.5]{fzprof_fig01} % ATENÇÃO com o nome da figura\r\n\\end{figure}\r\n\r\n[[def:\r\na6 = random.randrange(3, 8, 1) \r\na7 = random.randrange(3, 8, 1) \r\n\r\nfig = plt.gcf()\r\nvar(\'x\')\r\nplot(sin(x)**2+a7*x+a6,(x,0, 2*pi)) \r\n\r\n# salva figura em um arquivo temporário. ATENÇÃO, incluir \'./tmp/\'\r\nfig.savefig(\'./tmp/fzprof_fig01.png\')\r\n\r\n\r\nx = symbols(\'x\')\r\nf = sin(x)**2+a7*x+a6\r\na0 = latex(Integral(f, x))\r\n\r\na1 = latex(integrate(f, x))    \r\na2 = latex(integrate(f*x, x))\r\na3 = latex(integrate(f/x, x))\r\na4 = latex(integrate(x**5 + x + 1, x))\r\na5 = latex(integrate(x**6 + x + 1, x))\r\n]]\r\n\r\n\r\n% alternativas','QM','1','remember','yes','2019-01-30',1,15),(75,'','template-integral-fig1','The integrand of $[[code:a0]]$ has its graph depicted in Figure $Integrand$. The integral function is\r\n\r\n\\begin{figure}[ht!]\r\n  \\centering\r\n  \\includegraphics[scale=0.5]{val_fig01} % ATENÇÃO com o nome da figura\r\n  \\centerline{Figure $Integrand$}\r\n\\end{figure}\r\n\r\n[[def:\r\na1 = random.randrange(3,6,1) \r\na2 = random.randrange(2,4,1) \r\na3 = random.randrange(1,3,1) \r\n\r\nfig = plt.gcf()\r\nvar(\'x\')\r\nplot(a1*sin(a2*x)-a3*cos(x),(x,0,4*pi)) \r\n\r\nfig.savefig(\'./tmp/val_fig01.png\')\r\n\r\nx = symbols(\'x\')\r\nf = a1*sin(a2*x)-a3*cos(x)\r\na0 = latex(Integral(f, x))\r\n\r\nb1 = latex(integrate(f, x))    \r\nb2 = latex(integrate(f+x, x))\r\nb3 = latex(integrate(f-x, x))\r\nb4 = latex(integrate(x**5 + x + 1, x))\r\n]]','QM','1','remember','yes','2019-01-30',1,15),(76,'','template-mru0','% texto da questão\r\nUm automóvel percorre uma estrada com função horária $s=[[code:a0]] + [[code:a1]]t$, onde $s$ é dado em quilômetros e $t$ em horas. O automóvel passa pelo km [[code:a2]] após:\r\n\r\n\r\n(Testando a biblioteca simbólica sympy, ver docs.sympy.org)\r\n\r\n[[def:\r\na0 = random.randrange(-6, 12, 1)  # sortear um número dentre estes três\r\na1 = random.randrange(3, 8, 1)  \r\na2 = random.randrange(3, 8, 1)\r\n\r\ndef algorithm(a):\r\n    a0=int(a[0])\r\n    a1=int(a[1])\r\n    a2=int(a[2])\r\n    s,t = symbols(\'s,t\')\r\n    s=a0+a1*t\r\n\r\n    r = float(solve(s-a2,t)[0])\r\n\r\n    return r\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0,a1,a2])\r\n]]\r\n\r\n% alternativas','QM','1','remember','yes','2019-01-30',1,16),(83,'teo q1','operador1','A negação de $a < b$ é:','QM','1','remember','no','2019-02-08',25,1),(84,'teo q1','operador2','A negação de $a <= b$ é:','QM','1','remember','no','2019-02-08',25,1),(85,'teo q1','operador3','Qual(is) da(s) seguinte(s) alternativa(s) conta apenas com operadores relacionais?\r\n\\begin{enumerate}[label=(\\Roman*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item $>$, {\\tt e}, $>=$, {\\tt não}, $==$\r\n\\item $>$,  $>=$, $<=$, $<$, {\\tt ou}\r\n\\item $!=$,  $>$, $<$, $+$, $\\%$\r\n\\item {\\tt não}, {\\tt e}, {\\tt ou}, $==$, $!=$\r\n\\end{enumerate}','QM','1','remember','no','2019-02-08',25,1),(86,'teo q1','operador4','Quantas das seguintes alternativas resulta em um valor lógico? (Considere X e Y variáveis inteiras).\r\n\\begin{enumerate}[label=(\\Roman*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item {\\tt X>10+Y}\r\n\\item {\\tt Y\\%X != Y\\%X}\r\n\\item {\\tt `A\' != `A\'}\r\n\\item {\\tt X+Y \\%2 >=1}\r\n\\item {\\tt `X\' == `Y\'}\r\n\\end{enumerate}','QM','1','remember','no','2019-02-08',25,1),(87,'teo q2','simples','Dado o programa a seguir, assinale a alternativa que o descreve corretamente:\r\n\\begin{lstlisting}\r\nprograma {  funcao inicio() {\r\n      inteiro X = [[code:X]], Y = [[code:Y]], aux\r\n      aux = X\r\n      aux = aux * [[code:R]] + X\r\n      X = Y / [[code:R]]\r\n      X = aux\r\n      escreva(X)   }} \\end{lstlisting}\r\n\r\n[[def:\r\nX = random.randrange(1,10,1)\r\nY = random.randrange(1,10,1)\r\nR = random.randrange(2,4,1)\r\naux = X\r\naux = aux * R + X\r\nX1 = Y / R\r\nglobal correctAnswer\r\ncorrectAnswer = aux\r\n]]','QM','1','remember','yes','2019-02-08',1,1),(89,'teo q3','idade','Dado o programa a seguir, assinale a alternativa que o descreve corretamente:\r\n\\begin{lstlisting}\r\nprograma { funcao inicio() {\r\n      inteiro idade, anoNascimento = [[code:anoNascimento]], anoAtual = [[code:anoAtual]]\r\n      idade = anoAtual - anoNascimento\r\n      escreva(idade)   }} \r\n\\end{lstlisting}\r\n\r\n[[def:\r\nanoNascimento = random.randrange(1970,1990,1)\r\nanoAtual = random.randrange(2015,2019,1)\r\nidade = anoAtual - anoNascimento\r\nglobal correctAnswer\r\ncorrectAnswer = idade\r\n]]','QM','1','remember','yes','2019-02-08',1,1),(91,'teo q4','if-2 cond.','Dado o programa a seguir, assinale a alternativa que o descreve corretamente:\r\n\\begin{lstlisting}\r\nprograma { funcao inicio() {\r\n      inteiro X = [[code:X]], Y = [[code:Y]]\r\n      se (X [[code:a0]] Y) {\r\n         escreva(X-Y)	\r\n      } senao {\r\n         escreva(X+Y)	\r\n      }	   }} \\end{lstlisting}\r\n\r\n[[def:\r\nX = random.randrange(1,9,1)\r\nY = random.randrange(1,9,1)\r\na1 = [\"<\",\">\"]                   # aparece no texto\r\na0 = random.choice(a1)   # sortear um\r\n\r\nglobal correctAnswer\r\nif a0==a1[0]:                     # se foi sorteada a primeira\r\n  if X<Y:\r\n     correctAnswer = X-Y     # aparece na resposta\r\n  else:\r\n     correctAnswer = X+Y    # aparece na resposta\r\nelse:\r\n  if X>Y:\r\n     correctAnswer = X-Y     # aparece na resposta\r\n  else:\r\n     correctAnswer = X+Y    # aparece na resposta\r\n]]','QM','1','remember','yes','2019-02-08',1,2),(93,'teo q5','3 cond.','Dado o programa a seguir, assinale a alternativa que o descreve corretamente:\r\n\\begin{lstlisting}\r\nprograma { funcao inicio() {\r\n      inteiro X = [[code:X]], Y = [[code:Y]], Z = [[code:Z]]\r\n      se ((X [[code:a0]] Y) e (X [[code:a2]] Z) e (Y [[code:a0]] Z)) {\r\n         escreva(X + [[code:R1]] * Y +  [[code:R2]] * Z)	\r\n      }	senão {\r\n         escreva(X + [[code:R1]] * Y -  [[code:R2]] * Z)	\r\n      }   }}\\end{lstlisting}\r\n\r\n[[def:\r\nX   = random.randrange(1,9,1)\r\nY   = random.randrange(1,9,1)\r\nZ   = random.randrange(1,9,1)\r\nR1 = random.randrange(2,5,1)\r\nR2 = random.randrange(2,5,1)\r\na1 = [\"<\",\">\"]                   # aparece no texto\r\na0 = random.choice(a1)   # sortear um\r\nif a0==a1[0]:                     # se foi sorteada a primeira\r\n   a2 = a1[1]\r\nelse:\r\n  a2 = a1[0]\r\n\r\nglobal correctAnswer\r\nif a0==a1[0]:                     # se foi sorteada a primeira\r\n  if X<Y and X>Z and Y<Z:\r\n     correctAnswer = X + R1 * Y +  R2 * Z   \r\n  else:\r\n     correctAnswer = X + R1 * Y -  R2 * Z    \r\nelse:\r\n  if X>Y and X<Z and Y>Z:\r\n     correctAnswer = X + R1 * Y +  R2 * Z     \r\n  else:\r\n     correctAnswer = X + R1 * Y -  R2 * Z    \r\n]]','QM','1','remember','yes','2019-02-08',1,2),(96,'teo q6','conta \"b\" - for e while','Considere o programa a seguir. Quantas vezes foi escrito a letra \"b\"?\r\n\\begin{lstlisting}\r\nprograma { funcao inicio() {\r\n      inteiro a = [[code:a0]], b = [[code:b0]],  c = [[code:c0]], i, j=0\r\n      enquanto(j<c) {\r\n         se(a>b) {\r\n            escreva(\"a\")\r\n            a=a-b\r\n            para(i=0; i<a; i++) {\r\n               escreva(a)\r\n            }\r\n         } senao {\r\n            escreva(b)\r\n            b=b-a\r\n            para(i=b; i>0; i--) {\r\n               escreva(\"b\")\r\n            }\r\n         }\r\n         j = j + 1\r\n      }   }} \r\n\\end{lstlisting}   \r\n\r\n[[def:\r\na0 = random.randrange(3,5,1)\r\nb0 = random.randrange(3,5,1)\r\nc0 = random.randrange(2,3,1)\r\n\r\ndef algorithm(A):\r\n    j = count = 0\r\n    a = int(A[0])\r\n    b = int(A[1])\r\n    c = int(A[2])\r\n    while j<c:\r\n         if a>b:\r\n            #escreva(\"a\")\r\n            a=a-b\r\n            for i in range(a):\r\n               pass #escreva(a)\r\n         else:\r\n            #escreva(b)\r\n            b=b-a\r\n            for i in reversed(range(b)):\r\n               #escreva(\"b\")\r\n               count = count + 1\r\n         j = j + 1\r\n    return count\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0,b0,c0])\r\n]]','QM','1','remember','yes','2019-02-08',1,3),(100,'teo q1','operador5','Considerando $A = 10$, $B = 7$ e $C = 6$, assinale a opção correta relacionada à lógica de programação.','QM','1','remember','no','2019-02-28',25,1),(101,'teo q1','operador6','Sendo a e b variáveis inteiras em um programa, a expressão lógica NÃO $((a > b) OU (a = b))$ é equivalente a:','QM','1','remember','no','2019-02-28',25,1),(102,'teo q1','operador7','Observe a expressão lógica: ((((true AND true) OR false) AND true) AND (true OR (true AND false))) \r\n\r\nConsiderando os operadores lógicos AND (e) e OR (ou), e os operandos lógicos true (verdadeiro) e false (falso), é CORRETO afirmar que o valor lógico dessa expressão é:','QM','1','remember','no','2019-02-28',25,1),(103,'teo q3','distancia','Dado o programa a seguir, assinale a alternativa que o descreve corretamente:\r\n\\begin{lstlisting}\r\nprograma { funcao inicio() {\r\n      inteiro distancia = 20, KM_Inicial = [[code:KM_Inicial]], KM_Final = [[code:KM_Final]]\r\n      distancia = KM_Final - KM_Inicial\r\n      escreva(distancia)   }} \\end{lstlisting}\r\n\r\n[[def:\r\nKM_Inicial = random.randrange(1970,1980,1)\r\nKM_Final =  random.randrange(2010,2020,1)\r\ndistancia = KM_Final - KM_Inicial\r\n\r\nanoAtual = 2019\r\nanoNascimento = random.randrange(1970,1990,1)\r\nidade = anoAtual - anoNascimento\r\nglobal correctAnswer\r\ncorrectAnswer = distancia\r\n]]','QM','1','remember','yes','2019-02-28',1,1),(105,'teo q7','conta \"B\" - simples - 2 for','Considere o seguinte algoritmo, onde $m$ e $n$ são inteiros positivos:\r\n\\begin{lstlisting}\r\nprograma { funcao inicio() {\r\n   inteiro i, j, m=[[code:a0]], n=[[code:b0]]\r\n   para(i=0; i<m; i++) {\r\n      para(j=0; j<n; j++) {\r\n         escreva(\"B\")\r\n      }\r\n   }  }} \\end{lstlisting}\r\nQuantas vezes o caracter \"B\" é impresso?\r\n\r\n[[def:\r\na0 = random.randrange(3,5,1)\r\nb0 = random.randrange(3,5,1)\r\n\r\ndef algorithm(A):\r\n    count = 0\r\n    a = int(A[0])\r\n    b = int(A[1])\r\n    for i in range(a):\r\n        for j in range(b):\r\n           #escreva(\"b\")\r\n           count += 1\r\n    return count\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0,b0])\r\n]]','QM','1','remember','yes','2019-02-28',1,3),(106,'teo q10','conta \"Chi\" - 2 while','Considere o programa a seguir:\r\n\\begin{lstlisting}\r\nprograma { funcao inicio() {\r\n      inteiro j = [[code:a0]], k = [[code:b0]], n = [[code:c0]], m\r\n      enquanto(j < k) {\r\n         m = [[code:d0]]\r\n         enquanto(m < n) {\r\n            escreva(\"Chi \")\r\n            m = m + 1\r\n         }\r\n         j = j + 1\r\n      }   }} \\end{lstlisting}\r\nNo programa dado, quantas vezes é impresso a palavra ``Chi\'\':\r\n\r\n[[def:\r\na0 = random.randrange(3,5,1)\r\nb0 = random.randrange(6,8,1)\r\nc0 = random.randrange(5,7,1)\r\nd0 = random.randrange(2,3,1)\r\n\r\ndef algorithm(A):\r\n    count = 0\r\n    j = int(A[0])\r\n    k = int(A[1])\r\n    n = int(A[2])\r\n    d = int(A[3])\r\n    while j<k:\r\n       m = d\r\n       while m<n:\r\n            #escreva(\"Chi\")\r\n            count +=1\r\n            m += 1\r\n       j += 1\r\n    return count\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0,b0,c0,d0])\r\n]]','QM','1','remember','yes','2019-02-28',1,3),(107,'teo q8','1 while 2 var','Considere o trecho de código a seguir.\r\n\\begin{lstlisting}\r\n  inteiro x = [[code:a0]], j=[[code:b0]]\r\n  enquanto j < [[code:c0]] {\r\n    x = x + 1\r\n    j = j + 2\r\n  }\r\n  escreva(x+j)\r\n\\end{lstlisting}\r\nAo final da execução do trecho de código acima, o valor de $x$ + $j$ é:\r\n\r\n[[def:\r\na0 = random.randrange(3,5,1)\r\nb0 = random.randrange(3,5,1)\r\nc0 = random.randrange(9,11,1)\r\n\r\ndef algorithm(A):\r\n    x = int(A[0])\r\n    j = int(A[1])\r\n    c = int(A[2])\r\n    while j < c:\r\n        j  += 2\r\n        x += 1\r\n    return x+j\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0,b0,c0])\r\n]]','QM','1','remember','yes','2019-02-28',1,3),(108,'teo q9','1 while 3 var','Analise o trecho de código abaixo, escrito em uma linguagem de programação hipotética, fazendo uso do comando \"while-do\" (enquanto-faça) e supondo que $a$, $b$ e $c$ foram declaradas anteriormente. \r\n\\begin{lstlisting}\r\n   while (c<a) {      \r\n      a=a-1;          \r\n      b=b+1;           \r\n      c=c+b;          \r\n   }\r\n   r = a+b-c                  \r\n\\end{lstlisting}\r\nQual o valor de $r$, após o término do trecho, se as variáveis $a$, $b$ e $c$ forem inicializadas com $[[code:a0]]$, $[[code:b0]]$ e $[[code:c0]]$, respectivamente, antes trecho?\r\n\r\n\r\n[[def:\r\na0 = random.randrange(9,11,1)\r\nb0 = random.randrange(3,5,1)\r\nc0 = random.randrange(3,5,1)\r\n\r\ndef algorithm(A):\r\n    a = int(A[0])\r\n    b = int(A[1])\r\n    c = int(A[2])\r\n    while (c<a):\r\n       a=a-1;          \r\n       b=b+1;           \r\n       c=c+b;          \r\n    r = a+b-c    \r\n    return r\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0,b0,c0])\r\n]]','QM','1','remember','yes','2019-03-01',1,3),(109,'teo q1','if-maior/menor média 5 int','Elabore um programa para ler 5 números inteiros. O programa deve imprimir apenas os números [[code:a0]] que a média destes 5 números.\r\n\r\n\\\r\n\r\n\\noindent\\textbf{Exemplo:}\r\nEntradas: [[code:a1]], [[code:a2]], [[code:a3]], [[code:a4]], [[code:a5]]\r\nSaída(s): [[code:correctAnswer]]\r\n\r\n\\vspace{1cm}\r\n\r\n[[def:\r\noper = [\"menores\",\"maiores\"]                   # aparece no texto\r\na0 = random.choice(oper)   # sortear um\r\n\r\na1 = random.randrange(1,9,1)\r\na2 = random.randrange(1,9,1)\r\na3 = random.randrange(1,9,1)\r\na4 = random.randrange(1,9,1)\r\na5 = random.randrange(1,9,1)\r\n\r\nglobal correctAnswer, A\r\nA = [a1,a2,a3,a4,a5]\r\n\r\nif a0==oper[0]:\r\n    correctAnswer = \', \'.join([str(i) for i in A if i < (sum(A)/len(A))]) \r\nelse:\r\n    correctAnswer = \', \'.join([str(i) for i in A if i > (sum(A)/len(A))]) \r\n]]','QT','1','remember','yes','2019-03-01',1,2),(110,'teo q2','for-primo','Escreva um programa para ler 1 valor inteiros positivos. O programa deve imprimir uma mensagem de \\textbf{é primo}, se for um número primo, ou  \\textbf{não é primo}, caso contrário.\r\n\r\n\\\r\n\r\n\\noindent\\textbf{Exemplo:}\r\nEntrada: [[code:numero]]\r\nSaída: [[code:correctAnswer]]\r\n\r\n\\\r\n\r\n[[def:\r\nnumero = random.randrange(1,19,1)\r\n\r\ndivisores = 0\r\nfor divisor in range(1, numero):\r\n    if numero % divisor == 0:\r\n        divisores = divisores + 1\r\n        if divisores > 1:\r\n          break\r\nglobal correctAnswer\r\nif divisores > 1:\r\n  correctAnswer = \"não é primo\"\r\nelse:\r\n  correctAnswer = \"é primo\"\r\n]]','QT','2','remember','yes','2019-03-01',1,3),(111,'teo q1','if-maior/menor de 3 int','Elabore um programa para ler 3 números inteiros. O programa deve imprimir apenas o [[code:a0]] desses números.\r\n\r\n\\\r\n\r\n\\noindent\\textbf{Exemplo:}\r\nEntradas: [[code:a1]], [[code:a2]], [[code:a3]]\r\nSaída(s): [[code:correctAnswer]]\r\n\r\n\\vspace{1cm}\r\n\r\n[[def:\r\noper = [\"menor\",\"maior\"]     # aparece no texto\r\na0 = random.choice(oper)   # sortear um\r\n\r\na1 = random.randrange(1,9,1)\r\na2 = random.randrange(1,9,1)\r\na3 = random.randrange(1,9,1)\r\n\r\nglobal correctAnswer, A\r\nA = [a1,a2,a3]\r\n\r\nif a0==oper[0]:\r\n    correctAnswer = min(A)\r\nelse:\r\n    correctAnswer = max(A)\r\n]]','QT','1','remember','yes','2019-03-01',1,2),(112,'teo q1','if-maior/menor par/impar 5 int','Escreva um programa para ler 5 valores inteiros positivos. Imprimir apenas os valores [[code:a02]] [[code:a01]] que a média dos valores lidos, caso existam ou, a mensagem: \"Nao existe numero que satisfaz as condicoes\", caso contrário. \r\n\r\n\\\r\n\r\n\\noindent\\textbf{Exemplo:}\r\nEntradas: [[code:a1]], [[code:a2]], [[code:a3]], [[code:a4]], [[code:a5]]\r\nSaída(s): [[code:correctAnswer]]\r\n\r\n\\\r\n\r\n[[def:\r\noper1 = [\"menores\",\"maiores\"]                   # aparece no texto\r\noper2 = [\"ímpares\",\"pares\"]                   # aparece no texto\r\na01 = random.choice(oper1)   # sortear um\r\na02= random.choice(oper2)   # sortear um\r\n\r\na1 = random.randrange(1,9,1)\r\na2 = random.randrange(1,9,1)\r\na3 = random.randrange(1,9,1)\r\na4 = random.randrange(1,9,1)\r\na5 = random.randrange(1,9,1)\r\n\r\nglobal correctAnswer, A\r\nA = [a1,a2,a3,a4,a5]\r\n\r\nif a01==oper1[0]: # menores\r\n    if a02==oper2[0]: # ímpares\r\n       correctAnswer = \', \'.join([str(i) for i in A if i%2 and i < (sum(A)/len(A))]) \r\n    else:\r\n       correctAnswer = \', \'.join([str(i) for i in A if not i%2 and i < (sum(A)/len(A))]) \r\nelse:  # maiores\r\n    if a02==oper2[0]: # ímpares\r\n       correctAnswer = \', \'.join([str(i) for i in A if i%2 and i > (sum(A)/len(A))]) \r\n    else:\r\n       correctAnswer = \', \'.join([str(i) for i in A if not i%2 and i > (sum(A)/len(A))]) \r\n\r\nif len(correctAnswer)<1:\r\n  correctAnswer=\"Nao existe numero que satisfaz as condicoes\"\r\n]]','QT','1','remember','yes','2019-03-01',1,2),(113,'teo q1','teste de mesa 16.1','Simule a execução do \\textbf{PROGRAMA} abaixo realizando um \\textbf{TESTE DE MESA} e faça o que se pede em seguida. Anote \\textbf{na tabela TESTE DE MESA, todas as linhas que modifiquem um dos valores contidos nas variáveis indicadas} até que o algoritmo seja encerrado. \\textbf{Simultaneamente}, anote na tabela \\textbf{SAÍDA DE DADOS} todas as saídas (comando escreva) do programa e as linhas que fazem a saída. Considere como entrada de dados \\textbf{\\texttt{a=[[code:a0]]}} e \\textbf{\\texttt{b=[[code:a1]]}}. \\textbf{Não é necessário repetir valores quando a variável não foi atualizada}. \r\n\r\n\\newcolumntype{C}{>{\\centering\\arraybackslash}p{3em}}\r\n\\begin{multicols}{2}\r\n\\begin{lstlisting}\r\n\r\nprograma { funcao inicio() {\r\n1  inteiro a,b,c,i,d=0\r\n2  leia(a)\r\n3  leia(b)\r\n4  enquanto(a>0){\r\n5    escreva(\"a = \", a)\r\n6    a=a-[[code:a2]]\r\n7    c=a%3\r\n8    se(c!=0){\r\n9      a=a-[[code:a3]]\r\n10  } senao{\r\n11    a=a+1\r\n12  }\r\n13  para(i=0;i<a;i=i+2){\r\n14    escreva(\"i = \", i)\r\n15    d=i*2\r\n16    escreva(\"d = \",d)\r\n17    a=d-[[code:a4]]\r\n18    }\r\n19 }\r\n20 escreva(\"a = \",a)\r\n21 c=b-[[code:a5]]\r\n22 escreva(\"c = \",c)   \r\n}} \r\n\\end{lstlisting}  \r\n\r\n\\columnbreak\r\n\\centering\r\n\\begin{tabular}{|l|C|C|C|C|C|}\r\n\\hline\r\n\\multicolumn{6}{|c|}{TESTE DE MESA} \\\\ \\hline\r\nlinha   & a   & b   & c   & i  & d  \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n\\end{tabular}\r\n\r\n\\end{multicols}\r\n\r\n\\begin{table}[h!]\r\n\\centering\r\n\\label{my-label}\r\n\\begin{tabular}{|c|c|}\r\n\\hline\r\n\\textbf{LINHA} & \\textbf{SAÍDA DE DADOS \\hspace{7cm}}     \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\\\\r\n\\ \\ \\\r\n\r\n\\newpage\r\n\r\n%\\definecolor{bubbles}{rgb}{0.71, 1.0, 1.0}\r\n{\\color{bubbles}\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n}\r\n\r\n\\\\\r\n\\ \\ \\\r\n\\newpage\r\n\r\n[[def:\r\n# para testar, copie e cole o código abaixo em um dos links:\r\n#https://www.jdoodle.com/python3-programming-online\r\n#https://www.onlinegdb.com/online_python_compiler\r\n#https://www.tutorialspoint.com/execute_python_online.php\r\n#https://repl.it/languages/python\r\n#import random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5\r\n  a0=random.randrange(11, 20, 1)\r\n  a1=random.randrange(5, 20, 1)\r\n  a2=random.randrange(2, 4, 1)\r\n  a3=random.randrange(2, 4, 1)\r\n  a4=random.randrange(2, 4, 1)\r\n  a5=random.randrange(2, 9, 1)\r\n  return [a0,a1,a2,a3,a4,a5]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  a=b=c=i=d=0\r\n  mystr = \"a0=%d  a1=%d\\n\" % (A[0],A[1])\r\n  mystr += \"linha   a b c i d\\n\"\r\n  mystr += \"   1   %d %d %d %d %d\\n\" % (a,b,c,i,d)\r\n  a=A[0]\r\n  mystr += \"   2   %d %d %d %d %d\\n\" % (a,b,c,i,d)\r\n  b=A[1]\r\n  mystr += \"   3   %d %d %d %d %d\\n\" % (a,b,c,i,d)\r\n  while (a>0):\r\n    mystr += \"   5   a=%d\\n\" % a\r\n    a=a-A[2]\r\n    mystr += \"   6   %d %d %d %d %d\\n\" % (a,b,c,i,d)\r\n    c=a%3\r\n    mystr += \"   7   %d %d %d %d %d\\n\" % (a,b,c,i,d)\r\n    if c!=0:\r\n      a=a-A[3]\r\n      mystr += \"   9   %d %d %d %d %d\\n\" % (a,b,c,i,d)\r\n    else:\r\n      a=a+1\r\n      mystr += \"  11   %d %d %d %d %d\\n\" % (a,b,c,i,d)\r\n  for i in range(0,a,2):\r\n    mystr += \"  13   %d %d %d %d %d\\n\" % (a,b,c,i,d)\r\n    mystr += \"  14   i=%d\\n\" % i\r\n    d=i*2\r\n    mystr += \"  16   d=%d\\n\" % d\r\n    mystr += \"  15   %d %d %d %d %d\\n\" % (a,b,c,i,d)\r\n    a=d-A[4]\r\n    mystr += \"  17   %d %d %d %d %d\\n\" % (a,b,c,i,d)\r\n  mystr += \"  20   a=%d\\n\" % a\r\n  c=b-A[5]\r\n  mystr += \"  21   %d %d %d %d %d\\n\" % (a,b,c,i,d)\r\n  mystr += \"  22   c=%d\\n\" % c\r\n  mystr += str(len(mystr))\r\n\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula = algorithm(A)  \r\n  if 360<len(mySimula)<430:\r\n    break\r\n]]','QT','1','remember','yes','2019-03-01',1,3),(114,'teo q1','teste de mesa 16.2','Simule a execução do \\textbf{PROGRAMA} abaixo realizando um \\textbf{TESTE DE MESA} e faça o que se pede em seguida. Anote \\textbf{na tabela TESTE DE MESA, todas as linhas que modifiquem um dos valores contidos nas variáveis indicadas} até que o algoritmo seja encerrado. \\textbf{Simultaneamente}, anote na tabela \\textbf{SAÍDA DE DADOS} todas as saídas (comando escreva) do programa e as linhas que fazem a saída. Considere como entrada de dados \\textbf{\\texttt{num=[[code:a0]]}}. \\textbf{Não é necessário repetir valores quando a variável não foi atualizada}. \r\n\r\n\\newcolumntype{C}{>{\\centering\\arraybackslash}p{3em}}\r\n\\begin{multicols}{2}\r\n\\begin{lstlisting}\r\n\r\nprograma { funcao inicio() {\r\n1  inteiro num=0,aux=0,j=0,k=0\r\n3  leia(num)\r\n2  enquanto(num>0){\r\n4    se(num>0){\r\n5      se(j<0){\r\n6        k=0\r\n7      } \r\n8      aux=num+1\r\n9      para(k=0;k<2;k++){\r\n10      se (aux%2==0) {\r\n11        escreva(\"aux = \", aux)\r\n12        num=num-[[code:a1]]\r\n13      }\r\n14      aux=aux+1\r\n15    }\r\n16    num=num-[[code:a2]]\r\n17   }\r\n18  }  \r\n}} \r\n\\end{lstlisting}  \r\n\r\n\\columnbreak\r\n\\centering\r\n\\begin{tabular}{|l|C|C|C|C|C|}\r\n\\hline\r\n\\multicolumn{5}{|c|}{TESTE DE MESA} \\\\ \\hline\r\nlinha   & num  & aux   & j   & k    \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n          &     &     &     &          \\\\ \\hline\r\n\\end{tabular}\r\n\r\n\\end{multicols}\r\n\r\n\\begin{table}[h!]\r\n\\centering\r\n\\label{my-label}\r\n\\begin{tabular}{|c|c|}\r\n\\hline\r\n\\textbf{LINHA} & \\textbf{SAÍDA DE DADOS \\hspace{7cm}}     \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\\\\r\n\\ \\ \\\r\n\r\n\\newpage\r\n\\definecolor{bubbles}{rgb}{0.71, 1.0, 1.0}\r\n{\\color{bubbles}\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n}\r\n\r\n[[def:\r\n# para testar, copie e cole o código abaixo em um dos links:\r\n#https://www.jdoodle.com/python3-programming-online\r\n#https://www.onlinegdb.com/online_python_compiler\r\n#https://www.tutorialspoint.com/execute_python_online.php\r\n#https://repl.it/languages/python\r\n#import random\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2\r\n  a0=random.randrange(11, 19, 1)\r\n  a1=random.randrange(1, 5, 1)\r\n  a2=random.randrange(1, 5, 1)\r\n  return [a0,a1,a2]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  num=aux=j=k=0\r\n  mystr = \"num=%d\\n\" % (A[0])\r\n  mystr += \"linha   num aux j k\\n\"\r\n  mystr += \"   1   %d %d %d %d\\n\" % (num,aux,j,k)\r\n  num=A[0]\r\n  while (num>0):\r\n    mystr += \"   3   %d %d %d %d\\n\" % (num,aux,j,k)\r\n    if num>0:\r\n      if j<0:\r\n        k=0\r\n        mystr += \"   6   %d %d %d %d\\n\" % (num,aux,j,k)\r\n      aux=num+1\r\n      mystr += \"   8   %d %d %d %d\\n\" % (num,aux,j,k)\r\n      for k in range(0,2):\r\n        if aux%2==0:\r\n          mystr += \"  11   aux=%d\\n\" % aux\r\n          num=num-A[1]\r\n          mystr += \"  12   %d %d %d %d\\n\" % (num,aux,j,k)\r\n        aux+=1\r\n        mystr += \"  14   %d %d %d %d\\n\" % (num,aux,j,k)\r\n        num=num-A[2]\r\n        mystr += \"  16   %d %d %d %d\\n\" % (num,aux,j,k)\r\n  mystr += str(len(mystr))\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula = algorithm(A)  \r\n  if 360<len(mySimula)<430:\r\n    break\r\n]]','QT','1','remember','yes','2019-03-01',1,3),(121,'teo q1','teste de mesa 17.1','Simule a execução do \\textbf{PROGRAMA} abaixo realizando um \\textbf{TESTE DE MESA} e faça o que se pede em seguida. Anote \\textbf{na tabela TESTE DE MESA, todas as linhas que modifiquem um dos valores contidos nas variáveis indicadas} até que o algoritmo seja encerrado. \\textbf{Simultaneamente}, anote na tabela \\textbf{SAÍDA DE DADOS} todas as saídas (comando escreva) do programa e as linhas que fazem a saída. \r\n%Considere como entrada de dados \\textbf{\\texttt{a=[[code:a0]]}} e \\textbf{\\texttt{b=[[code:a1]]}}. \r\n\\textbf{Não é necessário repetir valores quando a variável não foi atualizada}. \r\n\r\n\\newcolumntype{C}{>{\\centering\\arraybackslash}p{3em}}\r\n\\begin{multicols}{2}\r\n\\begin{lstlisting}\r\n\r\nprograma { funcao inicio() {\r\n1  inteiro soma=0, j=0, n=0, b=[[code:a0]], cont=[[code:a1]]\r\n2  enquanto(cont < [[code:a2]]) {\r\n3    soma = soma + (b * [[code:a3]])\r\n4    b=b+1\r\n5    cont=cont+[[code:a4]]\r\n6  }\r\n7  j=j+[[code:a5]]\r\n8  enquanto (j >= n) {\r\n9    se (b > 6) {\r\n10    soma=soma-j\r\n11    b=b-1\r\n12  } senao {\r\n13    soma=soma-b\r\n14  }\r\n15  j=j-1\r\n16 }\r\n17 escreva(\"Soma=\",soma,\" b=\",b,\" j=\", j) \r\n18 \r\n}} \r\n\\end{lstlisting}  \r\n\r\n\\columnbreak\r\n\\centering\r\n\\begin{tabular}{|l|C|C|C|C|C|}\r\n\\hline\r\n\\multicolumn{6}{|c|}{TESTE DE MESA} \\\\ \\hline\r\nlinha   & soma   & j   & n   & b  & cont  \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n\\end{tabular}\r\n\r\n\\end{multicols}\r\n\r\n\\begin{table}[h!]\r\n\\centering\r\n\\label{my-label}\r\n\\begin{tabular}{|c|c|}\r\n\\hline\r\n\\textbf{LINHA} & \\textbf{SAÍDA DE DADOS \\hspace{7cm}}     \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\\\\r\n\\ \\ \\\r\n\r\n\\newpage\r\n\r\n{\\color{bubbles}\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n}\r\n\r\n\\\\\r\n\\ \\ \\\r\n\\newpage\r\n\r\n[[def:\r\n# para testar, copie e cole o código abaixo em um dos links:\r\n#https://www.jdoodle.com/python3-programming-online\r\n#https://www.onlinegdb.com/online_python_compiler\r\n#https://www.tutorialspoint.com/execute_python_online.php\r\n#https://repl.it/languages/python\r\n#import random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5\r\n  a0=random.randrange(3, 11, 1)\r\n  a1=random.randrange(1, 5, 1)\r\n  a2=random.randrange(2, 5, 1)\r\n  a3=random.randrange(1, 4, 1)\r\n  a4=random.randrange(1, 4, 1)\r\n  a5=random.randrange(1, 4, 1)\r\n  return [a0,a1,a2,a3,a4,a5]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  soma=j=n=0; b=A[0]; cont=A[1]\r\n  mystr = \"a0=%d  a1=%d\\n\" % (A[0],A[1])\r\n  mystr += \"linha soma j n b cont\\n\"\r\n  mystr += \"   1   %d %d %d %d %d\\n\" % (soma,j,n,b,cont)\r\n  while (cont  < A[2]):\r\n    soma+=b*A[3]\r\n    mystr += \"   3   %d %d %d %d %d\\n\" % (soma,j,n,b,cont)\r\n    b+=1\r\n    mystr += \"   4   %d %d %d %d %d\\n\" % (soma,j,n,b,cont)\r\n    cont+=A[4]\r\n    mystr += \"   5   %d %d %d %d %d\\n\" % (soma,j,n,b,cont)\r\n  j+=A[5]\r\n  mystr += \"   7   %d %d %d %d %d\\n\" % (soma,j,n,b,cont)\r\n  while (j>=n):\r\n    if b > 6:\r\n      soma-=j\r\n      mystr += \"   10   %d %d %d %d %d\\n\" % (soma,j,n,b,cont)\r\n      b-=1\r\n      mystr += \"   11   %d %d %d %d %d\\n\" % (soma,j,n,b,cont)\r\n    else:\r\n      soma-=b\r\n      mystr += \"   13   %d %d %d %d %d\\n\" % (soma,j,n,b,cont)\r\n    j-=1\r\n    mystr += \"   15   %d %d %d %d %d\\n\" % (soma,j,n,b,cont)\r\n  mystr += \"   17    Soma=%d b=%d j=%d\" % (soma,b,j)\r\n  mystr += \"\\n\"+str(len(mystr))+\"\\n\"\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula = algorithm(A) \r\n  if 300<len(mySimula)<330:\r\n    #print mySimula \r\n    break\r\n]]','QT','1','remember','yes','2019-03-02',1,3),(122,'teo q1','teste de mesa 18.1','Simule a execução do \\textbf{PROGRAMA} abaixo realizando um \\textbf{TESTE DE MESA} e faça o que se pede em seguida. Anote \\textbf{na tabela TESTE DE MESA, todas as linhas que modifiquem um dos valores contidos nas variáveis indicadas} até que o algoritmo seja encerrado. \\textbf{Simultaneamente}, anote na tabela \\textbf{SAÍDA DE DADOS} todas as saídas (comando escreva) do programa e as linhas que fazem a saída. Considere como entrada de dados \\textbf{\\texttt{a=[[code:a0]]}} e \\textbf{\\texttt{b=[[code:a1]]}}. \\textbf{Não é necessário repetir valores quando a variável não foi atualizada}. \r\n\r\n\\newcolumntype{C}{>{\\centering\\arraybackslash}p{3em}}\r\n\\begin{multicols}{2}\r\n\\begin{lstlisting}\r\n\r\nprograma { funcao inicio() {\r\n1  inteiro a=0,b=0,c=0,x=[[code:a2]]\r\n2  inteiro d=1\r\n3  leia(a)\r\n4  leia(b)\r\n5  faca {\r\n6    se (d==1) {\r\n7      se (a>b) {\r\n8        c=a\r\n9        a=b\r\n10       b=c\r\n11       x=x-[[code:a3]]\r\n12     }\r\n13  } senao se (a<b) {\r\n14    c=a\r\n15    a=b\r\n16    b=c\r\n17    x=x-[[code:a4]]\r\n18  }\r\n19  d = (d+1)%2\r\n20 } enquanto (x>0)\r\n21 escreva(\"d = \",d, \"x = \",x)   \r\n}} \r\n\\end{lstlisting}  \r\n\r\n\\columnbreak\r\n\\centering\r\n\\begin{tabular}{|l|C|C|C|C|C|}\r\n\\hline\r\n\\multicolumn{6}{|c|}{TESTE DE MESA} \\\\ \\hline\r\nlinha   & a   & b   & c   & x  & d  \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n          &     &     &     &    &         \\\\ \\hline\r\n\\end{tabular}\r\n\r\n\\end{multicols}\r\n\r\n\\begin{table}[h!]\r\n\\centering\r\n\\label{my-label}\r\n\\begin{tabular}{|c|c|}\r\n\\hline\r\n\\textbf{LINHA} & \\textbf{SAÍDA DE DADOS \\hspace{7cm}}     \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n      &                    \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\\\\r\n\\ \\ \\\r\n\r\n\\newpage\r\n\r\n{\\color{bubbles}\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n}\r\n\r\n\\\\\r\n\\ \\ \\\r\n\\newpage\r\n\r\n[[def:\r\n# para testar, copie e cole o código abaixo em um dos links:\r\n#https://www.jdoodle.com/python3-programming-online\r\n#https://www.onlinegdb.com/online_python_compiler\r\n#https://www.tutorialspoint.com/execute_python_online.php\r\n#https://repl.it/languages/python\r\n#import random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4\r\n  a0=random.randrange(11, 20, 1)\r\n  a1=random.randrange(11, 20, 1)\r\n  a2=random.randrange(5, 7, 1)\r\n  a3=random.randrange(1, 4, 1)\r\n  a4=random.randrange(1, 4, 1)\r\n  return [a0,a1,a2,a3,a4]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  a=b=c=0;x=A[2]\r\n  d = 1\r\n  mystr = \"a0=%d  a1=%d\\n\" % (A[0],A[1])\r\n  mystr += \"linha  a b c x d\\n\"\r\n  mystr += \"   2   %d %d %d %d %d\\n\" % (a,b,c,x,d)\r\n  a=A[0]\r\n  mystr += \"   3   %d %d %d %d %d\\n\" % (a,b,c,x,d)\r\n  b=A[1]\r\n  mystr += \"   4   %d %d %d %d %d\\n\" % (a,b,c,x,d)\r\n  while True:\r\n    if d:\r\n      if a>b:\r\n        c=a\r\n        mystr += \"   8   %d %d %d %d %d\\n\" % (a,b,c,x,d)\r\n        a=b\r\n        mystr += \"   9   %d %d %d %d %d\\n\" % (a,b,c,x,d)\r\n        b=c\r\n        mystr += \"  10   %d %d %d %d %d\\n\" % (a,b,c,x,d)\r\n        x=x-A[3]\r\n        mystr += \"  11   %d %d %d %d %d\\n\" % (a,b,c,x,d)\r\n    elif a<b:\r\n      c=a\r\n      mystr += \"  14   %d %d %d %d %d\\n\" % (a,b,c,x,d)\r\n      a=b\r\n      mystr += \"  15   %d %d %d %d %d\\n\" % (a,b,c,x,d)\r\n      b=c\r\n      mystr += \"  16   %d %d %d %d %d\\n\" % (a,b,c,x,d)\r\n      x=x-A[4]\r\n      mystr += \"  17   %d %d %d %d %d\\n\" % (a,b,c,x,d)\r\n    d = (d+1)%2\r\n    mystr += \"  19   %d %d %d %d %d\\n\" % (a,b,c,x,d)\r\n    if x<=0 or len(mystr)>500:\r\n      break\r\n  mystr += \"  21   d=%d  x=%d\\n\" % (d,x)\r\n  mystr += str(len(mystr))\r\n\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula = algorithm(A)  \r\n  if 300<len(mySimula)<330:\r\n    #print A\r\n    #print mySimula\r\n    break\r\n]]','QT','1','remember','yes','2019-03-02',1,3),(123,'teo q1','teste de mesa 18.2','Simule a execução do PROGRAMA abaixo realizando um TESTE DE MESA. Anote na tabela TESTE DE MESA, todas as linhas que modifiquem um dos valores contidos nas variáveis indicadas até que o algoritmo seja encerrado. Simultaneamente, anote na coluna SAÍDA todas as saídas (comando escreva) do programa. Considere como entrada de dados a=[[code:a0]] e b=[[code:a1]]. Não é necessário repetir valores quando a variável não foi atualizada. \r\n% ...\r\n\r\n\\newcolumntype{C}{>{\\centering\\arraybackslash}p{3.1em}}\r\n\\begin{multicols}{2}\r\n\\begin{lstlisting}\r\n\r\nprograma { funcao inicio() {\r\n1  inteiro a=-1, b=-2, c=[[code:a2]], d=[[code:a3]]\r\n2  leia(a)\r\n3  leia(b)\r\n4  enquanto (d>0) {\r\n5    d=d-1\r\n6    se (b<a) {\r\n7      a=a-[[code:a4]]\r\n8      escreva(\"\\n111\")\r\n9    }\r\n10   se (b>a) {\r\n11     escreva(\"\\n222\")\r\n12   } senao {\r\n13     b=b+[[code:a5]]\r\n14     escreva(\"\\n333\")\r\n15   }\r\n16 }\r\n}} \r\n\\end{lstlisting}  \r\n\r\n\\columnbreak\r\n\r\n\r\n\\centering\r\n\\begin{tabular}{|l|C|C|C|C|C|c|}\r\n\\hline\r\n\\multicolumn{6}{|c|}{\\textbf{TESTE DE MESA}} \\\\ \\hline\r\nlinha   & a   & b   & c   & d  & SAÍDA \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n\\end{tabular}\r\n\r\n\\end{multicols}\r\n\r\n\\\\\r\n\\ \\ \\\r\n\r\n\\newpage\r\n\r\n{\\color{bubbles}\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n}\r\n\r\n\\\\\r\n\\ \\ \\\r\n\\newpage\r\n\r\n[[def:\r\n# para testar, copie e cole o código abaixo em: repl.it/languages/python3\r\n\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5\r\n  a0=random.randrange(11, 20, 1)\r\n  a1=random.randrange(11, 20, 1)\r\n  a2=random.randrange(5, 7, 1)\r\n  a3=random.randrange(1, 7, 1)\r\n  a4=random.randrange(1, 4, 1)\r\n  a5=random.randrange(1, 4, 1)\r\n  return [a0,a1,a2,a3,a4,a5]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  a=-1;b=-2;c=A[2];d=A[3]\r\n  mystr = \"a0=%d  a1=%d\\n\" % (A[0],A[1])\r\n  mystr += \"linha  a  b  c d\\n\"\r\n  mystr += \"   1   %d %d %d %d\\n\" % (a,b,c,d)\r\n  mystr += \"   2   %d %d %d %d\\n\" % (a,b,c,d)\r\n  a=A[0]\r\n  mystr += \"   2   %d %d %d %d\\n\" % (a,b,c,d)\r\n  b=A[1]\r\n  mystr += \"   3   %d %d %d %d\\n\" % (a,b,c,d)\r\n  while d>0:\r\n    d-=1\r\n    mystr += \"   3   %d %d %d %d\\n\" % (a,b,c,d)\r\n    if b<a:\r\n      a-=A[4]\r\n      mystr += \"   7   %d %d %d %d\\n\" % (a,b,c,d)\r\n      mystr += \"   8               111\\n\"\r\n    if b>a:\r\n      mystr += \"   11              222\\n\"\r\n    else:\r\n      b+=A[5]\r\n      mystr += \"   13  %d %d %d %d\\n\" % (a,b,c,d)\r\n      mystr += \"   14              333\\n\"\r\n  mystr += str(len(mystr))\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula = algorithm(A)  \r\n  if 250<len(mySimula)<300:\r\n    #print (A)\r\n    #print (mySimula)\r\n    break\r\n]]','QT','1','remember','yes','2019-03-02',1,3),(124,'teo q2','for-classifica Aluno','O Ministério da Educação solicitou a elaboração de um programa para ajudar na análise dos resultados da Prova Brasil, aplicada aos estudantes do Ensino Fundamental. O programa deve inicialmente \\textbf{solicitar o número de estudantes} de uma determinada escola e a \\textbf{meta mínima nacional} da prova (em pontos, de 0 até 1000) estabelecida pelo MEC. Depois, para cada estudante, o programa deve solicitar que sejam informados a \\textbf{idade do estudante} e a \\textbf{pontuação obtida} pelo mesmo na prova. Para cada estudante, deve \\textbf{exibir uma das seguintes mensagens} de acordo com sua pontuação:\r\n\r\n\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Pontuação abaixo da meta (desempenho insuficiente do estudante);\r\n\\item Pontuação dentro da meta mínima (desempenho suficiente).  \r\n\\end{itemize}\r\n\r\n\\noindent Ao final, o programa deve exibir os seguintes resultados:\r\n\r\n\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Pontuação média dos estudantes até [[code:a2]] anos (inclusive);\r\n\\item Pontuação média dos estudantes acima de [[code:a3]] anos (inclusive);\r\n\\item Quantidade de estudantes que ficaram \\textbf{[[code:a4]]} da meta mínima.\r\n\\end{itemize}\r\n\\noindent Considere que os dados digitados estão corretos e não precisam ser validados.\r\n\r\n\\noindent\\textbf{Exemplo (elabore um código para $num>50$):}\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n%\\drawLines{5}\r\n\r\n%\\vspace{1cm}\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,oper\r\n  oper = [\"abaixo\",\"acima\"]     # aparece no texto\r\n  a4 = random.choice(oper)   # sortear um\r\n\r\n  a0=random.randrange(3, 5, 1)         # num Aluno\r\n  a1=random.randrange(400, 600, 1) # meta\r\n  a2=random.randrange(9, 13, 1)       #class1\r\n  a3=a2+1                                          #class2\r\n  return [a0,a1,a2,a3,a4]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  num=A[0]\r\n  meta=A[1]\r\n  class1=class2=class1Media=class2Media=numAbaixo=media=0\r\n  mystr=\"num=%d \\tmeta=%d\\n\" %(num,meta)\r\n  for i in range(num):\r\n    idade = random.randrange(9, 18, 1)\r\n    pontos = random.randrange(0, 1000, 1)\r\n    media+=pontos\r\n    if idade<=A[2]:\r\n      class1Media+=pontos\r\n      class1+=1\r\n    else:\r\n      class2Media+=pontos\r\n      class2+=1\r\n    if pontos<meta:\r\n      numAbaixo+=1\r\n    mystr+=\"idade=%d \\tpontos=%d\\n\" %(idade,pontos)\r\n\r\n  if class1:\r\n    mystr+=\"\\nmedia ate %d anos=%d\\n\" % (A[2],class1Media/class1)\r\n  else:\r\n    mystr+=\"\\nmedia ate %d anos=%d\\n\" % (A[2],0)\r\n\r\n  if class2:\r\n    mystr+=\"media acima de %d anos=%d\\n\" % (A[3],class2Media/class2)\r\n  else:\r\n    mystr+=\"media acima de %d anos=%d\\n\" % (A[3],0)\r\n  if A[4]==oper[0]:\r\n      mystr+=\"estudantes %s da meta %d=%d\\n\" % (A[4],A[1],numAbaixo)\r\n  else:\r\n      mystr+=\"estudantes %s da meta %d=%d\\n\" % (A[4],A[1],A[0]-numAbaixo)\r\n\r\n  return str(mystr)\r\n\r\nA=myRandom()\r\nmySimula = algorithm(A)  \r\n]]','QT','2','remember','yes','2019-03-03',1,3),(125,'teo q2','for-classifica Atleta','O Comitê Olímpico Brasileiro (COB) solicitou a elaboração de um programa para atender as competições de atletismo. O programa deve  inicialmente \\textbf{solicitar o número de competidores} de uma determinada prova e a \\textbf{meta mínima nacional da prova} (em segundos) estabelecida pelo COB. Depois, para cada competidor, o programa deve solicitar que sejam informados a \\textbf{idade do atleta} e o \\textbf{tempo (em segundos)} conseguido pelo mesmo na prova. Para cada atleta deve exibir uma das seguintes mensagens de acordo com seu tempo:\r\n\r\n\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Tempo superior à meta (desempenho insuficiente do atleta);\r\n\\item Tempo dentro da meta mínima (desempenho suficiente).  \r\n\\end{itemize}\r\n\r\n\\noindent Ao final, o programa deve exibir os seguintes resultados:\r\n\r\n\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Tempo médio dos atletas até [[code:a2]]  anos (inclusive);\r\n\\item Tempo médio dos atletas acima de [[code:a3]] anos (inclusive);\r\n\\item Quantidade de atletas com tempo \\textbf{[[code:a4]]} da meta.\r\n\\end{itemize}\r\n\\noindent Considere que os dados digitados estão corretos e não precisam ser validados.\r\n\r\n\\noindent\\textbf{Exemplo (elabore um código para $num>50$):}\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n%\\vspace{1cm}\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,oper\r\n  oper = [\"abaixo\",\"acima\"]     # aparece no texto\r\n  a4 = random.choice(oper)    # sortear um\r\n\r\n  a0=random.randrange(3, 5, 1)         # num Aluno\r\n  a1=random.randrange(400, 600, 1)     # meta\r\n  a2=random.randrange(12, 21, 1)     #class1\r\n  a3=a2+1                                          #class2\r\n  return [a0,a1,a2,a3,a4]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  num=A[0]\r\n  meta=A[1]\r\n  class1=class2=class1Media=class2Media=numAbaixo=media=0\r\n  mystr=\"num=%d \\tmeta=%d (segundos)\\n\" %(num,meta)\r\n  for i in range(num):\r\n    idade = random.randrange(10, 30, 1)\r\n    pontos = random.randrange(0, 1000, 1)\r\n    media+=pontos\r\n    if idade<=A[2]:\r\n      class1Media+=pontos\r\n      class1+=1\r\n    else:\r\n      class2Media+=pontos\r\n      class2+=1\r\n    if pontos<meta:\r\n      numAbaixo+=1\r\n    mystr+=\"idade=%d \\ttempo=%d \\t(segundos)\\n\" %(idade,pontos)\r\n\r\n  if class1:\r\n    mystr+=\"\\nmedia ate %d anos=%d \\t(segundos)\\n\" % (A[2],class1Media/class1)\r\n  else:\r\n    mystr+=\"\\nmedia ate %d anos=%d \\t(segundos)\\n\" % (A[2],0)\r\n\r\n  if class2:\r\n    mystr+=\"media acima de %d anos=%d \\t(segundos)\\n\" % (A[3],class2Media/class2)\r\n  else:\r\n    mystr+=\"media acima de %d anos=%d \\t(segundos)\\n\" % (A[3],0)\r\n  if A[4]==oper[0]:\r\n      mystr+=\"atletas %s da meta %d (segundos)=%d\\n\" % (A[4],A[1],numAbaixo)\r\n  else:\r\n      mystr+=\"atletas %s da meta %d (segundos)=%d\\n\" % (A[4],A[1],A[0]-numAbaixo)\r\n\r\n  return str(mystr)\r\n\r\nA=myRandom()\r\nmySimula = algorithm(A)  \r\n]]','QT','2','remember','yes','2019-03-03',1,3),(126,'teo q3','while-maior/menor par/impar','Escreva um programa que solicita ao usuário uma quantidade indeterminada (a entrada de dados deve ser encerrada quando o número \\textbf{-1} for digitado) de números inteiros estritamente \\textbf{positivos}. Faça a validação de dados de forma que os números informados sejam estritamente \\textbf{positivos}, isto é, apenas números \\textbf{maiores do que zero} devem ser aceitos. Depois o programa deve calcular e escrever a \\textbf{média aritmética} apenas dos números \\textbf{[[code:a0]]}. \r\n\r\n\\\r\n\r\n\\\\\r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n\r\n\\drawLines{55}\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,oper\r\n  oper = [\"pares\",\"impares\"]     # aparece no texto\r\n  a0 = random.choice(oper)    # sortear um\r\n  return [a0]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  mediaPar=mediaImpar=contPar=contImpar=media=0\r\n  mystr=\"\"\r\n  while True:\r\n    n=random.randrange(-2, 6, 1)\r\n    mystr+=\"n=%d\\n\" %(n)\r\n    if n==-1:\r\n      break\r\n    if n<0:\r\n      mystr+=\"Somente positivos!\\n\"\r\n    elif n%2:\r\n      contImpar+=1\r\n      mediaImpar+=n\r\n    else:\r\n      contPar+=1\r\n      mediaPar+=n\r\n\r\n  if A[0]==oper[0]: # par\r\n    if contPar:\r\n      mystr+=\"\\nmedia de %d numeros %s = %d\" % (contPar, A[0],mediaPar/contPar)\r\n  else: # impar\r\n    if contImpar:\r\n      mystr+=\"\\nmedia de %d numeros %s = %d\" % (contImpar,A[0],mediaImpar/contImpar)\r\n\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula = algorithm(A)  \r\n  if 100<len(mySimula)<120:\r\n    break\r\n]]','QT','3','remember','yes','2019-03-03',1,3),(127,'teo q2','if-aumento salário','Uma empresa decide dar um aumento aos seus funcionários de acordo com uma tabela que considera o salário atual e o tempo de serviço de cada funcionário. Os funcionários com menor salário terão um aumento proporcionalmente maior do que os funcionários com um salário  maior, e conforme o tempo de serviço na empresa, cada funcionário irá receber um bônus adicional de salário. Faça um programa que leia:\r\n\r\n\\begin{itemize}[align=right,labelwidth=1.7cm] \\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item o valor do salário atual do funcionário;\r\n\\item o tempo de serviço desse funcionário na empresa (número de anos de trabalho na empresa). \r\n\\end{itemize}\r\n\r\n\\noindent Use as tabelas abaixo para calcular o salário reajustado deste funcionário e imprima o valor do salário final reajustado, ou uma mensagem caso o funcionário não tenha direito a nenhum aumento.\r\n\\\\\r\n\\\r\n\r\n\\begin{multicols}{2}\r\n\\centering\r\n\\begin{tabular}{|c|c|}\r\n\\hline\r\n\\textbf{Salário Atual} & \\textbf{Reajuste(\\%)} \\\\ \\hline\r\nAté [[code:a2*1]]            & [[code:a3*4]]\\%                   \\\\ \\hline\r\nAté [[code:a2*2]]            & [[code:a3*3]]\\%                  \\\\ \\hline\r\nAté [[code:a2*3]]            & [[code:a3*2]]\\%                  \\\\ \\hline\r\nAté [[code:a2*4]]            & [[code:a3*1]]\\%                  \\\\ \\hline\r\nAcima de  [[code:a2*4]] & Sem reajuste  \\\\ \\hline\r\n\\end{tabular}\r\n\r\n\\columnbreak\r\n\r\n\\centering\r\n\\begin{tabular}{|c|c|}\r\n\\hline\r\n\\textbf{Tempo de Serviço} & \\textbf{Bônus} \\\\ \\hline\r\nAbaixo de [[code:a4*1]] anos                     & Sem bônus \\\\ \\hline\r\nDe  [[code:a4*1]] a  [[code:a4*2-1]] anos   & [[code:a5*1]]        \\\\ \\hline\r\nDe [[code:a4*2]] a  [[code:a4*3-1]]  anos   & [[code:a5*2]]        \\\\ \\hline\r\nDe [[code:a4*3]] a  [[code:a4*4-1]]  anos   & [[code:a5*3]]        \\\\ \\hline\r\nMais que [[code:a4*4]] anos                      & [[code:a5*4]]        \\\\ \\hline\r\n\\end{tabular}\r\n\r\n\\end{multicols}\r\n\r\n\\\r\n\r\n\\\\\r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{55}\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5\r\n  a1 = random.randrange(0, 20, 1)        # tempo\r\n  a2 = random.choice(range(3,6))*100     # minimo\r\n  a3 = random.choice(range(1,4))*5       # porcentagem\r\n  a0 = random.randrange(a2/2, 6*a2, 1)# salario\r\n  a4 = random.choice(range(2,5))          # anos bonus\r\n  a5 = random.choice(range(1,4))*100   # bonus\r\n  return [a0,a1,a2,a3,a4,a5]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  salario = A[0]\r\n  tempo = A[1]\r\n  mystr = \"salario = %d  tempo = %d\\n\" % (salario,tempo)\r\n  salariofinal = salario\r\n  if (salario < A[2]):\r\n    salariofinal += salario * (A[3]*4)/100\r\n  elif (salario < A[2]*2):\r\n    salariofinal += salario * (A[3]*3)/100\r\n  elif (salario < A[2]*3):\r\n    salariofinal += salario * (A[3]*2)/100\r\n  elif (salario < A[2]*4):\r\n    salariofinal += salario * (A[3]*1)/100\r\n\r\n  if tempo>A[4]*4:\r\n    bonus = A[5]*4\r\n  elif tempo>=A[4]*3:\r\n    bonus = A[5]*3\r\n  elif tempo>=A[4]*2:\r\n    bonus = A[5]*2\r\n  elif tempo>=A[4]*1:\r\n    bonus = A[5]*1\r\n  else:\r\n    bonus = 0.0\r\n        \r\n  mystr += \"valor do salario final = %d\\n\" % salariofinal\r\n  mystr += \"bonus = %d\" % bonus\r\n\r\n  return str(mystr)\r\n\r\nA=myRandom()\r\nmySimula = algorithm(A) \r\n#print A\r\n#print mySimula \r\n]]','QT','2','remember','yes','2019-03-03',1,2),(128,'teo q2','if-conta energia','Com as recentes crises de água, a geração de energia elétrica sofreu um forte impacto. Por esse motivo, as companhias geradoras de energia colocaram em prática formas mais caras de geração de energia, que interfere  na conta dos consumidores. Um exemplo desse ajuste, pode ser visualizado na nova \\textbf{TABELA TARIFÁRIA} (primeira tabela a seguir) da empresa de fornecimento de energia elétrica de São Paulo. %Atualmente, a concessionaria paulistana utiliza a seguinte tabela tarifaria:\r\n\r\n\\begin{center}\r\n\\begin{tabular}{|c|c|p{3cm}|p{3cm}|}\r\n  \\hline\r\n  \\multicolumn{4}{|c|}{\\textbf{TABELA TARIFÁRIA}} \\\\ \\hline\r\n  CLASSE & FAIXA DE CONSUMO & TUSD($R\\$/kWh$) & TE ($R\\$/kWh$) \\\\ \\hline\r\n  \\multirow{3}{*}{1 - RESIDENCIAL} & Consumo mensal até $[[code:a3]] kWh$ & $0,06747$ & $0,08300$ \\\\\r\n                                   & Consumo mensal entre $[[code:a3+1]]$ e $[[code:a4]] kWh$ & $0,11566$ & $0,14229$ \\\\\r\n				   & Consumo mensal superior a $[[code:a4+1]] kWh$ & $0,17348$ & $0,21343$ \\\\ \\hline\r\n  \\multicolumn{2}{|l|}{2 - RURAL}  & $0,13927$ & $0,16600$ \\\\ \\hline\r\n  \\multicolumn{2}{|l|}{3 - DEMAIS CLASSES} & $0,19896$ & $0,23715$ \\\\ \\hline\r\n\\end{tabular}\r\n\\end{center}\r\n\r\n\r\n\\noindent Nesta tabela, temos duas taxas que insidem no valor a ser pago na conta de energia, conforme a CLASSE e a FAIXA DE CONSUMO: TUSD (Tarifa do Uso do Sistema de Distribuição) e TE (Tarifa de Energia). Para calcular o valor total a ser pago, basta fazer a conta \\texttt{CONSUMO*(TUSD+TE+TAXA)}, onde a TAXA é dada pela \\textbf{BANDEIRA TARIFÁRIA vigente} da geração de energia, que é dada pela seguinte regra:\r\n\r\n\\begin{center}\r\n\\begin{tabular}{|c|c|c|}\r\n  \\hline\r\n  \\multicolumn{3}{|c|}{\\textbf{BANDEIRAS TARIFÁRIAS}} \\\\ \\hline\r\n  BANDEIRA VERDE & BANDEIRA AMARELA & BANDEIRA VERMELHA \\\\ \\hline\r\n  Sem acréscimo na tarifa & Acréscimo de $R\\$[[code:a5/1000.0]]$ a cada $1 kW/h$ & Acréscimo de $R\\$[[code:a6/1000.0]]$ a cada $1 kW/h$ \\\\ \\hline\r\n\\end{tabular}\r\n\\end{center}\r\n\r\n%Desta maneira, um consumidor residencial (CLASSE = 1) que tenha consumido $122 kWh$ (FAIXA DE CONSUMO = 2) sobre vigência de uma bandeira VERMELHA pagará $R\\$38.17$ apenas pela distribuição e consumo da energia.\r\n%$$122 * (0.11566 + 0.14229 + 0.055) = 38.1799$$\r\n\r\n\\noindent Faça um programa que dada a \\texttt{CLASSE} tarifária (inteiro: 1=RESIDENCIAL; 2=RURAL; 3=DEMAIS), a \\texttt{BANDEIRA TARIFÁRIA} vigente (inteiro: 1=VERDE; 2=AMARELA; 3=VERMELHA) e o \\texttt{CONSUMO} em $kWh$ (real), mostre qual o total a ser pago pela distribuição e consumo de energia.\r\n\r\n\\ \r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{48}\r\n\r\n\\newpage\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5,a6\r\n  a0 = random.randrange(1, 4, 1) # classe 1=res;2=ru;3=out\r\n  a1 = random.randrange(0, 3, 1) # band 0=ver;1=amar;2=verm\r\n  a2 = random.randrange(100, 300, 1) # consumo\r\n  a3 = random.randrange(20, 40, 1)   # consumo faixa 1\r\n  a4 = random.randrange(200, 240, 1) # consumo faixa 2\r\n  a5 = random.randrange(10, 30, 1) # TAXA faixa 1\r\n  a6 = random.randrange(40, 60, 1) # TAXA faixa 1\r\n  return [a0,a1,a2,a3,a4,a5,a6]\r\n\r\ndef algorithm(A):\r\n  classe   = A[0]\r\n  bandeira = A[1]\r\n  consumo  = A[2]\r\n  mystr = \"classe=%d  bandeira=%d  consumo=%d\\n\" % (classe,bandeira,consumo)\r\n  if classe==1: # residencial\r\n    if consumo<=A[3]:\r\n      TUSD = 0.06747\r\n      TE = 0.083\r\n    elif consumo<=A[4]:\r\n      TUSD = 0.11566\r\n      TE = 0.14229		\r\n    else:\r\n      TUSD = 0.17348\r\n      TE = 0.21343	\r\n  if classe == 2: # rural\r\n    TUSD = 0.13927\r\n    TE = 0.166\r\n  if classe == 3: # outros\r\n    TUSD = 0.19896\r\n    TE = 0.23715\r\n  TAXA = 0 # bandeira verde\r\n  if bandeira == 1: # amarelo\r\n    TAXA = A[5]/1000.0\r\n  if bandeira == 2: # vermelho\r\n    TAXA = A[6]/1000.0\r\n  mystr += \"consumo\\t= %d\\n\" % consumo\r\n  mystr += \"TUSD \\t= %.5f\\n\" % TUSD\r\n  mystr += \"TE   \\t= %.5f\\n\" % TE\r\n  mystr += \"TAXA \\t= %.5f\\n\" % TAXA\r\n  mystr += \"Valor\\t= %.2f\" % (consumo*(TUSD+TE+TAXA))\r\n        \r\n  return str(mystr)\r\n\r\nA=myRandom()\r\nmySimula = algorithm(A) \r\n#print A\r\n#print mySimula \r\n]]\r\n\r\n% GABARITO\r\n%programa\r\n%{\r\n%	funcao inicio()\r\n%	{\r\n%		inteiro classe=1 // 1=resid 2=rural 3-outros\r\n%		inteiro bandeira=2 // 0=verde 1=amarelo 2=vermelho\r\n%		real consumo=122.0, TUSD, TE, TAXA=0.0\r\n%		se (classe==1) {\r\n%		  se (consumo<=30) {\r\n%			TUSD = 0.06747\r\n%			TE = 0.083\r\n%		  }\r\n%		  se (30<consumo e consumo<=220) {\r\n%			TUSD = 0.11566\r\n%			TE = 0.14229		\r\n%		  }\r\n%		  se (consumo>220) {\r\n%			TUSD = 0.17348\r\n%			TE = 0.21343	\r\n%		  }\r\n%		}\r\n%		se (classe == 2){ // rural\r\n%			TUSD = 0.13927\r\n%			TE = 0.166\r\n%		}\r\n%		se (classe == 3){ // outros\r\n%			TUSD = 0.19896\r\n%			TE = 0.23715\r\n%		}	\r\n%		se (bandeira == 1) { // amarelo\r\n%			TAXA = 0.025\r\n%		}\r\n%		se (bandeira == 2) { // vermelho\r\n%			TAXA = 0.055\r\n%		}	\r\n%		escreva(\"consumo = \",consumo)	\r\n%		escreva(\"TUSD = \",TUSD)	\r\n%		escreva(\"TE = \",TE)	\r\n%		escreva(\"TAXA = \",TAXA)	\r\n%		escreva(\"Valor = \", consumo*(TUSD+TE+TAXA))\r\n%	}\r\n%}','QT','2','remember','yes','2019-03-03',1,2),(129,'teo q2','if-conta água','Com as recentes crises de abastecimento de água, várias cidades estão fazendo racionamentos, como por exemplo Brasília. As grandes cidades têm vários condomínios com centenas e até milhares de apartamentos. Nos apartamentos, geralmente o aquecedor a gás dos chuveiros e torneiras fica na área de serviço, distante do uso final da água aquecida. Isto apresenta um grande desperdício de água, aguardando a água quente chegar! Para analisar este desperdício, apresenta-se os seguintes dados:\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n%\\caption{My caption}\r\n\\label{my-label}\r\n\\begin{tabular}{|c|c|r|r|}\r\n\\hline\r\n\\multicolumn{4}{|c|}{\\textbf{Cálculo do Valor da Conta Residencial Por Economia}}                                                                                                                                                                                                                                                            \\\\ \\hline\r\n\\multicolumn{1}{|l|}{}                                                 & \\cellcolor[HTML]{FFFFFF}                                                                                                      & \\multicolumn{2}{c|}{\\textbf{Água}}                                                                                                  \\\\ \\cline{3-4} \r\n\\multicolumn{1}{|l|}{\\multirow{-2}{*}{\\textbf{Faixa Consumo ($m^3$)}}} & \\multirow{-2}{*}{\\cellcolor[HTML]{FFFFFF}\\textbf{\\begin{tabular}[c]{@{}c@{}}Consumo ($m^3$) Por Economia\\\\ (I)\\end{tabular}}} & \\multicolumn{1}{l|}{\\textbf{Tarifa(R\\$)}} & \\multicolumn{1}{c|}{\\textbf{\\begin{tabular}[c]{@{}c@{}}Valor(R\\$)\\\\ (II)\\end{tabular}}} \\\\ \\hline\r\nAté 10     & \\cellcolor[HTML]{C0C0C0}Mínimo & [[code:a1]]   & \\cellcolor[HTML]{C0C0C0}  \\\\ \\hline\r\n11 a 20   & \\cellcolor[HTML]{C0C0C0}             & [[code:a2]]   & \\cellcolor[HTML]{C0C0C0}    \\\\ \\hline\r\n21 a 30   & \\cellcolor[HTML]{C0C0C0}             & [[code:a3]]  & \\cellcolor[HTML]{C0C0C0}       \\\\ \\hline\r\n31 a 50   & \\cellcolor[HTML]{C0C0C0}             & [[code:a4]]   & \\cellcolor[HTML]{C0C0C0}             \\\\ \\hline\r\nAcima de 50  & \\cellcolor[HTML]{C0C0C0}      &  [[code:a5]]   & \\cellcolor[HTML]{C0C0C0}            \\\\ \\hline\r\n\\multicolumn{3}{|l|}{\\textbf{Total Água}}            & \\cellcolor[HTML]{C0C0C0}\\textbf{}      \\\\ \\hline\r\n\\multicolumn{3}{|l|}{\\textbf{Total Residencial (Água + Esgoto = 2*Água)}}   & \\cellcolor[HTML]{C0C0C0}\\textbf{}   \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\noindent\\textbf{Explicações:} A forma de calcular o valor em \\textbf{Total Água} passa por todas as \\textbf{Faixas de Consumo}. Nesta tabela o consumo mensal da família é $21 m^3$ (metros cúbicos), valor que está distribuído nestas faixas. Então, para calcular o valor em \\textbf{Total Água}, o programa terá que prever a passagem por todas as faixas e acumular as tarifas cobradas multiplicado pelo consumo da faixa (a exceção é quando o consumo fica abaixo de $10m^3$, neste caso deve atribuir um valor mínimo a ser considerado nesta faixa). O valor calculado em \\textbf{Total Residencial (Água + Esgoto)} é obtido pelo dobro do valor calculado em \\textbf{Total Água}.\r\n\r\n\\begin{enumerate}[label=(\\alph*)]\r\n\\item Faça um programa para ler APENAS o consumo mensal em $m^3$ de uma família. O programa deve calcular qual foi o gasto em cada \\textbf{Faixa de Consumo} (colunas I e II em cinza). Calcular também o valor total a ser pago em \\textbf{Total Água} e \\textbf{Total Residencial (Água + Esgoto)}. O programa deve exibir no console algo semelhante ao apresentado nesta tabela (não é necessário exibir as linhas que não atingiram determinadas \\textbf{Faixas de Consumo});\r\n\r\n\\item Considerando que cada banho e cada uso da torneira quente gasta em média 15 litros de água fria até o seu aquecimento na torneira ou chuveiro, e cada família de 4 pessoas usa em média 10 vezes ao dia a água quente, qual será o gasto em reais a ser pago no final do mês apenas pelo desperdício de água fria, considerando que o consumo sempre ultrapassa a \\textbf{Faixa de Consumo} \"Acima de 50\"? (lembre-se que $1 m^3 = 1000$ litros).\r\n\\end{enumerate}\r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n%\\drawLines{5}\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5,a6\r\n  a0 = random.randrange(10, 200, 1) # consumo\r\n  a1 = random.randrange(200,300, 1)/10.0 # faixa 1\r\n  a2 = random.randrange(30,  40, 1)/10.0   # faixa 2\r\n  a3 = random.randrange(80,  90, 1)/10.0   # faixa 3\r\n  a4 = random.randrange(90, 100, 1)/10.0   # faixa 4\r\n  a5 = random.randrange(100,140, 1)/10.0   # faixa 4\r\n  return [a0,a1,a2,a3,a4,a5]\r\n\r\ndef algorithm(A):\r\n  consumo  = A[0]\r\n  mystr=\"consumo=%d\\n\" % (consumo)\r\n  mystr+=\"Faixa\\tpor Economia\\tTarifa\\tValor\\n\"\r\n  tarifa = A[1]\r\n  valor = tarifa\r\n  total = valor\r\n  mystr+=\"Ate 10 \\tMinimo   \\t\\t%.2f  \\t%7.2f\\n\" %(tarifa,valor)\r\n  if consumo > 10:\r\n    consumoFaixa = 10\r\n    if consumo <= 20:\r\n      consumoFaixa = consumo - 10\r\n    tarifa = A[2]\r\n    valor = tarifa*consumoFaixa\r\n    total = total + valor\r\n    mystr+=\"11a20\\t%5d      \\t\\t%5.2f  \\t%7.2f\\n\" %(consumoFaixa,tarifa,valor) \r\n        \r\n  if consumo > 20:\r\n    consumoFaixa = 10\r\n    if consumo <= 30:\r\n      consumoFaixa = consumo - 20\r\n    tarifa = A[3]\r\n    valor = tarifa*consumoFaixa\r\n    total = total + valor\r\n    mystr+=\"21a30\\t%5d      \\t\\t%5.2f  \\t%7.2f\\n\" %(consumoFaixa,tarifa,valor) \r\n\r\n  if consumo > 30:\r\n    consumoFaixa = 20\r\n    if consumo <= 50:\r\n      consumoFaixa = consumo - 30\r\n    tarifa = A[4]\r\n    valor = tarifa*consumoFaixa\r\n    total = total + valor\r\n    mystr+=\"31a50\\t%5d      \\t\\t%5.2f  \\t%7.2f\\n\" %(consumoFaixa,tarifa,valor) \r\n\r\n  if consumo > 50:\r\n    consumoFaixa = consumo - 50\r\n    tarifa = A[5]\r\n    valor = tarifa*consumoFaixa\r\n    total = total + valor\r\n    mystr+=\" > 50\\t%5d      \\t\\t%5.2f  \\t%7.2f\\n\" % (consumoFaixa,tarifa,valor)\r\n    \r\n  mystr+=\"\\nConsumo agua        \\t\\t %6d\" % consumo\r\n  mystr+=\"\\nTotal agua             \\t\\t%7.2f\" % total\r\n  mystr+=\"\\nTotal agua + Esgoto     %7.2f\" % (2*total)\r\n    \r\n  tarifa = A[5]\r\n  mystr+=\"\\n\\nDesperdicio ate aquecer a agua nas torneiras/chuveiros:\"\r\n  mystr+=\"\\nConsiderando o desperdicio de agua por uso (em litros)\\t%4d\"      % 15\r\n  mystr+=\"\\nConsiderando uma tarifa de (R$)                    \\t%10.2f\"  % tarifa\r\n  mystr+=\"\\nConsiderando o uso de agua quente por dia (vezes)   \\t%6d\\t\"    % 10\r\n  mystr+=\"\\nDesperdicio mensal em metros cubicos (m^3)        \\t %10.2f\" % (15*30*10/1000.0)\r\n  mystr+=\"\\nDesperdicio mensal na conta da Sabesp (R$)         \\t%10.2f\"  % (2*15*30*10*tarifa/1000.0)\r\n\r\n  return str(mystr)\r\n\r\nA=myRandom()\r\nmySimula = algorithm(A) \r\n#print A\r\n#print mySimula \r\n]]\r\n\r\n%\\hspace{-4mm}\\textbf{Exemplo de execução do programa:}\\vspace{-3mm}\r\n%\\small\r\n%\\begin{verbatim}\r\n%Entre com o consumo mensal em metros cúbicos: 51\r\n%Faixa     por Economia   Tarifa    Valor\r\n%Até 10    Mínimo         24.15     24.15\r\n%11a20     10              3.78     37.80\r\n%21a30     10              9.44     94.40\r\n%31a50     20              9.44    188.80\r\n%> 50       1              10.4     10.4\r\n%\r\n%Total água              355.55\r\n%Total água + Esgoto     711.01\r\n%\r\n%Desperdício até aquecer a água nas torneiras/chuveiros:\r\n%Considerando o desperdício de água por uso (em litros)   15\r\n%Considerando uma tarifa (em R$)                          10.4\r\n%Considerando o uso de água quente por dia (vezes)        10\r\n%Desperdício mensal em metros cúbicos (em m^3)             4\r\n%Desperdício mensal na conta da Sabesp (em R$)            93.6\r\n%\\end{verbatim}\r\n%\\vspace{-5mm}\r\n%\\normalsize','QT','5','remember','yes','2019-03-03',1,2),(130,'teo q2','if-forma geométrica','Elabore um programa que solicite uma \\textbf{Forma} geométrica  entre \\textbf{[[code:forma1]]} ou \\textbf{[[code:forma2]]}. \r\n\\\r\nConforme a forma escolhida, leia também as medidas para calcular a \\textbf{Área} e o \\textbf{Perímetro} de uma forma geométrica 2D. Ou também, se a forma escolhida for 3D, o programa deve ler as medidas para exibir a \\textbf{Área} da superfície e o seu \\textbf{Volume}. \r\n\\\r\nA variável \\textbf{Forma} deve ser do tipo \\textit{string} (cadeia) e as demais do tipo real. \r\n\\\r\nObservação: Considere o valor aproximado de $\\pi=3.14$. Considere também:\r\n \r\n\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item \\textbf{Quadrado}: area = lado*lado; perimetro = 4*lado\r\n\\item \\textbf{Retângulo}: area = base*altura; perimetro = 2*base + 2*altura\r\n\\item \\textbf{Círculo}: area = 3.14 * raio * raio; perimetro = 2*3.14*raio	\r\n\\item \\textbf{Cubo}: area = 6*lado*lado; volume = lado*lado*lado\r\n\\item \\textbf{Paralelepípedo}: area = 2*(base*altura + base*profundidade + altura*profundidade)\\\\\r\nvolume = base*altura*profundidade\r\n\\end{itemize}\r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula1]]\r\n\\end{verbatim}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula2]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{48}\r\n\r\n\\newpage\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5,oper\r\n  oper = [\"cubo\",\"paralelepipedo\",\"quadrado\",\"retangulo\",\"circulo\"]    \r\n  a0 = random.choice(oper)      # sortear um\r\n  a1 = random.randrange(1,7, 1) # lado\r\n  a2 = random.randrange(1,7, 1) # base\r\n  a3 = random.randrange(1,7, 1) # altura\r\n  a4 = random.randrange(1,7, 1) # profundidade\r\n  a5 = random.randrange(1,7, 1) # raio\r\n\r\n  return [a0,a1,a2,a3,a4,a5]\r\n\r\ndef algorithm(A):\r\n  forma  = A[0]\r\n  lado = A[1]\r\n  base = A[2]\r\n  altura = A[3]\r\n  profundidade = A[4]\r\n  raio =A[5]\r\n  mystr=   \"forma        = %s\\n\" % (forma)\r\n  if forma==oper[0]: #cubo\r\n    mystr+=\"lado         = %5.1f \\n\" % (lado)\r\n    mystr+=\"area         = %5.1f \\n\" % (6*lado*lado)\r\n    mystr+=\"volume       = %5.1f \\n\" % (lado*lado*lado)\r\n  if forma==oper[1]: #paralelepipedo\r\n    mystr+=\"base         = %5.1f \\n\" % (base)\r\n    mystr+=\"altura       = %5.1f \\n\" % (altura)\r\n    mystr+=\"profundidade = %5.1f \\n\" % (profundidade)\r\n    mystr+=\"area         = %5.1f \\n\" % (2*(base*altura+base*profundidade+altura*profundidade))\r\n    mystr+=\"volume       = %5.1f \\n\" % (base*altura*profundidade)\r\n  if forma==oper[2]: #quadrado\r\n    mystr+=\"lado         = %5.1f \\n\" % (lado)\r\n    mystr+=\"area         = %5.1f \\n\" % (lado*lado)\r\n    mystr+=\"perimetro    = %5.1f \\n\" % (4*lado)\r\n  if forma==oper[3]: #retangulo\r\n    mystr+=\"base         = %5.1f \\n\" % (base)\r\n    mystr+=\"altura       = %5.1f \\n\" % (altura)\r\n    mystr+=\"area         = %5.1f \\n\" % (base*altura)\r\n    mystr+=\"perimetro    = %5.1f \\n\" % (2*base+2*altura)\r\n  if forma==oper[4]: #circulo\r\n    mystr+=\"raio         = %5.1f \\n\" % (raio)\r\n    mystr+=\"area         = %5.1f \\n\" % (3.14*raio*raio)\r\n    mystr+=\"perimetro    = %5.1f \\n\" % (2*3.14*raio)\r\n\r\n  return str(mystr)\r\n\r\nA=myRandom()\r\nforma1 = a0\r\nmySimula1 = algorithm(A)\r\nwhile forma1==a0:\r\n  a0=random.choice(oper)\r\nforma2=A[0]=a0\r\nmySimula2 = algorithm(A) \r\n]]','QT','2','remember','yes','2019-03-03',1,2),(131,'teo q2','if-promoção açougue','O Hipermercado Trabalho $\\&$ Cia está com uma promoção de carnes que é imperdível. Confira:\r\n\r\n\\begin{table}[h!]\r\n\\centering\r\n\\begin{tabular}{|l|c|c|}\r\n\\hline\r\n\\multicolumn{1}{|c|}{} & \\textbf{Até 5kg}  & \\textbf{Acima de 5kg} \\\\ \\hline\r\n\\textbf{Filé}                & R\\$[[code:a3]] por kg  & R\\$[[code:a3+1]] por kg       \\\\ \\hline\r\n\\textbf{Alcatra}          & R\\$[[code:a4]] por kg   & R\\$[[code:a4+2]] por kg       \\\\ \\hline\r\n\\textbf{Picanha}        & R\\$[[code:a5]] por kg   & R\\$[[code:a5+3]] por kg       \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\nPara atender a todos os clientes, cada cliente poderá levar apenas um dos tipos de carne da promoção, porém não há limites para a quantidade de carne por cliente. Se a compra for feita no cartão Trabalho  $\\&$ Cia, o cliente receberá ainda um desconto de [[code:a6]]$\\%$ sobre o total da compra.\r\n\r\nEscreva um programa que peça ao usuário o \\textbf{tipo} e a \\textbf{quantidade} de carne comprada e a se vai pagar  com o \\textbf{cartão} da loja. Finalmente, gere um cupom fiscal, como o exemplo abaixo:%contendo as informações da compra:\r\n\r\n%\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n%\\item Tipo e quantidade de carne;\r\n%\\item Preço total a ser pago;\r\n%\\item Tipo de pagamento: com cartão ou sem cartão;\r\n%\\item Valor do desconto;\r\n%\\item Valor a pagar.\r\n%\\end{itemize}\r\n\r\n\\ \r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{50}\r\n\r\n\\newpage\r\n\r\n[[def:\r\n#https://repl.it/languages/python\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5,a6,tipoStr\r\n  tipoStr=[\"File\",\"Alcatra\",\"Picanha\"]\r\n  a0 = random.choice(tipoStr)            # tipo\r\n  a1 = random.randrange(5, 90, 1)/10.0       # kg\r\n  a2 = random.choice([\"False\",\"True\"]) # cartao 0\r\n  a3 = random.randrange(100, 110, 1)/10.0 #$ file\r\n  a4 = random.randrange(110, 120, 1)/10.0 #$ file\r\n  a5 = random.randrange(140, 170, 1)/10.0 #$ file\r\n  a6 = random.randrange(40, 300, 1)/10.0 #$ file\r\n  return [a0,a1,a2,a3,a4,a5,a6]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  tipo = A[0]\r\n  qdade = A[1]\r\n  cartao = A[2]\r\n\r\n  if tipo==tipoStr[0]: #file\r\n    if qdade<=5:\r\n      valorPagar = A[3]*qdade\r\n    else:\r\n      valorPagar = (A[3]+1)*qdade\r\n  elif tipo==tipoStr[1]: # alcatra\r\n    if qdade<=5:\r\n      valorPagar = A[4]*qdade\r\n    else:\r\n      valorPagar = (A[4]+2)*qdade\r\n  elif tipo==tipoStr[2]: # picanha\r\n    if qdade<=5:\r\n      valorPagar = A[5]*qdade\r\n    else:\r\n      valorPagar = (A[5]+3)*qdade\r\n  if cartao:\r\n    valorDesconto = A[6]*valorPagar/100.0\r\n  \r\n  mystr  = \"tipo     \\t= %8s\" % tipo\r\n  mystr += \"\\nkg       \\t= %8.2f\" % qdade\r\n  mystr += \"\\ncartao   \\t= %8s\" % cartao\r\n  mystr += \"\\ntotal    \\t= %8.2f\" % valorPagar\r\n  mystr += \"\\ndesconto \\t= %8.2f\" % valorDesconto\r\n  mystr += \"\\npagar    \\t= %8.2f\" % (valorPagar-valorDesconto)\r\n\r\n  return str(mystr)\r\n\r\nA=myRandom()\r\nmySimula = algorithm(A) #print A\r\n#print mySimula \r\n\r\n]]','QT','2','remember','yes','2019-03-04',1,2),(132,'teo q2','if-promoção mercado','O supermercado XYZ realiza uma promoção que distribui cupons de desconto para a próxima compra com base no valor da compra atual e no número de itens derivados de leite comprados. Escreva um programa para indicar o valor do cupom de desconto a que o comprador tem direito mediante as regras da tabela abaixo. \r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\begin{tabular}{|l|l|l|}\r\n\\hline\r\n\\multicolumn{1}{|c|}{\\textbf{Valor compra}} & \\multicolumn{1}{c|}{\\textbf{Número de itens derivados de leite}} & \\multicolumn{1}{c|}{\\textbf{Cupom de desconto para compra futura}} \\\\ \\hline\r\nAcima de [[code:a2]] reais                          & Acima de [[code:a5]]         & [[code:\"%7.2f\"%(a8*3)]] reais                                                                    \\\\ \\hline\r\nAcima de [[code:a3]] reais                          & Acima de [[code:a6]]         & [[code:\"%7.2f\"%(a8*2)]] reais                                                                    \\\\ \\hline\r\nAcima de [[code:a4]] reais                           & Acima de [[code:a7]]        & [[code:\"%7.2f\"%(a8)]] reais                                                                     \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\nCaso o comprador não tenha direito ao cupom de desconto (para compra futura) ele receberá um desconto na compra atual no valor de [[code:a9]]\\% do valor da compra.  Seu programa deve informar uma saída, como no exemplo abaixo:\r\n\r\n\\ \r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{58}\r\n\r\n\\newpage\r\n\r\n[[def:\r\n#https://repl.it/languages/python\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5,a6,a7,a8,a9\r\n  a0 = random.randrange(400,1200)/10.0 # valor\r\n  a1 = random.randrange(1, 16, 1)         # qdade\r\n  a2 = random.randrange(1700,2500, 1)/10.0 # faixa 1\r\n  a3 = random.randrange(900, 1500, 1)/10.0 # faixa 1\r\n  a4 = random.randrange(400,  600, 1)/10.0 # faixa 1\r\n  a5 = random.randrange(7,11, 1) # faixa 1\r\n  a6 = random.randrange(4,7, 1) # faixa 1\r\n  a7 = random.randrange(1,4, 1) # faixa 1\r\n  a8 = random.randrange(40,150, 1)/10.0 # cupom\r\n  a9 = random.randrange(20,200, 1)/10.0 # desconto\r\n  return [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  valor = A[0]\r\n  qdade = A[1]\r\n  \r\n  cupomDesconto=0\r\n  if valor>A[2]:\r\n    if qdade>A[5]:\r\n      cupomDesconto = A[8]*3\r\n  elif valor>A[3]:\r\n    if qdade>A[6]:\r\n      cupomDesconto = A[8]*2\r\n  elif valor>A[4]:\r\n    if qdade>A[7]:\r\n      cupomDesconto = A[8]\r\n\r\n  valorDesconto = 0\r\n  if not cupomDesconto:\r\n    valorDesconto = A[9]*valor/100.0\r\n\r\n  mystr  = \"valor    \\t= %8.2f\" % valor\r\n  mystr += \"\\nitens    \\t= %8d\" % qdade\r\n  mystr += \"\\ncupom    \\t= %8.2f\" % cupomDesconto\r\n  mystr += \"\\ndesconto \\t= %8.2f\" % valorDesconto\r\n  if not cupomDesconto:\r\n    mystr += \"\\ntotal com desconto  \\t= %8.2f\" % (valor-valorDesconto)\r\n  else:\r\n    mystr += \"\\ntotal com desconto = %6.2f\" % (valor)\r\n\r\n  return str(mystr)\r\n\r\nA=myRandom()\r\nmySimula = algorithm(A) \r\n#print A\r\n#print mySimula \r\n]]','QT','2','remember','yes','2019-03-04',1,2),(133,'teo q3','while-algarimos número','Faça um programa que receba um número inteiro N maior que zero (não é necessário validar) e escreva na tela o número N, a quantidade de algarismos de N e a soma dos algarismos de N que sejam \\textbf{[[code:a1]]} a quantidade de algarismos do número N. Siga exatamente a mesma frase usada nos exemplos a seguir:\r\n\r\n\\ \r\n\r\n\\noindent\\textbf{Exemplos:}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula1]]\r\n\r\n[[code:mySimula2]]\r\n\\end{verbatim}\r\n\r\n\\vspace{1cm}\r\n\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,oper\r\n  a0 = random.randrange(4,1000) # N\r\n  \r\n  oper = [\"menores\",\"menores ou iguais\",\"maiores\",\"maiores ou iguais\"]     # aparece no texto\r\n  a1 = random.choice(oper)   # sortear um\r\n\r\n  return [a0,a1]\r\n\r\ndef algorithm(A):\r\n  nAux=N=A[0]\r\n  numDigitos=soma=0\r\n  mystr  = \"N        \\t= %6d\" % (N)\r\n  while nAux>0:\r\n      nAux=int(nAux/10)\r\n      numDigitos+=1\r\n\r\n  mystr  += \"\\nn.digitos\\t= %6d\" % (numDigitos)\r\n  nAux=N\r\n  while nAux>0:\r\n     if A[1]==oper[0]: # menores\r\n       if nAux%10<numDigitos:\r\n         soma+=nAux%10\r\n     if A[1]==oper[1]: # menores ou iguais\r\n       if nAux%10<=numDigitos:\r\n         soma+=nAux%10\r\n     if A[1]==oper[2]: # maiores\r\n       if nAux%10>numDigitos:\r\n         soma+=nAux%10\r\n     if A[1]==oper[3]: # maiores ou iguais\r\n       if nAux%10>=numDigitos:\r\n         soma+=nAux%10\r\n\r\n     nAux=int(nAux/10)\r\n\r\n  mystr  += \"\\nsoma     \\t= %6d\" % (soma)\r\n  return str(mystr)\r\n\r\nA=myRandom()\r\nmySimula1 = algorithm(A) \r\naux=A[1]\r\nA=myRandom()\r\nglobal a1\r\na1=A[1]=aux\r\nmySimula2 = algorithm(A)\r\n#print A\r\n#print mySimula \r\n]]\r\n\r\n%Exemplos:\r\n%\\begin{center} \r\n%\\begin{tabular}{|r|l|} \\hline\r\n%Valor de N & Saída dada pelo programa \\\\ \\hline\r\n%8461     & A soma de todos os digitos de 8461 menores ou iguais a 4 eh 5 \\\\ \\hline\r\n%1234     & A soma de todos os digitos de 1234 menores ou iguais a 4 eh 10\\\\ \\hline\r\n%6789     & A soma de todos os digitos de 6789 menores ou iguais a 4 eh 0\\\\ \\hline\r\n%1        & A soma de todos os digitos de 1 menores ou iguais a 1 eh 1\\\\ \\hline\r\n%90000000 & A soma de todos os digitos de 90000000 menores ou iguais a 8 eh 0\\\\ \\hline\r\n%4        & A soma de todos os digitos de 4 menores ou iguais a 1 eh 0\\\\ \\hline\r\n%40       & A soma de todos os digitos de 40 menores ou iguais a 2 eh 0\\\\ \\hline\r\n%400      & A soma de todos os digitos de 400 menores ou iguais a 3 eh 0\\\\ \\hline\r\n%4000     & A soma de todos os digitos de 4000 menores ou iguais a 4 eh 4\\\\ \\hline\r\n%\\end{tabular}\r\n%\\end{center}\r\n\r\n% GABARITO\r\n%programa\r\n%{\r\n%	funcao inicio()\r\n%	{\r\n%		inteiro n=1234\r\n%		escreva(\"n = \",n)\r\n%		inteiro c=0,a=n\r\n%		enquanto (a>0) {\r\n%			a=a/10\r\n%			c=c+1\r\n%		}\r\n%		inteiro s=0\r\n%		escreva(\"\\nc = \",c)\r\n%		a=n\r\n%		enquanto (a>0) {\r\n%			se (a%10<=c) {\r\n%				s=s+a%10\r\n%			}		\r\n%			a=a/10\r\n%		}\r\n%		escreva(\"\\ns = \",s)\r\n%	}\r\n%}','QT','3','remember','yes','2019-03-04',1,3),(134,'teo q3','for-classifica Idade 2Atleta','Um determinado clube de futebol pretende classificar seus atletas em categorias que são definidas dependendo da sua faixa etária, conforme a tabela abaixo:\r\n\r\n\\begin{table}[h!]\r\n\\centering\r\n\\begin{tabular}{|l|l|}\r\n\\hline\r\n\\multicolumn{1}{|c|}{\\textbf{IDADE}} & \\multicolumn{1}{c|}{\\textbf{CATEGORIA}} \\\\ \\hline\r\nDe [[code:a1]] a [[code:a2]]                                & Infantil                                \\\\ \\hline\r\nDe [[code:a2+1]] a [[code:a3]]                            & Juvenil                                 \\\\ \\hline\r\nDe [[code:a3+1]] a [[code:a4]]                            & Junior                                  \\\\ \\hline\r\nDe [[code:a4+1]] a [[code:a5]]                            & Profissional                            \\\\ \\hline\r\nMaior que [[code:a5]]  e menor que [[code:a1]] & Inexistente                             \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\noindent Construa um programa que solicite a \\textbf{\\underline{Idade}} do atleta e imprima \\textbf{em seguida} a sua \\textbf{\\underline{Categoria}}. O programa deve \\textbf{TERMINAR} quando o usuário digitar \\textbf{\\underline{Sair}}. Após o seu término deve-se \\textbf{imprimir} a \\textbf{QUANTIDADE} de atletas que estão em \\textbf{CADA} categoria e a \\textbf{MÉDIA} das \\textbf{Idades} dos atletas de \\textbf{CADA Categoria}.\r\n\r\n\r\n\\\r\n\r\n\\\\\r\n\r\n\\noindent\\textbf{Exemplos:}\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{48}\r\n\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5,oper\r\n  oper = [\"Infantil\",\"Juvenil\",\"Junior\",\"Profissional\",\"Inexistente\"]     # aparece no texto\r\n  a0 = random.choice(oper) # sortear um\r\n  a1 = random.randrange(4, 7, 1)\r\n  a2 = random.randrange(8, 10, 1)\r\n  a3 = random.randrange(12,17, 1)\r\n  a4 = random.randrange(18,22, 1)\r\n  a5 = random.randrange(23,27, 1)\r\n  return [a0,a1,a2,a3,a4,a5]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  entSair = \"Continuar\"\r\n  contInf=contJuv=contJun=contProf=0\r\n  mediaIdadInf=mediaIdadJuv=mediaIdadJun=mediaIdadProf=0.0\r\n  mystr = \"\\n\"\r\n  while entSair==\"Continuar\":  \r\n    idade = random.randrange(1, 35, 1)\r\n    if A[1]<=idade<=A[2]:\r\n      mystr+=\"idade=%d      \\t%14s\\n\" % (idade,oper[0])\r\n      contInf += 1\r\n      mediaIdadInf += idade\r\n    elif (A[2]+1)<=idade<=A[3]:\r\n      mystr+=\"idade=%d     \\t%14s\\n\" % (idade,oper[1])\r\n      contJuv += 1\r\n      mediaIdadJuv += idade\r\n    elif (A[3]+1)<=idade<=A[4]:\r\n      mystr+=\"idade=%d     \\t%14s\\n\" % (idade,oper[2])\r\n      contJun += 1\r\n      mediaIdadJun += idade\r\n    elif (A[4]+1)<=idade<=A[5]:\r\n      mystr+=\"idade=%d     \\t%14s\\n\" % (idade,oper[3])\r\n      contProf += 1\r\n      mediaIdadProf += idade\r\n    else:\r\n      mystr+=\"idade=%d      \\t%13s\\n\" % (idade,oper[4])\r\n\r\n\r\n    entSair = random.choice([\"Sair\",\"Continuar\",\"Continuar\"])\r\n    mystr+=\"Sair/Continuar? \\t%11s\\n\" % (entSair)\r\n\r\n  mystr+=\"\\nnum. %s    \\t%10d\\n\" % (oper[0],contInf)\r\n  mystr+=\"num. %s     \\t%10d\\n\" % (oper[1],contJuv)\r\n  mystr+=\"num. %s      \\t%10d\\n\" % (oper[2],contJun)\r\n  mystr+=\"num. %s\\t%10d\\n\" % (oper[3],contProf)\r\n\r\n  if contInf:\r\n    mystr+=\"\\nmedia %s    \\t%10.1f\\n\" % (oper[0],mediaIdadInf/contInf)\r\n  else:\r\n    mystr+=\"\\nmedia %s    \\t%10.1f\\n\" % (oper[0],0)\r\n  if contJuv:\r\n    mystr+=\"media %s     \\t%10.1f\\n\" % (oper[1],mediaIdadJuv/contJuv)\r\n  else:\r\n    mystr+=\"media %s     \\t%10.1f\\n\" % (oper[1],0)\r\n  if contJun:\r\n    mystr+=\"media %s      \\t%10.1f\\n\" % (oper[2],mediaIdadJun/contJun)\r\n  else:\r\n    mystr+=\"media %s      \\t%10.1f\\n\" % (oper[2],0)\r\n  if contProf:\r\n    mystr+=\"media %s\\t%10.1f\\n\" % (oper[3],mediaIdadProf/contProf)\r\n  else:\r\n    mystr+=\"media %s\\t%10.1f\\n\" % (oper[3],0)\r\n\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula = algorithm(A)  \r\n  if 430<len(mySimula)<480:\r\n    #print mySimula\r\n    break  \r\n]]','QT','3','remember','yes','2019-03-04',1,3),(135,'teo q3','for-mais gordo/magro/baixo/alto','Uma academia tem 200 clientes e deseja fazer um levantamento para descobrir o mais alto, o mais baixo, o mais gordo e o mais magro. Para isto você deve fazer um programa que pergunte a cada um dos clientes da academia seu \\textbf{código}, sua \\textbf{altura} e seu \\textbf{peso}. Ao encerrar o programa devem exibir a formatação abaixo (com apenas [[code:a0]] atletas para ilustração): \r\n\r\n\\\r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{58}\r\n\r\n[[def:\r\nimport random\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0\r\n  a0 = random.randrange(3, 5, 1)           # num\r\n  return [a0]\r\n\r\ndef algorithm(A):\r\n  totAltura=totPeso=mediaAltura=mediaPeso=0.0\r\n  pesoMaisGordo=pesoMaisAlto=pesoMaisBaixo=alturaMaisAlto=0.0\r\n  alturaMaisBaixo=pesoMaisMagro=1000.0\r\n  alturaMaisGordo=alturaMaisMagro=0.0\r\n  codMaisMagro=codMaisGordo=codMaisAlto=codMaisBaixo=totPessoas=0\r\n  mystr =\"            codigo\\t peso \\taltura\" \r\n  for i in range(A[0]):\r\n    codigo = random.randrange(0, 100, 1)\r\n    peso   = random.randrange(100, 1500, 1)/10.0\r\n    altura = random.randrange(100, 300, 1)\r\n    mystr +=\"\\nCliente      \\t%3d \\t%5.1f \\t%5.1f\" % (codigo,peso,altura)\r\n    totPessoas += 1\r\n    totAltura += altura\r\n    totPeso += peso\r\n    if (peso > pesoMaisGordo):\r\n      pesoMaisGordo = peso\r\n      codMaisGordo = codigo\r\n      alturaMaisGordo = altura\r\n    if (peso < pesoMaisMagro):\r\n      pesoMaisMagro = peso\r\n      codMaisMagro = codigo\r\n      alturaMaisMagro = altura\r\n    if (altura > alturaMaisAlto):\r\n      alturaMaisAlto = altura\r\n      codMaisAlto = codigo\r\n      pesoMaisAlto = peso\r\n    if (altura < alturaMaisBaixo):\r\n      alturaMaisBaixo = altura\r\n      codMaisBaixo = codigo\r\n      pesoMaisBaixo = peso\r\n\r\n  if (totPessoas):\r\n    mediaAltura = totAltura/totPessoas\r\n    mediaPeso = totPeso/totPessoas\r\n\r\n    mystr +=\"\\n\\nMais Alto    \\t%3d \\t%5.1f \\t%5.1f\" % (codMaisAlto,pesoMaisAlto,alturaMaisAlto)\r\n    mystr +=\"\\nMais Baixo   \\t%3d \\t%5.1f \\t%5.1f\" % (codMaisBaixo,pesoMaisBaixo,alturaMaisBaixo)\r\n    mystr +=\"\\nMais Magro   \\t%3d \\t%5.1f \\t%5.1f\" % (codMaisMagro,pesoMaisMagro,alturaMaisMagro)\r\n    mystr +=\"\\nMais Gordo   \\t%3d \\t%5.1f \\t%5.1f\" % (codMaisGordo,pesoMaisGordo,alturaMaisGordo)\r\n    mystr +=\"\\nMedia             \\t%5.1f \\t%5.1f\" % (mediaPeso,mediaAltura)\r\n  else:\r\n    mystr +=\"Nenhum cliente foi cadastrado no sistema.\"\r\n\r\n  return str(mystr)\r\n\r\nA=myRandom()\r\nmySimula = algorithm(A)  \r\n]]','QT','3','remember','yes','2019-03-04',1,3),(136,'teo q3','while-eleição','No primeiro turno de uma eleição presidencial no Brasil há três candidatos. Os votos são informados através de código. Os dados utilizados para a escrutinagem (contagem) obedecem à seguinte codificação:\r\n\r\n\\begin{description}[align=right,labelwidth=1.7cm] \\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item[1, 2, 3 =] voto para os respectivos candidatos;\r\n\\item[4 =] voto nulo;\r\n\\item[5 =] voto em branco.\r\n\\end{description}\r\n\r\n\\noindent \\textbf{OBS.:} Pelo critério da maioria absoluta, para ser eleito em primeiro turno, não basta ao candidato simplesmente obter mais votos do que seus concorrentes. Ele precisa ir além, devendo obter mais da metade dos votos válidos (excluídos os votos em branco e os votos nulos).\r\n\\\\\r\n\\\r\n\r\n\\noindent Elabore um algoritmo que calcule e escreva:\r\n\r\n\\begin{enumerate}[label=\\alph*)]  \\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Total de votos para cada candidato;\r\n\\item Total de votos nulos;\r\n\\item Total de votos em branco;\r\n\\item Percentual dos votos em branco e nulos sobre o total;\r\n\\item Informar se haverá segundo turno, ou não. Se não houver segundo turno, informar o candidato vencedor.\r\n\\end{enumerate}\r\n          \r\n\\noindent Como finalizador do conjunto de votos, tem-se o valor \\textbf{0} (zero).\r\n\r\n\\\r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n%\\drawLines{5}\r\n\r\n%\\drawLines{62}\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0\r\n  a0 = random.randrange(3, 5, 1)           # num\r\n  return [a0]\r\n\r\ndef algorithm(A):\r\n  voto=vc1=vc2=vc3=vnulo=vbranco=vvalidos=0\r\n  controle =1\r\n  ntotal=0.0\r\n  mystr = \"\"#                      voto\" \r\n  cont=0\r\n  while True:\r\n    cont+=1\r\n    voto = random.randrange(0, 6, 1)\r\n    #mystr +=\"\\ncandidato voto  \\t %5d\" % voto \r\n    if not voto and cont>100:\r\n      break\r\n    ntotal+=1\r\n    if voto==1:\r\n      vc1+=1\r\n    elif voto==2:\r\n      vc2+=1\r\n    elif voto==3:\r\n      vc3+=1\r\n    elif voto==4:\r\n      vnulo+=1\r\n    elif voto==5:\r\n      vbranco+=1\r\n     \r\n  if not ntotal:\r\n    mystr += \"Nenhum voto foi computato\"\r\n  else:\r\n    mystr+=\"Votos candidato 1 =  %5d\" % vc1\r\n    mystr += \"\\nVotos candidato 2 =  %5d\" % vc2\r\n    mystr += \"\\nVotos candidato 3 =  %5d\" % vc3\r\n    mystr += \"\\nVotos brancos     =  %5d\" % vbranco\r\n    mystr += \"\\nVotos nulos       =  %5d\" % vnulo\r\n    mystr += \"\\nPorcentagem de nulos e brancos=%5.1f\" % ((vbranco+vnulo)/ntotal*100)\r\n\r\n    vvalidos = vc1+vc2+vc3\r\n    if (vc1<=(0.5*vvalidos) and vc2<=(0.5*vvalidos) and vc3<=(0.5*vvalidos)):\r\n      mystr += \"\\nHavera segundo turno!\"\r\n    else:\r\n      if ( vc1>vc2):\r\n        if (vc1>vc3):\r\n          mystr += \" \\nCandidato 1 venceu\"\r\n        else: \r\n          if (vc1 == vc3):\r\n            mystr += \" \\nCandidato 1 e o candidato 3 empataram\"\r\n          else:\r\n            mystr += \" \\nCandidato 3 venceu\"\r\n      else:\r\n        if ( vc2>vc3):\r\n          mystr += \" \\nCandidato 2 venceu\"\r\n        else:\r\n          if  (vc2 ==vc3):\r\n            mystr += \" \\nCandidato 2 e o candidato 3 empataram\"\r\n          else:\r\n            mystr += \" \\nCandidato 3 venceu\"\r\n\r\n\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula = algorithm(A) \r\n  if 100<len(mySimula)<200:\r\n    #print mySimula\r\n    break\r\n]]','QT','3','remember','yes','2019-03-04',1,3),(137,'teo q3','while-conta energia3','Uma empresa de fornecimento de energia elétrica faz a leitura mensal dos medidores de consumo considerando a seguinte \\textbf{TABELA TARIFÁRIA}:\r\n\r\n\\begin{center}\r\n\\begin{tabular}{|c|c|p{3cm}|p{3cm}|}\r\n  \\hline\r\n  \\multicolumn{4}{|c|}{\\textbf{TABELA TARIFÁRIA}} \\\\ \\hline\r\n  CLASSE & FAIXA DE CONSUMO & TUSD($R\\$/kWh$) & TE ($R\\$/kWh$) \\\\ \\hline\r\n  \\multirow{3}{*}{1 - RESIDENCIAL} & Consumo mensal até $[[code:a3]] kWh$ & $0,06747$ & $0,08300$ \\\\\r\n                                   & Consumo mensal entre $[[code:a3+1]]$ e $[[code:a4]] kWh$ & $0,11566$ & $0,14229$ \\\\\r\n				   & Consumo mensal superior a $[[code:a4+1]] kWh$ & $0,17348$ & $0,21343$ \\\\ \\hline\r\n  \\multicolumn{2}{|l|}{2 - RURAL}  & $0,13927$ & $0,16600$ \\\\ \\hline\r\n  \\multicolumn{2}{|l|}{3 - DEMAIS CLASSES} & $0,19896$ & $0,23715$ \\\\ \\hline\r\n\\end{tabular}\r\n\\end{center}\r\n\r\n\\noindent Nesta tabela, temos duas taxas que insidem no valor a ser pago na conta de energia, conforme a CLASSE e a FAIXA DE CONSUMO: TUSD (Tarifa do Uso do Sistema de Distribuição) e TE (Tarifa de Energia). Para calcular o valor total a ser pago, basta fazer a conta \\texttt{CONSUMO*(TUSD+TE+TAXA)}, onde a TAXA é dada pela \\textbf{BANDEIRA TARIFÁRIA vigente} da geração de energia, que é dada pela seguinte regra:\r\n\r\n\\begin{center}\r\n\\begin{tabular}{|c|c|c|}\r\n  \\hline\r\n  \\multicolumn{3}{|c|}{\\textbf{BANDEIRAS TARIFÁRIAS}} \\\\ \\hline\r\n  BANDEIRA VERDE & BANDEIRA AMARELA & BANDEIRA VERMELHA \\\\ \\hline\r\n  Sem acréscimo na tarifa & Acréscimo de $R\\$[[code:a5/1000.0]]$ a cada $1 kW/h$ & Acréscimo de $R\\$[[code:a6/1000.0]]$ a cada $1 kW/h$ \\\\ \\hline\r\n\\end{tabular}\r\n\\end{center}\r\n\r\n\\noindent Faça um programa que dado o \\texttt{CONSUMO} em $kWh$ (real), dada a \\texttt{CLASSE} tarifária (inteiro: 1=RESIDENCIAL; 2=RURAL; 3=DEMAIS), a \\texttt{BANDEIRA TARIFÁRIA} vigente (inteiro: 1=VERDE; 2=AMARELA; 3=VERMELHA), mostre qual o total a ser pago pela distribuição e consumo de energia. Os dados devem ser lidos até que seja encontrado um consumidor com CLASSE 0 (zero). Calcular e imprimir como o exemplo abaixo.\r\n\r\n\\ \r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{5}\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5,a6\r\n  a0=a1=a2=0\r\n  a3 = random.randrange(20, 40, 1)   # consumo faixa 1\r\n  a4 = random.randrange(200, 240, 1) # consumo faixa 2\r\n  a5 = random.randrange(10, 30, 1) # TAXA faixa 1\r\n  a6 = random.randrange(40, 60, 1) # TAXA faixa 1\r\n  return [a0,a1,a2,a3,a4,a5,a6]\r\n\r\ndef algorithm(A):\r\n  mystr = \"\"\r\n  contClasse1=contClasse2=contClasse3=0\r\n  totalClasse1=totalClasse2=totalClasse3=0.0\r\n\r\n  while True:\r\n    classe     = random.randrange(0, 4, 1) # classe 1=res;2=ru;3=out\r\n    bandeira = random.randrange(0, 3, 1) # band 0=ver;1=amar;2=verm\r\n    consumo= random.randrange(10, 300, 1) # consumo\r\n    if classe==0:\r\n      break\r\n    if classe==1: # residencial\r\n      if consumo<=A[3]:\r\n        TUSD = 0.06747\r\n        TE = 0.083\r\n      elif consumo<=A[4]:\r\n        TUSD = 0.11566\r\n        TE = 0.14229		\r\n      else:\r\n        TUSD = 0.17348\r\n        TE = 0.21343	\r\n    if classe == 2: # rural\r\n      TUSD = 0.13927\r\n      TE = 0.166\r\n    if classe == 3: # outros\r\n      TUSD = 0.19896\r\n      TE = 0.23715\r\n    TAXA = 0 # bandeira verde\r\n    if bandeira == 1: # amarelo\r\n      TAXA = A[5]/1000.0\r\n    if bandeira == 2: # vermelho\r\n      TAXA = A[6]/1000.0\r\n    valor = consumo*(TUSD+TE+TAXA)\r\n    mystr += \"classe=%d bandeira=%d consumo=%3d valor=%7.2f\\n\" % (classe,bandeira,consumo,valor)\r\n    if classe==1: # residencial\r\n      contClasse1+=1\r\n      totalClasse1+=valor\r\n    elif classe==2: # rural\r\n      contClasse2+=1\r\n      totalClasse2+=valor\r\n    elif classe==3: # outros\r\n      contClasse3+=1\r\n      totalClasse3+=valor\r\n\r\n  mystr += \"consumo Total\\t= %7.2f\\n\" % (totalClasse1+totalClasse2+totalClasse3)\r\n  if contClasse1:\r\n    mystr += \"media Classe1\\t= %7.2f\\n\" % (totalClasse1/contClasse1)\r\n  else:\r\n    mystr += \"media Classe1\\t= %7.2f\\n\" % (0)\r\n  if contClasse2:\r\n    mystr += \"media Classe2\\t= %7.2f\\n\" % (totalClasse2/contClasse2)\r\n  else:\r\n    mystr += \"media Classe2\\t= %7.2f\\n\" % (0)\r\n  if contClasse3:\r\n    mystr += \"media Classe3\\t= %7.2f\\n\" % (totalClasse3/contClasse3)\r\n  else:\r\n    mystr += \"media Classe3\\t= %7.2f\\n\" % (0)\r\n\r\n    #mystr += \"consumo\\t= %d\\n\" % consumo\r\n    #mystr += \"TUSD \\t= %.5f\\n\" % TUSD\r\n    #mystr += \"TE   \\t= %.5f\\n\" % TE\r\n    #mystr += \"TAXA \\t= %.5f\\n\" % TAXA\r\n    #mystr += \"Valor\\t= %.2f\" % (consumo*(TUSD+TE+TAXA))\r\n        \r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula = algorithm(A) \r\n  if 200<len(mySimula)<250:\r\n    break\r\n]]','QT','5','remember','yes','2019-03-04',1,3),(138,'teo q3','while-promoção dado','Uma loja de departamento criou uma promoção de modo que cada cliente que gaste mais de [[code:a2]] reais em numa determinada compra terá direito a 2 jogadas de um dado de seis faces.\r\n\r\n\\noindent Escreva um programa para processar a promoção com base nas seguintes regras:\r\n\r\n\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Se conseguir a face 6 na primeira jogada o cliente ganha [[code:a3]] reais;\r\n\\item Se a soma das duas jogadas ultrapassar [[code:a1]] pontos o cliente ganha [[code:a4]] reais;\r\n\\item As duas jogadas são cumulativas em termos de premiação.\r\n\\end{itemize}\r\n\r\n\\noindent O programa deve ser encerrado quando o total da premiação do dia for esgotado (zerado). A loja complementará o prêmio do último participante caso o valor restante seja insuficiente.\r\n\r\n\\noindent Inicialmente o programa deve solicitar qual o total da premiação do dia disponível pela loja.\r\n\r\n\\noindent Para cada cliente da loja deve-se solicitar:\r\n\r\n\\begin{enumerate}[label=\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item O valor da compra;\r\n\\item A pontuação em cada jogada do dado (caso o mesmo esteja habilitado a participar da promoção).\r\n\\end{enumerate}\r\n\r\n\\noindent O programa deve formatar uma saída como segue, exibindo apenas os clientes com compras superiores a  [[code:a2]] reais:\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula1]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{50}\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4\r\n  a0 = random.randrange(1000,10000) # premio\r\n  a1 = random.randrange(9,12) # premio\r\n  a2 = random.randrange(50,400) # valor minimo\r\n  a3 = random.randrange(400,700) # premio1\r\n  a4 = random.randrange(800,1200) # premio2\r\n  return [a0,a1,a2,a3,a4]\r\n\r\ndef algorithm(A):\r\n  premio=A[0]\r\n  qmais10=qsetor6=total=0\r\n  mystr=\"valor tent1 tent2 total qmais qsetor6 premio\\n\"\r\n  while premio>0:\r\n    valor = random.randrange(A[2],1000)\r\n    tentativa1 = random.randrange(1,7)\r\n    tentativa2 = random.randrange(1,7)\r\n    if valor>A[2]:\r\n      if tentativa1==6:\r\n        premio-=A[3]\r\n      if (tentativa1+tentativa2)>A[1]:\r\n        premio-=A[4]\r\n        qmais10+=1\r\n      if tentativa1==6 or tentativa2==6:\r\n        qsetor6+=1\r\n      mystr+=\"%5d %5d %5d %5d %5d %7d %6d\\n\" % (valor,tentativa1,tentativa2,total,qmais10,qsetor6,premio)\r\n      total+=1\r\n\r\n  mystr+=\"\\nPremio                                     = %6d\" % (A[0])\r\n  mystr+=\"\\nTotal de participantes                     = %6d\" % (total)\r\n  mystr+=\"\\nClientes acertaram 6 na 1a tent.           = %6d\" % (qsetor6)\r\n  mystr+=\"\\nPorcentagem Clientes acertaram mais que %2d = %6.1f\" % (A[1],qmais10*100.0/total)\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula1 = algorithm(A)\r\n  if 400<len(mySimula1)<600:\r\n    #print mySimula1\r\n    break\r\n]]','QT','3','remember','yes','2019-03-05',1,3),(140,'teo q3','while-conta energia1','Uma empresa de fornecimento de energia elétrica faz a leitura mensal dos medidores de consumo. Para cada consumidor, são digitados os seguintes dados:\r\n\r\n\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Código do consumidor;\r\n\\item Quantidade de kWh consumidos durante o mês;\r\n\\item Classe (código) do consumidor, que pode assumir um dos seguintes valores: (1) Residencial (2) Comercial (3) Industrial.\r\n\\end{itemize}\r\n\r\n\\noindent Os valores a serem pagos por kWh, para cada classe de consumidor, estão apresentados na tabela a seguir:\r\n\r\n\\begin{table}[h!]\r\n\\centering\r\n\\begin{tabular}{|l|c|}\r\n\\hline\r\n\\textbf{Classe de consumidor} & \\textbf{Preço a ser pago por kWh} \\\\ \\hline\r\n(1) Residencial             & R\\$ [[code:a0]]                           \\\\ \\hline\r\n(2) Comercial               & R\\$ [[code:a1]]                           \\\\ \\hline\r\n(3) Industrial                & R\\$ [[code:a2]]                           \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\noindent Os dados devem ser lidos até que seja encontrado um consumidor com código 0 (zero).  Calcular e imprimir como o exemplo abaixo.\r\n\r\n\\ \r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{50}\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2\r\n  a0=random.randrange(10, 30, 1)/10.0     # consumo faixa 1\r\n  a1=random.randrange(30, 40, 1)/10.0     # consumo faixa 2\r\n  a2=random.randrange(40, 60, 1)/10.0     # consumo faixa 3\r\n  return [a0,a1,a2]\r\n\r\ndef algorithm(A):\r\n  mystr = \"\"\r\n  contClasse1=contClasse2=contClasse3=0\r\n  totalClasse1=totalClasse2=totalClasse3=0.0\r\n\r\n  while True:\r\n    classe     = random.randrange(0, 4, 1) # classe 1=res;2=ru;3=out\r\n    consumo= random.randrange(1, 300, 1) # consumo\r\n    if classe==0:\r\n      break\r\n    if classe==1: # residencial\r\n      valor = consumo*A[0]\r\n      contClasse1+=1\r\n      totalClasse1+=valor\r\n    elif classe==2: # rural\r\n      valor = consumo*A[1]\r\n      contClasse2+=1\r\n      totalClasse2+=valor\r\n    elif classe==3: # outros\r\n      valor = consumo*A[2]\r\n      contClasse3+=1\r\n      totalClasse3+=valor\r\n    mystr += \"classe=%d consumo=%3d valor=%7.2f\\n\" % (classe,consumo,valor)\r\n\r\n  mystr += \"consumo Total\\t= %7.2f\\n\" % (totalClasse1+totalClasse2+totalClasse3)\r\n  if contClasse1:\r\n    mystr += \"media Classe1\\t= %7.2f\\n\" % (totalClasse1/contClasse1)\r\n  else:\r\n    mystr += \"media Classe1\\t= %7.2f\\n\" % (0)\r\n  if contClasse2:\r\n    mystr += \"media Classe2\\t= %7.2f\\n\" % (totalClasse2/contClasse2)\r\n  else:\r\n    mystr += \"media Classe2\\t= %7.2f\\n\" % (0)\r\n  if contClasse3:\r\n    mystr += \"media Classe3\\t= %7.2f\\n\" % (totalClasse3/contClasse3)\r\n  else:\r\n    mystr += \"media Classe3\\t= %7.2f\\n\" % (0)\r\n        \r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula = algorithm(A) \r\n  if 200<len(mySimula)<250:\r\n    break\r\n]]','QT','3','remember','yes','2019-03-05',1,3),(141,'teo q3','while-promoção alvo','Uma loja de departamento criou uma promoção de modo que cada cliente que gaste mais de [[code:a2]] reais em uma determinada compra terá direito a 2 tentativas no ``tiro ao alvo\". O ``alvo\" \\ é marcado com números de 5 (mais distante), 6, 7, 8, 9 e 10 (acertou o alvo) indicando a pontuação conforme o local de acerto da flecha. A pontuação mínima para qualquer tentativa é 5. Escreva um programa para processar a promoção com base nas seguintes regras:\r\n\r\n\\begin{itemize} \\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Se acertar no setor 10 \\ na primeira tentativa o cliente ganha [[code:a3]] reais. \r\n\\item Se a soma das duas tentativas ultrapassar [[code:a1]] pontos o cliente ganha [[code:a4]] reais. \r\n\\item As duas tentativas são cumulativas em termos de premiação.\r\n\\item O programa deve ser encerrado quando o total da premiação do dia for esgotado (zerado). \r\n\\item A loja complementará o prêmio do último participante caso o valor restante seja insuficiente. \r\n\\end{itemize}\r\n\r\n\\noindent Inicialmente o programa deve solicitar qual o total da premiação do dia disponível pela loja.\r\nPara cada cliente da loja deve-se solicitar:\r\n\r\n\\begin{enumerate}[label=\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item O valor da compra;\r\n\\item A pontuação em cada tentativa de tiro (caso o mesmo esteja habilitado a participar da promoção).\r\n\\end{enumerate}\r\n\r\n\\noindent O programa deve formatar uma saída como segue, exibindo apenas os clientes com compras superiores a  [[code:a2]] reais:\r\n\r\n\\small{\r\n\\begin{verbatim}\r\n[[code:mySimula1]]\r\n\\end{verbatim}\r\n\r\n\\noindent\\textbf{Legenda:}\r\n\r\n\\begin{verbatim}\r\nValor: valor da compra\r\nTent1: pontos na primeira tentativa\r\nTent2: pontos na segunda tentativa\r\nQmais:  Quantidade de clientes que totalizaram mais de  [[code:a1]] pontos (até o momento)\r\nQsetor10: Quantidade de clientes que acertaram no setor 10 (até o momento)\r\nPremio: Saldo do prêmio (até o momento), descontando-se os prêmios pagos\r\n\\end{verbatim}\r\n}\r\n\r\n\\drawLines{47}\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4\r\n  a0 = random.randrange(1000,10000) # premio\r\n  a1 = random.randrange(16,20) # premio\r\n  a2 = random.randrange(50,400) # valor minimo\r\n  a3 = random.randrange(400,700) # premio1\r\n  a4 = random.randrange(800,1200) # premio2\r\n  return [a0,a1,a2,a3,a4]\r\n\r\ndef algorithm(A):\r\n  premio=A[0]\r\n  qmais18=qsetor10=total=0\r\n  mystr=\"Valor Tent1 Tent2 Qmais Qsetor10 Premio\\n\"\r\n  while premio>0:\r\n    valor = random.randrange(A[2],1000)\r\n    tentativa1 = random.randrange(5,11)\r\n    tentativa2 = random.randrange(5,11)\r\n    if valor>A[2]:\r\n      if tentativa1==10:\r\n        premio-=A[3]\r\n      if (tentativa1+tentativa2)>A[1]:\r\n        premio-=A[4]\r\n        qmais18+=1\r\n      if tentativa1==10 or tentativa2==10:\r\n        qsetor10+=1\r\n      mystr+=\"%5d %5d %5d %5d %8d %6d\\n\" % (valor,tentativa1,tentativa2,qmais18,qsetor10,premio)\r\n      total+=1\r\n\r\n  mystr+=\"\\nPremio                                     = %6d\" % (A[0])\r\n  mystr+=\"\\nTotal de participantes                     = %6d\" % (total)\r\n  mystr+=\"\\nClientes acertaram setor10                 = %6d\" % (qsetor10)\r\n  mystr+=\"\\nPorcentagem Clientes acertaram mais que %d = %6.1f\" % (A[1],qmais18*100.0/total)\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula1 = algorithm(A)\r\n  if 400<len(mySimula1)<600:\r\n    #print mySimula1\r\n    break\r\n]]','QT','3','remember','yes','2019-03-05',1,3),(142,'teo q3','for-série;resto;maior/menor','Escreva um programa que solicita ao usuário dois números inteiros estritamente positivos (maiores que zero). Não precisa fazer a validação dos dados de entrada, isto é, suponha que os dois números informados sejam ambos estritamente positivos. Faça um programa que calcule e escreva o valor da fórmula a seguir, onde $n$ é o número lido cujo resto da divisão por $[[code:a0]]$ é \\textbf{[[code:a3]]}. Se os dois restos em questão forem iguais, a saída do programa deverá ser a seguinte mensagem: ``Restos iguais\".\r\n\r\n\\begin{equation*}\r\n\\frac{1}{n}+\\frac{2}{(n-1)}+\\frac{3}{(n-2)}+ \\cdots +\\frac{n}{1}\r\n\\end{equation*}\r\n\r\n\\\r\n\r\n\\noindent\\textbf{Exemplos:}\r\n\\begin{verbatim}\r\n[[code:mySimula1]]\r\n\r\n[[code:mySimula2]]\r\n\\end{verbatim}\r\n\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,oper\r\n\r\n  a0 = random.randrange(2,10) # div\r\n  a1 = random.randrange(1,10) # n1\r\n  a2 = random.randrange(1,10) # n2\r\n\r\n  oper = [\"menor\",\"maior\"]     # aparece no texto\r\n  a3 = random.choice(oper)   # sortear um\r\n\r\n  return [a0,a1,a2,a3]\r\n\r\ndef algorithm(A):\r\n  global correctAnswer\r\n  n1=A[1]\r\n  n2=A[2]\r\n  resto1 = n1%A[0]\r\n  resto2 = n2%A[0]\r\n  mystr=\"\"\r\n  soma = 0.0\r\n\r\n  mystr+=\"n1=%d n2=%d div=%d resto1=(%d/%d)=%d resto2=(%d/%d)=%d\\n\" % (n1,n2,A[0],n1,A[0],resto1,n2,A[0],resto2)\r\n\r\n  if resto1==resto2:\r\n    mystr+=\"Restos iguais\\n\"\r\n  else:\r\n    if A[3]==oper[0]: # menor\r\n      if resto1<resto2:\r\n        n = n1\r\n      else:\r\n        n = n2\r\n    else: # maior\r\n      if resto1>resto2:\r\n        n = n1\r\n      else:\r\n        n = n2\r\n\r\n    mystr+=\"n=%d\\n\" % (n)\r\n\r\n    for i in range(1,n+1):\r\n      soma+=float(i/(n+1-i))\r\n\r\n    correctAnswer = soma\r\n    mystr+=\"Valor da serie = %8.1f\\n\" % soma\r\n  return str(mystr)\r\n\r\nA=myRandom()\r\nmySimula1 = algorithm(A)\r\n#print mySimula1\r\n\r\nA1=myRandom()\r\na0=A1[0]=A[0]\r\na3=A1[3]=A[3]\r\nmySimula2 = algorithm(A1)\r\n#print mySimula2\r\n]]\r\n\r\n%Exemplo 1: se o usuário digitar os números $5$ e $6$, teríamos:\r\n%\\begin{center}\r\n%resto de $5/4 = 1$ \\\\\r\n%resto de $6/4 = 2$\r\n%\\end{center}\r\n\r\n%Portanto, como o resto de $5/4$ é menor do que o resto de $6/4$, o seu programa deverá calcular a seguinte fórmula (nesse exemplo específico $n=5$):\r\n\r\n%\\begin{equation*}\r\n%(\\frac{1}{5})+(\\frac{2}{4})+(\\frac{3}{3})+(\\frac{4}{2})+(\\frac{5}{1})\r\n%\\end{equation*}\r\n\r\n%Portanto, a saída do seu programa deverá ser:  \"O valor da fórmula é $8.7$\".\r\n\r\n%Exemplo 2:  se o usuário digitar os números $8$ e $4$, teríamos:\r\n\r\n%\\begin{center}\r\n%resto de $8/4 = 0$ \\\\\r\n%resto de $4/4 = 0$\r\n%\\end{center}\r\n\r\n%Portanto, como nesse caso o resto de $8/4$ é igual ao resto de $4/4$, o seu programa deverá escrever: \r\n\r\n%\\begin{center}\r\n%\"Os restos são iguais\"\r\n%\\end{center}\r\n\r\n%\\drawLines{55}','QT','3','remember','yes','2019-03-05',1,3),(143,'teo q3','while-aumento salário','Escreva um programa que receba via teclado o valor do salário e a idade dos ``n\'\'  funcionários de uma empresa. O valor de  ``n\'\' é desconhecido e deverá ser informado pelo usuário.\r\n\r\n\\noindent Você deve obrigatoriamente fazer a validação de dados do salário, que deve estar entre [[code:a1]] e [[code:a2]] reais (inclusive). Ou seja, se o usuário informar um salário fora dessa faixa, ele deverá digitar novamente o salário até informar o salário correto. Análogo para validar a idade entre [[code:a3]] e [[code:a4]] anos. O programa não pode prosseguir com um valor inválido. O seu programa deve:\r\n\r\n\\begin{enumerate}[label=\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item exibir qual valor do maior salário\r\n\\item exibir quantos funcionários da empresa tem entre [[code:a7]] e [[code:a7+5]] anos (inclusive) e quantos tem mais de [[code:a8]] anos\r\n\\item exibir o valor médio dos salários dos funcionários acima de [[code:a8]] anos\r\n\\item exibir o valor total de bônus (soma de todos os funcionários) concedido pela empresa, sabendo que apenas os funcionários com salário abaixo de [[code:a5]] reais receberão o bônus de [[code:a6]]\\%\r\n\\end{enumerate}\r\n\r\n\\\r\n\r\n\\\\\r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{50}\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5,a6,a7,a8\r\n  a0 = random.randrange(2, 10)          # n\r\n  a1 = random.randrange(800, 900)         # faixa1\r\n  a2 = random.randrange(20000, 30000) # faixa2\r\n  a3 = random.randrange(15, 19)             # faixa1\r\n  a4 = random.randrange(65, 75)             # faixa2\r\n  a5 = random.randrange(1800, 2000) # faixa bonus\r\n  a6 = random.randrange(5, 25)     # bonus\r\n  a7 = random.randrange(18, 21)\r\n  a8 = random.randrange(40, 50)\r\n  return [a0,a1,a2,a3,a4,a5,a6,a7,a8]\r\n\r\ndef algorithm(A):\r\n  n=A[0]\r\n  maiorSal=somaSal=total=contFaixa1=contFaixa2=somaFaixa=contFaixa=totalBonus=0\r\n  menorSal=100000\r\n  mystr=\"idade salario\\n\"\r\n  for i in range(n):\r\n    while True:\r\n      salario = random.randrange(800, 5000) \r\n      if A[1]<salario<A[2]:\r\n        break\r\n    while True:\r\n      idade = random.randrange(15, 75) \r\n      if A[3]<idade<A[4]:\r\n        break\r\n    somaSal+=salario\r\n    if maiorSal<salario:\r\n      maiorSal = salario\r\n    if idade>A[8]:\r\n      somaFaixa+=salario\r\n      contFaixa+=1\r\n    if A[7]<=idade<=A[7]+5:\r\n      contFaixa1+=1    \r\n    if idade>A[8]:\r\n      contFaixa2+=1\r\n    if salario<A[5]:\r\n      bonus=salario*(A[6]/100.0)\r\n      salarioBonus=salario+bonus\r\n      totalBonus+=bonus\r\n    mystr += \"  %d  %7.1f\\n\" % (idade,salario)\r\n\r\n  mystr += \"\\nmaior salario                            = %7.1f\\n\" % maiorSal\r\n  mystr += \"func. entre %d e %d anos                 = %5d\\n\" % (A[7],A[7]+5,contFaixa1)\r\n  mystr += \"func. com mais de %d anos                = %5d\\n\" % (A[8],contFaixa2)\r\n  if contFaixa:\r\n    mystr += \"media dos sal. func. com mais de %2d anos = %7.1f\\n\" % (A[8],(somaFaixa/contFaixa))\r\n  else:\r\n    mystr += \"media dos sal. func. com mais de %2d anos = %7.1f\\n\" % (A[8],0)\r\n\r\n  mystr += \"bonus total                              = %7.1f\" % totalBonus\r\n\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula = algorithm(A) \r\n  if 320<len(mySimula)<350:\r\n    #print mySimula \r\n    break\r\n]]','QT','3','remember','yes','2019-03-05',1,3),(145,'teo q1','if-maior/menor resto de 3 int','Elabore um programa para ler 3 números inteiros. O programa deve imprimir apenas o \\textbf{[[code:a0]]} resto desses números por [[code:a4]].\r\n\r\n\\\r\n\r\n\\noindent\\textbf{Exemplo:}\\\\\r\nEntradas: n1=[[code:a1]], n2=[[code:a2]], n3=[[code:a3]] e resto=[[code:a4]]\\\\\r\nSaída: [[code:correctAnswer]]\r\n\r\n\\\r\n\r\n[[def:\r\n\r\noper = [\"menor\",\"maior\"]     # aparece no texto\r\na0 = random.choice(oper)   # sortear um\r\n\r\na1 = random.randrange(1,9,1) # n1\r\na2 = random.randrange(1,9,1) # n2\r\na3 = random.randrange(1,9,1) # n3\r\na4 = random.randrange(2,5,1) # resto\r\n\r\nglobal correctAnswer, A\r\nA = [a1,a2,a3]\r\n\r\nif a0==oper[0]:\r\n    correctAnswer = min(np.array(A)%a4)\r\nelse:\r\n    correctAnswer = max(np.array(A)%a4)\r\n]]','QT','1','remember','yes','2019-03-08',1,2),(147,'lab q1','Expressão','Criar uma classe \\texttt{Expressao} que contém o método \\texttt{main} para calcular a fórmula abaixo a partir das variáveis reais \\texttt{[[code:a1]]} e \\texttt{[[code:a2]]}:\r\n\r\n\\begin{equation*}\r\n [[code:myEquation]]\r\n\\end{equation*}\r\n\r\nEntrar com as variáveis através da classe \\ \\texttt{Scanner} \\ ou \\ \\texttt{JOptionPane}. \\ Mostrar o resultado através do método \\ \\texttt{System.out.printf}, com 3 casas decimais.\r\n\r\n\\ \r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\nimport random,math,numpy\r\n\r\nletter = np.array([\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\"])     # aparece no texto\r\na0 = random.choice(letter)    # sortear um\r\nletter1 = letter[letter!=a0]  # retira a0\r\na1 = random.choice(letter1)   # sortear um\r\nletter2 = letter1[letter1!=a1]# retira a1\r\na2 = random.choice(letter2)\r\n\r\n# exemplos\r\na3 = random.randrange(10,99)/10.0 # n1\r\na4 = random.randrange(10,99)/10.0 # n2\r\n\r\nmySimula = \'\'\r\nmySimula += \" %s = %6.3f \\n\" % (a1,a3)\r\nmySimula += \" %s = %6.3f \\n\" % (a2,a4)\r\n\r\nmyEq1 = \"%s = \\\\frac{ %s ^2} {5 \\sqrt{ %s %s} }\" % (a0,a1,a2,a1)\r\nmyEq2 = \"%s = \\\\frac{ 1 - exp(-%s / %s)} {%s }\" % (a0,a1,a2,a2)\r\nmyEq3 = \"%s = \\\\frac{ \\sqrt{%s^2 + %s^2} } {5 %s %s}\" % (a0,a1,a2,a1,a2)\r\nmyEq4 = \"%s = \\\\frac{ %s ^2 + 8} {\\sqrt{ %s^3 + %s} }\" % (a0,a1,a1,a2)\r\n\r\nmyEquations = numpy.array([myEq1,myEq2,myEq3,myEq4])\r\n\r\nmyEquation = random.choice(myEquations)\r\n\r\ni, = numpy.where(myEquations == myEquation)\r\nif i==0:\r\n  a5 = a3*a3/(5*math.sqrt(a3*a4))  # resultado Eq1\r\nelif i==1:\r\n  a5 = (1-math.exp(-a3/a4)) / (2*a4)  # resultado Eq2\r\nelif i==2:\r\n  a5 = math.sqrt(a3*a3 + a4*a4) / (5*a3*a4)  # resultado Eq3\r\nelif i==3:\r\n  a5 = (a3*a3+8)/math.sqrt(a3*a3*a3 + a4)  # resultado Eq4\r\n\r\nmySimula += \" %s = %6.3f \\n\" % (a0,a5)\r\n\r\n]]','QT','1','remember','yes','2019-03-15',1,1),(148,'cmmi','CMMI','Quem está envolvido em treinar/avaliar a equipe de desenvolvimento de software a determinar quais requisitos eles precisam e a construir o Software necessário para atender estes requisitos? Assinale a MELHOR resposta.','QM','1','remember','no','2019-03-15',1,22),(149,'','OO ligação tardia','Em linguagens orientadas a objetos, os conceitos de ligação tardia e sobrecarga de métodos referem-se a:','QM','3','remember','no','2019-03-15',1,23),(150,'','Padrão façade','Um determinado padrão de projeto fornece uma interface unificada para um conjunto de interfaces em um subsistema. Esse padrão também define uma interface de nível mais alto que torna o subsistema mais fácil de ser usado. O referido padrão de projeto é denominado:','QM','3','remember','no','2019-03-15',1,24),(151,'','Padrão singleton','O padrão de projeto singleton é usado para restringir:','QM','3','remember','no','2019-03-15',1,24),(152,'uml','UML estrutural','Assinale a alternativa que apresenta um exemplo de diagrama de estruturas da UML:','QM','1','remember','no','2019-03-15',1,25),(153,'','boa arquitetura','Qual é a melhor resposta para uma boa arquitetura de componentes?','QM','1','remember','no','2019-03-15',1,26),(154,'','RUP','Por que existem tantos modelos visuais na UML? O RUP tem que usar UML?','QM','1','remember','no','2019-03-15',1,27),(155,'','R: consulta interna','NÃO é um valor de domínio de informação usado na métrica ponto por função:','QM','2','remember','no','2019-03-15',1,28),(156,'','R: EE','A análise por pontos de função constitui uma técnica utilizada para medição da estimativa de esforço no desenvolvimento de software. Um dos tipos de componentes básicos dessa análise introduz dados externos para dentro do domínio do software sob análise. Esse componente é denominado','QM','2','remember','no','2019-03-15',1,28),(157,'pf02','R: AIE','O agrupamento lógico de dados relacionados ou informações de controle referenciadas por uma aplicação e que residem dentro dos limites de outra aplicação é um:','QM','2','remember','no','2019-03-15',1,28),(158,'','R: EE e CE','Na métrica de software conhecida como Ponto por Função, são considerados valores do domínio da informação. Dois desses domínios são: o número de','QM','2','remember','no','2019-03-15',1,28),(159,'pf02','R: AIE','Durante o processo de estimativa de um software em Pontos por Função, você identificou que não há qualquer interface com outra aplicação. Neste caso, qual dos itens a seguir são desprezíveis na contagem dos pontos por função não ajustados?','QM','2','remember','no','2019-03-15',1,28),(160,'','Ex: CE=login','Para determinar o tamanho do software, de acordo com a AFP, devem ser seguidos procedimentos de contagem compostos por várias etapas. Na etapa de contagem das funções de transação, são definidas as Entradas Externas (EE), Saídas Externas (SE) e Consultas Externas (CE). Dentre os exemplos de CE estão','QM','2','remember','no','2019-03-15',1,28),(161,'','R: EE e ALI','Analise as seguintes afirmativas sobre a métrica de análise de pontos de função;\r\nI. Entradas Externas se originam de um usuário ou são transmitidas de outra aplicação para fornecer dados distintos orientados à aplicação do software;\r\nII. Saídas Externas são originadas de uma entrada on-line para geração de alguma resposta imediata do software sob a forma de uma saída on-line;\r\nIII. Arquivos lógicos internos são agrupamentos lógicos de dados que residem dentro das fronteiras da aplicação e são mantidos por Entradas Externas.','QM','2','remember','no','2019-03-15',1,28),(163,'','R: EE,CE,SE,ALI,AIE','A métrica de software chamada Pontos por Função usa uma relação empírica baseada em medidas de contagem (direta) do domínio de informação do software e avaliação da complexidade do software . Assinale a alternativa que define corretamente as características do domínio para o cálculo da métrica Pontos por Função.','QM','2','remember','no','2019-03-15',1,28),(164,'','R: esforço','Na Análise de Pontos de Função, são contados diversos componentes, dentre os quais NÃO se encontra(m):','QM','2','remember','no','2019-03-15',1,28),(166,'pf01','R: medir custo...','Uma das utilizações mais comuns da Análise de Pontos de Função (APF), no Brasil, tem sido para:','QM','2','remember','no','2019-03-15',1,28),(167,'pf01','R: medir tamanho...','A técnica de Análise por Pontos de Função','QM','2','remember','no','2019-03-15',1,28),(168,'','Teste20','Tipo de teste que consiste em aplicar em cada nova versão de um software todos os testes que já foram aplicados nas versões anteriores, possibilitando a identificação dos impactos das implementações da nova versão em funcionalidades que já foram testadas anteriormente e não foram modificadas, é denominado','QM','1','remember','no','2019-03-15',1,29),(169,'','Teste21','O teste é fundamental quando se deseja atingir uma qualidade mínima no desenvolvimento de um software. Dentre os tipos de testes existentes, o Teste de Regressão é aquele que','QM','1','remember','no','2019-03-15',1,29),(170,'','Teste22','Um profissional está trabalhando no processo de testes de desenvolvimento de um software orientado a objetos. Inicialmente, realizou o teste das funcionalidades dos objetos ou métodos das classes individualmente. Em seguida, integrou várias unidades individuais criando elementos compostos e testou as interfaces desses elementos. Para concluir a bateria de testes, integrou todos os componentes do software e testou a integração entre eles como um todo. Os testes realizados pelo profissional foram testes','QM','1','remember','no','2019-03-15',1,29),(171,'','Teste23','Existem alguns testes indispensáveis para se avaliar o desempenho de uma aplicação web. Os testes visam a avaliação comportamental da aplicação em si e da infraestrutura de rede e servidores que a hospedam em relação à aspectos de demanda e upgrades. Dentre os testes considerados fundamentais, qual das opções abaixo NÃO é verdadeira?','QM','1','remember','no','2019-03-15',1,29),(172,'','Teste24','Os testes de software devem exibir um conjunto de características que atinja o objetivo de encontrar a maioria dos erros com o menor esforço. Dentre os diferentes tipos de teste estão os testes de caixa preta e de caixa branca. Sobre estes testes, é correto afirmar:','QM','1','remember','no','2019-03-15',1,29),(173,'','Teste25','Assinale a alternativa que preenche corretamente os xxxx do enunciado abaixo, na ordem em que  aparecem.\r\nO objetivo do teste de software é descobrir erros. Para alcançar esse objetivo, uma série de passos de testes é planejada e executada. Os testes de xxxx e de xxxx concentram-se na verificação funcional de um componente e na incorporação de componentes em uma estrutura de programa. Os testes de xxxx demonstram a rastreabilidade aos requisitos do software , e os testes de xxxx validam o software depois de ter sido incorporado a um sistema maior.','QM','1','remember','no','2019-03-15',1,29),(174,'','Teste26','No Tribunal de Justiça do Estado do Amapá, um software está passando por um teste no qual são verificadas as suas funcionalidades sem preocupação com os detalhes de implementação. Nesse processo de teste estão sendo realizadas a identificação das funcionalidades que o software deve realizar e a criação dos casos de testes capazes de checar se essas funcionalidades estão sendo realizadas adequadamente. Trata-se do teste','QM','1','remember','no','2019-03-15',1,29),(175,'','Teste27','Sobre a técnica de teste de software conhecida como caminhos independentes de programa, é correto afirmar que cada caminho independente','QM','1','remember','no','2019-03-15',1,29),(176,'','Teste28','O planejamento dos testes deve ocorrer em diferentes níveis e em paralelo com o desenvolvimento do software. Com relação a esse assunto, analise modelo V apresentado em aula descrevendo o paralelismo entre as atividades de desenvolvimento e teste de software.\r\nQual o primeiro teste realizado após a fase de Código e qual é o último tipo de teste realizado:','QM','1','remember','no','2019-03-15',1,29),(177,'','Teste29','A verificação e a validação são duas atividades de grande importância no desenvolvimento de um software, sobre as quais é correto afirmar que','QM','1','remember','no','2019-03-15',1,29),(178,'','Teste30','Há uma técnica de teste de software chamada de teste de recuperação, que tem como premissa','QM','1','remember','no','2019-03-15',1,29),(179,'','Teste31','Pedro trabalha como analista de teste de software na empresa ABC e foi designado por seu chefe a fazer o teste das estruturas de seleção if e case e das estruturas de repetição while e repeat de um programa em pelo menos duas situações: quando a condição é verdadeira e quando a condição é falsa. Foi incumbido também de testar as estruturas de repetição for quando a variável que limita o número de repetições assume um valor mínimo e quando ela assume um valor máximo. Para realizar o trabalho definido, Pedro deve utilizar um teste de XXXX, conduzido como um teste do tipo YYYY. As lacunas X e Y são preenchidas, correta e respectivamente, por:','QM','1','remember','no','2019-03-15',1,29),(180,'','p1 auto peças','Considere o seguinte sistema: Uma loja de auto peças de  [[code:a0]] deseja automatizar o processo de atendimento aos clientes e de pedidos de compra de produtos para os fornecedores. No sistema, deseja-se ter um cadastro de produtos, de clientes, de funcionários e de fornecedores para uma melhor automação. O sistema permite emitir o comprovante de pedido para o cliente (após o pagamento do cliente) e para fornecedores, além de oferecer ao gerente a possibilidade de imprimir relatórios diários, semanais, mensais e anuais da movimentação da loja de auto peças de  [[code:a0]]. Pede-se:\r\n\\vspace{-3mm}\r\n\\begin{enumerate}[label=\\alph*)]  \\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Fazer o IDEF0, níveis 0 e 1 do sistema;\r\n\\item Fazer o Diagrama de Classes da camada de negócio (Model);\r\n\\item Fazer dois mapas de componentes (arquitetura de software): um para o item (a) e outro para o item (b). Justifique se ocorre ou não a independência funcional;\r\n\\item Qual seria o tipo arquitetural mais indicado considerando estes dois mapas? Justifique;\r\n\\item Defina um modelo o mais complete possível para especificar um componente.\r\n\\end{enumerate}\r\n\r\n%\\begin{enumerate}[label=\\alph*)]  \\itemsep0pt\\parskip0pt\\parsep0pt\r\n%\\item Fazer o Diagrama de Classes da camada de negócio (Model);\r\n%\\item Fazer três mapas de componentes (arquitetura de software): um para o item (a) e os outros para as camadas View e Control. Justifique se ocorre ou não a independência funcional;\r\n%\\item Explique as possíveis formas de teste de integração nos mapas dos itens b e c;\r\n%\\item Especificar um caso de teste de \\textbf{caixa branca}, com pelo menos dois nós predicados (usar teste de caminho básico).\r\n%\\end{enumerate}\r\n          \r\n%\\drawLines{62}\r\n\r\n[[def:\r\noper = [\"carro\",\"caminhão\",\"bicicleta\",\"trator\"]     # aparece no texto\r\na0 = random.choice(oper)   # sortear um\r\n]]','QT','5','remember','yes','2019-03-15',1,30),(182,'','p2 farmácia','Considere o seguinte sistema: Uma farmácia deseja automatizar o processo de atendimento aos clientes e de pedidos de compra de produtos para os fornecedores. No sistema, deseja-se ter um cadastro de remédios, de clientes, de funcionários e de fornecedores para uma melhor automação. O sistema permite emitir o comprovante de pedido para o cliente (após o pagamento do cliente) e para fornecedores, além de oferecer ao gerente a possibilidade de imprimir relatórios diários, semanais, mensais e anuais da movimentação da farmácia. Pede-se:\r\n\\vspace{-3mm}\r\n\\begin{enumerate}[label=\\alph*)]  \\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Fazer o Diagrama de Classes da camada de negócio (Model);\r\n\\item Fazer três mapas de componentes (arquitetura de software): um para o item (a) e os outros para as camadas View e Control. Justifique se ocorre ou não a independência funcional;\r\n\\item Explique as possíveis formas de teste de integração nos mapas dos itens b e c;\r\n\\item Especificar um caso de teste de \\textbf{caixa branca}, com pelo menos dois nós predicados (usar teste de caminho básico).\r\n\\end{enumerate}\r\n          \r\n%\\drawLines{62}','QT','5','remember','no','2019-03-15',1,30),(183,'','p2 mercearia','Considere o seguinte sistema:  Um [[code:a0]] deseja automatizar o processo de atendimento aos clientes e de pedidos de compra de produtos para os fornecedores.  No sistema, deseja-se ter um cadastro de produtos, de clientes, de funcionários e de fornecedores para uma melhor automação. O sistema permite emitir o comprovante de pedido para o cliente (após o pagamento do cliente) e para fornecedores, além de oferecer ao gerente a possibilidade de imprimir relatórios diários, semanais, mensais e anuais da movimentação do  [[code:a0]]. Pede-se:\r\n\\vspace{-3mm}\r\n\\begin{enumerate}[label=\\alph*)]  \\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Fazer o Diagrama de Classes da camada de negócio (\\textit{Model}). Fazer uma herança em pedido do cliente e pedido do fornecedor;\r\n\\item Fazer três mapas de componentes (arquitetura de software): um para o item (a) e os outros para as camadas \\textit{View} e \\textit{Control}. Justifique se ocorre ou não a independência funcional;\r\n\\item Explique as possíveis formas de teste de integração nos mapas dos item (b);\r\n\\item Temos três mapas de componentes, um para cada nível da arquitetura de software MVC. Explique como seria possível criar um quarto mapa de componentes, integrando esses três do MVC;\r\n\\item Especificar um caso de teste de \\textbf{caixa branca}, com pelo menos dois nós predicados (usar teste de caminho básico).\r\n\\end{enumerate}\r\n          \r\n%\\drawLines{62}\r\n\r\n\r\n[[def:\r\noper = [\"supermercado\",\"mercado\",\"hipermercado\"]     # aparece no texto\r\na0 = random.choice(oper)   # sortear um\r\n]]','QT','5','remember','yes','2019-03-15',1,30),(184,'','p2 pizzaria','Considere o seguinte sistema: Uma pizzaria deseja automatizar o processo de atendimento web aos clientes e de pedidos de compra de produtos para os fornecedores. No sistema, deseja-se ter um cadastro de pizzas (menu), de clientes e de fornecedores para uma melhor automação. A pizza é entregue por um motoboy. O sistema permite emitir o comprovante de pedido para o cliente (após o pagamento do cliente) e para fornecedores, além de oferecer ao gerente a possibilidade de imprimir relatórios diários, semanais, mensais e anuais da movimentação da pizzaria. Pede-se:\r\n\\vspace{-3mm}\r\n\\begin{enumerate}[label=\\alph*)]  \\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Fazer o Diagrama de Classes da camada de negócio (\\textit{Model}). Fazer uma herança em pedido do cliente e pedido do fornecedor;\r\n\\item Fazer três mapas de componentes (arquitetura de software): um para o item (a) e os outros para as camadas \\textit{View} e \\textit{Control}. Justifique se ocorre ou não a independência funcional;\r\n\\item Explique as possíveis formas de teste de integração nos mapas dos item (b);\r\n\\item Temos três mapas de componentes, um para cada nível da arquitetura de software MVC. Explique como seria possível criar um quarto mapa de componentes, integrando esses três do MVC;\r\n\\item Especificar um caso de teste de \\textbf{caixa branca}, com pelo menos dois nós predicados (usar teste de caminho básico).\r\n\\end{enumerate}\r\n          \r\n%\\drawLines{62}','QT','5','remember','no','2019-03-15',1,30),(185,'','p2 supermercado','Considere o seguinte sistema: Um supermercado deseja automatizar o processo de atendimento aos clientes e de pedidos de compra de produtos para os fornecedores. No sistema, deseja-se ter um cadastro de produtos, de clientes, de funcionários e de fornecedores para uma melhor automação. O sistema permite emitir o comprovante de pedido para o cliente (após o pagamento do cliente) e para fornecedores, além de oferecer ao gerente a possibilidade de imprimir relatórios diários, semanais, mensais e anuais da movimentação do supermercado. Pede-se:\r\n\\vspace{-3mm}\r\n\\begin{enumerate}[label=\\alph*)]  \\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Fazer o Diagrama de Classes da camada de negócio (Model);\r\n\\item Fazer três mapas de componentes (arquitetura de software): um para o item (a) e os outros para as camadas View e Control. Justifique se ocorre ou não a independência funcional;\r\n\\item Explique as possíveis formas de teste de integração nos mapas dos itens b e c;\r\n\\item Especificar um caso de teste de \\textbf{caixa branca}, com pelo menos dois nós predicados (usar teste de caminho básico).\r\n\\end{enumerate}\r\n          \r\n%\\drawLines{62}','QT','5','remember','no','2019-03-15',1,30),(186,'uml','UML estruturais','Os diagramas da UML podem ser classificados em uma das seguintes categorias: estruturais e comportamentais. Assinale a opção que contém apenas diagramas estruturais:','QM','1','remember','no','2019-03-15',1,25),(187,'uml','UML associação','Uma associação em UML representa:','QM','3','remember','no','2019-03-15',1,25),(188,'si','SI','O que é sistema de informação?','QM','1','remember','no','2019-03-15',1,31),(189,'si','SI dados vs informação','O que é dado e o que é informação no contexto de Sistema de Informação. Assinale a melhor resposta:','QM','3','remember','no','2019-03-15',1,31),(190,'si','SI componentes','Quais são os componentes de um sistema de informação? Assinale a MELHOR alternativa:','QM','1','remember','no','2019-03-15',1,31),(191,'','SI ERP','Indique a alternativa Falsa. Dentre as características de um sistema ERP (\\textit{Enterprise Resource Planning}) encontram-se:','QM','1','remember','no','2019-03-15',1,31),(192,'si','SI de aplicação','Software com maior potencial para afetar os processos que agregam valor aos negócios pelo fato de ter sido projetado para atividades e funções organizacionais específicas:','QM','1','remember','no','2019-03-15',1,31),(193,'','ES','Assinale a alternativa Falsa. A Engenharia de Software possui as seguintes características:','QM','1','remember','no','2019-03-15',1,34),(195,'','Requisito fases','Análise de requisitos é uma importante fase da engenharia de software, na qual os desenvolvedores do sistema identificam as necessidades do cliente para posteriormente projetarem uma solução. Assinale a alternativa que apresenta as principais atividades da fase de análise de requisitos, dentro do processo de desenvolvimento de sistemas.','QM','1','remember','no','2019-03-15',1,32),(196,'classifica','Processo classifica','Indique (1) para abordagem clássica/sequencial e (2) para abordagem evolutiva/espiral:\r\n( ) Uma desvantagem dessa abordagem é o risco de criar ilusões quanto a prazos;\r\n( ) Utilizado para facilitar extração de requisitos e/ou criar protótipos do produto;\r\n( ) Facilita o gerenciamento do projeto, dá segurança mas os clientes costumam rejeitar:','QM','1','remember','no','2019-03-15',1,33),(197,'classifica requisitos','Requisito v/f','Indique V para Verdadeiro e F para Falso:\r\n( ) É comum projetos apresentarem requisitos que excedam os recursos disponíveis (pessoal, tempo.); \r\n( ) O cliente em geral está desesperado para colocar o sistema em operação bem antes que a equipe do projeto julgue adequado;\r\n( ) Dentro das restrições típicas de um projeto (prazo, custo, qualidade), a restrição custo é a mais fácil de ser negociada;\r\n( ) As ferramentas de modelagem (CASE) servem mais para compreender e explicar os requisitos do que propriamente para gerencia-los. É o aspecto dinâmico dos requisitos que cria enormes desafios gerenciais;','QM','1','remember','no','2019-03-15',1,32),(198,'classifica requisitos','Requisito v/f','Indique V para Verdadeiro e F para Falso:\r\n( ) A ferramenta MS-PROJECT é uma ferramenta CASE;\r\n( ) Trocas de ferramentas CASE durante o projeto podem aumentar os riscos de um projeto porque alteram o processo padrão de trabalho da equipe;\r\n( ) A qualidade depende do que se considere como suficientemente bom e não pode ser definida exclusivamente no início do projeto - portanto é muito mais um alvo dinâmico do que um alvo estático;\r\n( ) Para obter êxito em um projeto é absolutamente necessário implementar todos os requisitos;','QM','1','remember','no','2019-03-15',1,32),(199,'classifica','Processo classifica','Para cada característica considere o modelo que melhor se aplica.\r\n(1) Modelo Cascata; (2) Paradigma de Prototipação; (3) Modelo Incremental; (4) Modelo Espiral:\r\n( ) Ruim para projetos Grandes - difícil gerenciamento das versões;\r\n( ) Mais indicado quando os requisitos do cliente estão muito bem definidos.\r\n( ) Uso de protótipo como um mecanismo de redução de riscos:\r\n( ) Permite ao desenvolvedor reagir aos riscos de cada ciclo.','QM','1','remember','no','2019-03-15',1,33),(200,'classifica requisitos','Requisito v/f','Indique V para Verdadeiro e F para Falso:\r\n( ) Entre o kit de ferramentas do gerente de projeto está GANTT;\r\n( ) Propõe que o desenvolvedor faça uma triagem dos requisitos encaminhados pelo cliente. Assim haveria requisitos do tipo \"tem que ser feitos\", \"deveriam ser feitos\" e que \"poderiam ser feitos\". Essa estratégia traz realismo ao desenvolvimento e resultará em menor frustração e prejuízo;\r\n( ) Métodos formais de representação de requisitos (análise estruturada ou análise orientada a objetos) fornecem um meio claro de comunicação entre desenvolvedores e usuários;\r\n( ) Características de projetos anteriores transferidas para o projeto atual podem incluir problemas crônicos de qualidade que nunca foram resolvidos;','QM','1','remember','no','2019-03-15',1,32),(201,'classifica','Processo classifica','Para cada característica considere o modelo que melhor se aplica.\r\n(1) Modelo Cascata; (2) Paradigma de Prototipação; (3) Modelo Incremental; (4) Modelo Espiral:\r\n( ) Dependência entre as tarefas;\r\n( ) Cada sequência possui incrementos e um produto operacional;\r\n( ) Refinamento dos requisitos a cada versão;\r\n( ) Versões finais cada vez mais completas:','QM','1','remember','no','2019-03-15',1,33),(202,'uml','UML estado','O Diagrama da UML que representa o comportamento interno de determinado objeto, denomina-se diagrama de','QM','1','remember','no','2019-03-15',1,25),(203,'teo q3','while-conta energia2','Uma empresa de fornecimento de energia elétrica faz a leitura mensal dos medidores de consumo. Para cada consumidor, são digitados os seguintes dados:\r\n\r\n\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n%\\item Código do consumidor;\r\n\\item Classe do consumidor, que pode assumir um dos seguintes valores: (1) Residencial (2) Não Residencial.\r\n\\item Quantidade de kWh consumidos durante o mês;\r\n\\end{itemize}\r\n\r\n\\noindent Os valores a serem pagos por kWh, para cada classe de consumidor, estão apresentados na tabela a seguir:\r\n\r\n\\begin{table}[h!]\r\n\\centering\r\n\\begin{tabular}{|l|c|}\r\n\\hline\r\n\\textbf{Classe de consumidor} & \\textbf{Preço a ser pago por kWh} \\\\ \\hline\r\n(1) Residencial             & R\\$ [[code:a0]]                           \\\\ \\hline\r\n(2) Não Residencial     & R\\$ [[code:a1]]                           \\\\ \\hline\r\n%(3) Industrial             & R\\$ [[code:a2]]                           \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\noindent  O consumidor da Classe [[code:a4]] que consumir menos de  [[code:a2]]  kWh terá um desconto de  [[code:a3]] reais na conta. Os dados devem ser lidos até que seja encontrado um consumidor com Classe 0 (zero).  Calcular e imprimir como o exemplo abaixo.\r\n\r\n%\\noindent\\textbf{Exemplo:}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{55}\r\n\r\n[[def:\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4\r\n  a0=random.randrange(20, 40, 1)/10.0         # $ consumo faixa 1\r\n  a1=random.randrange(40, 60, 1)/10.0         # $ consumo faixa 2\r\n  a2=random.randrange(1000, 1200, 1)/10.0     # consumo desconto\r\n  a3=random.randrange(30, 80, 1)/10.0         # $ desconto\r\n  a4=random.randrange(1, 3, 1)                     # sortear uma classe\r\n  return [a0,a1,a2,a3,a4]\r\n\r\ndef algorithm(A):\r\n  mystr = \"\"\r\n  contClasse1=contClasse2=contDescontoClasse1=contDescontoClasse2=0\r\n  totalClasse1=totalClasse2=0.0\r\n\r\n  while True:\r\n    valorDesconto=0.0\r\n    classe     = random.randrange(0, 3, 1) # classe 1=res; 2=nao res; \r\n    consumo= random.randrange(1, 140, 1) # consumo\r\n    if classe==0:\r\n      break\r\n\r\n    if classe==1:                   # residencial\r\n      valor = consumo*A[0]\r\n      contClasse1+=1\r\n      if consumo<A[2] and classe == A[4]:\r\n         valorDesconto = valor - A[3]\r\n         contDescontoClasse1+=1\r\n         totalClasse1+= valorDesconto\r\n      else:\r\n         totalClasse1+=valor\r\n\r\n    elif classe==2:                  # não residencial\r\n      valor = consumo*A[1]\r\n      contClasse2+=1\r\n      if consumo<A[2] and classe == A[4]:\r\n         valorDesconto = valor - A[3]\r\n         contDescontoClasse2+=1\r\n         totalClasse2+= valorDesconto\r\n      else:\r\n         totalClasse2+=valor\r\n   \r\n    if valorDesconto>0:\r\n      mystr += \"Classe=%d \\tConsumo=%3d \\tValor=%7.2f \\tValor com Desconto=%7.2f \\n\" % (classe,consumo,valor,valorDesconto)\r\n    else:\r\n      mystr += \"Classe=%d \\tConsumo=%3d \\tValor=%7.2f \\n\" % (classe,consumo,valor)\r\n\r\n  mystr += \"Consumo total em R$ (com descontos)\\t= %7.2f\\n\" % (totalClasse1+totalClasse2)\r\n  if contClasse1:\r\n    mystr += \"Media Classe1 em R$ (com descontos)\\t= %7.2f\\n\" % (totalClasse1/contClasse1)\r\n  else:\r\n    mystr += \"Media Classe1 em R$ (com descontos)\\t= %7.2f\\n\" % (0)\r\n  if contClasse2:\r\n    mystr += \"Media Classe2 em R$ (com descontos)\\t= %7.2f\\n\" % (totalClasse2/contClasse2)\r\n  else:\r\n    mystr += \"Media Classe2 em R$ (com descontos)\\t= %7.2f\\n\" % (0)\r\n\r\n  if A[4]==1:\r\n    mystr += \"Quantidade de clientes da Classe %d que consumiram menos de %5.2f kWh = %d\\n\" % (A[4],A[2],contDescontoClasse1)\r\n    if contClasse1:\r\n      mystr += \"Porcentagem de clientes da Classe %d que consumiram menos de %5.2f kWh = %5.2f\\n\" % (A[4], A[2], (contDescontoClasse1/contClasse1*100.0) ) \r\n  else:\r\n    mystr += \"Quantidade de clientes da Classe %d que consumiram menos de %5.2f kWh = %d\\n\" % (A[4],A[2],contDescontoClasse2)\r\n    if contClasse2:\r\n      mystr += \"Porcentagem de clientes da Classe %d que consumiram menos de %5.2f kWh = %5.2f\\n\" % (A[4], A[2], (contDescontoClasse2/contClasse2*100.0)) \r\n\r\n  return str(mystr)\r\n\r\nwhile True: # gerar saídas semelhantes, com números de linhas entre X e Y\r\n  A=myRandom()\r\n  mySimula = algorithm(A) \r\n  if 500<len(mySimula)<550:\r\n    break\r\n]]','QT','3','remember','yes','2019-03-16',1,3),(204,'Prova1','for-soma-dos-quadrados','Escreva um programa que solicite ao usuário dois números inteiros: [[code:b0]] e [[code:b1]] e calcule [[code:a0]] dos inteiros [[code:a1]] entre [[code:b0]] e [[code:b1]] (inclusive [[code:b0]] e [[code:b1]]) elevados ao quadrado (cada número elevado ao quadrado), apresentando o resultado d[[code:a0]]. \r\n\r\n\\noindent Exemplo: \r\n\r\n\\noindent Para a entrada: [[code:b0]]=1 e [[code:b1]]=5, fazemos $ [[code:a3]] $. (Obs.: Para a saída, imprima apenas o resultado do cálculo.)\r\n\r\n\r\n[[def:\r\n\r\nv0=[\"a soma\", \"o produto\"]\r\nv1=[\"pares\", \"ímpares\"]\r\nv2=[\"x\", \"a\", \"p\", \"r\"]\r\n\r\nb0=random.choice(v2)\r\nif b0==v2[0]:\r\n    b1= \"y\"\r\nelif b0==v2[1]:\r\n    b1=\"b\"\r\nelif b0==v2[2]:\r\n    b1=\"q\"\r\nelse: \r\n     b1=\"s\"\r\n\r\na0=random.choice(v0)\r\na1=random.choice(v1)\r\n\r\nif a0==v0[0] and a1==v1[0]:\r\n    a3= \"2^{2}+4^{2} = 20\"\r\nelif a0==v0[0] and a1==v1[1]:\r\n    a3=\"1^{2}+3^{2}+5^{2} = 35\"\r\nelif a0==v0[1] and a1==v1[0]:\r\n     a3=\"2^{2}*4^{2} = 64\"\r\nelse: \r\n    a3=\"1^{2}*3^{2}*5^{2} = 225\"        \r\n\r\n]]','QT','2','remember','yes','2019-03-20',49,3),(205,'Prova1','for-candidatos-empresa','[[code:a0]] um levantamento dos candidatos que se inscreveram para o preenchimento de vagas do seu quadro de funcionários. Escreva um programa que leia a idade e sexo dos candidatos ([[code:a2]] - Masculino ou [[code:a3]] - Feminino),  calcule e mostre: \r\n(a) o total de candidatos inscritos, a porcentagem de candidatos do sexo masculino e a porcentagem de candidatos do sexo feminino;\r\n(b) a média das idades dentre os candidatos do sexo [[code:a4]];\r\n(c) a [[code:a6]] idade dentre os candidatos do sexo [[code:a5]].\r\n\r\n\\noindent A entrada de dados deve parar quando o usuário digitar idade igual a 0 (zero). \r\n\r\n\\noindent Exemplo de saída: \r\n\r\nTotal de inscritos: 300\r\n\r\nCandidatos do sexo masculino:  58\\%  \r\n\r\nCandidatos do sexo feminino:   42\\%  \r\n\r\nMédia das idades ([[code:a4]]):    25,7  \r\n\r\n[[code:a6]] idade ([[code:a5]]):    37\r\n\r\n\r\n[[def:\r\n\r\nv0=[\"Uma empresa decidiu fazer \", \"Em uma universidade foi realizado \"]\r\nv1=[\"masculino\", \"feminino\"]\r\nv2=[\"maior\", \"menor\"]\r\n\r\na0=random.choice(v0)\r\na2=random.choice([0, 1])\r\n\r\nif a2 == 0:\r\n    a3=1\r\nelse: \r\n    a3=2\r\n\r\na4=random.choice(v1)\r\n\r\nif a4 == v1[0]:\r\n    a5=\"feminino\"\r\nelse: \r\n    a5=\"masculino \"\r\n\r\na6=random.choice(v2)\r\n\r\n]]','QT','3','remember','yes','2019-03-20',49,3),(206,'Prova1','if-equacao','A fórmula abaixo representa um polinômio definido por partes. Esse tipo de função é bastante utilizado em interpolação numérica e computação gráfica:\r\n\r\n$f\\left ( x \\right ) = \r\n\\left \\{ \r\n\\begin{array}{cc}\r\n\\left (x-[[code:a3]] \\right )^{2}+1,  & $ se  $  [[code:a0]]  \\leq x  <  [[code:a1]]  \\\\\r\n1 - \\left (x-[[code:a4]] \\right )^{2}-2, & $ se  $  [[code:a1]]  \\leq  x  \\leq   [[code:a2]]  \\\\\r\n[[code:a0]], & $  se  $ x <  [[code:a0]]  $  ou $  x >  [[code:a2]] \r\n\\end{array}\r\n$\r\n\r\n\\noindent Escreva um programa que recebe do usuário um número x e apresente o valor de f(x).\r\n\r\n[[def:\r\n\r\na0=random.choice([0, 1, 2])\r\na1=random.choice([3, 4, 5])\r\na2=random.choice([6, 7, 8])\r\na3=random.choice([1, 2])\r\na4=random.choice([3, 4])\r\na5=random.choice([0, 1, -1])\r\n]]','QT','1','remember','yes','2019-03-20',49,2),(207,'Prova1','if-subconjunto','Escreva um programa que leia dois números e informe a qual subconjunto  [[code:op]] deles pertence de acordo com os seguintes intervalos: \r\n\r\n\\begin{table}[!h]\r\n\\centering\r\n\\begin{tabular}{cc}\r\n\\hline\r\nIntervalo     & Subconjunto \\\\\r\n\\hline\r\n[ [[code:a0]], [[code:a1]] ]   &  [[code:a8]]  \\\\\r\n\\hline\r\n[ [[code:a2]], [[code:a3]] ]  &  [[code:a9]]  \\\\\r\n\\hline\r\n[ [[code:a4]], [[code:a5]] ]  &  [[code:a10]]  \\\\\r\n\\hline\r\n[ [[code:a6]], [[code:a7]] ] & [[code:a11]]  \r\n\\\\\r\n\\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\nCaso a soma esteja abaixo de [[code:a0]] informar o subconjunto [[code:a12]]  e se estiver acima de [[code:a7]] informar o subconjunto [[code:a13]].\r\n\r\n[[def:\r\n\r\nv0=[\"a soma\", \"o produto\", \"a diferença\"]\r\nv1=[\"Amarelo\", \"Verde\", \"Azul\"]\r\nv2=[\"Vermelho\", \"Laranja\", \"Magenta\"]\r\nv3=[\"Rosa\", \"Dourado\", \"Prata\"]\r\nv4=[\"Roxo\", \"Marrom\", \"Turquesa\"]\r\nv5=[\"Branco\", \"Salmao\"]\r\nv6=[\"Cinza\", \"Preto\"]\r\n\r\nop=random.choice(v0)\r\na0=random.choice([0, 1])\r\na1=random.randrange(20, 30, 1)\r\na2=a1+1\r\na3=random.randrange(40, 50, 1)\r\na4=a3+1\r\na5=random.randrange(70, 100, 1)\r\na6=a5+1\r\na7=random.randrange(150, 300, 1)\r\n\r\na8=random.choice(v1)\r\na9=random.choice(v2)\r\na10=random.choice(v3)\r\na11=random.choice(v4)\r\na12=random.choice(v5)\r\na13=random.choice(v6)\r\n]]','QT','1','remember','yes','2019-03-20',49,2),(208,'Prova1','for-primo-validacao','Escreva um programa para verificar se um dado número natural n, fornecido pelo usuário é primo. \r\n\r\n\\noindent Faça a validação de dados de forma que n seja positivo. \r\n\r\nExemplos:\r\n\r\nEntrada: n = 7 ; Saída: eh primo\r\n\r\nEntrada: n = -1  ;  Saída: Erro! Informe um número maior que 0.\r\n\r\nEntrada: n =27  ;  Saída: nao eh primo','QT','3','remember','yes','2019-03-21',49,3),(210,'Prova1','for-qde-div-pares-impares','[[code:a4]]  um número inteiro [[code:a0]] $>$ 0 e [[code:a5]] desse número. Faça a validação de dados de forma que [[code:a0]] seja positivo. \r\n\r\n\\noindent Exemplo:\r\n\r\n\\noindent Entrada: [[code:a0]] = [[code:a1]]\r\n\r\n\\noindent Saída:  \r\n\r\n\\noindent Qde de divisores pares: [[code:a2]]\r\n\r\n\\noindent Qde de divisores impares: [[code:a3]]\r\n\r\n\\newline\r\n\r\n[[def:\r\nv0=[\"n\", \"x\", \"p\", \"k\", \"r\"]\r\na0=random.choice(v0)\r\nv1=[\"6 (divisores: 1, 2, 3, 6)\", \"8 (divisores: 1, 2, 4, 8)\", \"12 (divisores: 1, 2, 3, 4, 6, 12)\"]\r\na1=random.choice(v1)\r\n\r\nif a1 == v1[0]:\r\n    a2=2\r\n    a3=2\r\nelif a1 == v1[1]:\r\n    a2=3\r\n    a3=1\r\nelse:\r\n    a2=4\r\n    a3=2\r\n\r\nv2=[\"Escreva um programa que receba\", \"Faça um programa que solicite \"]\r\na4=random.choice(v2)\r\n\r\nv3=[\"apresente a quantidade de divisores pares e a quantidade de divisores ímpares\", \"mostre o número de divisores ímpares e o número de divisores pares\"]\r\na5=random.choice(v3)\r\n]]','QT','2','remember','yes','2019-03-22',49,3),(211,'Prova1','for-divisores-comuns','[[code:a0]] dois números inteiros positivos: [[code:b0]] e [[code:b1]], [[code:a1]] todos os divisores comuns a [[code:b0]] e [[code:b1]]. Apresente também qual é o maior divisor comum de [[code:b0]] e [[code:b1]].  \r\n\r\n\\noindent Exemplo:\r\n \r\n\\noindent Entrada: [[code:b0]] = 12, [[code:b1]] = 18 \r\n\r\n\\noindent Saída: \r\n\r\n\\noindent divisores comuns: 1, 2, 3, 6\r\n\r\n\\noindent maior divisor: 6\r\n\r\n[[def:\r\nv0=[\"Escreva um programa que solicite\", \"Faça um programa que dados\"]\r\nv1=[\" encontre e apresente\", \" calcule e mostre\"]\r\nv2=[\"x\", \"n\", \"p\", \"r\"]\r\n\r\na0=random.choice(v0)\r\na1=random.choice(v1)\r\nb0=random.choice(v2)\r\n\r\nif b0==v2[0]:\r\n    b1= \"y\"\r\nelif b0==v2[1]:\r\n    b1=\"m\"\r\nelif b0==v2[2]:\r\n    b1=\"q\"\r\nelse: \r\n     b1=\"s\"\r\n\r\n]]','QT','3','remember','yes','2019-03-22',49,3),(212,'','vetor faixa idade v1','Criar um vetor de inteiro $V1idade$ com $N$ elementos representando as idades (em anos) dos alunos de uma turma. Criar um outro vetor $V1nome$ de caracteres, também com $N$ posições, contendo os nomes de cada aluno. Assim, a posição $i$ de $V1idade$ contém a idade do aluno com nome $V1nome[i]$.\r\nCriar mais dois vetores $V2idade$ (tipo inteiro) e $V2nome$ (tipo caracter), também com $N$ elementos cada, contendo os alunos com idades entre $18$ e $21$ anos. Imprimir estes $4$ vetores, como segue:\r\n\r\n\\begin{verbatim}\r\nTodos os alunos:\r\nN. Idade Nome\r\n1    17     Ana\r\n2    18     Paulo\r\n3    25     Carlos\r\n4    21     Maria\r\n5    22     Ivan\r\n\\end{verbatim}\r\n\r\n\\begin{verbatim}\r\nAlunos com idade entre 18 e 21 anos:\r\nN. Idade Nome\r\n1    18     Paulo\r\n2    21     Maria\r\n\\end{verbatim}','QT','1','remember','no','2019-03-27',1,4),(213,'','agenda nome, end., fone','Criar uma agenda de telefones de seus amigos. Para tanto, criar três vetores de 15 elementos cada, contendo cada um, respectivamente: nome, endereço e telefone. Sua tarefa é implementar um programa para armazenar os dados de 15 amigos e dado um nome, realizar uma busca no vetor nome e apresentar todos os dados (endereço e telefone) relacionados ao nome buscado. Caso a busca não tenha sucesso, apresentar uma única vez a mensagem: “Amigo não cadastrado na agenda!!”.','QT','1','remember','no','2019-03-27',1,4),(214,'','seq. balanceada','Dizemos que uma sequência de $n$ números inteiros, com $n$ par, é {\\bf balanceada} se as seguintes somas são todas iguais:\r\n\\begin{description}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item[  --]  a soma do maior elemento com o menor elemento;\r\n\\item[  --]  a soma do segundo maior elemento com o segundo menor elemento;\r\n\\item[  --]  a soma do terceiro maior elemento com o terceiro menor elemento;\r\n\\item[  --]  e assim por diante . . .\r\n\\end{description}\r\n\r\nVeja um exemplo: [2 \\ 12 \\ 3 \\ 6 \\ 16 \\ 15] é uma sequência balanceada, pois 16 + 2 = 15 + 3 = 12 + 6.\r\n\r\nFaça uma função/método chamada(o) {\\tt Balanceamento} que recebe como parâmetros um vetor $V$ de inteiros e um inteiro $n$ (veja modelo de cabeçalho abaixo). Suponha que os elementos de $V$ são todos diferentes. Sua função/método deverá verificar se $V$ corresponde ou não a uma seqüência balanceada, sendo que ela(e) deverá retornar o valor $1$ se for balanceado e o valor $0$ caso contrário. Codifique apenas a função/método solicitada(o), em Java ou em PortugolStudio.\r\n\\begin{center}\r\n{\\tt public static int Balanceamento ( int[] V, int n) } \\\\\r\n{\\tt funcao Balanceamento ( inteiro V[ ], inteiro n ) }\r\n\\end{center}','QT','1','remember','no','2019-03-27',1,4),(215,'','busca elemento','Escreva um programa para buscar um valor x em um vetor de inteiros.','QT','1','remember','no','2019-03-27',1,4),(216,'','busca string','Escreva um método que recebe duas \\texttt{strings}, uma frase e uma palavra, armazenadas em vetores de caracteres e determine o número de vezes que a palavra ocorre na frase. Testar este método no programa principal.','QT','1','remember','no','2019-03-27',1,4),(217,'','vetor: intersecção A e B','Escreva uma função (método) que receba como parâmetros dois vetores, A e B, de mesmo tamanho e retorne um vetor contendo apenas os elementos da intersecção, presentes em A e B, sem repetição (cada elemento só pode aparecer uma única vez no vetor de saída). Se a interseção for fazia, o método deve retornar -1.','QT','1','remember','no','2019-03-27',1,4),(218,'','bit conta vizinho','Faça um programa que leia um vetor de inteiros de tamanho TAMANHO. Onde TAMANHO deve ser inicializado com o valor 10. Os valores deverão ser binário, ou seja, 0 ou 1. Criar um vertor de saída de tamanho TAMANHO contendo em cada objeto (com valor 1) um número iniciado com 1 e incrementado toda vez que tem um vizinho a esquerda igual a zero. Para esclarecimentos, vejam os testes de execução abaixo.','QT','1','remember','no','2019-03-27',1,4),(219,'','menor, maior, média e desvio','Dados n números $x_1,...,x_n$, o desvio padrão $s$ é calculado a partir da média aritimética $x$, conforme as equações:\r\n\r\n$$x=\\frac{x_1+x_2+...+x_n}{n};  \\ \\ \\ \\ \\ s=\\sqrt{\\frac{\\sum_{i=1}^n{(x_i-x)^2}}{n-1}}$$\r\n\r\nEscreva um programa que leia $n$ valores numéricos, armazene-os em um vetor e encontre os seguintes valores: o menor valor, o maior valor, a média e o desvio padrão.','QT','1','remember','no','2019-03-27',1,4),(220,'','máximo local 3 vizinhos','Faça um programa que leia um vetor de inteiros de tamanho TAMANHO. Onde TAMANHO deve ser inicializado com o valor 10. Os valores deverão ser distintos. Para cada elemento i do vetor, encontrar o máximo local, ou seja máximo nas posições i-1, i, i+1, e criar um vetor de saída de tamanho TAMANHO contendo estes máximos locais.','QT','1','remember','no','2019-03-27',1,4),(221,'','Espelho','Um vetor de inteiros é dito espelho se a sequência gerada pela leitura dos elementos da direita para esquerda é idêntica à sequência gerada pela leitura da esquerda para a direita. Construa um programa para verificar se um vetor é espelho.\r\n\r\nExemplos:\r\n[3, 2, 1, 7, 1, 2, 3]; 	[4, 2, 3, 3, 2, 4];	[0, 0, 0];	[2];	[ ]','QT','1','remember','no','2019-03-27',1,4),(222,'','frequência 0-9','Faça um programa que receba uma quantidade indefinida de números inteiros com valores entre 0 e 999 (condição de parada: entrada = -1). Como saída, esse programa deve informar a quantidade de vezes que cada número foi informado na entrada. Sugestão: teste primeiro para valores inteiros entre 0 e 9.','QT','1','remember','no','2019-03-27',1,4),(223,'','menor maior inverte','Faça um programa que leia um vetor de inteiros de tamanho TAMANHO. Onde TAMANHO deve ser inicializado com o valor 10. Os valores deverão ser distintos. Encontrar o menor e o maior elemento do vetor e inverter as suas posições num outro vetor de saída, onde os outros elementos ficam iguais ao vetor de entrada. Ou seja, no lugar do maior fica o menor e vice-versa.','QT','1','remember','no','2019-03-27',1,4),(224,'','maior que média','Faça um programa que leia um vetor de inteiros de tamanho TAMANHO. Onde TAMANHO deve ser inicializado com o valor 10. Os valores do vetor deverão ser distintos. Encontrar o valor médio do vetor, criar um outro vetor de saída de tamanho TAMANHO contendo o valor 9 se o valor na posição i do vetor de entrada for maior que a média e o valor zero, caso contrário','QT','1','remember','no','2019-03-27',1,4),(225,'','simular cor','O programa abaixo foi compilado corretamente e não contém erros. Qual a saída do programa?\r\n\\begin{verbatim}\r\npublic class Prova {\r\n    public static void main(String args[]) {\r\n        String matriz[][] = {{\"Verde\", \"Amarelo\", \"Laranja\"},\r\n                             {\"Preto\", \"Branco\", \"Cinza\"},\r\n                             {\"Vermelho\", \"Verde\", \"Azul\"}};\r\n        String vetor[] = new String[9];\r\n        for (int i = 0; i < 3; i++) \r\n            for (int j = 0; j < 3; j++) \r\n                for (int k = 0; k < 2; k++) \r\n                    vetor[3*i+j] = matriz[k][j];\r\n        for (int i = 0; i < 9; i++) \r\n            System.out.print(vetor[i]+\"\\n\");\r\n}   }\r\n\\end{verbatim}','QT','1','remember','no','2019-03-27',1,4),(226,'','mediada','Em teoria da probabilidade e estatística, a mediana, é uma medida de localização do centro da distribuição dos dados, definida do seguinte modo:\r\n\r\nOrdenados os elementos da amostra, a mediana é o valor (pertencente ou não à amostra) que a divide ao meio, isto é, 50\\% dos elementos da amostra são menores ou iguais à mediana e os outros 50\\% são maiores ou iguais à mediana.\r\n\r\nPara uma coleção de tamanho ímpar, a mediana é exatamente o elemento médio, ou seja, aquele que a divide de acordo com a regra citada. Já para uma coleção de tamanho par, a mediana é determinada como a média aritmética dos dois elementos centrais.\r\n\r\nFaça um programa em JAVA que receba um inteiro $N, 0 < N \\leq 106$, representando a quantidade de elementos da amostra de dados. E em seguida receba N inteiros variando de $-2^{32}$ a $2^{32}-1$, que representam os N valores da amostra. Logo após, mostre o valor da mediana dos dados informados.  Considere que as entradas são sempre válidas (não é necessário fazer validação).','QT','1','remember','no','2019-03-27',1,4),(227,'','estoque mercadoria','Um sistema de controle de estoque armazena o código, a quantidade em estoque e o preço unitário das mercadorias. Fazer um aplicativo que exiba um menu com as seguintes opções:\r\n\\begin{verbatim}\r\nMENU\r\n1 - Cadastrar mercadoria\r\n2 - Consultar mercadoria\r\n3 - Valor total em mercadorias\r\n4 - Sair\r\nDigite sua opção:\r\n\\end{verbatim}\r\nImplementar as operações de cada opção. As opções 1, 2 e 3 deverão ser implementadas como módulos separados. O sistema consegue cadastrar no máximo 10 mercadorias. Inicialmente não há nenhuma mercadoria cadastrada. \r\nO usuário digita a opção desejada.\r\nA opção 1 permitirá que o usuário cadastre uma nova mercadoria, informando o código, a quantidade em estoque e o valor unitário da mercadoria. \r\nA opção 2 permitirá que o usuário verifique se a mercadoria já foi cadastrada, informando o código da mercadoria. O programa deverá exibir na tela a mensagem “mercadoria cadastrada” ou “mercadoria não cadastrada”, de acordo com o resultado da verificação.\r\nA opção 3 permitirá a consulta do valor total do estoque, levando em conta todas as mercadorias cadastradas. O programa deverá imprimir o valor total das mercadorias em estoque.\r\nA opção 4 permitirá o término do programa.','QT','1','remember','no','2019-03-27',1,4),(228,'','moda','Em Estatística, moda é o valor que detém o maior número de observações sobre uma amostra. A moda não necessariamente existe e não necessariamente é única. Para um dado conjunto, os casos possíveis são:\r\namodal: não possui moda, isto é, nenhum valor ocorre um número maior de vezes que os demais;\r\nunimodal: possui apenas um valor de moda;\r\nbimodal: possui dois valores de moda;\r\nplurimodal: possui mais que dois valores de moda.\r\n\r\nEscreva um programa em que, dada uma sequência de inteiros entre 0 e 100 (inclusive) encerrada por um negativo, responde se a sequência é amodal, unimodal, bimodal ou plurimodal. Considere que a sequência possui tamanho máximo de 10000 valores e que as entradas são sempre válidas (não é necessário fazer validação).\r\n\\begin{table}[h]\r\n\\centering\r\n\\caption{Exemplos}\r\n\\label{my-label}\r\n\\begin{tabular}{|l|l|l|}\r\n\\hline\r\n\\textbf{Entrada}             & \\textbf{Saída} & \\textbf{justificativa}   \\\\ \\hline\r\n1  -1                        & amodal         & não possui moda          \\\\ \\hline\r\n10 20 30 -1                  & amodal         & não possui moda          \\\\ \\hline\r\n1 2 3 1 2 3 1 2 3 3 2 1 -100 & amodal         & não possui moda          \\\\ \\hline\r\n-1                           & amodal         & não possui moda          \\\\ \\hline\r\n1 2 3 2 3 2 -11              & unimodal       & a moda é 2               \\\\ \\hline\r\n100 10 20 10 20 0 -2         & bimodal        & as modas são 10 e 20     \\\\ \\hline\r\n1 99 10 10 20 40 30 30 20 -1 & plurimodal     & as modas são 10, 20 e 30 \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}','QT','1','remember','no','2019-03-27',1,4),(229,'','simular int','O programa abaixo foi compilado corretamente e não contém erros. Qual a saída do programa?\r\n\\begin{verbatim}\r\npublic class Codigo {\r\n    static int i, j , t, a[] = {144, 9, -24, 30, 0};\r\n    public static void main(String args[]) {        \r\n        for (i = 0; i < a.length; i++) // a.lenght = tamanho do vetor\r\n            for (j = 1; j < (a.length - i); j++) \r\n                if (a[j - 1] < a[j]) {\r\n                    t = a[j - 1];\r\n                    a[j - 1] = a[j];\r\n                    a[j] = t;\r\n                }\r\n        for (int x:a) System.out.printf(\"%d, \",x);\r\n}   }\r\n\\end{verbatim}','QT','1','remember','no','2019-03-27',1,4),(230,'','ordena dígito','Faça um programa que receba um inteiro $N, 1 \\leq N \\leq 1000000$, representando o tamanho de um vetor V. Em seguida leia N inteiros entre 100 e 999 armazenando-os no vetor V.\r\n\r\nEntão você deve ordenar os elementos do vetor de forma crescente, porém essa ordenação deverá considerar apenas o dígito do meio de cada número.\r\n\r\nPor exemplo, os números 199, 387 e 719 ordenados por esse critério seriam 719, 387 e 199.\r\n\r\nCaso haja empate na comparação, os valores devem permanecer na ordem da entrada, ou seja, o que foi informado primeiro deve aparecer primeiro na sequência ordenada. Por exemplo, os valores 256, 642 e 150 ordenados de acordo com este critério seriam: 642, 256 e 150.\r\n\r\nAo final, exiba os valores de v com essa ordenação. Considere que as entradas são sempre válidas (não é necessário fazer validação).','QT','1','remember','no','2019-03-27',1,4),(231,'','ordena par','Escreva um método para ordenar somente os números pares de um vetor de tamanho $n>0$. Teste este método no programa principal.','QT','1','remember','no','2019-03-27',1,4),(232,'','simula abacaxi','Simule a execução da função Segredo abaixo, considerando, palavra = “abacaxi”  e  limite = 7:\r\na)	Qual o valor de quant retornado pela função?\r\nb)	Apresente como ficou o vetor palavra após a execução da função?\r\n\\begin{verbatim}\r\npublic static int Segredo(char palavra[], int limite){\r\n     char aux;\r\n     int i = limite-1, y = 0, quant = 0;\r\n     while(i > y) {\r\n        if(palavra [ i] == palavra [y]) {\r\n           palavra [ i] = \'y\';\r\n        }\r\n        else {\r\n            quant = quant + 1;\r\n            aux = palavra [ i ];\r\n            palavra [ i ] = palavra [y];\r\n            palavra [ y] = aux;\r\n        }\r\n        i = i - 1;\r\n        y = y + 1;\r\n     }\r\n     return quant;\r\n}  \r\n\\end{verbatim}','QT','1','remember','no','2019-03-27',1,4),(233,'','vetor: remove ímpares','Escreva um método (módulo) que tire todos os números ímpares de um vetor (de dimensão n) e coloque no seu lugar o índice do número encontrado.','QT','1','remember','no','2019-03-27',1,4),(234,'','conta par','Implementar um ALGORITMO para contar e mostrar na tela a QUANTIDADE de números pares contidos em um VETOR (Vet[]). Também, o programa deve mostrar uma mensagem informando quando NÃO houver números pares. É importante destacar que o tamanho do vetor Vet[] e o valor dos elementos deste vetor devem ser informados pelo USUÁRIO.','QT','1','remember','no','2019-03-27',1,4),(235,'','polinômio-derivada','Seja $p(x)=a_0+a_1x+a_2x^2+...+a_nx^n$ polinômio de grau 5; Ler os coeficientes de $p$; Calcular $p$ na posição $x=2$; Calcular a derivada de $p(x)$.','QT','1','remember','no','2019-03-27',1,4),(236,'','2vetores-soma dos produtos','Escreva um programa que, dado dois vetores $a = [a_1,a_2,...,a_n]$ e $b = [b_1,b_2,...,b_n]$, ambos com $n$ valores em ponto flutuante, faça a seguinte operação conhecida como produto escalar :\r\n\r\n$$\\sum_{i=1}^n a_ib_i =a_1b_1 +a_2b_2 +···+a_nb_n,$$\r\n\r\nisto é, a soma dos produtos entre os elementos dos vetores.','QT','1','remember','no','2019-03-27',1,4),(237,'','simula RA','O programa abaixo foi compilado corretamente e não contém erros. Qual a saída do programa?\r\n\\begin{verbatim}\r\npublic class TestaRA {\r\n    public static void main(String[] args) {\r\n        System.out.print(\"Entre o seu RA: \");\r\n        int r=0, n[]=new int[10], // Padrão em vetor assume valor 0\r\n        RA= new java.util.Scanner(System.in).nextInt();\r\n        while (RA > 0) {\r\n            for (int i = 0; i<=9; i++) if (RA%10==i) r += ++n[i]; \r\n            RA = RA/10;   \r\n        } \r\n        System.out.println(\"Resultado: \" + r);     \r\n}   }\r\n\\end{verbatim}','QT','1','remember','no','2019-03-27',1,4),(238,'','simula 2for','Considere que o vetor de inteiros v  = { 4, 8, -2, 5, 1, 3}  e que max = 6. Responda:\r\n(a) O que faz a função Segredo a seguir?\r\n(b) Apresente como ficou o vetor v após a execução da função?\r\n\\begin{verbatim}\r\n  public static void Segredo(int v[], int max) {\r\n      int m, aux = 0;\r\n      for (int i = 0; i <max; i++) {\r\n          m = i;\r\n          for (int j = i; j <max; j++) {\r\n             if (v[m] >v[j]) {\r\n                 m = j;\r\n             }\r\n          }\r\n          aux = v[i];\r\n          v[i] = v[m];\r\n          v[m] = aux;\r\n     }\r\n  }\r\n\\end{verbatim}','QT','1','remember','no','2019-03-27',1,4),(239,'','soma vetores','Fazer um programa para somar dois vetores de inteiros (A e B) e criar um terceiro vetor C, onde os elementos de C sejam a soma dos elementos dos dois vetores do parâmetro (A + B).','QT','1','remember','no','2019-03-27',1,4),(240,'','vetor: várias operações','Leia a questão até o fim. Neste exercício consideramos que uma sequência de $n$ números inteiros está armazenada nas $n$ primeiras posições de um vetor $v[0..N]$, onde $N$ é uma constante e $n$ uma variável com $n\\geq 0$ e $n \\leq N$. No caso $n = 0$ dizemos que o vetor está vazio e no caso $n = N$ dizemos que o vetor está cheio. No vetor são permitidas as operações: \r\n\\textbf{Busca:} dados $x$, $v$ e $n$ uma busca por $x$ em $v$ retorna o índice $i$ do vetor tal que $v[i] = x$, se tal índice não existe, retorna $i=-1$\r\n\\textbf{Remoção:} dados $k$, $v$ e $n$ uma remoção consiste em remover o elemento do índice $k$ de $v$ resultando num vetor com $n-1$ elementos nas primeiras posições;\r\n\\textbf{Inserção:} dados $y, k, v$ e $n$, consiste em inserir o elemento y entre as posições $k-1$ e $k$ do vetor e atualizar o valor de $n$;\r\n\r\nA seguir não é possível assumir a existência de entidades globais e deve usar passagem de parâmetro por valor ou por referência, conforme a necessidade.\r\n(a) escreva um módulo que testa se o vetor está vazio e retorna um valor lógico;\r\n(b) escreva um módulo que testa se o vetor está cheio e retorna um valor lógico;\r\n(c) escreva um módulo com parâmetros x, v, n para a operação de busca;\r\n(d) escreva um módulo com parâmetros k, v, n para a operação de remoção;\r\n(e) escreva um módulo com parâmetros y, k, v e n para a operação de inserção;\r\n(f) escreva um módulo que recebe os parâmetros x, v, n e remove todas as ocorrências do elemento x em v;\r\n(g) escreva um módulo que remova os elementos repetidos do vetor.','QT','3','remember','no','2019-03-27',1,6),(241,'','pesquisa TV','Será feita uma pesquisa de audiência de canais de TV em várias casas de uma certa cidade, num determinado dia. Nessa pesquisa, para cada casa visitada, será aplicado um questionário através do qual serão coletados os seguintes dados: o número do canal (suponha que existam apenas os canais 4,5,7,12) e o número de pessoas que o estão assistindo. Se a televisão estiver desligada, nada será anotado, ou seja, esta casa não entrará na pesquisa. Fazer um programa que:\r\n\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item leia um número indeterminado de questionários, sendo que o ``FLAG\'\' corresponde ao número do canal igual a zero, isto é, a leitura pára quando o canal for igual a zero;\r\n\\item calcule a porcentagem de audiência para cada emissora;\r\n\\item escreva o número do canal e a sua respectiva porcentagem.\r\n\\end{itemize}','QT','1','remember','no','2019-03-27',1,4),(242,'','pesquisa temperatura','Um aluno da UFABC sente muito frio, então, por curiosidade, ele resolveu tomar diariamente por alguns meses, sempre às 17h, as temperaturas (em Centígrados) na entrada do Bloco B e calcular alguns de seus indicadores. Escreva um programa que solicita ao usuário uma quantidade indeterminada de temperaturas (a entrada de dados deve ser encerrada quando a temperatura $100^o$C for digitada). Não precisa fazer validação de dados, isto é, suponha que as temperaturas são fornecidas corretamente. Depois o programa deve calcular e escrever o seguinte:\r\n\\begin{description}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item[  --]  o número de dias em que a temperatura esteve abaixo de $15^o$C;\r\n\\item[  --]  o número de dias em que a temperatura esteve entre $15^o$C e $22^o$C;\r\n\\item[  --]  o número de dias em que a temperatura esteve acima de $22^o$C;\r\n\\item[  --]  a média das temperaturas em todo o período considerado.\r\n\\end{description}','QT','1','remember','no','2019-03-27',1,4),(243,'','trocar 1o e 2o maior','Ler um número representando a dimensão n de um vetor de inteiros, com n$>$1. Validar o número n. Ler os n elementos do vetor, considerando que não há repetições (você não precisa verificar se são diferentes). Imprimir o vetor lido. Encontrar o maior elemento no vetor. Encontrar o segundo maior elemento no vetor. Trocar os dois de posição (maior e segundo maior elemento) no mesmo vetor e imprimir o vetor alterado.','QT','1','remember','no','2019-03-27',1,4),(244,'','cria soma anteriores','Faça um programa que cria um vetor v de números inteiros de 10 posições e então preencha o vetor de maneira que o elemento de índice i contenha a soma dos números naturais menores ou iguais a i, isto é  $v[i]=\\sum_{k=0}^i{k}$.','QT','1','remember','no','2019-03-27',1,4),(245,'','verifica ordem','Escreva um programa para verificar se um vetor de inteiros está em ordem crescente.','QT','1','remember','no','2019-03-27',1,4),(246,'','calorias por dia da semana','Implementar um programa que armazene a quantidade de calorias ingeridas em cada refeição (café da manhã, almoço e jantar) em cada dia da semana (domingo a sábado). O programa deve perguntar, para cada dia da semana, a quantidade de calorias ingeridas em cada refeição e armazenar em uma matriz, como representado esquematicamente abaixo:\r\n\\begin{table}[h]\r\n\\centering\r\n\\caption{Matriz de Calorias}\r\n\\label{my-label}\r\n\\begin{tabular}{|l|l|l|l|l|l|l|l}\r\n\\cline{1-7}\r\nDomingo & Segunda & Terça & Quarta & Quinta & Sexta & Sábado &  \\\\ \\cline{1-7}\r\nCafé    &         &       &        &        &       &        &  \\\\ \\cline{1-7}\r\nAlmoço  &         &       &        &        &       &        &  \\\\ \\cline{1-7}\r\nJantar  &         &       &        &        &       &        &  \\\\ \\cline{1-7}\r\n\\end{tabular}\r\n\\end{table}\r\n\r\nDepois de inserir os valores, o programa deve imprimir a matriz na tela, com o respectivo total de calorias por refeição (soma dos elementos de cada linha) e por dia (soma dos elementos de cada coluna), além do total de calorias ingeridas na semana (soma de todos os elementos da matriz), como mostrado esquematicamente a seguir:\r\n\\begin{table}[h]\r\n\\centering\r\n\\caption{Resultado}\r\n\\label{my-label}\r\n\\begin{tabular}{|l|l|l|l|l|l|l|l|l|}\r\n\\hline\r\nDomingo & Segunda  & Terça    & Quarta   & Quinta   & Sexta    & Sábado   & Totais   &         \\\\ \\hline\r\nCafé    &          &          &          &          &          &          &          & Linha 1 \\\\ \\hline\r\nAlmoço  &          &          &          &          &          &          &          & Linha 2 \\\\ \\hline\r\nJantar  &          &          &          &          &          &          &          & Linha 3 \\\\ \\hline\r\nTotais  & Coluna 1 & Coluna 2 & Coluna 3 & Coluna 4 & Coluna 5 & Coluna 6 & Coluna 7 & GERAL   \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\nApós isto pede-se: \r\n	Calcular e imprimir a média diária de calorias.\r\n	Calcular e imprimir a média diária de calorias por refeição.\r\n	Imprimir quais dias da semana o consumo de calorias foi acima da média diária.\r\n	Imprimir em qual refeição o usuário consumiu mais calorias.\r\n	Imprimir em qual refeição o usuário consumiu menos calorias.','QT','2','remember','no','2019-03-27',1,5),(247,'','conceito p1, p2+vetor','Escreva uma função que recebe como argumento uma matriz de float (já com conteúdos validados entre 0 e 10) representando as notas de duas provas de uma turma de alunos. A primeira coluna da matriz representa a primeira prova e a segunda coluna representa a segunda prova. Esta função deve retornar um vetor de inteiros com cinco posições, onde nas posições:\r\n\\begin{description}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item[0] = quantidade de alunos que ficaram com o conceito final $F$; \r\n\\item[1] = quantidade de alunos que ficaram com o conceito final $D$;\r\n\\item[2] = quantidade de alunos que ficaram com o conceito final $C$;\r\n\\item[3] = quantidade de alunos que ficaram com o conceito final $B$;\r\n\\item[4] = quantidade de alunos que ficaram com o conceito final $A$. \r\n\\end{description}\r\n\r\nA primeira e a segunda prova possuem o mesmo peso para o cálculo da média final. Considere o seguinte critério de conversão: $A\\geq 8,5$; $B\\geq 7$; $C\\geq 5,5$; $D\\geq 5$; $F<5$. Teste este método no programa principal.','QT','2','remember','no','2019-03-27',1,5),(248,'','itinerário','Os elementos $a_{i,j}$ de uma matriz inteira $n\\times n$, $A$ representam os custos de transporte da cidade $i$ para a cidade $j$. Dados $n$ itinerários, cada um com $k$ cidades, calcular o custo total de cada itinerário. Exemplo\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\label{my-label}\r\n\\begin{tabular}{|l|l|l|l|}\r\n\\hline\r\n4 & 1 & 2 & 3   \\\\ \\hline\r\n5 & 2 & 1 & 400 \\\\ \\hline\r\n2 & 1 & 3 & 8   \\\\ \\hline\r\n7 & 1 & 2 & 5   \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\no itinerário 0 3 1 3 2 1 0 é\r\n\r\n$$a_{0,3} +a_{3,1} +a_{1,3} +a_{3,3} +a_{3,2} +a_{2,1} +a_{1,0} = 3+1+400+5+2+1 = 417.$$','QT','2','remember','no','2019-03-27',1,5),(249,'','erosão 3x3','Criar uma matriz M $10 \\times10$ de inteiros; Criar um método para atribuir valores 1 em todos os elementos de M; Atribuir no centro de M o valor 0;  Calcular a erosão de M considerando uma vizinhança $3\\times 3$ (ou seja, para cada elemento de R, atribui o mínimo dos vizinhos $3\\times 3$ correspondentes de M – observe que para o elemento (0,0) desconsiderar os vizinhos $3 \\times 3$ fora de M). \r\n\r\n%Como exemplo da função dilata, veja abaixo – em negrito e sublinhado está a dilatação do elemento (3,4) e apenas em negrito estão os vizinhos para o cálculo no máximo)\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\caption{Entrada M}\r\n\\label{my-label}\r\n\\begin{tabular}{|l|l|l|l|l|l|l|l|l|l|}\r\n\\hline\r\n1 & 1 & 1 & 1          & 1          & 1          & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & 1          & 1          & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & 1          & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & \\textbf{1}  & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & 1         & 0 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & 1          & 1          & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & 1          & 1          & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & 1          & 1          & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & 1          & 1          & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & 1          & 1          & 1 & 1 & 1 & 1 \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\caption{Saída R}\r\n\\label{my-label}\r\n\\begin{tabular}{|l|l|l|l|l|l|l|l|l|l|}\r\n\\hline\r\n1 & 1 & 1 & 1 & 1                & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 1                & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 &  \\textbf{1} &  \\textbf{1}                &  \\textbf{1} & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 &  \\textbf{1} & \\textbf{0}  &  \\textbf{0} & 0 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 &  \\textbf{1} &  \\textbf{0}                &  \\textbf{0} & 0 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 0                & 0 & 0 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 1                & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 1                & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 1                & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 1                & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}','QT','2','remember','no','2019-03-27',1,5),(250,'','dilatação 3x3','Criar uma matriz $M$ $10 \\times 10$ de inteiros; Criar uma função para atribuir valores $1$ em todos os elementos de $M$; Atribuir no centro de M o valor 0;  Calcular a dilatação de M considerando uma vizinhança $3\\times 3$ (ou seja, para cada elemento de $R$, atribui o máximo dos vizinhos $3\\times 3$ correspondentes de M – observe que para o elemento $(0,0)$ desconsiderar os vizinhos $3\\times 3$ fora de $M$). Como exemplo da função erosão, veja abaixo – em negrito e sublinhado está a dilatação do elemento $(3,4)$ e apenas em negrito estão os vizinhos para o cálculo no máximo)\r\n\\begin{table}[h]\r\n\\centering\r\n\\caption{Entrada M}\r\n\\label{my-label}\r\n\\begin{tabular}{|l|l|l|l|l|l|l|l|l|l|}\r\n\\hline\r\n1 & 1 & 1 & 1          & 1          & 1          & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & 1          & 1          & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & \\textbf{1} & \\textbf{1} & \\textbf{1} & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & \\textbf{1} & \\textbf{1} & \\textbf{1} & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & \\textbf{1} & \\textbf{1} & \\textbf{0} & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & 1          & 1          & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & 1          & 1          & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & 1          & 1          & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & 1          & 1          & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1          & 1          & 1          & 1 & 1 & 1 & 1 \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\caption{Saída R}\r\n\\label{my-label}\r\n\\begin{tabular}{|l|l|l|l|l|l|l|l|l|l|}\r\n\\hline\r\n1 & 1 & 1 & 1 & 1                & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 1                & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 1                & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & \\textbf{0}  & 0 & 0 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 0                & 0 & 0 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 0                & 0 & 0 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 1                & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 1                & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 1                & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 1                & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}','QT','2','remember','no','2019-03-27',1,5),(251,'','notas p1, p2','Escreva uma função que recebe como argumento um inteiro representando a quantidade de alunos de uma turma. Esta função deve retornar uma matriz de \\texttt{float} representando as notas de duas provas de uma turma de alunos. A primeira coluna da matriz representa a primeira prova e a segunda coluna representa a segunda prova. Esta função deve validar as notas entre 0 e 10 para cada prova. Teste este método no programa principal.','QT','2','remember','no','2019-03-27',1,5),(252,'','multiplica matrizes','Faça um programa que receba duas matrizes A e B, ambas de tamanho N por Q e Q por M, respectivamente. As dimensões N, Q e M são fornecidas pelo usuário. Este programa deve:\r\na) Mostrar na tela as três matrizes\r\nb) Mostrar na tela a matriz R=A*B, ou seja, a matriz resultante da multiplicação da matriz A com a matriz B\r\nc) Criar um vetor e, em cada uma de suas posições, armazenar a soma de cada linha da matriz R. O vetor criado deve ser mostrado na tela.','QT','2','remember','no','2019-03-27',1,5),(253,'','padrão 3x3','Crie uma matriz $A$ de inteiros de dimensão $L \\times C$, onde $L$ indica o número de linhas e $C$ indica o número de colunas. A matriz $A$ deverá assumir somente valores do conjunto ${0,1}$. Dado um padrão representado por uma matriz B de dimensão $3\\times 3$, como abaixo, escreva um programa que determina a quantidades de ocorrências deste padrão $B$ na matriz $A$.\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\caption{Matriz A}\r\n\\label{my-label}\r\n\\begin{tabular}{|l|l|l|l|l|l|l|}\r\n\\hline\r\n0 & 0 & 1 & 0 & 0 & 1 & 1 \\\\ \\hline\r\n0 & 1 & 1 & 1 & 0 & 0 & 0 \\\\ \\hline\r\n0 & 0 & 1 & 0 & 0 & 0 & 0 \\\\ \\hline\r\n0 & 1 & 1 & 1 & 0 & 0 & 0 \\\\ \\hline\r\n0 & 0 & 1 & 0 & 0 & 0 & 0 \\\\ \\hline\r\n1 & 1 & 1 & 1 & 1 & 1 & 1 \\\\ \\hline\r\n1 & 0 & 1 & 0 & 0 & 0 & 0 \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\caption{Matriz B}\r\n\\label{my-label}\r\n\\begin{tabular}{|l|l|l|}\r\n\\hline\r\n0 & 1 & 0 \\\\ \\hline\r\n1 & 1 & 1 \\\\ \\hline\r\n0 & 1 & 0 \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}','QT','2','remember','no','2019-03-27',1,5),(254,'','quadrado latino','Uma matriz $A$ inteira $n\\times n$ é um quadrado latino de ordem $n$ se em cada linha e em cada coluna aparecem todos os inteiros de $1$ até $n$. \r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\label{my-label}\r\n\\begin{tabular}{|l|l|l|l|}\r\n\\hline\r\n1 & 2 & 3 & 4   \\\\ \\hline\r\n2 & 3 & 4 & 1 \\\\ \\hline\r\n4 & 1 & 2 & 3   \\\\ \\hline\r\n3 & 4 & 1 & 2   \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\nEste exemplo é um quadrado latino de ordem 4. Escreva um método que recebe $A$ e retorna 1 se é quadrado latino, ou 0 caso contrário. Testar este método no programa principal.','QT','2','remember','no','2019-03-27',1,5),(255,'','quadrado mágico','Dizemos que uma matriz quadrada de números inteiros distintos é um {\\bf quadrado mágico} se a soma dos elementos de cada linha, a soma dos elementos de cada coluna e a soma dos elementos da diagonal principal e secundária são todas iguais. Abaixo seguem exemplos.\r\n\r\nA matriz $A$ é um quadrado mágico:\r\n\r\n\\begin{displaymath}\r\n A=\r\n \\left[ \\begin{array}{ccc} 8 & 0 & 7 \\\\ \r\n                           4 & 5 & 6 \\\\\r\n                           3 & 10 & 2 \r\n        \\end{array} \r\n \\right].\r\n\\end{displaymath}  \r\n\r\nA matriz $B$ {\\bf não} é um quadrado mágico:\r\n\r\n\\begin{displaymath}\r\n B=\r\n \\left[ \\begin{array}{ccc} 8 & 0 & 7 \\\\ \r\n                           4 & 5 & 6 \\\\\r\n                           3 & 10 & {\\bf 1} \r\n        \\end{array} \r\n \\right].\r\n\\end{displaymath}  \r\n\r\nFaça uma função/método chamada(o) {\\tt TesteMagico} que recebe como parâmetros uma matriz $A$ de inteiros distintos e um inteiro $n$ (veja modelo de cabeçalho abaixo). Sua função/método deverá verificar se $A$ é ou não um quadrado mágico, sendo que ela(e) deverá retornar o valor $1$ se a matriz for um quadrado mágico e o valor $0$ caso contrário. Codifique apenas a função/método solicitada(o), em Java ou em PortugolStudio.\r\n\\begin{center}\r\n{\\tt public static int TesteMagico ( int[][] A, int n) } \\\\\r\n{\\tt funcao TesteMagico ( inteiro A[ ][ ], inteiro n ) }\r\n\\end{center}\r\n\r\n\\drawLines{63}\r\n\\pagebreak','QT','2','remember','no','2019-03-27',1,5),(256,'','quadrado mágico','Dizemos que uma matriz quadrada inteira é um quadrado mágico se a soma dos elementos de cada linha, a soma dos elementos de cada coluna e a soma dos elementos da diagonal principal e a soma dos elementos da diagonal secundária são todas iguais. Fazer uma função para retornar 1 se a matriz passada por argumento é um quadrado mágico, ou 0, caso contrário. Chamar esse método no programa principal e imprimir as mensagens \"quadrado magico\" ou \"nao eh quadrado magico\".\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\caption{Exemplos}\r\n\\label{my-label}\r\n\\begin{tabular}{|l|l|}\r\n\\hline\r\n\\textbf{ENTRADA (N, elementos)} & \\textbf{SAÍDA}       \\\\ \\hline\r\n1                               &                      \\\\ \\hline\r\n20                              & É um quadrado mágico \\\\ \\hline\r\n4                               &                      \\\\ \\hline\r\n1 2 1 2                         &                      \\\\ \\hline\r\n1 2 1 2                         &                      \\\\ \\hline\r\n2 1 2 1                         &                      \\\\ \\hline\r\n2 1 2 1                         & É um quadrado mágico \\\\ \\hline\r\n3                               &                      \\\\ \\hline\r\n2 7 6                           &                      \\\\ \\hline\r\n9 5 1                           &                      \\\\ \\hline\r\n4 3 8                           & É um quadrado mágico \\\\ \\hline\r\n3                               &                      \\\\ \\hline\r\n4  8  9                         &                      \\\\ \\hline\r\n11 7  3                         &                      \\\\ \\hline\r\n6  5 10                         & É um quadrado mágico \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}','QT','2','remember','no','2019-03-27',1,5),(257,'','diagonal: principal - secundária','Construa uma função (método) que receba como parâmetros, uma matriz quadrada de inteiros e retorne a soma dos elementos na diagonal principal menos a soma dos elementos da diagonal secundária. Testar este método no programa principal.\r\n\r\n\\vspace{3cm}\r\n.','QT','2','remember','no','2019-03-27',1,5),(258,'','TemObstaculoLinha','Uma matriz $5\\times 6$ lógica representa as posições. Quando uma posição possui o valor VERDADEIRO significa que há um obstáculo ali. Escreva uma função \\texttt{booleana} chamada \\texttt{TemObstaculoLinha} que retorna falso se for possível atravessar uma linha qualquer do mapa sem passar por um obstáculo e retorne falso caso contrário. É obrigatório o uso de laços para percorrer a matriz SEMPRE que necessário. Testar esta função no programa principal','QT','2','remember','no','2019-03-27',1,5),(259,'','transposta','Escreva um programa que leia uma matriz M com p linhas e q colunas e imprima sua matriz transposta.','QT','2','remember','no','2019-03-27',1,5),(260,'','trocar 2 linhas','Elabore uma função com o seguinte protótipo:\r\n\\begin{verbatim}\r\npublic static void trocaMatrizLinha(int m[][], int i, int j);\r\n\\end{verbatim}\r\nQue receba: uma matriz de inteiro m, de dimensões nl linhas e nc colunas. E dois inteiros i e j.\r\nA tarefa desta função é trocar todos os elementos da linha i pelos elementos da linha j e vice-e-versa.','QT','2','remember','no','2019-03-27',1,5),(261,'','notas p1, p2, p3, M e vetor RA','Considere a existência de uma matriz TNotas de $100 \\times 4$ na qual as $3$ primeiras colunas da matriz estão preenchidas respectivamente com as notas da provas $P1$, $P2$ e $P3$. A quarta coluna está reservada para armazenar a média aritmética entre as $3$ notas. A quantidade de alunos corresponde a quantidade de linhas da matriz. Além disso, há um vetor de inteiro contendo a Matrícula de cada aluno e um vetor de \\texttt{String} contendo o nome de cada aluno. Escreva um método chamado \\texttt{CalculaMedia} que receba por parâmetro a Matriz, a quantidade de alunos e calcule a Média de cada aluno, armazenando a média na coluna apropriada da matriz. Além disso, o método deve retornar a média da turma.','QT','2','remember','no','2019-03-27',1,5),(262,'','notas p1, p2, p3, M, vetor RA, pesquisa RA','Considere a existência de uma matriz TNotas de $100 \\times 4$ na qual as $3$ primeiras colunas da matriz estão preenchidas respectivamente com as notas da provas $P1$, $P2$ e $P3$. A quarta coluna está reservada para armazenar a média aritmética entre as 3 notas. A quantidade de alunos corresponde a quantidade de linhas da matriz. Além disso, há um vetor de inteiro contendo a Matricula de cada aluno e um vetor de String contendo o nome de cada aluno. Escreva uma função chamada \\texttt{CalculaMedia} que receba por parâmetro a Matriz, a quantidade de alunos e calcule a Média de cada aluno, armazenando a média na coluna apropriada da matriz. Além disso, a função deve retornar a média da turma. Escreva uma função chamada \\texttt{PesquisaAluno} que receba por parâmetro um Vetor de String (caracter)  com o nome dos alunos, um vetor de inteiro com a matricula dos alunos, a Matriz TNotas, a quantidade de alunos e um número de matricula a pesquisar. A função deve pesquisar pelo numero de matrícula e caso a encontre deve imprimir o nome e a média correspondentes, e também a situação do aluno: Aprovado ou Reprovado. Sabe-se que o aluno será aprovado se tiver Média maior ou igual a 6. Caso a matrícula do aluno não conste no vetor de matrículas deve-se imprimir a mensagem: Matrícula não cadastrada.','QT','2','remember','no','2019-03-27',1,5),(263,'','tabuleiro de xadrez','Escreva um programa que, dado dois inteiros m e n, preencha uma matriz de m linhas e n colunas com 0s e 1s intercalados formando um \"tabuleiro de xadrez\" onde 0=branco e 1=preto. O valor na primeira linha e primeira coluna deve ser sempre 0. Por exemplo, para m = 3 e n = 4, o resultado deverá ser\r\n\\begin{table}[h]\r\n\\centering\r\n\\label{my-label}\r\n\\begin{tabular}{|l|l|l|l|}\r\n\\hline\r\n0 & 1 & 0 & 1 \\\\ \\hline\r\n1 & 0 & 1 & 0 \\\\ \\hline\r\n0 & 1 & 0 & 1 \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}','QT','2','remember','no','2019-03-27',1,5),(264,'mat 01','conceito elementos 1','Selecione qual das seguintes configurações de linhas e colunas de matriz possui maior número de elementos:\r\n\r\n[[def:\r\n\r\ndef geraVets():\r\n  v1=np.random.random_integers(5,size=6)+4\r\n  v2=np.random.random_integers(5,size=6)+4\r\n\r\n  mymax = 0\r\n  for i in range(6):\r\n    if mymax<v1[i]*v2[i]:\r\n      mymax=v1[i]*v2[i]\r\n      I=i\r\n  if I: #deixo o max no indice 0\r\n    aux=v1[0]\r\n    v1[0]=v1[I]\r\n    v1[1]=aux\r\n    aux=v2[0]\r\n    v2[0]=v2[I]\r\n    v2[1]=aux\r\n\r\n  # verifica se tem mais de um max\r\n  for i in range(1,6):\r\n    if mymax==v1[i]*v2[i]:\r\n      return []\r\n  return [v1,v2]\r\n\r\nwhile True:\r\n  v=geraVets()\r\n  if v:\r\n    v1=v[0]\r\n    v2=v[1]\r\n    break\r\n\r\na0L=v1[0]\r\na0C=v2[0]\r\n\r\na1L=v1[1]\r\na1C=v2[1]\r\n\r\na2L=v1[2]\r\na2C=v2[2]\r\n\r\na3L=v1[3]\r\na3C=v2[3]\r\n\r\na4L=v1[4]\r\na4C=v2[4]\r\n\r\na5L=v1[5]\r\na5C=v2[5]\r\n]]','QM','1','remember','yes','2019-03-27',1,5),(265,'mat 10','cria algebrica','Os dados contidos num vetor $V$ unidimensional com $n^2$ posições, $n > 2$, são números inteiros e positivos tais que $V[k] = k$. Esses dados são transferidos, a partir de $V[0]$, sequencialmente, para uma matriz $M (n\\times n$). A matriz é preenchida, linha por linha, de cima para baixo (de $0$ a $n-1$). Cada linha é preenchida coluna por coluna, da esquerda para a direita (de $0$ a $n-1$). Qual é o valor do conteúdo da célula $M(p,q)$, conteúdo da $p-$ésima linha e da $q-$ésima coluna?','QM','5','remember','no','2019-03-27',1,5),(266,'mat 01','conceito elementos 2','\\begin{verbatim}\r\ninteiro m[0..2,0..3], i, j\r\npara i=0 até 2 faça\r\n  para j=0 até 3 faça\r\n     m[i,j] = 3*i + 2*j\r\n  fim\r\nfim\r\n\\end{verbatim}\r\nNo algoritmo apresentado, o número de posições atualizadas da matriz m é igual a:','QM','1','remember','no','2019-03-27',1,5),(267,'mat 02','cria','Suponha que o valor lido para a variável k seja igual a 3.\r\n\\begin{lstlisting}\r\ninteiro m[0..4,0..4], i, j, k\r\nleia(k)\r\npara i=0 ate 4 faca\r\n  para j=0 ate 4 faca\r\n     m[i,j] = i-j\r\n  fim\r\nfim\r\npara i=0 ate 4 faca\r\n  para j=0 ate 4 faca\r\n     m[i,j] = m[i,j] + k\r\n  fim\r\nfim\r\n\\end{lstlisting}\r\nApós a execução do algoritmo, a somatória dos elementos da linha 0 da matriz  m será igual a:','QM','2','remember','no','2019-03-27',1,5),(268,'mat 03','QMmatrizCria3v1 cria diagonal','O procedimento abaixo preenche uma matriz quadrada $n \\times n$ com: $-1$ nos elementos abaixo da diagonal principal; $0$ nos elementos da diagonal principal; $1$ nos elementos acima da diagonal principal.\r\n\\begin{lstlisting}\r\n for i = 0 to n-1 \r\n      for j = 0 to n-1 \r\n         if i > j  \r\n             matriz[i,j] = ?\r\n         else if i < j  \r\n             matriz[i,j] = ?\r\n         else \r\n             matriz[i,j] = ?\r\n\\end{lstlisting}\r\nOs valores que devem ser respectivamente colocados no primeiro, segundo e terceiro comandos de atribuição, marcados no código com uma interrogação (?), para o preenchimento correto da matriz são:','QM','2','remember','no','2019-03-27',1,5),(270,'3','simula maior','Dado o algoritmo Busca (pseudo-código), onde A é um vetor e n é o número de elementos de A,\r\n\\begin{verbatim}\r\nBusca (A, n)\r\n x = A[0] \r\n para i de 1 até n-1, faça \r\n     se A[i] > x então \r\n         x = A [i]\r\n     fim se\r\n fim para\r\n devolve x\r\n\\end{verbatim}\r\no valor da saída x para o vetor de entrada A = [3, 2, 1, 7, 2, 5], onde n = 6, será','QM','3','remember','no','2019-03-27',1,4),(271,'3','simula 1while','\\begin{verbatim}\r\ninteiros i, k\r\nlogico a\r\nvetor v[0..9] de inteiros\r\nv = [ 6, 5, 1, 9, 0, 1, 4, 2, 3, 7] \r\nleia(k)\r\ni=0\r\na=falso\r\nenquanto (i<10 & a==falso) faça\r\n     se (v[i]==k)\r\n        escrever(\"Sucesso\")\r\n        a = verdade\r\n     senão\r\n        escrever(\"Insucesso\")\r\n     fim\r\n     i = i+1\r\nfim\r\n\\end{verbatim}\r\nÉ correto afirmar:','QM','3','remember','no','2019-03-27',1,4),(272,'vet 01','busca elemento vetor ordenado','Seja um vetor de inteiros com 400 elementos distintos ordenados em ordem crescente. Qual é o número máximo de iterações necessárias para encontrar um elemento qualquer do vetor?','QM','1','remember','no','2019-03-27',1,4),(273,'3','simula AZAZONAS','Considere o vetor vet a seguir: vet=[\'S\',\'M,\'N,\'A,\'O,\'Z,\'A,\'A\'], com 8 elementos. Após a execução dos seguintes comandos de atribuição:\r\n\\begin{verbatim}\r\n aux = vet[7]\r\n vet[7] = vet [0]\r\n vet[3] = vet[5]\r\n vet[5] = vet[2]\r\n vet[1] = vet[5]\r\n vet[0] = aux\r\n vet[2] = vet[0]\r\n\\end{verbatim}\r\nA configuração do vetor (do índice 0 ao 7) será:','QM','3','remember','no','2019-03-27',1,4),(274,'vet 02','conceito','Como resposta a uma questão da prova, a definição de estrutura de dados elementar denominada vetor foi apresentada por 4 alunos de formas diferentes. Identifique nas alternativas abaixo a resposta correta:','QM','1','remember','no','2019-03-27',1,4),(275,'vet 02','conceito','Em algoritmos e estruturas de dados existe um tipo de estrutura chamada vetor. Sobre vetores, assinale a alternativa INCORRETA.','QM','1','remember','no','2019-03-27',1,4),(276,'3','simula caso','\\begin{verbatim}\r\ninteiro vet[0..4], i\r\nvet = [3, 1, 6, 2, 4]\r\n para i de 0 até 4, passo 1, faça \r\n    Selecione i\r\n       Caso 0: vet[i] = vet[i]-1\r\n       Caso 1: vet[i] = vet[i]+1\r\n       Caso 2 vet[i] = vet[i-2]+vet[i-1]\r\n       Caso Default: vet[i] = 0\r\n\\end{verbatim}\r\nO conteúdo de vet, ao final da execução do algoritmo, será:','QM','3','remember','no','2019-03-27',1,4),(277,'3','simula caso b','Dado o algoritmo escrito em pseudo-código a seguir:\r\n\\begin{verbatim}\r\ninteiro vet[0..4], i\r\nvet = [3, 1, 6, 2, 4]\r\ni=0\r\nfaça \r\n    Selecione i\r\n       Caso 0: vet[i] = vet[i]-1\r\n       Caso 1: vet[i] = vet[i]+1\r\n       Caso 2: vet[i] = vet[i-2]+vet[i-1]\r\n       Caso outro: vet[i] = 0\r\n    fim Selecione\r\n    i = i + 1\r\naté que i < 5\r\n\\end{verbatim}\r\nA soma de todos os valores presentes em vet ao final da execução desse algoritmo será','QM','3','remember','no','2019-03-27',1,4),(278,'3','simula 2 for a','\\begin{verbatim} \r\npara i de 0 até 4 passo 1 faça \r\n   vet[i] = i\r\nfim\r\npara i de 0 até 3 passo 1 faça \r\n  vet[i+1] = v[i+1] + 2*v[i]\r\nfim\r\n\\end{verbatim}\r\nQual o valor de vet[4] após a execução do trecho de código acima?','QM','3','remember','no','2019-03-27',1,4),(279,'4','simula Fibonacci','\\begin{verbatim}\r\nvet[1] = 1\r\nvet[2] = 1\r\nPara i de 3 até 27 passo 1 faça\r\n  vet[i] = vet[i-1] + vet[i-2]\r\nFim_Para\r\n\\end{verbatim}\r\nConsiderando a execução completa do trecho de algoritmo precedente, assinale a opção que apresenta o valor armazenado em vet[10].','QM','4','remember','no','2019-03-27',1,4),(280,'3','simula inverte a','Ao final da execução do pseudo-código abaixo, o conteúdo do vetor $v$ será:\r\n\\begin{lstlisting}\r\ninteiros i, temp\r\nvetor v[0..7] de inteiros\r\nv = [1,2,3,4,5,6,7,8] \r\nPara i de 0 ate 7 passo 1 faca \r\n     temp = v[i] \r\n     v[i] = v[7-i] \r\n     v[7-i] = temp\r\nFim\r\n\\end{lstlisting}','QM','3','remember','no','2019-03-27',1,4),(281,'3','simula inverte b','Dado o vetor $w$ tal que $w[i]=i+1$, para $i=0$ até $8$. Dado o pseudo-código abaixo, qual será o conteúdo de vetor w depois de executado o pseudo-código?\r\n\\begin{lstlisting}\r\npara j = 0 ate 3 passo 1, faca\r\n     q = j +1\r\n     aux = w[q]\r\n     w[q] = w[8-q]\r\n     w[8-q] = aux\r\nfim\r\n\\end{lstlisting}','QM','3','remember','no','2019-03-27',1,4),(282,'3','simula insere','Dado um vetor X com zeros em todas as variáveis e o algoritmo: \r\n\\begin{verbatim}\r\npara i=0 até 4 passo 1 faça\r\n    escreva(\"digite o número\", i)\r\n    leia(X[i])\r\nfim\r\n\\end{verbatim}\r\nSerão digitados na sequência os números 34, 81, 79, 25 e 60. Após a digitação do segundo número, o vetor conterá:','QM','3','remember','no','2019-03-27',1,4),(283,'3','simula 2 for b','\\begin{verbatim}\r\ninteiros i, cont\r\nreal s,m\r\nvetor v[0..9] de inteiros\r\ns = 0\r\ncont = 0\r\npara i de 0 até 9 faça\r\n   leia(v[i])\r\n   s = s + v[i]\r\nfim\r\nm = s/10\r\npara i de 0 até 9 faça\r\n     se (v[i] < m)\r\n        cont = cont + 1\r\n     fim\r\nfim\r\nescrever(cont)\r\n\\end{verbatim}\r\nSe os valores lidos e armazenados no vetor n forem, respectivamente, 3, 5, 8, 4, 9, 7, 10, 7, 1 e 2, o valor exibido será :','QM','3','remember','no','2019-03-27',1,4),(284,'3','simula 1for 2while','\\begin{verbatim}\r\nVar v: vetor [0..7]: inteiro \r\nVar n, p, u, a: inteiro  \r\n   Para p de 0 até 7 passo 1 faça \r\n      leia (n) \r\n      v[p] = n \r\n    Fim_para \r\n    p = 0 \r\n    u = 8 \r\n    Enquanto (u <> 2) faça \r\n        Enquanto (p <> (u-1)) faça \r\n          Se (v[p] > v[p+1]) então \r\n              a = v[p] \r\n              v[p] = v[p+1] \r\n              v[p+1] = a \r\n           Fim_se \r\n           p = p + 1 \r\n         Fim_enquanto \r\n         p = 0 \r\n         u = u - 1 \r\n       Fim_enquanto    \r\n\\end{verbatim}\r\nConsiderando-se que v receba os valores 12, 21, 3, 9, 57, 33, 27 e 41, nessa ordem, após executar todos os laços de repetição as posições 4 e 5 do vetor v conterão, respectivamente, os valores','QM','3','remember','no','2019-03-27',1,4),(285,'3','simula 1for 1while','\\begin{verbatim} \r\n   para x de 1 até tamanhoVetor-1 passo 1 faça \r\n      conteudo = vet[x]\r\n      y = x-1\r\n      enquanto y>=0 & vet[y]>conteudo faça \r\n         vet[y+1] = vet[y]\r\n         y = y-1\r\n      fim\r\n      vet[y+1] = conteudo\r\n\\end{verbatim}\r\nQual o resultado final da variável \"vet\" a partir da entrada {5,4,3,2,8}?','QM','3','remember','no','2019-03-27',1,4),(286,'','imprimi par, ímpar','Escreva um programa que leia N números e após o fim da entrada de dados, exiba na tela, primeiro os elementos com conteúdo ímpar e depois os elementos das posições pares.','QT','1','remember','no','2019-03-27',NULL,4),(287,'','menor, maior, média, percentual de ímpares','Escreva um programa que leia N números e exiba na tela a média, o maior, o menor, o percentual de números ímpares e o percentual de múltiplos de 3.','QT','1','remember','no','2019-03-27',NULL,4),(288,'','intercalar 2vet','Escreva um programa que dados dois vetores de 20 números cada, gere um terceiro vetor para intercalar os elementos dos dois.','QT','1','remember','no','2019-03-27',NULL,4),(289,'','consumo carro','Construir um algoritmo que leia um vetor para armazenar os modelos de cinco carros (exemplo: FUSCA, GOL, VECTRA, etc). Leia outro vetor com o consumo desses carros, isto é, quantos quilômetros cada um desses carros faz com 1 litro de combustível. Calcule e mostre:\r\na)	O modelo do carro mais econômico.\r\nb)	Quantos litros de combustível cada um dos carros cadastrados consome para percorrer uma distância de 1000 quilômetros.','QT','1','remember','no','2019-03-27',NULL,4),(290,'a','QHvetorOrdena1v1 2while','Dado o programa abaixo em pseudo-codigo:\r\n\\begin{lstlisting}\r\n01 inteiro [[code:v0]][8], p, u, a  \r\n02 para(p=0; p<8; p++) { leia([[code:v0]][p]) }\r\n03 p = 0 \r\n04 u = 8 \r\n05 enquanto(u!=2) {\r\n06   enquanto(p!=u-1) {\r\n07     se ([[code:v0]][p] > [[code:v0]][p+1]) {\r\n08       a = [[code:v0]][p]\r\n09       [[code:v0]][p] = [[code:v0]][p+1]\r\n10       [[code:v0]][p+1] = a \r\n11     }\r\n12     p = p + 1 \r\n13   }   \r\n14   p = 0 \r\n15   u = u - 1 \r\n16 }      \r\n\\end{lstlisting}\r\nConsiderando-se que $[[code:v0]]$ receba os valores [[code:a0]], [[code:a1]], [[code:a2]], [[code:a3]], [[code:a4]], [[code:a5]], [[code:a6]] e [[code:a7]], nessa ordem, após executar todos os laços de repetição o índice [[code:x0]] de $[[code:v0]]$ contem o valor:\r\n\r\n%\\vspace{5mm}\\noindent\\textbf{Exemplo:}\r\n%\\begin{verbatim}\r\n% [code:mySimula] \r\n%\\end{verbatim}\r\n\r\n[[def:\r\n# para testar https://repl.it/languages/python\r\nglobal x0\r\n\r\n# escolho nomes de variaveis aleatorios, aparece somente no enunciado\r\nv0 = random.choice([\"V\",\"A\",\"B\",\"C\",\"D\",\"X\",\"Y\",\"W\",\"K\",\"Z\"]) \r\nv1 = random.choice([\"x\",\"y\",\"w\",\"k\",\"p\"])\r\nv2 = random.choice([\"q\",\"r\",\"s\",\"t\",\"u\"])\r\n\r\ndef myRandom():\r\n  global x0,a0,a1,a2,a3,a4,a5,a6,a7\r\n  x0 = random.randrange(3, 8, 1)\r\n\r\n  while True: # garantir vetor com elementos distintos\r\n    A = np.random.randint(50, size=8)\r\n    if len(set(A))==len(A):\r\n      break\r\n\r\n  [a0,a1,a2,a3,a4,a5,a6,a7] = A\r\n\r\n  return (A)\r\n\r\ndef algorithm(v):\r\n  global mySimula  \r\n  mySimula = \"lin p u v=%s\\n\" % (\' \'.join([str(i).zfill(2) for i in range(8)]))\r\n  p = 0 \r\n  u = 8 \r\n  mySimula += \" 04 %d %d v=%s\\n\" % (p,u,\' \'.join([str(i).zfill(2) for i in v]))\r\n  while u!=2:\r\n    while p!=u-1:\r\n      if (v[p] > v[p+1]):\r\n        a = v[p]\r\n        v[p] = v[p+1]\r\n        v[p+1] = a \r\n        mySimula += \" 10 %d %d v=%s\\n\" % (p,u,\' \'.join([str(i).zfill(2) for i in v]))\r\n      p = p + 1 \r\n    p = 0 \r\n    u = u - 1 \r\n  return v[x0]\r\n\r\nglobal correctAnswer\r\nwhile True: # garantir que o numero de iteracoes na simulacao fique semelhante em cada variacao\r\n  A=myRandom()\r\n  correctAnswer = algorithm(A)  # alternativa correta\r\n  if 280<len(mySimula)<320:\r\n    #print (len(mySimula))\r\n    #print (mySimula)\r\n    break\r\n\r\n# alternativas erradas\r\nglobal wrongAnswer0,wrongAnswer1,wrongAnswer2,wrongAnswer3,wrongAnswer4\r\n\r\nE0 = np.delete(A, np.argwhere((A == correctAnswer)))\r\n\r\nwrongAnswer0 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer0)))\r\n\r\nwrongAnswer1 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer1)))\r\n\r\nwrongAnswer2 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer2)))\r\n\r\nwrongAnswer3 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer3)))\r\n\r\nwrongAnswer4 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer4)))\r\n\r\n]]','QM','3','remember','yes','2019-03-29',1,4),(291,'a','QHvetorOrdena1v3 1while','Dado o programa abaixo em pseudo-codigo:\r\n\\begin{lstlisting}\r\n01 inteiro [[code:v0]][8], [[code:v1]], [[code:v2]]  \r\n02 para([[code:v1]]=0; [[code:v1]]<8; [[code:v1]]++) { leia([[code:v0]][ [[code:v1]] ]) }\r\n03 [[code:v1]] = 0 \r\n04 enquanto([[code:v1]] != 7) {\r\n05   se ([[code:v0]][ [[code:v1]] ] > [[code:v0]][ [[code:v1]] + 1 ]) { \r\n06     [[code:v2]] = [[code:v0]][ [[code:v1]] ] \r\n07     [[code:v0]][ [[code:v1]] ] = [[code:v0]][ [[code:v1]] + 1 ] \r\n08     [[code:v0]][ [[code:v1]] + 1 ] = [[code:v2]] \r\n09   }\r\n10   [[code:v1]] = [[code:v1]] + 1 \r\n11 }      \r\n\\end{lstlisting}\r\nConsiderando-se que $[[code:v0]]$ receba os valores [[code:a0]], [[code:a1]], [[code:a2]], [[code:a3]], [[code:a4]], [[code:a5]], [[code:a6]] e [[code:a7]], nessa ordem, após executar todos os laços de repetição o índice [[code:x0]] de $[[code:v0]]$  contem o valor:\r\n\r\n\r\n[[def:\r\n# para testar https://repl.it/languages/python\r\nglobal x0\r\n\r\n# escolho nomes de variaveis aleatorios, aparece somente no enunciado\r\nv0 = random.choice([\"V\",\"A\",\"B\",\"C\",\"D\",\"X\",\"Y\",\"W\",\"K\",\"Z\"]) \r\nv1 = random.choice([\"x\",\"y\",\"w\",\"k\",\"p\"])\r\nv2 = random.choice([\"q\",\"r\",\"s\",\"t\",\"u\"])\r\n\r\ndef myRandom():\r\n  global x0,a0,a1,a2,a3,a4,a5,a6,a7\r\n  x0 = random.randrange(3, 8, 1)\r\n\r\n  while True: # garantir vetor com elementos distintos\r\n    A = np.random.randint(50, size=8)\r\n    if len(set(A))==len(A):\r\n      break\r\n  [a0,a1,a2,a3,a4,a5,a6,a7] = A\r\n  return (A)\r\n\r\ndef algorithm(v):\r\n  global mySimula  \r\n  mySimula = \"lin p v=%s\\n\" % (\' \'.join([str(i).zfill(2) for i in range(8)]))\r\n  p = 0 \r\n  mySimula += \" 04 %d v=%s\\n\" % (p,\' \'.join([str(i).zfill(2) for i in v]))\r\n  while p!=7:\r\n      if (v[p] > v[p+1]):\r\n        a = v[p]\r\n        v[p] = v[p+1]\r\n        v[p+1] = a \r\n        mySimula += \" 10 %d v=%s\\n\" % (p,\' \'.join([str(i).zfill(2) for i in v]))\r\n      p = p + 1 \r\n  return v[x0]\r\n\r\nglobal correctAnswer\r\nwhile True: # garantir que o numero de iteracoes na simulacao fique semelhante em cada variacao\r\n  A=myRandom()\r\n  correctAnswer = algorithm(A)  # alternativa correta\r\n  if 280<len(mySimula)<320:\r\n    #print (len(mySimula))\r\n    #print (mySimula)\r\n    break\r\n\r\n# alternativas erradas\r\nglobal wrongAnswer0,wrongAnswer1,wrongAnswer2,wrongAnswer3,wrongAnswer4\r\n\r\nE0 = np.delete(A, np.argwhere((A == correctAnswer)))\r\n\r\nwrongAnswer0 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer0)))\r\n\r\nwrongAnswer1 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer1)))\r\n\r\nwrongAnswer2 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer2)))\r\n\r\nwrongAnswer3 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer3)))\r\n\r\nwrongAnswer4 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer4)))\r\n\r\n\r\n]]','QM','3','remember','yes','2019-03-30',NULL,4),(292,'b','QHvetorOrdena2v2 1while','Dado o programa abaixo em pseudo-codigo:\r\n\\begin{lstlisting}\r\n01 inteiro [[code:v0]][ 8 ], [[code:v1]], [[code:v2]], a  \r\n02 para([[code:v1]] = 0; [[code:v1]] < 8; [[code:v1]]++) { leia([[code:v0]][ [[code:v1]] ]) }\r\n03 [[code:v1]] = 1\r\n04 a = [[code:v0]][ [[code:v1]] ]\r\n05 [[code:v2]] = [[code:v1]] - 1\r\n06 enquanto ([[code:v2]] >= 0 e [[code:v0]][ [[code:v2]] ] > a) {\r\n07   [[code:v0]][ [[code:v2]] + 1 ] = [[code:v0]][ [[code:v2]] ]\r\n08   [[code:v2]] = [[code:v2]] - 1\r\n09 }\r\n10 [[code:v0]][ [[code:v2]] + 1 ] = a\r\n\\end{lstlisting}\r\nConsiderando-se que $[[code:v0]]$ receba os valores [[code:a0]], [[code:a1]], [[code:a2]], [[code:a3]], [[code:a4]], [[code:a5]], [[code:a6]] e [[code:a7]], nessa ordem, após executar todos os laços de repetição o índice [[code:x0]] de $[[code:v0]]$  contem o valor:\r\n\r\n%\\vspace{5mm}\\noindent\\textbf{Exemplo:}\r\n%\\begin{verbatim}\r\n%[code:mySimula]\r\n%\\end{verbatim}\r\n\r\n[[def:\r\n# para testar https://repl.it/languages/python\r\nglobal x0\r\n\r\n# escolho nomes de variaveis aleatorios, aparece somente no enunciado\r\nv0 = random.choice([\"V\",\"A\",\"B\",\"C\",\"D\",\"X\",\"Y\",\"W\",\"K\",\"Z\"]) \r\nv1 = random.choice([\"x\",\"y\",\"w\",\"k\",\"p\"])\r\nv2 = random.choice([\"q\",\"r\",\"s\",\"t\",\"u\"])\r\n\r\ndef myRandom():\r\n  global x0,a0,a1,a2,a3,a4,a5,a6,a7\r\n  x0 = random.randrange(3, 8, 1)\r\n\r\n  while True: # garantir vetor com elementos distintos\r\n    A = np.random.randint(50, size=8)\r\n    if len(set(A))==len(A):\r\n      break\r\n\r\n  [a0,a1,a2,a3,a4,a5,a6,a7] = A\r\n  return (A)\r\n\r\ndef algorithm(v):\r\n  global mySimula\r\n  mySimula = \"lin  x  y  a  v=%s\\n\" % (\' \'.join([str(i).zfill(2) for i in range(8)]))\r\n  x = 1\r\n  a = v[x]\r\n  y = x-1\r\n  mySimula += \" 05 %s %s %s  v=%s\\n\" % (str(x).zfill(2), str(y).zfill(2), str(a).zfill(2),\' \'.join([str(i).zfill(2) for i in v]))\r\n  while (y>=0 and v[y]>a):\r\n     v[y+1] = v[y]\r\n     y = y-1\r\n     mySimula += \" 08 %s %s %s  v=%s\\n\" % (str(x).zfill(2), str(y).zfill(2), str(a).zfill(2),\' \'.join([str(i).zfill(2) for i in v]))\r\n  v[y+1] = a\r\n  mySimula += \" 10 %s %s %s  v=%s\\n\" % (str(x).zfill(2), str(y).zfill(2), str(a).zfill(2),\' \'.join([str(i).zfill(2) for i in v]))\r\n  return v[x0]\r\n\r\nglobal correctAnswer, mySimula\r\nA=myRandom()\r\ncorrectAnswer = algorithm(A)  # alternativa correta\r\n\r\n# alternativas erradas\r\nglobal wrongAnswer0,wrongAnswer1,wrongAnswer2,wrongAnswer3,wrongAnswer4\r\n\r\nE0 = np.delete(A, np.argwhere((A == correctAnswer)))\r\n\r\nwrongAnswer0 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer0)))\r\n\r\nwrongAnswer1 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer1)))\r\n\r\nwrongAnswer2 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer2)))\r\n\r\nwrongAnswer3 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer3)))\r\n\r\nwrongAnswer4 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer4)))\r\n]]','QM','3','remember','yes','2019-03-30',NULL,4),(293,'b','QHvetorOrdena2v4 1for 1while','Dado o programa abaixo em pseudo-codigo:\r\n\\begin{lstlisting}\r\n01 inteiro [[code:v0]][ 8 ], [[code:v1]], [[code:v2]], a  \r\n02 para([[code:v1]]=0; [[code:v1]] < 8; [[code:v1]]++) { leia([[code:v0]][ [[code:v1]] ]) }\r\n03 para([[code:v1]] = 0; [[code:v1]] < 8; [[code:v1]]++) {\r\n04   a = [[code:v0]][ [[code:v1]] ]\r\n05   [[code:v2]] = [[code:v1]] - 1\r\n06   enquanto ([[code:v2]] >= 0 e [[code:v0]][ [[code:v2]] ] > a) {\r\n07     [[code:v0]][ [[code:v2]] + 1 ] = [[code:v0]][ [[code:v2]] ]\r\n08     [[code:v2]] = [[code:v2]] - 1\r\n09   }\r\n10   [[code:v0]][ [[code:v2]] + 1 ] = a\r\n11 }\r\n\\end{lstlisting}\r\nConsiderando-se que $[[code:v0]]$ receba os valores [[code:a0]], [[code:a1]], [[code:a2]], [[code:a3]], [[code:a4]], [[code:a5]], [[code:a6]] e [[code:a7]], nessa ordem, após executar todos os laços de repetição o índice [[code:x0]] de $[[code:v0]]$  contem o valor:\r\n\r\n%\\vspace{5mm}\\noindent\\textbf{Exemplo:}\r\n%\\begin{verbatim}\r\n%[code:mySimula0]\r\n%\\end{verbatim}\r\n\r\n[[def:\r\n# para testar https://repl.it/languages/python\r\nglobal x0\r\n\r\n# escolho nomes de variaveis aleatorios, aparece somente no enunciado\r\nv0 = random.choice([\"V\",\"A\",\"B\",\"C\",\"D\",\"X\",\"Y\",\"W\",\"K\",\"Z\"]) \r\nv1 = random.choice([\"x\",\"y\",\"w\",\"k\",\"p\"])\r\nv2 = random.choice([\"q\",\"r\",\"s\",\"t\",\"u\"])\r\n\r\ndef myRandom():\r\n  global x0,a0,a1,a2,a3,a4,a5,a6,a7\r\n  x0 = random.randrange(3, 8, 1)\r\n\r\n  while True: # garantir vetor com elementos distintos\r\n    A = np.random.randint(50, size=8)\r\n    if len(set(A))==len(A):\r\n      break\r\n\r\n  [a0,a1,a2,a3,a4,a5,a6,a7] = A\r\n  return (A)\r\n\r\ndef algorithm(v):\r\n  global mySimula0\r\n  mySimula0 = \"lin  x  y  a  v=%s\\n\" % (\' \'.join([str(i).zfill(2) for i in range(8)]))\r\n  for x in range(8):\r\n    a = v[x]\r\n    y = x-1\r\n    mySimula0 += \" 05 %s %s %s  v=%s\\n\" % (str(x).zfill(2), str(y).zfill(2), str(a).zfill(2),\' \'.join([str(i).zfill(2) for i in v]))\r\n    while (y>=0 and v[y]>a):\r\n      v[y+1] = v[y]\r\n      y = y-1\r\n      mySimula0 += \" 08 %s %s %s  v=%s\\n\" % (str(x).zfill(2), str(y).zfill(2), str(a).zfill(2),\' \'.join([str(i).zfill(2) for i in v]))\r\n    v[y+1] = a\r\n    mySimula0 += \" 10 %s %s %s  v=%s\\n\" % (str(x).zfill(2), str(y).zfill(2), str(a).zfill(2),\' \'.join([str(i).zfill(2) for i in v]))\r\n  return v[x0]\r\n\r\nglobal correctAnswer, mySimula0\r\nA=myRandom()\r\ncorrectAnswer = algorithm(A)  # alternativa correta\r\n\r\n# alternativas erradas\r\nglobal wrongAnswer0,wrongAnswer1,wrongAnswer2,wrongAnswer3,wrongAnswer4\r\n\r\nE0 = np.delete(A, np.argwhere((A == correctAnswer)))\r\n\r\nwrongAnswer0 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer0)))\r\n\r\nwrongAnswer1 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer1)))\r\n\r\nwrongAnswer2 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer2)))\r\n\r\nwrongAnswer3 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer3)))\r\n\r\nwrongAnswer4 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer4)))\r\n]]','QM','3','remember','yes','2019-03-30',NULL,4),(294,'e','QMvetorInverte2v1 por 1for','Dado o algoritmo abaixo:\r\n\\begin{lstlisting}\r\n01 para(i=0; i<9; i++) { [[code:v0]][i]=i+1 }\r\n02 para([[code:v1]]=0; [[code:v1]]<4; [[code:v1]]++) {\r\n03   [[code:v2]] = [[code:v1]]+1\r\n04   aux = [[code:v0]][ [[code:v2]] ]\r\n05   [[code:v0]][ [[code:v2]] ] = [[code:v0]][ 8 - [[code:v2]] ]\r\n06   [[code:v0]][ 8 - [[code:v2]] ] = aux\r\n07 }\r\n08 para(i=0; i<9; i++) { escreva([[code:v0]][i]) }\r\n\\end{lstlisting}\r\nApós a execução deste algoritmo, o conteúdo do vetor $[[code:v0]]$ no índice [[code:x0]]  contem o valor:\r\n\r\n[[def:\r\n# para testar:  https://repl.it/languages/python\r\nglobal x0\r\n\r\n# escolho nomes de variaveis aleatorios, aparece somente no enunciado\r\nv0 = random.choice([\"V\",\"A\",\"B\",\"C\",\"D\",\"X\",\"Y\",\"W\",\"K\",\"Z\"]) \r\nv1 = random.choice([\"x\",\"y\",\"w\",\"k\",\"p\"])\r\nv2 = random.choice([\"q\",\"r\",\"s\",\"t\",\"u\"])\r\n\r\ndef myRandom():\r\n  global x0,x1\r\n  x0 = random.randrange(0, 9, 1)\r\n  x1 = random.randrange(0, 4, 1)\r\n\r\n  A = np.zeros((9,), dtype=int)\r\n  for i in range(9): \r\n    A[i] = i + x1\r\n\r\n  return (A)\r\n\r\ndef algorithm(v):\r\n  global mySimula\r\n  mySimula = \"lin  j  q  v=%s\\n\" % (\' \'.join([str(i).zfill(2) for i in range(9)]))\r\n  for j in range(4):\r\n    q = j+1\r\n    aux = v[q]\r\n    v[q] = v[8-q]\r\n    v[8-q] = aux\r\n    mySimula += \" 06 %s %s  v=%s\\n\" % (str(j).zfill(2), str(q).zfill(2),\' \'.join([str(i).zfill(2) for i in v]))\r\n  return v[x0]\r\n\r\nglobal correctAnswer, mySimula\r\nA=myRandom()\r\ncorrectAnswer = algorithm(A)  # alternativa correta\r\n\r\n# alternativas erradas\r\nglobal wrongAnswer0,wrongAnswer1,wrongAnswer2,wrongAnswer3,wrongAnswer4\r\n\r\nE0 = np.delete(A, np.argwhere((A == correctAnswer)))\r\n\r\nwrongAnswer0 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer0)))\r\n\r\nwrongAnswer1 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer1)))\r\n\r\nwrongAnswer2 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer2)))\r\n\r\nwrongAnswer3 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer3)))\r\n\r\nwrongAnswer4 = random.choice(E0)\r\nE0 = np.delete(E0, np.argwhere((E0 == wrongAnswer4)))\r\n]]','QM','2','remember','yes','2019-03-31',NULL,4),(295,'mat 02','QMmatrizCria2v1','Suponha que o valor lido para a variável [[code:v1]] seja igual a [[code:x0]] no algoritmo abaixo. Após a execução, aparecerá na tela o número:\r\n\r\n\\begin{lstlisting}\r\n01 inteiro [[code:v0]][ [[code:a0]] ][ [[code:a1]] ], i, j, [[code:v1]], [[code:v2]] = 0\r\n02 leia([[code:v1]])\r\n03 para(i=0; i<[[code:a0]]; i++) {\r\n04   para(j=0; j<[[code:a1]]; j++) {\r\n05      [[code:v0]][i][j] = [[code:e0+e1+e2+v1]]\r\n06      se(i == [[code:x1]]) { [[code:v2]] = [[code:v2]] + [[code:v0]][i][j] }\r\n07   }\r\n08 }\r\n09 escreva([[code:v2]])\r\n\\end{lstlisting}\r\n\r\n[[code:imprimirMatriz]]\r\n\r\n\r\n\r\n[[def:\r\n# para testar:  https://repl.it/languages/python\r\nglobal x0,v1\r\n\r\n# escolho nomes de variaveis aleatorios, aparece somente no enunciado\r\nv0 = random.choice([\"V\",\"A\",\"B\",\"C\",\"D\",\"X\",\"Y\",\"W\",\"K\",\"Z\"]) \r\nv1 = random.choice([\"x\",\"y\",\"w\",\"k\",\"p\"])\r\nv2 = random.choice([\"q\",\"r\",\"s\",\"t\",\"u\"])\r\n\r\ndef myRandom():\r\n  global x0,x1,a0,a1,e0,e1,e2\r\n  x0 = random.randrange(1, 9, 1) # constante\r\n  x1 = random.randrange(1, 4, 1) # linha\r\n\r\n  a0=random.randrange(4,6)\r\n  a1=random.randrange(4,6)\r\n\r\n  e0 = random.choice([\'i\',\'-i\'])  \r\n  e1 = random.choice([\'+j\',\'-j\'])  \r\n  e2 = random.choice([\'-\',\'+\'])\r\n\r\n  A=np.zeros((a0, a1), dtype=np.int)\r\n  for i in range(a0):\r\n    for j in range(a1):\r\n      if e0+e1+e2==\'i+j+\':\r\n        A[i][j]=i+j+x0\r\n      elif e0+e1+e2==\'i+j-\':\r\n        A[i][j]=i+j-x0\r\n      elif e0+e1+e2==\'i-j+\':\r\n        A[i][j]=i-j+x0\r\n      elif e0+e1+e2==\'i-j-\':\r\n        A[i][j]=i-j-x0\r\n\r\n      elif e0+e1+e2==\'-i+j+\':\r\n        A[i][j]=-i+j+x0\r\n      elif e0+e1+e2==\'-i+j-\':\r\n        A[i][j]=-i+j-x0\r\n      elif e0+e1+e2==\'-i-j+\':\r\n        A[i][j]=-i-j+x0\r\n      elif e0+e1+e2==\'-i-j-\':\r\n        A[i][j]=-i-j-x0\r\n  return (A)\r\n\r\n\r\ndef printMatrix(A):\r\n  str1=\'\'\'\r\n\\\\noindent\\\\textbf{Exemplo:}\r\n\\\\begin{displaymath}\r\n\\\\begin{bmatrix}\r\n\'\'\'\r\n\r\n  for i in range(A.shape[0]):\r\n    for j in range(A.shape[1]):\r\n      str1+=str(A[i,j])\r\n      if j<A.shape[1]-1:\r\n        str1+=\"&\"\r\n    str1+=\"\\\\\\\\\\n\"  \r\n\r\n  str1+=\'\'\'\r\n\\\\end{bmatrix}\r\n\\\\end{displaymath}\r\n\'\'\'\r\n  return str1      \r\n\r\nglobal correctAnswer\r\nA=myRandom()\r\ncorrectAnswer = np.sum(A[x1])\r\n\r\n# PARA TESTAR\r\nimprimirMatriz = printMatrix(A)\r\n\r\n]]','QM','2','remember','yes','2019-03-31',NULL,5),(296,'mat 04','QMmatrizCria4v1','Suponha que o valor lido para a variável [[code:v1]] seja igual a [[code:x0]] no algoritmo abaixo. Após a execução, a soma dos elementos da matriz na linha de índice [[code:x1]] será:\r\n\r\n\\begin{lstlisting}\r\n01 inteiro [[code:v0]][ [[code:a0]] ][ [[code:a1]] ], i, j, [[code:v1]], [[code:v2]] = 0\r\n02 leia([[code:v1]])\r\n03 para(i=1; i<[[code:a0]]-1; i++) {\r\n04   para(j=1; j<[[code:a1]]-1; j++) {\r\n05      [[code:v0]][i+1][j+1] =  [[code:v0]][i-1][j-1] + [[code:v1]] + [[code:v0]][i][j] \r\n06   }\r\n07 }\r\n\\end{lstlisting}\r\n\r\n%[code:imprimirMatriz]\r\n\r\n[[def:\r\n# para testar:  https://repl.it/languages/python\r\nglobal x0,v1\r\n\r\n# escolho nomes de variaveis aleatorios, aparece somente no enunciado\r\nv0 = random.choice([\"V\",\"A\",\"B\",\"C\",\"D\",\"X\",\"Y\",\"W\",\"K\",\"Z\"]) \r\nv1 = random.choice([\"x\",\"y\",\"w\",\"k\",\"p\"])\r\nv2 = random.choice([\"q\",\"r\",\"s\",\"t\",\"u\"])\r\n\r\ndef myRandom():\r\n  global x0,x1,a0,a1,e0,e1,e2\r\n  x0 = random.randrange(1, 9, 1) # constante\r\n\r\n  a0=random.randrange(4,6)  # linhas\r\n  a1=random.randrange(4,6)  # colunas\r\n\r\n  x1 = random.randrange(2, a0, 1) # linha\r\n\r\n  e0 = random.choice([\'i\',\'-i\'])  \r\n  e1 = random.choice([\'+j\',\'-j\'])  \r\n  e2 = random.choice([\'-\',\'+\'])\r\n\r\n  A=np.zeros((a0, a1), dtype=np.int)\r\n  for i in range(1,a0-1):\r\n    for j in range(1,a1-1):\r\n      A[i+1][j+1]= A[i-1][j-1] + x0 + A[i][j]\r\n\r\n  return (A)\r\n\r\n\r\ndef printMatrix(A):\r\n  str1=\'\'\'\r\n\\\\noindent\\\\textbf{Exemplo:}\r\n\\\\begin{displaymath}\r\n\\\\begin{bmatrix}\r\n\'\'\'\r\n\r\n  for i in range(A.shape[0]):\r\n    for j in range(A.shape[1]):\r\n      str1+=str(A[i,j])\r\n      if j<A.shape[1]-1:\r\n        str1+=\"&\"\r\n    str1+=\"\\\\\\\\\\n\"  \r\n\r\n  str1+=\'\'\'\r\n\\\\end{bmatrix}\r\n\\\\end{displaymath}\r\n\'\'\'\r\n  return str1      \r\n\r\nglobal correctAnswer\r\nA=myRandom()\r\ncorrectAnswer = np.sum(A[x1])\r\n\r\n# PARA TESTAR\r\nimprimirMatriz = printMatrix(A)\r\n\r\n]]','QM','2','remember','yes','2019-03-31',NULL,5),(297,'g','QEmodulo1v1 java','Dado o método abaixo em Java. A finalidade do método é:\r\n\\begin{lstlisting}\r\n    static char metodo1(int x)  { \r\n        if(x >= 0 && x < 10) return (char)(\'0\'+x);\r\n        if(x >= 10 && x < 16) return (char)(\'A\'+x-10); \r\n        else return \' \';\r\n    }            \r\n\\end{lstlisting}','QM','1','remember','no','2019-03-31',NULL,6),(298,'g','QEmodulo1v2 java','Dado o método abaixo em Java. Podemos afirmar que:\r\n\\begin{lstlisting}\r\n    static char metodo1(int x)  { \r\n        if(x >= 0 && x < 10) return (char)(\'0\'+x);\r\n        if(x >= 10 && x < 16) return (char)(\'A\'+x-10); \r\n        return \' \';\r\n    }            \r\n\\end{lstlisting}','QM','1','remember','no','2019-03-31',NULL,6),(299,'g','QEmodulo1v3 java','Dado o método abaixo em Java. A finalidade do método é:\r\n\\begin{lstlisting}\r\n    static int metodo2(char x) { \r\n        if(x >= \'0\' && x < \'A\') return (int)(x-\'0\');\r\n        if(x >= \'A\' && x <= \'F\') return (int)(x-\'A\'+10); \r\n        return -1;\r\n    }            \r\n\\end{lstlisting}','QM','1','remember','no','2019-03-31',NULL,6),(300,'g','QEmodulo1v4 java','Dado o método abaixo em Java. Podemos afirmar que:\r\n\\begin{lstlisting}\r\n    static int metodo2(char x)   { \r\n        if(x >= \'0\' && x < \'A\') return (int)(x-\'0\');\r\n        if(x >= \'A\' && x <= \'F\') return (int)(x-\'A\'+10); \r\n        return -1;\r\n    }            \r\n\\end{lstlisting}','QM','1','remember','no','2019-03-31',NULL,6),(301,'h','QEmodvet1v1 java','Dado o método abaixo em Java. Sabendo que finalidade do método é preencher um vetor de algarismos romanos de I a XXXIX (1 a 39) usando o método auxiliar \"static $<3>$ romano($<4>$ x)\", os campos $<1>,<2>,<3>,<4>$ devem ser:\r\n\\begin{lstlisting}\r\n    static <1> romanoVet()  {\r\n       <2> xv = new String[39];\r\n       for(int num=0;num<39;num++) \r\n         xv[num] = romano(num+1);\r\n       return xv;\r\n    }            \r\n\\end{lstlisting}','QM','1','remember','no','2019-03-31',NULL,6),(302,'h','QEmodvet1v4 java','Dado o método abaixo em Java. Sabendo que finalidade do método é preencher um vetor de algarismos romanos de I a XXXIX (1 a 39) usando o método auxiliar \"static String romano($<4>$ x)\", os campos $<1>,<2>,<3>,<4>$ devem ser:\r\n\\begin{lstlisting}\r\n    static <1> romanoVet()   {\r\n       <2> xv = new <3>[39];\r\n       for(int num=0;num<39;num++) \r\n         xv[num] = romano(num+1);\r\n       return xv;\r\n    }            \r\n\\end{lstlisting}','QM','1','remember','no','2019-03-31',NULL,6),(303,'h','QEmodvet1v3 java','Dado o método abaixo em Java. Sabendo que finalidade do método é preencher um vetor de algarismos romanos de I a XXXIX (1 a 39) usando o método auxiliar \"static $<3>$ romano($<4>$ x)\", \r\nos campos $<1>,<2>,<3>,<4>$ devem ser:\r\n\\begin{lstlisting}\r\n    static String [] romanoVet() {\r\n       <1> xv = new <2>[39];\r\n       for(int num=0;num<39;num++) \r\n         xv[num] = romano(num+1);\r\n       return xv;\r\n    }            \r\n\\end{lstlisting}','QM','1','remember','no','2019-03-31',NULL,6),(304,'i','QMmodmat1v1 java','Dado o método abaixo em Java. Sabendo que finalidade do método é preencher uma matriz 16x16 de hexadecimais com os hexadecimais de 0 a FF (0 a 255), começando da primeira linha e primeira \r\ncoluna e prosseguindo da esquerda para a direita e de cima para baixo, usando o \r\nmétodo auxiliar \"static String hexadecimal($<4>$ x)\", cuja finalidade é obter a\r\nrepresentação hexadecimal de números de 0 a 255, os campos $<1>,<2>,<3>,<4>$ são:\r\n\\begin{lstlisting}\r\n    static String <1> hexadecimalMat()   {\r\n       <2> hm = new String[16][16];\r\n       for(int i=0; i<16; i++) \r\n        for(int j=0; j<16; j++)   \r\n         hm[i][j] = hexadecimal(<3>);\r\n       return hm;\r\n    }            \r\n\\end{lstlisting}','QM','3','remember','no','2019-03-31',NULL,6),(305,'i','QMmodmat1v2 java','Dado o método abaixo em Java. Sabendo que finalidade do método é preencher uma matriz 16x16 de hexadecimais com os hexadecimais de 0 a FF (0 a 255), começando da primeira linha e primeira \r\ncoluna e prosseguindo da esquerda para a direita e de cima para baixo, usando o \r\nmétodo auxiliar \"static String hexadecimal(int x)\", cuja finalidade é obter a\r\nrepresentação hexadecimal de números de 0 a 255, os campos $<1>,<2>,<3>,<4>$ são:\r\n\\begin{lstlisting}\r\n    static <1> hexadecimalMat()\r\n    {\r\n       <2> hm = new <3>[16][16];\r\n       for(int i=0; i<16; i++) \r\n        for(int j=0; j<16; j++)   \r\n         hm[i][j] = hexadecimal(<4>);\r\n       return hm;\r\n    }            \r\n\\end{lstlisting}','QM','3','remember','no','2019-03-31',NULL,6),(306,'i','QMmodmat1v3 java','Dado o método abaixo em Java. Sabendo que finalidade do método é preencher uma matriz 16x16 de hexadecimais\r\ncom os hexadecimais de 0 a FF (0 a 255), começando da primeira linha e primeira \r\ncoluna e prosseguindo da esquerda para a direita e de cima para baixo, usando o \r\nmétodo auxiliar \"static String hexadecimal($<4>$ x)\", cuja finalidade é obter a\r\nrepresentação hexadecimal de números de 0 a 255, os campos $<1>,<2>,<3>,<4>$ são:\r\n\\begin{lstlisting}\r\n    static <1> [][] hexadecimalMat() {\r\n       String <2> hm = new String[16][16];\r\n       for(int i=0; i<16; i++) \r\n        for(int j=0; j<16; j++)   \r\n         hm[i][j] = hexadecimal(<3>);\r\n       return hm;\r\n    }            \r\n\\end{lstlisting}','QM','3','remember','no','2019-03-31',NULL,6),(307,'j','QHmodulo3v1 java','Dado o método abaixo em Java. Sabendo que finalidade do método é obter os algarismos romanos\r\nde I a XXXIX (1 a 39), e que o método \"concat\" concatena caracteres, os campos $<1>,<2>,<3>,<4>,<5>$ são:\r\n\\begin{lstlisting}\r\n    static String romano(int x)  {\r\n        int d = x/10; r = x%10;\r\n        <1> y = new String();\r\n        if(d < 4) {\r\n            for(int i=0; i<d; i++) y = y.concat(<2>);\r\n            if(r < 4) for(int i=0; i<r; i++) y = y.concat(\"I\");\r\n            else if(r < 9) {\r\n                int c = r - 5;\r\n                if(c >= 0) { y = y.concat(<3>); \r\n                   for(int i=0; i<c; i++) y = y.concat(\"I\"); }\r\n                else y = y.concat(<4>);  \r\n            } else y = y.concat(<5>);\r\n            return y;\r\n        } \r\n        return null;  }                  \r\n\\end{lstlisting}','QM','5','remember','no','2019-03-31',NULL,6),(308,'j','QHmodulo3v2 java','Dado o método abaixo em Java. Sabendo que finalidade do método é obter os algarismos romanos\r\nde I a XXXIX (1 a 39), e que o método \"concat\" concatena caracteres, os campos $<1>,<2>,<3>,<4>,<5>$ são:\r\n\\begin{lstlisting}\r\n    static <1> romano(int x) {\r\n        int d = x/10, r = x%10;\r\n        String y = new String();\r\n        if(d < 4)  {\r\n            for(int i=0; i<d; i++) y = y.concat(\"X\");\r\n            if(r < 4) for(int i=0; i<r; i++) y = y.concat(<2>);\r\n            else if(r < 9) {\r\n                int c = r - 5;\r\n                if(c >= 0) { y = y.concat(<3>); \r\n                     for(int i=0; i<c; i++) y = y.concat(\"I\"); }\r\n                else y = y.concat(<4>);  \r\n            }  else y = y.concat(<5>);\r\n            return y;\r\n        } \r\n        return null;  }                  \r\n\\end{lstlisting}','QM','5','remember','no','2019-03-31',NULL,6),(309,'j','QHmodulo3v3 java','Dado o método abaixo em Java. Sabendo que finalidade do método é obter os algarismos romanos\r\nde I a XXXIX (1 a 39), e que o método \"concat\" concatena caracteres, os campos $<1>,<2>,<3>,<4>,<5>$ são:\r\n\r\n\\begin{lstlisting}\r\n    static String romano(int x) {\r\n        int d = x/10,  r = x%10;\r\n        String y = new <1>();\r\n        if(d < 4)  {\r\n            for(int i=0; i<d; i++) y = y.concat(\"X\");\r\n            if(r < 4) for(int i=0; i<r; i++) y = y.concat(\"I\");\r\n            else if(r < 9) {\r\n                int c = r - 5;\r\n                if(c >= 0) { y = y.concat(<2>); \r\n                     for(int i=0; i<c; i++) y = y.concat(<3>); }\r\n                else y = y.concat(<4>);  \r\n            }    else y = y.concat(<5>);\r\n            return y;\r\n        } \r\n        return null;  }                  \r\n\\end{lstlisting}','QM','5','remember','no','2019-03-31',NULL,6),(310,'mat 03','QMmatrizCria3v4 cria diagonal','O procedimento abaixo preenche uma matriz quadrada $n \\times n$ com: $-1$ nos \r\nelementos acima da diagonal secundária; $0$ nos elementos da diagonal \r\nsecundária; $1$ nos elementos abaixo da diagonal secundária.\r\n\\begin{lstlisting}\r\nfor(int i=0;i<n;i++) {\r\n  for(int j=0;j<n;j++) {\r\n    if(i > ?-j) matriz[i][j] = 1;\r\n    else if(i < ?-j) matriz[i][j] = -1;\r\n    else matriz[i][j] = ?;\r\n  } } \r\n\\end{lstlisting}\r\nOs valores que devem ser respectivamente colocados na primeira, segunda \r\ne terceira linhas do laço interno, marcados no código com uma interrogação (?), \r\npara o preenchimento correto da matriz são:','QM','2','remember','no','2019-04-04',1,5),(311,'mat 03','QMmatrizCria3v5 cria diagonal','O código abaixo (Java) preenche uma matriz quadrada $n \\times n$ com: $1$ nos elementos \r\nacima da diagonal secundária; $0$ nos elementos da diagonal secundária; $-1$ nos \r\nelementos abaixo da diagonal secundária.\r\n\\begin{lstlisting}\r\nfor(int i=0;i<n;i++) {\r\n  for(int j=0;j<n;j++) {\r\n    if(i > ?-j) matriz[i][j] = -1;\r\n    else if(i < ?-j) matriz[i][j] = 1;\r\n    else matriz[i][j] = ?;\r\n  }  } \r\n\\end{lstlisting}\r\nOs valores que devem ser respectivamente colocados na primeira, segunda e \r\nterceira linhas do laço interno, marcados no código com uma interrogação (?), \r\npara o preenchimento correto da matriz são:','QM','2','remember','no','2019-04-04',1,5),(312,'mat 03','QMmatrizCria3v6 cria diagonal','O código abaixo (Java) preenche uma matriz quadrada $n \\times n$ com: $0$ nos elementos \r\nacima da diagonal secundária; $1$ nos elementos da diagonal secundária; $-1$ nos\r\nelementos abaixo da diagonal secundária.\r\n\\begin{lstlisting}\r\nfor(int i=0;i<n;i++) {\r\n  for(int j=0;j<n;j++) {\r\n    if(i > ?-j) matriz[i][j] = -1;\r\n    else if(i < ?-j) matriz[i][j] = 0;\r\n    else matriz[i][j] = ?;\r\n  } } \r\n\\end{lstlisting}\r\nOs valores que devem ser respectivamente colocados na primeira, segunda e \r\nterceira linhas do laço interno, marcados no código com uma interrogação (?), \r\npara o preenchimento correto da matriz são:','QM','2','remember','no','2019-04-04',1,5),(313,'g','QEmodulo2v1 java','Dado o método abaixo em Java. Sabendo que finalidade do método auxiliar \"static String hexa(int x)\" é \r\nobter a representação hexadecimal de números de 0 a 15 e que a finalidade\r\ndo \"metodo3\" é \"Obter a representação hexadecimal de números de 0 a $<campo2>$\", \r\nos campos $<campo1>$, $<campo2>$ devem ser: \r\n\\begin{lstlisting}\r\n    static <campo1> metodo3(int x) {\r\n        int d = x/16;\r\n        int r = x%16;\r\n        <campo1> y = new String();\r\n        if(d < 16) {\r\n            y = y.concat(hexa(d));\r\n            y = y.concat(hexa(r));\r\n            return y;\r\n        } \r\n        return null;\r\n    }               \r\n\\end{lstlisting}','QM','1','remember','no','2019-04-04',1,6),(314,'g','QEmodulo2v2 java','Dado o método abaixo em Java. Sabendo que finalidade do método auxiliar \"static String hexa(int x)\" é \r\nobter a representação hexadecimal de números de 0 a 15 e que a finalidade\r\ndo \"metodo3\" é \"Obter a representação hexadecimal de números de 0 a $<campo2>$\", \r\nos campos $<campo1>$, $<campo2>$ devem ser: \r\n\r\n\\begin{lstlisting}\r\n    static String metodo3(int x) {\r\n        int d = x/16;\r\n        int r = x%16;\r\n        <campo1> y = new <campo1>();\r\n        if(d < 16) {\r\n            y = y.concat(hexa(d));\r\n            y = y.concat(hexa(r));\r\n            return y;\r\n        } \r\n        return null;\r\n    }               \r\n\\end{lstlisting}','QM','1','remember','no','2019-04-04',1,6),(315,'g','QEmodulo2v3 java','Dado o método abaixo em Java. Sabendo que finalidade do método auxiliar \"static String hexa(int x)\" é \r\nobter a representação hexadecimal de números de 0 a 15 e que a finalidade\r\ndo \"metodo3\" é \"Obter a representação hexadecimal de números de 0 a $<campo2>$\", \r\nos campos $<campo1>$, $<campo2>$ devem ser: \r\n\r\n\\begin{lstlisting}\r\n    static <campo1> metodo3(int x) {\r\n        int d = x/16;\r\n        int r = x%16;\r\n        String y = new <campo1>();\r\n        if(d < 16) {\r\n            y = y.concat(hexa(d));\r\n            y = y.concat(hexa(r));\r\n            return y;\r\n        } \r\n        return null;\r\n    }               \r\n\\end{lstlisting}','QM','1','remember','no','2019-04-04',1,6),(316,'h','QEmodvet1v4 java','Dado o método abaixo em Java. Sabendo que finalidade do método é preencher um vetor de algarismos romanos\r\nde I a XXXIX (1 a 39) usando o método auxiliar \"static $<4>$ romano(int x)\",  \r\nos campos $<1>, <2>, <3>, <4>$ devem ser:\r\n\r\n\\begin{lstlisting}\r\n    static <1> [] romanoVet()  {\r\n       String <2> xv = new <3>[39];\r\n       for(int num=0;num<39;num++) \r\n         xv[num] = romano(num+1);\r\n       return xv;\r\n    }            \r\n\\end{lstlisting}','QM','1','remember','no','2019-04-04',1,6),(317,'h','QEmodvet1v5 java','Dado o método abaixo em Java. Sabendo que finalidade do método é preencher um vetor de algarismos romanos\r\nde I a XXXIX (1 a 39) usando o método auxiliar \"static $<4>$ romano(int x)\",  \r\nos campos $<1>, <2>, <3>, <4>$ devem ser:\r\n\r\n\\begin{lstlisting}\r\n    static String <1> romanoVet() {\r\n       <2> xv = new <3>[39];\r\n       for(int num=0;num<39;num++) \r\n         xv[num] = romano(num+1);\r\n       return xv;\r\n    }            \r\n\\end{lstlisting}','QM','1','remember','no','2019-04-04',1,6),(318,'h','QEmodvet1v6 java','Dado o método abaixo em Java. Sabendo que finalidade do método é preencher um vetor de algarismos romanos\r\nde I a XXXIX (1 a 39) usando o método auxiliar \"static $<3>$ romano($<4>$ x)\",  \r\nos campos $<1>, <2>, <3>, <4>$ devem ser:\r\n\r\n\\begin{lstlisting}\r\n    static String [] romanoVet() {\r\n       <1> xv = new <2>[39];\r\n       for(int num=0;num<39;num++) \r\n         xv[num] = romano(num+1);\r\n       return xv;\r\n    }            \r\n\\end{lstlisting}','QM','1','remember','no','2019-04-04',1,6),(319,'i','QMmodmat1v4 java','Dado o método abaixo em Java. Sabendo que finalidade do método é preencher uma matriz 16x16 de hexadecimais\r\ncom os hexadecimais de 0 a FF (0 a 255), começando da primeira linha e primeira \r\ncoluna e prosseguindo da esquerda para a direita e de cima para baixo, usando o \r\nmétodo auxiliar \"static String hexadecimal(int x)\", cuja finalidade é obter a\r\nrepresentação hexadecimal de números de 0 a 255, os campos $<1>, <2>, <3>, <4>$ são:\r\n\r\n\\begin{lstlisting}\r\n    static <1> [][] hexadecimalMat() {\r\n       String <2> hm = new <3>[16][16];\r\n       for(int i=0; i<16; i++) \r\n        for(int j=0; j<16; j++)   \r\n         hm[i][j] = hexadecimal(<4>);\r\n       return hm;\r\n    }            \r\n\\end{lstlisting}','QM','3','remember','no','2019-04-04',1,6),(320,'i','QMmodmat1v5 java','Dado o método abaixo em Java. Sabendo que finalidade do método é preencher uma matriz 16x16 de hexadecimais\r\ncom os hexadecimais de 0 a FF (0 a 255), começando da primeira linha e primeira \r\ncoluna e prosseguindo da esquerda para a direita e de cima para baixo, usando o \r\nmétodo auxiliar \"static String hexadecimal(int x)\", cuja finalidade é obter a\r\nrepresentação hexadecimal de números de 0 a 255, os campos $<1>, <2>, <3>, <4>$ são:\r\n\r\n\\begin{lstlisting}\r\n    static String [][] hexadecimalMat() {\r\n       <1> <2> hm = new <3>[16][16];\r\n       for(int i=0; i<16; i++) \r\n        for(int j=0; j<16; j++)   \r\n         hm[i][j] = hexadecimal(<4>);\r\n       return hm;\r\n    }            \r\n\\end{lstlisting}','QM','3','remember','no','2019-04-04',1,6),(321,'i','QMmodmat1v6 java','Dado o método abaixo em Java. Sabendo que finalidade do método é preencher uma matriz 16x16 de hexadecimais\r\ncom os hexadecimais de 0 a FF (0 a 255), começando da primeira linha e primeira \r\ncoluna e prosseguindo da esquerda para a direita e de cima para baixo, usando o \r\nmétodo auxiliar \"static String hexadecimal(int x)\", cuja finalidade é obter a\r\nrepresentação hexadecimal de números de 0 a 255, os campos $<1>, <2>, <3>, <4>$ são:\r\n\r\n\\begin{lstlisting}\r\n    static String <1> hexadecimalMat() {\r\n        <2> hm = new <3>[16][16];\r\n       for(int i=0; i<16; i++) \r\n        for(int j=0; j<16; j++)   \r\n         hm[i][j] = hexadecimal(<4>);\r\n       return hm;\r\n    }            \r\n\\end{lstlisting}','QM','3','remember','no','2019-04-04',1,6),(322,'j','QHmodulo3v4 java','Dado o método abaixo em Java. Sabendo que finalidade do método é obter os algarismos romanos\r\nde I a XXXIX (1 a 39), e que o método \"concat\" concatena caracteres, os campos $<1>, <2>, <3>, <4>, <5>$ são:\r\n\r\n\\begin{lstlisting}\r\n    static String romano(int x) {\r\n        int d = x/10;\r\n        int r = x%10;\r\n        <1> y = new String();\r\n        if(d < 4) {\r\n            for(int i=0; i<d; i++) y = y.concat(\"X\");\r\n            if(r < 4) for(int i=0; i<r; i++) y = y.concat(<2>);\r\n            else if(r < 9) {\r\n                int c = r - 5;\r\n                if(c >= 0) { y = y.concat(<3>); \r\n                     for(int i=0; i<c; i++) y = y.concat(\"I\"); }\r\n                else y = y.concat(<4>);  \r\n            }   \r\n            else y = y.concat(<5>);\r\n            return y;\r\n        } \r\n        return null;\r\n    }                  \r\n\\end{lstlisting}','QM','5','remember','no','2019-04-04',1,6),(323,'j','QHmodulo3v5 java','Dado o método abaixo em Java. Sabendo que finalidade do método é obter os algarismos romanos\r\nde I a XXXIX (1 a 39), e que o método \"concat\" concatena caracteres, os campos $<1>, <2>, <3>, <4>, <5>$ são:\r\n\r\n\\begin{lstlisting}\r\n    static <1> romano(int x) {\r\n        int d = x/10;\r\n        int r = x%10;\r\n        String y = new String(); \r\n        if(d < 4) {\r\n            for(int i=0; i<d; i++) y = y.concat(\"X\");\r\n            if(r < 4) for(int i=0; i<r; i++) y = y.concat(<2>);\r\n            else if(r < 9) {\r\n                int c = r - 5;\r\n                if(c >= 0) { y = y.concat(\"V\"); \r\n                     for(int i=0; i<c; i++) y = y.concat(<3>); }\r\n                else y = y.concat(<4>);  \r\n            }   \r\n            else y = y.concat(<5>);\r\n            return y;\r\n        } \r\n        return null;\r\n    }                  \r\n\\end{lstlisting}','QM','5','remember','no','2019-04-04',1,6),(324,'j','QHmodulo3v6 java','Dado o método abaixo em Java. Sabendo que finalidade do método é obter os algarismos romanos\r\nde I a XXXIX (1 a 39), e que o método \"concat\" concatena caracteres, os campos $<1>, <2>, <3>, <4>, <5>$ são:\r\n\r\n\\begin{lstlisting}\r\n    static String romano(int x) {\r\n        int d = x/10;\r\n        int r = x%10;\r\n        String y = new <1>();\r\n        if(d < 4) {\r\n            for(int i=0; i<d; i++) y = y.concat(<2>);\r\n            if(r < 4) for(int i=0; i<r; i++) y = y.concat(<3>);\r\n            else if(r < 9) {\r\n                int c = r - 5;\r\n                if(c >= 0) { y = y.concat(\"V\"); \r\n                     for(int i=0; i<c; i++) y = y.concat(\"I\"); }\r\n                else y = y.concat(<4>);  \r\n            }   \r\n            else y = y.concat(<5>);\r\n            return y;\r\n        } \r\n        return null;\r\n    }                  \r\n\\end{lstlisting}','QM','5','remember','no','2019-04-04',1,6),(325,'rep a','QHrepeticao1v1','Considere o programa a seguir:\r\n\r\n\\begin{lstlisting}\r\nprograma { funcao inicio() {\r\n      inteiro a, b, c, i, j=0\r\n      leia(a)\r\n      leia(b)\r\n      leia(c)\r\n      enquanto(j<c) {\r\n         se(a>b) {\r\n            escreva(\"a\")\r\n            a=a-b\r\n            para(i=0; i<a; i++) {\r\n               escreva(a)\r\n            }\r\n         } senao {\r\n            escreva(b)\r\n            b=b-a\r\n            para(i=b; i>0; i--) {\r\n               escreva(\"b\")\r\n            }\r\n         }\r\n         j = j + 1\r\n      }   }} \r\n\\end{lstlisting}\r\n\r\nDentre as saídas obtidas pelas entradas abaixo, aquelas que\r\nimprimirão o conteúdo da variável b na tela serão:\r\n\r\n\\begin{enumerate}[label=(\\Roman*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item {\\tt a=12}, {\\tt b=2}, {\\tt c=0}\r\n\\item {\\tt a=2}, {\\tt b=5}, {\\tt c=2}\r\n\\item {\\tt a=9}, {\\tt b=9}, {\\tt c=1}\r\n\\item {\\tt a=4}, {\\tt b=3}, {\\tt c=2}\r\n\\item {\\tt a=3}, {\\tt b=3}, {\\tt c=2}\r\n\\end{enumerate}','QM','5','remember','no','2019-04-04',1,3),(326,'rep a','QHrepeticao1v2','Considere o programa a seguir:\r\n\r\n\\begin{lstlisting}\r\nprograma { funcao inicio() {\r\n      inteiro a, b, c, i, j=0\r\n      leia(a)\r\n      leia(b)\r\n      leia(c)\r\n      enquanto(j<c) {\r\n         se(a>b) {\r\n            escreva(\"a\")\r\n            a=a-b\r\n            para(i=0; i<a; i++) {\r\n               escreva(a)\r\n            }\r\n         } senao {\r\n            escreva(b)\r\n            b=b-a\r\n            para(i=b; i>0; i--) {\r\n               escreva(\"b\")\r\n            }\r\n         }\r\n         j = j + 1\r\n      }   }} \r\n\\end{lstlisting}\r\n\r\nDentre as saídas obtidas pelas entradas abaixo, aquelas que\r\nimprimirão o conteúdo da variável a na tela serão:\r\n\r\n\\begin{enumerate}[label=(\\Roman*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item {\\tt a=12}, {\\tt b=2}, {\\tt c=0}\r\n\\item {\\tt a=2}, {\\tt b=5}, {\\tt c=2}\r\n\\item {\\tt a=9}, {\\tt b=9}, {\\tt c=1}\r\n\\item {\\tt a=4}, {\\tt b=3}, {\\tt c=2}\r\n\\item {\\tt a=3}, {\\tt b=3}, {\\tt c=2}\r\n\\end{enumerate}','QM','5','remember','no','2019-04-04',1,3),(327,'rep a','QHrepeticao1v3','Considere o programa a seguir:\r\n\r\n\\begin{lstlisting}\r\nprograma { funcao inicio() {\r\n      inteiro a, b, c, i, j=0\r\n      leia(a)\r\n      leia(b)\r\n      leia(c)\r\n      enquanto(j<c) {\r\n         se(a>b) {\r\n            escreva(\"a\")\r\n            a=a-b\r\n            para(i=0; i<a; i++) {\r\n               escreva(a)\r\n            }\r\n         } senao {\r\n            escreva(b)\r\n            b=b-a\r\n            para(i=b; i>0; i--) {\r\n               escreva(\"b\")\r\n            }\r\n         }\r\n         j = j + 1\r\n      }   }} \r\n\\end{lstlisting}\r\n\r\nDentre as saídas obtidas pelas entradas abaixo, aquelas que\r\nimprimirão pelo menos um caractere \'a\' na tela serão:\r\n\r\n\\begin{enumerate}[label=(\\Roman*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item {\\tt a=12}, {\\tt b=2}, {\\tt c=0}\r\n\\item {\\tt a=2}, {\\tt b=5}, {\\tt c=2}\r\n\\item {\\tt a=9}, {\\tt b=9}, {\\tt c=1}\r\n\\item {\\tt a=4}, {\\tt b=3}, {\\tt c=2}\r\n\\item {\\tt a=3}, {\\tt b=3}, {\\tt c=2}\r\n\\end{enumerate}','QM','5','remember','no','2019-04-04',1,3),(328,'rep a','QHrepeticao1v4','Considere o programa a seguir:\r\n\r\n\\begin{lstlisting}\r\nprograma { funcao inicio() {\r\n      inteiro a, b, c, i, j=0\r\n      leia(a)\r\n      leia(b)\r\n      leia(c)\r\n      enquanto(j<c) {\r\n         se(a>b) {\r\n            escreva(\"a\")\r\n            a=a-b\r\n            para(i=0; i<a; i++) {\r\n               escreva(a)\r\n            }\r\n         } senao {\r\n            escreva(b)\r\n            b=b-a\r\n            para(i=b; i>0; i--) {\r\n               escreva(\"b\")\r\n            }\r\n         }\r\n         j = j + 1\r\n      }   }} \r\n\\end{lstlisting}\r\n\r\nDentre as saídas obtidas pelas entradas abaixo, aquelas que\r\nimprimirão pelo menos um caractere \'b\' na tela serão:\r\n\r\n\\begin{enumerate}[label=(\\Roman*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item {\\tt a=12}, {\\tt b=2}, {\\tt c=0}\r\n\\item {\\tt a=2}, {\\tt b=5}, {\\tt c=2}\r\n\\item {\\tt a=9}, {\\tt b=9}, {\\tt c=1}\r\n\\item {\\tt a=4}, {\\tt b=3}, {\\tt c=2}\r\n\\item {\\tt a=3}, {\\tt b=3}, {\\tt c=2}\r\n\\end{enumerate}','QM','5','remember','no','2019-04-04',1,3),(329,'','vetor faixa idade v2','Considere o contexto de uma academia que tem no máximo $50$ alunos. Os vetores mencionados abaixo devem ser criados com o tamanho $= 50$.\r\n\\\r\nEscreva um programa que:\r\n\\begin{enumerate}[label=(\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Crie um vetor $V1codigo$ (tipo inteiro) para armazenar o código dos alunos; \r\n\\item Crie um vetor $V1idade$ (tipo inteiro) para armazenar a idade desses alunos;\r\n\\item Crie um vetor $V1altura$ (tipo real) para armazenar a altura desses alunos; \r\n\\item Solicite a digitação do código, idade e altura dos alunos armazenando os dados nos respectivos vetores. A entrada de dados deverá ser finalizada quando for digitado código $= 0$;\r\n\\item Faça a validação da idade que deve ser $>=15$ e $<=90$;\r\n\\item Note que a posição “i” de cada vetor armazena os dados (código, idade e altura) do mesmo aluno;\r\n\\end{enumerate}\r\n\r\nPEDE-SE:\r\nCopie para os vetores $V2codigo$ e $V2idade$, o código e a idade dos alunos com idade $>=x$ e $<=y$. Os valores de $x$ e $y$ devem ser solicitados.\r\nCalcule a média da altura dos alunos com idade $>=x$ e $<=y$.\r\n\\\r\nComo Saída de dados pede-se:\r\n\\\r\n\\begin{enumerate}[label=(\\Alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Imprimir os vetores $V2codigo$ e $V2idade$;\r\n\\item Imprimir a média da altura dos alunos com idade $>=x$ e $<=y$.\r\n\\end{enumerate}\r\n\r\nVeja nos “Casos de Testes” abaixo como deve ser “formatada” a saída. \r\n\r\n\\begin{verbatim}\r\nTodos os alunos:\r\nEntrada: \r\n// código, idade e altura \r\n1 17 1.68\r\n2 11 95 18 1.78  //  note que 11 e 95 são valores não aceitos\r\n3 25 1.69\r\n4 21 1.63\r\n5 25 2.15\r\n0\r\n// valores de x e y\r\n18  21\r\nSaída Esperada: \r\n2; 18 \r\n4; 21 \r\nMédia Altura: 1.705\r\n\\end{verbatim}\r\n\r\n%%% gabarito\r\n%programa\r\n%{\r\n%	funcao inicio()\r\n%	{\r\n%		const inteiro MAX=50\r\n%		inteiro V1codigo[MAX], V2codigo[MAX]\r\n%		inteiro V1idade[MAX], V2idade[MAX]\r\n%		real V1altura[MAX]		\r\n%		real soma=0.0, media=0.0\r\n%		inteiro n, i=0, x, y, j=0		\r\n%		//----------------\r\n%		escreva(\"\\nDigite minimo: \")\r\n%		leia(x)		\r\n%		escreva(\"\\nDigite maximo: \")\r\n%		leia(y)		\r\n%		//-------------------\r\n%		escreva(\"\\nDigite codigo [0 encerra]: \")\r\n%		leia(V1codigo[i])\r\n%		enquanto (V1codigo[i]>0 e i<=MAX) {\r\n%			faca {\r\n%			   escreva(\"\\nDigite a idade: \")\r\n%			   leia(V1idade[i])\r\n%			} enquanto (V1idade[i]<=15 ou V1idade[i]>=90)\r\n%			escreva(\"\\nDigite a altura: \")\r\n%			leia(V1altura[i])\r\n%			se (V1idade[i]>=x e V1idade[i]<=y) {				\r\n%				soma=soma + V1altura[i]\r\n%				V2codigo[j]=V1codigo[i]\r\n%				V2idade[j]=V1idade[i]\r\n%				j++\r\n%			}\r\n%			i++\r\n%			escreva(\"\\nDigite codigo [0 encerra]: \")\r\n%		     leia(V1codigo[i])\r\n%		}			\r\n%		// --- IMPRIME O VETOR GERADO\r\n%		escreva(\"\\nNovo Vetor:\", x, \" a \", y)\r\n%		para(i=0; i<j;i++) {			\r\n%			escreva(\"\\n\", V2codigo[i], \" \" , V2idade[i])			\r\n%		}\r\n%		se (j>0) {\r\n%			media=soma/j\r\n%		}\r\n%		escreva(\"\\nMedia Altura = \", media)\r\n%	}\r\n%}','QT','1','remember','no','2019-04-08',1,4),(330,'','max 3 vizinhos (moodle)','Criar 2 vetores $ [[code:var1]] 1$ e $ [[code:var1]] 2$ de inteiros com $[[code:a0]]$ posições cada.\r\n\r\n%Solicitar ao usuário um valor $x$ (que deve estar entre $10$ e $[[code:a0]]$). Não é necessário validar.\r\n\r\nLer $[[code:a0]]$ elementos, armazenando-os no vetor $ [[code:var1]] 1$. \r\n\r\nPreencher o vetor $ [[code:var1]] 2$   a partir de $ [[code:var1]] 1$  com base na seguinte regra, considerando que  $[[code:var0]]$  é a variável índice que será usada para acessar os dois vetores (É OBRIGATÓRIO O USO DE LAÇOS para varrer o vetor):\r\n\r\n\\begin{itemize}\r\n\\item se $ [[code:var0]] = 0$,  \r\n$[[code:var1]] 2[ [[code:var0]] ]$   recebe o [[code:a1]]  elemento dentre  $\\{[[code:var1]] 1[ [[code:a0-1]] ], [[code:var1]] 1[0], [[code:var1]] 1[1]\\}$;\r\n\r\n\\item se $ [[code:var0]] = [[code:a0-1]]$, \r\n$[[code:var1]] 2[ [[code:var0]] ]$ recebe o [[code:a1]]  elemento dentre  $\\{[[code:var1]] 1[ [[code:a0-2]] ], [[code:var1]] 1[ [[code:a0-1]] ], [[code:var1]] 1[0]\\}$; \r\n\r\n\\item se $ [[code:var0]]$ está entre $1$ e  $[[code:a0-1]]$, ou seja, $1\\leq [[code:var0]] < [[code:a0-1]]$, \r\n$ [[code:var1]] 2[ [[code:var0]] ]$ recebe o [[code:a1]]  elemento dentre  $\\{ [[code:var1]] 1[ [[code:var0]] -1], [[code:var1]] 1[  [[code:var0]]  ], [[code:var1]] 1[  [[code:var0]]  +1]\\}$.\r\n\\end{itemize}\r\n\r\n\\noindent\\textbf{ATENÇÃO:} \\\\ Submeter o arquivo \\textbf{prova2q1.java} (com a resposta) e o arquivo \\textbf{modelo.txt}, contendo apenas o texto \\textbf{Modelo: [[code:modelo]]}. Primeiro enviar o arquivo java e depois e arquivo txt.\r\n\r\n\r\n\\vspace{5mm}\\noindent\\textbf{Exemplo:}\r\n\\begin{verbatim}\r\n[[code:mySimula]] \r\n\\end{verbatim}\r\n\r\n[[def:\r\n# para teste: https://repl.it/languages/python\r\nimport random, numpy as np\r\n\r\na_tam   = 2 # random.randrange(0,3,1)\r\na_inicio = 20\r\na0=random.randrange(a_inicio, a_inicio+a_tam+1, 1)\r\noper = [\"maior\",\"menor\"]        \r\na1=random.choice(oper) \r\n\r\nletras = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\"]\r\n\r\nmodelo = letras[oper.index(a1)*(1+a_tam)+(a0-a_inicio)]\r\n\r\nvar0 = random.choice([\"i\",\"j\",\"x\",\"y\",\"w\",\"k\",\"p\"])\r\nvar1 = random.choice(letras)\r\n\r\nglobal mySimula\r\nv1 = np.random.randint(9, size=a0)\r\nv2 = np.zeros(a0, dtype=\'int\')\r\n\r\nmySimula = \'entrada: \' + \' \'.join([str(i) for i in v1])\r\n\r\nfor i in range(a0):\r\n  aux = [v1[(i-1)%a0], v1[i], v1[(i+1)%a0]]\r\n  if a1==oper[0]: #max\r\n    v2[i]= np.max(aux)\r\n\r\n  if a1==oper[1]: #min\r\n    v2[i]= np.min(aux)\r\n\r\nmySimula += \'\\nsaida  : \' + \' \'.join([str(i) for i in v2])\r\n]]','QT','1','remember','yes','2019-04-13',1,4),(331,'','diagonal aba/aci, maio/men, par/imp-moodle','Criar uma matriz $[[code:a0]] \\times [[code:a1]] $ de inteiros e solicitar a entrada de dados dos dados da matriz. \r\n%Preencha a matriz com valores aleatórios (veja código exemplo abaixo para ``inspirar-se\'\').  \r\nCalcular e imprimir a [[code:A1]] dos elementos [[code:A3]] [[code:A2]]  da diagonal PRINCIPAL. Desconsiderar os elementos desta diagonal. Note que seu programa deve continuar funcionando para matriz $100 \\times 100$ ou $1000\\times 1000$.\r\n\r\n\\vspace{5mm}\r\n\r\n\\noindent\\textbf{ATENÇÃO:} \\\\ Submeter o arquivo \\textbf{prova2q2.java} (com a resposta) e o arquivo \\textbf{modelo.txt}, contendo apenas o texto \\textbf{Modelo: [[code:modelo]]}. Primeiro enviar o arquivo java e depois e arquivo txt.\r\n\r\n\r\n\\vspace{5mm}\r\n\r\n[[code:imprimirMatriz]] \r\n\r\n\r\n[[def:\r\n# para testar:  https://repl.it/languages/python\r\nglobal x0,v1\r\n\r\n# escolho nomes de variaveis aleatorios, aparece somente no enunciado\r\nv0 = random.choice([\"V\",\"A\",\"B\",\"C\",\"D\",\"X\",\"Y\",\"W\",\"K\",\"Z\"]) \r\nv1 = random.choice([\"x\",\"y\",\"w\",\"k\",\"p\"])\r\nv2 = random.choice([\"q\",\"r\",\"s\",\"t\",\"u\"])\r\n\r\n\r\ndef myRandom():\r\n  global x0,x1,a0,a1,e0,e1,e2,A1,A2,A3,oper1,oper2,oper3\r\n\r\n  oper1= [\"soma\"]        \r\n  oper2= [\"acima\",\"abaixo\"]        \r\n  oper3= [\"pares\",\"impares\"] \r\n  A1=random.choice(oper1) \r\n  A2=random.choice(oper2) \r\n  A3=random.choice(oper3) \r\n\r\n  a0=random.randrange(5,6)  # linhas\r\n  a1=a0#random.randrange(4,6)  # colunas\r\n\r\n  x1 = random.randrange(2, a0, 1) # linha\r\n\r\n  e0 = random.choice([\'i\',\'-i\'])  \r\n  e1 = random.choice([\'+j\',\'-j\'])  \r\n  e2 = random.choice([\'-\',\'+\'])\r\n\r\n  A = np.random.randint(5, size=(a0, a1))\r\n\r\n  return (A)\r\n\r\ndef algorithm(A):\r\n  sumInfPar=sumInfImp=sumSupPar=sumSupImp=res=0\r\n  for i in range(a0):\r\n    for j in range(a1):\r\n      if i<j and A[i][j]%2:\r\n        sumSupImp+=A[i][j]\r\n      elif i<j and not A[i][j]%2:\r\n        sumSupPar+=A[i][j]\r\n      elif i>j and A[i][j]%2:\r\n        sumInfImp+=A[i][j]\r\n      elif i>j and not A[i][j]%2:\r\n        sumInfPar+=A[i][j]\r\n\r\n  if A2==\"acima\" and A3==\"impares\":\r\n    res = sumSupImp\r\n  if A2==\"acima\" and A3==\"pares\":\r\n    res = sumSupPar\r\n  if A2==\"abaixo\" and A3==\"impares\":\r\n    res = sumInfImp\r\n  if A2==\"abaixo\" and A3==\"pares\":\r\n    res = sumInfPar\r\n\r\n  return (res)\r\n\r\ndef printMatrix(A):\r\n  str1=\'\'\'\r\n\\\\noindent\\\\textbf{Exemplo:}\r\n\\\\begin{displaymath}\r\n\\\\begin{bmatrix}\r\n\'\'\'\r\n\r\n  for i in range(A.shape[0]):\r\n    for j in range(A.shape[1]):\r\n      str1+=str(A[i,j])\r\n      if j<A.shape[1]-1:\r\n        str1+=\"&\"\r\n    str1+=\"\\\\\\\\\\n\"  \r\n\r\n  str1+=\'\'\'\r\n\\\\end{bmatrix}\r\n\\\\end{displaymath}\r\n\'\'\'\r\n  return str1      \r\n\r\nA=myRandom()\r\n\r\nletras = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\"]\r\n\r\nmodelo = letras[oper2.index(A2)*2+oper3.index(A3)]\r\n\r\n\r\n# PARA TESTAR\r\nimprimirMatriz = printMatrix(A)\r\n\r\nimprimirMatriz += \"\\nResposta: %2.0f\" % (algorithm(A))\r\n]]','QT','2','remember','yes','2019-04-13',1,5),(332,'','R: EE, SE, CE','A análise por pontos de função utiliza alguns domínios de informação para quantificar o produto software. Dentre tais domínios, incluem-se','QM','2','remember','no','2019-04-14',1,28),(333,'','fórmula','No cálculo do valor dos pontos de função, utiliza-se a seguinte expressão: \r\n$PF=FC*(X+\\frac{\\sum\\{FA\\}}{100})$. Onde FC=Fator de Complexidade; FA=Fator de ajuste.','QM','2','remember','no','2019-04-14',1,28),(334,'','cálculo fórmula','Durante o processo de estimativa do tamanho de um software usando a técnica de pontos por função, chegou-se ao valor de 127 pontos por função não ajustados. Os pontos de ajuste somaram 45 pontos. Sendo assim, aplique as fórmulas corretas para calcular o fator de ajuste e o valor final do tamanho do software em pontos por função ajustados. Selecione a alternativa que apresenta o valor correto para o tamanho do software citado acima em pontos por função:','QM','2','remember','no','2019-04-14',1,28),(335,'','Ex EE','O processo de medição funcional de um software utilizando pontos de função possui uma série de etapas, dentre elas, a de medir as funções de transação. Estas funções representam a funcionalidade fornecida ao usuário para atender às suas necessidades de processamento de dados pela aplicação. São classificadas em entradas externas, saídas externas ou consultas externas. Constitui exemplo de entrada externa:','QM','2','remember','no','2019-04-14',1,28),(337,'','R. I e II','Considere as afirmações sobre a técnica de análise de pontos de função de acordo com as práticas recomendadas pelo IFPUG.\r\nI. Os tipos de contagem podem ser de projetos de desenvolvimento, melhorias e aplicações.\r\nII. A contagem em projetos de melhoria mede modificações em uma aplicação já existente.\r\nIII. Essa técnica só é efetiva quando já existe código-fonte implementado ou casos de uso definidos.\r\nEstá correto o que se afirma em:','QM','2','remember','no','2019-04-14',1,28),(338,'','R. FA','Na análise por pontos de função, há uma série de 14 fatores de ajuste utilizados com essa finalidade. Esses fatores baseiam-se em perguntas. Assinale a alternativa que contém uma dessas perguntas.','QM','2','remember','no','2019-04-14',1,28),(339,'','torneio (moodle) v0','Um torneio classificatório de vôlei de praia é disputado no sistema todos-contra-todos (cada equipe enfrenta uma vez todos os possíveis adversários) por [[code:a0]] equipes. Ou seja, no total há [[code:a1]] rodadas de jogos. Uma equipe se classifica para a fase seguinte se vencer pelo menos [[code:a2]]\\%  de suas partidas. Os resultados dos jogos são representados por uma {\\bf matriz de caracteres}, em que cada linha da matriz representa uma equipe e cada coluna representa uma rodada do torneio. Caso uma equipe tenha vencido a partida em determinada rodada, a célula correspondente da matriz recebe o valor \"V\", caso contrário, recebe o valor \"[[code:a3]]\". Escreva um programa completo com os seguintes \\textbf{módulos chamados no bloco principal}:\r\n\r\n\\begin{enumerate}[label=(\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item gere a matriz representando os resultados (código fornecido abaixo \\textbf{GeraMatriz});\r\n\\item imprima, para cada equipe, se ele se classificou ou não para a próxima fase. A sua saída deve ser no formato: \"Equipe i: classificada\" \\ ou \"Equipe i: eliminada\", onde i deve ser substituído pelo número da equipe. \r\n\\end{enumerate}\r\n\r\n\\noindent\\textbf{ATENÇÃO:} \\\\ Submeter o arquivo \\textbf{prova2q3.java} (com a resposta) e o arquivo \\textbf{modelo.txt}, contendo apenas o texto \\textbf{Modelo: [[code:modelo]]}. Primeiro enviar o arquivo java e depois e arquivo txt.\r\n\r\n\\vspace{9mm}\r\n\\noindent \\textbf{Java:}\r\n\\vspace{2mm}\r\n\\hline\r\n\\begin{lstlisting}\r\n    // Gera Matriz de Resultados Aleatorios\r\n    static void GeraMatriz(char Mat[][], int nlinhas, int ncolunas) {\r\n        char resultado[] = {\'V\', \'[[code:a3]]\'};\r\n        int i, j, valor;\r\n        for (i = 0; i < nlinhas; i++) {\r\n            for (j = 0; j < ncolunas; j++) {\r\n                valor = (int) (Math.random() * 2);  // gera um numero entre 0 e 1\r\n                // pega o resultado correspondente no vetor resultado\r\n                Mat[i][j] = resultado[valor];\r\n            }\r\n        }\r\n    }\r\n\\end{lstlisting}   &  \\\\ \\hline\r\n\\vspace{9mm}\r\n\r\n\\noindent \\textbf{Portugol:}\r\n\\vspace{2mm}\r\n\\hline\r\n\\begin{lstlisting}\r\n    // Gera Matriz de Resultados Aleatorios\r\n    funcao GeraMatriz(caracter Mat[][], inteiro nlinhas, inteiro ncolunas) {\r\n  		caracter resultado [2] ={\'V\', \'[[code:a3]]\'}\r\n 		inteiro i, j, valor\r\n  		para (i = 0; i < nlinhas; i++) {\r\n     		     para (j = 0; j < ncolunas; j++) {\r\n        			valor = Util.sorteia(0,2)  // gera um numero entre 0 e 1\r\n        			// pega o resultado correspondente no vetor resultado\r\n        			Mat[i][j] = resultado[valor]  \r\n        	    } \r\n        	} \r\n     }\r\n\\end{lstlisting}   &  \\\\ \\hline\r\n\\vspace{2mm}\r\n\r\n%%%%%%%%%%%% codigo\r\n\r\n[[def:\r\n# para teste: https://repl.it/languages/python\r\nimport random, numpy as np\r\na0=30\r\na1=a0-1\r\noper2=[70,75]\r\na2=random.choice(oper2) # sortear um número entre 70% e 75%\r\n\r\noper3=[\"P\",\"D\"]\r\na3 =  random.choice(oper3) \r\n\r\n# Mod a0  a2 a3\r\n#    A   30  70 P\r\n#    B   30  75 P\r\n#    C   30  70 D\r\n#    D   30  75 D\r\nmodelo = \"ERRO\"\r\nif a2==oper2[0] and a3==oper3[0]:\r\n  modelo = \"A\"\r\nif a2==oper2[1] and a3==oper3[0]:\r\n  modelo = \"B\"\r\nif a2==oper2[0] and a3==oper3[1]:\r\n  modelo = \"C\"\r\nif a2==oper2[1] and a3==oper3[1]:\r\n  modelo = \"D\"\r\n]]','QT','3','remember','yes','2019-04-17',1,6),(340,'','verifica_ordenacao_vetor','Escreva um módulo que recebe um vetor {\\it v} de números inteiros com parâmetro e devolve um valor {\\it booleano}. O módulo deverá devolver {\\it verdadeiro} caso {\\it v} \r\nesteja ordenado, ou {\\it falso}, caso contrário. Um vetor é considerado ordenado se todos os seus elementos estão dispostos em ordem {\\bf crescente} ou em ordem {\\bf decrescente}.\r\n\r\n\\drawLines{82}\r\n\\pagebreak','QT','3','evaluate','no','2019-04-22',36,6),(341,'','vetor_acima_media','Suponha um vetor {\\it v} de {\\it n} números inteiros em Java. A média aritmética simples {\\it m}  dos elementos de {\\it v} pode ser calculada da seguinte forma:\r\n\r\n\\begin{equation*}\r\nm = \\frac{v[0] + v[1] + \\dots + v[n-1]}{n}\r\n\\end{equation*}\r\n\r\nEscreva um módulo que, ao receber um vetor {\\it v} como parâmetro, calcula e devolve a quantidade de elementos de {\\it v} que estão acima da média aritmética {\\it m}.\r\n\r\n\\drawLines{83}','QT','4','apply','no','2019-04-22',36,6),(342,'4','P2','','QM','2','remember','no','2019-04-22',54,4),(343,'','matriz pixels preto branco','Uma matriz 8X8 lógica (ou booleana) representa os pixels de uma imagem preta e branca (binária). Se um elemento da matriz possui o valor VERDADEIRO, significa que a cor do pixel é [[code:a0]]. Se o elemento possui o valor FALSO, significa que a cor do pixel é [[code:a1]]. Observe um exemplo dessa imagem na figura abaixo. Escreva uma função chamada {\\bf [[code:b0]]} que deve  mudar a cor de todos os elementos de uma linha da matriz para [[code:b1]].  A função deve receber como parâmetros: uma matriz de booleanos e um inteiro que corresponde ao índice da linha que deve ser modificada. \r\n\r\n\\noindent Escreva a função principal e faça a chamada da função para testá-la.\r\n\r\n\\noindent {\\bf Obs.: É obrigatório o uso de laço(s) de repetição para percorrer a matriz.}\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\begin{tabular}{|l|l|l|l|l|l|l|l|l|l|}\r\n\\hline\r\nV & F & V & F & V & F & V & F \\\\ \\hline\r\nF & V & F & V & F & V & F & V \\\\ \\hline\r\nV & F & V & F & V & F & V & F \\\\ \\hline\r\nF & V & F & V & F & V & F & V \\\\ \\hline\r\nV & F & V & F & V & F & V & F \\\\ \\hline\r\nF & V & F & V & F & V & F & V \\\\ \\hline\r\nV & F & V & F & V & F & V & F \\\\ \\hline\r\nF & V & F & V & F & V & F & V \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n[[def:\r\nv0=[\"branca\", \"preta\"]\r\na0=random.choice(v0)\r\nif a0==v0[0]:\r\n    a1= \"preta\"\r\nelse:\r\n    a1=\"branca\"\r\n\r\nv1=[\"PintaBranco\", \"PintaPreto\"]\r\nb0=random.choice(v1)\r\n\r\nif b0==v1[0]:\r\n    b1= \"branco\"\r\nelse:\r\n    b1=\"preto\"\r\n\r\n]]','QT','2','remember','yes','2019-04-26',49,5),(344,'','temperaturas semana mes','A tabela a seguir é utilizada para armazenar as temperaturas médias por dia nas quatro primeiras semanas de um mês. Cada linha da tabela representa uma semana do mês e cada coluna corresponde a um dia da semana. A última coluna da tabela é utilizada para armazenar a média das temperaturas em cada semana.\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\begin{tabular}{|l|l|l|l|l|l|l|}\r\n\\hline\r\n                    & Segunda & Terça & Quarta & ... & Domingo & Média semana \\\\ \\hline\r\n Semana 1 & 20     &  19     &  23    & ... &   24    &      22,7              \\\\ \\hline\r\n Semana 2 & 17,5  &  18     &  24    & ... &   24    &      ...                  \\\\ \\hline\r\n Semana 3 &  ...     &  ...      &  ...     & ... &  ...      &      ...                  \\\\ \\hline\r\n Semana 4 & 16     &  22     &  19    & ... &   21    &      ...                  \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\r\n\\noindent Escreva um programa que crie uma matriz 4x8 de reais (float) e a preencha com valores de temperatura (utilize a função no final deste enunciado para preencher a matriz com valores gerados aleatoriamente). \r\n\r\n\\noindent Em seguida, escreva as seguintes funções:\r\n\r\n\\noindent (a) {\\bf MediaMensal}: recebe como parâmetros uma matriz de reais e dois inteiros (o número de linhas e o número de colunas) e retorna a média aritmética das temperaturas do mês. \r\n\r\n\\noindent (b) {\\bf MediaSemanal}: recebe como parâmetros uma matriz de reais e dois inteiros (o número de linhas e o número de colunas) e calcula a média aritmética das temperaturas de cada semana, armazenando na última coluna da matriz. Esta função não retorna nada.  \r\n\r\n\\noindent (c) {\\bf [[code:a0]]}: recebe como parâmetros uma matriz de reais e dois inteiros (o número de linhas e o número de colunas) e retorna o número de dias em que a temperatura ficou [[code:a1]] da média do mês. \r\n\r\n\\noindent (d) {\\bf [[code:b0]]}:  recebe como parâmetros uma matriz de reais e dois inteiros (o número de linhas e o número de colunas) e retorna a [[code:b1]] temperatura média semanal (o [[code:b1]] valor da última coluna). \r\n\r\n\\noindent Faça a chamada das funções no programa principal e apresente a seguinte saída:\r\n\r\n\\begin{verbatim}\r\nTemperatura media mensal:    20,75\r\nTemperatura media na semana 1:   21\r\nTemperatura media na semana 2:   23\r\nTemperatura media na semana 3:   20\r\nTemperatura media na semana 4:   19\r\n15 dias com temperatura acima da media do mes\r\n[[code:b1]] media semanal: 19,25\r\n\\end{verbatim}\r\n\r\n\\noindent A função a seguir preenche uma matriz com valores de temperaturas gerados aleatoriamente:\r\n\r\n\\vspace{3mm}\r\n\r\n\\hline\r\n\\begin{verbatim}\r\npublic static void PreencheMatriz(float M[][], int lin, int col) {\r\n        for (int i = 0; i < lin; i++) {\r\n            for (int j = 0; j < col; j++) {\r\n                M[i][j] = (float) Math.random() * [[code:c0]];   \r\n            }\r\n        }\r\n    }\r\n\\end{verbatim}\r\n\\hline\r\n\r\n[[def:\r\nv0=[\"DiasAcimaMedia\", \"DiasAbaixoMedia\"]\r\na0=random.choice(v0)\r\nif a0==v0[0]:\r\n    a1= \"acima\"\r\nelse:\r\n    a1=\"abaixo\"\r\n\r\nv1=[\"MenorMediaSemanal\", \"MaiorMediaSemanal\"]\r\nb0=random.choice(v1)\r\n\r\nif b0==v1[0]:\r\n    b1= \"menor\"\r\nelse:\r\n    b1=\"maior\"\r\n\r\nv3=[\"18 + 6\", \"15 + 7\",\"20 + 8\", \"15 + 10\"]\r\nc0=random.choice(v3)\r\n\r\n]]','QT','3','remember','yes','2019-04-26',49,5),(345,'','matriz faltas alunos','A tabela a seguir é utilizada para armazenar a lista de presença de uma turma de alunos durante um quadrimestre. Cada linha da tabela representa um aluno e cada coluna corresponde a uma aula. Para representar essa lista de presença é utilizada uma {\\bf matriz de inteiros}, onde cada posição da matriz só pode ter os valores 0 (presença) ou 1 (falta). A última coluna é utilizada para armazenar o total de faltas para cada aluno no final do quadrimestre.\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\begin{tabular}{|l|l|l|l|l|l|l|}\r\n\\hline\r\n              & Aula 1 & Aula 2 & Aula 3 & ... & Aula k & Total faltas    \\\\ \\hline\r\n Aluno 1 &  0        &  1        &  1        & ... &   0       &      2               \\\\ \\hline\r\n Aluno 2 &  1        &   0       &  0        & ... &   1       &      ...              \\\\ \\hline\r\n    ...       &   ...      &  ...       &  ...       & ... &  ...       &      ...               \\\\ \\hline\r\n Aluno n &   0       &  1        &   0       & ... &   0       &      ...               \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\noindent Escreva um programa que solicite o número de alunos {\\bf n} e o número de aulas {\\bf k} e crie uma matriz de inteiros de tamanho {\\bf n x (k+1)}. Observe que há uma coluna a mais para armazenar o total de faltas para cada aluno. \r\nPreencha a matriz utilizando a função {\\bf PreencheMatriz} disponível no final deste enunciado. \r\n\r\n\\noindent Escreva as seguintes funções:\r\n\r\n\\noindent a) {\\bf TotalFaltasPorAluno}: recebe como parâmetros uma matriz de inteiros, o número de alunos, o número de aulas e calcula o total de faltas de cada aluno, armazenando esse valor na última coluna da matriz.\r\n\r\n\\noindent (b) {\\bf MediaFaltas}:  recebe como parâmetros uma matriz de inteiros, a quantidade de alunos e de aulas e retorna a média aritmética de faltas da turma.\r\n\r\n\\noindent (c) {\\bf [[code:a0]]}:  recebe como parâmetros uma matriz de inteiros, o número de alunos, o número de aulas e retorna o número de alunos que estão [[code:a1]] da média de faltas.\r\n\r\n\\noindent (d) {\\bf ReprovadosPorFalta}: recebe como parâmetros uma matriz de inteiros, o número de alunos, o número de aulas e imprime os números dos alunos que foram reprovados por falta e os respectivos números de faltas.  Suponha que um aluno é reprovado por falta se tiver faltado em mais de 25\\% das aulas.\r\n\r\n\\noindent Faça a chamada das funções no programa principal e apresente a saída no seguinte formato:\r\n\r\n\\begin{verbatim}\r\nNúmero médio de faltas da turma: 5\r\nNúmero de alunos [[code:a1]] da média de faltas:  10\r\nReprovados por falta: \r\nAluno 1 com 9 faltas\r\nAluno 3 com 7 faltas\r\nAluno 8 com 10 faltas\r\n...\r\n\\end{verbatim}\r\n\r\n\\noindent A função a seguir preenche uma matriz com números gerados aleatoriamente (apenas zeros e uns). \r\n\r\n\\vspace{3mm}\r\n\\hline\r\n\\begin{verbatim}\r\nstatic void PreencheMatriz(int Mat[][], int lin, int col) {\r\n    for (int i = 0; i < lin; i++) {\r\n        for (int j = 0; j < col - 1; j++) {\r\n          Mat[i][j] = (int) (Math.random() * 2); // gera um número aleatório (0 ou 1) e armazena na matriz\r\n        }\r\n    }\r\n}\r\n\\end{verbatim}\r\n\\hline\r\n\r\n[[def:\r\nv0=[\"AcimaMediaFaltas\", \"AbaixoMediaFaltas\"]\r\na0=random.choice(v0)\r\nif a0==v0[0]:\r\n    a1= \"acima\"\r\nelse:\r\n    a1=\"abaixo\"\r\n\r\n]]','QT','3','remember','yes','2019-04-26',49,5),(346,'','sortear elemento 2','O seguinte trecho de programa preenche um vetor com números gerados aleatoriamente.\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\begin{tabular}{l}\r\n\\hline\r\n\\begin{lstlisting}\r\npublic class Questao1 {\r\n  public static void main(String[] args) {\r\n    final int MAX = [[code:a0]];\r\n    int V[] = new int[MAX];\r\n    System.out.println(\"Preencher vetor:\");\r\n    for(int i=0; i < MAX; i++) {\r\n       // gera num. aleatorio e insere em V\r\n       V[i] = (int)(Math.random()*[[code:a1]]);\r\n     } 			 			\r\n     // -- continue a partir daqui... 	\r\n   } \r\n}                       \r\n\\end{lstlisting}     \r\n \\\\  \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\vspace{-3mm}\r\nComplete o programa acima de modo que as seguintes operações sejam executadas: \r\n\\vspace{-1mm}\r\n\\begin{enumerate}[label=(\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\\item Exibir os índices do vetor em que a soma de um elemento com seu sucessor é menor que [[code:a2]]. Por exemplo, para o vetor abaixo, o seu programa deve imprimir os índices: [[code:a3]]. \r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\begin{tabular}{|l|l|l|l|l|l|l|l|l|l|}\r\n\\hline\r\n0  &  1  & 2  &  3  &  4  & 5  & 6  &  7  &   8  &  9 \\\\  \\hline\r\n2 & 13 & 18 & 7 & -1 & -2 & 14 & 9 & 1 & -2 \\\\     \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\item Solicitar ao usuário um número inteiro k e fazer a busca desse número k no vetor. Se encontrado, imprimir o(s) índice(s) do vetor onde esse número ocorre (apresentar mensagens como: \"k ocorre na posição x\"). Caso contrário, se k não for encontrado no vetor, apresentar apenas uma vez a mensagem: \"k não foi encontrado no vetor”.\r\n\\end{enumerate}\r\n\r\n[[def:\r\nv0=[30, 35, 40, 45, 50]\r\na0=random.choice(v0)\r\n\r\nv1=[\"72-21\", \"52-11\", \"62-11\", \"42-11\"]\r\na1=random.choice(v1)\r\n\r\nv2=[18, 13, 15, 17, 11]\r\na2=random.choice(v2)\r\n\r\nif a2==v2[0]:\r\n    a3= \"0, 3, 4, 5, 7, 8\"\r\nelif a2==v2[1]:\r\n    a3=\"3, 4, 5, 7, 8\"\r\nelif a2==v2[2]:\r\n    a3=\"3, 4, 5,  7, 8\"\r\nelif a2==v2[3]:\r\n    a3=\"0, 3, 4, 5,  7, 8\"\r\nelse:\r\n    a3=\"3, 4, 7, 8\"\r\n\r\n]]','QT','1','remember','yes','2019-04-26',49,4),(347,'','tem obstaculo linha 2','Uma matriz [[code:a0]] lógica (ou booleana) representa as posições minadas de um jogo. Quando uma posição possui o valor Verdadeiro  significa que há um obstáculo ali. Escreva uma função \\texttt{booleana} chamada \\texttt{[[code:a1]]} que retorna [[code:a2]] se for possível atravessar uma linha qualquer do mapa sem passar por um obstáculo ou retorne [[code:a3]], caso contrário. \r\n\r\n\\noindent No programa principal, crie a matriz, preencha-a e faça a chamada desta função apresentando o resultado. \r\n\r\n\\noindent {\\bf É obrigatório o uso de laços para percorrer a matriz SEMPRE que necessário. }\r\n\r\n\r\n\r\n[[def:\r\nv0=[\"5x6\", \"6x5\", \"5x5\"]\r\na0=random.choice(v0)\r\n\r\nv1=[\"TemObstaculoLinha\", \"CampoLimpo\"]\r\na1=random.choice(v1)\r\n\r\nif a1==v1[0]:\r\n    a2= \"falso\"\r\n    a3=\"verdadeiro\"\r\nelse:\r\n    a2= \"verdadeiro\"\r\n    a3=\"falso\"\r\n\r\n]]','QT','2','remember','yes','2019-04-26',49,5),(348,'vet 01','lab - cria vetor','Criar um vetor de tamanho [[code:a0]] preenchido com o seguinte valor: $(i+ [[code:a1]] * i) \\mod (i+[[code:a2]])$, sendo $i$ a posição do elemento no vetor. Qual e o valor da soma dos elementos [[code:a3]] até [[code:a3+10]]?\r\n\r\n[[def:\r\n# testar em repl.it/languages/python\r\nimport random, numpy as np\r\n\r\ndef algorithm(a):\r\n    a0 = int(a[0])\r\n    a1 = int(a[1])\r\n    a2 = int(a[2])\r\n    a3 = int(a[3])\r\n    P = np.zeros(a0)\r\n    for i in range(a0):\r\n       P[i] = ((i + a1*i) % (i+a2))\r\n    return int(P[a3:a3+10].sum())\r\n\r\na0=random.randrange(60, 80, 1)  \r\na1=random.randrange(3, 8, 1)\r\na2=random.randrange(1, 4, 1)\r\n\r\na3=random.randrange(a0-30, a0-20, 1) \r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0,a1,a2,a3])\r\n]]','QM','1','remember','yes','2019-04-26',1,4),(349,'vet 02','lab - cria vetor + média impar/par','Criar um vetor de tamanho [[code:a0]] preenchido com o seguinte valor: $(i+ [[code:a1]] * i) \\mod (i+[[code:a2]])$, sendo $i$ a posição do elemento no vetor. Qual e o valor da média dos elementos [[code:a4]], de [[code:a3]] até [[code:a3+10]]?\r\n\r\n[[def:\r\n# testar em repl.it/languages/python\r\ndef algorithm(a):\r\n    a0 = int(a[0])\r\n    a1 = int(a[1])\r\n    a2 = int(a[2])\r\n    a3 = int(a[3])\r\n    a4 = a[4]\r\n    P = np.zeros(a0)\r\n    for i in range(a0):\r\n       P[i] = ((i + a1*i) % (i+a2))\r\n    somaPar=somaImpar=0\r\n    contPar=contImpar=0\r\n    for i in P[a3:a3+10]:\r\n       if i%2==0:\r\n         somaPar+=i\r\n         contPar+=1\r\n       else:\r\n         somaImpar+=i \r\n         contImpar+=1\r\n    result = 0.0\r\n    if a4==\"pares\" and contPar:\r\n       result = somaPar/contPar\r\n    elif contPar:\r\n       result = somaImpar/contImpar\r\n    return result\r\n\r\na0=random.randrange(60, 80, 1)  \r\na1=random.randrange(3, 8, 1)\r\na2=random.randrange(1, 4, 1)\r\na3=random.randrange(a0-30, a0-20, 1) \r\n\r\noper = [\"pares\",\"\\\\\'{i}mpares\"]     # aparece no texto\r\na4 = random.choice(oper)    # sortear um\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0,a1,a2,a3,a4])\r\n]]','QM','2','remember','yes','2019-04-26',1,4),(350,'mat 02','lab - elementos recebem função 2 - quadrante','% texto da questão\r\nConstrua uma matriz $[[code:a0]] \\times [[code:a1]]$ cujo elemento na posição $(i,j)$ vale $( (i+2) * [[code:a2]] + (j+1) * [[code:a3]] ) \\mod{10}$. Fazer um método que recebe como entrada essa matriz e retorne o elemento com mais ocorrência na matriz. Qual é esse elemento? Se houver empate, retornar o melhor elemento. Considere que os índices $i$ das linhas e $j$ das colunas começam em zero.\r\n\r\n[[def:\r\n# testar em repl.it/languages/python\r\ndef algorithm(a):\r\n    a0 = int(a[0])\r\n    a1 = int(a[1])\r\n    a2 = int(a[2])\r\n    a3 = int(a[3])\r\n    P = np.zeros((a0,a1), dtype=\'int\')\r\n    Z = np.zeros(10, dtype=\'int\')\r\n    for i in range(a0):\r\n        for j in range(a1):\r\n            P[i,j] = ((i+2)*a2+(j+1)*a3) % 10\r\n            Z[P[i,j]]+=1\r\n\r\n    cont=0\r\n    for i in Z:\r\n      if i==max(set(Z)):\r\n        break\r\n      cont+=1\r\n\r\n    return cont\r\n\r\na0=random.randrange(60, 70, 1) \r\na1=random.randrange(60, 70, 1)\r\na2=random.choice([7, 13, 19])\r\na3=random.choice([11, 17, 23])\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0,a1,a2,a3])\r\n]]','QM','4','remember','yes','2019-04-26',1,6),(351,'','calorias por dia da semana 2','Implementar um programa que armazene a quantidade de calorias ingeridas em cada refeição (café da manhã, almoço e jantar) em cada dia da semana (domingo a sábado). O programa deve perguntar, para cada dia da semana, a quantidade de calorias ingeridas em cada refeição e armazenar em uma matriz, como representado esquematicamente abaixo:\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\begin{tabular}{|l|l|l|l|l|l|l|l|l|l|}\r\n\\hline\r\n     &   Domingo & Segunda  & Terça    & Quarta   & Quinta   & Sexta    & Sábado   & Totais         \\\\ \\hline\r\nCafé   &   400    &   450       &   ...       &          &          &          &          &    ...       \\\\ \\hline\r\nAlmoço    &  800  &   660       &    ...   &          &          &          &          &    ...        \\\\ \\hline\r\nJantar    &   700  &    500      &    ...   &          &          &          &          &     ...       \\\\ \\hline\r\nTotais  &  1900   & 1610  & ... &  &  & &  &  \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\nObserve que a última linha contém o total de calorias por dia (soma dos elementos de cada coluna) e a última coluna da tabela contém o total de calorias por refeição na semana (soma dos elementos de cada linha). \r\n\r\nCrie uma matriz de reais de tamanho 4x8 para armazenar essa tabela de calorias. Para preencher a matriz, utilize a função {\\bf PreencheMatriz} que está disponível no final deste enunciado. \r\n\r\n\\noindent Escreva as seguintes funções:\r\n\r\n\\noindent (a) {\\bf TotalCaloriasPorDia}: recebe como parâmetros uma matriz de reais, o número de linhas, o número de colunas e calcula o total de calorias por dia (soma dos elementos da coluna), armazenando esse valor na última linha da matriz.\r\n\r\n\\noindent (b) {\\bf TotalCaloriasPorRefeicao}: recebe como parâmetros uma matriz de reais, o número de linhas, o número de colunas e calcula o total de calorias por refeição durante a semana (soma dos elementos da linha), armazenando esse valor na última coluna da matriz.\r\n\r\n\\noindent (c) {\\bf MediaCaloriasDiaria}: recebe como parâmetros uma matriz de reais, o número de linhas, o número de colunas e retorna a média \r\nde calorias ingeridas por dia durante a semana.\r\n\r\n\\noindent (d) {\\bf [[code:a0]]}: recebe como parâmetros uma matriz de reais, o número de linhas, o número de colunas, a média diária de calorias e imprime os dias da semana em que o consumo de calorias foi [[code:a1]] da média.\r\n\r\n\\noindent Faça a chamada das funções no programa principal e apresente a saída no seguinte formato:\r\n\r\n\\begin{verbatim}\r\nCalorias ingeridas por dia:\r\nDomingo: 1900\r\nSegunda: 1610\r\nTerça: ...\r\n...\r\nSábado: ...\r\nMédia diária de calorias consumidas: 1700\r\nDia(s) em que a ingestão de calorias foi(ram) [[code:a1]] da média diária: \r\nSexta, Sábado, Domingo \r\n\r\n\\end{verbatim}\r\n\r\n\\vspace{3mm}\r\n\r\n\\noindent A função a seguir preenche uma matriz com números gerados aleatoriamente. \r\n\r\n\\vspace{3mm}\r\n\\hline\r\n\\begin{verbatim}\r\n    public static void PreencheMatriz (float M[][], int lin, int col){\r\n        for (int i=0;i<lin; i++){\r\n            for (int j=0; j<col; j++){\r\n                M[i][j]= (float)Math.random()*1000; // gera um número aletatório entre 0 e 1000\r\n            }\r\n        }\r\n    }\r\n\\end{verbatim}\r\n\\hline\r\n\r\n\r\n[[def:\r\nv0=[\"CaloriasAcimaMedia\", \"CaloriasAbaixoMedia\"]\r\na0=random.choice(v0)\r\nif a0==v0[0]:\r\n    a1= \"acima\"\r\nelse:\r\n    a1=\"abaixo\"\r\n\r\n]]','QT','3','remember','yes','2019-04-26',49,5),(353,'','matriz pow 2','Escreva um programa que leia na entrada um inteiro $n$, $1 \\leq n \\leq 10$, e construa e imprima uma matriz quadrada $A(n \\times n)$ tal como ilustrado nos exemplos da figura abaixo. Não precisa fazer validação, isto é, suponha que $n$ é fornecido corretamente.\r\n\r\nDica: você pode obter o valor de $x^y$ em Java usando {\\tt Math.pow(x,y)}.\r\n\r\n%https://www.dropbox.com/s/vycdkga92y217ps/q2_rec.png?dl=0 \r\n%\\begin{figure}[h]\r\n%  \\centering \\epsfig{file=exemplosQ2.eps,width=10cm}\r\n%  \\caption{Exemplos de valor de $n$ à esquerda e a matriz resultante correspondente à direita.}\r\n%  \\label{exemplo}\r\n%\\end{figure}\r\n\r\n\\begin{figure}[h!]\\centering\r\n\\write18{wget -c https://www.dropbox.com/s/vycdkga92y217ps/q2_rec.png?dl=0 -O ./tmp/lr_pi_fig_q2.png}\r\n\\includegraphics[scale=0.25]{lr_pi_fig_q2}\r\n\\end{figure}','QT','2','remember','yes','2019-04-29',49,5),(354,'','calorias por dia da semana 3','Implementar um programa que armazene a quantidade de calorias ingeridas em cada refeição (café da manhã, almoço e jantar) em cada dia da semana (domingo a sábado). O programa deve perguntar, para cada dia da semana, a quantidade de calorias ingeridas em cada refeição e armazenar em uma matriz, como representado esquematicamente abaixo:\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\begin{tabular}{|l|l|l|l|l|l|l|l|l|l|}\r\n\\hline\r\n     &   Domingo & Segunda  & Terça    & Quarta   & Quinta   & Sexta    & Sábado   & Totais         \\\\ \\hline\r\nCafé   &   400    &   450       &   ...       &          &          &          &          &    ...       \\\\ \\hline\r\nAlmoço    &  800  &   660       &    ...   &          &          &          &          &    ...        \\\\ \\hline\r\nJantar    &   700  &    500      &    ...   &          &          &          &          &     ...       \\\\ \\hline\r\nTotais  &  1900   & 1610  & ... &  &  & &  &  \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\nObserve que a última linha contém o total de calorias por dia (soma dos elementos de cada coluna) e a última coluna da tabela contém o total de calorias por refeição na semana (soma dos elementos de cada linha). \r\n\r\nCrie uma matriz de reais de tamanho 4x8 para armazenar essa tabela de calorias. Para preencher a matriz, utilize a função {\\bf PreencheMatriz} que está disponível no final deste enunciado. \r\n\r\n\\noindent Escreva as seguintes funções:\r\n\r\n\\noindent (a) {\\bf TotalCaloriasPorDia}: recebe como parâmetros uma matriz de reais, o número de linhas, o número de colunas e calcula o total de calorias por dia (soma dos elementos da coluna), armazenando esse valor na última linha da matriz.\r\n\r\n\\noindent (b) {\\bf TotalCaloriasPorRefeicao}: recebe como parâmetros uma matriz de reais, o número de linhas, o número de colunas e calcula o total de calorias por refeição durante a semana (soma dos elementos da linha), armazenando esse valor na última coluna da matriz.\r\n\r\n\\noindent (c) {\\bf [[code:a0]]}: recebe como parâmetros uma matriz de reais, o número de linhas, o número de colunas e imprime o dia da semana em que o usuário ingeriu [[code:a1]] quantidade de calorias.\r\n\r\n\\noindent (d) {\\bf TotalCaloriasSemanal}: recebe como parâmetros uma matriz de reais, o número de linhas, o número de colunas e imprime o total de calorias ingeridas na semana.\r\n\r\n\\noindent Faça a chamada das funções no programa principal e apresente a saída no seguinte formato:\r\n\r\n\\begin{verbatim}\r\nCalorias ingeridas por dia:\r\nDomingo: 1900\r\nSegunda: 1610\r\nTerça: ...\r\n...\r\nSábado: ...\r\nDia com [[code:a1]] quantidade de calorias ingeridas: Segunda\r\nTotal de calorias ingeridas durante a semana: 12500\r\n\\end{verbatim}\r\n\r\n\\noindent Obs.: Imprima a tabela de calorias para conferir os resultados. \r\n\r\n\\noindent A função a seguir preenche uma matriz com números gerados aleatoriamente. \r\n\r\n\\vspace{3mm}\r\n\\hline\r\n\\begin{verbatim}\r\n    public static void PreencheMatriz (float M[][], int lin, int col){\r\n        for (int i=0;i<lin; i++){\r\n            for (int j=0; j<col; j++){\r\n                M[i][j]= (float)Math.random()*1000; // gera um número aletatório entre 0 e 1000\r\n            }\r\n        }\r\n    }\r\n\\end{verbatim}\r\n\\hline\r\n\r\n[[def:\r\nv0=[\"MaiorConsumoCalorias\", \"MenorConsumoCalorias\"]\r\na0=random.choice(v0)\r\nif a0==v0[0]:\r\n    a1= \"maior\"\r\nelse:\r\n    a1=\"menor\"\r\n\r\n]]','QT','3','remember','yes','2019-04-29',49,5),(355,'','conceito  P1, Atividades, Projeto e P2 - 2','Considere  uma matriz MConceitos de 150 linhas e 4 colunas, onde cada linha representa um aluno e cada coluna representa os conceitos das avaliações P1, Atividades, Projeto e P2. Esta matriz deve armazenar em cada elemento valores A, B, C, D ou F.   Note que a função GeraMat, que preenche uma matriz com conceitos gerados “aleatoriamente” já está disponível (vide código abaixo) para você chamar no seu programa principal. \r\nPara cada um dos itens abaixo você deverá escrever uma função e fazer sua respectiva chamada no programa principal.\r\n\r\n\\begin{enumerate}[label=(\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\r\n%\\item Escreva a função ContaConceitos que recebe por parâmetro a matriz de conceitos (gerada pela função \"GeraMat\")  e exibe a quantidade de conceitos Y da avaliação Z.\r\n%Você deverá perguntar ao usuário, dentro da função, o valor de Y (conceito A, B, C, D ou F) e o valor de Z (número da avaliação 0 a 3, correspondendo a P1, P2, etc).\r\n%Por exemplo, se o usuário informar Y=\'A\' e Z = 3, a função ContaConceitos deve informar quantos alunos tiveram conceito \'A\' na avaliação P2 (coluna 3 da matriz).\r\n\r\n\\item Escreva a função \"GeraMedia\" para preencher um vetor com números reais em que cada elemento do vetor representará a média de um aluno calculada a partir dos conceitos constantes na sua respectiva linha da matriz.  Para calcular a média de cada aluno, considere que  A=4.0, B=3.0, C = 2.0, D = 1.0 e F=0.0. Considere também os seguintes pesos: P1=[[code:a0]]\\%, Atividades = 10\\%, Projeto=15\\% e P2=[[code:a1]]\\%. A média de cada aluno será um valor entre 0.0 e 4.0. \r\n\r\nExemplo: Se numa linha da Matriz tem A, A, B, D  a média será $( (4*[[code:a0]]) + (4*10) + (3*15) + (1*[[code:a1]] ) ) / 100 =  [[code:a2]]$\r\n\r\n\\item Escreva a função ImprimeConceitoFinal que deve receber por parâmetro o VETOR gerado no item (a) e imprimir na tela o conceito correspondente de cada aluno considerando as seguintes regras:\\\\\r\nse VALOR $<$ 0.8, CONCEITO\\_FINAL = F, senão\\\\\r\nse VALOR $<$ 1.5, CONCEITO\\_FINAL = D, senão\\\\\r\nse VALOR $<$ 2.5, CONCEITO\\_FINAL = C, senão\\\\\r\nse VALOR $<$ 3.6, CONCEITO\\_FINAL = B, senão\\\\\r\nCONCEITO\\_FINAL = A\r\n\\end{enumerate}\r\n\\vspace{-3mm}\r\nSugestão: não precisa validar entradas.\r\n\r\n\\begin{table}[h]\r\n\\begin{tabular}{|l|}\r\n\\hline\r\n\\multicolumn{1}{|c|}{\\textbf{Java}} \\\\ \\hline\r\n\\begin{lstlisting}\r\n// Gera Matriz de Conceitos\r\nstatic void GeraMat(char Mat[][], int nlinhas, int ncolunas) {\r\n  char conceitos[] = {\'A\', \'B\', \'C\', \'D\',\'F\'};\r\n  int i, j, valor;\r\n  for (i = 0; i < nlinhas; i++) {\r\n     for (j = 0; j < ncolunas; j++) {\r\n        valor = (int) (Math.random() * 5);  // gera um numero entre 0 e 4\r\n        // pega o conceito correspondente no vetor conceitos\r\n        Mat[i][j] = conceitos[valor];  \r\n      } } }\r\n\\end{lstlisting}                                 \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\r\n[[def:\r\n# variáveis a serem usadas no texto da questão e alternativas\r\na0=random.randrange(30, 40, 1)  # sortear um número entre 30 e 40\r\na1=75-a0\r\na2 = (4*a0 + 4*10 + 3*15 + 1*a1) / 100 \r\n]]','QT','3','remember','yes','2019-04-29',49,5),(356,'','valida senha','Faça um programa para ler um número que é um código de usuário. O programa deve ler também outro valor que é a senha. Ambos do tipo inteiro. Fazer um método chamado validaAcesso, recebendo esses dois números e retornando uma mensagem, como segue: Caso o código seja diferente de um código armazenado internamente (igual a 1234) deve retornar a mensagem ‘Usuario invalido!’. Se a senha lida estiver incorreta (a certa é 9999) deve retornar a mensagem ‘senha incorreta’. Caso a senha esteja correta, deve ser retornada a mensagem ‘Acesso permitido’. Chamar esse método no módulo principal e imprimir a mensagens, como nos casos de teste abaixo. \r\n\r\n\\\r\n\r\n\\noindent\\textbf{Exemplos:}\r\n[[code:mySim]]\r\n\r\n\\\r\n\r\n[[def:\r\n# tester https://repl.it/languages/python\r\nimport random\r\n\r\nglobal codigoOK, senhaOK\r\ncodigoOK = 1234\r\nsenhaOK = 9999\r\n\r\ndef validaAcesso(lerCodigo, lerSenha):\r\n  if lerCodigo!=codigoOK:\r\n    resposta = \"Usuario invalido!\"\r\n  else:\r\n    if lerSenha!=senhaOK:\r\n       resposta = \"senha incorreta\"\r\n    else:\r\n       resposta = \"acesso permitido\"\r\n  return resposta\r\n    \r\n#lerCodigo = random.choice([1234,4321])\r\n#lerSenha = random.choice([1111,9999])\r\n#saida = validaAcesso(lerCodigo, lerSenha)\r\n\r\nmySim = \'\\n\'\r\nmySim += \"Entradas: %d %d\\n\" % (4321, 1111)\r\nmySim += \"Saida: %s\\n\\n\" % (validaAcesso(4321, 1111))\r\n\r\nmySim += \"Entradas: %d %d\\n\" % (codigoOK, 1111)\r\nmySim += \"Saida: %s\\n\\n\" % (validaAcesso(codigoOK, 1111))\r\n\r\nmySim += \"Entradas: %d %d\\n\" % (codigoOK, senhaOK)\r\nmySim += \"Saida: %s\\n\\n\" % (validaAcesso(codigoOK, senhaOK))\r\n]]','QT','2','remember','yes','2019-04-30',1,2),(357,'','vetor e matriz','Dado um vetor de $30$ números inteiros sem nenhum número repetido e uma matriz $56\\times 65$, informe quantos números existentes no vetor também existem na matriz.','QT','3','remember','no','2019-04-30',1,5),(402,'a','introducaoP243','% 01\nNa construção de uma arquitetura de um computador, os barramentos constituem um elemento fundamental que caracterizam a sua estrutura. Quais são as funções do barramento?','QM','1','remember','no','2019-05-21',NULL,36),(403,'a','introducaoP244','% 01\nNa construção de uma arquitetura de um computador, os barramentos constituem um elemento fundamental que caracterizam a sua estrutura. Que tipo de sinais passam em um barramento?','QM','1','remember','no','2019-05-21',NULL,36),(404,'b','introducaoP245','% 02\nOs barramentos básicos da arquitetura IBM-PC, em ordem DECRESCENTE de desempenho são:','QM','1','remember','no','2019-05-21',NULL,36),(405,'b','introducaoP246','% 02\nOs barramentos básicos da arquitetura IBM-PC, em ordem CRESCENTE de desempenho são:','QM','1','remember','no','2019-05-21',NULL,36),(406,'c','introducaoP247','% 03\nQual(is) é(são) o(s) principal(is) problema(s) dos barramentos paralelos?','QM','1','remember','no','2019-05-21',NULL,36),(407,'c','introducaoP248','% 03\nPor que os barramentos atuais de desempenho superior, migraram da configuração paralela para serial? Escolha a alternativa FALSA.','QM','1','remember','no','2019-05-21',NULL,36),(408,'d','introducaoP249','% 04\nO que é crosstalk nos sinais digitais?','QM','1','remember','no','2019-05-21',NULL,36),(409,'d','introducaoP250','% 04\nO que é o problema de sincronismo?','QM','1','remember','no','2019-05-21',NULL,36),(410,'d','introducaoP251','% 04\nQual é a função do clock (relógio) nos barramentos?','QM','1','remember','no','2019-05-21',NULL,36),(411,'d','introducaoP252','% 04\nComo o gerador de clock do receptor é sincronizado nos barramentos seriais?','QM','1','remember','no','2019-05-21',NULL,36),(412,'e','introducaoP253','% 05\nO que é DDR?','QM','1','remember','no','2019-05-21',NULL,36),(413,'e','introducaoP254','% 05\nO que é RamBus?','QM','1','remember','no','2019-05-21',NULL,36),(414,'f','introducaoP255','% 06\nQuais as principais diferenças entre o Gigabit Ethernet e o Fibre Channel?','QM','1','remember','no','2019-05-21',NULL,36),(415,'f','introducaoP256','% 06\nQuais as principais diferenças entre o Infiniband e o Fibre Channel?','QM','1','remember','no','2019-05-21',NULL,36),(416,'g','introducaoP257','% 07\nO que é latência em comunicações?','QM','1','remember','no','2019-05-21',NULL,36),(417,'g','introducaoP258','% 07\nO que é determinismo em comunicações?','QM','1','remember','no','2019-05-21',NULL,36),(418,'h','introducaoP259','% 08\nOs computadores vetoriais constituem uma importante classe de Supercomputadores. Como são classificados segundo Flynn?','QM','1','remember','no','2019-05-21',NULL,36),(419,'h','introducaoP260','% 08\nOs sistemas distribuídos são computadores paralelos que interagem por troca de mensagens. Como são classificados segundo Flynn?','QM','1','remember','no','2019-05-21',NULL,36),(420,'h','introducaoP261','% 08\nOs computadores torelantes a falha utilizam o paralelismo para fazer redundância. Como são classificados segundo Flynn?','QM','1','remember','no','2019-05-21',NULL,36),(421,'i','introducaoP262','% 09\nQual é a topologia de rede que NÃO é utilizada na interconexão de computadores massivamente paralelos?','QM','1','remember','no','2019-05-21',NULL,36),(422,'i','introducaoP263','% 09\nQual é a topologia de rede que NÃO é utilizada na computação MIMD por troca de mensagens?','QM','1','remember','no','2019-05-21',NULL,36),(423,'j','introducaoP264','% 10\nA computação paralela pode ser executada em diversos níveis. O paralelismo no nível de função (thread) é usualmente implementado e controlado por:','QM','1','remember','no','2019-05-21',NULL,36),(424,'j','introducaoP265','% 10\nA computação paralela pode ser executada em diversos níveis. O paralelismo no nível de trabalho (job) é usualmente implementado e controlado por:','QM','1','remember','no','2019-05-21',NULL,36),(425,'k','introducaoP266','% 11\nA organização da execução da computação em paralelo é uma atividade complexa. Qual das atividades seguintes NÃO é parte deste gerenciamento?','QM','1','remember','no','2019-05-21',NULL,36),(426,'k','introducaoP267','% 11\nA organização da computação em paralelo é uma atividade complexa. Qual dos seguintes fatores NÃO é considerado na computação em paralelo?','QM','1','remember','no','2019-05-21',NULL,36),(427,'l','introducaoP268','% 12\nQual dos paradigmas a seguir NÃO é um paradigma de computação paralela, aplicáveis tanto para hardware como para software?','QM','1','remember','no','2019-05-21',NULL,36),(428,'l','introducaoP269','% 12\nQual dos paradigmas a seguir NÃO é um paradigma de computação paralela, aplicáveis no nível de Sistema Computacional?','QM','1','remember','no','2019-05-21',NULL,36),(429,'m','introducaoP270','% 13\nSegundo a Lei de Amdahl (de 1967), interligar computadores em paralelo implica em uma tarefa adicional de coordenar esta solução cooperativa, resultando em um ...:','QM','1','remember','no','2019-05-21',NULL,36),(430,'n','introducaoP271','% 14\nO que é um Sistema Computacional e qual a sua composição?','QM','1','remember','no','2019-05-21',NULL,36),(431,'n','introducaoP272','% 14\nA Internet pública e um conjunto de tecnologias integradas (Webservices, XML, Javascript, SOA) viabilizaram a criação de Sistemas Computacionais distribuídos externamente. As principais arquiteturas destes sistemas são:','QM','1','remember','no','2019-05-21',NULL,36),(432,'o','introducaoP273','% 15\nQuais são os principais parâmetros de desempenho de um sistema computacional?','QM','1','remember','no','2019-05-21',NULL,36),(433,'p','introducaoP274','% 16\nO que são Sistemas de Tempo Real?','QM','1','remember','no','2019-05-21',NULL,36),(434,'q','introducaoP275','% 17\nQuais são os principais parâmetros de Confiabilidade de um sistema computacional?','QM','1','remember','no','2019-05-21',NULL,36),(435,'q','introducaoP276','% 17\nQual é a diferença entre os parâmetros Confiabilidade e Disponibilidade?','QM','1','remember','no','2019-05-21',NULL,36),(436,'q','introducaoP277','% 17\nQual é o significado de uma Disponibilidade de um sistema com 0,999: 3 (três) noves?','QM','1','remember','no','2019-05-21',NULL,36),(437,'r','introducaoP278','% 18\nO gráfico do comportamento da Taxa de Falhas de Hardware no tempo possui as seguintes características: Selecione a alternativa mais correta.','QM','1','remember','no','2019-05-21',NULL,36),(438,'r','introducaoP279','% 18\nO gráfico do comportamento da Taxa de Falhas de Software no tempo possui as seguintes características: Selecione a alternativa mais correta.','QM','1','remember','no','2019-05-21',NULL,36),(439,'a','IntroducaoREC80','% 01\nA evolução tecnológica da Computação é resultado da:','QM','1','remember','no','2019-05-21',NULL,37),(440,'b','IntroducaoREC81','% 02\nO sistema digital é melhor que o analógico por que:','QM','1','remember','no','2019-05-21',NULL,37),(441,'b','IntroducaoREC82','% 02\nOs sinais analógicos são digitalizados (convertidos em bits) para poderem ser tratados pelos computadores e depois são retornados novamente ao mundo analógico pela conversão digital/analógica. Este processo:','QM','1','remember','no','2019-05-21',NULL,37),(442,'b','IntroducaoREC83','% 02\nUma das vantagens da digitalização:','QM','1','remember','no','2019-05-21',NULL,37),(443,'c','IntroducaoREC84','% 03\nA evolução tecnológica de fabricação dos VLSI possibilitou a redução do tamanho do transistor em 3 ordens de grandeza (1.000), de 10 mícrons (1971) para 10 nanometros (2017) em apenas 45 anos. Este desenvolvimento:','QM','1','remember','no','2019-05-21',NULL,37),(444,'d','IntroducaoREC85','% 04\nDado um circuito demultiplexador com 4 bits de entrada com os sinais: 0100. Este circuito terá como saídas:','QM','1','remember','no','2019-05-21',NULL,37),(445,'d','IntroducaoREC86','% 04\nDado um circuito demultiplexador com 4 bits de entrada com os sinais: 0010. Este circuito terá como saídas:','QM','1','remember','no','2019-05-21',NULL,37),(446,'e','IntroducaoREC87','% 05\nO que é fetch?','QM','1','remember','no','2019-05-21',NULL,37),(447,'e','IntroducaoREC88','% 05\nO que é Ciclo de Máquina?','QM','1','remember','no','2019-05-21',NULL,37),(448,'f','IntroducaoREC89','% 06\nQual a relação entre o Ciclo de Máquina e o Ciclo de Instruções?','QM','1','remember','no','2019-05-21',NULL,37),(449,'f','IntroducaoREC90','% 06\nQual a função do Clock da CPU?','QM','1','remember','no','2019-05-21',NULL,37),(450,'g','IntroducaoREC91','% 07\nO que é Microprograma?','QM','1','remember','no','2019-05-21',NULL,37),(451,'g','IntroducaoREC92','% 07\nA alteração na sequencia de instruções executadas pela CPU ocorre com a alteração no conteúdo do Program Counter. Qual é o papel do Stack Pointer neste processo?','QM','1','remember','no','2019-05-21',NULL,37),(452,'h','IntroducaoREC93','% 08\nAssinale a alternativa FALSA: Quais os princípios da arquitetura RISC?','QM','1','remember','no','2019-05-21',NULL,37),(453,'i','IntroducaoREC94','% 09\nAssinale a alternativa FALSA: Sobre Pipeline e Superescalar','QM','1','remember','no','2019-05-21',NULL,37),(454,'j','IntroducaoREC95','% 10\nAssinale a alternativa FALSA: Quais os conceitos associados à Cache de memória?','QM','1','remember','no','2019-05-21',NULL,37),(455,'k','IntroducaoREC96','% 11\nO que é execução fora de ordem?','QM','1','remember','no','2019-05-21',NULL,37),(456,'l','IntroducaoREC97','% 12\nAssinale a alternativa que NÃO contém uma função do Compilador:','QM','1','remember','no','2019-05-21',NULL,37),(457,'m','IntroducaoREC98','% 13\nNa construção de uma arquitetura de um computador, os barramentos constituem um elemento fundamental que caracterizam a sua estrutura. Que tipo de sinais passam em um barramento?','QM','1','remember','no','2019-05-21',NULL,37),(458,'n','IntroducaoREC99','% 14\nPor que os barramentos atuais de desempenho superior, migraram da configuração paralela para serial? Escolha a alternativa FALSA.','QM','1','remember','no','2019-05-21',NULL,37),(459,'o','IntroducaoREC100','% 15\nO que é crosstalk nos sinais digitais?','QM','1','remember','no','2019-05-21',NULL,37),(460,'o','IntroducaoREC101','% 15\nO que é o problema de sincronismo?','QM','1','remember','no','2019-05-21',NULL,37),(461,'o','IntroducaoREC102','% 15\nQual é a função do clock (relógio) nos barramentos?','QM','1','remember','no','2019-05-21',NULL,37),(462,'p','IntroducaoREC103','% 16\nO que é latência em comunicações?','QM','1','remember','no','2019-05-21',NULL,37),(463,'p','IntroducaoREC104','% 16\nO que é determinismo em comunicações?','QM','1','remember','no','2019-05-21',NULL,37),(464,'q','IntroducaoREC105','% 17\nOs computadores vetoriais constituem uma importante classe de Supercomputadores. Como são classificados segundo Flynn?','QM','1','remember','no','2019-05-21',NULL,37),(465,'q','IntroducaoREC106','% 17\nOs sistemas distribuídos são computadores paralelos que interagem por troca de mensagens. Como são classificados segundo Flynn?','QM','1','remember','no','2019-05-21',NULL,37),(466,'q','IntroducaoREC107','% 17\nOs computadores tolerantes a falha utilizam o paralelismo para fazer redundância. Como são classificados segundo Flynn?','QM','1','remember','no','2019-05-21',NULL,37),(467,'r','IntroducaoREC108','% 18\nQual dos paradigmas a seguir NÃO é um paradigma de computação paralela, aplicáveis tanto para hardware como para software?','QM','1','remember','no','2019-05-21',NULL,37),(468,'r','IntroducaoREC109','% 18\nQual dos paradigmas a seguir NÃO é um paradigma de computação paralela, aplicáveis no nível de Sistema Computacional?','QM','1','remember','no','2019-05-21',NULL,37),(469,'s','IntroducaoREC110','% 19\nO que são Sistemas de Tempo Real?','QM','1','remember','no','2019-05-21',NULL,37),(470,'t','IntroducaoREC111','% 20\nQuais são os principais parâmetros de Confiabilidade de um sistema computacional?','QM','1','remember','no','2019-05-21',NULL,37),(471,'t','IntroducaoREC112','% 20\nQual é a diferença entre os parâmetros Confiabilidade e Disponibilidade?','QM','1','remember','no','2019-05-21',NULL,37),(472,'A','IT-2018-3Q0','Em 1945, Vannevar Bush criou a expressão:','QM','1','remember','no','2019-05-21',NULL,38),(473,'B','IT-2018-3Q1','Sobre o conceito Quadrante de Pasteur, o quadrante atribuído ao Santos Dumont, pode se afirmar que:','QM','1','remember','no','2019-05-21',NULL,38),(474,'C','IT-2018-3Q2','No processo de revolução cientifica é correto afirmar que:','QM','1','remember','no','2019-05-21',NULL,38),(475,'D','IT-2018-3Q3','No ambiente de inovação tecnológica, um dos requisitos é a questão da propriedade intelectual. Sobre os requisitos básicos de para os pedidos de patente de invenção são:','QM','1','remember','no','2019-05-21',NULL,38),(476,'E','IT-2018-3Q4','As invenções podem eventos totalmente aleatórios onde aparecem novidades associadas às teorias, ou seja, são criações do conhecimento científico. Diante deste fato pode afirmar sobre descobertas que:','QM','1','remember','no','2019-05-21',NULL,38),(477,'F','IT-2018-3Q5','O que proporciona a oportunidade para o novo e diferente é a mudança - a inovação sistemática consiste, portanto, na busca deliberada e organizada de mudanças, assim como na análise sistemática das oportunidades que tais mudanças podem oferecer para a inovação econômica e social. DRUCKER apud BARBIERI, J. C. Organizações inovadoras: estudos e casos brasileiros. Rio de Janeiro: FGV Editora, 2003, p. 18 (com adaptações). A partir dessa observação, avalie as asserções a seguir.\"A inovação é um conceito mais limitado do que a invenção PORQUE a invenção é o processo pelo qual uma nova ideia é descoberta ou criada, enquanto a inovação inclui o processo de desenvolver e implantar a nova ideia.\"  A respeito dessas asserções, assinale a alternativa correta.','QM','1','remember','no','2019-05-21',NULL,38),(478,'G','IT-2018-3Q6','Não é considerada Ciência Normal:','QM','1','remember','no','2019-05-21',NULL,38),(479,'H','IT-2018-3Q7','No ambiênte altamente concorrente no campo de tecnologia e muitas vezes a inovação depende da proteção de propriedade intelectual evitando assim a concorrência desleal. As afirmativas a seguir apresentam exemplos de violação de uma patente por um terceiro, à exceção de uma. Assinale-a:','QM','1','remember','no','2019-05-21',NULL,38),(480,'I','IT-2018-3Q8','Assinale a afirmativa incorreta.','QM','1','remember','no','2019-05-21',NULL,38),(481,'J','IT-2018-3Q9','Conceitualmente, para um empreendedor em inovação tecnológica deve conhecer os preceitos básicos para proteger uma invenção. Com relação à concessão de patentes, analise as afirmativas a seguir: I - A lei da propriedade industrial concede patente a descobertas; II - A lei da propriedade industrial concede patente a invenções com aplicação industrial; III - A lei da propriedade industrial concede patente a inovações. Assinale:','QM','1','remember','no','2019-05-21',NULL,38),(482,'K','IT-2018-3Q10','Cientistas realizam descobertas e estas passam ser aplicadas em diversas áreas industriais que são notadamente conhecidas como parte do processo de inovação tecnológica.  É correto afirmar que:','QM','1','remember','no','2019-05-21',NULL,38),(483,'L','IT-2018-3Q11','Não são consideradas como conceitos de paradigmas:','QM','1','remember','no','2019-05-21',NULL,38),(484,'M','IT-2018-3Q12','A Ciência Normal é um conjunto de conhecimento formado pelas pesquisas baseadas nas realizações científicas passadas e aceito pela comunidade científica, no entanto não é correto afirmar que:','QM','1','remember','no','2019-05-21',NULL,38),(485,'N','IT-2018-3Q13','Um paradigma estabelecido por Joule, cuja lei relaciona a dissipação de calor com a passagem de corrente elétrica em um material eletricamente resistivo, um fato avaliado empiricamente não é correto afirmar que:','QM','1','remember','no','2019-05-21',NULL,38),(486,'O','IT-2018-3Q14','A lei que regula direitos e obrigações relativas à propriedade industrial, ao assegurar ao autor de invenção ou modelo de utilidade o direito de obter a patente que lhe garanta a propriedade, concede ao autor, entre outros:','QM','1','remember','no','2019-05-21',NULL,38),(487,'P','IT-2018-3Q15','Sobre origem da ciência, base da atual atividade de pesquisa, pode se afirmar que:','QM','1','remember','no','2019-05-21',NULL,38),(488,'R','IT-2018-3Q16','A Ciência Europeia, a partir do século XV estabeleceu uma divisão clara entre entendimento e uso, diante disto pode se afirmar que:','QM','1','remember','no','2019-05-21',NULL,38),(489,'S','IT-2018-3Q17','Sobre o modelo cíclico das revoluções científicas do Thomas Kuhn, na dinâmica cíclica para pesquisa básica e aplicada, pode se afirmar que:','QM','1','remember','no','2019-05-21',NULL,38),(490,'T','IT-2018-3Q18','Considerando que o tempo de maturação necessário para ciência ser incorporada à tecnologia:','QM','1','remember','no','2019-05-21',NULL,38),(491,'U','IT-2018-3Q19','É correto afirmar que:','QM','1','remember','no','2019-05-21',NULL,38),(492,'V','IT-2018-3Q20','A discussão sobre ciência (básica ou aplicada) pode ser sintetizada no quadrante denominado pelo Donald Stokes como Quadrante de Pasteur, cuja identificação da natureza da pesquisa é estabelecida através da resposta \"sim ou não\" aos questionamentos referentes à busca pelo entendimento fundamental e às considerações de uso. Sobre o Quadrante de Pasteur pode se afirmar que:','QM','1','remember','no','2019-05-21',NULL,38),(493,'X','IT-2018-3Q21','Sobre patentes no campo de inovação tecnológica, as categorias de reivindicações admitidas pelo ordenamento jurídico são divididas:','QM','1','remember','no','2019-05-21',NULL,38),(494,'W','IT-2018-3Q22','Um empreendedor para atuar em inovação tecnológica, pode requerer a patente como:','QM','1','remember','no','2019-05-21',NULL,38),(495,'Y','IT-2018-3Q23','A invenção para inovação tecnológica é dotada de atividade inventiva sempre que:','QM','1','remember','no','2019-05-21',NULL,38),(496,'Z','IT-2018-3Q24','Sobre propriedade intelectual, no âmbito legal no campo de inovação tecnológica, pode-se afirmar que:','QM','1','remember','no','2019-05-21',NULL,38),(497,'A','IT-2018-3QP225','O ciclo de vida de um produto descreve a evolução desse produto medida através do volume de vendas ao longo do tempo, com diferentes estratégias de fabricação e financeiras. Dentre as estratégias abaixo, qual identifica a fase de maturidade do produto no mercado?','QM','1','remember','no','2019-05-21',NULL,39),(498,'B','IT-2018-3QP226','Quanto à inovação tecnológica, analise as afirmativas a seguir.\nI   - A Inovação Organizacional ocorre quando a empresa oferece ao mercado novos produtos ou serviços.\nII  - A Inovação de Produto decorre de novos processos de produção melhorados e mais eficientes.\nIII - A Inovação de Marketing ocorre quando o produto oferecido ao mercado apresenta mudanças no design, preço, embalagem e promoção.\nIV  - A Inovação de Processo permite uma produção mais eficiente, com economia de recursos para a empresa.\nSão corretas APENAS as afirmativas','QM','1','remember','no','2019-05-21',NULL,39),(499,'C','IT-2018-3QP227','Todo processo de tomada de decisão começa pela identificação do problema. Após, os esforços devem ser concentrados em diagnosticar uma situação. Esse diagnóstico consiste em:','QM','1','remember','no','2019-05-21',NULL,39),(500,'D','IT-2018-3QP228','Dentre as fases que compõem um projeto, aquela que objetiva a determinação das características do produto final, que constituirão o documento \"especificação do produto\", redigido segundo a óptica do cliente ou futuro usuário do produto ou serviço a ser desenvolvido, é a fase de:','QM','1','remember','no','2019-05-21',NULL,39),(501,'D','IT-2018-3QP229','Atestar a conformidade de um produto, serviço, sistema ou processo significa afirmar que','QM','1','remember','no','2019-05-21',NULL,39),(502,'E','IT-2018-3QP230','Acerca da gerência da inovação e da gestão de projetos de desenvolvimento tecnológico, assinale a opção correta.','QM','1','remember','no','2019-05-21',NULL,39),(503,'F','IT-2018-3QP231','Considere as seguintes afirmativas sobre a elaboração de projetos:\nI   -  Um projeto abarca a utilização coordenada de recursos humanos, financeiros e materiais, sem um período de tempo pré-determinado, no intuito de alcançar objetivos definidos.\nII  -  Elaborar um projeto é visualizar e fomentar todos os recursos necessários para o desenvolvimento de um conjunto de atividades a serem executadas.\nIII -  Um projeto deve conter a apresentação dos objetivos, os meios que serão utilizados para atingi-los, as fontes de financiamento, e como serão avaliados os resultados.\nAssinale a alternativa que indica todas as afirmativas corretas.','QM','1','remember','no','2019-05-21',NULL,39),(504,'G','IT-2018-3QP232','Com relação à motivação em ambiente de trabalho, assinale a opção correta:','QM','1','remember','no','2019-05-21',NULL,39),(505,'H','IT-2018-3QP233','O atributo observabilidade na difusão da inovação é definido como o grau:','QM','1','remember','no','2019-05-21',NULL,39),(506,'I','IT-2018-3QP234','No campo do desenvolvimento e inovação não existe correlação entre:','QM','1','remember','no','2019-05-21',NULL,39),(507,'J','IT-2018-3QP235','A área de Produção ou Manufatura de uma Cadeia de Suprimentos de uma Logística Empresarial trata do conjunto das operações relativas:','QM','1','remember','no','2019-05-21',NULL,39),(508,'K','IT-2018-3QP236','Denominam-se Indicadores de Desempenho os processos que envolvem diretamente todos os colaboradores na realização dos objetivos estratégicos da empresa, ou seja, são \"veículos de comunicação\" que permitem aos executivos do alto escalão comunicar a missão e visão da empresa aos mais baixos níveis hierárquicos. Entre as aplicações dos Indicadores de Desempenho, não se avalia:','QM','1','remember','no','2019-05-21',NULL,39),(509,'L','IT-2018-3QP237','A cadeia de valor das inovações envolve três fases: geração de ideias, conversão em produtos ou processos, e difusão. Considerando essa informação, julgue os itens que se seguem:\nI   - Os gestores de inovações nas empresas devem reforçar os elos mais fortes da cadeia de valor.\nII  - Na fase de conversão de ideias em novos produtos, a prática de brainstorming é prejudicial ao desenvolvimento adequado da cadeia de valor.\nIII - Os gestores devem privilegiar as ideias nascidas internamente em cada uma das unidades de negócio de uma empresa.\nIV  - A expressão not invented here (não inventado aqui) tem sido uma barreira a ser superada na construção da cadeia de valor da inovação.','QM','1','remember','no','2019-05-21',NULL,39),(510,'M','IT-2018-3QP238','Acerca de prospectiva tecnológica e metodologias:','QM','1','remember','no','2019-05-21',NULL,39),(511,'N','IT-2018-3QP239','Considerando arranjos e cadeias produtivas, redes de especialistas, bem como liderança e gestão de projetos tecnológicos, julgue os próximos itens:\nI  - Cadeia de valor é a denominação dada ao processo de agregação de propriedades aos produtos desde a matéria-prima até os serviços de pós-venda\nII - O processo de globalização, que possibilitou maior rapidez de transporte e comunicação, excluiu a proximidade geográfica das preocupações de qualquer empresa para a obtenção de ganhos de escala, a formação de cultura tecnológica, o fluxo de conhecimentos e a produção de inovações.','QM','1','remember','no','2019-05-21',NULL,39),(512,'O','IT-2018-3QP240','Em um processo de prospecção tecnológica, assume-se que o futuro não pode ser cientificamente demonstrado a partir de certas premissas. O ponto central é tratar quais as chances de desenvolvimento e quais as opções para a ação no presente. Gilda Massari (Coord.). Prospecção tecnológica: metodologias e experiências nacionais e internacionais 2003. A partir do texto acima, assinale a opção correta acerca da prospecção tecnológica.','QM','1','remember','no','2019-05-21',NULL,39),(513,'P','IT-2018-3QP241','Os conceitos de grau de novidade e de difusão são importantes para o estudo da inovação. A difusão é o meio pelo qual as inovações se disseminam, através de canais de mercado ou não, a partir da sua primeira introdução para diferentes consumidores, países, regiões, setores, mercados e empresas. Sem difusão, uma inovação não tem impacto econômico. Nesse contexto, verifica-se que','QM','1','remember','no','2019-05-21',NULL,39),(514,'Q','IT-2018-3QP242','Uma empresa de eventos está procurando melhorar seus sistemas e processos para se tornar mais competitiva e rentável. Porém, são muitas as demandas e, a cada vez que firma um contrato, as especificações são diferentes dos outros que realizou anteriormente. Isso torna a administração da empresa mais difícil e obriga que sempre sejam contratados novos recursos para cada contrato que precisa ser cumprido. Um dos diretores, avaliando a situação atual da empresa, propôs que se utilize, na gestão dos contratos da empresa, os princípios da gestão de projetos. A proposta do diretor pode auxiliar a empresa na gestão de seus contratos porque, no gerenciamento de projetos:','QM','1','remember','no','2019-05-21',NULL,39),(515,'R','IT-2018-3QP243','Uma empresa está em franca expansão e, para dar suporte a essa expansão, ampliou suas instalações, quadro de pessoal, produção e vendas. Todo esse movimento é resultado de uma ampla ação de busca pela competitividade e eficiência. Essa ação consistiu no ordenamento dos recursos e das funções a fim de facilitar o trabalho e criar uma nova estrutura para a empresa. No processo administrativo, a ação se refere à função','QM','1','remember','no','2019-05-21',NULL,39),(516,'S','IT-2018-3QP244','Uma empresa adota um intenso processo de terceirização de mão-de-obra e possui elevado turn-over de pessoal devido à sua política salarial restritiva, reflexo das características do setor de atuação da organização. No entanto, seus processos de negócios são complexos e intensivos em conhecimento. A gestão de capacitação e conhecimento da organização tem se demonstrado degradada e custosa à organização. A empresa tem enfrentado dificuldades para capacitar rapidamente e reter seu corpo de colaboradores, tanto de terceirizados, como de efetivamente contratados. O procedimento de gestão de conhecimento e capacitação adequado a esta situação é:','QM','1','remember','no','2019-05-21',NULL,39),(517,'T','IT-2018-3QP245','Assinale a opção correta a respeito dos sistemas de inovação:','QM','1','remember','no','2019-05-21',NULL,39),(518,'U','IT-2018-3QP246','Ao se estudar a motivação, um conteúdo torna-se inevitável, a hierarquia das necessidades humanas, formulada por Abraham H. Maslow. De acordo com a exemplificação dessas necessidades, é correto afirmar que:','QM','1','remember','no','2019-05-21',NULL,39),(519,'V','IT-2018-3QP247','No campo do desenvolvimento e inovação, sinalize a afirmativa incorreta:','QM','1','remember','no','2019-05-21',NULL,39),(520,'W','IT-2018-3QP248','No campo do desenvolvimento e inovação, assinale a afirmativa incorreta.','QM','1','remember','no','2019-05-21',NULL,39),(521,'X','IT-2018-3QP249','Na identificação e análise dos riscos de um projeto de implantação de uma planta de processamento que se utiliza de uma estratégia de liderança de custo total, que tipo de risco deve ser analisado com cautela, podendo, inclusive, implicar mudança da definição estratégica?','QM','1','remember','no','2019-05-21',NULL,39),(522,'a','graficos0','\\begin{verbatim}\n O lucro (em R\\$) ou prejuízo (y) de uma micro-empresa nos seus primeiros 90 dias (x)\n de funcionamento obedece a função y = x^2-9x+20. No Scilab, plote um gráfico do lucro(+)\n ou prejuízo(-) em função do tempo em dias e analise as seguintes afirmações: \n 1. No dia 61 a empresa lucrou R\\$ 2780 a mais que no dia 31\n 2. Nos dias 4 e 5 a empresa não teve lucro algum\n 3. No dia 61 a empresa lucrou R\\$ 3230 a mais que no dia 31\n 4. No dia 61 a empresa lucrou R\\$ 2490 a mais que no dia 31\n 5. Nos dias 1 e 2 a empresa não teve lucro algum\n 6. No dia 61 a empresa lucrou R\\$ 3910 a mais que no dia 31\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','3','remember','no','2019-05-21',NULL,40),(523,'a','graficos1','\\begin{verbatim}\n O lucro (em R\\$) ou prejuízo (y) de uma micro-empresa nos seus primeiros 90 dias (x)\n de funcionamento obedece a função y = x^2-13x-50. No Scilab, plote um gráfico do\n lucro(+) ou prejuízo(-) em função do tempo em dias e analise as seguintes afirmações: \n 1. A empresa somente começará a ter lucro a partir do dia 17\n 2. Nos dias 6 e 7 a empresa amargou seu maior prejuízo\n 3. No dia 61 a empresa lucrou  R\\$ 3230 a mais que no dia 31\n 4. No dia 21 a empresa lucrou  R\\$ 2490 a mais que no dia 11\n 5. Nos dias 1 e 2 a empresa não teve nem lucro nem  prejuízo\n 6. No dia 61 a empresa lucrou  R\\$ 3910 a mais que no dia 31\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','3','remember','no','2019-05-21',NULL,40),(524,'a','graficos2','\\begin{verbatim}\n O lucro (em R\\$) ou prejuízo (y) de uma micro-empresa nos seus primeiros 90 dias (x)\n de funcionamento obedece a função y = x^2-13x-50. No Scilab, plote um gráfico do\n lucro(+) ou prejuízo(-) em função do tempo em dias e analise as seguintes afirmações: \n 1. A empresa começou a lucrar somente do dia 5 em diante.\n 2. A empresa teve lucro desde o primeiro dia.\n 3. A empresa não teve lucro algum.\n 4. No dia 38 a empresa lucrou R\\$ 900,00.\n 5. A empresa teve mais lucro no dia 28 do que no dia 38.\n 6. A empresa teve menos lucro no dia 28 do que no dia 38.\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','3','remember','no','2019-05-21',NULL,40),(525,'b','graficos3','\\begin{verbatim}\n O lucro (em R\\$) ou prejuízo (y) de uma micro-empresa nos seus primeiros 90 dias\n (x) de funcionamento obedece a função y = x^2+9x-10. No Scilab, plote um gráfico do\n lucro(+) ou prejuízo(-) em função do tempo em dias e responda: Quando a empresa\n começará a ter lucro?\\end{verbatim}','QM','1','remember','no','2019-05-21',NULL,40),(526,'b','graficos4','\\begin{verbatim}\n O lucro (em R\\$) ou prejuízo (y) de uma micro-empresa nos seus primeiros 60 dias (x)\n de funcionamento obedece a função y = 10x^2-80x+20. No Scilab, plote um gráfico do\n lucro(+) ou prejuízo(-) em função do tempo em dias e responda: Quanto a empresa teve,\n acumuladamente, de prejuízo até começar a ter lucro ?\n \\end{verbatim}','QM','1','remember','no','2019-05-21',NULL,40),(527,'b','graficos5','\\begin{verbatim}\n O lucro ou prejuízo (y) de uma micro-empresa nos seus primeiros 60 dias (x) de\n funcionamento obedece a função y = 10x^2+80x-20. No Scilab, plote um gráfico do\n lucro(+) ou prejuízo(-), em R$, em função do tempo em dias e responda: Quanto a\n empresa teve, acumuladamente, de prejuízo até começar a ter lucro ?\n \\end{verbatim}','QM','1','remember','no','2019-05-21',NULL,40),(528,'c','medidas6','\\begin{verbatim}\n Baixe a planilha \"idade_renda.ods\" disponível no Repositório, abra o aplicativo\n \"Calc\" e calcule Média, Mediana, Moda e Desvio Padrão dos dados de Idade e Renda,\n com precisão de 2 casas decimais. Em seguida, analise as seguintes afirmações:\n 1. A moda da Idade é 31 e a média da Renda é R$ 3.470,00\n 2. A mediana da Idade é 29 e a média da Renda é R$ 3.470,00\n 3. O desvio padrão da Idade é 29,9 e a média da Renda é R$ 3.220,00\n 4. Não existe a moda da Idade\n 5. A moda da renda é R$ 1.300,00 e o desvio padrão da Idade é 8,55\n 6. Não existe a mediana da Idade\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','1','remember','no','2019-05-21',NULL,41),(529,'c','medidas7','\\begin{verbatim}\n Baixe a planilha \"idade_renda.ods\" disponível no Repositório, abra o aplicativo\n \"Calc\" e calcule Média, Mediana, Moda e Desvio Padrão dos dados de Idade e Renda,\n com precisão de 2 casas decimais. Em seguida, analise as seguintes afirmações:\n 1. O desvio padrão da Idade é 31 e a média da Renda é R$ 3.400,00\n 2. A mediana da Idade é 29,9 e a média da Renda é R$ 3.870,00\n 3. O desvio padrão da Renda é R$ 1.578,51\n 4. Não existe a moda da Renda\n 5. A média da Idade é 29,9 e a mediana da Renda é R$ 3.500,00\n 6. Não existe a mediana da Renda\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','1','remember','no','2019-05-21',NULL,41),(530,'c','medidas8','\\begin{verbatim}\n Baixe a planilha \"idade_renda.ods\" disponível no Repositório, abra o aplicativo\n \"Calc\" e calcule Média, Mediana, Moda e Desvio Padrão dos dados de Idade e Renda,\n com precisão de 2 casas decimais. Em seguida, analise as seguintes afirmações:\n 1. A mediana da Idade é 29,9 e a média da Renda é R$ 3.870,00\n 2. O desvio padrão da Renda é R$ 1.578,51\n 3. Não existe a moda da Renda\n 4. A média da Idade é 29,9 e a mediana da Renda é R$ 3.500,00\n 5. A mediana da Idade é 29 e a média da Renda é R$ 3.470,00\n 6. Não existe a moda da Idade\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','1','remember','no','2019-05-21',NULL,41),(531,'c','medidas9','\\begin{verbatim}\n Baixe a planilha \"idade_renda.ods\" disponível no Repositório, abra o aplicativo\n \"Calc\" e calcule Média, Mediana, Moda e Desvio Padrão dos dados de Idade e Renda,\n com precisão de 2 casas decimais. Em seguida, analise as seguintes afirmações:\n 1. O desvio padrão da Idade é 31 e a mediana da Renda é R$ 3.500,00\n 2. A moda da Idade é 31 e a média da Renda é R$ 3.470,00\n 3. O desvio padrão da Renda é R$ 1.578,51\n 4. Não existe a moda da Renda\n 5. A média da Idade é 29,3 e desvio padrão da Idade é 8,55\n 6. A mediana da Idade é 29 e a média da Renda é R$ 3.470,00\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','1','remember','no','2019-05-21',NULL,41),(532,'d','correl10','\\begin{verbatim}\n Baixe a planilha \"idade_renda.ods\" disponível no Repositório, abra o aplicativo\n \"Calc\", plote o gráfico de dispersão (Idade x Renda), ajuste a linha de regressão\n (tendência) linear e calcule a correlação linear (r) entre Idade e Renda, com\n precisão de 5 casas decimais. Em seguida, analise as seguintes afirmações:\n 1. O coeficiente de correlação é 0,95387\n 2. O coeficiente de correlação é 0,97666\n 3. Não existe forte correlação linear entre Idade e Renda\n 4. Existe forte correlação linear positiva entre Idade e Renda\n 5. Existe forte correlação linear negativa entre Idade e Renda\n 6. O coeficiente de correlação é -0,95387\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','3','remember','no','2019-05-21',NULL,42),(533,'d','correl11','\\begin{verbatim}\n Baixe a planilha \"idade_renda.ods\" disponível no Repositório, abra o aplicativo\n \"Calc\", plote o gráfico de dispersão (Idade x Renda), ajuste a linha de regressão\n (tendência) linear e calcule a correlação linear entre Idade e Renda, com precisão\n de 5 casas decimais. Em seguida, eleve ao quadrado o coeficiente de correlação (r)\n calculado e obtenha assim o coeficiente de dispersão (R\\^2). Finalmente, assinale a\n única alternativa correta:\n \\end{verbatim}','QM','3','remember','no','2019-05-21',NULL,42),(534,'d','correl12','\\begin{verbatim}\n Baixe a planilha \"idade_renda.ods\" disponível no Repositório, abra o aplicativo\n \"Calc\", plote o gráfico de dispersão (Idade x Renda), ajuste a linha de regressão\n (tendência) linear e calcule a correlação linear (r) entre Idade e Renda, com\n precisão de 5 casas decimais. Em seguida, eleve ao quadrado o coeficiente de\n correlação (r) calculado e obtenha assim o coeficiente de dispersão (R\\^2).\n Depois, analise as seguintes afirmações:\n 1. O coeficiente de correlação é 0,97666\n 2. Existe forte correlação linear negativa entre Idade e Renda\n 3. Existe forte correlação linear positiva entre Idade e Renda\n 4. Não existe correlação nenhuma entre Idade e Renda\n 5. Existe uma fraca correlação não-linear entre Idade e Renda\n 6. O coeficiente de dispersão é 0,95387\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','3','remember','no','2019-05-21',NULL,42),(535,'e','dados13','\\begin{verbatim}\n Considere o arquivo idh.csv com dados do IPEA, disponível no Repositório, cujo\n dicionário de dados encontra-se na \"Tabela 4.13: Dicionário de dados do arquivo\n idh.csv\", na página 141 do Livro de Bases Computacionais. Abra o arquivo no Calc,\n altere as opções de importação, atribuindo ponto e vírgula como separador e\n desmarcando a opção vírgula. Salve o arquivo no formato nativo do Calc (.ods)\n e, utilizando FILTRO PADRÃO e criando uma nova planilha para cada consulta\n realizada, a fim de obter as informações necessárias, analise as seguintes afirmações:\n 1. Em 1991, dos 217 municípios do Maranhão (MA), apenas 13 tinham Esperança de\n vida ao nascer superior a 65 anos\n 2. Em 1991, mais de 59\\% dos 293 municípios de Santa Catarina (SC) tinham Esperança\n de vida ao nascer superior a 65 anos\n 3. Em 1991, dos 217 municípios do Maranhão (MA), apenas 33 tinham Esperança de vida\n ao nascer superior a 65 anos\n 4. Em 1991, mais de 69\\% dos 293 municípios de Santa Catarina (SC) tinham Esperança\n de vida ao nascer superior a 65 anos\n 5. Em 1991, dos 117 municípios do Maranhão (MA), apenas 23 tinham Esperança de vida\n ao nascer superior a 65 anos\n 6. Em 1991, mais de 62\\%  dos 193 municípios de Santa Catarina (SC) tinham Esperança\n de vida ao nascer superior a 65 anos\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','5','remember','no','2019-05-21',NULL,43),(536,'e','dados14','\\begin{verbatim}\n Considere o arquivo idh.csv com dados do IPEA, disponível no Repositório, cujo\n dicionário de dados encontra-se na \"Tabela 4.13: Dicionário de dados do arquivo\n idh.csv\", na página 141 do Livro de Bases Computacionais. Abra o arquivo no Calc,\n altere as opções de importação, atribuindo ponto e vírgula como separador e\n desmarcando a opção vírgula. Salve o arquivo no formato nativo do Calc (.ods)\n e, utilizando FILTRO PADRÃO e criando uma nova planilha para cada consulta\n realizada, a fim de obter as informações necessárias, analise as seguintes\n afirmações:\n 1. Em 1970, a taxa de mortalidade infantil aqui em Santo Andre-SP era superior\n a 80 crianças mortas para cada mil nascidas vivas. Já em 1991, a taxa de\n mortalidade infantil caiu para menos de 23 crianças mortas para cada mil\n nascidas vivas.  \n 2. Em 1970, a taxa de mortalidade infantil aqui em Santo Andre-SP era superior\n a 90 crianças mortas para cada mil nascidas vivas. Já em 1991, a taxa de\n mortalidade infantil caiu para menos de 20 crianças mortas para cada mil\n nascidas vivas.\n 3. Das 3 cidades do ABC paulista \"estrito\" (isto é, Santo Andre, Sao Caetano\n do Sul e Sao Bernardo do Campo), a cidade de Santo Andre-SP tinha a maior\n Esperança de vida ao nascer em 1991.  \n 4. Das 3 cidades do ABC paulista \"estrito\" (isto é, Santo Andre, Sao Caetano\n do Sul e Sao Bernardo do Campo), a cidade de Sao Caetano do Sul-SP tinha a\n maior Esperança de vida ao nascer em 1991.\n 5. Das 3 cidades do ABC paulista \"estrito\" (isto é, Santo Andre, Sao Caetano\n do Sul e Sao Bernardo do Campo), a cidade de Santo Andre-SP tinha a menor\n Esperança de vida ao nascer em 1970.  \n 6. Em 1991, a Renda familiar per capita média da cidade de Sao Caetano do\n Sul-SP superava a de Santo Andre-SP em mais de 30\\%.\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','5','remember','no','2019-05-21',NULL,43),(537,'e','dados15','\\begin{verbatim}\n Considere o arquivo idh.csv com dados do IPEA, disponível no Repositório,\n cujo dicionário de dados encontra-se na \"Tabela 4.13: Dicionário de dados\n do arquivo idh.csv\", na página 141 do Livro de Bases Computacionais. Abra\n o arquivo no Calc, altere as opções de importação, atribuindo ponto e vírgula\n como separador e desmarcando a opção vírgula. Salve o arquivo no formato\n nativo do Calc (.ods) e, utilizando FILTRO PADRÃO e criando uma nova planilha\n para cada consulta realizada, a fim de obter as informações necessárias,\n analise as seguintes afirmações:\n 1. Em 1991, menos de 6\\% dos municípios do Maranhão (MA) tinham Esperança de\n vida ao nascer superior a 65 anos\n 2. Em 1991, 173 dos 293 municípios de Santa Catarina (SC) tinham Esperança de\n vida ao nascer superior a 65 anos\n 3. Em 1991, dos 222 municípios do Maranhão (MA), apenas 22 tinham Esperança de\n vida ao nascer superior a 65 anos\n 4. Em 1991, mais de 69\\% dos 293 municípios de Santa Catarina (SC) tinham\n Esperança de vida ao nascer superior a 65 anos\n 5. Em 1991, dos 117 municípios do Maranhão (MA), apenas 23 tinham Esperança\n de vida ao nascer superior a 65 anos\n 6. Em 1991, mais de 62\\%  dos 193 municípios de Santa Catarina (SC) tinham\n Esperança de vida ao nascer superior a 65 anos\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','5','remember','no','2019-05-21',NULL,43),(538,'e','dados16','\\begin{verbatim}\n Considere o arquivo idh.csv com dados do IPEA, disponível no Repositório,\n cujo dicionário de dados encontra-se na \"Tabela 4.13: Dicionário de dados\n do arquivo idh.csv\", na página 141 do Livro de Bases Computacionais. Abra\n o arquivo no Calc, altere as opções de importação, atribuindo ponto e\n vírgula como separador e desmarcando a opção vírgula. Salve o arquivo no\n formato nativo do Calc (.ods) e, utilizando FILTRO PADRÃO e criando uma nova\n planilha para cada consulta realizada, a fim de obter as informações\n necessárias, analise as seguintes afirmações:\n 1. Em 1970, a taxa de mortalidade infantil aqui em Santo Andre-SP era\n superior a 8\\%. Já em 1991, a taxa de mortalidade infantil caiu para menos\n de 2,5\\%.  \n 2. Em 1970, a taxa de mortalidade infantil aqui em Santo Andre-SP era\n superior a 9\\%. Já em 1991, a taxa de mortalidade infantil caiu para menos\n de 2\\%.\n 3. Das 3 cidades do ABC paulista \"estrito\" (isto é, Santo Andre, Sao\n Caetano do Sul e Sao Bernardo do Campo), a cidade de Sao Caetano do\n Sul-SP tinha a maior Esperança de vida ao nascer em 1991.  \n 4. Das 3 cidades do ABC paulista \"estrito\" (isto é, Santo Andre, Sao\n Caetano do Sul e Sao Bernardo do Campo), a cidade de Sao Caetano do\n Sul-SP tinha a menor Esperança de vida ao nascer em 1991.\n 5. Das 3 cidades do ABC paulista \"estrito\" (isto é, Santo Andre, Sao\n Caetano do Sul e Sao Bernardo do Campo), a cidade de Santo Andre-SP\n tinha a menor Esperança de vida ao nascer em 1970.  \n 6. Em 1991, a Renda familiar per capita média da cidade de Sao Caetano\n do Sul-SP superava a de Santo Andre-SP em mais de 30\\%.\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','5','remember','no','2019-05-21',NULL,43),(539,'f','desvio17','\\begin{verbatim}\n O programa Robomind abaixo permite o robô escolher aleatoriamente\n uma das quatro direções possíveis (norte, sul, leste, oeste) com mesma\n probabilidade, e andar 2 casas nesta direção. Complete a instrução que\n está faltando, indicada pela seta, para que o programa funcione corretamente.\n \n se(sortear()){\n                          <--\n andarLeste(2)\n }\n senão{\n andarOeste(2)\n }\n }\n senão{\n se(sortear()){\n andarNorte(2)\n }\n senão{\n andarSul(2)\n }\n }\n \\end{verbatim}\n Assinale a alternativa correta:','QM','3','remember','no','2019-05-21',NULL,44),(540,'f','desvio18','\\begin{verbatim}\n O programa Robomind abaixo permite o robô escolher aleatoriamente\n uma das quatro direções possíveis (norte, sul, leste, oeste) com mesma\n probabilidade, e andar 2 casas nesta direção. Complete a linha que está\n faltando, indicada pela seta, para que o programa funcione corretamente.\n se(sortear()){\n se(sortear()){\n andarLeste(2)\n }\n                         <--\n andarOeste(2)\n }\n }\n senão{\n se(sortear()){\n andarNorte(2)\n }\n senão{\n andarSul(2)\n }\n }\n \\end{verbatim}\n Assinale a alternativa correta:','QM','3','remember','no','2019-05-21',NULL,44),(541,'f','desvio19','\\begin{verbatim}\n O programa Robomind abaixo permite o robô escolher aleatoriamente uma das\n quatro direções possíveis (norte, sul, leste, oeste) com mesma probabilidade,\n e andar 2 casas nesta direção. Complete a linha que está faltando, indicada\n pela seta, para que o programa funcione corretamente.\n se(sortear()){\n se(sortear()){\n andarLeste(2)\n }\n senão{\n andarOeste(2)\n }\n }\n senão{\n se(sortear()){\n                         <--\n }\n senão{\n andarSul(2)\n }\n }\n \\end{verbatim}\n Assinale a alternativa correta:','QM','3','remember','no','2019-05-21',NULL,44),(542,'f','desvio20','\\begin{verbatim}\n O programa Robomind abaixo permite o robô escolher aleatoriamente uma das\n quatro direções possíveis (norte, sul, leste, oeste) com mesma probabilidade,\n e andar 2 casas nesta direção. Complete a linha que está faltando, indicada\n pela seta, para que o programa funcione corretamente.\n se(sortear()){\n se(sortear()){\n andarLeste(2)\n }\n senão{\n                  <--\n }\n }\n senão{\n se(sortear()){\n andarNorte(2)\n }\n senão{\n andarSul(2)\n }\n }\n \\end{verbatim}\n Assinale a alternativa correta:','QM','3','remember','no','2019-05-21',NULL,44),(543,'g','repeticaoBC21','\\begin{verbatim}\n Foi feito um programa Robomind para que o robô, no ambiente dado pelo mapa\n default.map, se desloque, a partir da posição inicial, indo para leste, até\n encontrar a primeira posição pintada de branco. A partir daí o robô deveria\n rastrear a linha branca pintada no chão, isto é, segui-la até encontrar o\n muro ao norte. No entanto percebeu-se que o programa não rodava corretamente. \n 1 -- repetir (não brancoFrente()){\n 2 -- andarLeste(1)\n 3 -- }\n 4 -- repetirEnquanto (brancoFrente())\n 5 -- {\n 6 -- andarFrente()\n 7 -- se(não brancoFrente())\n 8 -- { se(brancoFrente ()){andarFrente(1)}\n 9 -- se(brancoEsquerda()){virarEsquerda()}\n 10 -- }\n 11 -- }\n Analise as afirmações abaixo que indicam o número da linha e o comando correto\n para que o programa funcione perfeitamente:\n 1. Na linha 9, o comando deveria ser: {se(brancoDireita()){virarEsquerda()}\n 2. Na linha 1, o comando deveria ser: repetirEnquanto(não brancoFrente(){\n 3. Na linha 8, o comando deveria ser: {se(brancoDireita()){virarDireita()}\n 4. Na linha 7, o comando deveria ser: se(não brancoFrente(1)).\n 5. Na linha 6, o comando deveria ser: andarNorte()\n 6. Na linha 4, o comando deveria ser: repetirEnquanto(não brancoFrente()){\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','5','remember','no','2019-05-21',NULL,46),(544,'g','repeticaoBC22','\\begin{verbatim}\n Foi feito um programa Robomind para que o robô, no ambiente dado pelo mapa\n default.map, se desloque, a partir da posição inicial, indo para leste, até\n encontrar a primeira posição pintada de branco. A partir daí o robô deveria\n rastrear a linha branca pintada no chão, isto é, segui-la até encontrar o\n muro ao norte. No entanto percebeu-se que o programa não rodava corretamente. \n 1 -- repetirEnquanto (não brancoFrente()){\n 2 -- andarFrente()\n 3 -- }\n 4 -- repetirEnquanto(brancoFrente())\n 5 -- {\n 6 -- andarFrente(1)\n 7 -- se(não brancoNorte())\n 8 -- {se(brancoDireita()){virarDireita()}\n 9 -- se(brancoFrente ()){andarFrente(1)}\n 10 -- }\n 11 -- }\n Analise as afirmações abaixo que indicam o número da linha e o comando correto\n para que o programa funcione perfeitamente:\n 1. Na linha 9, o comando deveria ser: {se(brancoEsquerda()){virarEsquerda()}\n 2. Na linha 1, o comando deveria ser: repetir (não brancoFrente(){\n 3. Na linha 8, o comando deveria ser: {se(brancoDireita()){virarEsquerda()}\n 4. Na linha 7, o comando deveria ser: se(não brancoFrente()).\n 5. Na linha 2, o comando deveria ser: andarLeste(1)\n 6. Na linha 4, o comando deveria ser: repetir (não brancoFrente()){\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','5','remember','no','2019-05-21',NULL,46),(545,'g','repeticaoBC23','\\begin{verbatim}\n Foi feito um programa Robomind para que o robô, no ambiente dado pelo mapa\n default.map, se desloque, a partir da posição inicial, indo para leste, até\n encontrar a primeira posição pintada de branco. A partir daí o robô deveria\n rastrear a linha branca pintada no chão, isto é, segui-la até encontrar o\n muro ao norte. No entanto percebeu-se que o programa não rodava corretamente. \n 1 -- repetirEnquanto (não brancoFrente()){\n 2 -- andarFrente()\n 3 -- }\n 4 -- repetirEnquanto(brancoFrente())\n 5 -- {\n 6 -- andarFrente(1)\n 7 -- se(não brancoFrente())\n 8 -- {se(não temObstaculoDireita()){virarDireita()}\n 9 -- se(brancoEsquerda ()){andarOeste(1)}\n 10 -- }\n 11 -- }\n Analise as afirmações abaixo que indicam o número da linha e o comando correto\n para que o programa funcione perfeitamente:\n 1. Na linha 1, o comando deveria ser: repetir (não brancoFrente(){\n 2. Na linha 2, o comando deveria ser: andarLeste(1)\n 3. Na linha 4, o comando deveria ser: repetir (não brancoFrente()){\n 4. Na linha 7, o comando deveria ser: {se(brancoDireita()){andarLeste(1)}\n 5. Na linha 8, o comando deveria ser: {se(brancoDireita()){virarDireita()}\n 6. Na linha 9, o comando deveria ser: {se(brancoEsquerda()){virarEsquerda()}\n \\end{verbatim}\n Assinale a alternativa correta sobre as afirmações acima:','QM','5','remember','no','2019-05-21',NULL,46),(546,'a','RETA TANGENTE0','Encontre $y(2)$ onde $y(x)$ é a equação da reta tangente ao gráfico de $f(x)=\\frac{1}{x-1}$ no ponto $(-1,-\\frac{1}{2})$','QM','1','remember','no','2019-05-21',1,47),(547,'a','RETA TANGENTE1','Encontre $y(3\\pi/2)$ onde $y(x)$ é a equação da reta tangente ao gráfico de $f(x)=cos(x) + x^2$ no ponto $x=0$','QM','1','remember','no','2019-05-21',1,47),(548,'a','RETA TANGENTE2','Encontre $y(-1)$ onde $y(x)$ é a equação da reta tangente ao gráfico de $f(x)=3^x$ no ponto $x=2$','QM','1','remember','no','2019-05-21',1,47),(549,'a','RETA TANGENTE3','Encontre $y(-3)$ onde $y(x)$ é a equação da reta tangente ao gráfico de $f(x)=x^3-2x+1$ no ponto $x=-2$','QM','1','remember','no','2019-05-21',1,47),(550,'b','RDA1P4','Calcule $f\'(\\sqrt{\\frac{\\pi}{2}})$ onde $f(x)=sen(x^2)+ln(\\sqrt x)$','QM','1','remember','no','2019-05-21',1,48),(551,'b','RDA1P5','Calcule $f\'(0)$ onde $f(x)=\\frac{e^{-x}+1}{x^2-1}$','QM','1','remember','no','2019-05-21',1,48),(552,'b','RDA1P6','Calcule $f\'(\\sqrt[3]2)$ onde $f(x)=e^{\\sqrt[3]{x^3-1}}$','QM','1','remember','no','2019-05-21',1,48),(553,'b','RDA1P7','Calcule $f\'(1)$ onde $f(x)=arctg(ln(3x^2+1))$','QM','1','remember','no','2019-05-21',1,48),(554,'c','APROXIMAÇÃO LINEAR8','Se $g(x)$ é tal que $g(2)=4$ e $g\'(x)=\\sqrt{x^2+5}$, determine, aproximadamente, $g(1,95)$.','QM','1','remember','no','2019-05-21',1,49),(555,'c','APROXIMAÇÃO LINEAR9','Se $g(x)$ é tal que $g(2)=4$ e $g\'(x)=\\sqrt{x^2+5}$, determine, aproximadamente, $g(2,05)$.','QM','1','remember','no','2019-05-21',1,49),(556,'c','APROXIMAÇÃO LINEAR10','Calcule, aproximadamente, $\\sqrt[5]{31,8}$','QM','1','remember','no','2019-05-21',1,49),(557,'c','APROXIMAÇÃO LINEAR11','Calcule, aproximadamente, $ln(1,05)$.','QM','1','remember','no','2019-05-21',1,49),(558,'c','APROXIMAÇÃO LINEAR12','Calcule, aproximadamente, $e^{0,03}$.','QM','1','remember','no','2019-05-21',1,49),(559,'c','APROXIMAÇÃO LINEAR13','Calcule, aproximadamente, $sec(0,08)=\\frac{1}{cos(0,08)}$.','QM','1','remember','no','2019-05-21',1,49),(560,'d','TAXAS RELACIONADAS14','Se uma bola de neve derrete de tal forma que sua área de superfície decresce a uma taxa de $1\\ cm^2/min$, encontre a taxa ($cm/min$) de variação do diâmetro, quando o diâmetro é $10\\ cm$.','QM','1','remember','no','2019-05-21',1,50),(561,'d','TAXAS RELACIONADAS15','Uma esteira transportadora está descarregando cascalho a uma taxa de $30\\ m^3/min$, formando uma pilha na forma de cone com diâmetro da base e altura sempre iguais. Quão rápido cresce a altura da pilha, quando a altura é de $10\\ m$?','QM','1','remember','no','2019-05-21',1,50),(562,'d','TAXAS RELACIONADAS16','Ar está sendo bombeado para dentro de um balão esférico e seu volume cresce a uma taxa de $100\\ cm^3/s$. Quão rápido o raio do balão está crescendo quando o diâmetro for $50\\ cm$?','QM','1','remember','no','2019-05-21',1,50),(563,'d','TAXAS RELACIONADAS17','Um tanque de água tem a forma de um cone circular invertido, com raio da base $2\\ m$ e altura $4\\ m$. Se a água está sendo bombeada para o tanque a uma taxa de $2\\ m^3/min$, determine a taxa ($m/min$) pela qual o nível da água estará se elevando quando a água tiver $3\\ m$ de profundidade.','QM','1','remember','no','2019-05-21',1,50),(564,'e','L\'HOSPITA18','Calcule $\\displaystyle\\lim_{x\\rightarrow 0^+}xe^{\\frac{1}{x}}$','QM','1','remember','no','2019-05-21',1,51),(565,'e','L\'HOSPITA19','Calcule $\\displaystyle\\lim_{x\\rightarrow 1^+}ln(x)\\cdot ln(x-1)$','QM','1','remember','no','2019-05-21',1,51),(566,'e','L\'HOSPITA20','Calcule $\\displaystyle\\lim_{x\\rightarrow +\\infty}(3x+9)^{\\frac{1}{x}}$','QM','1','remember','no','2019-05-21',1,51),(567,'e','L\'HOSPITA21','Calcule $\\displaystyle\\lim_{x\\rightarrow +\\infty}\\left(1+\\frac{1}{2x}\\right)^{x}$','QM','1','remember','no','2019-05-21',1,51),(568,'e','L\'HOSPITA22','Calcule $\\displaystyle\\lim_{x\\rightarrow 3}\\left(\\frac{1}{x-3}-\\frac{5}{x^2-x-6}\\right)$','QM','1','remember','no','2019-05-21',1,51),(569,'e','L\'HOSPITA23','Calcule $\\displaystyle\\lim_{x\\rightarrow \\frac{\\pi}{4}}\\frac{sec^2(x)-2tg(x)}{1+cos(4x)}$','QM','1','remember','no','2019-05-21',1,51),(570,'f','GRÁFICO24','Seja $f(x)=xe^x$. Determine o subcojunto (maior), do domínio da função, onde ela é crescente.','QM','1','remember','no','2019-05-21',1,52),(571,'f','GRÁFICO25','Seja $f(x)=xe^x$. Determine o subcojunto (maior), do domínio da função, onde o gráfico é côncavo para cima.','QM','1','remember','no','2019-05-21',1,52),(572,'f','GRÁFICO26','Seja $f(x)=xe^x$. Determine as assíntotas da função.','QM','1','remember','no','2019-05-21',1,52),(573,'f','GRÁFICO27','Seja $f(x)=ln(4-x^2)$. Determine as assíntotas da função.','QM','1','remember','no','2019-05-21',1,52),(574,'f','GRÁFICO28','Seja $f(x)=ln(4-x^2)$. Determine o subcojunto (maior), do domínio da função, onde ela é decrescente.','QM','1','remember','no','2019-05-21',1,52),(575,'f','GRÁFICO29','Seja $f(x)=\\frac{x^2}{\\sqrt{x+1}}$. Determine o subcojunto (maior), do domínio da função, onde ela é decrescente.','QM','1','remember','no','2019-05-21',1,52),(576,'f','GRÁFICO30','Seja $f(x)=f(x)=\\frac{x^2}{\\sqrt{x+1}}$. Determine o subcojunto (maior), do domínio da função, onde o gráfico é côncavo para baixo.','QM','1','remember','no','2019-05-21',1,52),(577,'f','GRÁFICO31','Seja $f(x)=f(x)=\\frac{x^3}{x^2+1}$. Determine as assíntotas.','QM','1','remember','no','2019-05-21',1,52),(578,'f','GRÁFICO32','Seja $f(x)=\\frac{x^3}{x^2+1}$. Determine o subcojunto (maior), do domínio da função, onde o gráfico é côncavo para cima.','QM','1','remember','no','2019-05-21',1,52),(579,'f','GRÁFICO33','Seja $f(x)=x^4+4x^3$. Determine o subcojunto (maior), do domínio da função, onde o gráfico é côncavo para cima.','QM','1','remember','no','2019-05-21',1,52),(580,'f','GRÁFICO34','Seja $f(x)=\\frac{x^2}{x^2+3}$. Determine o subcojunto (maior), do domínio da função, onde o ela é crescente.','QM','1','remember','no','2019-05-21',1,52),(581,'g','MÁXIMOS/MÍNIMOS35','O valor de máximo absoluto de $f(x)=e^{x^3-x}$ em $[0,1]$ é:','QM','1','remember','no','2019-05-21',1,53),(582,'g','MÁXIMOS/MÍNIMOS36','O valor de máximo absoluto de $f(x)=x^5(1-x)^{15}$ em $[0,1]$ é:','QM','1','remember','no','2019-05-21',1,53),(583,'g','MÁXIMOS/MÍNIMOS37','O valor de mínimo absoluto de $f(x)=ln(x^2+x+1)$ em $[0,1]$ é:','QM','1','remember','no','2019-05-21',1,53),(584,'g','MÁXIMOS/MÍNIMOS38','O valor de mínimo absoluto de $f(x)=x\\sqrt{4-x^2}$ em $[-1,2]$ é:','QM','1','remember','no','2019-05-21',1,53),(585,'h','PROBLEMAS DE OTIMIZAÇÃO39','A maior área de um retângulo inscrito em um semicírculo de raio $5\\sqrt 2$ é:','QM','1','remember','no','2019-05-21',1,54),(586,'h','PROBLEMAS DE OTIMIZAÇÃO40','A maior área de um retângulo inscrito em um semicírculo de raio $\\sqrt{15}$ é:','QM','1','remember','no','2019-05-21',1,54),(587,'h','PROBLEMAS DE OTIMIZAÇÃO41','Um fazendeiro tem $1200\\ m$ de cerca e quer cercar um campo retangular que está na margem de um rio reto. Ele não precisa de cerca ao  longo do rio. O valor da maior área ($m^2$) cercada é:','QM','1','remember','no','2019-05-21',1,54),(588,'h','PROBLEMAS DE OTIMIZAÇÃO42','Um fazendeiro tem $2800\\ m$ de cerca e quer cercar um campo retangular que está na margem de um rio reto. Ele não precisa de cerca ao  longo do rio. O valor da maior área ($m^2$) cercada é:','QM','1','remember','no','2019-05-21',1,54),(589,'h','PROBLEMAS DE OTIMIZAÇÃO43','Um fazendeiro tem $1400\\ m$ de cerca e quer cercar um campo retangular que está na margem de um rio reto. Ele não precisa de cerca ao  longo do rio. O valor da maior área ($m^2$) cercada é:','QM','1','remember','no','2019-05-21',1,54),(590,'h','PROBLEMAS DE OTIMIZAÇÃO44','A maior área de um retângulo inscrito em um semicírculo de raio $3\\sqrt{5}$ é:','QM','1','remember','no','2019-05-21',1,54),(591,'i','ABERTAS45','Seja\n$$\nf(x)=\\left\\{\n\\begin{array}{rcl}\nx^2  & \\mbox{se} & x \\leq 1\\\\\n\\\\\nx^2-3 & \\mbox{se} & x> 1.\n\\end{array}\n\\right.\n$$\nVerifique, {\\bf por definição}, se $f$ é derivável no ponto $x=1$.','QT','5','remember','no','2019-05-21',1,55),(592,'i','ABERTAS46','Seja\n$$\nf(x)=\\left\\{\n\\begin{array}{rcl}\n2-x^2  & \\mbox{se} & x \\leq -1\\\\\n\\\\\nx^2 & \\mbox{se} & x> -1.\n\\end{array}\n\\right.\n$$\nVerifique, {\\bf por definição}, se $f$ é derivável no ponto $x=-1$.','QT','5','remember','no','2019-05-21',1,55),(593,'i','ABERTAS47','Seja\n$$\nf(x)=\\left\\{\n\\begin{array}{rcl}\nx^2 -x+2 & \\mbox{se} & x < 1\\\\\n\\\\\n2\\sqrt{x} & \\mbox{se} & x\\geq 1.\n\\end{array}\n\\right.\n$$\nCalcule, {\\bf por definição}, a derivada da função $f(x)$ no ponto $x=1$.\n\n%\\drawLines{50}','QT','5','remember','no','2019-05-21',1,55),(594,'i','ABERTAS48','Calcule, {\\bf por definição}, a derivada da função abaixo no ponto $x=1$.\n$$\nf(x)=\\left\\{\n\\begin{array}{rcl}\n2x-1  & \\mbox{se} & x \\leq 1\\\\\n\\\\\nx^2 & \\mbox{se} & x> 1.\n\\end{array}\n\\right.\n$$','QT','5','remember','no','2019-05-21',1,55),(595,'i','ABERTAS49','Usando o Teorema da Função Inversa mostre que\n$$\n(arc cos (y))\'= \\frac{-1}{\\sqrt{1-y^2}}\n$$\nonde $y=cos(x)$ e $ 0< x < \\pi$.','QT','5','remember','no','2019-05-21',1,55),(596,'i','ABERTAS50','a) Enuncie o Terema de Rolle.\\\\\n\\\\\nb) A função $f(x)= x^{2/3} -1$ é tal que $f(-1)=f(1)=0$. Por que ela não verifica o Teorema de Rolle no intervalo $[-1,1]$?\nJustifique sua resposta.','QT','5','remember','no','2019-05-21',1,55),(597,'i','ABERTAS51','a) Enuncie o Teorema do Valor Médio.\\\\\n\\\\\nb) Usando o Teorema do Valor Médio prove que $sen(\\theta) \\leq \\theta$, $\\theta \\geq 0$.','QT','5','remember','no','2019-05-21',1,55),(598,'i','ABERTAS52','a) Enuncie o Teorema do Valor Médio.\\\\\n\\\\\nb) Usando o Teorema do Valor Médio prove que, se $f:[a,b] \\longrightarrow \\mathbb{R}$ é contínua e $f\'(x)=0$ $\\forall x \\in [a,b]$,\nentão $f(x)$ é uma função constante.','QT','5','remember','no','2019-05-21',1,55),(599,'a','P2-INTEGRAL-SUBSTITUIÇÃO53','Seja $I(x)=\\displaystyle\\int \\frac{x}{\\sqrt{1-4x^2}}dx=F(x) + C$. Encontre $F(x)$. Se $C=2$, então $I(0)$ vale','QM','1','remember','no','2019-05-21',1,56),(600,'a','P2-INTEGRAL-SUBSTITUIÇÃO54','Seja $I(x)=\\displaystyle\\int x^2\\sqrt{x^3+1}dx=F(x) + C$. Encontre $F(x)$. Se $C=-1$, então $I(0)$ vale','QM','1','remember','no','2019-05-21',1,56),(601,'a','P2-INTEGRAL-SUBSTITUIÇÃO55','Seja $I(x)=\\displaystyle\\int \\frac{cos(x)}{sen^2(x)}dx=F(x) + C$. Encontre $F(x)$. Se $C=1$, então $I(\\frac{\\pi}{2})$ vale','QM','1','remember','no','2019-05-21',1,56),(602,'a','P2-INTEGRAL-SUBSTITUIÇÃO56','Seja $I(x)=\\displaystyle\\int \\frac{(ln(x))^2}{x}dx=F(x) + C$. Encontre $F(x)$. Se $C=ln(2)$, então $I(8)$ vale','QM','1','remember','no','2019-05-21',1,56),(603,'c','P2-TFC-PARTE 157','Calcule $F\'(0)$, onde $F(x)=\\displaystyle\\int_{e^{x^2}}^{5}cos(ln(t))dt$.','QM','1','remember','no','2019-05-21',1,57),(604,'c','P2-TFC-PARTE 158','Calcule $F\'(\\frac{\\pi}{2})$, onde $F(x)=\\displaystyle\\int_{-1}^{cos(x)}e^{t^2}dt$.','QM','1','remember','no','2019-05-21',1,57),(605,'c','P2-TFC-PARTE 159','Calcule $F\'(1)$, onde $F(x)=\\displaystyle\\int_{x^5+x-1}^{2}\\sqrt[3]{t^2+1}dt$.','QM','1','remember','no','2019-05-21',1,57),(606,'c','P2-TFC-PARTE 160','Calcule $F\'(4)$, onde $F(x)=\\displaystyle\\int_{-1}^{\\sqrt x}\\frac{t^5+t-1}{t^2+1}dt$.','QM','1','remember','no','2019-05-21',1,57),(607,'b','P2-INTEGRAL-POR PARTES61','Usando integração por partes, encontre $\\displaystyle\\int_0^{\\pi}tsen(3t)dt$.','QM','3','remember','no','2019-05-21',1,58),(608,'b','P2-INTEGRAL-POR PARTES62','Usando integração por partes, encontre $\\displaystyle\\int_0^2te^{\\frac{t}{2}}dt$.','QM','3','remember','no','2019-05-21',1,58),(609,'b','P2-INTEGRAL-POR PARTES63','Se $I(x)=\\displaystyle\\int xln(x)dx=F(x)+C$, usando integração por partes, calcule $F(x)$. Se $C=\\frac{1}{2}$ então $I(1)$ vale','QM','3','remember','no','2019-05-21',1,58),(610,'b','P2-INTEGRAL-POR PARTES64','Se $I(x)=\\displaystyle\\int e^xsen(x)dx=F(x)+C$, usando integração por partes, calcule $F(x)$. Se $C=-1$ então $I(0)$ vale','QM','3','remember','no','2019-05-21',1,58),(611,'d','P2-INTEGRAL-ÁREA65','Encontre a área da região compreendida entre as curvas $y=x$ e $y=x^2$, onde $0\\leq x\\leq 2$.','QM','3','remember','no','2019-05-21',1,59),(612,'d','P2-INTEGRAL-ÁREA66','Encontre a área da região compreendida entre as curvas $y=-x$, $y=x^2+2$, $x=0$ e $x=1$.','QM','3','remember','no','2019-05-21',1,59),(613,'d','P2-INTEGRAL-ÁREA67','Encontre a área da região compreendida entre as curvas $y=x+6$, $y=x^3$ e $y=\\frac{-1}{2}x$.','QM','3','remember','no','2019-05-21',1,59),(614,'d','P2-INTEGRAL-ÁREA68','Encontre a área da região compreendida entre as curvas $y=x$, $y=2-x^2$ e $y=-x$.','QM','3','remember','no','2019-05-21',1,59),(615,'e','P2-INTEGRAL-VOLUME69','Encontre o volume do sólido gerado pela rotação, em torno do eixo $x$, da região compreendida entre as curvas $y^2=16x$ e $y=4x$.','QM','3','remember','no','2019-05-21',1,60),(616,'e','P2-INTEGRAL-VOLUME70','Encontre o volume do sólido gerado pela rotação, em torno do eixo $x$, da região compreendida entre as curvas $y=x^2+1$, $x=0$, $x=2$ e $y=\\frac{1}{2}$.','QM','3','remember','no','2019-05-21',1,60),(617,'e','P2-INTEGRAL-VOLUME71','Encontre o volume do sólido gerado pela rotação, em torno do eixo $y$, da região compreendida entre as curvas $y=x^3$ e $y=x^2$, com $0\\leq x\\leq 1$.','QM','3','remember','no','2019-05-21',1,60),(618,'e','P2-INTEGRAL-VOLUME72','Encontre o volume do sólido gerado pela rotação, em torno da reta $y=1$, da região compreendida entre as curvas $y=x^3$, $y=0$ e $x=1$.','QM','3','remember','no','2019-05-21',1,60),(619,'f','P2-INTEGRAL-SUBSTITUIÇÃO TRIGONOMÉTRICA73','Usando substituição trigonométrica, calcule $\\displaystyle \\int_0^1x^2\\sqrt{1-x^2}dx$.','QM','3','remember','no','2019-05-21',1,61),(620,'f','P2-INTEGRAL-SUBSTITUIÇÃO TRIGONOMÉTRICA74','Usando substituição trigonométrica, calcule $\\displaystyle \\int_0^2x^2\\sqrt{4-x^2}dx$.','QM','3','remember','no','2019-05-21',1,61),(621,'f','P2-INTEGRAL-SUBSTITUIÇÃO TRIGONOMÉTRICA75','Usando substituição trigonométrica, calcule $\\displaystyle \\int_0^3x^2\\sqrt{9-x^2}dx$.','QM','3','remember','no','2019-05-21',1,61),(622,'f','P2-INTEGRAL-SUBSTITUIÇÃO TRIGONOMÉTRICA76','Usando substituição trigonométrica, calcule $\\displaystyle \\int_0^4x^2\\sqrt{4^2-x^2}dx$.','QM','3','remember','no','2019-05-21',1,61),(623,'','natinf0','% bcm0504\r\nNa Figura 1 o eixo horizontal corresponde ao tempo em $\\mu s$. O sinal tem equa\\c c\\~ao $[[code:a0]]$ e \\\'e amostrado a cada $[[code:b0]]\\mu s$. Teremos um total de amostras igual a:\r\n\r\n\\begin{figure}[ht!]\r\n  \\centering\r\n  \\includegraphics[scale=0.5]{val_fig01} % ATENÇÃO com o nome da figura\r\n  \\centerline{Figura 1}\r\n\\end{figure}\r\n\r\n[[def:\r\na1 = random.randrange(3,6,1) \r\na2 = random.randrange(2,4,1) \r\na3 = random.randrange(1,3,1) \r\nb0 = random.randrange(2,4,1)\r\n\r\nfig = plt.gcf()\r\nvar(\'t\')\r\nplot(a1*sin(a2*t)-a3*cos(t),(t,0,4*pi)) \r\n\r\nfig.savefig(\'./tmp/val_fig01.png\')\r\n\r\nt = symbols(\'t\')\r\nf = a1*sin(a2*t)-a3*cos(t)\r\na0 = latex(f)\r\n\r\ndef algorithm(b):\r\n    b0=int(b[0])\r\n    r = 1+(4*pi/b0)//1\r\n    return r\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([b0])\r\n]]','QM','1','remember','yes','2019-05-21',NULL,62),(624,'','natinf1','% bcm0504\r\nNa Figura 3 o eixo horizontal corresponde ao tempo em $ms$. O sinal tem equa\\c c\\~ao $[[code:a0]]$ e \\\'e amostrado a cada $T=$$[[code:b0]]$$ms$. Pelo Teorema de Shannon-Nyquist, a taxa m\\\'inima de amostragem (aproximada) para reconstituir o sinal, e quanto a ela $T$ ser suficiente, s\\~ao\r\n\r\n\\begin{figure}[ht!]\r\n  \\centering\r\n  \\includegraphics[scale=0.5]{val_fig03} % ATENÇÃO com o nome da figura\r\n  \\centerline{Figura 3}\r\n\\end{figure}\r\n\r\n[[def:\r\na1 = random.randrange(3,6,1) \r\na2 = random.randrange(3,5,1) \r\na3 = random.randrange(1,3,1) \r\nb0 = random.randrange(2,4,1)\r\n\r\nfig = plt.gcf()\r\nvar(\'t\')\r\nplot(a1*sin(a2*t)-a3*cos(t),(t,0,6*pi)) \r\n\r\nfig.savefig(\'./tmp/val_fig03.png\')\r\n\r\nt = symbols(\'t\')\r\nf = a1*sin(a2*t)-a3*cos(t)\r\na0 = latex(f)\r\n\r\ndef algorithm(c):\r\n    a2=int(c[0])\r\n\r\n    r = float( ( (100*a2/pi)//1 )/100)\r\n    return r\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a2])\r\n]]','QM','1','remember','yes','2019-05-21',NULL,62),(625,'','natinf2','% bcm0504\nNa Figura 2 o eixo horizontal corresponde ao tempo em $ns$. O sinal tem equa\\c c\\~ao $[[code:a0]]$ e \\\'e amostrado a cada $1ns$. Dentre os valores para a quantiza\\c c\\~ao teremos\n\n\\begin{figure}[ht!]\n  \\centering\n  \\includegraphics[scale=0.5]{val_fig02} % ATENÇÃO com o nome da figura\n  \\centerline{Figura 2}\n\\end{figure}\n\n[[def:\nfig = plt.gcf()\nvar(\'t\')\nplot(-2*sin(3*t)+4*cos(t),(t,0,4*pi)) \n\nfig.savefig(\'./tmp/val_fig02.png\')\n\nt = symbols(\'t\')\nf = -2*sin(3*t)+4*cos(t)\na0 = latex(f)\n]]','QM','1','remember','no','2019-05-21',NULL,62),(626,'','natinf3','% myquest\nThe integrand of $[[code:a0]]$ has its graph depicted in Figure $Integrand$. The integral function is\n\n\\begin{figure}[ht!]\n  \\centering\n  \\includegraphics[scale=0.5]{val_fig01} % ATENÇÃO com o nome da figura\n  \\centerline{Figure $Integrand$}\n\\end{figure}\n\n[[def:\na1 = random.randrange(3,6,1) \na2 = random.randrange(2,4,1) \na3 = random.randrange(1,3,1) \n\nfig = plt.gcf()\nvar(\'x\')\nplot(log(x)+a1*x**2*sin(a2*x)-a3*cos(x),(x,1,4*pi)) \n\nfig.savefig(\'./tmp/val_fig01.png\')\n\nx = symbols(\'x\')\nf = log(x)+a1*x**2*sin(a2*x)-a3*cos(x)\na0 = latex(Integral(f, x))\n\nb1 = latex(integrate(f, x))    \nb2 = latex(integrate(f+x, x))\nb3 = latex(integrate(f-x, x))\nb4 = latex(integrate(x**5 + x + 1, x))\n]]','QM','1','remember','no','2019-05-21',NULL,62),(627,'','natinf4','% natinf0\nO n\\\'umero 110,875 est\\\'a na base decimal. Ao convert\\^e-lo para bin\\\'ario, octal e hexadecimal obteremos, respectivamente:','QM','1','remember','no','2019-05-21',NULL,62),(628,'','natinf5','% natinf1\nO n\\\'umero BA,C est\\\'a na base hexadecimal. Ao convert\\^e-lo para bin\\\'ario, octal e decimal obteremos, respectivamente:','QM','1','remember','no','2019-05-21',NULL,62),(629,'','natinf6','% natinf2\nOs n\\\'umeros 11222,01 e 62,15 est\\~ao nas bases tr\\^es e nove, respectivamente. Ao convert\\^e-los para as bases trocadas (nove e tr\\^es) obteremos, respectivamente:','QM','1','remember','no','2019-05-21',NULL,62),(630,'','natinf7','% natinf3\nNa base bin\\\'aria, as opera\\c c\\~oes $110,1*110,01$; $11,10001+101,0101$ e  $1000001,01001-110101,10011$ resultam respectivamente em:','QM','1','remember','no','2019-05-21',NULL,62),(631,'','natinf8','% natinf4\nConsiderando as fun\\c c\\~oes Booleanas $f=A+(B\\cdot C)\\,$ e $\\,g=A\\cdot(B+C)$, podemos dizer que:','QM','1','remember','no','2019-05-21',NULL,62),(632,'','natinf9','% natinf5\nPara implementarmos o circuito $\\big(A\\cdot(A\'+B)\\big)+(A\\cdot C\')$ com o {\\it m\\\'inimo} de portas (c/ 2 entradas cada), bastam:','QM','1','remember','no','2019-05-21',NULL,62),(633,'','natinf10','% natinf6\nOs n\\\'umeros negativos 110101011100 e 101110110011 est\\~ao nas formas complemento de 1 e complemento de 2, respectivamente. Na base 10 eles valem, respectivamente:','QM','1','remember','no','2019-05-21',NULL,62),(634,'','natinf11','% natinf7\nNum treinamento de sobreviv\\^encia na selva, cada participante leva um aparelho com LEDs que podem assumir qualquer uma das tr\\^es cores aditivas fundamentais (vermelho, verde e azul). Eles usam um c\\\'odigo para descrever ambientes (rio, vale, gruta, po\\c co, subida, descida, etc.), num total de 200 casos poss\\\'iveis. O aparelho tem o n\\\'umero {\\it m\\\'inimo} $n$ de LEDs que codificam {\\it todos} estes casos, e portanto $n$ \\\'e igual a:','QM','1','remember','no','2019-05-21',NULL,62),(635,'','natinf12','% natinf8\nAs sa\\\'idas dos circuitos $(A\\oplus B)\'\\cdot(A\'\\oplus B\')$ e $\\big((A\\oplus B)\\oplus C\\big)+\\big(A\'\\oplus(B\\oplus C)\\big)$ s\\~ao, respectivamente:','QM','1','remember','no','2019-05-21',NULL,62),(636,'','natinf13','% natinf9\nUma fonte envia mensagens de 100 s\\\'imbolos por acesso, que s\\~ao $\\Delta$, $\\nabla$ e $\\bigcirc$. A respectiva probabilidade de cada s\\\'imbolo \\\'e $1/12$, $1/6$ e $3/4$. Sabendo-se que $\\log_23=1,585$, pela entropia de Shannon poder\\\'iamos reduzir o tamanho de s\\\'imbolos por acesso para:','QM','1','remember','no','2019-05-21',NULL,62),(637,'','natinf14','% natinf10\nUm dado viciado de 5 faces possui probabilidade 1/8 de sair a face A e 1/8 de sair a face B. As outras tr\\^es faces C, D e E possuem 1/4 de probabilidade de sair cada uma. A informa\\c c\\~ao total de 5 jogadas com este dado, e a entropia de sua fonte de informa\\c c\\~ao, valem respectivamente','QM','1','remember','no','2019-05-21',NULL,62),(638,'','natinf15','% natinf11\nUm dado viciado de 4 faces tem as seguintes probabilidades para cada uma delas: 1: 3/5, 2: 6/25, 3: 3/25, 4: 1/25. Sabendo-se que $\\log_23=1,585$ e $\\log_25=2,322$, a quantidade de informação de cada face 1 a 4 \\\'e, respectivamente','QM','1','remember','no','2019-05-21',NULL,62),(639,'','NI16','% NI0\nNa base bin\\\'aria, as opera\\c c\\~oes $1000001,01001-110101,10011$; $11,10001+101,0101$ e $110,1*110,01$ resultam respectivamente em:','QM','1','remember','no','2019-05-21',NULL,63),(640,'','NI17','% NI1\nPara implementarmos o circuito $(A\\cdot B\')+\\big(B\\cdot(B\'\\cdot A)\\big)$ com o {\\it m\\\'inimo} de portas (c/ 2 entradas cada), bastam:','QM','1','remember','no','2019-05-21',NULL,63),(641,'','NI18','% NI2\nUma fonte envia mensagens de 100 s\\\'imbolos por acesso, que s\\~ao $\\triangle$, $\\nabla$, $\\bigcirc$, $\\Phi$ e $\\Xi$ com probabilidades 8/25, 1/5, 1/5, 4/25 e 3/25, respectivamente. Pela entropia de Shannon poder\\\'iamos reduzir o tamanho para:','QM','1','remember','no','2019-05-21',NULL,63),(642,'','NI19','% NI3\nUma fonte utiliza os s\\\'imbolos $\\triangle$, $\\nabla$, $\\bigcirc$, $\\Phi$ e $\\Xi$ com probabilidades 8/25, 1/5, 1/5, 4/25 e 3/25, respectivamente. Nesta mesma ordem, os c\\\'odigos de Shannon-Fano s\\~ao:','QM','1','remember','no','2019-05-21',NULL,63),(643,'','NI20','% NI4\nUma fonte utiliza os s\\\'imbolos $\\triangle$, $\\nabla$, $\\bigcirc$, $\\Phi$ e $\\Xi$ com probabilidades 8/25, 1/5, 1/5, 4/25 e 3/25, respectivamente. Seu c\\\'odigo de Huffman tem comprimento m\\\'edio:','QM','1','remember','no','2019-05-21',NULL,63),(644,'','NI21','% NI5\nAo transmitirmos a palavra \'tuttifruti\' pelo algoritmo LZW, o dicion\\\'ario que obtemos \\\'e:','QM','1','remember','no','2019-05-21',NULL,63),(645,'','NI22','% NI6\nSeja o c\\\'odigo constut\\\'ido pelas palavras 0000111, 0101100, 1010011 e 1111000. Sua dist\\^ancia de Hamming, o n\\\'umero m\\\'aximo de erros simples que ele detecta, e o n\\\'umero m\\\'aximo de erros simples que ele corrige s\\~ao, respectivemante:','QM','1','remember','no','2019-05-21',NULL,63),(646,'','NI23','% NI7\nUsando c\\\'odigo retangular, a transmiss\\~ao dos dados $D_0D_1D_2D_3D_4D_5D_6D_7D_8$ entre uma fonte e um receptor resultou em 010110011. Sabendo-se que $PL_0PL_1PL_2=PC_0PC_1PC_2=010$ e $P=0$, e que houve um erro simples, ent\\~ao a fonte quis transmitir:','QM','1','remember','no','2019-05-21',NULL,63),(647,'','NI24','% NI8\nPara transmitirmos 1001 usando o c\\\'odigo de Hamming precisamos enviar:','QM','1','remember','no','2019-05-21',NULL,63),(648,'','NI25','% NI9\nVoc\\^e recebeu 0011101, em que foi utilizado o c\\\'odigo de Hamming. Sabendo-se que h\\\'a no m\\\'aximo um erro, ent\\~ao o c\\\'odigo correto \\\'e:','QM','1','remember','no','2019-05-21',NULL,63),(649,'a','Sistemas de Energia0','% Sistemas de Energia0\nComo se obtém a potência?','QM','1','remember','no','2019-05-21',NULL,64),(650,'a','Sistemas de Energia1','% Sistemas de Energia1\nComo se obtém a energia cinética de rotação?','QM','1','remember','no','2019-05-21',NULL,64),(651,'a','Sistemas de Energia2','% Sistemas de Energia2\nQual afirmação é a mais correta sobre potência de rotação?','QM','1','remember','no','2019-05-21',NULL,64),(652,'b','Sistemas de Energia3','% Sistemas de Energia3\nSobre a potência de uma turbina a vapor o que podemos afirmar?','QM','1','remember','no','2019-05-21',NULL,64),(653,'b','Sistemas de Energia4','% Sistemas de Energia4\nSobre a potência da turbina hidráulica o que podemos afirmar?','QM','1','remember','no','2019-05-21',NULL,64),(654,'b','Sistemas de Energia5','% Sistemas de Energia5\nSobre a potência eólica o que podemos afirmar?','QM','1','remember','no','2019-05-21',NULL,64),(655,'c','Sistemas de Energia6','% Sistemas de Energia6\nEscolha a alternativa correta.','QM','1','remember','no','2019-05-21',NULL,64),(656,'d','Sistemas de Energia7','% Sistemas de Energia8\nEscolha a alternativa errada.','QM','1','remember','no','2019-05-21',NULL,64),(657,'g','Sistemas de Energia8','% Sistemas de Energia14\nA vazão mássica de um rio brasileiro é 5e6 kg/s. Constrói-se uma hidrelétrica com uma barragem de 35 m. Calcule a potência gerada pela hidrelétrica se a eficiência das turbinas é 0,85. Considere g = 9,8 m/s2.','QM','1','remember','no','2019-05-21',NULL,64),(658,'g','Sistemas de Energia9','% Sistemas de Energia15\nA vazão mássica de um rio brasileiro é 5e6 kg/s. Constrói-se uma hidrelétrica com uma barragem de 45 m. Calcule a potência gerada pela hidrelétrica se a eficiência das turbinas é 0,85. Considere g = 9,8 m/s2.','QM','1','remember','no','2019-05-21',NULL,64),(659,'g','Sistemas de Energia10','% Sistemas de Energia16\nA vazão mássica de um rio brasileiro é 5e6 kg/s. Constrói-se uma hidrelétrica com uma barragem de 70 m. Calcule a potência gerada pela hidrelétrica se a eficiência das turbinas é 0,85. Considere g = 9,8 m/s2.','QM','1','remember','no','2019-05-21',NULL,64),(660,'h','Sistemas de Energia11','% Sistemas de Energia17\nUm projeto de parque eólico no Rio Grande do Norte prevê gerar  150 MW. A velocidade média dos ventos na região 6,5 m/s. Os aerogeradores tem pás com 50 m de raio e o coeficiente de arraste da turbina é 0,6 (J s2)/(m2 kg). Determine a potência do aerogerador e a quantidade de aerogeradores que devem ser instalados no parque. Dados: densidade do ar 1,225 kg/m3. Considere que a área exposta ao fluxo de ar (vento) é igual a área varrida pelas pás da turbina eólica.','QM','1','remember','no','2019-05-21',NULL,64),(661,'h','Sistemas de Energia12','% Sistemas de Energia18\nUm projeto de parque eólico no Rio Grande do Norte prevê gerar  150 MW. A velocidade média dos ventos na região 7,5 m/s. Os aerogeradores tem pás com 50 m de raio e o coeficiente de arraste da turbina é 0,6 (J s2)/(m2 kg). Determine a potência do aerogerador e a quantidade de aerogeradores que devem ser instalados no parque. Dados: densidade do ar 1,225 kg/m3. Considere que a área exposta ao fluxo de ar (vento) é igual a área varrida pelas pás da turbina eólica.','QM','1','remember','no','2019-05-21',NULL,64),(662,'h','Sistemas de Energia13','% Sistemas de Energia19\nUm projeto de parque eólico no Rio Grande do Norte prevê gerar  150 MW. A velocidade média dos ventos na região 8,5 m/s. Os aerogeradores tem pás com 50 m de raio e o coeficiente de arraste da turbina é 0,6 (J s2)/(m2 kg). Determine a potência do aerogerador e a quantidade de aerogeradores que devem ser instalados no parque. Dados: densidade do ar 1,225 kg/m3. Considere que a área exposta ao fluxo de ar (vento) é igual a área varrida pelas pás da turbina eólica.','QM','1','remember','no','2019-05-21',NULL,64),(663,'i','Sistemas de Energia14','% Sistemas de Energia20\nUma bateria tem carga de 9e5 C e fornece 8 A a uma tensão de 120 V. Qual é a potência da bateria e quanto tempo ela dura.','QM','1','remember','no','2019-05-21',NULL,64),(664,'i','Sistemas de Energia15','% Sistemas de Energia21\nUma bateria tem carga de 9e5 C e fornece 6 A a uma tensão de 120 V. Qual é a potência da bateria e quanto tempo ela dura.','QM','1','remember','no','2019-05-21',NULL,64),(665,'i','Sistemas de Energia16','% Sistemas de Energia22\nUma bateria tem carga de 9e5 C e fornece 10 A a uma tensão de 120 V. Qual é a potência da bateria e quanto tempo ela dura.','QM','1','remember','no','2019-05-21',NULL,64),(666,'j','Sistemas de Energia17','% Sistemas de Energia23\nO fluxo de energia da radiação solar  na superfície de uma região é 500 W/m2. Considere um painel solar em uma residência com 2 m2 de área dividido em 10 módulos em série e cada  módulo com tensão de 1,2 V. Qual é a corrente gerada por este painel.','QM','1','remember','no','2019-05-21',NULL,64),(667,'j','Sistemas de Energia18','% Sistemas de Energia24\nO fluxo de energia da radiação solar  na superfície de uma região é 500 W/m2. Considere um painel solar em uma residência com 2 m2 de área dividido em 12 módulos em série e cada  módulo com tensão de 1,2 V. Qual é a corrente gerada por este painel.','QM','1','remember','no','2019-05-21',NULL,64),(668,'j','Sistemas de Energia19','% Sistemas de Energia25\nO fluxo de energia da radiação solar  na superfície de uma região é 500 W/m2. Considere um painel solar em uma residência com 2 m2 de área dividido em 14 módulos em série e cada  módulo com tensão de 1,2 V. Qual é a corrente gerada por este painel.','QM','1','remember','no','2019-05-21',NULL,64),(669,'c','Sistemas de Energia20','% Sistemas de Energia7\nEscolha a alternativa correta abaixo.','QM','1','remember','no','2019-05-21',NULL,64),(670,'d','Sistemas de Energia21','% Sistemas de Energia8\nEscolha a alternativa errada .','QM','1','remember','no','2019-05-21',NULL,64),(671,'d','Sistemas de Energia22','% Sistemas de Energia9\nEscolha a alternativa errada.','QM','1','remember','no','2019-05-21',NULL,64),(672,'e','Sistemas de Energia23','% Sistemas de Energia10\nEscolha a alternativa errada.','QM','1','remember','no','2019-05-21',NULL,64),(673,'e','Sistemas de Energia24','% Sistemas de Energia11\nEscolha a alternativa errada.','QM','1','remember','no','2019-05-21',NULL,64),(674,'f','Sistemas de Energia25','% Sistemas de Energia12\nEscolha a alternativa errada.','QM','1','remember','no','2019-05-21',NULL,64),(675,'f','Sistemas de Energia26','% Sistemas de Energia13\nEscolha a alternativa errada.','QM','1','remember','no','2019-05-21',NULL,64),(676,'','Sistemas de Energia27','% teste q paramétrica\r\nA vazão mássica de um rio brasileiro é 5e6 kg/s. Constrói-se uma hidrelétrica com uma barragem de [[code:a0]] m. Calcule a potência gerada pela hidrelétrica se a eficiência das turbinas é [[code:a1]]. Considere g =[[code:a2]] m/s2.\r\n\r\n\r\n[[def:\r\na0=random.randrange(20, 80, 1)  # sortear um número entre 60 e 80\r\na1=random.randrange(10, 80, 1) \r\na2=random.choice([7, 13, 19])   # sortear um número dentre estes três\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= a0+ a1 + a2\r\n]]','QM','1','remember','yes','2019-05-21',NULL,64),(677,'a','Vetores0','% questão1\r\nNa Figura 1 o eixo horizontal corresponde ao tempo em $\\mu s$. O sinal tem equa\\c c\\~ao $[[code:a0]]$ e \\\'e amostrado a cada $[[code:b0]]\\mu s$. Teremos um total de amostras igual a:\r\n\r\n\\begin{figure}[ht!]\r\n  \\centering\r\n  \\includegraphics[scale=0.5]{val_fig01} % ATENÇÃO com o nome da figura\r\n  \\centerline{Figura 1}\r\n\\end{figure}\r\n\r\n[[def:\r\na1 = random.randrange(3,6,1) \r\na2 = random.randrange(2,4,1) \r\na3 = random.randrange(1,3,1) \r\nb0 = random.randrange(2,4,1)\r\n\r\nfig = plt.gcf()\r\nvar(\'t\')\r\nplot(a1*sin(a2*t)-a3*cos(t),(t,0,4*pi)) \r\n\r\nfig.savefig(\'./tmp/val_fig01.png\')\r\n\r\nt = symbols(\'t\')\r\nf = a1*sin(a2*t)-a3*cos(t)\r\na0 = latex(f)\r\n\r\ndef algorithm(b):\r\n    b0=int(b[0])\r\n    r = 1+(4*pi/b0)//1\r\n    return r\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([b0])\r\n]]','QM','1','remember','yes','2019-05-21',NULL,65),(678,'b','Vetores1','% Vetores0\n% 01\nA ideia de calculadora mecânica programável foi criada por quem? O que este personagem inventou?','QM','1','remember','no','2019-05-21',NULL,65),(679,'c','Vetores2','% Vetores1\n% 01\nA ideia de Processamento de Dados foi criada por quem? O que este personagem inventou?','QM','1','remember','no','2019-05-21',NULL,65),(680,'d','Vetores3','% Vetores2\n% 01\nA ideia de utilizar cartão perfurado para comandar máquinas e inserir dados foi criada por quem? O que este personagem inventou?','QM','1','remember','no','2019-05-21',NULL,65),(681,'A','PMBOK0','% PMBOK0\nO guia PMBOK define que um projeto é um esforço temporário empreendido para criar algo exclusivo. Ainda de acordo com o guia:','QM','1','remember','no','2019-05-21',NULL,66),(682,'B','PMBOK1','% PMBOK1\nAssinale a opção correta a respeito dos conceitos de gerenciamento de projetos, segundo o PMBOK:','QM','1','remember','no','2019-05-21',NULL,66),(683,'C','PMBOK2','% PMBOK2\nA metodologia para melhoria de processo, que teve seu reconhecimento por meio da divulgação das normas ISO (International Organization for Standardization), denomina-se:','QM','1','remember','no','2019-05-21',NULL,66),(684,'D','PMBOK3','% PMBOK3\nO processo de escrever testes antes da implementação de um projeto de software é conhecido como Test-Driven Development (TDD). A respeito do processo de desenvolvimento dirigido por testes, assinale a afirmativa correta.','QM','1','remember','no','2019-05-21',NULL,66),(685,'E','PMBOK4','% PMBOK4\nDurante a realização de um checklist de inspeção de software, a equipe de teste de qualidade de software, de um órgão público, deparou com uma classe de defeito de interface. Qual das afirmativas, a seguir, corresponde a verificação que deverá ser feita, para checar a existência desta classe de defeito?','QM','1','remember','no','2019-05-21',NULL,66),(686,'F','PMBOK5','% PMBOK5\nCom relação ao Scrum considere:\n I. Refere-se às equipes de desenvolvimento.\n II. Refere-se às sprints.\n Assinale a alternativa em que as duas afirmativas sobre I e II são verdadeiras:','QM','1','remember','no','2019-05-21',NULL,66),(687,'G','PMBOK6','% PMBOK6\nCom relação à análise da matriz FOFA (forças, oportunidades, fraquezas e ameaças), assinale a opção correta:','QM','1','remember','no','2019-05-21',NULL,66),(688,'H','PMBOK7','% PMBOK7\nO teorema CAP (CAP Theorem) é um importante resultado teórico na Ciência da Computação, e frequentemente é referenciado na comparação entre sistemas de bancos de dados \"tradicionais\" e aqueles que são conhecidos pela sigla NoSQL. Esse teorema aborda as propriedades (ou garantias) que um sistema de banco de dados deve prover, e é central na discussão das conveniências de utilização de um ou outro modelo. Assinale a opção que descreve, corretamente, o significado das letras na sigla CAP.','QM','1','remember','no','2019-05-21',NULL,66),(689,'I','PMBOK8','% PMBOK8\nCom o objetivo de planejar e gerenciar melhor os riscos de um projeto de software, um gerente responsável decidiu conduzir com sua equipe um trabalho sistemático para identificar os pontos fortes, fracos, as oportunidades e ameaças ao seu projeto e, com isso, aumentar a probabilidade e o impacto dos eventos positivos e reduzir a probabilidade e o impacto dos eventos negativos. Assinale a opção que indica a técnica adotada para a determinação dos riscos que podem afetar seu projeto.','QM','1','remember','no','2019-05-21',NULL,66),(690,'J','PMBOK9','% PMBOK9\nSobre gerenciamento de riscos de software, assinale a alternativa correta.','QM','1','remember','no','2019-05-21',NULL,66),(691,'K','PMBOK10','% PMBOK10\nAssinale a alternativa que corresponde às três estratégias de depuração de software.','QM','1','remember','no','2019-05-21',NULL,66),(692,'L','PMBOK11','% PMBOK11\nO teste é parte fundamental no ciclo de vida de um software. Seus princípios devem servir como um guia geral, tanto para testadores quanto para desenvolvedores. Afinal, ambos participam efetivamente do processo de amadurecimento do sistema. Assinale a opção que apresenta corretamente três dos sete princípios fundamentais do teste de software.','QM','1','remember','no','2019-05-21',NULL,66),(693,'M','PMBOK12','% PMBOK12\nEm relação ao teste de software, assinale a alternativa correta sobre o teste de integração.','QM','1','remember','no','2019-05-21',NULL,66),(694,'N','PMBOK13','% PMBOK13\nAcerca dos processos para o desenvolvimento de produtos de software de alta qualidade, como a validação e a verificação, assinale a opção correta:','QM','1','remember','no','2019-05-21',NULL,66),(695,'','internet0','% TCP/IP\nO que você entende por TCP/IP:','QM','1','remember','no','2019-05-21',NULL,67),(696,'','internet1','% internet1\nPodemos definir Protocolo de Rede como:','QM','1','remember','no','2019-05-21',NULL,67),(697,'','internet2','% internet2\nSe desejamos saber as configurações da rede local, podemos utilizar o comando:','QM','1','remember','no','2019-05-21',NULL,67),(698,'','internet3','% internet3\nAo se executar comandos de verificação das configurações de uma interface de rede, qual das alternativas melhor descreve um dos protocolos usados:','QM','1','remember','no','2019-05-21',NULL,67),(699,'','internet4','% internet4\nRelacione as camadas com o tipo de dado, respectivamente: UDP,  IPv6, MSN, LLC, e NIC, DNS, LPP\n \n %\\includegraphics[width=4cm,height=2cm]{../../../questions/ITW/camadas}\\vspace{-1mm}\n \n \\begin{table}[h]\n \\begin{tabular}{|l|l|}\n \\hline\n 7 & Aplicação    \\\\ \\hline\n 6 & Apresentação \\\\ \\hline\n 5 & Sessão       \\\\ \\hline\n 4 & Transporte   \\\\ \\hline\n 3 & Rede         \\\\ \\hline\n 2 & Enlace       \\\\ \\hline\n 1 & Física       \\\\ \\hline\n \\end{tabular}\n \\end{table}','QM','1','remember','no','2019-05-21',NULL,67),(700,'','internet5','% internet5\nO comando traceroute retorna:','QM','1','remember','no','2019-05-21',NULL,67),(701,'','internet6','% internet6\nQuantos endereços de IP utilizáveis uma sub-rede cuja máscara é 255.255.255.0 pode conter?','QM','1','remember','no','2019-05-21',NULL,67),(702,'','internet7','% internet7\nSão protocolos destinados à transmissão de email (envio de mensagens de correio eletrônico):','QM','1','remember','no','2019-05-21',NULL,67),(703,'','internet8','% internet8\nUm roteador trabalha com as seguintes informações:','QM','1','remember','no','2019-05-21',NULL,67),(704,'','internet9','% internet9\nQuantos bits compõem um endereço IPv4 e IPv6, respectivamente?','QM','1','remember','no','2019-05-21',NULL,67),(705,'','internet10','% internet10\nSe classificarmos geograficamente as seguintes redes de computadores, na ordem de menor para a maior, obtemos:','QM','1','remember','no','2019-05-21',NULL,67),(706,'','internet11','% internet11\nSobre protocolos de roteamento:','QM','1','remember','no','2019-05-21',NULL,67),(707,'','internet12','% internet12\nO protocolo ARP transcreve e opera:','QM','1','remember','no','2019-05-21',NULL,67),(708,'','internet13','% internet13\nAs tecnologias de transmissão WiFi, WIMAX e Ethernet, são respectivamente normatizadas pelo IEEE sob o grupo 802 subgrupos:','QM','1','remember','no','2019-05-21',NULL,67),(709,'','internet14','% internet14\nO protocolo TCP é responsável por:','QM','1','remember','no','2019-05-21',NULL,67),(710,'','internet15','% internet15\nClassifique o diagrama ao lado em relação a tipo de rede e abrangência \n %\\includegraphics[width=4cm,height=3cm]{../../../questions/ITW/Imagem1}\\vspace{-1mm}\n \n \n % SUGESTÃO: coloque as figuras *.png em uma pasta do dropbox, compartilhe o link da figura e cole abaixo\n \\begin{figure}[h]\n 	\\centering\n   \\write18{wget -c https://www.dropbox.com/s/zn772g4qf33hto7/Imagem1.png -O ./tmp/fz_itw_Imagem1.png}\n   \\fbox{\\includegraphics[scale=0.95]{fz_itw_Imagem1}}\n   \\label{fig_ex1}\n   %\\caption{Exemplo de figura.}\n \\end{figure}','QM','1','remember','no','2019-05-21',NULL,67),(711,'','internet16','% internet16\nSobre o modelo de camadas OSI, é correto afirmar que:','QM','1','remember','no','2019-05-21',NULL,67),(712,'','internet17','% internet17\nSão verdadeiras:\\\\ E.I. RIP é um protocolo de roteamento de vetor de distancia\\\\\n E.II. Rotas dinâmicas são usadas em redes grandes e com alto nível de alteração\\\\\n E.III. Rotas estáticas são usadas em redes com alto nível de modificação\\\\\n E.IV. O OSPF é um protocolo de estado de link','QM','1','remember','no','2019-05-21',NULL,67),(713,'','internet18','% internet18\nCada página WWW possui um endereço único, denominado:','QM','1','remember','no','2019-05-21',NULL,67),(714,'','internet19','% internet19\nUm dos objetivos do firewall é:','QM','1','remember','no','2019-05-21',NULL,67),(715,'','internet20','% internet20\nUm programa do tipo sniffer tem a função de:','QM','1','remember','no','2019-05-21',NULL,67),(716,'','internet21','% internet21\nSobre roteamento, é correto afirmar que:','QM','1','remember','no','2019-05-21',NULL,67),(717,'','internet22','% internet22\nO seguinte código HTML, retirado de uma página qualquer, adiciona a uma página:\\\\ \\verb|<a href=\"http://www.ufabc.edu.br/\" target=\"_blank\" title=\"http://www.usp.br\">|\\\\\n \\verb|http://www.ita.br</a>|','QM','1','remember','no','2019-05-21',NULL,67),(718,'a','projeto0','% projeto0\n%01\n Sobre o sistema apresentado pelo diagrama UML, qual das alternativas é verdadeira?\n  \n % SUGESTÃO: coloque as figuras *.png em uma pasta do dropbox, compartilhe o link da figura e cole abaixo\n \\begin{figure}[h]\n 	\\centering\n   \\write18{wget -c https://www.dropbox.com/s/zsmi2b45tjo7sum/DiagramaQ1eQ2.png -O ./tmp/monael_DiagramaQ1eQ2.png}\n   \\fbox{\\includegraphics[scale=0.45]{monael_DiagramaQ1eQ2}}\n   \\label{fig_ex1}\n   %\\caption{Exemplo de figura.}\n \\end{figure}\\vspace{-5mm}','QM','1','remember','no','2019-05-21',NULL,68),(719,'a','projeto1','% projeto1\n%01\n Sobre as classes representadas no diagrama UML, podemos dizer que:\n \n %\\includegraphics[scale=.5]{../../../../questions/12_ProjSis/DiagramaQ1eQ2}\n \\begin{figure}[h]\n 	\\centering\n   \\write18{wget -c https://www.dropbox.com/s/zsmi2b45tjo7sum/DiagramaQ1eQ2.png -O ./tmp/monael_DiagramaQ1eQ2.png}\n   \\fbox{\\includegraphics[scale=0.45]{monael_DiagramaQ1eQ2}}\n   \\label{fig_ex1}\n   %\\caption{Exemplo de figura.}\n \\end{figure}\\vspace{-5mm}','QM','1','remember','no','2019-05-21',NULL,68),(720,'b','projeto2','% projeto2\n%02\n Qual dos itens abaixo representa um requisito funcional para um sistema de comércio eletrônico?','QM','1','remember','no','2019-05-21',NULL,68),(721,'c','projeto3','% projeto3\n%03\n Qual das seguintes afirmativas sobre processos de software é verdadeira?','QM','1','remember','no','2019-05-21',NULL,68),(722,'d','projeto4','% projeto4\n%04\n Você deseja implementar um sistema computacional de uma loja de eletrônicos, organizado em torno de um banco de dados central, que é acessado pelos diversos módulos do sistema, como o de vendas. Neste caso, qual organização de sistema é mais adequada:','QM','1','remember','no','2019-05-21',NULL,68),(723,'e','projeto5','% projeto5\n%05\n Uma das maneiras de realizar o projeto de um sistema é utilizar o paradigma de orientação a objetos. Qual das afirmações abaixo é falsa?','QM','1','remember','no','2019-05-21',NULL,68),(724,'f','projeto6','% projeto6\n%06\n Qual das afirmativas sobre padrões de software é verdadeira?','QM','1','remember','no','2019-05-21',NULL,68),(725,'g','projeto7','% projeto7\n%07\n Sistemas Distribuídos podem ser organizados utilizando diferentes arquiteturas. Qual das afirmações abaixo é falsa sobre o projeto arquitetural de sistemas distribuídos?','QM','1','remember','no','2019-05-21',NULL,68),(726,'h','projeto8','% projeto8\n%08\n No modelo V de testes, existem diversas etapas de testes às quais o programa é submetido. Quais das alternativas abaixo descreve adequadamente cada fase de teste? I. Testes de Release (ou de Sistema), que incluem testes realizados sobre métodos individuais, utilizando a abordagem caixa-branca; II. Testes de Unidade (ou Unitários), onde todas as classes são integradas em um único conjunto para verificar o funcionamento do sistema como um todo; III. Testes de Integração, onde são realizados testes para verificar se ao juntar 2 ou mais classes (ou métodos), estes funcionam adequadamente. Os testes são realizados utilizando a abordagem caixa-branca;','QM','1','remember','no','2019-05-21',NULL,68),(727,'i','projeto9','% projeto9\n%09\n Qual das alternativas abaixo não representa um dos valores ou práticas da programação extrema (XP):','QM','1','remember','no','2019-05-21',NULL,68),(728,'j','projeto10','% projeto10\n%10\n Escolha a opção que completa a Figura com o nome de cada uma de suas fases.\n \n %\\includegraphics[scale=.3]{../../../../questions/12_ProjSis/FiguraQ11}\n % SUGESTÃO: coloque as figuras *.png em uma pasta do dropbox, compartilhe o link da figura e cole abaixo\n \\begin{figure}[h]\n 	\\centering\n   \\write18{wget -c https://www.dropbox.com/s/ekzg54p8mfar8hq/FiguraQ11.png -O ./tmp/monael_FiguraQ11.png}\n   \\fbox{\\includegraphics[scale=0.3]{monael_FiguraQ11}}\n   \\label{fig_ex1}\n   %\\caption{Exemplo de figura.}\n \\end{figure}\\vspace{-5mm}','QM','1','remember','no','2019-05-21',NULL,68),(729,'j','projeto11','% projeto11\n%10\n Quanto a organização de Sistemas, classifique o sistema descritos a seguir: A seguir há uma figura que mostra a arquitetura da plataforma Android. No Android toda requisição de uma aplicação deve obrigatoriamente ser realizada para o quadro de aplicações que por sua vez esmiúça a requisição em outras requisições para o estágio de bibliotecas, este estágio por sua vez é que tem acesso ao núcleo do Linux que acessa diretamente as funções em hardware. Aponte qual a organização do Sistema Operacional Android.\n \n %\\includegraphics[scale=.6]{../../../../questions/12_ProjSis/FiguraQ18}\n % SUGESTÃO: coloque as figuras *.png em uma pasta do dropbox, compartilhe o link da figura e cole abaixo\n \\begin{figure}[h]\n 	\\centering\n   \\write18{wget -c https://www.dropbox.com/s/qh1wmb68wsw1ec9/FiguraQ18.png -O ./tmp/monael_FiguraQ18.png}\n   \\fbox{\\includegraphics[scale=0.6]{monael_FiguraQ18}}\n   \\label{fig_ex1}\n   %\\caption{Exemplo de figura.}\n \\end{figure}\\vspace{-5mm}','QM','1','remember','no','2019-05-21',NULL,68),(730,'k','projeto12','% projeto12\n%11\n Dentre os modelos de processos de software qual o que melhor se descreve como: Trata-se de um modelo onde o projeto é realizado em incrementos, de forma que a versão final é construída aos poucos. Neste modelo as primeiras iterações são basicamente a preparação de protótipos do sistema.','QM','1','remember','no','2019-05-21',NULL,68),(731,'l','projeto13','% projeto13\n%12\n Quais são as 4 principais fases associadas a fase de Análise de Requisitos e Especificação?','QM','1','remember','no','2019-05-21',NULL,68),(732,'m','projeto14','% projeto14\n%13\n A descrição a seguir se adequa a que fase do processo de software? Uma vez entregue um software, este dificilmente permanecerá intocável por muito tempo. Novas tecnologias aparecem, o cliente frequentemente solicita novos serviços que não havia pensado no pedido inicial, e assim por diante. Em muitos casos, o custo dessa fase pode chegar a ser maior que o desenvolvimento, dado que para cada nova funcionalidade adicionada no sistema, é preciso garantir que as demais continuem funcionando corretamente.','QM','1','remember','no','2019-05-21',NULL,68),(733,'n','projeto15','% projeto15\n%14\n Essa figura descreve:\n \n %\\includegraphics[scale=.5]{../../../../questions/12_ProjSis/FiguraQ15eQ16}\n % SUGESTÃO: coloque as figuras *.png em uma pasta do dropbox, compartilhe o link da figura e cole abaixo\n \\begin{figure}[h]\n 	\\centering\n   \\write18{wget -c https://www.dropbox.com/s/x20i5oo7hfsz5ml/FiguraQ15eQ16.png -O ./tmp/monael_FiguraQ15eQ16.png}\n   \\fbox{\\includegraphics[scale=0.5]{monael_FiguraQ15eQ16}}\n   \\label{fig_ex1}\n   %\\caption{Exemplo de figura.}\n \\end{figure}\\vspace{-5mm}','QM','1','remember','no','2019-05-21',NULL,68),(734,'n','projeto16','% projeto16\n%14\n Na figura selecione qual opção abaixo completa as 4 fases denotadas por I, II, III e IV.\n \n %\\includegraphics[scale=.5]{../../../../questions/12_ProjSis/FiguraQ15eQ16}\n % SUGESTÃO: coloque as figuras *.png em uma pasta do dropbox, compartilhe o link da figura e cole abaixo\n \\begin{figure}[h]\n 	\\centering\n   \\write18{wget -c https://www.dropbox.com/s/x20i5oo7hfsz5ml/FiguraQ15eQ16.png -O ./tmp/monael_FiguraQ15eQ16.png}\n   \\fbox{\\includegraphics[scale=0.5]{monael_FiguraQ15eQ16}}\n   \\label{fig_ex1}\n   %\\caption{Exemplo de figura.}\n \\end{figure}\\vspace{-5mm}','QM','1','remember','no','2019-05-21',NULL,68),(735,'o','projeto17','% projeto17\n%15\n Quanto a organização de Sistemas, classifique o sistema descritos a seguir: Um sistema de gerenciamento de dados acadêmicos dos alunos da uma universidade. Neste sistema o aluno consegue acessar e visualizar suas notas, além disso, os professores conseguem lançar as notas das provas corrigidas e a secretária também consegue emitir relatórios sobre o aproveitamento e o progresso do estudante durante toda sua vida acadêmica.','QM','1','remember','no','2019-05-21',NULL,68),(736,'q','projeto18','% projeto18\n%16\n Analise a afirmativa: Representa a abstração de um conjunto de OBJETOS do Mundo Real que possuem tipos de características e de comportamento em comum. Este conceito refere-se a:','QM','1','remember','no','2019-05-21',NULL,68),(737,'r','projeto19','% projeto19\n%17\n Dos itens a seguir, quais são desvantagens do modelo de repositório central? I - Compartilhamento da mesma organização dos dados. II - O repositório representa um ponto crítico do sistema, quanto ao desempenho. III - A segurança é comprometida com este modelo. IV - A complexidade dos programas aumenta quando desenvolvidos sob este modelo.','QM','1','remember','no','2019-05-21',NULL,68),(738,'','geral0','% 01 **\nNão é uma técnica para obter a dependabilidade (dependability), ou seja, o termo que indica a qualidade do serviço fornecido por um dado sistema e a confiança depositada no serviço fornecido:','QM','3','remember','no','2019-05-21',NULL,69),(739,'','geral1','% 02 ***\nQuanto à memória virtual, podemos afirmar que:','QM','1','remember','no','2019-05-21',NULL,69),(740,'','geral2','% 03 ***\nÉ a alternativa correta com relação ao chamado Benchmark:','QM','1','remember','no','2019-05-21',NULL,69),(741,'','geral3','% 04 ***\nÉ o tipo de memória que necessita de ciclos de refrescamento (refresh) para o seu funcionamento:','QM','1','remember','no','2019-05-21',NULL,69),(742,'','geral4','% 05 ***\nSistemas Operacionais com Múltiplos Processadores tem como características:','QM','1','remember','no','2019-05-21',NULL,69),(743,'','geral5','% 06 *\nNão é uma das etapas de processamento relacionada ao tratamento de um pedido de interrupção.','QM','5','remember','no','2019-05-21',NULL,69),(744,'','geral6','% 07 **\nQuantos bits de endereço são necessários para endereçar diretamente 512 KBytes de uma memória?','QM','3','remember','no','2019-05-21',NULL,69),(745,'','geral7','% 08 **\nFalhas, erros e defeitos estão associados, respectivamente:','QM','3','remember','no','2019-05-21',NULL,69),(746,'','geral8','% 09 *\nNão é uma etapa típica de um ciclo de instruções.','QM','5','remember','no','2019-05-21',NULL,69),(747,'','geral9','% 10 *\nÉ a definição de SHELL (Interpretador de Comandos):','QM','5','remember','no','2019-05-21',NULL,69),(748,'','geral10','% 11 **\nA ideia básica das aplicações em quatro camadas é retirar a apresentação do cliente e centralizá-la em um determinado ponto, o qual, na maioria dos casos, é um:','QM','3','remember','no','2019-05-21',NULL,69),(749,'','geral11','% 12 **\nA afirmação \"a sua ocorrência, em geral, não pode ser evitada\" corresponde ao evento indesejável:','QM','3','remember','no','2019-05-21',NULL,69),(750,'','geral12','% 13 ***\nA Integração (de circuitos) em escala muito grande, com circuitos formados por milhões de transistores em um único chip de circuito integrado, corresponde à:','QM','1','remember','no','2019-05-21',NULL,69),(751,'','geral13','% 14 *\nO Microprograma é o programa:','QM','5','remember','no','2019-05-21',NULL,69),(752,'','geral14','% 15 ***\nÉ a motivação para a existência da Java Virtual Machine (JVM), que traduz o programa escrito em linguagem de alto nível (JAVA) para um nível intermediário (Bytecode).','QM','1','remember','no','2019-05-21',NULL,69),(753,'','geral15','% 16 **\nA Porta Lógica que tem nível lógico \"1\" na saída apenas se todas as suas entradas estiverem em nível lógico \"1\".','QM','3','remember','no','2019-05-21',NULL,69),(754,'','geral16','% 17 **\nA Porta Lógica que tem nível lógico \"0\" na saída apenas se todas as suas entradas estiverem em nível lógico \"0\".','QM','3','remember','no','2019-05-21',NULL,69),(755,'','geral17','% 18 **\nÉ o tipo de memória cujos dados são armazenados pelo usuário do sistema, podendo ser apagados apenas com a incidência de Luz Ultra-Violeta:','QM','3','remember','no','2019-05-21',NULL,69),(756,'','geral18','% 19 *\nDos principais barramentos de um sistema computacional, apresentados a seguir, assinale a alternativa que apresenta o mais importante deles e que também é o mais veloz.','QM','5','remember','no','2019-05-21',NULL,69),(757,'','geral19','% 20 ***\nAssinale a alternativa onde não é apresentado um parâmetro típico de um disco rígido:','QM','1','remember','no','2019-05-21',NULL,69),(758,'','geral20','% 21 **\nA Memória Principal é:','QM','3','remember','no','2019-05-21',NULL,69),(759,'','geral21','% 22 *\nA Unidade Central de Processamento (CPU) acessa a memória de acordo com uma hierarquia distinta. Das alternativas a seguir, qual apresenta esta ordem, do mais próximo à CPU, o imediatamente seguinte e até o mais distante?','QM','5','remember','no','2019-05-21',NULL,69),(760,'','geral22','% 23 *\nDas principais partes de um Sistema Operacional apresentadas nas alternativas a seguir, indique a alternativa que tem como definição ser o conjunto de rotinas ou procedimentos que oferecem serviços aos usuários do sistema e suas aplicações, bem como a outras rotinas do próprio sistema.','QM','5','remember','no','2019-05-21',NULL,69),(761,'','geral23','% 24 ***\nPara um dado ser escrito numa memória (ex.: RAM) é necessário que, além de haver o endereçamento:','QM','1','remember','no','2019-05-21',NULL,69),(762,'','geral24','% 25 *\nÉ o tipo de memória que utiliza Latches ou flip-flops para o armazenamento de dados.','QM','5','remember','no','2019-05-21',NULL,69),(763,'','geral25','% 26 **\nO que é o cache interno de um HardDisk?','QM','3','remember','no','2019-05-21',NULL,69),(764,'','geral26','% 27 ***\nA instrução JZ utiliza-se de qual circuito da ULA?','QM','1','remember','no','2019-05-21',NULL,69),(765,'','geral27','% 28 **\nÉ o registrador que armazena o endereço (ou posição de memória) onde está localizada uma instrução num ciclo de busca (fetch).','QM','3','remember','no','2019-05-21',NULL,69),(766,'','geral28','% 29 ***\nO processo de busca de instrução pelo processador é chamado de:','QM','1','remember','no','2019-05-21',NULL,69),(767,'','geral29','% 30 *\nA transferência de um dado de um registrador interno ao microprocessador para uma posição da memória é a realização de:','QM','5','remember','no','2019-05-21',NULL,69),(768,'','geral30','% 31 ***\nNão é característica do transistor.','QM','1','remember','no','2019-05-21',NULL,69),(769,'','geral31','% 32 ***\nÉ característica distintiva da primeira geração dos computadores.','QM','1','remember','no','2019-05-21',NULL,69),(770,'','geral32','% 33 **\nA porta lógica que tem sua saída em nível lógico \"1\" apenas se ocorrerem duas entradas diferentes (exemplo: A = \"1\" e B = \"0\").','QM','3','remember','no','2019-05-21',NULL,69),(771,'','geral33','% 34 **\nA definição de Mapeamento, no contexto de memórias virtuais, é:','QM','3','remember','no','2019-05-21',NULL,69),(772,'','geral34','% 35 **\nA existência de Memórias Cache é motivada pela:','QM','3','remember','no','2019-05-21',NULL,69),(773,'a','TecMult010','AULA 1 (FÁCIL) - A representação numérica 10 nas bases binária e decimal correspondem respectivamente a (uma ÚNICA alternativa correta)','QM','1','remember','no','2019-05-21',NULL,70),(774,'a','TecMult011','AULA 1 (FÁCIL) - Assinale a única alternativa correta referente à passagem de grandezas físicas do Mundo Analógico para o Mundo digital:','QM','1','remember','no','2019-05-21',NULL,70),(775,'a','TecMult012','AULA 1 (FÁCIL) - No Mundo digital, após o processo de digitalização, as intensidades das grandezas (uma única correta)','QM','1','remember','no','2019-05-21',NULL,70),(776,'a','TecMult013','AULA 1 (FÁCIL) - No Mundo digital, após o processo de digitalização, as intensidades das grandezas (só uma está correta)','QM','1','remember','no','2019-05-21',NULL,70),(777,'a','TecMult014','AULA 1 (FÁCIL) - A representação numérica 11 nas bases binária e decimal correspondem respectivamente a (uma ÚNICA alternativa correta)','QM','1','remember','no','2019-05-21',NULL,70),(778,'b','TecMult015','AULA 1 (INTERMED) - Assinale a alternativa correta (única) referente ao uso do bit como texto:','QM','3','remember','no','2019-05-21',NULL,70),(779,'b','TecMult016','AULA 1 (INTERMED) - Assinale a ÚNICA alternativa correta sobre o uso do bit:','QM','3','remember','no','2019-05-21',NULL,70),(780,'b','TecMult017','AULA 1 (INTERMED) - Assinale a alternativa correta (única) referente ao uso do bit:','QM','3','remember','no','2019-05-21',NULL,70),(781,'b','TecMult018','AULA 1 (INTERMED) - No Mundo digital, após o processo de digitalização, as intensidades das grandezas (uma ÚNICA alternativa correta)','QM','3','remember','no','2019-05-21',NULL,70),(782,'b','TecMult019','AULA 1 (INTERMED) - Assinale a alternativa correta (única) referente à Evolução da comunicação homem-máquina','QM','3','remember','no','2019-05-21',NULL,70),(783,'b','TecMult0110','AULA 1 (INTERMED) - As representações numéricas 13 e D nas bases decimal e hexadecimal correspondem respectivamente a (uma única correta)','QM','3','remember','no','2019-05-21',NULL,70),(784,'c','TecMult0111','AULA 1 (DIFÍCIL) - As representações numéricas 11 e B nas bases binária e hexadecimal correspondem respectivamente a (uma única correta)','QM','5','remember','no','2019-05-21',NULL,70),(785,'c','TecMult0112','AULA 1 (DIFÍCIL) - As representações numéricas B e 11 nas bases hexadecimal e binária correspondem respectivamente a (uma única correta)','QM','5','remember','no','2019-05-21',NULL,70),(786,'c','TecMult0113','AULA 1 (DIFÍCIL) - Assinale a única alternativa correta a respeito do processo de DIGITALIZAÇÃO:','QM','5','remember','no','2019-05-21',NULL,70),(787,'c','TecMult0114','AULA 1 (DIFÍCIL) - Assinale a alternativa correta (única) a respeito do processo de DIGITALIZAÇÃO:','QM','5','remember','no','2019-05-21',NULL,70),(788,'c','TecMult0115','AULA 1 (DIFÍCIL) - Assinale a única alternativa correta referente à Evolução da comunicação homem-máquina','QM','5','remember','no','2019-05-21',NULL,70),(789,'d','TecMult0216','AULA 2 (FÁCIL) - No sistema RGB, com intensidades (tonalidade) variando entre 0 e 1, a cor magenta (roxa) é representada por (só uma está correta):','QM','1','remember','no','2019-05-21',NULL,71),(790,'d','TecMult0217','AULA 2 (FÁCIL) - Assinale a única alternativa correta referente à resolução espacial:','QM','1','remember','no','2019-05-21',NULL,71),(791,'d','TecMult0218','AULA 2 (FÁCIL) - No sistema RGB, com intensidades (tonalidade) variando entre 0 e 1, a cor vermelha é representada por (uma única correta):','QM','1','remember','no','2019-05-21',NULL,71),(792,'d','TecMult0219','AULA 2 (FÁCIL) - No sistema RGB, com intensidades (tonalidade) variando entre 0 e 1, a cor amarela é representada por (uma única correta):','QM','1','remember','no','2019-05-21',NULL,71),(793,'e','TecMult0220','AULA 2 (INTERMED) - Assinale a alternativa correta (única) referente à resolução espacial REAL:','QM','3','remember','no','2019-05-21',NULL,71),(794,'e','TecMult0221','AULA 2 (INTERMED) - As propriedades perceptivas da luz são (uma única correta)','QM','3','remember','no','2019-05-21',NULL,71),(795,'e','TecMult0222','AULA 2 (INTERMED) - Assinale a alternativa correta (única) referente a sistemas true color:','QM','3','remember','no','2019-05-21',NULL,71),(796,'e','TecMult0223','AULA 2 (INTERMED) - O sistema CMY funciona combinando subtrativamente os pigmentos (uma única correta)','QM','3','remember','no','2019-05-21',NULL,71),(797,'e','TecMult0224','AULA 2 (INTERMED) - Assinale a única alternativa correta relativa a sistemas de paletas:','QM','3','remember','no','2019-05-21',NULL,71),(798,'f','TecMult0225','AULA 2 (DIFÍCIL) - Com relação ao sistema Y\\\'CbCr podemos afirmar que (uma única correta):','QM','5','remember','no','2019-05-21',NULL,71),(799,'f','TecMult0226','AULA 2 (DIFÍCIL) - Com relação ao sistema Y\\\'CbCr podemos afirmar que (somente uma correta):','QM','5','remember','no','2019-05-21',NULL,71),(800,'f','TecMult0227','AULA 2 (DIFÍCIL) - O sistema CMYK, usado nas impressoras de jato de tinta, funciona combinando os pigmentos (uma única correta)','QM','5','remember','no','2019-05-21',NULL,71),(801,'f','TecMult0228','AULA 2 (DIFÍCIL) - Assinale a única alternativa correta relativa a sistemas true color:','QM','5','remember','no','2019-05-21',NULL,71),(802,'g','TecMult0329','AULA 3 (FÁCIL) - A codificação RLE é um método de compressão (uma correta):','QM','1','remember','no','2019-05-21',NULL,72),(803,'g','TecMult0330','AULA 3 (FÁCIL) - O Método da Deflação é um método de compressão (uma correta):','QM','1','remember','no','2019-05-21',NULL,72),(804,'g','TecMult0331','AULA 3 (FÁCIL) - Assinale a alternativa correta (única) referente ao formato JPEG2000:','QM','1','remember','no','2019-05-21',NULL,72),(805,'g','TecMult0332','AULA 3 (FÁCIL) - O algoritmo LZW é um método de compressão (uma correta):','QM','1','remember','no','2019-05-21',NULL,72),(806,'g','TecMult0333','AULA 3 (FÁCIL) - O algoritmo LZW é um método de compressão (somente uma alternativa correta):','QM','1','remember','no','2019-05-21',NULL,72),(807,'h','TecMult0334','AULA 3 (INTERMED) - Assinale a única alternativa correta referente ao formato JPEG2000:','QM','3','remember','no','2019-05-21',NULL,72),(808,'h','TecMult0335','AULA 3 (INTERMED) - O algoritmo LZ78 é um método de compressão (uma correta):','QM','3','remember','no','2019-05-21',NULL,72),(809,'h','TecMult0336','AULA 3 (INTERMED) - O Método da Deflação é um método de compressão (SOMENTE UMA CORRETA):','QM','3','remember','no','2019-05-21',NULL,72),(810,'h','TecMult0337','AULA 3 (INTERMED) - Assinale a alternativa correta (única) referente ao método da deflação:','QM','3','remember','no','2019-05-21',NULL,72),(811,'h','TecMult0338','AULA 3 (INTERMED) - Assinale a única alternativa correta referente ao formato JPEG:','QM','3','remember','no','2019-05-21',NULL,72),(812,'i','TecMult0339','AULA 3 (DIFÍCIL) - Assinale a alternativa correta (única) referente ao formato de imagens JPEG:','QM','5','remember','no','2019-05-21',NULL,72),(813,'i','TecMult0340','AULA 3 (DIFÍCIL) - Assinale a única alternativa correta referente ao método da deflação:','QM','5','remember','no','2019-05-21',NULL,72),(814,'i','TecMult0341','AULA 3 (DIFÍCIL) - A codificação RLE é (uma correta):','QM','5','remember','no','2019-05-21',NULL,72),(815,'i','TecMult0342','AULA 3 (DIFÍCIL) - Assinale a alternativa correta (única) sobre a solução do problema dos algoritmos baseados em dicionários:','QM','5','remember','no','2019-05-21',NULL,72),(816,'j','TecMult0443','AULA 4 (FÁCIL) - As ondas sonoras, quanto à periodicidade, podem ser divididas em (uma correta):','QM','1','remember','no','2019-05-21',NULL,73),(817,'j','TecMult0444','AULA 4 (FÁCIL) - Assinale a única afirmativa correta referente às dimensões e \"qualidades\" da onda sonora, podemos afirmar que (uma):','QM','1','remember','no','2019-05-21',NULL,73),(818,'j','TecMult0445','AULA 4 (FÁCIL) - As ondas sonoras, quanto à sua propagação no espaço, podem ser divididas em (uma correta):','QM','1','remember','no','2019-05-21',NULL,73),(819,'j','TecMult0446','AULA 4 (FÁCIL) - As ondas sonoras, quanto à sua complexidade, podem ser divididas em (uma correta):','QM','1','remember','no','2019-05-21',NULL,73),(820,'j','TecMult0447','AULA 4 (FÁCIL) - Quanto às dimensões da onda sonora podemos afirmar (uma correta):','QM','1','remember','no','2019-05-21',NULL,73),(821,'k','TecMult0448','AULA 4 (INTERMED) - Assinale a alternativa correta (única) referente à amostragem de sinais de áudio analógicos:','QM','3','remember','no','2019-05-21',NULL,73),(822,'k','TecMult0449','AULA 4 (INTERMED) - Assinale a alternativa correta referente à amostragem de sinais de áudio analógicos (uma única correta):','QM','3','remember','no','2019-05-21',NULL,73),(823,'k','TecMult0450','AULA 4 (INTERMED) - Quanto à quantização de sinais de áudio analógicos, podemos afirmar que (só uma é a correta):','QM','3','remember','no','2019-05-21',NULL,73),(824,'k','TecMult0451','AULA 4 (INTERMED) - Assinale a única alternativa correta referente à amostragem de sinais de áudio analógicos:','QM','3','remember','no','2019-05-21',NULL,73),(825,'k','TecMult0452','AULA 4 (INTERMED) - Com relação à codificação PCM de sinais de áudio podemos afirmar que (uma única correta):','QM','3','remember','no','2019-05-21',NULL,73),(826,'l','TecMult0453','AULA 4 (DIFÍCIL) - Quanto à quantização de sinais de áudio analógicos, podemos afirmar que (uma única correta):','QM','5','remember','no','2019-05-21',NULL,73),(827,'l','TecMult0454','AULA 4 (DIFÍCIL) - Com relação à codificação PCM de sinais de áudio podemos afirmar que (somente uma correta):','QM','5','remember','no','2019-05-21',NULL,73),(828,'l','TecMult0455','AULA 4 (DIFÍCIL) - Com relação à quantização de sinais de áudio analógicos, podemos afirmar que (uma única correta):','QM','5','remember','no','2019-05-21',NULL,73),(829,'l','TecMult0456','AULA 4 (DIFÍCIL) - Quanto às dimensões e \"qualidades\" da onda sonora, podemos afirmar que (uma única correta):','QM','5','remember','no','2019-05-21',NULL,73),(830,'m','TecMult0557','AULA 5 (FÁCIL) - Quanto ao fenômeno do mascaramento auditivo, é correto afirmar que (uma alternativa correta):','QM','1','remember','no','2019-05-21',NULL,74),(831,'m','TecMult0558','AULA 5 (FÁCIL) - Quanto aos sistemas MIDI, podemos afirmar que (uma correta):','QM','1','remember','no','2019-05-21',NULL,74),(832,'m','TecMult0559','AULA 5 (FÁCIL) - Com relação à codificação AAC de sinais de áudio podemos afirmar que (uma única correta):','QM','1','remember','no','2019-05-21',NULL,74),(833,'m','TecMult0560','AULA 5 (FÁCIL) - Quanto aos sistemas MIDI, podemos afirmar que (somente uma alternativa correta):','QM','1','remember','no','2019-05-21',NULL,74),(834,'n','TecMult0561','AULA 5 (INTERMED) - Com relação à codificação MP3 de sinais de áudio podemos afirmar que (uma única correta):','QM','3','remember','no','2019-05-21',NULL,74),(835,'n','TecMult0562','AULA 5 (INTERMED) - Quanto ao mascaramento auditivo, podemos afirmar que (somente uma correta):','QM','3','remember','no','2019-05-21',NULL,74),(836,'n','TecMult0563','AULA 5 (INTERMED) - Com relação à codificação MP3 de sinais de áudio podemos afirmar que (somente uma correta):','QM','3','remember','no','2019-05-21',NULL,74),(837,'n','TecMult0564','AULA 5 (INTERMED) - Quanto ao mascaramento auditivo, podemos afirmar que (uma correta):','QM','3','remember','no','2019-05-21',NULL,74),(838,'n','TecMult0565','AULA 5 (INTERMED) - Quanto às técnicas de síntese digital de música, podemos afirmar que (uma única correta):','QM','3','remember','no','2019-05-21',NULL,74),(839,'o','TecMult0566','AULA 5 (DIFÍCIL) - Comparando a codificação MP3 com a codificação Vorbis podemos afirmar que (apenas uma correta):','QM','5','remember','no','2019-05-21',NULL,74),(840,'o','TecMult0567','AULA 5 (DIFÍCIL) - Sobre MIDI podemos afirmar (uma única alternativa correta):','QM','5','remember','no','2019-05-21',NULL,74),(841,'o','TecMult0568','AULA 5 (DIFÍCIL) - Comparando a codificação AAC com Vorbis podemos afirmar que (uma ÚNICA correta):','QM','5','remember','no','2019-05-21',NULL,74),(842,'o','TecMult0569','AULA 5 (DIFÍCIL) - Sobre MIDI podemos afirmar (somente uma alternativa correta):','QM','5','remember','no','2019-05-21',NULL,74),(843,'p','TecMult0670','AULA 6 (FÁCIL) - Relativo ao formato PCM para telefonia é correto afirmar que (uma alternativa correta):','QM','1','remember','no','2019-05-21',NULL,75),(844,'p','TecMult0671','AULA 6 (FÁCIL) - Com relação ao formato CELP é correto afirmar que (uma única correta):','QM','1','remember','no','2019-05-21',NULL,75),(845,'p','TecMult0672','AULA 6 (FÁCIL) - Com relação ao formato DPCM para telefonia é correto afirmar que (uma única alternativa correta):','QM','1','remember','no','2019-05-21',NULL,75),(846,'p','TecMult0673','AULA 6 (FÁCIL) - Relativo à Modulação Delta (DM) é correto afirmar que (uma alternativa correta):','QM','1','remember','no','2019-05-21',NULL,75),(847,'q','TecMult0674','AULA 6 (INTERMED) - Com relação às Características do Sinal de Voz podemos afirmar que (uma única correta):','QM','3','remember','no','2019-05-21',NULL,75),(848,'q','TecMult0675','AULA 6 (INTERMED) - Relativo ao formato PCM para telefonia é correto afirmar que (uma única correta):','QM','3','remember','no','2019-05-21',NULL,75),(849,'q','TecMult0676','AULA 6 (INTERMED) - Relativo ao formato DPCM é correto afirmar que (uma única correta):','QM','3','remember','no','2019-05-21',NULL,75),(850,'q','TecMult0677','AULA 6 (INTERMED) - Com relação aos Modelos de Produção da Fala podemos afirmar que (uma única correta):','QM','3','remember','no','2019-05-21',NULL,75),(851,'q','TecMult0678','AULA 6 (INTERMED) - Relativo ao formato ADPCM para telefonia é correto afirmar que (somente uma alternativa correta):','QM','3','remember','no','2019-05-21',NULL,75),(852,'r','TecMult0679','AULA 6 (DIFÍCIL) - Com relação ao formato CELP é correto afirmar que (somente uma correta):','QM','5','remember','no','2019-05-21',NULL,75),(853,'r','TecMult0680','AULA 6 (DIFÍCIL) - Com relação aos Modelos de Produção da Fala podemos afirmar que (somente uma alternativa correta):','QM','5','remember','no','2019-05-21',NULL,75),(854,'r','TecMult0681','AULA 6 (DIFÍCIL) - Com relação às Características do Sinal de Voz podemos afirmar que (uma única correta):','QM','5','remember','no','2019-05-21',NULL,75),(855,'r','TecMult0682','AULA 6 (DIFÍCIL) - Relativo ao formato ADPCM para telefonia é correto afirmar que (uma única correta):','QM','5','remember','no','2019-05-21',NULL,75),(856,'s','TecMult0783','AULA 7 (FÁCIL) - Com relação às características dos vídeos podemos afirmar que (uma correta):','QM','1','remember','no','2019-05-21',NULL,76),(857,'s','TecMult0784','AULA 7 (FÁCIL) - A resolução da TV digital HD (1920 x 1080 pixels) é (uma correta):','QM','1','remember','no','2019-05-21',NULL,76),(858,'s','TecMult0785','AULA 7 (FÁCIL) - Relativo ao PAL/SECAM é correto afirmar que (uma única correta):','QM','1','remember','no','2019-05-21',NULL,76),(859,'s','TecMult0786','AULA 7 (FÁCIL) - Comparando a codificação H.264/MPEG-4 AVC com MPEG-1 Video podemos afirmar que (somente uma correta):','QM','1','remember','no','2019-05-21',NULL,76),(860,'t','TecMult0787','AULA 7 (INTERMED) - Relativo ao NTSC é correto afirmar que (uma única correta):','QM','3','remember','no','2019-05-21',NULL,76),(861,'t','TecMult0788','AULA 7 (INTERMED) - Comparando a codificação H.264/MPEG-4 AVC com MPEG-1 Video podemos afirmar que (uma correta):','QM','3','remember','no','2019-05-21',NULL,76),(862,'t','TecMult0789','AULA 7 (INTERMED) - Com relação às características dos vídeos podemos afirmar que (uma única correta):','QM','3','remember','no','2019-05-21',NULL,76),(863,'t','TecMult0790','AULA 7 (INTERMED) - Relativo ao PAL/SECAM é correto afirmar que (uma correta):','QM','3','remember','no','2019-05-21',NULL,76),(864,'t','TecMult0791','AULA 7 (INTERMED) - Relativo ao NTSC é correto afirmar que (uma correta):','QM','3','remember','no','2019-05-21',NULL,76),(865,'u','TecMult0792','AULA 7 (DIFÍCIL) - Quanto às técnicas de compressão de vídeo, podemos afirmar que (uma alternativa correta):','QM','5','remember','no','2019-05-21',NULL,76),(866,'u','TecMult0793','AULA 7 (DIFÍCIL) - Com relação à codificação MPEG-1 de sinais de vídeo podemos afirmar que (uma única correta):','QM','5','remember','no','2019-05-21',NULL,76),(867,'u','TecMult0794','AULA 7 (DIFÍCIL) - Quanto às técnicas de compressão de vídeo, podemos afirmar que (uma única correta):','QM','5','remember','no','2019-05-21',NULL,76),(868,'u','TecMult0795','AULA 7 (DIFÍCIL) - Com relação à codificação MPEG-2 de sinais de vídeo podemos afirmar que (apenas uma está correta):','QM','5','remember','no','2019-05-21',NULL,76),(869,'','SisCor010','% Questão 1 de 27 	3.0 Pontos - AULA 1 (DIFÍCIL)\nQuais são os componentes referentes ao conceito de sistema que interagem para atingir um objetivo comum?','QM','5','remember','no','2019-05-21',NULL,77),(870,'','SisCor011','% Questão 2 de 27 	3.0 Pontos - AULA 1 (MÉDIA)\nO que é sistema de informação?','QM','3','remember','no','2019-05-21',NULL,77),(871,'','SisCor012','% Questão 3 de 27 	3.0 Pontos - AULA 1 (FACIL)\nO que é dado e o que é informação?','QM','1','remember','no','2019-05-21',NULL,77),(872,'','SisCor023','% Questão 4 de 27 	3.0 Pontos - AULA 1 (MÉDIA)\nUm software é formado:','QM','3','remember','no','2019-05-21',NULL,78),(873,'','SisCor024','% Questão 5 de 27 	3.0 Pontos - AULA 1 (FACIL)\nÉ exemplo de Software de Sistema:','QM','1','remember','no','2019-05-21',NULL,78),(874,'','SisCor025','% Questão 6 de 27 	3.0 Pontos - AULA 1 (MÉDIA)\nAssinale a alternativa Falsa: A Engenharia de Software possui as seguintes características:','QM','3','remember','no','2019-05-21',NULL,78),(875,'','SisCor026','% Questão 7 de 27	3.0 Pontos - AULA 1 (FACIL)\nQuem está envolvido em ajudar os usuários a determinar quais requisitos eles precisam e a construir o Software necessário para atender estes requisitos?','QM','1','remember','no','2019-05-21',NULL,78),(876,'','SisCor027','% Questão 8 de 27 	3.0 Pontos - AULA 1 (DIFÍCIL)\nQuais são as fases da Engenharia de Software?','QM','5','remember','no','2019-05-21',NULL,78),(877,'','SisCor028','% Questão 9 de 27 	3.0 Pontos - AULA 1 (MÉDIA)\nQuais são os componentes de um sistema de informação baseado em computador?','QM','3','remember','no','2019-05-21',NULL,78),(878,'','SisCor039','% Questão 10 de 27 	3.0 Pontos - AULA 1 (FACIL)\nQuais são os principais papéis que os Sistemas de Informação podem desempenhar para uma empresa?','QM','1','remember','no','2019-05-21',NULL,79),(879,'','SisCor0310','% Questão 11 de 27	3.0 Pontos - AULA 1 (MÉDIA)\nAssinale a alternativa FALSA:','QM','3','remember','no','2019-05-21',NULL,79),(880,'','SisCor0311','% Questão 12 de 27 	3.0 Pontos - AULA 1 (DIFÍCIL)\nAssinale a alternativa FALSA:','QM','5','remember','no','2019-05-21',NULL,79),(881,'','SisCor0412','% Questão 13 de 27 	3.0 Pontos - AULA 1 (MÉDIA)\nComércio eletrônico, ou e-commerce, é uma forma de transação comercial realizada especialmente por meio de equipamentos e sistemas de comunicação eletrônica, como computadores, terminais, cartões magnéticos, etA: Assinale a alternativa que define o conceito de \"B2B\" utilizada no âmbito do comércio eletrônico.','QM','3','remember','no','2019-05-21',NULL,80),(882,'','SisCor0413','% Questão 14 de 27 	3.0 Pontos - AULA 1 (FACIL)\nSão categorias básicas deTipos de e-commerce:','QM','1','remember','no','2019-05-21',NULL,80),(883,'','SisCor0414','% Questão 15 de 27 	3.0 Pontos - AULA 1 (FACIL)\nO Controle de Estoque é um subsistema de um Sistema de:','QM','1','remember','no','2019-05-21',NULL,80),(884,'','SisCor0515','% Questão 16 de 27 	3.0 Pontos - AULA 1 (MÉDIA)\nO ciclo de processamento de transações de um TPS em geral e´ composto das seguintes etapas:','QM','3','remember','no','2019-05-21',NULL,81),(885,'','SisCor0516','% Questão 17 de 27 	3.0 Pontos - AULA 1 (MÉDIA)\nEsse tipo de sistema tem como objetivo o compartilhamento de dados e processos. Reduz o número de camadas por onde os dados trafegam até´ chegar a seu destino. Usa um conjunto de tecnologias como middlewares e message brokers disponibilizando serviços de mensagens e comunicação.','QM','3','remember','no','2019-05-21',NULL,81),(886,'','SisCor0617','% Questão 18 de 27 	3.0 Pontos - AULA 1 (FACIL)\nEsse tipo de sistema de informação possibilita automatizar tarefas como qualificação de clientes, controle de reações, programação de contatos de vendas e fornecimento de informações para clientes e clientes potenciais.','QM','1','remember','no','2019-05-21',NULL,82),(887,'','SisCor0618','% Questão 19 de 28 	3.0 Pontos - AULA 1 (FACIL)\nEsse tipo de sistema de informação fornece suporte aos processos tradicionais da cadeia de suprimentos, criando uma rede de relações de negócio que seja rápida, eficiente e de baixo custo.','QM','1','remember','no','2019-05-21',NULL,82),(888,'','SisCor0619','% Questão 20 de 27 	3.0 Pontos - AULA 1 (DIFÍCIL)\nEsse tipo de sistema de informação possui como finalidade integrar em um único software os processos de negócios dos setores de Fabricação, Finanças, Contabilidade, RH, Vendas e Marketing de uma empresa:','QM','5','remember','no','2019-05-21',NULL,82),(889,'','SisCor0720','% Questão 21 de 27 	3.0 Pontos - AULA 1 (MÉDIA)\nEsse tipo de sistema de informação apresenta informações estruturadas sobre aspectos relativos à organização, considerados relevantes em particular aos executivos.','QM','3','remember','no','2019-05-21',NULL,83),(890,'','SisCor0721','% Questão 22 de 27 	3.0 Pontos - AULA 1 (DIFÍCIL)\nQual das seguintes funções não é típica dos DSS - Sistemas de Apoio a Decisão:','QM','5','remember','no','2019-05-21',NULL,83),(891,'','SisCor0722','% Questão 23 de 27 	3.0 Pontos - AULA 1 (MÉDIA)\nEsse tipo de sistema usualmente disponibiliza informações a administradores e gerentes sob a forma de relatórios padronizados, que apoiam tomadas de decisão mais eficientes e criam um canal de retro informação para as operações diárias.','QM','3','remember','no','2019-05-21',NULL,83),(892,'','SisCor0823','% Questão 24 de 27 	3.0 Pontos - AULA 1 (FACIL)\nQual ramo da Inteligência Artificial envolve um sistema computacional que pode simular o funcionamento de um cérebro humano?','QM','1','remember','no','2019-05-21',NULL,84),(893,'','SisCor0824','% Questão 25 de 27 	3.0 Pontos - AULA 1 (MÉDIA)\nEsses tipos de sistemas podem ser definidos como sendo sistemas que simulam a realidade em computadores através do auxílio de dispositivos multissensoriais de entrada e saídA:','QM','3','remember','no','2019-05-21',NULL,84),(894,'','SisCor0825','% Questão 26 de 27 	3.0 Pontos - AULA 1 (MÉDIA)\nEsse tipo de sistema fundamenta-se no conhecimento que é aplicado sobre uma determinada área do saber de forma específica e complexa, para atuar como um consultor especializado para os usuários finais.','QM','3','remember','no','2019-05-21',NULL,84),(895,'','SisCor0826','% Questão 27 de 27	3.0 Pontos - AULA 1 (MÉDIA)\nEsse tipo de sistema fornece suporte aos trabalhadores do conhecimento, tipicamente englobando procedimentos, patentes, obras de referências, melhores práticas, templates e documentos.','QM','3','remember','no','2019-05-21',NULL,84),(896,'','MetCient0','Identifique o tipo de pesquisa na afirmação a seguir: Visa identificar os fatores que determinam ou contribuem para a ocorrência dos fatos/fenômenos/processos. Aprofunda o conhecimento da realidade porque explica o porquê das coisas.','QM','1','remember','no','2019-05-21',NULL,85),(897,'','MetCient1','Identifique o tipo de pesquisa na afirmação a seguir: Constitui o passo inicial no processo de pesquisa experimental. É também um auxílio para a formulação de hipóteses significativas.','QM','1','remember','no','2019-05-21',NULL,85),(898,'','MetCient2','Identifique o tipo de pesquisa na afirmação a seguir: A meta é a busca de conhecimentos com a finalidade de contribuir para fins práticos, buscando soluções para problemas concretos. Em outras palavras, busca a transformação concreta dos resultados.','QM','1','remember','no','2019-05-21',NULL,85),(899,'','MetCient3','Identifique o tipo de pesquisa na afirmação a seguir: Se caracteriza por manipular diretamente as variáveis relacionadas com o objeto de estudo.','QM','1','remember','no','2019-05-21',NULL,85),(900,'','MetCient4','Identifique o tipo de pesquisa na afirmação a seguir: Tem por objetivo a busca pelo saber, procurando satisfazer uma necessidade intelectual por meio do conhecimento (atualização dos conhecimentos). Os conhecimentos são utilizados em pesquisas aplicadas ou tecnológicas.','QM','1','remember','no','2019-05-21',NULL,85),(901,'','MetCient5','A indicação de uma causa para explicar provisoriamente um objeto, fato ou fenômeno até que os fatos venham a contradizê-la ou confirmá-la chama-se:','QM','1','remember','no','2019-05-21',NULL,85),(902,'','MetCient6','Método é entendido como a ordem em que se devem dispor os diferentes processos necessários para se atingir um resultado desejado; é a forma de proceder ao longo de um caminho, é uma forma de selecionar técnicas, forma de avaliar alternativas para uma ação.\nEm relação ao método científico, marque a única alternativa FALSA das citadas abaixo:','QM','1','remember','no','2019-05-21',NULL,85),(903,'','MetCient7','Diga que tipo de conhecimento está representado na frase a seguir: Tomar banho após as refeições faz mal!','QM','3','remember','no','2019-05-21',NULL,85),(904,'','MetCient8','Diga que tipo de conhecimento está representado na frase a seguir: Eu não posso ensinar nada a ninguém, eu só posso fazê-lo pensar.','QM','3','remember','no','2019-05-21',NULL,85),(905,'','MetCient9','Diga que tipo de conhecimento está representado na frase a seguir: Todo o corpo em queda livre cai com a aceleração da gravidade.','QM','3','remember','no','2019-05-21',NULL,85),(906,'','MetCient10','Diga que tipo de conhecimento está representado na frase a seguir: A ociosidade é que envelhece e não o trabalho.','QM','3','remember','no','2019-05-21',NULL,85),(907,'','MetCient11','O ministério da saúde adverte: Fumar faz mal à saúde\". Você já ouviu campanhas em rádio e televisão sobre esse mesmo assunto. Sobre que tipo de conhecimento se fundamenta a advertência do Ministério da Saúde?','QM','3','remember','no','2019-05-21',NULL,85),(908,'','MetCient12','No método dedutivo, partimos de uma ideia geral para uma ideia específica. Assim, toda informação já está presente nas premissas deduzidas. Por isso, podemos considerar que o método dedutivo é baseado em:','QM','3','remember','no','2019-05-21',NULL,85),(909,'','MetCient13','O método aplicado ao estudo de objetos, fatos e fenômenos e por isso suscetíveis de experimentação chama-se:','QM','3','remember','no','2019-05-21',NULL,85),(910,'','MetCient14','Observe o problema sugerido no texto abaixo e marque a resposta que melhor expressa a idéia central apresentada pelo autor.\n\\\\\n\\textit{\"Por onde se começa a solução de um problema? Imagine que você é um escoteiro e se perdeu numa floresta. Seu problema é voltar ao acampamento. Qual seria seu procedimento? O que significa encontrar a solução para o problema? A solução é o caminho que o levará de onde você está ao lugar onde você deseja ir. Imagine que você não sabe para onde ir: não poderá fazer nada inteligente. Gritará, chorará, andará a esmo. O procedimento inteligente é o seguinte: pegue seu mapa, identifique o ponto para onde ir, o ponto onde você se encontra e, a partir do primeiro, trace um caminho. A inteligência segue o caminho inverso da ação. E é somente isso que a torna inteligência. Começando do ponto ao qual se deseja chegar, evita-se o comportamento errático e desordenado a que se dá o nome de tentativa e erro.\"}\n\\\\\n(ALVES, R. Filosofia da ciência. Introdução ao jogo e suas regras. São Paulo: Loyola, 2007, pp. 35-6)\n\\\\','QM','3','remember','no','2019-05-21',NULL,85),(911,'','MetCient15','Nas alternativas identifique texto com gap (lacuna).','QM','5','remember','no','2019-05-21',NULL,85),(912,'','MetCient16','Uma pesquisa só será considerada científica:','QM','5','remember','no','2019-05-21',NULL,85),(913,'a','MetCient17','% (0.5 pontos) para cada prova será sorteada ou esta ou a próxima\nA forma de raciocínio ou argumentação por meio da qual são inferidas verdades gerais a partir de verdades particulares é:','QM','5','remember','no','2019-05-21',NULL,85),(914,'a','MetCient18','%  (0.5 pontos) para cada prova será sorteada ou esta ou a anterior\nA forma de raciocínio ou argumentação por meio da qual são inferidas verdades gerais a partir de verdades particulares é:','QM','5','remember','no','2019-05-21',NULL,85),(915,'','MetCient19','Sabemos que o mais comum ao ouvirmos a palavra problema é pensarmos em obstáculo, contratempo, situação difícil, conflito, e outras situações assim. Mas, no caso, quando o problema é científico caracteriza-se:','QM','3','remember','no','2019-05-21',NULL,85),(916,'','MetCient20','Um trabalho acadêmico precisa seguir certas fases para o seu êxito final.Para tanto, é preciso desenvolver um planejamento.Procedimento que facilita o caminho que do processo de pesquisa, conduzindo-nos de maneira clara e objetiva à realização da pesquisa.O que é indispensável ao planejamento de uma pesquisa científica ou acadêmica?','QM','3','remember','no','2019-05-21',NULL,85),(917,'','MetCient21','Todo trabalho científico organiza-se na forma de elementos pré-textuais, textuais e pós-textuais. Identifique, a seguir, o elemento pré-textual.','QM','1','remember','no','2019-05-21',NULL,85),(918,'','MetCient22','Entende-se por citação a menção de uma informação extraída de outra fonte. Então, a citação pode ser','QM','3','remember','no','2019-05-21',NULL,85),(919,'','MetCient23','A citação de citação pode ser definida como a:','QM','1','remember','no','2019-05-21',NULL,85),(920,'','MetCient24','A Universidade tem o papel de fomentar à prática da pesquisa, ou seja, o aluno deve ser capaz de uma produção de conhecimento autônoma. Para tanto, o que deve ser privilegiado:','QM','1','remember','no','2019-05-21',NULL,85),(921,'','MetCient25','A revisão de literatura constitui-se na fundamentação teórica do projeto de pesquisa e do trabalho acadêmico, contribuindo para:','QM','1','remember','no','2019-05-21',NULL,85),(922,'','ModDad0','% Questao 01 \nNo modelo entidade-relacionamento, a expressão chave primária identifica:\n#\\begin{table}[bt]\n#\\centering\n#\\includegraphics[width=10cm,height=8cm]{../../../questions/06_ModDad/ModeloMDA}\n#\\end{table}\n\n\\begin{figure}[bt]\n	\\centering\n  \\write18{wget -c https://www.dropbox.com/s/k6qpq2hyqi4zh6z/ModeloMDA.png -O ./tmp/ModDad_Imagem1.png}\n  \\fbox{\\includegraphics[scale=0.25]{ModDad_Imagem1}}\n  \\label{fig_ex1}\n  %\\caption{Exemplo de figura.}\n\\end{figure}','QM','1','remember','no','2019-05-21',NULL,86),(923,'','ModDad1','% Questao 02\nConsidere a seguinte tabela de um banco de dados relacional. Cliente (CPF, Nome, Fone, End). O comando SQL para obter o Nome dos clientes, cujo campo Fone tenha o valor \'nulo\' , é:','QM','1','remember','no','2019-05-21',NULL,86),(924,'','ModDad2','% Questao 03\nPodemos definir um atributo composto como sendo:','QM','1','remember','no','2019-05-21',NULL,86),(925,'','ModDad3','% Questao 04\nEm termos de modelagem Entidade-Relacionamento, podemos definir como uma atributo multivalorado como sendo:','QM','1','remember','no','2019-05-21',NULL,86),(926,'','ModDad4','% Questao 05\nBaseado no modelo, caso queiramos saber quais funcionários não participam de projeto algum, qual recurso deve ser utilizado? : ModeloMDA.jpg','QM','1','remember','no','2019-05-21',NULL,86),(927,'','ModDad5','% Questao 06\nBaseado no modelo, o comando SQL \"Select nomeDep, SUM(salario) from Funcionario INNER JOIN Departamento USING (idDepto) GROUP BY nomeDep\" retorna: ModeloMDA.jpg','QM','1','remember','no','2019-05-21',NULL,86),(928,'','ModDad6','% Questao 07\nBaseado no modelo, informe o comando que exibe a relação de funcionários com seus respectivos \"anos de casa\", partindo dos mais antigos:','QM','1','remember','no','2019-05-21',NULL,86),(929,'','ModDad7','% Questao 08\nConsiderando o modelo, o comando SQL \"SELECT nomeF, descrP FROM Funcionario INNER JOIN ProjFunc USING (idFunc) INNER JOIN Projeto USING (idProj)\" exibe:','QM','1','remember','no','2019-05-21',NULL,86),(930,'','ModDad8','% Questao 09\nBaseado no modelo, o comando SQL que recupera todos os funcionários que NÃO estão trabalhando em nenhum projeto no ano de 2018 é:','QM','1','remember','no','2019-05-21',NULL,86),(931,'','ModDad9','% Questao 10\nConsidere o seguinte esquema de bancos de dados:\n\n\\small \n\\begin{verbatim}\n1.) Cliente(IdCliente: Integer, Nome: Varchar(120));  /* IdCliente é chave */\n2.) Pedido(IdPedido: Integer, Dia: Integer, Mes: Integer, Ano: Integer); /*IdPedido é chave*/\n3.) Cliente_Pedido(IdCliente: Integer referencia Cliente(IdCliente),\n    IdPedido: Integer referencia 4. Pedido(IdPedido)); /* IdCliente e IdPedido sao chave */\n4.) Item(IdProduto: Integer referencia Produto(IdProduto),\n    IdPedido: Integer, Quantidade: Integer); /* IdProduto e IdPedido sao chave */ \n5.) Produto(IdProduto: Integer, Nome: Varchar(100));  /* IdProduto é chave */\n\\end{verbatim} \\normalsize  \\vspace{-5mm}\n\n\\vspace{-5mm} Considere as observações nos comentários indicando qual é o atributo chave e o termo \"referencia\", indicando as referências de chave estrangeira. Considere ainda que existam as seguintes tuplas no banco de dados: \n\n\\small\n\\begin{verbatim}\na.) Cliente_Pedido(30, 2); \nb.) Cliente_Pedido(15, 3); \nc.) Produto(2, \"Caneta\"); \nd.) Produto(4, \"Caderno\"); \n\\end{verbatim} \\normalsize\n\n\\vspace{-5mm} Qual opção apresenta somente tuplas válidas para o esquema apresentado?','QM','1','remember','no','2019-05-21',NULL,86),(932,'','ModDad10','% Questao 11\nEm operações de filtro de dados para consultas envolvendo de contagem (COUNT), como por exemplo \"liste os departamentos com mais de 5 funcionários), é correto afirmar que:','QM','1','remember','no','2019-05-21',NULL,86),(933,'','ModDad11','% Questao 12\nBaseado no modelo, o comando SQL \"SELECT idFunc, nomeF FROM Funcionario WHERE salario > ALL (SELECT salario FROM Funcionario INNER JOIN ProjFunc USING (idFunc) WHERE idProj = 2)\" retorna:','QM','1','remember','no','2019-05-21',NULL,86),(934,'a','SoftLivre0','%\\qid{1QEa0010}\n%\\newcommand{\\qid}[1]{\\textcolor{white}{{\\tiny #1}\\hspace{-6ex}}} %question identification (invisible text #1)\n%Ref.: Atividade 6b - Poder sobre o software / Questão 1\nCom relação a um \\emph{software} livre, considere as ações:\n\\\\\n- Executar o programa como desejar, inclusive para fins lucrativos.\n\\\\\n- Adaptar o código às suas necessidades, podendo usá-lo como parte de um \\emph{software} proprietário.\n\\\\\n- Redistribuir o código fonte do programa, cobrando pela mídia ou outro meio de transferência.\n\\\\\n- Cobrar pelo uso do programa na forma executável.\n\\\\\nDentre estas ações, exatamente quantas não podem ser admitidas?','QM','1','remember','no','2019-05-21',NULL,87),(935,'a','SoftLivre1','%\\qid{1QEa0020}\n%Ref.: Atividade 6b - Poder sobre o software / Questão 1\nCom relação a um \\emph{software} livre, considere as ações:\n\\\\\nI. Executar o programa como desejar, inclusive para fins lucrativos.\n\\\\\nII. Adaptar o código como desejar, cobrando pela liberação de novas funcionalidades.\n\\\\\nIII. Redistribuir o programa modificado, restringindo o uso para determinadas finalidades.\n\\\\\nIV. Cobrar pelo uso do programa na forma executável.\n\\\\\nDentre estas ações, exatamente quantas não podem ser admitidas?','QM','1','remember','no','2019-05-21',NULL,87),(936,'a','SoftLivre2','%\\qid{1QEa0030}\n%Ref.: Atividade 6b - Poder sobre o software / Questão 1\nCom relação a um \\emph{software} livre, considere as ações:\n\\\\\nI. Executar o programa como desejar, inclusive para fins lucrativos.\n\\\\\nII. Adaptar o código como desejar, cobrando pela liberação de novas funcionalidades.\n\\\\\nIII. Redistribuir o código fonte do programa, cobrando pela mídia ou outro meio de transferência.\n\\\\\nIV. Cobrar pelo uso do programa na forma executável.\n\\\\\nDentre estas ações, exatamente quantas não podem ser admitidas?','QM','1','remember','no','2019-05-21',NULL,87),(937,'a','SoftLivre3','%\\qid{1QEa0040}\n%Ref.: Atividade 6b - Poder sobre o software / Questão 1\nCom relação a um \\emph{software} livre, considere as ações:\n\\\\\nI. Liberar o uso, modificação e redistribuição apenas do código fonte.\n\\\\\nII. Adaptar o código como desejar, cobrando pela liberação de novas funcionalidades.\n\\\\\nIII. Redistribuir o programa modificado, restringindo o uso para determinadas finalidades.\n\\\\\nIV. Cobrar pelo uso do programa após um prazo estipulado.\n\\\\\nDentre estas ações, exatamente quantas não podem ser admitidas?','QM','1','remember','no','2019-05-21',NULL,87),(938,'a','SoftLivre4','%\\qid{1QEa0050}\n%Ref.: Atividade 6b - Poder sobre o software / Questão 1\nCom relação a um \\emph{software} livre, considere as ações:\n\\\\\nI. Executar o programa como desejar, inclusive para fins lucrativos.\n\\\\\nII. Adaptar o código às suas necessidades, podendo usá-lo como parte de um \\emph{software} proprietário.\n\\\\\nIII. Redistribuir o código fonte do programa, cobrando pela mídia ou outro meio de transferência.\n\\\\\nIV. Usar o programa na forma executável, sem pagar ao desenvolvedor pela sua utilização.\n\\\\\nDentre estas ações, exatamente quantas não podem ser admitidas?','QM','1','remember','no','2019-05-21',NULL,87),(939,'b','SoftLivre5','%\\qid{1QEb0010}\n%Ref.: Atividade 6b - Poder sobre o software / Questão 2\nAssinale a alternativa que completa corretamente a frase:\n\\\\\nUm \\emph{software} aberto pode \\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(940,'b','SoftLivre6','%\\qid{1QEb0020}\n%Ref.: Atividade 6b - Poder sobre o software / Questão 2\nAssinale a alternativa que completa corretamente a frase:\n\\\\\nUm \\emph{software} aberto pode \\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(941,'b','SoftLivre7','%\\qid{1QEb0030}\n%Ref.: Atividade 6b - Poder sobre o software / Questão 2\nAssinale a alternativa que completa corretamente a frase:\n\\\\\nUm \\emph{software} aberto pode \\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(942,'b','SoftLivre8','%\\qid{1QEb0040}\nAssinale a alternativa que completa corretamente a frase:\n\\\\\nUm \\emph{software} aberto pode \\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(943,'b','SoftLivre9','%\\qid{1QEb0050}\nAssinale a alternativa que completa corretamente a frase:\n\\\\\nUm \\emph{software} aberto pode \\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(944,'c','SoftLivre10','%\\qid{1QEc0010}\n%Ref.: Atividade 6b - Poder sobre o software / Questão 3\nAssinale a melhor afirmativa sobre os tipos de licenças de \\emph{softwares}.','QM','1','remember','no','2019-05-21',NULL,87),(945,'c','SoftLivre11','%\\qid{1QEc0020} \n%Ref.: Atividade 6b - Poder sobre o software / Questão 3\nAssinale a melhor afirmativa sobre os tipos de licenças de \\emph{softwares}.','QM','1','remember','no','2019-05-21',NULL,87),(946,'c','SoftLivre12','%\\qid{1QEc0030} \n%Ref.: Atividade 6b - Poder sobre o software / Questão 3\nAssinale a melhor afirmativa sobre os tipos de licenças de \\emph{softwares}.','QM','1','remember','no','2019-05-21',NULL,87),(947,'c','SoftLivre13','%\\qid{1QEc0040} \n%Ref.: Atividade 6b - Poder sobre o software / Questão 3\nAssinale a melhor afirmativa sobre os tipos de licenças de \\emph{softwares}.','QM','1','remember','no','2019-05-21',NULL,87),(948,'c','SoftLivre14','%\\qid{1QEc0050}    \n%Ref.: Atividade 6b - Poder sobre o software / Questão 3\nAssinale a melhor afirmativa sobre os tipos de licenças de \\emph{softwares}.','QM','1','remember','no','2019-05-21',NULL,87),(949,'d','SoftLivre15','%\\qid{1QEd0010}\n% Aula 02 \nAssinale a melhor alternativa para completar corretamente a frase:\n\\\\\nA virtualização é uma tecnologia usada para \\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(950,'d','SoftLivre16','%\\qid{1QEd0020}\n% Aula 02 \nAssinale a melhor alternativa para completar corretamente a frase:\n\\\\\nA virtualização é uma tecnologia usada para \\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(951,'d','SoftLivre17','%\\qid{1QEd0030}\n% Aula 02 \nAssinale a melhor alternativa para completar corretamente a frase:\n\\\\\nA virtualização é uma tecnologia usada para \\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(952,'d','SoftLivre18','%\\qid{1QEd0040}\n% Aula 02 \nAssinale a melhor alternativa para completar corretamente a frase:\n\\\\\nA virtualização é uma tecnologia usada para \\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(953,'d','SoftLivre19','%\\qid{1QEd0050}  \n% Aula 02 \nAssinale a melhor alternativa para completar corretamente a frase:\n\\\\\nA virtualização é uma tecnologia usada para \\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(954,'e','SoftLivre20','%\\qid{1QEe0010}\n%\nAssinale a melhor alternativa para completar corretamente a frase:\nAlguns comandos no Linux requerem o uso prévio do comando \\texttt{su} para serem executados porque \\_\\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(955,'e','SoftLivre21','%\\qid{1QEe0020}\n%\nAssinale a melhor alternativa para completar corretamente a frase:\nAlguns comandos no Linux requerem o uso prévio do comando \\texttt{su} para serem executados porque \\_\\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(956,'e','SoftLivre22','%\\qid{1QEe0030}\n%\nAssinale a melhor alternativa para completar corretamente a frase:\nAlguns comandos no Linux requerem o uso prévio do comando \\texttt{su} para serem executados porque \\_\\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(957,'e','SoftLivre23','%\\qid{1QEe0040}\n%\nAssinale a melhor alternativa para completar corretamente a frase:\nAlguns comandos no Linux requerem o uso prévio do comando \\texttt{su} para serem executados porque \\_\\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(958,'e','SoftLivre24','%\\qid{1QEe0050}\n%\nAssinale a melhor alternativa para completar corretamente a frase:\nAlguns comandos no Linux requerem o uso prévio do comando \\texttt{su} para serem executados porque \\_\\_\\_\\_\\_\\_.','QM','1','remember','no','2019-05-21',NULL,87),(959,'f','SoftLivre25','%\\qid{1QEf0010}\n%\nOs seguintes dados foram apresentados num terminal:\n\\\\\n{\\tt -rw-r--r-- 3 irin ubun 2017 Aug 11 08:22 x}\n\\\\\nEsses dados permitem saber que','QM','1','remember','no','2019-05-21',NULL,87),(960,'f','SoftLivre26','%\\qid{1QEf0020}   \n%\nOs seguintes dados foram apresentados num terminal:\n\\\\\n{\\tt -rw-r--r-- 3 irin ubun 2017 Aug 11 08:22 x}\n\\\\\nEsses dados permitem saber que','QM','1','remember','no','2019-05-21',NULL,87),(961,'f','SoftLivre27','%\\qid{1QEf0030}\n%\nOs seguintes dados foram apresentados num terminal:\n\\\\\n{\\tt -rw-r--r-- 3 irin ubun 2017 Aug 11 08:22 x}\n\\\\\nEsses dados permitem saber que','QM','1','remember','no','2019-05-21',NULL,87),(962,'f','SoftLivre28','%\\qid{1QEf0040}     % ***REV GAB P/ \"0.2.\"\n%\nOs seguintes dados foram apresentados num terminal:\n\\\\\n{\\tt -r--r--r-- 3 irin ubun 2017 Aug 11 08:22 x}\n\\\\\nEsses dados permitem saber que','QM','1','remember','no','2019-05-21',NULL,87),(963,'f','SoftLivre29','%\\qid{1QEf0050}\n%\nOs seguintes dados foram apresentados num terminal:\n\\\\\n{\\tt --w-r--r-- 3 irin ubun 2017 Aug 11 08:22 x}\n\\\\\nEsses dados permitem saber que','QM','1','remember','no','2019-05-21',NULL,87),(964,'g','SoftLivre30','%\\qid{1QEg0010}\nClassifique as afirmações a seguir, respectivamente, como verdadeira (V) ou falsa (F) e assinale a alternativa correspondente.\n\\\\\n( ) Um produto com licença de uso livre pode receber ISBN.\n\\\\\n( ) O desenvolvedor de um \\emph{software} com licença GPLv2 cobra pela distribuição do programa. Alguém que passe a distribui-lo, ainda que gratuitamente, está violando a licença.\n\\\\\n( ) O usuário não corre o risco de ser prejudicado quando utiliza aplicativos livres pois a própria comunidade de colaboradores cuida dos seus próprios interesses; ao contrário, quando utiliza aplicativos proprietários, fica à mercê das decisões e interesses de uma empresa que busca maximizar o seu ganho financeiro.','QM','1','remember','no','2019-05-21',NULL,87),(965,'g','SoftLivre31','%\\qid{1QEg0020}\nClassifique as afirmações a seguir, respectivamente, como verdadeira (V) ou falsa (F) e assinale a alternativa correspondente.\n\\\\\n( ) Um produto com licença de uso livre pode receber ISBN.\n\\\\\n( ) O desenvolvedor de um \\emph{software} com licença GPLv2 cobra pela distribuição do programa. Alguém que passe a distribui-lo, ainda que gratuitamente, está violando a licença.\n\\\\\n( ) O usuário não corre o risco de ser prejudicado quando utiliza aplicativos livres pois a própria comunidade de colaboradores cuida dos seus próprios interesses; ao contrário, quando utiliza aplicativos proprietários, fica à mercê das decisões e interesses de uma empresa que busca maximizar o seu ganho financeiro.','QM','1','remember','no','2019-05-21',NULL,87),(966,'g','SoftLivre32','%\\qid{1QEg0030}\nClassifique as afirmações a seguir, respectivamente, como verdadeira (V) ou falsa (F) e assinale a alternativa correspondente.\n\\\\\n( ) Um produto com licença de uso livre pode receber ISBN.\n\\\\\n( ) O desenvolvedor de um \\emph{software} com licença GPLv2 cobra pela distribuição do programa. Alguém que passe a distribui-lo, ainda que gratuitamente, está violando a licença.\n\\\\\n( ) O usuário não corre o risco de ser prejudicado quando utiliza aplicativos livres pois a própria comunidade de colaboradores cuida dos seus próprios interesses; ao contrário, quando utiliza aplicativos proprietários, fica à mercê das decisões e interesses de uma empresa que busca maximizar o seu ganho financeiro.','QM','1','remember','no','2019-05-21',NULL,87),(967,'g','SoftLivre33','%\\qid{1QEg0040}\nClassifique as afirmações a seguir, respectivamente, como verdadeira (V) ou falsa (F) e assinale a alternativa correspondente.\n\\\\\n( ) Um produto com licença de uso livre pode receber ISBN.\n\\\\\n( ) O desenvolvedor de um \\emph{software} com licença GPLv2 cobra pela distribuição do programa. Alguém que passe a distribui-lo, ainda que gratuitamente, está violando a licença.\n\\\\\n( ) O usuário não corre o risco de ser prejudicado quando utiliza aplicativos livres pois a própria comunidade de colaboradores cuida dos seus próprios interesses; ao contrário, quando utiliza aplicativos proprietários, fica à mercê das decisões e interesses de uma empresa que busca maximizar o seu ganho financeiro.','QM','1','remember','no','2019-05-21',NULL,87),(968,'g','SoftLivre34','%\\qid{1QEg0050}\nClassifique as afirmações a seguir, respectivamente, como verdadeira (V) ou falsa (F) e assinale a alternativa correspondente.\n\\\\\n( ) Um produto com licença de uso livre pode receber ISBN.\n\\\\\n( ) O desenvolvedor de um \\emph{software} com licença GPLv2 cobra pela distribuição do programa. Alguém que passe a distribui-lo, ainda que gratuitamente, está violando a licença.\n\\\\\n( ) O usuário não corre o risco de ser prejudicado quando utiliza aplicativos livres pois a própria comunidade de colaboradores cuida dos seus próprios interesses; ao contrário, quando utiliza aplicativos proprietários, fica à mercê das decisões e interesses de uma empresa que busca maximizar o seu ganho financeiro.','QM','1','remember','no','2019-05-21',NULL,87),(969,'a','SoftLivre35','%\\qid{2QMa0010}\nUm usuário executou o script a seguir e, quando solicitado, forneceu como entrada o valor 0 (zero).\n\\begin{verbatim}\n#set -x\n#!/bin/bash\nfalse=0; true=1\nOK=$false\nwhile  [ \"$OK\" -ne \"$true\" ] ; do\n   read num\n   if [ \"$num\" -gt 1 ] && [ \"$num\" -lt 10 ] ; then\n      OK=$true\n   else\n      echo \"Erro\"\n   fi\ndone\ni=1\nwhile [ \"$i\" -lt \"$num\" ] ; do\n   echo \"$i * $num = `expr $i \\* $num`\"\n   i=$(($i + 1))\ndone\n\\end{verbatim}\nNestas condições, logo após a entrada, foi impresso:','QM','3','remember','no','2019-05-21',NULL,87),(970,'a','SoftLivre36','%\\qid{2QMa0020}\nUm usuário executou o script a seguir e, quando solicitado, forneceu como entrada o valor 1.\n\\begin{verbatim}\n#set -x\n#!/bin/bash\nfalse=0; true=1\nOK=$false\nwhile  [ \"$OK\" -ne \"$true\" ] ; do\n   read num\n   if [ \"$num\" -gt 1 ] && [ \"$num\" -lt 10 ] ; then\n      OK=$true\n   else\n      echo \"Erro\"\n   fi\ndone\ni=1\nwhile [ \"$i\" -lt \"$num\" ] ; do\n   echo \"$i * $num = `expr $i \\* $num`\"\n   i=$(($i + 1))\ndone\n\\end{verbatim}\nNestas condições, logo após a entrada, foi impresso:','QM','3','remember','no','2019-05-21',NULL,87),(971,'a','SoftLivre37','%\\qid{2QMa0030}\nUm usuário executou o script a seguir e, quando solicitado, forneceu como entrada o valor 2.\n\\begin{verbatim}\n#set -x\n#!/bin/bash\nfalse=0; true=1\nOK=$false\nwhile  [ \"$OK\" -ne \"$true\" ] ; do\n   read num\n   if [ \"$num\" -gt 1 ] && [ \"$num\" -lt 10 ] ; then\n      OK=$true\n   else\n      echo \"Erro\"\n   fi\ndone\ni=1\nwhile [ \"$i\" -lt \"$num\" ] ; do\n   echo \"$i * $num = `expr $i \\* $num`\"\n   i=$(($i + 1))\ndone\n\\end{verbatim}\nNestas condições, logo após a entrada, foi impresso:','QM','3','remember','no','2019-05-21',NULL,87),(972,'a','SoftLivre38','%\\qid{2QMa0040}\nUm usuário executou o script a seguir e, quando solicitado, forneceu como entrada o valor 10.\n\\begin{verbatim}\n#set -x\n#!/bin/bash\nfalse=0; true=1\nOK=$false\nwhile  [ \"$OK\" -ne \"$true\" ] ; do\n   read num\n   if [ \"$num\" -gt 1 ] && [ \"$num\" -lt 10 ] ; then\n      OK=$true\n   else\n      echo \"Erro\"\n   fi\ndone\ni=1\nwhile [ \"$i\" -lt \"$num\" ] ; do\n   echo \"$i * $num = `expr $i \\* $num`\"\n   i=$(($i + 1))\ndone\n\\end{verbatim}\nNestas condições, logo após a entrada, foi impresso:','QM','3','remember','no','2019-05-21',NULL,87),(973,'a','SoftLivre39','%\\qid{2QMa0050}\nUm usuário executou o script a seguir e, quando solicitado, forneceu como entrada o valor 2.\n\\begin{verbatim}\n#set -x\n#!/bin/bash\nfalse=0; true=1\nOK=$false\nwhile  [ \"$OK\" -ne \"$true\" ] ; do\n   read num\n   if [ \"$num\" -gt 1 ] && [ \"$num\" -lt 10 ] ; then\n      OK=$true\n   else\n      echo \"Erro\"\n   fi\ndone\ni=1\nwhile [ \"$i\" -lt \"$num\" ] ; do\n   echo \"$i * $num = `expr $i \\* $num`\"\n   i=$(($i + 1))\ndone\n\\end{verbatim}\nNestas condições, logo após a entrada, foi impresso:','QM','3','remember','no','2019-05-21',NULL,87),(974,'b','SoftLivre40','%\\qid{2QMb0010}\nUm programador executou os comandos a seguir.\n\\begin{verbatim}\n$ sudo groupadd proj\n$ sudo useradd jos -g proj\n$ sudo groups jos\n\\end{verbatim}\nAssinale a alternativa que descreve da melhor maneira o que foi feito.','QM','3','remember','no','2019-05-21',NULL,87),(975,'b','SoftLivre41','%\\qid{2QMb0020}\nUm programador executou os comandos a seguir.\n\\begin{verbatim}\n$ sudo groupadd proj\n$ sudo useradd jos -g proj\n$ sudo groups jos\n\\end{verbatim}\nAssinale a alternativa que descreve da melhor maneira o que foi feito.','QM','3','remember','no','2019-05-21',NULL,87),(976,'b','SoftLivre42','%\\qid{2QMb0030}\nUm programador executou os comandos a seguir.\n\\begin{verbatim}\n$ sudo groupadd proj\n$ sudo useradd jos -g proj\n$ sudo groups jos\n\\end{verbatim}\nAssinale a alternativa que descreve da melhor maneira o que foi feito.','QM','3','remember','no','2019-05-21',NULL,87),(977,'b','SoftLivre43','%\\qid{2QMb0040}\nUm programador executou os comandos a seguir.\n\\begin{verbatim}\n$ sudo groupadd proj\n$ sudo useradd jos -g proj\n$ sudo groups jos\n\\end{verbatim}\nAssinale a alternativa que descreve da melhor maneira o que foi feito.','QM','3','remember','no','2019-05-21',NULL,87),(978,'b','SoftLivre44','%\\qid{2QMb0050}\nUm programador executou os comandos a seguir.\n\\begin{verbatim}\n$ sudo groupadd proj\n$ sudo useradd jos -g proj\n$ sudo groups jos\n\\end{verbatim}\nAssinale a alternativa que descreve da melhor maneira o que foi feito.','QM','3','remember','no','2019-05-21',NULL,87),(979,'c','SoftLivre45','%\\qid{2QMc0010}\n%\nAssinale a alternativa que contém apenas aplicativos de código aberto.','QM','3','remember','no','2019-05-21',NULL,87),(980,'c','SoftLivre46','%\\qid{2QMc0020}\n%\nAssinale a alternativa que contém apenas aplicativos de código aberto.','QM','3','remember','no','2019-05-21',NULL,87),(981,'c','SoftLivre47','%\\qid{2QMc0030}\n%\nAssinale a alternativa que contém apenas aplicativos de código aberto.','QM','3','remember','no','2019-05-21',NULL,87),(982,'c','SoftLivre48','%\\qid{2QMc0040}\n%\nAssinale a alternativa que contém apenas aplicativos de código aberto.','QM','3','remember','no','2019-05-21',NULL,87),(983,'c','SoftLivre49','%\\qid{2QMc0050}\n%\nAssinale a alternativa que contém apenas aplicativos de código aberto.','QM','3','remember','no','2019-05-21',NULL,87),(984,'d','SoftLivre50','%\\qid{2QMc0010}\n%\nAssinale a alternativa que contém apenas licenças livres.','QM','3','remember','no','2019-05-21',NULL,87),(985,'d','SoftLivre51','%\\qid{2QMc0020}\n%\nAssinale a alternativa que contém apenas licenças proprietárias.','QM','3','remember','no','2019-05-21',NULL,87),(986,'d','SoftLivre52','%\\qid{2QMc0030}\n%\nAssinale a alternativa que contém apenas licenças livres.','QM','3','remember','no','2019-05-21',NULL,87),(987,'d','SoftLivre53','%\\qid{2QMc0040}\n%\nAssinale a alternativa que contém apenas licenças proprietárias.','QM','3','remember','no','2019-05-21',NULL,87),(988,'d','SoftLivre54','%\\qid{2QMc0050}\n%\nAssinale a alternativa que contém apenas licenças livres.','QM','3','remember','no','2019-05-21',NULL,87),(989,'e','SoftLivre55','%\\qid{2QMe0010}\n%\nAssinale a alternativa que contém uma característica inexistente em licenças proprietárias.','QM','3','remember','no','2019-05-21',NULL,87),(990,'e','SoftLivre56','%\\qid{2QMe0020}\n%\nAssinale a alternativa que contém uma característica inexistente em licenças proprietárias.','QM','3','remember','no','2019-05-21',NULL,87),(991,'e','SoftLivre57','%\\qid{2QMe0030}\n%\nAssinale a alternativa que contém uma característica inexistente em licenças proprietárias.','QM','3','remember','no','2019-05-21',NULL,87),(992,'e','SoftLivre58','%\\qid{2QMe0040}\n%\nAssinale a alternativa que contém uma característica inexistente em licenças proprietárias.','QM','3','remember','no','2019-05-21',NULL,87),(993,'e','SoftLivre59','%\\qid{2QMe0050}\n%\nAssinale a alternativa que contém uma característica inexistente em licenças proprietárias.','QM','3','remember','no','2019-05-21',NULL,87),(994,'a','SegInfo10','De acordo com The NIST Handbook, segurança computacional NÃO inclui preservação de:','QM','1','remember','no','2019-05-21',NULL,92),(995,'a','SegInfo11','Assinale a alternativa incorreta (afirmação mais imprecisa):','QM','1','remember','no','2019-05-21',NULL,92),(996,'a','SegInfo12','Assinale a alternativa incorreta (afirmação mais imprecisa):','QM','1','remember','no','2019-05-21',NULL,92),(997,'b','SegInfo13','Assinale a alternativa incorreta (afirmação mais imprecisa):','QM','1','remember','no','2019-05-21',NULL,92),(998,'b','SegInfo14','Assinale a alternativa incorreta (afirmação mais imprecisa):','QM','1','remember','no','2019-05-21',NULL,92),(999,'b','SegInfo15','Assinale a alternativa incorreta (afirmação mais imprecisa):','QM','1','remember','no','2019-05-21',NULL,92),(1000,'d','SegInfo2p16','Com relação a cifra de Vigenere, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,91),(1001,'d','SegInfo2p17','Com relação a cifra de Hill, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,91),(1002,'d','SegInfo2p18','Com relação a cifras para confidencialidade, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,91),(1003,'d','SegInfo2p19','Sobre cifras de bloco, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,91),(1004,'f','SegInfo2p210','Sobre funções Hash criptográficas, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,93),(1005,'f','SegInfo2p211','Sobre integridade e autenticação, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,93),(1006,'f','SegInfo2p212','Sobre criptografia assimétrica, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,93),(1007,'f','SegInfo2p213','Com relação ao RSA, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,93),(1008,'h','SegInfo314','Com relação a autenticação e controle de acesso, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,90),(1009,'h','SegInfo315','Com relação a autenticação por senha, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,90),(1010,'i','SegInfo316','Com relação a mecanismo de autenticação, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,90),(1011,'i','SegInfo317','Com relação a biometria, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,90),(1012,'k','SegInfo418','Com relação a Firewalls, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,89),(1013,'k','SegInfo419','Com relação a Firewalls, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,89),(1014,'k','SegInfo420','Com relação a Firewalls, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,89),(1015,'m','SegInfo421','Com relação a IDS, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,89),(1016,'m','SegInfo422','Com relação a IDS, assinale a alternativa incorreta (menos precisa):','QM','1','remember','no','2019-05-21',NULL,89),(1017,'','SegInfoFixas23','Assinale a alternativa incorreta (afirmação mais imprecisa):','QM','3','remember','no','2019-05-21',NULL,88),(1018,'','SegInfoFixas24','Sobre protocolo de acordo de chave, assinale a alternativa incorreta (menos precisa):','QM','3','remember','no','2019-05-21',NULL,88),(1019,'','SegInfoFixas25','Sobre assinatura digital, assinale a alternativa incorreta (menos precisa):','QM','3','remember','no','2019-05-21',NULL,88),(1020,'','SegInfoFixas26','Sobre certificação de chave pública, assinale a alternativa incorreta (menos precisa):','QM','3','remember','no','2019-05-21',NULL,88),(1021,'','SegInfoFixas27','Com relação a VPN, assinale a alternativa incorreta (menos precisa):','QM','3','remember','no','2019-05-21',NULL,88),(1022,'','SegInfoFixas28','Com relação a Firewalls, assinale a alternativa incorreta (menos precisa):','QM','3','remember','no','2019-05-21',NULL,88),(1023,'','SegInfoFixas29','Considerando que autenticação por dois fatores significa o uso de duas técnicas para que a autenticação de usuário ocorra, assinale a alternativa incorreta (menos precisa):','QM','3','remember','no','2019-05-21',NULL,88),(1030,'a','CompMov10','% 01\nAssinale a alternativa INCORRETA:','QM','1','remember','no','2019-05-21',NULL,94),(1031,'b','CompMov11','% 02\nQual alternativa abaixo é verdadeira com relação às afirmações (i) e (ii) a seguir?  \n(i) No desenvolvimento de software para dispositivos móveis devem ser levados em consideração: capacidade do processador, quantidade de memória, consumo de bateria e peso do dispositivo móvel. \n(ii) Devido à mobilidade dos usuários em um ambiente de computação móvel, perdas de conexão durante o handoff e alterações da localização (ponto de acesso) são problemas comuns que precisam ser tratados.','QM','1','remember','no','2019-05-21',NULL,94),(1032,'c','CompMov22','% 03\nQual alternativa abaixo é verdadeira com relação às afirmações (i) e (ii) a seguir?\n(i) A multiplexação de canais permite o compartilhamento do canal de comunicação entre vários usuários tornando o uso da banda de frequências mais eficiente. São exemplos de técnicas de multiplexação de canais: TDMA, FDMA e CDMA.\n(ii) Interferências, chuva e atenuação são possíveis problemas que podem causar distorções/variações no sinal transmitido pelo meio sem fio.','QM','1','remember','no','2019-05-21',NULL,95),(1033,'c','CompMov23','% 03\nQual alternativa abaixo é verdadeira com relação às afirmações (i) e (ii) a seguir?\n(i) Interferências, chuva e atenuação são possíveis problemas que podem causar distorções/variações no sinal transmitido pelo meio sem fio. \n(ii) A multiplexação de canais permite o compartilhamento do canal de comunicação entre vários usuários tornando o uso da banda de frequências mais eficiente. São exemplos de técnicas de multiplexação de canais: TDMA, CDMA e WDMA.','QM','1','remember','no','2019-05-21',NULL,95),(1034,'d','CompMov24','% 04\nSobre a modulação de sinais, pode-se afirmar: \n(i) Os três esquemas de modulação digital são: modulação em amplitude (AM), modulação em frequência (FM) e modulação em fase (PM).\n(ii) Através do processo de modulação analógica, os sinais analógicos são associados a uma onda portadora.\n(iii) Antes de serem irradiados pelo transmissor, os sinais precisam ser convertidos através do processo chamado de Modulação de forma que estes possam ser transportados através de uma onda portadora. \nQual alternativa abaixo é verdadeira com relação às afirmações (i), (ii) e (iii)?','QM','1','remember','no','2019-05-21',NULL,95),(1035,'e','CompMov25','% 05\nAs frequências atribuídas aos sistemas 3G no Brasil são de 1900 MHz e de 2100 MHz para a maioria das operadoras de celular. Em que classificação de frequências estas se encontram?','QM','1','remember','no','2019-05-21',NULL,95),(1036,'f','CompMov26','% 06\nO canal 2 de radiodifusão de televisão no Brasil ocupa uma faixa de frequências que vai de 54 MHz até 60 MHz. Qual é a largura de banda desse canal?','QM','1','remember','no','2019-05-21',NULL,95),(1037,'f','CompMov27','% 06\nO canal 3 de radiodifusão de televisão no Brasil ocupa uma faixa de frequências que vai de 65 MHz até 74 MHz. Qual é a largura de banda desse canal?','QM','1','remember','no','2019-05-21',NULL,95),(1038,'f','CompMov28','% 06\nO canal 7 de radiodifusão de televisão no Brasil ocupa uma faixa de frequências que vai de 174 MHz até 180 MHz. Qual é a largura de banda desse canal?','QM','1','remember','no','2019-05-21',NULL,95),(1039,'g','CompMov39','% 07\nCom relação a uma rede WLAN no modo infraestrutura, é INCORRETO afirmar que:','QM','1','remember','no','2019-05-21',NULL,96),(1040,'g','CompMov310','% 07\nAssinale a alternativa INCORRETA:','QM','1','remember','no','2019-05-21',NULL,96),(1041,'h','CompMov311','% 08\nCom relação à tecnologia Bluetooth, pode-se afirmar:\n(i) Permite a conexão de até 15 dispositivos (sendo um nó mestre e até 14 escravos ativos).\n(ii) Utiliza a banda de frequência de 5 GHz e as taxas de transmissão chegam a 11 Mbps.\n(iii) É baseado no padrão IEEE 802.15.1 e se enquadra na categoria WPAN.\nQual alternativa abaixo é verdadeira com relação às afirmações (i), (ii) e (iii)?','QM','1','remember','no','2019-05-21',NULL,96),(1042,'i','CompMov412','% 09\nQual a distância mínima de reuso de frequências considerando um sistema onde o raio de alcance do sinal é igual a 5 km e o número de células no cluster é igual a 12?','QM','1','remember','no','2019-05-21',NULL,97),(1043,'i','CompMov413','% 09\nQual a distância mínima de reuso de frequências considerando um sistema onde o raio de alcance do sinal é igual a 8 km e o número de células no cluster é igual a 12?','QM','1','remember','no','2019-05-21',NULL,97),(1044,'j','CompMov414','% 10\nAssinale a alternativa que corresponde ao esquema de multiplexação de acesso utilizada pela tecnologia GSM:','QM','1','remember','no','2019-05-21',NULL,97),(1045,'k','CompMov415','% 11\nCom relação às tecnologias de redes celulares, pode-se afirmar:\n(i) HSPA+, WiMAX e LTE são exemplos de padrões 4G que atendem aos requisitos do IMT-Advanced.\n(ii) Tecnologias 3G que evoluíram das tecnologias 2G são: WCDMA (compatível com o padrão GSM e extensões) e CDMA2000 (compatível com o IS-95).\n(iii) O AMPS (Advanced Mobile Phone Service) é um dos representantes da Primeira Geração (1G), é um sistema analógico.\nQual alternativa abaixo é verdadeira com relação às afirmações (i), (ii) e (iii)?','QM','1','remember','no','2019-05-21',NULL,97),(1046,'k','CompMov416','% 11\nCom relação às tecnologias de redes celulares, pode-se afirmar:\n(i) GPRS e IS-45 são tecnologias 2.5G que trouxeram melhorias para o GSM principalmente na velocidade de transmissão.\n(ii) O AMPS (Advanced Mobile Phone Service) é um dos representantes da Primeira Geração (1G), é um sistema analógico.\n(iii) HSPA+, WiMAX e LTE são exemplos de padrões 4G que atendem aos requisitos do IMT-Advanced. \nQual alternativa abaixo é verdadeira com relação às afirmações (i), (ii) e (iii)?','QM','1','remember','no','2019-05-21',NULL,97),(1047,'l','CompMov517','% 12\nQual alternativa abaixo é verdadeira com relação às afirmações (i) e (ii) a seguir a respeito do IP Móvel?\n(i) Para que um computador móvel possa manter as conexões ativas durante uma migração, o IP Móvel utiliza, além do endereço IP original, um endereço IP temporário que é chamado de Careof-Address - CoA.\n(ii) Quando o computador móvel não está em sua rede de origem (nativa), os pacotes destinados ao mesmo são encaminhados para o CoA, a partir do Home Agent (HA) para o Foreign Agent (FA).','QM','1','remember','no','2019-05-21',NULL,98),(1048,'m','CompMov518','% 13\nCom relação ao Gerenciamento de Handover (handoff) em redes sem fio, pode-se afirmar:\n(i) Um dos desafios é fazer com que a migração seja transparente para os usuários e para as aplicações.\n(ii) \"Update por número de handoffs\" é uma das estratégias de handover.\n(iii) As redes que empregam a tecnologia CDMA utilizam a técnica de soft handover.\nQual alternativa abaixo é verdadeira com relação às afirmações (i), (ii) e (iii) ?','QM','1','remember','no','2019-05-21',NULL,98),(1049,'n','CompMov519','% 14\nCom relação ao Gerenciamento de Localização em redes sem fio, assinale a alternativa INCORRETA:','QM','1','remember','no','2019-05-21',NULL,98),(1050,'n','CompMov520','% 14\nAssinale a alternativa que NÃO corresponde a uma estratégia de atualização de localização:','QM','1','remember','no','2019-05-21',NULL,98),(1051,'o','CompMov621','% 15\nAssinale a alternativa INCORRETA:','QM','1','remember','no','2019-05-21',NULL,99),(1052,'o','CompMov622','% 15\nQual alternativa abaixo é verdadeira com relação às afirmações (i) e (ii) a seguir sobre adaptação de software em computação móvel?\n(i) A adaptação pode ser realizada em diferentes níveis: Aplicação, Middleware, SO, etc., porém é mais eficaz quando é tratada somente no nível da aplicação.\n(ii) Um exemplo de adaptação na camada de Middleware é a transformação/redução dos dados enviados (p.ex. áudio/vídeo streaming).','QM','1','remember','no','2019-05-21',NULL,99),(1053,'p','CompMov623','% 16\nAssinale a alternativa CORRETA com relação à arquitetura Cliente/Proxy/Servidor:','QM','1','remember','no','2019-05-21',NULL,99),(1054,'q','CompMov724','% 17\nCom relação ao sistema RFID, assinale a alternativa INCORRETA:','QM','1','remember','no','2019-05-21',NULL,101),(1055,'q','CompMov725','% 17\nSobre a tecnologia RFID, pode-se afirmar:\n(i) É composto por 3 componentes: Antena,Transponder e Transceptor.	\n(ii) O Transponder é a parte do sistema que é anexado ao elemento que se deseja identificar, também é conhecido como Tag.\n(iii) Os Tags ativos recebem a energia por indução eletromagnética que é gerada pelo leitor do RFID. \nQual alternativa abaixo é verdadeira com relação às afirmações (i), (ii) e (iii)?','QM','1','remember','no','2019-05-21',NULL,101),(1056,'r','CompMov726','% 18\nAssinale a alternativa INCORRETA sobre redes de sensores sem fio (RSSF):','QM','1','remember','no','2019-05-21',NULL,101),(1057,'r','CompMov727','% 18\nCom relação às redes de sensores sem fio, pode-se afirmar:\n(i) As unidades (nós) em uma RSSF são autônomas, possuem processador e memória local.\n(ii) A localização dos sensores de uma RSSF é aleatória, não requer intervenção manual.\n(iii) O monitoramento de tráfego em rodovias é um exemplo de aplicação de RSSF.	\nQual alternativa abaixo é verdadeira com relação às afirmações (i), (ii) e (iii)?','QM','1','remember','no','2019-05-21',NULL,101),(1058,'','wind rose','An entry $a_0=(i,j)$ of a matrix is called \\textbf{[[code:direcao]]  [[code:maiormenor]]} if its\r\nvalue is [[code:maiormenor]] than the neighbouring ones positioned at [[code:direcao_viz]], as indicated\r\nin the following table. See left below an example $A=[[code:Linhas]] \\times [[code:Colunas]]$ and right\r\nbelow its corresponding \\textbf{[[code:direcao]]  [[code:maiormenor]]} entries, where ``-\'\' means ``-1\'\'.\r\n\r\n\\begin{table}[h!]\r\n\\centering\r\n\\begin{tabular}{lllll}\r\n\\cline{1-3}\r\n\\multicolumn{1}{|l|}{$a_8=$ Northwest} & \\multicolumn{1}{l|}{$a_1=$ North} & \\multicolumn{1}{l|}{$a_2=$ Northeast} &  &  \\\\ \\cline{1-3}\r\n\\multicolumn{1}{|l|}{$a_7=$ West}      & \\multicolumn{1}{l|}{$a_0=(i,j)$}       & \\multicolumn{1}{l|}{$a_3=$ East}      &  &  \\\\ \\cline{1-3}\r\n\\multicolumn{1}{|l|}{$a_6=$ Southwest} & \\multicolumn{1}{l|}{$a_5=$ South}    & \\multicolumn{1}{l|}{$a_4=$ Southeast}  &  &  \\\\ \\cline{1-3}\r\n                         &                         &                         &  & \r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\vspace{-3mm}\r\n\r\n%\\textbf{Exemplo:} esquerda A e direita \\textbf{[[code:direcao]]  [[code:maiormenor]]} (usar valor -1 no lugar de -).\r\n\r\n\\begin{figure}[h!]\r\n\\centering{\r\n  \\vspace{-1mm}\r\n  \\includegraphics[scale=0.55]{[[code:fig0]]} \\hspace{-3mm}\r\n  \\includegraphics[scale=0.55]{[[code:fig1]]} \r\n}\r\n\\end{figure}\r\n\r\n\\vspace{-3mm}\r\n\\noindent Escreva um programa completo com os seguintes \\textbf{módulos chamados no bloco principal}:\r\n\r\n\\begin{enumerate}[label=(\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item gerar uma matriz $A$ de dimensões  $A=[[code:Linhas]] \\times [[code:Colunas]]$ de inteiros aleatórios entre $0$ e $9$ (código fornecido abaixo $GeraMatriz$);\r\n\\item criar um módulo chamado $imprimeMatriz(A)$ e usar este módulo para imprimir a matriz $A$;\r\n\\item criar um módulo para retornar a matriz  \\textbf{[[code:direcao]]  [[code:maiormenor]]} de $A$ (imprimir o resultado, chamando o módulo anterior).\r\n\\end{enumerate}\r\n\r\n\r\n\\vspace{-1mm}\r\n\\noindent \\textbf{Java:}\r\n\\vspace{0mm}\r\n%\\hline\r\n\\begin{lstlisting}\r\n    static void GeraMatriz(int Mat[][], int L, int C) {\r\n        for (int i = 0; i < L; i++) {\r\n            for (int j = 0; j < C; j++) {\r\n                Mat[i][j] = (int) (Math.random() * 10);  // gera um numero entre 0 e 9\r\n            } } }\r\n\\end{lstlisting}   &  \\\\ %\\hline\r\n\\vspace{1mm}\r\n\r\n\\noindent \\textbf{Portugol:}\r\n\\vspace{-1mm}\r\n%\\hline\r\n\\begin{lstlisting}\r\n    funcao GeraMatriz(inteiro Mat[][], inteiro L, inteiro C) {\r\n  	para (inteiro i = 0; i < L; i++) {\r\n            para (inteiro j = 0; j < C; j++) {\r\n        	Mat[i][j] = Util.sorteia(0,10)  // gera um numero entre 0 e 9  \r\n            } } }\r\n\\end{lstlisting}   &  \\\\ %\\hline\r\n%\\vspace{2mm}\r\n\r\n\\drawLines{55}\r\n\r\n[[def:\r\n# É MAIS FÁCIL TESTAR ESSE CÓDIGO EM https://repl.it\r\n\r\nimport random\r\nimport numpy as np\r\n\r\ndir=random.choice([1,2,3,4,5,6,7,8])  \r\n\r\ndirecaoAll=[\"North\",\"Northeast\",\"West\",\"Southeast\",\"South\",\"Southwest\",\"West\",\"Northwest\"]\r\ndirecao=direcaoAll[dir-1]\r\nmaiormenor=random.choice([\"greater\",\"lesser\"]) \r\n\r\ndef drawMatrix(A,myfile):\r\n  import matplotlib.pyplot as plt\r\n  fig, ax = plt.subplots()\r\n  mat = ax.imshow(A, cmap=\'Pastel1\', interpolation=\'nearest\')\r\n  for x in range(A.shape[0]):\r\n    for y in range(A.shape[1]):\r\n        ax.annotate(str(A[x, y])[0], xy=(y, x), horizontalalignment=\'center\', verticalalignment=\'center\')\r\n  plt.show()\r\n  fig.savefig(\'./tmp/\'+ myfile +\'.png\', dpi=300)\r\n  plt.close()\r\n\r\nm = random.randrange(7,9,1)    # número de linhas\r\nn = random.randrange(15,21,1) # número de colunas\r\nLinhas=m \r\nColunas=n \r\nA = np.random.random((m, n))*10\r\nA = A.astype(int)\r\n\r\n#fig0 =  tempfile.TemporaryFile()\r\nfig0=\"q2_fig0\"\r\ndrawMatrix(A, fig0)\r\n\r\n#direcoes 0      1      2      3      4      5      6        7       8\r\noffset=[[0,0],[-1,0],[-1,1],[0,1],[1,1],[1,0],[1,-1],[0,-1],[-1,-1]]\r\ndef direcoes(offset,dir):\r\n  if dir==1:\r\n    dir1=8\r\n  else:\r\n    dir1=dir-1\r\n  if dir==8:\r\n    dir2=1\r\n  else:\r\n    dir2=dir+1\r\n  return (dir1,dir,dir2)\r\n\r\n(dir1,dir0,dir2) = direcoes(offset,dir)\r\n\r\nB=np.zeros(A.shape)-1\r\nB=B.astype(int)\r\nfor i in range(1,m-1):\r\n  for j in range(1,n-1):\r\n    if maiormenor==\"menor\":\r\n      if A[i+offset[dir1][0],j+offset[dir1][1]] > A[i,j] and A[i+offset[dir0][0],j+offset[dir0][1]] > A[i,j] and A[i+offset[dir2][0],j+offset[dir2][1]] > A[i,j]:\r\n        B[i,j]=A[i,j]\r\n    else:\r\n      if A[i+offset[dir1][0],j+offset[dir1][1]] < A[i,j] and A[i+offset[dir0][0],j+offset[dir0][1]] < A[i,j] and A[i+offset[dir2][0],j+offset[dir2][1]] < A[i,j]:\r\n        B[i,j]=A[i,j]\r\n\r\n#fig1 =  str(tempfile.TemporaryFile().name)\r\nfig1=\"q2_fig1\"\r\ndrawMatrix(B,fig1)\r\n\r\ndirecao_viz=\"$a_\"+str(dir1)+\"$, $a_\"+str(dir0)+\"$, $a_\"+str(dir2)+\"$\"\r\n]]','QT','1','remember','yes','2019-06-04',1,11),(1059,'','grade of student','Consider a matrix matGRADE of 150 rows and 4 columns, where each row represents a student and each column represents the concepts of the evaluations E, Activities, Project and E. This matrix must store in each element with A, B, C, D or F.\r\n\r\nNote that the GeraMat function, which fills an array with randomly generated concepts, is now available  for you to call your main program.\r\n\r\nFor each of the items below, you must write a function and make their respective call in the main program.\r\n\r\n\\vspace{-3mm}\r\n\\begin{enumerate}[label=(\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\r\n\\item Write the \"GeneratesAverage\" function to fill a vector with real numbers in which each element of the vector will represent the average of a student calculated from the concepts in their respective row of the matrix. To calculate the average of each student, consider A = 4.0, B = 3.0, C = 2.0, D = 1.0 and F = 0.0. Consider also the following weights: P1 = [[code:a0]] \\%, Activities = 10 \\%, Project = 15 \\% and P2 = [[code:a1]] \\%. The average of each student will be between 0.0 and 4.0.\r\nExample: If a row of the Matrix has A, A, B, D, the mean will be $ (4 * [[code:a0]]) (4 * 10) + (3 * 15) + (1 * [[code:a1]])) / 100 = [[code:a2]] $\r\n\r\n\r\n\\item Write the FinalGrade function that should receive by parameter the VECTOR generated in item (a) and print on the screen the corresponding concept of each student considering the following rules: \\\\\r\nif VALUE  $< 0.8$, GRADE\\_FINAL = F, otherwise \\\\\r\nif VALUE  $< 1.5$, GRADE\\_FINAL = D, otherwise \\\\\r\nif VALUE  $2.5$, GRADE\\_FINAL = C, otherwise \\\\\r\nif VALUE  $3.6$, GRADE\\_FINAL = B, otherwise \\\\\r\nGRADE \\_FINAL = A \r\n\r\n\\end{enumerate}\r\n\\vspace{-3mm}\r\n\r\n\r\n[[def:\r\n# variáveis a serem usadas no texto da questão e alternativas\r\na0=30#random.randrange(30, 40, 1)  # sortear um número entre 30 e 40\r\na1=75-a0\r\na2 = (4*a0 + 4*10 + 3*15 + 1*a1) / 100 \r\n]]','QT','1','remember','yes','2019-06-04',1,11),(1065,'teo q1','teste de mesa 19.2','Simule a execução do algoritmo \\textbf{MISTÉRIO} através de \"teste de mesa\" e preencha o(s) valor(es) na tabela \\textbf{TESTE DE MESA} anotando o NÚMERO de cada LINHA executada e os valores de cada variável apenas \\textbf{das linhas que modificam (ATRIBUIÇÃO OU LEIA)} até que o programa seja encerrado. Simultaneamente, anote na coluna \\textbf{SAÍDA DE DADOS} todas as saídas  (comando escreva) do programa. Não é necessário repetir valores quando a variável não for atualizada.\r\n \r\n\\newcolumntype{C}{>{\\centering\\arraybackslash}p{1.5em}}\r\n\r\n\\begin{multicols}{2}\r\n\\begin{lstlisting}\r\n\r\nprograma { funcao inicio() {\r\n1  inteiro z=0, j=0, n=[[code:a2]], b=[[code:a3]]\r\n2  inteiro cont=[[code:a4]], c=0\r\n3  n = n + b + cont\r\n4  escreva(\"\\n n=\", n)\r\n5  enquanto (cont < n) {\r\n6      z = z + (b * 1)\r\n7      se (b % 2 == 0) {\r\n8          b = b + 1\r\n9          c = c -1\r\n10        escreva(\"\\nb1=\", b)\r\n11    }\r\n12    senao {\r\n13        b = b -1\r\n14        c = c +1\r\n15        escreva(\"\\nb2=\", b)\r\n16    } \r\n17    se (b % 2 == 0) {\r\n18        c = c * 2\r\n19        escreva(\"\\nc=\", c)\r\n20    }\r\n21    cont = cont + 1\r\n22 }\r\n23 escreva(\"\\nz=\", z)\r\n24 escreva(\"\\nc=\", c)\r\n}} \r\n\\end{lstlisting}  \r\n\r\n\\columnbreak\r\n\\centering\r\n\\hspace{-2.4cm}\r\n\\begin{tabular}{|l|C|C|C|C|C|C|C|C|}\r\n\\hline\r\n\\multicolumn{7}{|c|}{TESTE DE MESA} & \\multicolumn{1}{c|}{\\textbf{SAÍDA DE DADOS}} \\\\ \\hline\r\n{\\tiny LINHA} & z  & j  & n  & b & cont & c &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n                      &    &    &     &    &         &     &    \\\\ \\hline\r\n\\end{tabular}\r\n\r\n\\end{multicols}\r\n\r\n\\\\\r\n\\ \\ \\\r\n\r\n\\newpage\r\n\r\n{\\color{bubbles}\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n}\r\n\r\n\\\\\r\n\\ \\ \\\r\n\\newpage\r\n\r\n[[def:\r\n# para testar, copie e cole o código abaixo em um dos links:\r\n#https://repl.it/languages/python\r\n#import random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5\r\n  i0 = random.randrange(0,4,1) # sorteia uma das 4 variacoes\r\n  v_n    = [0,1,2,1]\r\n  v_b    = [2,2,1,1]\r\n  v_cont = [1,0,0,1]\r\n  a0=0            # z\r\n  a1=0            # j\r\n  a2=v_n[i0]      # n\r\n  a3=v_b[i0]      # b\r\n  a4=v_cont[i0]   # cont\r\n  a5=0            # c\r\n  return [a0,a1,a2,a3,a4,a5]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  z=A[0];j=A[1];n=A[2];b=A[3];cont=A[4];c=A[5]\r\n  mystr = \"linha  z n b cont c \\n\"\r\n  mystr += \"    2  %d %d %d %d %d    %d\\n\" % (z,j,n,b,cont,c)\r\n  n = n + b + cont\r\n  mystr += \"    3  %d %d %d %d %d    %d\\n\" % (z,j,n,b,cont,c)\r\n  mystr += \"    4  %d %d %d %d %d    %d n=%d\\n\" % (z,j,n,b,cont,c,n)\r\n  while cont < n:\r\n    z = z + (b * 1)\r\n    mystr += \"    6  %d %d %d %d %d    %d\\n\" % (z,j,n,b,cont,c)\r\n    if (b % 2 == 0):\r\n      b = b + 1\r\n      mystr += \"    8  %d %d %d %d %d    %d\\n\" % (z,j,n,b,cont,c)\r\n      c = c - 1\r\n      mystr += \"    9  %d %d %d %d %d    %d\\n\" % (z,j,n,b,cont,c)\r\n      mystr += \"   10  %d %d %d %d %d    %d  b1=%d\\n\" % (z,j,n,b,cont,c,b)\r\n    else:\r\n      b = b - 1\r\n      mystr += \"   13  %d %d %d %d %d    %d\\n\" % (z,j,n,b,cont,c)\r\n      c = c + 1\r\n      mystr += \"   14  %d %d %d %d %d    %d\\n\" % (z,j,n,b,cont,c)\r\n      mystr += \"   15  %d %d %d %d %d    %d  b2=%d\\n\" % (z,j,n,b,cont,c,b)\r\n    if (b % 2 == 0):\r\n      c = c * 2\r\n      mystr += \"   18  %d %d %d %d %d    %d\\n\" % (z,j,n,b,cont,c)\r\n      mystr += \"   19  %d %d %d %d %d    %d  c=%d\\n\" % (z,j,n,b,cont,c,c)\r\n    cont = cont + 1\r\n    mystr += \"   21  %d %d %d %d %d    %d\\n\" % (z,j,n,b,cont,c)\r\n\r\n  mystr += \"   23  %d %d %d %d %d    %d  z=%d\\n\" % (z,j,n,b,cont,c,z)\r\n  mystr += \"   24  %d %d %d %d %d    %d  c=%d\\n\" % (z,j,n,b,cont,c,c)\r\n\r\n  mystr += str(len(mystr))\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula = algorithm(A)  \r\n  #if 400<len(mySimula)<500:\r\n  #print A\r\n  #print mySimula\r\n  break\r\n]]','QT','1','remember','yes','2019-07-01',20,3),(1066,'teo q2','if-promoção passagem','Uma companhia aérea realiza uma campanha para distribuição de desconto em passagens e prêmios aos clientes tais como: (a) despacho de passagem gratuito; (b) assento mais espaçoso; (c) refeições durante o voo; (d) visitas a cabine de comando. O valor do desconto e/ou a quantidade de prêmios dependerá da idade do passageiro e da pontuação acumulada em voos anteriores.  Escreva um programa para exibir o valor do desconto, o valor final da passagem (com desconto) e a vantagem obtida pelo cliente conforme tabela a seguir.\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\begin{tabular}{|r|r|r|c|}\r\n\\hline\r\n\\multicolumn{1}{|c|}{\\textbf{Idade}} & \\multicolumn{1}{c|}{\\textbf{Pontuação acumulada}} & \\multicolumn{1}{c|}{\\textbf{Desconto}} & \\multicolumn{1}{c|}{\\textbf{Quantidade de Prêmios}} \\\\ \\hline\r\nAcima de [[code:a0]] anos                               & Acima de [[code:a2]]  pontos & [[code:\"%7.2f\"%(a5)]] \\% & [[code:a9]] \\\\ \\hline\r\nAcima de [[code:a0]] anos                               &           Até [[code:a2]]  pontos & [[code:\"%7.2f\"%(a6)]] \\% & [[code:a10]]  \\\\ \\hline\r\n$\\geq$ [[code:a1]] e  $\\leq$ [[code:a0]]  anos & Acima de [[code:a3]]  pontos & [[code:\"%7.2f\"%(a7)]] \\% & [[code:a11]] \\\\ \\hline\r\nAbaixo de [[code:a1]] anos                              &      Acima [[code:a4]]  pontos & [[code:\"%7.2f\"%(a8)]] \\% & [[code:a12]] \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\\ \r\n\r\n\\noindent\\textbf{Exemplo:}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{58}\r\n\r\n\\newpage\r\n\r\n[[def:\r\n#https://repl.it/languages/python\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15\r\n  a0 = random.randrange(75,81)       # anos\r\n  a1 = random.randrange(65, 75, 1)  # anos\r\n  a2 = random.randrange(  900,1100, 1) # faixa 1 - pontos\r\n  a3 = random.randrange(4000, 6000, 1) # faixa 1- pontos\r\n  a4 = random.randrange(7000, 9000, 1) # faixa 1- pontos\r\n\r\n  a5 = random.randrange(90,150, 1)/10.0 # faixa 2- desconto\r\n  a6 = random.randrange(0,30, 1)/10.0     # faixa 2- desconto\r\n  a7 = random.randrange(20,50, 1) /10.0  # faixa 2- desconto\r\n  a8 = random.randrange(60,80, 1)/10.0   # faixa 2 - desconto\r\n# -- edson comentou abaixo\r\n#  a9   = random.randrange(1,4, 1) # premio\r\n#  a10 = random.randrange(1,3, 1) # premio\r\n#  a11 = random.randrange(0,3, 1) # premio\r\n#  a12 = random.randrange(0,3, 1) # premio\r\n\r\n#--- edson inseriu abaixo\r\n  ipr0 = random.randrange(0,4,1) # sorteia uma das 4 variacoes\r\n  v_p1    = [4,3,2,1]\r\n  v_p2    = [2,1,0,0]\r\n  v_p3    = [2,1,2,1]\r\n  v_p4    = [3,2,1,2] \r\n\r\n  a9=v_p1[ipr0]  #premio    \r\n  a10=v_p2[ipr0]  #premio     \r\n  a11=v_p3[ipr0]   #premio\r\n  a12=v_p4[ipr0]   #premio\r\n#====\r\n  \r\n  # entradas\r\n  a13 =  random.randrange(3,9, 1)*100      # valor\r\n  a14 =  random.randrange(60,90, 1)          # idade\r\n  a15 =  random.randrange(500,900, 1)*10 # pontuacao\r\n\r\n  return [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  valor  = A[13]\r\n  idade = A[14]\r\n  pontos = A[15]\r\n  desconto = 0.0\r\n  premios = 0\r\n\r\n  mystr  = \"Entradas: Valor Passagem = %8.2f;  Idade =  %d;  Pontuação = %d \\n\\n\" % (valor,idade,pontos) \r\n  if (idade > A[0]):\r\n    if (pontos > A[2]):\r\n      desconto = valor * A[5]/100.0	\r\n      premios = A[9]\r\n    else:	    	   \r\n      premios=A[10]\r\n  else:\r\n    if (idade >= A[1]):\r\n      if (pontos > A[3]):\r\n        desconto = valor * A[8]/100.0	\r\n        premios = A[11]		    	   \r\n      else:\r\n        if (pontos > A[4]):\r\n          desconto = valor * A[7]/100.0\r\n\r\n  mystr  += \"Saida: Desconto = %8.2f;  Valor Final Passagem =  %8.2f;  Premio = %d \\n\" % (desconto,valor-desconto,premios) \r\n\r\n\r\n  return str(mystr)\r\n\r\nA=myRandom()\r\nmySimula = algorithm(A) \r\n#print A\r\n#print mySimula \r\n]]','QT','2','remember','yes','2019-07-01',20,2),(1067,'teo q3','while-promoção restaurante','Uma pesquisa pretende coletar alguns dados em “restaurantes por quilo” de modo a estudar o perfil de consumo de modo a realizar uma campanha para orientação nutricional. Escreva um programa que registre os seguintes dados de cada consumidor:\r\n\r\n\\begin{itemize}\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Peso em gramas (da refeição);\r\n\\item Tipo do prato: será informado um número (1 ou 2), sendo que 1 indica \"prato equilibrado\", 2 indica \"prato desequilibrado\".\r\n\\end{itemize}\r\n\r\n\\noindent Considere que a digitação será encerrada quando for digitado peso igual a zero.\r\n\r\n\\vspace{3mm}\\noindent Faça a validação de dados do \"tipo do prato\" que deve estar entre 1 e 2.\r\n\r\n\\vspace{3mm}\\noindent Sem que o consumidor seja avisado previamente será dado um desconto de $R\\$ [[code:\"%7.2f\"%(a0)]]$ reais no valor da conta caso  o  prato seja caracterizados como “prato equilibrado” e pese entre [[code:a1]] e [[code:a2]] gramas (inclusive [[code:a1]] e [[code:a2]]).\r\n\r\n\\vspace{3mm}\\noindent O programa deve imprimir para cada usuário o valor da sua conta (sem o desconto e com o desconto), considerando que o valor do quilo  nesse restaurante é de $R\\$ [[code:\"%7.2f\"%(a3)]]$ reais.\r\n\r\n\\vspace{3mm}\\noindent O programa deve imprimir também ao final:\r\n\r\n\\begin{enumerate}[label=\\alph*)]\\itemsep0pt\\parskip0pt\\parsep0pt\r\n\\item Quantidade total de clientes;\r\n\\item Quantidade de Pratos do Tipo 1 com desconto;\r\n\\item Valor médio dos Pratos do Tipo 2.\r\n\\end{enumerate}\r\n\r\n\\noindent A saída de dados deve ser feita no formato abaixo:\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula1]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{45}\r\n\r\n[[def:\r\n#https://repl.it/languages/python\r\n\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3\r\n  a0 = random.randrange(3,10) # desconto\r\n  a1 = random.randrange(5,8)*50 # peso\r\n  a2 = random.randrange(8,10)*50 # peso\r\n  a3 = random.randrange(40,70) # valor quilo\r\n  return [a0,a1,a2,a3]\r\n\r\ndef algorithm(A):\r\n  mystr=\"\"\r\n  total=q1desc=q2=0\r\n  tot2 = 0.0\r\n  peso = random.randrange(1,6)*100\r\n  while (peso > 0):\r\n    total+=1\r\n    tipo = random.randrange(1,3)\r\n    valor = peso * A[3] / 1000.0\r\n    comdesc = valor\r\n    if (tipo == 1):\r\n      if (peso >= A[1] and peso <= A[2]):\r\n        comdesc = comdesc - A[0]\r\n        q1desc+=1\r\n    else:\r\n      q2+=1\r\n      tot2 = tot2 + valor\r\n    mystr+=\"Peso: %3d  Tipo: %d  Sem Desconto: %5.2f  Com Desconto: %5.2f \\n\" % (peso,tipo,valor,comdesc)\r\n    peso = random.randrange(0,60)*10\r\n  if (q2 > 0):\r\n    med2 = tot2/q2\r\n  else:\r\n    med2 = 0\r\n    \r\n  mystr+=\"\\nQuantidade total de clientes: %18d\" % (total)\r\n  mystr+=\"\\nQuantidade de Pratos do Tipo 1 com desconto: %3d\" % (q1desc)\r\n  mystr+=\"\\nValor medio dos pratos do Tipo 2:  %16.2f\" % (med2)\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula1 = algorithm(A)\r\n  if 1000<len(mySimula1)<1200:\r\n    #print A\r\n    #print mySimula1\r\n    #print len(mySimula1)\r\n    break\r\n]]','QT','3','remember','yes','2019-07-01',20,3),(1071,'Juros 7','Prova 1','Dada a tabela com sequência mensal de taxas de juros (\\%) : [[code:i01]];  [[code:i02]];  [[code:i03]];  [[code:i04]]; [[code:i05]] e [[code:i06]]. Usando o método dos juros compostos. Calcule a taxa de juros mensal equivalente.\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\n\r\nimport random\r\n\r\ni1=random.randrange(10,20)/10.0 # Sortear juros entre 1% à 2%\r\ni2=random.randrange(10,20)/10.0\r\ni3=random.randrange(10,20)/10.0\r\ni4=random.randrange(10,20)/10.0\r\ni5=random.randrange(10,20)/10.0\r\ni6=random.randrange(10,20)/10.0\r\ni01= \"%.2f\" % (i1)\r\ni01=PT_BR(i01)\r\ni02= \"%.2f\" % (i2)\r\ni02=PT_BR(i02)\r\ni03= \"%.2f\" % (i3)\r\ni03=PT_BR(i03)\r\ni04= \"%.2f\" % (i4)\r\ni04=PT_BR(i04)\r\ni05= \"%.2f\" % (i5)\r\ni05=PT_BR(i05)\r\ni06= \"%.2f\" % (i6)\r\ni06=PT_BR(i06)\r\n\r\nit=(1+i1/100)*(1+i2/100)*(1+i3/100)*(1+i4/100)*(1+i5/100)*(1+i6/100)-1\r\nim=((1+it)**(1/6))-1\r\nim=im*100\r\n \r\nRESP=\"%.2f \" % (im)\r\nRESP=PT_BR(RESP)\r\nglobal correctAnswer, e01\r\ncorrectAnswer= RESP\r\n\r\ne01 = \"%.2f\" % (im + random.randrange(1,3)/10.0)\r\ne01=PT_BR(e01)\r\n\r\ne02 = \"%.2f\" % (im + random.randrange(3,6)/10.0)\r\ne02=PT_BR(e02)\r\n\r\ne03 = \"%.2f\" % (im + random.randrange(6,9)/10.0)\r\ne03=PT_BR(e03)\r\n\r\ne04 = \"%.2f\" % (im - random.randrange(1,9)/10.0)\r\ne04=PT_BR(e04)\r\n\r\n\r\n]]','QM','1','remember','yes','2019-07-11',63,110),(1072,'Juros2','Prova 1','Dada a tabela com sequência de taxas de juros (\\%) mensais : [[code:i01]];  [[code:i02]];  [[code:i03]];  [[code:i04]]; [[code:i05]] e [[code:i06]]. Usando o conceito de juros composto. Calcule a taxa de juros anual equivalente.\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\n\r\ni1=random.randrange(10,20)/10.0 # Sortear juros entre 1% à 2%\r\ni2=random.randrange(10,20)/10.0\r\ni3=random.randrange(10,20)/10.0\r\ni4=random.randrange(10,20)/10.0\r\ni5=random.randrange(10,20)/10.0\r\ni6=random.randrange(10,20)/10.0\r\ni01= \"%.2f\" % (i1)\r\ni01=PT_BR(i01)\r\ni02= \"%.2f\" % (i2)\r\ni02=PT_BR(i02)\r\ni03= \"%.2f\" % (i3)\r\ni03=PT_BR(i03)\r\ni04= \"%.2f\" % (i4)\r\ni04=PT_BR(i04)\r\ni05= \"%.2f\" % (i5)\r\ni05=PT_BR(i05)\r\ni06= \"%.2f\" % (i6)\r\ni06=PT_BR(i06)\r\n\r\nit=(1+i1/100)*(1+i2/100)*(1+i3/100)*(1+i4/100)*(1+i5/100)*(1+i6/100)-1\r\nia=((1+it)**(2))-1\r\nia=ia*100\r\nRESP=\"%.2f\"% (ia)\r\nRESP=PT_BR(ia)\r\n\r\nglobal correctAnswer, e01\r\ncorrectAnswer= RESP\r\n\r\ne01 = \"%.2f\" % (ia + random.randrange(1,3)/10.0)\r\ne01=PT_BR(e01)\r\ne02 = \"%.2f\" % (ia + random.randrange(3,6)/10.0)\r\ne02=PT_BR(e02)\r\ne03 = \"%.2f\" % (ia + random.randrange(6,9)/10.0)\r\ne03=PT_BR(e03)\r\ne04 = \"%.2f\" % (ia - random.randrange(1,9)/10.0)\r\ne04=PT_BR(e04)\r\n\r\n]]','QM','1','remember','yes','2019-07-11',63,110),(1075,'VPL1','Prova 1','Uma empresa pretende substituir uma extrusora de polímeros, cujo o valor de um novo é de R\\$ [[code:P01]]  e o antigo equipamento foi vendido por R\\$ [[code:P02]]. O investimento proporciona ganho de R\\$ [[code:U01]] por ano e finalmente após [[code:N]] anos apresenta o valor residual de R\\$ [[code:R01]]. A empresa adota a taxa mímina de atratividade de [[code:T01]] \\% ao ano. Calcule o VPL do investimento da nova extrusora. \r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n# para testar\r\n\r\nimport random\r\nP1=random.randrange(25,30)*10000.0  # Valor entre R$ 250.000,00 à R$ 250.000,00\r\nP2=random.randrange(45,50)*1000.0    # Valor entre R$  45.000,00 à R$  50.000,00\r\nU =random.randrange(25,50)*1000.0     # Valor entre R$  25.000,00 à R$  50.000,00\r\nR =random.randrange(10,20)*1000.0     # Valor entre R$  10.000,00 à R$  20.000,00\r\nT= random.randrange(8,20)                   # Valor entre 08% a 20% \r\nN= random.randrange(8,15)                   # Valor entre 8 à 15 anos\r\n\r\nP01= PT_BR(\"%.2f\" % (P1))\r\nP02= PT_BR(\"%.2f\" % (P2))\r\nU01= PT_BR(\"%.2f\" % (U))\r\nR01= PT_BR(\"%.2f\" % (R))\r\nT01= PT_BR(\"%.2f\" % (T))\r\n\r\nK=(((1+T/100)**N)-1)/((T/100)*(1+T/100)**N)\r\nL=(1/((1+T/100)**N))\r\n\r\nVPL=-(P1-P2)+U*K +R*L\r\nRESP=PT_BR(\"%.2f \" % VPL)\r\nglobal correctAnswer, e01\r\ncorrectAnswer= RESP\r\ne01 =PT_BR( \"%.2f\" % ((P1-P2)-U*L-R*K))\r\ne02 =PT_BR( \"%.2f\" % (P1-U*K))\r\ne03 =PT_BR( \"%.2f\" % (P2-R*L))\r\ne04 =PT_BR(\"%.2f\" % (-VPL+R))\r\n\r\n]]','QM','2','remember','yes','2019-07-11',63,111),(1077,'Juros3','Prova 1','Foi realizado um investimento inicial de R\\$ [[code:V1]]. Dada a tabela com sequência de taxas de juros (\\%) : [[code:i01]];  [[code:i02]];  [[code:i03]];  [[code:i04]]; [[code:i05]] e [[code:i06]]. Calcule o rendimento do investimento utlizando o método dos juros compostos.\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\ni1=random.randrange(10,20)/10.0 # Sortear juros entre 1% à 2%\r\ni2=random.randrange(10,20)/10.0\r\ni3=random.randrange(10,20)/10.0\r\ni4=random.randrange(10,20)/10.0\r\ni5=random.randrange(10,20)/10.0\r\ni6=random.randrange(10,20)/10.0\r\nVI=random.randrange(10,20)*1000\r\n\r\ni01= PT_BR(\"%.2f\" % (i1))\r\ni02= PT_BR(\"%.2f\" % (i2))\r\ni03= PT_BR(\"%.2f\" % (i3))\r\ni04= PT_BR( \"%.2f\" % (i4))\r\ni05= PT_BR(\"%.2f\" % (i5))\r\ni06= PT_BR(\"%.2f\" % (i6))\r\nV1= PT_BR(\"%.2f\" % (VI))\r\n\r\nit=(1+i1/100)*(1+i2/100)*(1+i3/100)*(1+i4/100)*(1+i5/100)*(1+i6/100)-1\r\nVF=VI*it\r\nRESP= PT_BR( \"%.2f \" % VF)\r\n\r\nglobal correctAnswer, e01\r\ncorrectAnswer= RESP\r\ne01 = PT_BR(\"%.2f\" % (VF+VF/2))\r\ne02 = PT_BR(\"%.2f\" % (VI*0.1))\r\ne03 = PT_BR( \"%.2f\" % (VF*.2))\r\ne04 = PT_BR(\"%.2f\" % (VF*0.8))\r\n\r\n]]','QM','1','remember','yes','2019-07-12',63,110),(1078,'Juros4','Prova 1','Uma TV está sendo ofertada, cujo o preço a vista é de R\\$ [[code:V]]. Se a taxa de juros cobrada for de [[code:jr]] \\% ao mês em regime de juros compostos, pede-se determinar o valor da prestação com [[code:PX]] \\% de entrada e financiada em [[code:NR]] meses.\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n# para testar\r\n\r\nimport random\r\nimport random\r\nJR =random.randrange(10,20)/10.0 # Sortear juros entre 1% à 2%\r\nVR =random.randrange(10,20)*100 # Sortear o valor da TV \r\nPR =random.randrange(00,80)      # Sortear o percentual de entrada\r\nNR =random.randrange(10,24)      # Sortear a quantidade de parcelas\r\n\r\nV=PT_BR( \"%.2f\" % (VR))\r\njr=PT_BR(\"%.2f\" % (JR))\r\nPX=PT_BR(\"%.2f\" % (PR))\r\n\r\n\r\nVP=VR*(1-PR/100)*(((1+JR/100)**NR)*JR/100)/((1+JR/100)**NR-1)\r\n \r\nRESP=PT_BR( \"%.2f \" % VP)\r\n\r\nglobal correctAnswer, e01\r\ncorrectAnswer=RESP\r\ne01 = PT_BR(\"%.2f\" % (VP+VP/2))\r\ne02 = PT_BR(\"%.2f\" % (VR*0.1))\r\ne03 = PT_BR(\"%.2f\" % (VP*0.2))\r\ne04 = PT_BR(\"%.2f\" % (VP*0.8))\r\n\r\n]]','QM','1','remember','yes','2019-07-12',63,110),(1079,'VPL2','Prova 1','Uma empresa está analizando uma proposta de projeto que envolve um investimento inicial de R\\$ [[code:P01]], economia anual de R\\$ [[code:U01]] e no final de [[code:N]] anos e proporciona um valor residual de R\\$ [[code:R01]]. A taxa mínima de atratividade da empresa é de 10,00 \\% ao ano. Calcule a Taxa Interna de Retorno - TIR da proposta. \r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n# para testar\r\nimport random\r\nimport math\r\n\r\nP =random.randrange(40,50)*10000.0  # Valor entre R$ 420.000,00 à R$ 500.000,00\r\nU =random.randrange(80,105)*1000.0  # Valor entre R$  80.000,00 à R$ 105.000,00\r\nR =random.randrange(10,18)*10000.0  # Valor entre R$ 100.000,00 à R$ 180.000,00\r\nN =5\r\n\r\nP01= PT_BR(\"%.2f\" % (P))\r\nU01= PT_BR(\"%.2f\" % (U))\r\nR01= PT_BR(\"%.2f\" % (R))\r\n\r\n#P=300000\r\n#U= 60000\r\n#R=180000\r\n\r\nxn=1.1\r\nepsilon=1e-6\r\nmax_iter=10\r\nn=0\r\n#fx=P*xn**(N+1)-(P+U)*xn**N -R*xn+(U+R)\r\n#dfx=(N+1)*P*xn**N-N*(P+U)*xn**(N-1)-R\r\n#while n<max_iter or abs((fx))>epsilon:\r\nparada=0\r\nwhile parada==0:\r\n  fx=P*xn**(N+1)-(P+U)*xn**N -R*xn+(U+R)\r\n  dfx=(N+1)*P*xn**N-N*(P+U)*xn**(N-1)-R\r\n  n=n+1\r\n  xn=xn-fx/dfx\r\n  if abs(fx)<epsilon:\r\n    parada=1\r\n  if n>max_iter:\r\n    parada=1\r\n\r\njuros=(xn-1)*100\r\nRESP=PT_BR(\"%.2f \" % juros)\r\nglobal correctAnswer, e01\r\ncorrectAnswer= RESP\r\ne01 = PT_BR(\"%.2f\" % (juros*0.8))\r\ne02 = PT_BR(\"%.2f\" % (juros*1.1))\r\ne03 = PT_BR(\"%.2f\" % (juros*0.9))\r\ne04 = PT_BR(\"%.2f\" % (juros*.6))\r\n\r\n]]','QM','2','remember','yes','2019-07-12',63,111),(1080,'Juros5','Prova 1','Sobre o comportamento de um mercado,observa-se que o investimento diminui a uma taxa proporcional à quantidade presente. Se inicialmente a quantidades de investidores é de [[code:N01]] mil, observa-se que após [[code:T0]] anos, perderam [[code:P01]] \\% da quantidade original. Determine o número de investidores após [[code:TX]] anos.\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n# para testar\r\n\r\nimport random\r\nimport math\r\nfrom math import exp, expm1\r\nN0 =random.randrange(40,60)         # Valor entre  40 a 60\r\nT0 =random.randrange(2,6)           # Valor entre  2 a 6 anos\r\nP0 =random.randrange(5,15)          # Valor entre  5 a 15%  \r\nTX =random.randrange(2,6)           # Valor entre  2 a 6 anos\r\n\r\nN01= PT_BR(\"%.2f\" % (N0))\r\nP01= PT_BR( \"%.2f\" % (P0))\r\n\r\nk=(1/TX)*math.log((1-P0/100))\r\n\r\nNT=N0*math.exp(k*TX)\r\nRESP=PT_BR( \"%.2f \" % NT)\r\n\r\nglobal correctAnswer, e01\r\ncorrectAnswer=RESP\r\ne01 = PT_BR(\"%.2f\" % (NT/2))\r\ne02 = PT_BR(\"%.2f\" % (NT/3))\r\ne03 = PT_BR(\"%.2f\" % (NT/4))\r\ne04 = PT_BR(\"%.2f\" % (NT*TX/100))\r\n\r\n]]','QM','1','remember','yes','2019-07-13',63,110),(1083,'Juros6','Prova 1','Uma loja de eletrodomésticos oferece plano de financiamento para um produto cujo preço à vista é de R\\$ [[code:VA1]].  A loja oferece a proposta com entrada de R\\$ [[code:EX1]] e mais [[code:NP]] prestações mensais iguais de R\\$ [[code:UX]]. Calcule a taxa de juros mensal (\\%) cobrada pela loja em regime de juros compostos.\r\n\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\nimport math\r\n\r\n\r\nfrom math import exp, expm1\r\nVA =random.randrange(1000,2000)       # Valor a vista entre  1000 a 2000\r\nPE =random.randrange(10,40)          # Valor de entrada de 10 a 40%\r\nNP =random.randrange(5,15)          # Número de parcelas de 6 a 15 \r\nJR =random.randrange(10,25)/10.0    # Juros entre 1 a 2,5%\r\n\r\n\r\nEN=(PE/100)*VA\r\nix=JR/100\r\nK=ix*(1+ix)**NP\r\nL=(1+ix)**NP-1\r\nEX=EN*PE/100\r\nP=VA-EX\r\nU=P*K/L\r\nix = ix*100\r\n\r\nVA1=PT_BR( \"%.2f\" % (VA))\r\nEX1=PT_BR( \"%.2f\" % (EX))\r\nUX = PT_BR(\"%.2f\" % (U))\r\nRESP=PT_BR(\"%.4f \" % ix)\r\n\r\nglobal correctAnswer, e01\r\ncorrectAnswer= RESP\r\ne01 = PT_BR( \"%.4f\" % (ix*1.2))\r\ne02 = PT_BR(\"%.4f\" % (ix*0.8))\r\ne03 = PT_BR(\"%.4f\" % (ix*0.7))\r\ne04 = PT_BR(\"%.4f\" % (ix/2))\r\n\r\n]]','QM','1','remember','yes','2019-07-18',63,110),(1084,'a','SistemasEnergia0','% 01\nQual afirmação é a mais correta sobre energia?','QM','1','remember','no','2019-08-02',1,112),(1085,'a','SistemasEnergia1','% 01\nQual afirmação é a mais correta sobre energia?','QM','1','remember','no','2019-08-02',1,112),(1086,'a','SistemasEnergia2','% 01\nQual afirmação é a mais correta sobre energia?','QM','1','remember','no','2019-08-02',1,112),(1087,'b','SistemasEnergia3','% 02\nUma massa inicialmente em repouso de 8 kg é elevada 13 m por uma força de 120 N. A velocidade final é de 10 m/s. Determine a energia perdida por dissipações na forma de calor. Considere g = 9,8 m/s2.','QM','1','remember','no','2019-08-02',1,112),(1088,'b','SistemasEnergia4','% 02\nUma massa inicialmente em repouso de 8 kg é elevada 13 m por uma força de 118 N. A velocidade final é de 10 m/s. Determine a energia perdida por dissipações na forma de calor. Considere g = 9,8 m/s2.','QM','1','remember','no','2019-08-02',1,112),(1089,'b','SistemasEnergia5','% 02\nUma massa inicialmente em repouso de 8 kg é elevada 13 m por uma força de 115 N. A velocidade final é de 10 m/s. Determine a energia perdida por dissipações na forma de calor. Considere g = 9,8 m/s2.','QM','1','remember','no','2019-08-02',1,112),(1090,'b','SistemasEnergia6','% 02\nUma massa inicialmente em repouso de 8 kg é elevada 13 m por uma força de 112 N. A velocidade final é de 10 m/s. Determine a energia perdida por dissipações na forma de calor. Considere g = 9,8 m/s2.','QM','1','remember','no','2019-08-02',1,112),(1091,'b','SistemasEnergia7','% 02\nUma massa inicialmente em repouso de 8 kg é elevada 13 m por uma força de 110 N. A velocidade final é de 10 m/s. Determine a energia perdida por dissipações na forma de calor. Considere g = 9,8 m/s2.','QM','1','remember','no','2019-08-02',1,112),(1092,'c','SistemasEnergia8','% 03\nConsidere que a energia que se aproveita da combustão de 1 átomo de C seja 4,08 eV. Quanta energia é obtida da combustão de 1 kg de carvão (C) com 5 porcento de impureza em massa?','QM','1','remember','no','2019-08-02',1,112),(1093,'c','SistemasEnergia9','% 03\nConsidere que a energia que se aproveita da combustão de 1 átomo de C seja 4,08 eV. Quanta energia é obtida da combustão de 1 kg de carvão (C) com 20 porcento de impureza em massa?','QM','1','remember','no','2019-08-02',1,112),(1094,'c','SistemasEnergia10','% 03\nConsidere que a energia que se aproveita da combustão de 1 átomo de C seja 4,08 eV. Quanta energia é obtida da combustão de 0,9 kg de carvão (C) com 5 porcento de impureza em massa?','QM','1','remember','no','2019-08-02',1,112),(1095,'c','SistemasEnergia11','% 03\nUm país consome anualmente 500 TWh de energia gerada a partir de reatores nucleares a fissão. Determine a massa de combustível que é transformada em energia em 1 ano. Dados: 1 tera (T) equivale a 10E12; velocidade da luz igual 3E8 m/s; h significa hora 3E5 lê-se 3 x 10 elevado a 5.','QM','1','remember','no','2019-08-02',1,112),(1096,'c','SistemasEnergia12','% 03\nUm país consome anualmente 550 TWh de energia gerada a partir de reatores nucleares a fissão. Determine a massa de combustível que é transformada em energia em 1 ano. Dados: 1 tera (T) equivale a 10E12; velocidade da luz igual 3E8 m/s; h significa hora e 3E5 lê-se 3 x 10 elevado a 5.','QM','1','remember','no','2019-08-02',1,112),(1097,'c','SistemasEnergia13','% 03\nUm país consome anualmente 450 TWh de energia gerada a partir de reatores nucleares a fissão. Determine a massa de combustível que é transformada em energia em 1 ano. Dados: 1 tera (T) equivale a 10E12; velocidade da luz igual 3E8 m/s; h significa hora e 3E5 lê-se 3 x 10 elevado a 5.','QM','1','remember','no','2019-08-02',1,112),(1098,'d','SistemasEnergia14','% 04\nQual alternativa é correta?','QM','1','remember','no','2019-08-02',1,112),(1099,'d','SistemasEnergia15','% 04\nQual alternativa é correta?','QM','1','remember','no','2019-08-02',1,112),(1100,'d','SistemasEnergia16','% 04\nQual alternativa é errada?','QM','1','remember','no','2019-08-02',1,112),(1101,'d','SistemasEnergia17','% 04\nQual alternativa é errada?','QM','1','remember','no','2019-08-02',1,112),(1102,'e','SistemasEnergia18','% 05\nComo se obtém a potência?','QM','1','remember','no','2019-08-02',1,112),(1103,'e','SistemasEnergia19','% 05\nComo se obtém a energia cinética de rotação?','QM','1','remember','no','2019-08-02',1,112),(1104,'e','SistemasEnergia20','% 05\nQual afirmação é a mais correta sobre potência de rotação?','QM','1','remember','no','2019-08-02',1,112),(1105,'e','SistemasEnergia21','% 05\nSobre a potência de uma turbina a vapor o que podemos afirmar?','QM','1','remember','no','2019-08-02',1,112),(1106,'f','SistemasEnergia22','% 06\nQual alternativa é correta?','QM','1','remember','no','2019-08-02',1,112),(1107,'f','SistemasEnergia23','% 06\nEscolha a alternativa errada.','QM','1','remember','no','2019-08-02',1,112),(1108,'f','SistemasEnergia24','% 06\nQual alternativa é correta?','QM','1','remember','no','2019-08-02',1,112),(1109,'g','SistemasEnergia25','% 07\nQual alternativa é errada?','QM','1','remember','no','2019-08-02',1,112),(1110,'g','SistemasEnergia26','% 07\nQual alternativa é errada?','QM','1','remember','no','2019-08-02',1,112),(1111,'g','SistemasEnergia27','% 07\nQual alternativa é errada?','QM','1','remember','no','2019-08-02',1,112),(1112,'h','SistemasEnergia28','% 08 \nUma turbina a vapor opera em regime permanente. Na entrada, a vazão mássica de vapor é 4 kg/s, a pressão é 6 MPa e a temperatura é 500 oC, isto é, o vapor encontra-se superaquecido. Na saída, o vapor encontra-se na pressão de 0,01 MPa temperatura de 50 oC.  Utilizando a tabela de vapor superaquecido determine a potência fornecida por esta turbina a vapor. Dados: Tabela de vapor superaquecido para pressão de 6 MPa e 0,01 MPa.','QM','1','remember','no','2019-08-02',1,112),(1113,'h','SistemasEnergia29','% 08 \nUma turbina a vapor opera em regime permanente. Na entrada, a vazão mássica de vapor é 5 kg/s, a pressão é 6 MPa e a temperatura é 500 oC, isto é, o vapor encontra-se superaquecido. Na saída, o vapor encontra-se na pressão de 0,01 MPa temperatura de 50 oC.  Utilizando a tabela de vapor superaquecido determine a potência fornecida por esta turbina a vapor. Dados: Tabela de vapor superaquecido para pressão de 6 MPa e 0,01 MPa.','QM','1','remember','no','2019-08-02',1,112),(1114,' h','SistemasEnergia30','% 08 \nUma turbina a vapor opera em regime permanente. Na entrada, a vazão mássica de vapor é 5,7 kg/s, a pressão é 6 MPa e a temperatura é 500 oC, isto é, o vapor encontra-se superaquecido. Na saída, o vapor encontra-se na pressão de 0,01 MPa temperatura de 50 oC.  Utilizando a tabela de vapor superaquecido determine a potência fornecida por esta turbina a vapor. Dados: Tabela de vapor superaquecido para pressão de 6 MPa e 0,01 MPa.','QM','1','remember','no','2019-08-02',1,112),(1115,'i','SistemasEnergia31','% 09\nUm aquecedor térmico solar em uma região está exposto a 500 W/m2 de radiação solar.  Deseja-se obter um aquecimento da água,  $\\Delta$T,  de 20 oC e uma vazão mássica de água de 1,5 kg/s.  Qual é deve ser a área do painel solar considerando uma eficiência térmica de 100 \\%? O calor específico da água é 4,18 KJ/kg oC.','QM','1','remember','no','2019-08-02',1,112),(1116,'i','SistemasEnergia32','% 09\nUm aquecedor térmico solar em uma região está exposto a 500 W/m2 de radiação solar.  Deseja-se obter um aquecimento da água,  $\\Delta$T,  de 20 oC e uma vazão mássica de água de 1,2 kg/s.  Qual é deve ser a área do painel solar considerando uma eficiência térmica de 100 \\%? O calor específico da água é 4,18 KJ/kg oC.','QM','1','remember','no','2019-08-02',1,112),(1117,'i','SistemasEnergia33','% 09\nUm aquecedor térmico solar em uma região está exposto a 500 W/m2 de radiação solar.  Deseja-se obter um aquecimento da água,  $\\Delta$T,  de 20 oC e uma vazão mássica de água de 0,8 kg/s.  Qual é deve ser a área do painel solar considerando uma eficiência térmica de 100 \\%? O calor específico da água é 4,18 KJ/kg oC.','QM','1','remember','no','2019-08-02',1,112),(1118,'j','SistemasEnergia34','% 10\nConsidere uma turbina eólica de pás de raio de 75 m. Se a velocidade do vento é 8 m/s, determine a potência gerada por esta turbina. Considere CD = 0,6. A densidade do ar é 1,2 kg/m3. Dica: a área exposta ao fluxo do vento é a área varrida pelo giro da pá.','QM','1','remember','no','2019-08-02',1,112),(1119,'j','SistemasEnergia35','% 10\nConsidere uma turbina eólica de pás de raio de 100 m. Se a velocidade do vento é 8 m/s, determine a potência gerada por esta turbina. Considere CD = 0,6. A densidade do ar é 1,2 kg/m3. Dica: a área exposta ao fluxo do vento é a área varrida pelo giro da pá.','QM','1','remember','no','2019-08-02',1,112),(1120,'j','SistemasEnergia36','% 10\nConsidere uma turbina eólica de pás de raio de 100 m. Se a velocidade do vento é 7 m/s, determine a potência gerada por esta turbina. Considere CD = 0,6. A densidade do ar é 1,2 kg/m3. Dica: a área exposta ao fluxo do vento é a área varrida pelo giro da pá.','QM','1','remember','no','2019-08-02',1,112),(1121,'j','SistemasEnergia37','% 10\nA vazão do rio Madeira próximo a Porto Velho é de 40.000 m3/s. Suponha que se deseja construir uma hidrelétrica com altura de barragem de 14 m. Determine a potência de geração elétrica da usina hidrelétrica considerando uma eficiência da turbina hidráulica de 90 \\%. A densidade da água é 1000 kg/m3.','QM','1','remember','no','2019-08-02',1,112),(1122,'j','SistemasEnergia38','% 10\nA vazão do rio Madeira próximo a Porto Velho é de 25.000 m3/s. Suponha que se deseja construir uma hidrelétrica com altura de barragem de 14 m. Determine a potência de geração elétrica da usina hidrelétrica considerando uma eficiência da turbina hidráulica de 90 \\%. A densidade da água é 1000 kg/m3.','QM','1','remember','no','2019-08-02',1,112),(1123,'j','SistemasEnergia39','% 10\nA vazão do rio Madeira próximo a Porto Velho é de 10.000 m3/s. Suponha que se deseja construir uma hidrelétrica com altura de barragem de 14 m. Determine a potência de geração elétrica da usina hidrelétrica considerando uma eficiência da turbina hidráulica de 90 \\%. A densidade da água é 1000 kg/m3.','QM','1','remember','no','2019-08-02',1,112),(1124,'','quest1','Considere a gram\\\'atica $G=(\\{S,A,B\\},\\{a,b\\},P, S)$ com $P$ dada por: $S\\to A|B,\\,A\\to aA|\\lambda,\\,B\\to bB|\\lambda$. Ent\\~ao, a linguagem $L$ gerada por $G$ \\\'e:','QM','1','remember','no','2019-08-05',48,113),(1125,'','quest2','Dados $V_n=\\{S,A,B\\}$ e $V_t=\\{a,b\\}$, temos que a linguagem $L=\\{(a)^*b^n\\}$ \\\'e gerada pela seguinte gram\\\'atica:','QM','1','remember','no','2019-08-05',48,113),(1126,'','quest3','Na Figura temos um aut\\^omato finito. As cadeias de símbolos que ele aceita podem ser descritas por\r\n\r\n\\begin{figure}[h!]\\centering\r\n\\write18{wget -c  https://www.dropbox.com/s/9ldm4kn2er365hp/val-fig01.png -O ./tmp/val_fig01.png}\r\n\\fbox{\\includegraphics[scale=0.25]{val_fig01}}\r\n\\caption{Aut\\^omato.}\r\n\\label{aut}\r\n\\end{figure}','QM','1','remember','no','2019-08-07',48,113),(1127,'','quest4','Na Tabela (de trasi\\c c\\~oes) temos o estado inicial S, o estado E e o estado final F. As cadeias de símbolos que o aut\\^omato correspondente aceita s\\~ao dadas por\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\caption{Tansi\\c c\\~oes}\r\n\\label{tab1}\r\n\\begin{tabular}{|c|c|c|c|c|}\r\n\\hline\r\nEstado\\textbackslash Entrada & a & b & c & qq outra \\\\ \\hline\r\nS  & E & -  & -  &  -             \\\\ \\hline\r\nE  &  - & S & F &  -             \\\\ \\hline\r\nF  &  - & -  & F &  -             \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}','QM','1','remember','no','2019-08-07',48,113),(1128,'','quest5','Dada a gram\\\'atica $S\\to(L) | a,\\,L\\to SL’,\\,L’\\to\\sharp SL’ | \\spadesuit | \\lambda$, temos os conjuntos-cabe\\c ca:','QM','1','remember','no','2019-08-08',48,113),(1129,'','quest6','Se a gram\\\'atica com produ\\c c\\~oes $S\\to A|a$, $A\\to Bc|b$, $B\\to Ab|c$ n\\~ao for LL(1), podemos torn\\\'a-la LL(1) fazendo:','QM','1','remember','no','2019-08-10',48,113),(1130,'','quest7','De acordo com a Tabela (sint\\\'atica), ao analisarmos as cadeias {\\tt do while true} \\ \\ e \\ \\ {\\tt while true do command}, conclu\\\'imos que\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\caption{Sint\\\'atica}\r\n\\label{tab2}\r\n\\begin{tabular}{|c|c|c|c|c|c|}\r\n\\hline\r\n       & {\\tt command}             & {\\tt do}                                     & {\\tt true}            & {\\tt while}         & $\\lambda$ \\\\ \\hline\r\n$S$ &                                    & $S\\to$ {\\tt do $A$ while $B$} &                          &                         &                   \\\\ \\hline\r\n$A$ & $A\\to$ {\\tt command} &                                                &                          & $A\\to\\lambda$ &                   \\\\ \\hline\r\n$B$ &                                    &                                                & $B\\to$ {\\tt true} &                         &                   \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}','QM','1','remember','no','2019-08-10',48,113),(1131,'','quest8','Considere a seguinte gramática com atributos dados no slide 36 da Semana09:\\\\\r\n{\\tt decl} $\\to$ {\\tt tipo var-lista}\\\\\r\n{\\tt tipo} $\\to$ {\\bf int} $|$ {\\bf float}\\\\\r\n{\\tt var-lista} $\\to$ {\\bf id ,} {\\tt var-lista} $|$ {\\bf id}\\\\\r\nAdicione a produ\\c c\\~ao ao in\\\'icio da gram\\\'atica: {\\tt prog} $\\to$ {\\bf program id ;} $\\{$ {\\bf decl} $\\}$ {\\bf \\{ } {\\bf code} {\\bf \\} }\\\\\r\n {\\rm Na an\\\'alise sem\\^antica do c\\\'odigo} {\\tt program P; int a,b float b,c \\{ \\ \\} }','QM','1','remember','no','2019-08-12',48,113),(1132,'','quest9','De acordo com a Tabela (preced\\^encia sint\\\'atica), ao analisarmos a seq\\\"u\\^encia de caracteres {\\tt 53\\,+\\,$\\star$\\,+\\,4} temos que, para o precedimento de empilhar e reduzir\r\n\\begin{table}[h]\r\n\\centering\r\n\\caption{Preced\\^encia}\\smallskip\r\n\\label{tab3}\r\n\\begin{tabular}{|c|c|c|c|c|}\\hline\r\n          & {\\tt id} &   +   & \\star & \\$  \\\\ \\hline\r\n{\\tt id} &           & $>$ & $>$  &$>$\\\\ \\hline\r\n+        &   $<$  & $>$ & $<$  &      \\\\ \\hline\r\n\\star   &   $<$  & $>$ & $>$  &      \\\\ \\hline\r\n\\$       &   $<$  &        &         &      \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}','QM','1','remember','no','2019-08-13',48,113),(1133,'','quest0','Ao fazermos a an\\\'alise sem\\^antica de $5+3*4$ pela gram\\\'atica {\\tt expr} $\\to$ {\\tt dig op expr} $|$ {\\tt dig}, {\\tt op} $\\to\\,+\\,|\\,*$, {\\tt dig} $\\to 0|1|2|3|4|5|6|7|8|9$, a \\\'arvore de c\\^omputo de atributos ter\\\'a 5 n\\\'os-folha, 1 n\\\'o-raiz e','QM','1','remember','no','2019-08-13',48,113),(1165,'','ESTO013-17 VPL Conceitos0','Considerando as diferentes técnicas que podem ser utilizadas para se analisar financeiramente um orçamento de capital, assinale a opção correta.','QM','1','remember','no','2019-08-16',63,115),(1166,'','ESTO013-17 VPL Conceitos1','Suponha que dois projetos X e Y são comparados e a empresa que for decidir por qual projeto não tem um prazo mínimo para retorno do investimento. Considerando o custo mínimo de atratividade igual a 7 \\%, o projeto X será escolhido se,','QM','1','remember','no','2019-08-16',63,115),(1167,'','ESTO013-17 VPL Conceitos2','A respeito de avaliação de investimentos, valor presente líquido (VPL) e taxa interna de retorno (TIR), julgue os itens a seguir.\r\nI - No caso de dois projetos com o mesmo investimento inicial e o mesmo prazo, sob uma mesma taxa de desconto, o maior VPL será daquele que tiver menores recebimentos a cada período.\r\nII - Para um fluxo que consiste de um único investimento inicial na data 0 e recebimentos periódicos, com TIR igual a 5 \\% ao período, se a taxa de desconto for de 6 \\%, então o VPL será negativo.\r\nIII -  Dado um investimento inicial seguido de um fluxo de 20 recebimentos periódicos iguais, caso se amplie o prazo dos recebimentos para 25 recebimentos iguais, para que a TIR não mude, o valor de cada recebimento deverá ser menor.\r\nAssinale a opção correta.','QM','1','remember','no','2019-08-16',63,115),(1168,'','ESTO013-17 VPL Conceitos3','Dois projetos típicos de investimento, denominados F e G, apresentam fluxos de caixa livre para a empresa com sinal negativo apenas no instante zero, sendo o fluxo de caixa anual de G igual a 1,3 vezes o fluxo de caixa anual de F. Um analista resolveu calcular o fluxo de caixa incremental de G em relação a F e encontrou um novo fluxo de caixa para análise. O Valor Presente Líquido (VPL) desse fluxo, considerando-se uma Taxa Mínima de Atratividade (TMA) igual a zero, é positivo. A TIR encontrada desse fluxo de caixa incremental é','QM','1','remember','no','2019-08-16',63,115),(1169,'','ESTO013-17 VPL Conceitos4','Um projeto de investimento apresenta um fluxo de caixa. Para esse projeto, foi calculada uma taxa interna de retorno (TIR). No sentido de aferir o cálculo da TIR, é possível utilizarem- se alguns mecanismos de validação, dentre estes o fluxo de caixa:','QM','1','remember','no','2019-08-16',63,115),(1170,'','ESTO013-17 VPL Conceitos5','Uma empresa estuda investir em uma região pobre do país, onde há muito desemprego e subemprego. Contratará mão de obra não qualificada, pagando salários maiores do que o salário médio no mercado de trabalho da região para tal tipo de ocupação. Nesse caso, é INCORRETO concluir que a','QM','1','remember','no','2019-08-16',63,115),(1171,'','ESTO013-17 VPL Conceitos7','Assinale a opção que indica bens que devem ser depreciados por uma entidade.','QM','1','remember','no','2019-08-16',63,115),(1172,'','ESTO013-17 VPL Conceitos8','Em relação à depreciação de bens e aos respectivos métodos e cálculo de quotas, assinale a opção correta.','QM','1','remember','no','2019-08-16',63,115),(1173,'','ESTO013-17 VPL Conceitos9','No que concerne aos critérios de mensuração e reconhecimento das depreciações, amortizações e exaustões, assinale a alternativa correta.','QM','1','remember','no','2019-08-16',63,115),(1174,'','ESTO013-17 VPL Conceitos10','A empresa Manutenção S.A: alterou seu método de depreciação em todos os exercícios, nos últimos três anos. É correto afirmar que.','QM','1','remember','no','2019-08-16',63,115),(1175,'','ESTO013-17 VPL Conceitos11','O valor original de um ativo deduzido do seu valor residual denomina-se valor:','QM','1','remember','no','2019-08-16',63,115),(1176,'','ESTO013-17 VPL Conceitos12','Ao avaliar a viabilidade de um negócio por meio de seu plano de negócios, é comum estimar o payback, que corresponde','QM','1','remember','no','2019-08-16',63,115),(1177,'','ESTO013-17 VPL Conceitos13','Ao calcular o payback simples ou nominal de um projeto de investimento, um analista tem um','QM','1','remember','no','2019-08-16',63,115),(1178,'','ESTO013-17 VPL Conceitos14','O Payback Descontado é uma técnica de análise de investimentos que:','QM','1','remember','no','2019-08-16',63,115),(1179,'','ESTO013-17 VPL Conceitos15','Em relação à análise econômica de investimentos, considere:\nI. As técnicas de análise de investimentos valem-se de alguns estratagemas como a análise da TIR e do VPL.\nII. Quando o VPL é maior que zero, a organização obterá um retorno maior que seu custo de capital.\nIII. A TIR é a taxa de desconto que faz o VPL de um projeto de investimento igualar-se a zero.\nIV. O payback é muito utilizado na análise de investimentos por considerar o valor do dinheiro ao longo do tempo.\nEstá correto o que se afirma em','QM','1','remember','no','2019-08-16',63,115),(1180,'','ESTO013-17 VPL Conceitos16','Considerando os diferentes métodos utilizados para auxiliar na decisão da seleção de projetos, é correto afirmar que:','QM','1','remember','no','2019-08-16',63,115),(1181,'','ESTO013-17 VPL Conceitos17','O projeto de investimento X tem um período de recuperação do investimento (payback period) duas vezes maior do que o do projeto Y. Logo, o(a)','QM','1','remember','no','2019-08-16',63,115),(1182,'','ESTO013-17 VPL Conceitos18','Em relação aos métodos utilizados para avaliação de projetos de investimento e adotando-se o pressuposto que as respectivas estimativas de fluxos de caixa são confiáveis, o método:','QM','1','remember','no','2019-08-16',63,115),(1183,'','ESTO013-17 VPL Conceitos19','Os períodos de retorno (payback) de dois projetos de investimento, A e B, são, respectivamente, 2 e 4 anos. Assim, certamente, a(o)','QM','1','remember','no','2019-08-16',63,115),(1184,'','ESTO013-17 VPL Conceitos20','Dois projetos de investimento têm os mesmos períodos de retorno (payback), ambos de 2 anos. Logo,','QM','1','remember','no','2019-08-16',63,115),(1185,'','ESTO013-17 VPL Conceitos21','Os períodos de payback são geralmente usados como critério para a avaliação de investimentos propostos. Por ser visto como uma medida de risco, muitas empresas usam o período de payback como critério básico de decisão ou complemento a técnicas de decisão sofisticadas. Quanto mais tempo a empresa precisar esperar para recuperar seus fundos investidos, maior a possibilidade de perda. Portanto, quanto menor for o período de payback, menor será a exposição da empresa aos riscos. Em relação às deficiências do payback, analise as assertivas e assinale a alternativa que aponta a(s) INCORRETA(S).\r\nI. A principal deficiência do payback é sua incapacidade de especificar qual é o período apropriado, tendo em vista o objetivo de maximização da riqueza do acionista, pois não se baseia em fluxos de caixa descontados para verificar se eles adicionam valor à empresa.\r\nII. É simplesmente um período de tempo mínimo aceitável, determinado subjetivamente, como o momento em que o fluxo de caixa do projeto alcança seu \"ponto de equilíbrio\".\r\nIII. A abordagem falha ao considerar integralmente o fator tempo no valor do dinheiro. Ela leva em consideração apenas a época de ocorrência dos fluxos de caixa.\r\nIV. Reconhece os fluxos de caixa que ocorrem após o período de payback.','QM','1','remember','no','2019-08-16',63,115),(1186,'','ESTO013-17 VPL Conceitos22','Considerando os critérios de Período de payback, Valor presente líquido (VPL), Retorno contábil médio (RCM) e Taxa interna de retorno (TIR), é possível afirmar que\nI. a Taxa interna de retorno, quando aplicável, sempre leva à mesma decisão que o Valor presente líquido.\nII. o critério de Valor presente líquido é superior aos demais critérios.\nIII. o critério do Retorno contábil médio é superior aos da Taxa interna de retorno e de payback porque trabalha com dados contábeis da empresa.\nIV. o critério de payback leva em conta todos os fluxos de caixa do projeto.\nMarque a assertiva correta.','QM','1','remember','no','2019-08-16',63,115),(1187,'','ESTO013-17 VPL Conceitos23','No que diz respeito aos indicadores para a seleção de projetos, pode-se afirmar que','QM','1','remember','no','2019-08-16',63,115),(1188,'','ESTO013-17 VPL Conceitos24','O correto entendimento do conceito de Taxa Interna de Retorno - TIR de um projeto de investimento de uma empresa é importante para o seu uso apropriado em tomada de decisão, tendo sempre como pano de fundo o objetivo de buscar a maximização da riqueza dos seus donos. Sendo assim, todo fluxo de caixa analisado que contenha duas inversões de sinais ao longo dos períodos projetados apresentará como resposta para o cálculo da TIR um total de até:','QM','1','remember','no','2019-08-16',63,115),(1189,'','ESTO013-17 VPL Conceitos25','Um analista que trabalha numa empresa de capital aberto precisa escolher um dentre dois projetos mutuamente excludentes. Ele resolve calcular a Taxa Interna de Retorno - TIR de cada projeto e escolhe aquele que apresentou maior TIR. Considerando que ele está alinhado com a diretriz de maximização da riqueza dos acionistas de sua empresa, ele escolheu o projeto de:','QM','1','remember','no','2019-08-16',63,115),(1191,'Conceitos Payback','Prova 2','Uma máquina está estimada em R\\$ [[code:V0X]], com vida econômica igual a 6 anos. Após este tempo, a máquina será retirada de operação com valor residual de R\\$ [[code:VRX]]. Durante a utilização, acredita-se que venham a ser reduzidas despesas com mão-de-obra em R\\$ [[code:U0X]]  em cada ano.  Montar a tabela de vida contábil de \\textbf{4} anos e calcular a taxa interna de retorno do projeto. \r\n\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\nimport math\r\nimport numpy as np\r\n\r\n# Cria tabela de Vida Contábil\r\n# V0 Valor de investimento\r\n# U  Valor de parcela\r\n# VR Valor residual\r\n\r\n# Qualquer valor de investimento\r\nvx=random.randrange(1,20)*10000\r\nV0=-vx\r\n# De 0.25 a 0.45\r\n# Redução de custo\r\nux=random.randrange(25,45)/100 \r\nU = abs(V0)*ux\r\n# Valor residual\r\n# De 0.00 a 0.40\r\nvx=random.randrange(00,40)/100 \r\nVR= abs(V0)*vx\r\n\r\n#Montagem da matriz tabela (N x M) - Tabela de vida contábil\r\n\r\nN=7 \r\nM=6\r\n\r\ntabela=np.zeros((N,M), dtype=np.float64 )\r\n# Montagem das tabelas\r\n\r\n# Montagem da coluna da data (tempo)\r\nfor i in range(N):\r\n  tabela[i][0]=i\r\n\r\n# Montagem da tabela vida útil para 4 anos\r\n# Coluna a - Fluxo de caixa\r\ntabela[0][1]=V0\r\ntabela[N-1][1]=U+VR\r\nfor i in range(5):\r\n  tabela[i+1][1]=U\r\n\r\n# Montagem da coluna b - Depreciação para 4 anos\r\nfor i in range(4):\r\n  tabela[i+1][2]=V0/4\r\n\r\n# Montagem da coluna c=a+b - Lucro tributável\r\nfor i in range(N-1):\r\n  tabela[i+1][3]=tabela[i+1][1]+tabela[i+1][2]\r\n\r\n# Montagem da coluna de tributação d=0.35*c\r\nfor i in range(N):\r\n  tabela[i][4]=-0.35*tabela[i][3]\r\n\r\n# Montagem da coluna e=a+d - Fluxo de caixa final e=a+d\r\nfor i in range(N):\r\n  tabela[i][5]=tabela[i][1]+tabela[i][4]\r\n\r\n# Montagem da tabela xj\r\nxj=[[0]*1 for i in range(N)]\r\nfor i in range(N):\r\n  xj[i]=tabela[i][5]\r\n\r\n# Cálculo do TIR usando Newton-Raphson para zero de funções\r\n\r\nxn=1.15\r\n\r\nepsilon=1e-6\r\nmax_iter=15\r\nn=0\r\nparada=0\r\nwhile parada==0:\r\n  fx=0\r\n  dfx=0\r\n# Cálculo do f(x)\r\n  for i in range(N):\r\n    fx=fx+xj[i]/(xn**i)\r\n  # Cálculo do f\'(x)\r\n  for i in range(N-1):\r\n    dfx=dfx-(i+1)*xj[i+1]/xn**(i+2)\r\n  dx=-fx/dfx\r\n # print(\"%.4f \" % n,\"%10.5E \" % xn,\"%10.5E\" % fx, \"%10.5E\" % dfx,\"%10.5E\" % dx)\r\n  n=n+1\r\n  xn=xn+dx\r\n  if abs(fx)<epsilon:\r\n    parada=1\r\n  if n>max_iter:\r\n    parada=1\r\n# Fim do cálculo\r\nTIR=(xn-1)*100\r\n\r\n\r\nV0=abs(V0)\r\nV0X= PT_BR(\"%.2f\" % (V0))\r\nU0X= PT_BR(\"%.2f\" % (U))\r\nVRX= PT_BR(\"%.2f\" % (VR))\r\nRESP=PT_BR(\"%.2f \" % (TIR))\r\n\r\nglobal correctAnswer, e01\r\ncorrectAnswer= RESP\r\n\r\ne01 = PT_BR(\"%.2f\" % (TIR + 0.1))\r\ne02 = PT_BR(\"%.2f\" % (TIR  - 0.1))\r\ne03 = PT_BR(\"%.2f\" % (TIR + 1.0))\r\ne04 = PT_BR(\"%.2f\" % (TIR  - 1.0))\r\n\r\n]]','QM','1','remember','yes','2019-08-22',63,111),(1192,'Conceitos Payback','Prova 2','Uma máquina está estimada em R\\$ [[code:V0X]], com vida econômica igual a 6 anos. Após este tempo, a máquina será retirada de operação com valor residual de R\\$ [[code:VRX]]. Durante a utilização, acredita-se que venham a ser reduzidas despesas com mão-de-obra em R\\$ [[code:U0X]]  em cada ano.  Montar a tabela de vida contábil de \\textbf{6} anos e calcular a taxa interna de retorno do projeto. \r\n\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\nimport math\r\nimport numpy as np\r\n\r\ndef PT_BR(my_value):\r\n    a = \'{:,.2f}\'.format(float(my_value))\r\n    b = a.replace(\',\',\'v\')\r\n    c = b.replace(\'.\',\',\')\r\n    return c.replace(\'v\',\'.\')\r\n\r\n\r\n# Cria tabela de Vida Contábil\r\n# V0 Valor de investimento\r\n# U  Valor de parcela\r\n# VR Valor residual\r\n\r\n# Qualquer valor de investimento\r\nvx=random.randrange(1,20)*10000\r\nV0=-vx\r\n\r\n# De 0.25 a 0.45\r\n# Redução de custo\r\nux=random.randrange(25,45)/100 \r\nU = abs(V0)*ux\r\n\r\n# Valor residual\r\n# De 0.00 a 0.40\r\nvx=random.randrange(00,40)/100 \r\nVR= abs(V0)*vx\r\n\r\n# V0=-100000\r\n# U =    30000\r\n# VR=  40000\r\n#Montagem da matriz tabela (N x M) - Tabela de vida contábil\r\n\r\nN=7 \r\nM=6\r\n\r\ntabela=np.zeros((N,M), dtype=np.float64 )\r\n# Montagem das tabelas\r\n\r\n# Montagem da coluna da data (tempo)\r\nfor i in range(N):\r\n  tabela[i][0]=i\r\n\r\n# Montagem da tabela vida útil para 4 anos\r\n# Coluna a - Fluxo de caixa\r\ntabela[0][1]=V0\r\ntabela[N-1][1]=U+VR\r\nfor i in range(5):\r\n  tabela[i+1][1]=U\r\n\r\n# Montagem da coluna b - Depreciação para 4 anos\r\nfor i in range(N-1):\r\n  tabela[i+1][2]=V0/6\r\n\r\n# Montagem da coluna c=a+b - Lucro tributável\r\nfor i in range(N-1):\r\n  tabela[i+1][3]=tabela[i+1][1]+tabela[i+1][2]\r\n\r\n# Montagem da coluna de tributação d=0.35*c\r\nfor i in range(N):\r\n  tabela[i][4]=-0.35*tabela[i][3]\r\n\r\n# Montagem da coluna e=a+d - Fluxo de caixa final e=a+d\r\nfor i in range(N):\r\n  tabela[i][5]=tabela[i][1]+tabela[i][4]\r\n\r\n# Montagem da tabela xj\r\nxj=[[0]*1 for i in range(N)]\r\nfor i in range(N):\r\n  xj[i]=tabela[i][5]\r\n\r\n# Cálculo do TIR usando Newton-Raphson para zero de funções\r\n\r\nxn=1.15\r\n\r\nepsilon=1e-6\r\nmax_iter=15\r\nn=0\r\nparada=0\r\nwhile parada==0:\r\n  fx=0\r\n  dfx=0\r\n# Cálculo do f(x)\r\n  for i in range(N):\r\n    fx=fx+xj[i]/(xn**i)\r\n  # Cálculo do f\'(x)\r\n  for i in range(N-1):\r\n    dfx=dfx-(i+1)*xj[i+1]/xn**(i+2)\r\n  dx=-fx/dfx\r\n # print(\"%.4f \" % n,\"%10.5E \" % xn,\"%10.5E\" % fx, \"%10.5E\" % dfx,\"%10.5E\" % dx)\r\n  n=n+1\r\n  xn=xn+dx\r\n  if abs(fx)<epsilon:\r\n    parada=1\r\n  if n>max_iter:\r\n    parada=1\r\n# Fim do cálculo\r\nTIR=(xn-1)*100\r\n\r\n\r\nV0=abs(V0)\r\nV0X= \"%.2f\" % (V0)\r\nV0X=PT_BR(V0X)\r\nU0X= \"%.2f\" % (U)\r\nU0X=PT_BR(U0X)\r\nVRX= \"%.2f\" % (VR)\r\nVRX=PT_BR(VRX)\r\n\r\nRESP=\"%.2f \" % (TIR)\r\nRESP=PT_BR(TIR)\r\nglobal correctAnswer, e01\r\n\r\n# correctAnswer= \"%.2f \" % TIR\r\ncorrectAnswer= RESP\r\n\r\ne01 = \"%.2f\" % (TIR + 0.1)\r\ne01=PT_BR(e01)\r\n\r\ne02 = \"%.2f\" % (TIR  - 0.1)\r\ne02=PT_BR(e02)\r\n\r\ne03 = \"%.2f\" % (TIR + 1.0)\r\ne03=PT_BR(e03)\r\n\r\ne04 = \"%.2f\" % (TIR  - 1.0)\r\ne04=PT_BR(e04)\r\n\r\n]]','QM','1','remember','yes','2019-08-22',63,111),(1195,'Conceitos Payback','Prova 2','Uma máquina está estimada em R\\$ [[code:V0X]], com vida econômica igual a 6 anos. Após este tempo, a máquina será retirada de operação com valor residual de R\\$ [[code:VRX]]. Durante a utilização, acredita-se que venham a ser reduzidas despesas com mão-de-obra em R\\$ [[code:U0X]]  em cada ano.  Montar a tabela de vida contábil de \\textbf{7} anos e calcular a taxa interna de retorno do projeto. \r\n\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\nimport math\r\nimport numpy as np\r\n\r\ndef PT_BR(my_value):\r\n    a = \'{:,.2f}\'.format(float(my_value))\r\n    b = a.replace(\',\',\'v\')\r\n    c = b.replace(\'.\',\',\')\r\n    return c.replace(\'v\',\'.\')\r\n\r\n# Cria tabela de Vida Contábil\r\n# V0 Valor de investimento\r\n# U  Valor de parcela\r\n# VR Valor residual\r\n\r\n# Qualquer valor de investimento\r\nvx=random.randrange(1,20)*10000\r\nV0=-vx\r\n# De 0.25 a 0.45\r\n# Redução de custo\r\nux=random.randrange(25,45)/100 \r\nU = abs(V0)*ux\r\n# Valor residual\r\n# De 0.00 a 0.40\r\nvx=random.randrange(00,40)/100 \r\nVR= abs(V0)*vx\r\n\r\n\r\n#V0=-16000\r\n#U =  5000\r\n#VR=  3000\r\n\r\n\r\n#Montagem da matriz tabela (N x M) - Tabela de vida contábil\r\n\r\nN=7 \r\nM=7\r\n\r\ntabela=np.zeros((N,M), dtype=np.float64 )\r\n# Montagem das tabelas\r\n\r\n# Montagem da coluna da data (tempo)\r\nfor i in range(N):\r\n  tabela[i][0]=i\r\n\r\n# Montagem da tabela vida útil para 7 anos\r\n# Coluna a - Fluxo de caixa\r\ntabela[0][1]=V0\r\nfor i in range(1,N):\r\n  tabela[i][1]=U\r\n\r\n# Montagem da coluna b - Depreciação para 6 anos\r\nfor i in range(1,N):\r\n  tabela[i][2]=V0/7\r\n\r\n# Montagem da coluna c - Lucro ou perda contábil\r\n# c=VR+depreciação\r\ntabela[N-1][3]=VR+tabela[N-1][2]\r\n\r\n# Montagem da coluna d=a+b+c\r\nfor i in range(1,N):\r\n  tabela[i][4]=tabela[i][1]+tabela[i][2]+tabela[i][3]\r\n\r\n# Montagem da coluna de tributação d=0.35*c\r\nfor i in range(N):\r\n  tabela[i][5]=-0.35*tabela[i][4]\r\n\r\n# Montagem da coluna e=a+d - Fluxo de caixa final e=a+d\r\nfor i in range(N):\r\n  tabela[i][6]=tabela[i][1]+tabela[i][5]\r\ntabela[6][6]=tabela[6][6]+VR\r\n\r\n# Montagem da tabela xj\r\nxj=[[0]*1 for i in range(N)]\r\nfor i in range(N):\r\n  xj[i]=tabela[i][6]\r\n\r\n# Cálculo do TIR usando Newton-Raphson para zero de funções\r\n\r\nxn=1.15\r\n\r\nepsilon=1e-6\r\nmax_iter=15\r\nn=0\r\nparada=0\r\nwhile parada==0:\r\n  fx=0\r\n  dfx=0\r\n# Cálculo do f(x)\r\n  for i in range(N):\r\n    fx=fx+xj[i]/(xn**i)\r\n  # Cálculo do f\'(x)\r\n  for i in range(N-1):\r\n    dfx=dfx-(i+1)*xj[i+1]/xn**(i+2)\r\n  dx=-fx/dfx\r\n  print(\"%.4f \" % n,\"%10.5E \" % xn,\"%10.5E\" % fx, \"%10.5E\" % dfx,\"%10.5E\" % dx)\r\n  n=n+1\r\n  xn=xn+dx\r\n  if abs(fx)<epsilon:\r\n    parada=1\r\n  if n>max_iter:\r\n    parada=1\r\n# Fim do cálculo\r\nTIR=(xn-1)*100\r\n\r\nV0=abs(V0)\r\nV0X= \"%.2f\" % (V0)\r\nV0X=PT_BR(V0X)\r\nU0X= \"%.2f\" % (U)\r\nU0X=PT_BR(U0X)\r\nVRX= \"%.2f\" % (VR)\r\nVRX=PT_BR(VRX)\r\n\r\nRESP=\"%.2f \" % (TIR)\r\nRESP=PT_BR(TIR)\r\nglobal correctAnswer, e01\r\n\r\n# correctAnswer= \"%.2f \" % TIR\r\ncorrectAnswer= RESP\r\n\r\ne01 = \"%.2f\" % (TIR + 0.1)\r\ne01=PT_BR(e01)\r\n\r\ne02 = \"%.2f\" % (TIR  - 0.1)\r\ne02=PT_BR(e02)\r\n\r\ne03 = \"%.2f\" % (TIR + 1.0)\r\ne03=PT_BR(e03)\r\n\r\ne04 = \"%.2f\" % (TIR  - 1.0)\r\ne04=PT_BR(e04)\r\n\r\n]]','QM','1','remember','yes','2019-08-22',63,111),(1199,'VC','Dissertativa','Uma máquina está estimada em R\\$ [[code:V0X]], com vida econômica igual a 6 anos. Após este tempo, a máquina será retirada de operação com valor residual de R\\$ [[code:VRX]]. Durante a utilização, acredita-se que venham a ser reduzidas despesas com mão-de-obra em R\\$ [[code:U0X]]  em cada ano.  Montar a tabela de vida contábil de \\textbf{7} anos e calcular a taxa interna de retorno do projeto. Considere a depreciação linear e o Imposto de Renda de 35\\%.  \\tiny \\color{bubbles} [[code:RESP]] \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\nimport math\r\nimport numpy as np\r\n\r\ndef PT_BR(my_value):\r\n    a = \'{:,.2f}\'.format(float(my_value))\r\n    b = a.replace(\',\',\'v\')\r\n    c = b.replace(\'.\',\',\')\r\n    return c.replace(\'v\',\'.\')\r\n\r\n\r\n# Cria tabela de Vida Contábil\r\n# V0 Valor de investimento\r\n# U  Valor de parcela\r\n# VR Valor residual\r\n\r\n# Qualquer valor de investimento\r\nvx=random.randrange(1,20)*10000\r\nV0=-vx\r\n# De 0.25 a 0.45\r\n# Redução de custo\r\nux=random.randrange(25,45)/100 \r\nU = abs(V0)*ux\r\n# Valor residual\r\n# De 0.00 a 0.40\r\nvx=random.randrange(00,40)/100 \r\nVR= abs(V0)*vx\r\n\r\n\r\n#V0=-16000\r\n#U =  5000\r\n#VR=  3000\r\n\r\n\r\n#Montagem da matriz tabela (N x M) - Tabela de vida contábil\r\n\r\nN=7 \r\nM=7\r\n\r\ntabela=np.zeros((N,M), dtype=np.float64 )\r\n# Montagem das tabelas\r\n\r\n# Montagem da coluna da data (tempo)\r\nfor i in range(N):\r\n  tabela[i][0]=i\r\n\r\n# Montagem da tabela vida útil para 7 anos\r\n# Coluna a - Fluxo de caixa\r\ntabela[0][1]=V0\r\nfor i in range(1,N):\r\n  tabela[i][1]=U\r\n\r\n# Montagem da coluna b - Depreciação para 6 anos\r\nfor i in range(1,N):\r\n  tabela[i][2]=V0/7\r\n\r\n# Montagem da coluna c - Lucro ou perda contábil\r\n# c=VR+depreciação\r\ntabela[N-1][3]=VR+tabela[N-1][2]\r\n\r\n# Montagem da coluna d=a+b+c\r\nfor i in range(1,N):\r\n  tabela[i][4]=tabela[i][1]+tabela[i][2]+tabela[i][3]\r\n\r\n# Montagem da coluna de tributação d=0.35*c\r\nfor i in range(N):\r\n  tabela[i][5]=-0.35*tabela[i][4]\r\n\r\n# Montagem da coluna e=a+d - Fluxo de caixa final e=a+d\r\nfor i in range(N):\r\n  tabela[i][6]=tabela[i][1]+tabela[i][5]\r\ntabela[6][6]=tabela[6][6]+VR\r\n\r\n# Montagem da tabela xj\r\nxj=[[0]*1 for i in range(N)]\r\nfor i in range(N):\r\n  xj[i]=tabela[i][6]\r\n\r\n# Cálculo do TIR usando Newton-Raphson para zero de funções\r\n\r\nxn=1.15\r\n\r\nepsilon=1e-6\r\nmax_iter=15\r\nn=0\r\nparada=0\r\nwhile parada==0:\r\n  fx=0\r\n  dfx=0\r\n# Cálculo do f(x)\r\n  for i in range(N):\r\n    fx=fx+xj[i]/(xn**i)\r\n  # Cálculo do f\'(x)\r\n  for i in range(N-1):\r\n    dfx=dfx-(i+1)*xj[i+1]/xn**(i+2)\r\n  dx=-fx/dfx\r\n#  print(\"%.4f \" % n,\"%10.5E \" % xn,\"%10.5E\" % fx, \"%10.5E\" % dfx,\"%10.5E\" % dx)\r\n  n=n+1\r\n  xn=xn+dx\r\n  if abs(fx)<epsilon:\r\n    parada=1\r\n  if n>max_iter:\r\n    parada=1\r\n# Fim do cálculo\r\nTIR=(xn-1)*100\r\n\r\nV0=abs(V0)\r\nV0X= \"%.2f\" % (V0)\r\nV0X=PT_BR(V0X)\r\nU0X= \"%.2f\" % (U)\r\nU0X=PT_BR(U0X)\r\nVRX= \"%.2f\" % (VR)\r\nVRX=PT_BR(VRX)\r\n\r\nRESP=\"%.2f \" % (TIR)\r\nRESP=PT_BR(TIR)\r\nglobal correctAnswer, e01\r\n\r\n# correctAnswer= \"%.2f \" % TIR\r\ncorrectAnswer= RESP\r\n\r\ne01 = \"%.2f\" % (TIR + 0.1)\r\ne01=PT_BR(e01)\r\n\r\ne02 = \"%.2f\" % (TIR  - 0.1)\r\ne02=PT_BR(e02)\r\n\r\ne03 = \"%.2f\" % (TIR + 1.0)\r\ne03=PT_BR(e03)\r\n\r\ne04 = \"%.2f\" % (TIR  - 1.0)\r\ne04=PT_BR(e04)\r\n\r\n]]','QT','1','remember','yes','2019-08-20',63,111),(1200,'VC1','Dissertativa','Uma máquina está estimada em R\\$ [[code:V0X]], com vida econômica igual a 6 anos. Após este tempo, a máquina será retirada de operação com valor residual de R\\$ [[code:VRX]]. Durante a utilização, acredita-se que venham a ser reduzidas despesas com mão-de-obra em R\\$ [[code:U0X]]  em cada ano.  Montar a tabela de vida contábil de \\textbf{4} anos e calcular a taxa interna de retorno do projeto. Considere a depreciação linear e o Imposto de Renda de 35\\%. \\tiny  \\color{bubbles} [[code:RESP]] \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\nimport math\r\nimport numpy as np\r\n\r\ndef PT_BR(my_value):\r\n    a = \'{:,.2f}\'.format(float(my_value))\r\n    b = a.replace(\',\',\'v\')\r\n    c = b.replace(\'.\',\',\')\r\n    return c.replace(\'v\',\'.\')\r\n\r\n\r\n# Cria tabela de Vida Contábil\r\n# V0 Valor de investimento\r\n# U  Valor de parcela\r\n# VR Valor residual\r\n\r\n# Qualquer valor de investimento\r\nvx=random.randrange(1,20)*10000\r\nV0=-vx\r\n# De 0.25 a 0.45\r\n# Redução de custo\r\nux=random.randrange(25,45)/100 \r\nU = abs(V0)*ux\r\n# Valor residual\r\n# De 0.00 a 0.40\r\nvx=random.randrange(00,40)/100 \r\nVR= abs(V0)*vx\r\n\r\n#Montagem da matriz tabela (N x M) - Tabela de vida contábil\r\n\r\nN=7 \r\nM=6\r\n\r\ntabela=np.zeros((N,M), dtype=np.float64 )\r\n# Montagem das tabelas\r\n\r\n# Montagem da coluna da data (tempo)\r\nfor i in range(N):\r\n  tabela[i][0]=i\r\n\r\n# Montagem da tabela vida útil para 4 anos\r\n# Coluna a - Fluxo de caixa\r\ntabela[0][1]=V0\r\ntabela[N-1][1]=U+VR\r\nfor i in range(5):\r\n  tabela[i+1][1]=U\r\n\r\n# Montagem da coluna b - Depreciação para 4 anos\r\nfor i in range(4):\r\n  tabela[i+1][2]=V0/4\r\n\r\n# Montagem da coluna c=a+b - Lucro tributável\r\nfor i in range(N-1):\r\n  tabela[i+1][3]=tabela[i+1][1]+tabela[i+1][2]\r\n\r\n# Montagem da coluna de tributação d=0.35*c\r\nfor i in range(N):\r\n  tabela[i][4]=-0.35*tabela[i][3]\r\n\r\n# Montagem da coluna e=a+d - Fluxo de caixa final e=a+d\r\nfor i in range(N):\r\n  tabela[i][5]=tabela[i][1]+tabela[i][4]\r\n\r\n# Montagem da tabela xj\r\nxj=[[0]*1 for i in range(N)]\r\nfor i in range(N):\r\n  xj[i]=tabela[i][5]\r\n\r\n# Cálculo do TIR usando Newton-Raphson para zero de funções\r\n\r\nxn=1.15\r\n\r\nepsilon=1e-6\r\nmax_iter=15\r\nn=0\r\nparada=0\r\nwhile parada==0:\r\n  fx=0\r\n  dfx=0\r\n# Cálculo do f(x)\r\n  for i in range(N):\r\n    fx=fx+xj[i]/(xn**i)\r\n  # Cálculo do f\'(x)\r\n  for i in range(N-1):\r\n    dfx=dfx-(i+1)*xj[i+1]/xn**(i+2)\r\n  dx=-fx/dfx\r\n # print(\"%.4f \" % n,\"%10.5E \" % xn,\"%10.5E\" % fx, \"%10.5E\" % dfx,\"%10.5E\" % dx)\r\n  n=n+1\r\n  xn=xn+dx\r\n  if abs(fx)<epsilon:\r\n    parada=1\r\n  if n>max_iter:\r\n    parada=1\r\n# Fim do cálculo\r\nTIR=(xn-1)*100\r\n\r\n\r\nV0=abs(V0)\r\nV0X= \"%.2f\" % (V0)\r\nV0X=PT_BR(V0X)\r\nU0X= \"%.2f\" % (U)\r\nU0X=PT_BR(U0X)\r\nVRX= \"%.2f\" % (VR)\r\nVRX=PT_BR(VRX)\r\n\r\nRESP=\"%.2f \" % (TIR)\r\nRESP=PT_BR(TIR)\r\nglobal correctAnswer, e01\r\n\r\n# correctAnswer= \"%.2f \" % TIR\r\ncorrectAnswer= RESP\r\n\r\ne01 = \"%.2f\" % (TIR + 0.1)\r\ne01=PT_BR(e01)\r\n\r\ne02 = \"%.2f\" % (TIR  - 0.1)\r\ne02=PT_BR(e02)\r\n\r\ne03 = \"%.2f\" % (TIR + 1.0)\r\ne03=PT_BR(e03)\r\n\r\ne04 = \"%.2f\" % (TIR  - 1.0)\r\ne04=PT_BR(e04)\r\n\r\n]]','QT','1','remember','yes','2019-08-20',63,111),(1201,'VC1','Prova 2','Uma máquina está estimada em R\\$ [[code:V0X]], com vida econômica igual a 6 anos. Após este tempo, a máquina será retirada de operação com valor residual de R\\$ [[code:VRX]]. Durante a utilização, acredita-se que venham a ser reduzidas despesas com mão-de-obra em R\\$ [[code:U0X]]  em cada ano.  Montar a tabela de vida contábil de \\textbf{6} anos e calcular a taxa interna de retorno do projeto. Considere a depreciação linear e o Imposto de Renda de 35\\%. \\tiny \\color{bubbles} [[code:RESP]] \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\nimport math\r\nimport numpy as np\r\n\r\ndef PT_BR(my_value):\r\n    a = \'{:,.2f}\'.format(float(my_value))\r\n    b = a.replace(\',\',\'v\')\r\n    c = b.replace(\'.\',\',\')\r\n    return c.replace(\'v\',\'.\')\r\n\r\n\r\n# Cria tabela de Vida Contábil\r\n# V0 Valor de investimento\r\n# U  Valor de parcela\r\n# VR Valor residual\r\n\r\n# Qualquer valor de investimento\r\nvx=random.randrange(1,20)*10000\r\nV0=-vx\r\n\r\n# De 0.25 a 0.45\r\n# Redução de custo\r\nux=random.randrange(25,45)/100 \r\nU = abs(V0)*ux\r\n\r\n# Valor residual\r\n# De 0.00 a 0.40\r\nvx=random.randrange(00,40)/100 \r\nVR= abs(V0)*vx\r\n\r\n# V0=-100000\r\n# U =    30000\r\n# VR=  40000\r\n#Montagem da matriz tabela (N x M) - Tabela de vida contábil\r\n\r\nN=7 \r\nM=6\r\n\r\ntabela=np.zeros((N,M), dtype=np.float64 )\r\n# Montagem das tabelas\r\n\r\n# Montagem da coluna da data (tempo)\r\nfor i in range(N):\r\n  tabela[i][0]=i\r\n\r\n# Montagem da tabela vida útil para 4 anos\r\n# Coluna a - Fluxo de caixa\r\ntabela[0][1]=V0\r\ntabela[N-1][1]=U+VR\r\nfor i in range(5):\r\n  tabela[i+1][1]=U\r\n\r\n# Montagem da coluna b - Depreciação para 4 anos\r\nfor i in range(N-1):\r\n  tabela[i+1][2]=V0/6\r\n\r\n# Montagem da coluna c=a+b - Lucro tributável\r\nfor i in range(N-1):\r\n  tabela[i+1][3]=tabela[i+1][1]+tabela[i+1][2]\r\n\r\n# Montagem da coluna de tributação d=0.35*c\r\nfor i in range(N):\r\n  tabela[i][4]=-0.35*tabela[i][3]\r\n\r\n# Montagem da coluna e=a+d - Fluxo de caixa final e=a+d\r\nfor i in range(N):\r\n  tabela[i][5]=tabela[i][1]+tabela[i][4]\r\n\r\n# Montagem da tabela xj\r\nxj=[[0]*1 for i in range(N)]\r\nfor i in range(N):\r\n  xj[i]=tabela[i][5]\r\n\r\n# Cálculo do TIR usando Newton-Raphson para zero de funções\r\n\r\nxn=1.15\r\n\r\nepsilon=1e-6\r\nmax_iter=15\r\nn=0\r\nparada=0\r\nwhile parada==0:\r\n  fx=0\r\n  dfx=0\r\n# Cálculo do f(x)\r\n  for i in range(N):\r\n    fx=fx+xj[i]/(xn**i)\r\n  # Cálculo do f\'(x)\r\n  for i in range(N-1):\r\n    dfx=dfx-(i+1)*xj[i+1]/xn**(i+2)\r\n  dx=-fx/dfx\r\n # print(\"%.4f \" % n,\"%10.5E \" % xn,\"%10.5E\" % fx, \"%10.5E\" % dfx,\"%10.5E\" % dx)\r\n  n=n+1\r\n  xn=xn+dx\r\n  if abs(fx)<epsilon:\r\n    parada=1\r\n  if n>max_iter:\r\n    parada=1\r\n# Fim do cálculo\r\nTIR=(xn-1)*100\r\n\r\n\r\nV0=abs(V0)\r\nV0X= \"%.2f\" % (V0)\r\nV0X=PT_BR(V0X)\r\nU0X= \"%.2f\" % (U)\r\nU0X=PT_BR(U0X)\r\nVRX= \"%.2f\" % (VR)\r\nVRX=PT_BR(VRX)\r\n\r\nRESP=\"%.2f \" % (TIR)\r\nRESP=PT_BR(TIR)\r\nglobal correctAnswer, e01\r\n\r\n# correctAnswer= \"%.2f \" % TIR\r\ncorrectAnswer= RESP\r\n\r\ne01 = \"%.2f\" % (TIR + 0.1)\r\ne01=PT_BR(e01)\r\n\r\ne02 = \"%.2f\" % (TIR  - 0.1)\r\ne02=PT_BR(e02)\r\n\r\ne03 = \"%.2f\" % (TIR + 1.0)\r\ne03=PT_BR(e03)\r\n\r\ne04 = \"%.2f\" % (TIR  - 1.0)\r\ne04=PT_BR(e04)\r\n\r\n]]','QT','1','remember','yes','2019-08-20',63,111),(1213,'','ESTO013-17 Juros e Conceitos0','Assinale a opção INCORRETA:','QM','1','remember','no','2019-08-25',63,122),(1214,'','ESTO013-17 Juros e Conceitos1','Assinale a opção INCORRETA:','QM','1','remember','no','2019-08-25',63,122),(1215,'','ESTO013-17 Juros e Conceitos2','Sobre as seguintes afirmativas: \r\nI - Se dois conjuntos de capitais são equivalentes em determinada data focal, deverão também ser equivalentes em qualquer outra data. \r\nII - O valor presente de determinada variável econômica corresponde ao valor futuro, descontando-se a determinada taxa de juros. \r\nIII- Considerando-se um período de capitalização igual ou superior a dois e uma mesma taxa de juros, um montante sujeito a capitalização no regime de juros compostos sempre apresentará rendimento maior que a capitalização no regime de juros simples.','QM','1','remember','no','2019-08-25',63,122),(1216,'','ESTO013-17 Juros e Conceitos3','Chama-se taxa de juros o custo de utilização do capital fruto de um empréstimo de outrem, ou seja, é a remuneração do capital. No que concerne aos conceitos que envolvem o tema, assinale a alternativa correta.','QM','1','remember','no','2019-08-25',63,122),(1217,'','ESTO013-17 Juros e Conceitos4','No que se refere à estrutura da taxa de juros, os componentes básicos que, somados, formam uma taxa bruta de juros são:','QM','1','remember','no','2019-08-25',63,122),(1218,'','ESTO013-17 Juros e Conceitos5','Para atuar com eficiência no mercado financeiro, é preciso conhecer os termos e conceitos utilizados e a relação que se estabelece entre eles. Uma aplicação financeira qualquer, basicamente, envolve a aplicação de um capital (C) no tempo t para resgate de um montante (M) em um tempo t+1. Acerca desse assunto, assinale a alternativa correta.','QM','1','remember','no','2019-08-25',63,122),(1219,'','ESTO013-17 Juros e Conceitos6','Em relação aos conceitos de juros simples e juros compostos, assinale a alternativa INCORRETA.','QM','1','remember','no','2019-08-25',63,122),(1220,'','ESTO013-17 Juros e Conceitos7','Em relação à análise de investimentos, assinale V para a afirmativa verdadeira e F para a falsa. I - A taxa mínima de atratividade representa o custo de oportunidade do capital investido. II -  O critério do payback descontado é uma forma do investidor saber o tempo necessário para ele obter a taxa de retorno do projeto investido. III - Se o investidor se depara entre um projeto de investimento A e uma alternativa a ele, denominado B, a escolha por A ocorrerá se o valor presente líquido de A obtido a partir da taxa interna de retorno de B for positivo.As afirmativas são, respectivamente.','QM','1','remember','no','2019-08-25',63,122),(1221,'VPL 11','Dissertativa','Uma empresa pretende substituir uma extrusora de polímeros, cujo o valor de um novo é de R\\$ [[code:P01]]  e o antigo equipamento foi vendido por R\\$ [[code:P02]]. O investimento proporciona ganho de R\\$ [[code:U01]] por ano e finalmente após [[code:N]] anos apresenta o valor residual de R\\$ [[code:R01]]. A empresa adota a taxa mímina de atratividade de [[code:T01]] \\% ao ano. Calcule o VPL do investimento da nova extrusora. \\tiny \\color{bubbles} [[code:RESP]] \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n# para testar\r\n\r\nimport random\r\nP1=random.randrange(25,30)*10000.0  # Valor entre R$ 250.000,00 à R$ 250.000,00\r\nP2=random.randrange(45,50)*1000.0    # Valor entre R$  45.000,00 à R$  50.000,00\r\nU =random.randrange(25,50)*1000.0     # Valor entre R$  25.000,00 à R$  50.000,00\r\nR =random.randrange(10,20)*1000.0     # Valor entre R$  10.000,00 à R$  20.000,00\r\nT= random.randrange(8,20)                   # Valor entre 08% a 20% \r\nN= random.randrange(8,15)                   # Valor entre 8 à 15 anos\r\n\r\nP01= PT_BR(\"%.2f\" % (P1))\r\nP02= PT_BR(\"%.2f\" % (P2))\r\nU01= PT_BR(\"%.2f\" % (U))\r\nR01= PT_BR(\"%.2f\" % (R))\r\nT01= PT_BR(\"%.2f\" % (T))\r\n\r\nK=(((1+T/100)**N)-1)/((T/100)*(1+T/100)**N)\r\nL=(1/((1+T/100)**N))\r\n\r\nVPL=-(P1-P2)+U*K +R*L\r\nRESP=PT_BR(\"%.2f \" % VPL)\r\n\r\n# global correctAnswer, e01\r\n# correctAnswer= RESP\r\n# e01 =PT_BR( \"%.2f\" % ((P1-P2)-U*L-R*K))\r\n# e02 =PT_BR( \"%.2f\" % (P1-U*K))\r\n# e03 =PT_BR( \"%.2f\" % (P2-R*L))\r\n# e04 =PT_BR(\"%.2f\" % (-VPL+R))\r\n\r\n]]','QT','1','remember','yes','2019-08-25',63,111),(1222,'VPL 1','Dissertativa','Uma empresa está analizando uma proposta de projeto que envolve um investimento inicial de R\\$ [[code:P01]], economia anual de R\\$ [[code:U01]] e no final de [[code:N]] anos e proporciona um valor residual de R\\$ [[code:R01]]. A taxa mínima de atratividade da empresa é de 10,00 \\% ao ano. Calcule a Taxa Interna de Retorno - TIR da proposta.  \\tiny \\color{bubbles} [[code:RESP]] \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n# para testar\r\nimport random\r\nimport math\r\n\r\nP =random.randrange(40,50)*10000.0  # Valor entre R$ 420.000,00 à R$ 500.000,00\r\nU =random.randrange(80,105)*1000.0  # Valor entre R$  80.000,00 à R$ 105.000,00\r\nR =random.randrange(10,18)*10000.0  # Valor entre R$ 100.000,00 à R$ 180.000,00\r\nN =5\r\n\r\nP01= PT_BR(\"%.2f\" % (P))\r\nU01= PT_BR(\"%.2f\" % (U))\r\nR01= PT_BR(\"%.2f\" % (R))\r\n\r\n#P=300000\r\n#U= 60000\r\n#R=180000\r\n\r\nxn=1.1\r\nepsilon=1e-6\r\nmax_iter=10\r\nn=0\r\n#fx=P*xn**(N+1)-(P+U)*xn**N -R*xn+(U+R)\r\n#dfx=(N+1)*P*xn**N-N*(P+U)*xn**(N-1)-R\r\n#while n<max_iter or abs((fx))>epsilon:\r\nparada=0\r\nwhile parada==0:\r\n  fx=P*xn**(N+1)-(P+U)*xn**N -R*xn+(U+R)\r\n  dfx=(N+1)*P*xn**N-N*(P+U)*xn**(N-1)-R\r\n  n=n+1\r\n  xn=xn-fx/dfx\r\n  if abs(fx)<epsilon:\r\n    parada=1\r\n  if n>max_iter:\r\n    parada=1\r\n\r\njuros=(xn-1)*100\r\nRESP=PT_BR(\"%.2f \" % juros)\r\n# global correctAnswer, e01\r\n# correctAnswer= RESP\r\n# e01 = PT_BR(\"%.2f\" % (juros*0.8))\r\n# e02 = PT_BR(\"%.2f\" % (juros*1.1))\r\n# e03 = PT_BR(\"%.2f\" % (juros*0.9))\r\n# e04 = PT_BR(\"%.2f\" % (juros*.6))\r\n\r\n]]','QT','1','remember','yes','2019-08-25',63,111),(1223,'Juros 6 Dissertativa','Dissertativa','Dada a tabela com sequência mensal de taxas de juros (\\%) : [[code:i01]];  [[code:i02]];  [[code:i03]];  [[code:i04]]; [[code:i05]] e [[code:i06]]. Usando o método dos juros compostos. Calcule a taxa de juros mensal equivalente.\\tiny \\color{bubbles} [[code:RESP]] \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\n\r\nimport random\r\n\r\ni1=random.randrange(10,20)/10.0 # Sortear juros entre 1% à 2%\r\ni2=random.randrange(10,20)/10.0\r\ni3=random.randrange(10,20)/10.0\r\ni4=random.randrange(10,20)/10.0\r\ni5=random.randrange(10,20)/10.0\r\ni6=random.randrange(10,20)/10.0\r\ni01= \"%.2f\" % (i1)\r\ni01=PT_BR(i01)\r\ni02= \"%.2f\" % (i2)\r\ni02=PT_BR(i02)\r\ni03= \"%.2f\" % (i3)\r\ni03=PT_BR(i03)\r\ni04= \"%.2f\" % (i4)\r\ni04=PT_BR(i04)\r\ni05= \"%.2f\" % (i5)\r\ni05=PT_BR(i05)\r\ni06= \"%.2f\" % (i6)\r\ni06=PT_BR(i06)\r\n\r\nit=(1+i1/100)*(1+i2/100)*(1+i3/100)*(1+i4/100)*(1+i5/100)*(1+i6/100)-1\r\nim=((1+it)**(1/6))-1\r\nim=im*100\r\n \r\nRESP=\"%.2f \" % (im)\r\nRESP=PT_BR(RESP)\r\n# global correctAnswer, e01\r\n# correctAnswer= RESP\r\n\r\n# e01 = \"%.2f\" % (im + random.randrange(1,3)/10.0)\r\n# e01=PT_BR(e01)\r\n\r\n# e02 = \"%.2f\" % (im + random.randrange(3,6)/10.0)\r\n# e02=PT_BR(e02)\r\n\r\n# e03 = \"%.2f\" % (im + random.randrange(6,9)/10.0)\r\n# e03=PT_BR(e03)\r\n\r\n# e04 = \"%.2f\" % (im - random.randrange(1,9)/10.0)\r\n# e04=PT_BR(e04)\r\n\r\n\r\n]]','QT','1','remember','yes','2019-08-25',63,110),(1224,'Juros 1 Dissertativa','Dissertativa','Dada a tabela com sequência de taxas de juros (\\%) mensais : [[code:i01]];  [[code:i02]];  [[code:i03]];  [[code:i04]]; [[code:i05]] e [[code:i06]]. Usando o conceito de juros composto. Calcule a taxa de juros anual equivalente.\\tiny \\color{bubbles} \\ [[code:RESP]]  \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\n\r\ni1=random.randrange(10,20)/10.0 # Sortear juros entre 1% à 2%\r\ni2=random.randrange(10,20)/10.0\r\ni3=random.randrange(10,20)/10.0\r\ni4=random.randrange(10,20)/10.0\r\ni5=random.randrange(10,20)/10.0\r\ni6=random.randrange(10,20)/10.0\r\ni01= \"%.2f\" % (i1)\r\ni01=PT_BR(i01)\r\ni02= \"%.2f\" % (i2)\r\ni02=PT_BR(i02)\r\ni03= \"%.2f\" % (i3)\r\ni03=PT_BR(i03)\r\ni04= \"%.2f\" % (i4)\r\ni04=PT_BR(i04)\r\ni05= \"%.2f\" % (i5)\r\ni05=PT_BR(i05)\r\ni06= \"%.2f\" % (i6)\r\ni06=PT_BR(i06)\r\n\r\nit=(1+i1/100)*(1+i2/100)*(1+i3/100)*(1+i4/100)*(1+i5/100)*(1+i6/100)-1\r\nia=((1+it)**(2))-1\r\nia=ia*100\r\nRESP=\"%.2f\"% (ia)\r\nRESP=PT_BR(ia)\r\n\r\n# global correctAnswer, e01\r\n# correctAnswer= RESP\r\n\r\n# e01 = \"%.2f\" % (ia + random.randrange(1,3)/10.0)\r\n# e01=PT_BR(e01)\r\n# e02 = \"%.2f\" % (ia + random.randrange(3,6)/10.0)\r\n# e02=PT_BR(e02)\r\n# e03 = \"%.2f\" % (ia + random.randrange(6,9)/10.0)\r\n# e03=PT_BR(e03)\r\n# e04 = \"%.2f\" % (ia - random.randrange(1,9)/10.0)\r\n# e04=PT_BR(e04)\r\n\r\n]]','QT','1','remember','yes','2019-08-25',63,110),(1225,'Juros 7 Dissertativa','Dissertativa','Foi realizado um investimento inicial de R\\$ [[code:V1]]. Dada a tabela com sequência de taxas de juros (\\%) : [[code:i01]];  [[code:i02]];  [[code:i03]];  [[code:i04]]; [[code:i05]] e [[code:i06]]. Calcule o rendimento do investimento utlizando o método de juros compostos. \\tiny \\color{bubbles} [[code:RESP]] \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\ni1=random.randrange(10,20)/10.0 # Sortear juros entre 1% à 2%\r\ni2=random.randrange(10,20)/10.0\r\ni3=random.randrange(10,20)/10.0\r\ni4=random.randrange(10,20)/10.0\r\ni5=random.randrange(10,20)/10.0\r\ni6=random.randrange(10,20)/10.0\r\nVI=random.randrange(10,20)*1000\r\n\r\ni01= PT_BR(\"%.2f\" % (i1))\r\ni02= PT_BR(\"%.2f\" % (i2))\r\ni03= PT_BR(\"%.2f\" % (i3))\r\ni04= PT_BR( \"%.2f\" % (i4))\r\ni05= PT_BR(\"%.2f\" % (i5))\r\ni06= PT_BR(\"%.2f\" % (i6))\r\nV1= PT_BR(\"%.2f\" % (VI))\r\n\r\nit=(1+i1/100)*(1+i2/100)*(1+i3/100)*(1+i4/100)*(1+i5/100)*(1+i6/100)-1\r\nVF=VI*it\r\nRESP= PT_BR( \"%.2f \" % VF)\r\n\r\n# global correctAnswer, e01\r\n# correctAnswer= RESP\r\n# e01 = PT_BR(\"%.2f\" % (VF+VF/2))\r\n# e02 = PT_BR(\"%.2f\" % (VI*0.1))\r\n# e03 = PT_BR( \"%.2f\" % (VF*.2))\r\n# e04 = PT_BR(\"%.2f\" % (VF*0.8))\r\n\r\n]]','QT','1','apply','yes','2019-08-25',63,110),(1226,'Juros 8 Dissertativa','Dissertativa','Uma TV está sendo ofertada, cujo o preço a vista é de R\\$ [[code:V]]. Se a taxa de juros cobrada for de [[code:jr]] \\% ao mês em regime de juros compostos, pede-se determinar o valor da prestação com [[code:PX]] \\% de entrada e financiada em [[code:NR]] meses. \\tiny \\color{bubbles} [[code:RESP]] \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n# para testar\r\n\r\nimport random\r\nimport random\r\nJR =random.randrange(10,20)/10.0 # Sortear juros entre 1% à 2%\r\nVR =random.randrange(10,20)*100 # Sortear o valor da TV \r\nPR =random.randrange(00,80)      # Sortear o percentual de entrada\r\nNR =random.randrange(10,24)      # Sortear a quantidade de parcelas\r\n\r\nV=PT_BR( \"%.2f\" % (VR))\r\njr=PT_BR(\"%.2f\" % (JR))\r\nPX=PT_BR(\"%.2f\" % (PR))\r\n\r\n\r\nVP=VR*(1-PR/100)*(((1+JR/100)**NR)*JR/100)/((1+JR/100)**NR-1)\r\n \r\nRESP=PT_BR( \"%.2f \" % VP)\r\n\r\n# global correctAnswer, e01\r\n# correctAnswer=RESP\r\n# e01 = PT_BR(\"%.2f\" % (VP+VP/2))\r\n# e02 = PT_BR(\"%.2f\" % (VR*0.1))\r\n# e03 = PT_BR(\"%.2f\" % (VP*0.2))\r\n# e04 = PT_BR(\"%.2f\" % (VP*0.8))\r\n\r\n]]','QT','1','remember','yes','2019-08-25',63,110),(1227,'Juros 5 Dissertativa','Dissertativa','Sobre o comportamento de um mercado,observa-se que o investimento diminui a uma taxa proporcional à quantidade presente. Se inicialmente a quantidades de investidores é de [[code:N01]] mil, observa-se que após [[code:T0]] anos, perderam [[code:P01]] \\% da quantidade original. Determine o número de investidores após [[code:TX]] anos. \\tiny \\color{bubbles} [[code:RESP]] \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n# para testar\r\n\r\nimport random\r\nimport math\r\nfrom math import exp, expm1\r\nN0 =random.randrange(40,60)         # Valor entre  40 a 60\r\nT0 =random.randrange(2,6)           # Valor entre  2 a 6 anos\r\nP0 =random.randrange(5,15)          # Valor entre  5 a 15%  \r\nTX =random.randrange(2,6)           # Valor entre  2 a 6 anos\r\n\r\nN01= PT_BR(\"%.2f\" % (N0))\r\nP01= PT_BR( \"%.2f\" % (P0))\r\n\r\nk=(1/TX)*math.log((1-P0/100))\r\n\r\nNT=N0*math.exp(k*TX)\r\nRESP=PT_BR( \"%.2f \" % NT)\r\n\r\n# global correctAnswer, e01\r\n# correctAnswer=RESP\r\n# e01 = PT_BR(\"%.2f\" % (NT/2))\r\n# e02 = PT_BR(\"%.2f\" % (NT/3))\r\n# e03 = PT_BR(\"%.2f\" % (NT/4))\r\n# e04 = PT_BR(\"%.2f\" % (NT*TX/100))\r\n\r\n]]','QT','1','apply','yes','2019-08-25',63,110),(1228,'Juros 2 Dissertativa','Dissertativa','Uma loja de eletrodomésticos oferece plano de financiamento para um produto cujo preço à vista é de R\\$ [[code:VA1]].  A loja oferece a proposta com entrada de R\\$ [[code:EX1]] e mais [[code:NP]] prestações mensais iguais de R\\$ [[code:UX]]. Calcule a taxa de juros mensal (\\%) cobrada pela loja em regime de juros compostos. \\tiny \\color{bubbles} [[code:RESP]] \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n\r\n\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\nimport math\r\n\r\n\r\nfrom math import exp, expm1\r\nVA =random.randrange(1000,2000)       # Valor a vista entre  1000 a 2000\r\nPE =random.randrange(10,40)          # Valor de entrada de 10 a 40%\r\nNP =random.randrange(5,15)          # Número de parcelas de 6 a 15 \r\nJR =random.randrange(10,25)/10.0    # Juros entre 1 a 2,5%\r\n\r\n\r\nEN=(PE/100)*VA\r\nix=JR/100\r\nK=ix*(1+ix)**NP\r\nL=(1+ix)**NP-1\r\nEX=EN*PE/100\r\nP=VA-EX\r\nU=P*K/L\r\nix = ix*100\r\n\r\nVA1=PT_BR( \"%.2f\" % (VA))\r\nEX1=PT_BR( \"%.2f\" % (EX))\r\nUX = PT_BR(\"%.2f\" % (U))\r\nRESP=PT_BR(\"%.4f \" % ix)\r\n\r\n# global correctAnswer, e01\r\n# correctAnswer= RESP\r\n# e01 = PT_BR( \"%.4f\" % (ix*1.2))\r\n# e02 = PT_BR(\"%.4f\" % (ix*0.8))\r\n# e03 = PT_BR(\"%.4f\" % (ix*0.7))\r\n# e04 = PT_BR(\"%.4f\" % (ix/2))\r\n\r\n]]','QT','1','remember','yes','2019-08-25',63,110),(1230,'Juros 3 Dissertativa','Dissertativa','Qual é o prazo (em meses) de uma aplicação a uma taxa mensal de [[code:i01]] \\%  que multiplique por [[code:i02]] vezes o seu capital inicial? Em regime de juros compostos.  \\tiny \\color{bubbles} \\ [[code:RESP]]  \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\nimport math\r\n\r\ni1=random.randrange(10,100)/10.0 # Sortear juros entre 1% à 10%\r\ni2=random.randrange(2,7)\r\n\r\ni01= \"%.2f\" % (i1)\r\ni01=PT_BR(i01)\r\ni02= \"%2d\" % (i2)\r\n\r\n\r\nN=math.log(i2)/math.log(1+i1/100)\r\n\r\nRESP=\"%.2f\"% (N)\r\nRESP=PT_BR(RESP)\r\n\r\n]]','QT','1','remember','yes','2019-08-28',63,110),(1231,'Juros 4 Dissertativa','Dissertativa','Qual é a taxa de juros anual,  a que se deve aplicar um capital inicial para que ele multiplique [[code:n0]] vezes o seu valor em [[code:t0]] anos?  Em regime de juros compostos.  \\tiny \\color{bubbles} \\ [[code:RESP]]  \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\nimport math\r\n\r\nn=random.randrange(2,6) # multiplicar o valor \r\nt=random.randrange(5,20) # prazo em anos\r\n\r\nn0= \"%2d\" % (n)\r\n\r\nt0= \"%2d\" % (t)\r\n\r\n\r\ni=(n**(1/t)-1)*100\r\n\r\nRESP=\"%.2f\"% (i)\r\nRESP=PT_BR(RESP)\r\n\r\n]]','QT','1','remember','yes','2019-08-28',63,110),(1232,'Juros 9 Dissertativa','Dissertativa','Foi realizado um empréstimo de R\\$ [[code:P0]] que será pago em [[code:N0]]  parcelas mensais , que formam uma anuidade gradiente, crescente com o primeiro pagamento ao final de [[code:N01]] meses. Se a taxa de juros é de [[code:i0]] \\% a.m., qual é o valor da [[code:N02]]  parcela?  \\tiny \\color{bubbles} \\ [[code:RESP]]  \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n[[def:\r\n# https://repl.it/languages/python3\r\n\r\nimport random\r\nimport math\r\n\r\nP  =random.randrange(1,10) *10000 # Valor de investimento \r\nN  =random.randrange(10,30)           # Número de parcelas\r\nN1=random.randrange(6,10)             # Primeiro mês de pagamento\r\ni    =random.randrange(10,60)/10.0  # Sortear juros entre 1% à 6%\r\nN2  =random.randrange(6,N)           # Número da parcela\r\n\r\nP0= \"%.2f\" % (P)\r\nP0=PT_BR(P0)\r\nN0= \"%2d\" % (N)\r\n\r\nN01= \"%2d \"% (N1)\r\n\r\ni0= \"%.2f\" % (i)\r\ni0=PT_BR(i0)\r\nN02= \"%2d\" % (N2)\r\ni=i/100\r\n\r\na=1/(i*(1+i)**(N+1))\r\nb=(((1+i)**(N+1)-1)/i-(N+1))\r\nc=1/(1+i)**(N-N1)\r\nd=a*b*c\r\nG=P/d\r\nPN=G*N2\r\nRESP=\"%.2f\"% (PN)\r\nRESP=PT_BR(RESP)\r\n\r\n]]','QT','1','remember','yes','2019-08-28',63,110),(1234,'','test draw matrix','In the description of the question, draw this picture with (copy below for a new question):\r\n\\begin{figure}[h!]\r\n\\centering{\r\n  \\includegraphics[scale=0.55]{[[code:fig0]]} \r\n}\r\n\\end{figure}\r\n\r\n[[def:\r\n# for test: https://repl.it/languages/python3\r\n\r\nimport numpy as np\r\nLin=2 \r\nCol=3 \r\nA = np.random.random((Lin, Col))*10\r\nA = A.astype(int)\r\nfig0 = \'myfigExample01z\'\r\ndrawMatrix(A,fig0)\r\n]]','QM','1','remember','yes','2019-09-02',1,11),(1235,'','template-ulm','A car moves on a road with an hourly function\r\n$s=[[code:a0]] + [[code:a1]]t$, where $s$ is\r\ngiven in miles and $t$ in hours. The car passes\r\nthe mile [[code:a2]] exactly at:\r\n\r\n[[def:\r\na0 = random.randrange(-6, 12, 1)  # return\r\na1 = random.randrange(3, 8, 1)      # random\r\na2 = random.randrange(3, 8, 1)     # numbers\r\n\r\ndef algorithm(a):\r\n    a0=int(a[0])\r\n    a1=int(a[1])\r\n    a2=int(a[2])\r\n    s,t = symbols(\'s,t\')\r\n    s=a0+a1*t\r\n    r = float(solve(s-a2,t)[0])\r\n    return r\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0,a1,a2])\r\n]]','QM','1','remember','yes','2019-09-04',1,16),(1236,'','template-equation-parametric0-en','% Part I: description of a question \r\nBuild a matrix of generic dimensions, for example, $[[code:a0]] \\times [[code:a1]]$ whose elements $(i,j)$ are $((((i+1) * [[code:a2]]) + ((j+1) * [[code:a3]])) \\mod{100})$. Compute the sum of the entries of this matrix. Indexes $i$ of rows and $j$ of columns begin with $0$.\r\n\r\n% Part II: we need to write cases here as a comment\r\n% necessario para gerar casos de testes no moodle ==> mude verbatim <==> comment apos finalizar a questao\r\n\r\n\\begin{comment}\r\n[[code:moodle_cases]]\r\n\\end{comment}\r\n\r\n% Part III: python code\r\n[[def:\r\ndef algorithm(a): # code to return a correct answer\r\n  a0, a1, a2, a3 = a\r\n  P = np.zeros((a0,a1))\r\n  for i in range(a0): # for each line\r\n    for j in range(a1): # for each column\r\n      P[i,j] = (((i+1)*a2)+((j+1)*a3))%100\r\n  return int(P.sum())\r\n\r\ndef myRandom():\r\n  a0=random.randrange(60, 80, 1)\r\n  a1=random.randrange(60, 80, 1)\r\n  return [a0,a1]\r\n\r\n# same equation for each model/variation Exam\r\na0, a1 = myRandom()\r\na2=random.choice([7, 13, 19])\r\na3=random.choice([11, 17, 23])\r\nglobal correctAnswer\r\n\r\ninp1=[a0,a1,a2,a3]\r\nout1 = algorithm(inp1)\r\ncorrectAnswer=out1\r\n\r\n# other test cases\r\na0, a1 = myRandom()\r\ninp2=[a0,a1,a2,a3]\r\nout2 = algorithm(inp2)\r\na0, a1 = myRandom()\r\ninp3=[a0,a1,a2,a3]\r\nout3 = algorithm(inp3)\r\n\r\n#           [ [case1], [case2], [case3], ... ]\r\ninput  = [  inp1   ,  inp2   ,  inp3 ]\r\noutput= [ [out1] , [out2]  ,  [out3] ]\r\nmoodle_cases = getCasesMoodle(input, output)\r\n]]','QM','1','remember','yes','2019-09-04',1,12),(1237,'','conceito 1D 2D 3D - en','The \\_\\_\\_\\_\\_\\_ in Data Structure is also known as array [[code:a0]] - dimensional. Check the alternative that completes the gap.\r\n\r\n\r\n[[def:\r\n# to return the correct answer with the variables below\r\na1 = [\"1D\",\"2D\",\"3D\"]                      # appears in the text\r\na2 = [\"Vector\",\"Matrix\",\"Video\"]    # appears in the answer\r\na0 = random.choice(a1)    # raffle one that will appear in the text\r\n\r\ndef algorithm(a):\r\n    global a1,a2\r\n    resp = \"\"\r\n    for i in range(0,len(a1)):\r\n    	if a[0] == a1[i]:\r\n       	   resp = a2[i]\r\n    return resp\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0])\r\n]]\r\n\r\n\r\n% primeira alternativa sempre a correta, e todas distintas\r\n% createWrongAnswers([2]) - create 2 different wrong answers','QM','1','remember','yes','2019-09-04',1,11),(1238,'','Table Test  - 18.2','Simulate the execution of the PROGRAM below by performing a TABLE TEST. Note in the TABLE TEST table all rows that modify one of the values contained in the indicated variables until the algorithm ends. At the same time, write down in the OUTPUT column all outputs (write command) of the program. Consider as input a = [[code:a0]] and b = [[code:a1]]. You do not have to repeat values when the variable has not been updated.\r\n \r\n\r\n\r\n\\newcolumntype{C}{>{\\centering\\arraybackslash}p{2.8em}}\r\n\\begin{multicols}{2}\r\n\\begin{lstlisting}\r\n\r\nprogram { fuction begin() {\r\n1  integer a=-1, b=-2, c=[[code:a2]], d=[[code:a3]]\r\n2  read(a)\r\n3  read(b)\r\n4  while (d>0) {\r\n5    d=d-1\r\n6    if (b<a) {\r\n7      a=a-[[code:a4]]\r\n8      write(\"\\n111\")\r\n9    }\r\n10   if (b>a) {\r\n11     write(\"\\n222\")\r\n12   } else {\r\n13     b=b+[[code:a5]]\r\n14     write(\"\\n333\")\r\n15   }\r\n16 }\r\n}} \r\n\\end{lstlisting}  \r\n\r\n\\columnbreak\r\n\r\n\r\n\\centering\r\n\\begin{tabular}{|l|C|C|C|C|C|c|}\r\n\\hline\r\n\\multicolumn{6}{|c|}{\\textbf{TABLE TEST}} \\\\ \\hline\r\nrow   & a   & b   & c   & d  & OUT. \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n          &      &      &      &     &     \\\\ \\hline\r\n\\end{tabular}\r\n\r\n\\end{multicols}\r\n\r\n\\\\\r\n\\ \\ \\\r\n\r\n\\newpage\r\n\r\n{\\color{bubbles}\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n}\r\n\r\n\\\\\r\n\\ \\ \\\r\n\\newpage\r\n\r\n[[def:\r\n# to test, copy and paste or code below into: repl.it/languages/python3\r\n\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5\r\n  a0=random.randrange(11, 20, 1)\r\n  a1=random.randrange(11, 20, 1)\r\n  a2=random.randrange(5, 7, 1)\r\n  a3=random.randrange(1, 7, 1)\r\n  a4=random.randrange(1, 4, 1)\r\n  a5=random.randrange(1, 4, 1)\r\n  return [a0,a1,a2,a3,a4,a5]\r\n\r\n# to test run the links above and remove # and the 3 quotes here and at the end\r\ndef algorithm(A):\r\n  a=-1;b=-2;c=A[2];d=A[3]\r\n  mystr = \"a0=%d  a1=%d\\n\" % (A[0],A[1])\r\n  mystr += \"row  a  b  c d\\n\"\r\n  mystr += \"   1   %d %d %d %d\\n\" % (a,b,c,d)\r\n  mystr += \"   2   %d %d %d %d\\n\" % (a,b,c,d)\r\n  a=A[0]\r\n  mystr += \"   2   %d %d %d %d\\n\" % (a,b,c,d)\r\n  b=A[1]\r\n  mystr += \"   3   %d %d %d %d\\n\" % (a,b,c,d)\r\n  while d>0:\r\n    d-=1\r\n    mystr += \"   3   %d %d %d %d\\n\" % (a,b,c,d)\r\n    if b<a:\r\n      a-=A[4]\r\n      mystr += \"   7   %d %d %d %d\\n\" % (a,b,c,d)\r\n      mystr += \"   8               111\\n\"\r\n    if b>a:\r\n      mystr += \"   11              222\\n\"\r\n    else:\r\n      b+=A[5]\r\n      mystr += \"   13  %d %d %d %d\\n\" % (a,b,c,d)\r\n      mystr += \"   14              333\\n\"\r\n  mystr += str(len(mystr))\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula = algorithm(A)  \r\n  if 250<len(mySimula)<300:\r\n    #print (A)\r\n    #print (mySimula)\r\n    break\r\n]]','QT','1','remember','yes','2019-09-04',1,11),(1239,'','max 3 neighbors (moodle) - en','Create 2 vectors $ [[code:var1]] 1$ and $ [[code:var1]] 2$ of integers with $[[code:a0]]$ positions each.\r\n \r\nRead $[[code:a0]]$ elements by storing them in the $ [[code:var1]] 1$ vector. \r\n\r\nFill in the vector $[[code:var1]] 2$ from $ [[code:var1]] 1 $ based on the following rule, while $ [[code:var0]] $ is the index variable that will be used to access both vectors:\r\n\r\n\r\n\\begin{itemize}\r\n\\item if $ [[code:var0]] = 0$,  \r\n$[[code:var1]] 2[ [[code:var0]] ]$   receives [[code:a1]]  elements into  $\\{[[code:var1]] 1[ [[code:a0-1]] ], [[code:var1]] 1[0], [[code:var1]] 1[1]\\}$;\r\n\r\n\\item if $ [[code:var0]] = [[code:a0-1]]$, \r\n$[[code:var1]] 2[ [[code:var0]] ]$ receives [[code:a1]]  elements into  $\\{[[code:var1]] 1[ [[code:a0-2]] ], [[code:var1]] 1[ [[code:a0-1]] ], [[code:var1]] 1[0]\\}$; \r\n\r\n\\item if $ [[code:var0]]$ its between $1$ anb  $[[code:a0-1]]$, that is, $1\\leq [[code:var0]] < [[code:a0-1]]$, \r\n$ [[code:var1]] 2[ [[code:var0]] ]$ receives[[code:a1]]  elements into  $\\{ [[code:var1]] 1[ [[code:var0]] -1], [[code:var1]] 1[  [[code:var0]]  ], [[code:var1]] 1[  [[code:var0]]  +1]\\}$.\r\n\\end{itemize}\r\n\r\n\\noindent\\textbf{ATTENTION:} \\\\ Submit the file \\textbf{exam.java}  (with the answer) and the file  \\textbf{model.txt}, containing only the text \\textbf{Model: [[code:model]]}. First upload the java file and then the txt file.\r\n\r\n\\vspace{5mm}\\noindent\\textbf{Example:}\r\n\\begin{verbatim}\r\n[[code:mySimula]] \r\n\\end{verbatim}\r\n\r\n[[def:\r\n# para teste: https://repl.it/languages/python\r\nimport random, numpy as np\r\n\r\na_tam   = 2 # random.randrange(0,3,1)\r\na_inicio = 20\r\na0=random.randrange(a_inicio, a_inicio+a_tam+1, 1)\r\noper = [\"bigger\",\"smaller\"]        \r\na1=random.choice(oper) \r\n\r\nletters = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\"]\r\n\r\nmodel = letters[oper.index(a1)*(1+a_tam)+(a0-a_inicio)]\r\n\r\nvar0 = random.choice([\"i\",\"j\",\"x\",\"y\",\"w\",\"k\",\"p\"])\r\nvar1 = random.choice(letters)\r\n\r\nglobal mySimula\r\nv1 = np.random.randint(9, size=a0)\r\nv2 = np.zeros(a0, dtype=\'int\')\r\n\r\nmySimula = \'input : \' + \' \'.join([str(i) for i in v1])\r\n\r\nfor i in range(a0):\r\n  aux = [v1[(i-1)%a0], v1[i], v1[(i+1)%a0]]\r\n  if a1==oper[0]: #max\r\n    v2[i]= np.max(aux)\r\n\r\n  if a1==oper[1]: #min\r\n    v2[i]= np.min(aux)\r\n\r\nmySimula += \'\\noutput: \' + \' \'.join([str(i) for i in v2])\r\n]]','QM','1','remember','yes','2019-09-04',1,11),(1240,'teo q1','teste de mesa 2020.q1-p1','Simule a execução do algoritmo \\textbf{MISTÉRIO} através de \"teste de mesa\" e preencha o(s) valor(es) na tabela \\textbf{TESTE DE MESA} anotando o NÚMERO de cada LINHA executada e os valores de cada variável apenas \\textbf{das linhas que modificam (ATRIBUIÇÃO OU LEIA)} até que o programa seja encerrado. Simultaneamente, anote na coluna \\textbf{SAÍDA DE DADOS} todas as saídas  (comando escreva) do programa. Não é necessário repetir valores quando a variável não for atualizada.\r\n \r\n\\newcolumntype{C}{>{\\centering\\arraybackslash}p{1.5em}}\r\n\r\n\\begin{multicols}{2}\r\n\\lstset{moredelim=[is][\\bfseries]{[*}{*]}}\r\n\\begin{lstlisting}\r\n 1    inteiro z=[[code:a1]], n=[[code:a2]], b=[[code:a3]], c=[[code:a4]]\r\n 2    inteiro cont= 5 			\r\n 3    n= (n + 1) + (b + c)\r\n 4    escreva(\" n = \", n)\r\n 5    [*enquanto*] (cont <= n) { 		\r\n 6       z = z + (b - 1)\r\n 7       [*se*] (b % 3 == 0) {\r\n 8              b = b + 3\r\n 9            escreva(\" b1 = \", b)\r\n10       }\r\n11       [*se*] (b % 2 == 0) {\r\n12            z = z - 1\r\n13            b = b - 1\r\n14            escreva(\" b2 = \", b)\r\n15       }	\r\n16       [*senao*] {\r\n17            b = b + 2\r\n18            escreva(\" b3 = \", b)		\r\n19            z=z+2 		         	\r\n20       }\r\n21       cont=cont+2\r\n22    } 		\r\n23    escreva (\" z = \", z )\r\n\\end{lstlisting}  \r\n\r\n\\columnbreak\r\n\\centering\r\n\\hspace{-0.9cm}\r\n\\begin{tabular}{|l|C|C|C|C|C|C|C|}\r\n\\hline\r\n\\multicolumn{6}{|c|}{TESTE DE MESA} & \\multicolumn{1}{c|}{SAÍDA DE DADOS} \\\\ \\hline\r\n{\\tiny LINHA} & z  &n  & b  & c & cont &     \\\\ \\hline\r\n                      &    &    &      &     &       &    \\\\ \\hline\r\n                      &    &    &        &         &     &    \\\\ \\hline\r\n                      &    &    &        &         &     &    \\\\ \\hline\r\n                      &    &    &        &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n                      &    &    &         &         &     &    \\\\ \\hline\r\n\\end{tabular}\r\n\r\n\\end{multicols}\r\n\\newline\r\n\\textfb{ATENÇÃO: Você pode usar o \\textbf{VERSO} da folha dessa questão como RASCUNHO para esta ou outras questões}.\\\\\r\n\\\\\r\n\\ \\ \\\r\n\r\n{\\color{white}\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n}\r\n\r\n\\\\\r\n\\ \\ \\\r\n\\newpage\r\n\r\n[[def:\r\n# para testar, copie e cole o código abaixo em um dos links:\r\n#https://repl.it/languages/python\r\n#import random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5\r\n  i0 = random.randrange(0,4,1) # sorteia uma das 4 variacoes\r\n  v_z    = [9,7,5,3]\r\n  v_n    = [-1,-5,-9,-13]\r\n  v_b    = [3,4,7,9]\r\n  v_c = [5,7,9,11]         \r\n  a0=0 \r\n  a1=v_z[i0]      # z\r\n  a2=v_n[i0]      # n\r\n  a3=v_b[i0]      # b\r\n  a4=v_c[i0]   # c\r\n  a5=0        \r\n  return [a0,a1,a2,a3,a4,a5]\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  z=A[1];n=A[2];b=A[3];c=A[4]\r\n  cont= 5\r\n  mystr = \"linha  z  n  b  c  cont  \\n\"\r\n  n = (n + 1) + (b + c)\r\n  mystr += \"    1  %d  %d  %d  %d\\n\" % (z,n,b,c)\r\n  mystr += \"    2  %d  %d  %d  %d    %d\\n\" % (z,n,b,c,cont)\r\n  mystr += \"    3  %d  %d  %d  %d    %d    %d\\n\" % (z,n,b,c,cont,n)\r\n  mystr += \"    4  %d  %d  %d  %d    %d    n=%d\\n\" % (z,n,b,c,cont,n)\r\n  while cont <= n:\r\n    z = z + (b - 1)\r\n    mystr += \"    6  %d  %d  %d  %d   %d    %d\\n\" % (z,n,b,c,cont,z)\r\n    if (b % 3 == 0):\r\n      b = b + 3\r\n      mystr += \"    8  %d  %d  %d  %d  %d\\n\" % (z,n,b,c,cont)\r\n      mystr += \"    9  %d  %d  %d  %d  %d    b1=%d\\n\" % (z,n,b,c,cont,b)\r\n    if (b % 2 == 0):\r\n      z = z - 1\r\n      b = b - 1\r\n      mystr += \"   12  %d  %d  %d  %d  %d\\n\" % (z,n,b,c,cont)\r\n      mystr += \"   13  %d  %d  %d  %d  %d\\n\" % (z,n,b,c,cont)\r\n      mystr += \"   14  %d  %d  %d  %d  %d    b2=%d\\n\" % (z,n,b,c,cont,b)\r\n    else:\r\n      b = b + 2\r\n      mystr += \"   17  %d  %d  %d  %d   %d\\n\" % (z,n,b,c,cont)\r\n      mystr += \"   18  %d  %d  %d  %d   %d    b3=%d\\n\" % (z,n,b,c,cont,b)\r\n      z = z + 2\r\n      mystr += \"   19  %d  %d  %d  %d   %d\\n\" % (z,n,b,c,cont)\r\n\r\n    cont = cont + 2\r\n    mystr += \"   21  %d  %d  %d  %d   %d  \\n\" % (z,n,b,c,cont)\r\n  mystr += \"   23  %d  %d  %d  %d   %d    z=%d\\n\" % (z,n,b,c,cont,z)\r\n\r\n  mystr += str(len(mystr))\r\n  return str(mystr)\r\n\r\nwhile True:\r\n  A=myRandom()\r\n  mySimula = algorithm(A)  \r\n  #if 400<len(mySimula)<500:\r\n  #print A\r\n  #print mySimula\r\n  break\r\n]]','QT','3','understand','yes','2020-03-10',20,3),(1241,'teo q2','if-promoção-operadora-telefone 2019.q3-p1','Uma companhia de telefonia celular realiza uma campanha para atrair e fidelizar clientes com base no TIPO DE CONTA (pré ou pós-pago), VALOR DA RECARGA (pré-pago) ou  PLANO (pós-pago). O cliente poderá receber prêmios na forma de descontos na conta e/ou Bônus Internet.  Escreva um programa para exibir os prêmios obtidos por um cliente conforme tabela a abaixo.\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\begin{tabular}{|l|l|l|l|l|}\r\n\\hline\r\nTipo de conta & Valor da Recarga      & Plano  & Descontos & Bônus Internet \\\\ \\hline\r\nPré-pago      & $\\ge$ [[code:a0]]  \\hspace{2}reais & -      &           & [[code:a2]] GB           \\\\ \\hline\r\nPré-pago      & \\textless [[code:a0]] e \\textgreater [[code:a1]] reais  & -      &           & [[code:a3]] GB           \\\\ \\hline\r\nPós-Pago      & -                     & Normal & [[code:a4]] reais   & [[code:a6]] GB           \\\\ \\hline\r\nPós-Pago      & -                     & Ouro   & [[code:a5]] reais  & [[code:a7]] GB           \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\n\\textbf{\\uline{Atenção:}}\\  \\textbf{É obrigatório o uso de seleção encadeada }(se/senão/se). Soluções $``$corretas$\"$  mas sem o uso de seleção encadeada terão conceito máximo igual a $``$B$\"$ \\par\r\n\r\nObservações: \\par\r\n\r\n\\begin{itemize}\r\n	\\item Nessa questão não é obrigatório fazer a validação de dados. Assuma que o usuário digitará valores válidos.\\par\r\n\r\n	\\item Considere que o usuário irá informar o número [[code:a8]] para pré-pago e [[code:a9]] para pós-pago.\\par\r\n\r\n	\\item Considere que o usuário irá informar o número [[code:a10]]\\  para o plano Normal e [[code:a11]] para o plano Ouro.\\par\r\n\r\n	\\item Caso as entradas do usuário não se enquadrem nas condições da tabela acima, deve-se informar Desconto = 0 e/ou Bonus = 0\r\n\\end{itemize}\\par\r\n\r\n\\underline{ATENÇÃO 1}: A ausência de \\textbf{endentação (recuos)} no seu código poderá gerar $\"$descontos$\"$ na atribuição do conceito nessa questão.\r\n \r\n\\underline{ATENÇÃO 2:} \\textbf{ A sua RESPOSTA a esta questão deve estar APENAS na frente e/ou verso desta folha. NÃO use esta folha como RASCUNHO. Se necessitar de rascunho CONSULTE o professor.}\\\\\r\n\\newline\r\n\\noindent\\textbf{Exemplos\\n:}\r\n\r\n\\begin{verbatim}\r\n[[code:mySimula]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{52}\r\n\r\n\\newpage\r\n\r\n[[def:\r\n#https://repl.it/languages/python\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5, a6,a7,a8,a9,a10,a11\r\n  i0 = random.randrange(0,4,1) # sorteia uma das 4 variacoes\r\n  vrec1   = [30,40,50,60]\r\n  vrec2   = [15,20,25,30]\r\n  vbonpre1 = [3,4,5,6] \r\n  vbonpre2 = [1,2,3,4]         \r\n  vdesc1 = [5,6,7,8] \r\n  vdesc2 = [10,12,15,20]\r\n  vbonpos1  = [2,3,4,5]\r\n  vbonpos2 = [4,5,6,7]         \r\n  vpre = [1,4,7,1]         \r\n  vpos= [3,6,9,9]         \r\n  vnor = [4,7,1,7]         \r\n  vour = [6,9,3,3]         \r\n  a0 = vrec1[i0]    \r\n  a1 =  vrec2[i0]    \r\n  a2 =  vbonpre1[i0]   \r\n  a3 =  vbonpre2[i0] \r\n  a4 =  vdesc1[i0] \r\n  a5 =  vdesc2[i0]\r\n  a6 =  vbonpos1[i0] \r\n  a7 =  vbonpos2[i0]\r\n  a8 =  vpre[i0]\r\n  a9 =  vpos[i0]\r\n  a10 =  vnor[i0]\r\n  a11 =  vour[i0] \r\n  return [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11]\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n  conta = A[8]\r\n  recarga = A[0] + 5\r\n  plano = A[10]\r\n  desconto = 0.0\r\n  bonus = 0 \r\n  \r\n  mystr = \"Caso 1 - Entradas: Tipo Conta: %d | Valor Recarga: %8.2f \" % (conta, recarga) \r\n\r\n  if (conta == A[8]):    \r\n    if (recarga >= A[0]):\r\n       bonus = A[2]	\r\n    else:\r\n       if (recarga > A[1]):\r\n     	  bonus = A[3]\r\n    mystr  += \"\\nSaida: Bonus Internet = %d GB\" % (bonus)  \r\n  else:\r\n     if (plano == A[10]):\r\n        desconto = A[4]	\r\n        bonus = A[6]\r\n     else:\r\n       if (plano == A[11]):\r\n          desconto = A[5]	\r\n          bonus = A[7]	\r\n     mystr  += \"\\nSaida: Desconto =  %8.2f | Bonus Internet = %d GB\" % (desconto, bonus) \r\n  #--------------- pos pago\r\n  conta = A[9]\r\n  recarga = A[1] + 5\r\n  plano = A[11]\r\n  desconto = 0.0\r\n  bonus = 0 \r\n  \r\n  mystr += \"\\n Caso 2 - Entradas: Tipo Conta: %d | Plano: %d\" % (conta, plano) \r\n\r\n  if (conta == A[8]):    \r\n    if (recarga >= A[0]):\r\n       bonus = A[2]	\r\n    else:\r\n       if (recarga > A[1]):\r\n     	  bonus = A[3]\r\n    mystr  += \"\\nSaida: Bonus Internet = %d GB\" % (bonus)  \r\n  else:\r\n     if (plano == A[10]):\r\n        desconto = A[4]	\r\n        bonus = A[6]\r\n     else:\r\n       if (plano == A[11]):\r\n          desconto = A[5]	\r\n          bonus = A[7]	\r\n     mystr  += \"\\nSaida: Desconto =  %8.2f | Bonus Internet = %d GB\" % (desconto, bonus) \r\n  return str(mystr)\r\n\r\nA=myRandom()\r\nmySimula = algorithm(A) \r\n#print A\r\n#print mySimula \r\n]]','QT','2','apply','yes','2019-10-08',20,2),(1242,'teo q3','while-promocao-hotel 2019.q3-p1','\\begin{document}\r\nUma $\"$Rede de Hotéis$\"$  elaborou com especialistas de nutrição e educação física, um programa de hospedagem integrado com atividades físicas e reeducação alimentar.  Durante a estadia não há fiscalização, apenas orientações.  O hóspede receberá descontos na estadia, de acordo com a perda de peso no período. Na chegada, cada hóspede recebe um relógio inteligente no qual é registrado sua idade e peso (conferido na balança). Durante a estadia, o relógio registra de forma acumulativa a quantidade de calorias gastas. Na saída, o hóspede devolve o relógio e passa por uma nova pesagem. \r\n\\par\r\nEscreva um programa para processar os dados coletados para cada hóspede. O programa deve ler, para cada hóspede: (i) idade; (ii) peso chegada; (iii) peso saída; (iv) calorias gastas;\\par\r\n\r\nConsidere que \\underline{a digitação será encerrada} quando for digitada uma \\textfbf{idade $\\le$ a zero}, indicando que não há mais hóspedes com dados a serem processados.\\par\r\n\r\n\\vspace{\\baselineskip}\r\n\\textbf {Faça a validação de dados das $\"$calorias gastas$\"$  que devem estar entre} [[code:a0]] e [[code:a1]]\\par\r\n\\par\r\nO programa deve imprimir também \\underline{para cada hospede}, a quantidade de calorias gastas, a diferença de quilos (chegada e saída), e o valor do desconto obtido (desconto = 0 se não obteve desconto). \r\nO desconto será de  [[code:a2]] reais por quilo reduzido. \\par\r\n\r\nO programa deve imprimir, \\underline{após encerrar a entrada de dados}:\\par\r\n\r\na) Quantidade total de hospedes\\par\r\nb) Quantidade de Hospedes entre [[code:a3]] e [[code:a4]] anos (inclusive [[code:a3]] e [[code:a4]])\\par\r\nc) Média das calorias gastas dos Hospedes entre [[code:a3]] e [[code:a4]] anos (inclusive [[code:a3]] e [[code:a4]])\\par\r\nd) Quantidade de hospedes que $\"$reduziram o peso$\"$ \\par\r\n\\\\\\\\\r\n\r\n\\begin{itemize}\r\n\\item ATENÇÃO 1: Caso você não faça a validação de dados das calorias gastas, o conceito máximo atribuído a sua solução será $\"$B:$\"$\r\n\\item ATENÇÃO 2:  A ausência de \\textbf{endentação (recuos)} no seu código poderá gerar $\"$descontos$\"$ na atribuição do conceito nessa questão.\r\n\\item ATENÇÃO 3: Vide abaixo EXEMPLOS de Entradas e respectivas SAÍDAS DE DADOS. Não precisa mostrar as entradas de dados. Exiba apenas as linhas marcadas como \"=$>$SAÍDA\" abaixo. Não é necessário imprimir o rótulo \"=$>$SAÍDA\":\r\n\\end{itemize}\r\n\\underline{ATENÇÃO:} \\textbf{ A sua RESPOSTA a esta questão deve estar APENAS na frente e/ou verso desta folha. NÃO use esta folha como RASCUNHO. Se necessitar de rascunho CONSULTE o professor.}\r\n\\begin{verbatim}\r\n[[code:mySimula1]]\r\n\\end{verbatim}\r\n\r\n\\drawLines{45}\r\n\r\n[[def:\r\n#https://repl.it/languages/python\r\n\r\nimport random\r\n\r\ndef myRandom():\r\n  global a0,a1,a2,a3,a4,a5\r\n  i0 = random.randrange(0,4,1) # sorteia uma das 4 variacoes\r\n  calor1 = [1500,1600,1800,1900]  # calorias inicial\r\n  calor2 = [6000,6300,6800,7000]  # calorias final\r\n  desc1 = [20, 30, 40, 50] # desconto por quilo perdido\r\n  idade1 = [50,55,60,65]  # idade inicial\r\n  idade2 = [60,65,70,75]  # idade final\r\n     \r\n  a0 = calor1[i0]    #calorias inicial\r\n  a1 = calor2[i0]    #calorias final\r\n  a2 = desc1[i0]     #desconto por quilo perdido\r\n  a3 = idade1[i0]    #idade inicial\r\n  a4 = idade2[i0]    #idade final\r\n  a5 = 0        \r\n  return [a0,a1,a2,a3,a4,a5]\r\n\r\ndef algorithm(A):\r\n  mystr=\"\"\r\n  contred=0\r\n  total=0\r\n  contid=0\r\n  somacal=0\r\n \r\n  #idade = random.randrange(15,90,1) \r\n  \r\n  while (total < 5):\r\n    total+=1  \r\n    #----\r\n    idade = random.randrange(15,90,1)\r\n    peso1 = random.randrange(60,120,1)\r\n    varia = random.randrange(-3,6,1)\r\n    peso2= peso1 + varia\r\n    pesodif = peso2 - peso1 \r\n    calorias = random.randrange(A[0], A[1], 10)\r\n    #*********\r\n    if (pesodif < 0):\r\n      contred+=1\r\n      desconto = pesodif * A[2]\r\n    else:\r\n      desconto = 0.0 \r\n    #****** \r\n    if (idade >= A[3] and idade <= A[4]):\r\n      somacal = somacal + calorias\r\n      contid=contid+1   \r\n    #----\r\n    mystr+=\"\\n*ENTRADA - Idade: %3d  Peso Chegada: %3d  Peso Saída: %4d  Calorias Gastas: %5d\" % (idade, peso1,peso2,calorias)\r\n    mystr+=\"\\n=>SAÍDA - Calorias Gastas: %3d  Diferença Quilos: %3d  Desconto: %8.2f reais\" % (calorias, pesodif,desconto)  \r\n    #mystr+=\"Peso: %3d  Tipo: %d  Sem Desconto: %5.2f  Com Desconto: %5.2f \\n\" % (peso,tipo,valor,comdesc)\r\n   \r\n    #idade = random.randrange(-1,90,1)\r\n  #----\r\n  if (contid > 0):\r\n    mediacal = somacal/contid\r\n  else:\r\n    mediacal = 0  \r\n  #----  \r\n  idade = -1\r\n  mystr+=\"\\n*ENTRADA - Idade: %3d\" % (idade)\r\n  mystr+=\"\\n\\n=>SAÍDA - a) Total de Hospedes: %18d\" % (total)\r\n  mystr+=\"\\n=>SAÍDA - b) Quant. Hospedes entre %3d e %3d anos : %3d\" % (A[3], A[4], contid)\r\n  mystr+=\"\\n=>SAÍDA - c) Media das Calorias dos hospedes entre %3d e %3d anos : %8.2f\" % (A[3], A[4], mediacal)\r\n  mystr+=\"\\n=>SAÍDA - d) Quantidade reduziram peso:  %3d\" % (contred)\r\n  return str(mystr)\r\n\r\nA=myRandom()\r\nmySimula1 = algorithm(A)\r\n\r\n]]','QT','3','apply','yes','2019-10-08',20,3),(1243,'','Sistemas Lineares0','Crie uma matriz 3 x 5 de inteiros, com elementos (i, j) = i + j, com índices começando em zero, imprima a soma dos elementos da matriz.','QM','1','remember','no','2019-10-09',1,128),(1244,'','Sistemas Lineares0','% Part I: description of a question \r\nBuild a matrix of generic dimensions, for example, $[[code:a0]] \\times [[code:a1]]$ whose elements $(i,j)$ are $((((i+1) * [[code:a2]]) + ((j+1) * [[code:a3]])) \\mod{100})$. Compute the sum of the entries of this matrix. Indexes $i$ of rows and $j$ of columns begin with $0$.\r\n\r\n% Part II: we need to write cases here as a comment\r\n\\begin{comment}\r\n[[code:cases_moodle]]\r\n\\end{comment}\r\n\r\n% Part III: python code\r\n[[def:\r\ndef algorithm(a): # code to return a correct answer\r\n  a0, a1, a2, a3 = a\r\n  P = np.zeros((a0,a1))\r\n  for i in range(a0): # for each line\r\n    for j in range(a1): # for each column\r\n      P[i,j] = (((i+1)*a2)+((j+1)*a3))%100\r\n  return int(P.sum())\r\n\r\ndef myRandom():\r\n  a0=random.randrange(60, 80, 1)\r\n  a1=random.randrange(60, 80, 1)\r\n  return [a0,a1]\r\n\r\n# same equation for each model/variation Exam\r\na0, a1 = myRandom()\r\na2=random.choice([7, 13, 19])\r\na3=random.choice([11, 17, 23])\r\nglobal correctAnswer\r\n\r\ninp1=[a0,a1,a2,a3]\r\nout1 = algorithm(inp1)\r\ncorrectAnswer=out1\r\n\r\n# other test cases\r\na0, a1 = myRandom()\r\ninp2=[a0,a1,a2,a3]\r\nout2 = algorithm(inp2)\r\na0, a1 = myRandom()\r\ninp3=[a0,a1,a2,a3]\r\nout3 = algorithm(inp3)\r\n\r\n#           [ [case1], [case2], [case3], ... ]\r\ninput  = [  inp1   ,  inp2   ,  inp3 ]\r\noutput= [ [out1] , [out2]  ,  [out3] ]\r\ncases_moodle = getCasesMoodle(input, output)\r\n]]','QM','1','remember','yes','2019-10-09',1,128),(1245,'','Sistemas Lineares0','% texto da questão\r\nUm automóvel percorre uma estrada com função horária $s=[[code:a0]] + [[code:a1]]t$, onde $s$ é dado em quilômetros e $t$ em horas. O automóvel passa pelo km [[code:a2]] após:\r\n\r\n(Testando a biblioteca simbólica sympy, ver docs.sympy.org)\r\n\r\n% trecho necessário para gerar os casos de teste que serão enviados por email para o prof. que gerar as provas em pdf\r\n\\begin{comment}\r\n [[code:moodle_cases]]\r\n\\end{comment}\r\n\r\n[[def:\r\na0 = random.randrange(-6, 12, 1)  # sortear um número dentre estes três\r\na1 = random.randrange(3, 8, 1)  \r\na2 = random.randrange(3, 8, 1)\r\n\r\ndef algorithm(a):\r\n    a0=int(a[0])\r\n    a1=int(a[1])\r\n    a2=int(a[2])\r\n    s,t = symbols(\'s,t\')\r\n    s=a0+a1*t\r\n\r\n    r = float(solve(s-a2,t)[0])\r\n\r\n    return r\r\n\r\nglobal correctAnswer\r\ncorrectAnswer= algorithm([a0,a1,a2])\r\n\r\ncases = {}\r\ncases[\'input\']    = np.array([[a0, a1]]).tolist()\r\ncases[\'output\'] = np.array([[correctAnswer, \'lac-O\'],[\'saida2\']]).tolist()\r\nimport json \r\nmoodle_cases = json.dumps(cases)\r\n\r\n\r\n]]','QM','1','remember','yes','2019-10-09',1,128),(1246,'','Ler 3 valores e calcular a média entre eles','% Part I: description of a question \r\nLeia 3 números reais, separados por uma quebra de linha, e calcule a média aritmética entre eles. Por exemplo, se a entrada for composta pelos números $[[code:in0]], [[code:in1]], [[code:in2]]$, o resultado esperado é $[[code:PT_BR(correctAnswer)]]$.\r\n\r\n% Part II: we need to write cases here as a comment\r\n\\begin{comment}\r\n[[code:cases_moodle]]\r\n\\end{comment}\r\n\r\n% Part III: python code\r\n[[def:\r\ndef rand_input():\r\n  in0=random.randrange(60, 80, 1)\r\n  in1=random.randrange(60, 80, 1)\r\n  in2=random.randrange(60, 80, 1)\r\n  \r\n  return [in0, in1, in2]\r\n\r\ndef algorithm(in_array):\r\n  \r\n  in0, in1, in2 = in_array\r\n\r\n  out0 = (in0 + in1 + in2)/3\r\n\r\n  return out0\r\n\r\n\r\nglobal correctAnswer\r\n\r\nin_array0 =  rand_input()\r\nin0, in1, in2 = in_array0\r\nout0=algorithm(in_array0)\r\ncorrectAnswer=out0\r\n\r\n# other test cases\r\nin_array1 =  rand_input()\r\nout1=algorithm(in_array1)\r\n\r\nin_array2=  rand_input()\r\nout2=algorithm(in_array2)\r\n\r\n#           [ [case1], [case2], [case3], ... ]\r\ninput_moodle  = [  in_array0   ,  in_array1   ,  in_array2 ]\r\noutput_moodle = [ [out0] , [out1]  ,  [out2] ]\r\ncases_moodle = getCasesMoodle(input_moodle, output_moodle)\r\n]]','QM','1','apply','yes','2019-10-15',67,125),(1247,'a','introducao0','% 01\nA ideia de Calculadora Programável foi criada por quem?','QM','1','remember','no','2019-10-30',1,35),(1248,'a','introducao1','% 01\nA ideia de Processamento de Dados foi criada por quem?','QM','1','remember','no','2019-10-30',1,35),(1249,'a','introducao2','% 01\nA ideia de utilizar cartão perfurado para comandar máquinas e inserir dados foi criada por quem?','QM','1','remember','no','2019-10-30',1,35),(1250,'a','introducao3','% 01\nA ideia de instruções de programa foi criada por quem?','QM','1','remember','no','2019-10-30',1,35),(1251,'b','introducao4','% 02\nO desenvolvimento do conceito de Computação é resultado da:','QM','1','remember','no','2019-10-30',1,35),(1252,'b','introducao5','% 02\nA evolução tecnológica e histórica da Computação é resultado da:','QM','1','remember','no','2019-10-30',1,35),(1253,'b','introducao6','% 02\nA evolução da capacidade do Computador moderno é resultado da:','QM','1','remember','no','2019-10-30',1,35),(1254,'c','introducao7','% 03\nVon Neumann contribuiu para a computação com a ideia de:','QM','1','remember','no','2019-10-30',1,35),(1255,'c','introducao8','% 03\nA arquitetura Von Neumann é utilizada até hoje nos computadores modernos. Qual é o principal diferencial desta arquitetura?','QM','1','remember','no','2019-10-30',1,35),(1256,'c','introducao9','% 03\nUm marco importante para a computação passar a utilizar o sistema binário foi:','QM','1','remember','no','2019-10-30',1,35),(1257,'c','introducao10','% 03\nA Intel criou o primeiro microprocessador, o 4004, tornando-se a:','QM','1','remember','no','2019-10-30',1,35),(1258,'d','introducao11','% 04\nOs sinais analógicos são digitalizados para serem tratados por computadores e depois são retornados ao mundo analógico pela conversão digital/analógica. Este processo:','QM','1','remember','no','2019-10-30',1,35),(1259,'d','introducao12','% 04\r\nUma das vantagens da digitalização:','QM','1','remember','no','2019-10-30',1,35),(1260,'d','introducao13','% 04\nA qualidade do som do CD é melhor que o do disco de vinil por que:','QM','1','remember','no','2019-10-30',1,35),(1261,'d','introducao14','% 04\nO sistema digital é melhor que o analógico por que:','QM','1','remember','no','2019-10-30',1,35),(1262,'e','introducao15','% 05\nOs elementos que compõem a estrutura funcional de qualquer computador são:','QM','1','remember','no','2019-10-30',1,35),(1263,'f','introducao16','% 06\nAssinale a alternativa FALSA:','QM','1','remember','no','2019-10-30',1,35),(1264,'g','introducao17','% 07\nA evolução tecnológica de fabricação dos VLSI possibilitou a redução do tamanho do transistor em 3 ordens de grandeza (1.000), de 10 mícrons (1971) para 10 nanometros (2017) em apenas 45 anos. Este desenvolvimento:','QM','1','remember','no','2019-10-30',1,35),(1265,'h','introducao18','% 08\nAssinale a alternativa FALSA: RAID são várias configurações de discos magnéticos operando em paralelo que:','QM','1','remember','no','2019-10-30',1,35),(1266,'h','introducao19','% 08\nAs melhores configurações do RAID (Redundant Array of Independent Disks) permitem:','QM','1','remember','no','2019-10-30',1,35),(1267,'i','introducao20','% 09\nDesenhe o diagrama esquemático de um circuito lógico de um somador binário completo de um bit. Quantos transístores são necessários para implementar este circuito?','QM','1','remember','no','2019-10-30',1,35),(1268,'i','introducao21','% 09\nDesenhe o diagrama esquemático de um circuito lógico de um somador binário completo de um bit. Quantos transístores APROXIMADAMENTE são necessários para implementar este circuito?','QM','1','remember','no','2019-10-30',1,35),(1269,'i','introducao22','% 09\nDesenhe o diagrama esquemático de um circuito lógico de um bit de memória estática (flip-flop tipo D). Quantos transístores são necessários para implementar este circuito?','QM','1','remember','no','2019-10-30',1,35),(1270,'i','introducao23','% 09\nDesenhe o diagrama esquemático de um circuito lógico de um bit de memória estática (flip-flop tipo D). Quantos transístores APROXIMADAMENTE são necessários para implementar este circuito?','QM','1','remember','no','2019-10-30',1,35),(1271,'j','introducao24','% 10 \nQuais as funções lógicas e aritméticas mínimas executadas por uma ULA?','QM','1','remember','no','2019-10-30',1,35),(1272,'k','introducao25','% 11\nDado um circuito demultiplexador com 4 bits de entrada com os sinais: 0100. Este circuito terá como saídas:','QM','1','remember','no','2019-10-30',1,35),(1273,'k','introducao26','% 11\nDado um circuito demultiplexador com 4 bits de entrada com os sinais: 0010. Este circuito terá como saídas:','QM','1','remember','no','2019-10-30',1,35),(1274,'l','introducao27','% 12 \nO que é fetch?','QM','1','remember','no','2019-10-30',1,35),(1275,'l','introducao28','% 12\nO que é Ciclo de Máquina?','QM','1','remember','no','2019-10-30',1,35),(1276,'l','introducao29','% 12 \nQual a relação entre o Ciclo de Máquina e o Ciclo de Instruções?','QM','1','remember','no','2019-10-30',1,35),(1277,'l','introducao30','% 12\nQual a função do Clock da CPU?','QM','1','remember','no','2019-10-30',1,35),(1278,'m','introducao31','% 13\nO que é Microprograma?','QM','1','remember','no','2019-10-30',1,35),(1279,'n','introducao32','% 14\nO acesso da CPU à memória externa ocorre através de registradores especiais que escrevem valores no barramento de endereços e leem ou escrevem no barramento de dados. Estes registradores são, respectivamente:','QM','1','remember','no','2019-10-30',1,35),(1280,'n','introducao33','% 14\nA alteração na sequencia de instruções executadas pela CPU ocorre com a alteração no conteúdo do Program Counter. Qual é o papel do Stack Pointer neste processo?','QM','1','remember','no','2019-10-30',1,35),(1281,'o','introducao34','% 15 \nQuais os principais grupos de funções de uma linguagem Assembly qualquer:','QM','1','remember','no','2019-10-30',1,35),(1282,'p','introducao35','% 16\nAssinale a alternativa FALSA: Quais os princípios da arquitetura RISC?','QM','1','remember','no','2019-10-30',1,35),(1283,'q','introducao36','% 17\nAssinale a alternativa FALSA: Sobre Pipeline e Superescalar','QM','1','remember','no','2019-10-30',1,35),(1284,'r','introducao37','% 18\nO que é Cache de memória?','QM','1','remember','no','2019-10-30',1,35),(1285,'r','introducao38','% 18\nAssinale a alternativa FALSA: Quais os conceitos associados à Cache de memória?','QM','1','remember','no','2019-10-30',1,35),(1286,'s','introducao39','% 19\nO que é execução fora de ordem?','QM','1','remember','no','2019-10-30',1,35),(1287,'s','introducao40','% 19\nQual é a função do módulo de aposentadoria (Retirement) na CPU?','QM','1','remember','no','2019-10-30',1,35),(1288,'t','introducao41','% 20\nAssinale a alternativa que NÃO contém uma função do Compilador:','QM','1','remember','no','2019-10-30',1,35),(1289,'','Patentes0','As naturezas de patente previstas na Lei N° 9.279/96 são:','QM','1','remember','no','2019-11-01',63,130),(1290,'','Patentes1','Pode requerer a patente:','QM','1','remember','no','2019-11-01',63,130),(1291,'','Patentes2','Em geral, a publicação de um pedido de patente se dá:','QM','1','remember','no','2019-11-01',63,130),(1292,'','Patentes3','O item a seguir que melhor identifica quando se inicia o exame de um pedido de patente é:','QM','1','remember','no','2019-11-01',63,130),(1293,'','Patentes4','As partes que devem, necessariamente, compor o pedido de patente são:','QM','1','remember','no','2019-11-01',63,130),(1294,'','Patentes5','A melhor definição para um certificado de adição de invenção é:','QM','1','remember','no','2019-11-01',63,130),(1295,'','Patentes6','Assinale a alternativa que define atos que não integram o estado da técnica em relação ao pedido de patente depositado por um determinado inventor:','QM','1','remember','no','2019-11-01',63,130),(1296,'','Patentes7','A extensão da proteção conferida pela patente é determinada:','QM','1','remember','no','2019-11-01',63,130),(1297,'','Patentes8','Nos termos do artigo 8° (invenção) da Lei N° 9.279/96 os requisitos básicos de patenteabilidade para os pedidos de patente de invenção são:','QM','1','remember','no','2019-11-01',63,130),(1298,'','Patentes9','A alternativa que melhor define o que constitui o estado da técnica é:','QM','1','remember','no','2019-11-01',63,130),(1299,'','Patentes10','O exame de um pedido de patente está subordinado, entre outros, aos seguintes diplomas legais:','QM','1','remember','no','2019-11-01',63,130),(1300,'','Patentes11','A lei que regula direitos e obrigações relativas à propriedade industrial, ao assegurar ao autor de invenção ou modelo de utilidade o direito de obter a patente que lhe garanta a propriedade, concede ao autor, entre outros:','QM','1','remember','no','2019-11-01',63,130),(1301,'','Patentes12','Se dois ou mais autores tiverem realizado a mesma invenção ou modelo de utilidade, de forma independente, o direito de obter patente será assegurado àquele:','QM','1','remember','no','2019-11-01',63,130),(1302,'','Patentes13','Deve ser deferido o pedido de patente que - após o exame técnico - comprovar, entre outros:','QM','1','remember','no','2019-11-01',63,130),(1303,'','Patentes14','Uma patente de modelo de utilidade confere direitos:','QM','1','remember','no','2019-11-01',63,130),(1304,'','Patentes15','A inventividade do objeto reivindicado sobre o estado da técnica, requisito necessário para a concessão de patente de invenção e modelo de utilidade, restará comprovada, respectivamente:','QM','1','remember','no','2019-11-01',63,130),(1305,'','Patentes16','Não se considera invenção nem modelo de utilidade:','QM','1','remember','no','2019-11-01',63,130),(1306,'','Patentes17','O estado da técnica é constituído:','QM','1','remember','no','2019-11-01',63,130),(1307,'','Patentes18','Em 01/01/2002 o inventor B inventa o objeto P, guardando sigilo. Em 01/02/2002 o inventor A, de forma independente, inventa o mesmo objeto P, também guardando segredo de sua invenção. Em 01/03/2002 o inventor A divulga o objeto P diretamente em uma revista científica. Em 01/04/2002 o inventor B deposita um pedido de patente no INPI reivindicando o objeto P, sem tomar conhecimento da divulgação realizada pelo inventor A. Em 01/05/2002 o inventor A também deposita um pedido de patente para o mesmo objeto P. Levando-se em consideração as informações acima, o provável resultado do exame dos pedidos de patente depositados pelos inventores A e B será:','QM','1','remember','no','2019-11-01',63,130),(1308,'','Patentes19','Ao pedido de patente depositado em país que mantenha acordo como Brasil, ou em organização internacional, que produza efeito de depósito nacional é assegurado o direito de prioridade. A prioridade é admitida apenas para a matéria revelada no pedido anterior, não se estendendo a matéria nova introduzida. Isto significa que:','QM','1','remember','no','2019-11-01',63,130),(1309,'','Patentes20','Ao assegurar que o pedido que contiver dados relativos ao objeto, ao depositante e ao inventor, poderá ser entregue, mediante recibo datado, ao INPI, a lei requer que este pedido provisório contenha:','QM','1','remember','no','2019-11-01',63,130),(1310,'','Patentes21','As categorias de reivindicações admitidas pelo ordenamento jurídico são divididas:','QM','1','remember','no','2019-11-01',63,130),(1311,'','Patentes22','Para melhor esclarecer ou definir o pedido de patente, o depositante poderá efetuar alterações, desde que estas se limitem à matéria inicialmente revelada no pedido. Isto garante ao requerente:','QM','1','remember','no','2019-11-01',63,130),(1312,'','Patentes23','O prazo de vigência de uma patente nunca será inferior a 10 (dez) anos, a contar da data de concessão (ressalvada a hipótese de o INPI estar impedido de proceder ao exame de mérito do pedido, por pendência judicial comprovada ou por motivo de força maior), para as patentes oriundas de depósitos:','QM','1','remember','no','2019-11-01',63,130),(1313,'','Patentes24','Emitida uma exigência de acordo com o artigo 36 da Lei N° 9.279/96, se o depositante não se manifesta no prazo legal e não dispõe de justificativas para requerer extensão, o pedido de patente fica sujeito à seguinte penalidade:','QM','1','remember','no','2019-11-01',63,130),(1314,'','Patentes25','As partes que, segundo o artigo 19 da Lei N° 9.279/96, devem necessariamente compor o pedido de patente são:','QM','1','remember','no','2019-11-01',63,130),(1315,'','Patentes26','Quando um pedido de patente é depositado no Brasil reivindicando o direito a uma prioridade estrangeira ou brasileira, isso significa que:','QM','1','remember','no','2019-11-01',63,130),(1316,'','Patentes27','A decisão no processo administrativo de nulidade de um registro:','QM','1','remember','no','2019-11-01',63,130),(1317,'','Patentes28','O Tratado de Cooperação de Patentes ou Patent Cooperation Treaty (PCT) tem como finalidade:','QM','1','remember','no','2019-11-01',63,130),(1318,'','Patentes29','Sobre criação do intelecto humano, no que tange invenções no campo industrial, a Lei N° 9.279/96 afirma que:','QM','1','remember','no','2019-11-01',63,130),(1319,'','Patentes30','Sobre modalidades de licença compulsória, pode-se dizer que legislação não prevê:','QM','1','remember','no','2019-11-01',63,130),(1320,'','Patentes31','Sobre a prioridade, o pedido de patente depositado em país que mantenha acordo com o Brasil, ou em organização internacional, que produza efeito de depósito nacional, será assegurado direito, nos prazos estabelecidos no acordo, não sendo o depósito invalidado nem prejudicado por fatos ocorridos nesses prazos.  Portanto, não é correto afirmar que:','QM','1','remember','no','2019-11-01',63,130),(1321,'','Patentes32','O PCT ou Tratado de Cooperação em Matéria de Patentes, viabiliza o depósito simultâneo de uma patente em vários países. Além de estender o prazo de 30 meses para que o titular possa escolher em que países e ou regiões. Não se pode afirmar que:','QM','1','remember','no','2019-11-01',63,130),(1322,'','Marcas0','Com relação a Desenhos Industriais (DI) assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',63,136),(1323,'','Marcas1','Com relação a Desenhos Industriais (DI) assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',63,136),(1324,'','Marcas2','Com relação a Desenhos Industriais (DI) assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',63,136),(1325,'','Marcas3','As obras literariais, artísticas, músicas e entre outras são criações do espírito humano. Portanto, são passíveis de proteção no âmbito moral e patrimonial. Sobre o tempo de vigência de uma obra literária devidamente registrada, pode se afirmar que:','QM','1','remember','no','2019-11-28',63,136),(1326,'','Marcas4','Software é a expressão de um conjunto organizado de instruções em linguagem natural e codificada, contida em suporte físico de qualquer natureza [...], para fazê-los funcionar de modo e para fins determinados. Quanto a sua natureza de proteção conforme a legislação brasileira, pode se afirmar que:','QM','1','remember','no','2019-11-28',63,136),(1327,'','Marcas5','Com relação a Direito de Autor assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',63,136),(1328,'','Marcas6','Com relação a Direito de Autor assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',63,136),(1329,'','Marcas7','Para gozar de proteção em todos os ramos de atividade, uma marca necessita:','QM','1','remember','no','2019-11-28',63,136),(1330,'','Marcas8','O apelido \"PELÉ\", de Édson Arantes do Nascimento:','QM','1','remember','no','2019-11-28',63,136),(1332,'','Marcas10','Para constituir uma marca que possa ser registrada, um sinal não pode incidir em qualquer proibição legal e, além disso, ser perceptível através:','QM','1','remember','no','2019-11-28',63,136),(1333,'','Marcas11','Poderá celebrar contrato para licença de uso da marca:','QM','1','remember','no','2019-11-28',63,136),(1334,'','Marcas12','Com relação a Marcas assinale a alternativa INCORRETA','QM','1','remember','no','2019-11-28',63,136),(1335,'','Marcas13','Com relação a Marcas assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',63,136),(1336,'','Marcas14','Uma empresa que fabrica pastas de dente cuja identidade visual é caracterizada pelo uso da cor azul em seus impressos, cartões de visita, veículos de entrega e nos uniformes dos empregados pode obter registro de Marca para:','QM','1','remember','no','2019-11-28',63,136),(1337,'','Marcas15','O exame de registrabilidade do programa de computador restringir-se-á a que tipo de documentação?','QM','1','remember','no','2019-11-28',63,136),(1338,'','Marcas16','Assinale a alternativa correta:','QM','1','remember','no','2019-11-28',63,136),(1339,'','Marcas17','Uma marca coletiva é aquela usada para identificar os produtos ou serviços:','QM','1','remember','no','2019-11-28',63,136),(1340,'','Marcas18','Com relação a Indicações Geográficas (IG) assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',63,136),(1341,'','Marcas19','Com relação a Indicações Geográficas (IG) assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',63,136),(1342,'','Marcas20','Acerca da lei de proteção de cultivares, analise as afirmativas.\nI. Materiais genéticos homogêneos, obtidos por algum processo autogâmico continuado.\nII. Cultivar que se distingue claramente de qualquer outra, cuja existência na data do pedido de proteção seja reconhecida.\nIII. Cultivar que, reproduzida em escala comercial, mantenha a sua homogeneidade através de gerações sucessivas.\nIV. Cultivar que, utilizada em plantio, em escala comercial, apresente variabilidade mínima quanto aos descritores que a identifiquem, segundo critérios estabelecidos pelo SNPC (Serviços Nacionais de Proteção de Cultivares).\nAs afirmativas anteriores, referem-se, respectivamente, a:','QM','1','remember','no','2019-11-28',63,136),(1343,'','Marcas21','Com relação a proteção de cultivares assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',63,136),(1344,'','Marcas22','Com relação a propriedade intelectual assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',63,136),(1345,'','Marcas23','Com relação a propriedade intelectual assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',63,136),(1346,'','Marcas24','Com relação a propriedade intelectual assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',63,136),(1347,'','Marcas25','Com relação a propriedade intelectual assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',63,136),(1348,'','Marcas26','Com relação a propriedade intelectual assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',63,136),(1349,'','Desenho Autor Marca0','Com relação a Desenhos Industriais (DI) assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',1,134),(1350,'','Desenho Autor Marca1','Com relação a Desenhos Industriais (DI) assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',1,134),(1351,'','Desenho Autor Marca2','Com relação a Desenhos Industriais (DI) assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',1,134),(1352,'','Desenho Autor Marca3','As obras literariais, artísticas, músicas e entre outras são criações do espírito humano. Portanto, são passíveis de proteção no âmbito moral e patrimonial. Sobre o tempo de vigência de uma obra literária devidamente registrada, pode se afirmar que:','QM','1','remember','no','2019-11-28',1,134),(1353,'','Desenho Autor Marca4','Software é a expressão de um conjunto organizado de instruções em linguagem natural e codificada, contida em suporte físico de qualquer natureza [...], para fazê-los funcionar de modo e para fins determinados. Quanto a sua natureza de proteção conforme a legislação brasileira, pode se afirmar que:','QM','1','remember','no','2019-11-28',1,134),(1354,'','Desenho Autor Marca5','Com relação a Direito de Autor assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',1,134),(1355,'','Desenho Autor Marca6','Com relação a Direito de Autor assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',1,134),(1356,'','Desenho Autor Marca7','Para gozar de proteção em todos os ramos de atividade, uma marca necessita:','QM','1','remember','no','2019-11-28',1,134),(1357,'','Desenho Autor Marca8','O apelido \"PELÉ\", de Édson Arantes do Nascimento:','QM','1','remember','no','2019-11-28',1,134),(1358,'','Desenho Autor Marca9','A proteção de marca de produto tem por função principal:','QM','1','remember','no','2019-11-28',1,134),(1359,'','Desenho Autor Marca10','Para constituir uma marca que possa ser registrada, um sinal não pode incidir em qualquer proibição legal e, além disso, ser perceptível através:','QM','1','remember','no','2019-11-28',1,134),(1360,'','Desenho Autor Marca11','Poderá celebrar contrato para licença de uso da marca:','QM','1','remember','no','2019-11-28',1,134),(1361,'','Desenho Autor Marca12','Com relação a Marcas assinale a alternativa INCORRETA','QM','1','remember','no','2019-11-28',1,134),(1362,'','Desenho Autor Marca13','Com relação a Marcas assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',1,134),(1363,'','Desenho Autor Marca14','Uma empresa que fabrica pastas de dente cuja identidade visual é caracterizada pelo uso da cor azul em seus impressos, cartões de visita, veículos de entrega e nos uniformes dos empregados pode obter registro de Marca para:','QM','1','remember','no','2019-11-28',1,134),(1364,'','Desenho Autor Marca15','O exame de registrabilidade do programa de computador restringir-se-á a que tipo de documentação?','QM','1','remember','no','2019-11-28',1,134),(1365,'','Desenho Autor Marca16','Assinale a alternativa correta:','QM','1','remember','no','2019-11-28',1,134),(1366,'','Desenho Autor Marca17','Uma marca coletiva é aquela usada para identificar os produtos ou serviços:','QM','1','remember','no','2019-11-28',1,134),(1367,'','Indicação Cultivar Geral0','Com relação a Indicações Geográficas (IG) assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',1,135),(1368,'','Indicação Cultivar Geral1','Com relação a Indicações Geográficas (IG) assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',1,135),(1369,'','Indicação Cultivar Geral2','Acerca da lei de proteção de cultivares, analise as afirmativas.\nI. Materiais genéticos homogêneos, obtidos por algum processo autogâmico continuado.\nII. Cultivar que se distingue claramente de qualquer outra, cuja existência na data do pedido de proteção seja reconhecida.\nIII. Cultivar que, reproduzida em escala comercial, mantenha a sua homogeneidade através de gerações sucessivas.\nIV. Cultivar que, utilizada em plantio, em escala comercial, apresente variabilidade mínima quanto aos descritores que a identifiquem, segundo critérios estabelecidos pelo SNPC (Serviços Nacionais de Proteção de Cultivares).\nAs afirmativas anteriores, referem-se, respectivamente, a:','QM','1','remember','no','2019-11-28',1,135),(1370,'','Indicação Cultivar Geral3','Com relação a proteção de cultivares assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',1,135),(1371,'','Indicação Cultivar Geral4','Com relação a propriedade intelectual assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',1,135),(1372,'','Indicação Cultivar Geral5','Com relação a propriedade intelectual assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',1,135),(1373,'','Indicação Cultivar Geral6','Com relação a propriedade intelectual assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',1,135),(1374,'','Indicação Cultivar Geral7','Com relação a propriedade intelectual assinale a alternativa INCORRETA:\nA A proteção do design gráfico pode ser feita, no Brasil, exclusivamente por proteção de marca.','QM','1','remember','no','2019-11-28',1,135),(1375,'','Indicação Cultivar Geral8','Com relação a propriedade intelectual assinale a alternativa INCORRETA:','QM','1','remember','no','2019-11-28',1,135),(1377,'Depreciação','Depreciação Exponencial','Um ativo depreciável tem custo inicial de R\\$ [[code:VA1]]. O valor residual estimado após um período de utilização de [[code:N1]] anos, corresponde à sua vida fiscal de R\\$ [[code:VR1]] . Considerando a depreciação exponencial, calcule o valor da depreciação \\textit{dn} após [[code:N2]] anos.  \\tiny \\color{bubbles} [[code:RESP]] \\color{black} \\normalsize\r\n\\newline\r\n\\rule{\\textwidth}{0.4pt}\r\n[[def:\r\nimport random\r\n\r\nVA =random.randrange(40000,60000)       # Custo inicial de 40.000,00 a 80.000,00\r\nN=random.randrange(6,15)                       #  Período de Utilização em anos\r\nVR =VA*random.randrange(10,15)/100      # Valor Residual de 10%  a 15% do ativo\r\nnx=N-random.randrange(2,N-1)                # Vida contábil no n-ésimo período\r\nVA1= \"%.2f\" % (VA)\r\nVA1=PT_BR(VA1)\r\nVR1= \"%.2f\" % (VR)\r\nVR1=PT_BR(VR1)\r\nN1= \"%d\" % (N)\r\n#N1=PT_BR(N1)\r\nN2= \"%d\" % (nx)\r\n#N2=PT_BR(N2)\r\nT=1-(VR/VA)**(1/N)\r\ndn=VA*((1-T)**(nx-1)-(1-T)**nx)\r\nRESP=\"%.2f \" % (dn)\r\nRESP=PT_BR(dn)\r\n]]','QT','1','remember','yes','2019-12-03',63,111),(1378,'','Recebe um vetor e determina a moda','% Part I: description of a question \r\n\\textbf{\\Large Moda}\r\n\r\nDado um conjunto de dados S, dizemos que a moda é uma medida que representa o valor que ocorre com maior frequência nesse conjunto. Podemos ter 3 casos:\r\n\r\n\\begin{itemize}\r\n  \\item \\textbf{Amodais:} o conjunto não possui nenhum dado que ocorre mais de uma vez, de forma que todos os dados possuem a mesma quantidade de ocorrências (exemplo: seja S = [1, 2, 3, 4, 5], não possui moda).\r\n  \\item \\textbf{Unimodais:} o conjunto apresenta um único valor com o maior número de repetições (exemplo: seja S = [1, 1, 3, 5], moda 1).\r\n  \\item \\textbf{Multimodais:} o conjunto possui 2 ou mais modas (exemplo: S = [1, 1, 2, 2, 3], moda 1 e 2).\r\n\\end{itemize}\r\n\r\nPor exemplo, se a entrada for $n=[[code:in_array_example[0]]], xs=[[code:in_array_example[1]]]$, o resultado esperado é $[[code:out_example]]$. Crie um programa que receba um conjunto de dados e imprima na tela a(s) moda(s) desse conjunto. \\textbf{Dica:} pode ser útil criar um vetor auxiliar para guardar a ocorrência de cada um dos valores. \r\n\r\n\\textbf{Para responder à essa questão, teste o programa para a seguinte entrada, e marque a alternativa correspondente:}\r\n\r\n$[[code:in_array_questao0]]$\r\n\r\n$[[code:in_array_questao1]]$\r\n\r\n\r\n\r\n\\textbf{Entrada}\r\n\r\n\\noident A entrada consiste de um número natural n ($20 \\leq n \\leq 30$) representando o tamanho do conjunto de dados, seguido de n valores inteiros x ($0 \\leq x \\leq 10$). O valor n é separado dos demais por uma quebra de linha, mas os valores x são separados por um espaço entre eles.\r\n\r\n\\textbf{Saída}\r\n\r\n\\noident Seu programa deve imprimir na tela, separadas por vírgulas, a(s) moda(s) do conjunto de dados. Caso o conjunto seja amodal, imprimir “Amodal”. Após isso, quebre uma linha.\r\n\r\n\r\n% Part II: we need to write cases here as a comment\r\n\\begin{comment}\r\n[[code:cases_moodle]]\r\n\\end{comment}\r\n\r\n\r\n% Part III: python code\r\n[[def:\r\n\r\ndef rand_input(nmin=20, nmax=30):\r\n  n  =random.randrange(nmin, nmax, 1)\r\n  xs = []\r\n  for _ in range(n):\r\n    xs.append(random.randrange(0, 11, 1))\r\n\r\n  return (n, xs)\r\n\r\n\r\ndef solucao(in_array):\r\n  n, xs = in_array\r\n\r\n  buckets = []\r\n  for _ in range(31):\r\n    buckets.append(0)\r\n\r\n  for x in xs:\r\n    buckets[x] = buckets[x] + 1\r\n\r\n  maior_ocorrencia = 1\r\n  for b in buckets:\r\n    if b>maior_ocorrencia:\r\n      maior_ocorrencia = b\r\n\r\n  if maior_ocorrencia == 1:\r\n    return \"Amodal\"\r\n  else:\r\n    outp = []\r\n    for i in range(31):\r\n      if buckets[i] == maior_ocorrencia:\r\n        outp.append(str(i))\r\n\r\n    return \', \'.join(outp)\r\n\r\n\r\n# Exemplo\r\nin_array_example =  rand_input(9, 10)\r\nout_example=solucao(in_array_example)\r\n\r\n\r\n# Casos do moodle (3 casos)\r\nin_array0 =  rand_input()\r\nout0=solucao(in_array0)\r\n\r\nin_array1 =  rand_input()\r\nout1=solucao(in_array1)\r\n\r\nin_array2=  rand_input()\r\nout2=solucao(in_array2)\r\n\r\n\r\n# Caso do enunciado\r\nglobal correctAnswer\r\nin_array_questao =  rand_input()\r\nout_questao=solucao(in_array_questao)\r\ncorrectAnswer=out_questao\r\n\r\nin_array_questao0 = in_array_questao[0]\r\nin_array_questao1 = \"\\;\".join([str(a) for a in in_array_questao[1]])\r\n\r\n\r\n\r\n# Criando 5 alternativas sem repetição\r\nalternativas_erradas = []\r\n\r\nif correctAnswer is not \'Amodal\':\r\n  alternativas_erradas .append(\'Amodal\')\r\n\r\nwhile len(alternativas_erradas )<4:\r\n  candidato = str(random.randrange(0, 11, 1))\r\n  if candidato not in alternativas_erradas + [correctAnswer] :\r\n    alternativas_erradas .append(candidato)\r\n\r\n\r\n#           [ [case1], [case2], [case3], ... ]\r\ninput_moodle  = [  in_array0   ,  in_array1   ,  in_array2 ]\r\noutput_moodle = [ [out0] ,        [out1]  ,         [out2] ]\r\ncases_moodle = getCasesMoodle(input_moodle, output_moodle)\r\n]]','QM','3','apply','yes','2019-12-03',67,124),(1379,'','if-maior resto de 3 int (2020.1.p1q1)','Elabore um programa para ler [[code:quantNumeros]] números inteiros. O programa deve imprimir apenas o \\textbf{[[code:oper]]} resto desses números por [[code:resto]].\r\n\r\n\\\r\n\r\n\\noindent\\textbf{Exemplo:}\\\\\r\nEntradas: [[code:caso0_inp]]\\\\\r\nSaída: [[code:caso0_out]]\\\\\r\n\r\n\\\r\n\r\n% necessario para gerar casos de testes no moodle ==> mude verbatim <==> comment apos finalizar a questao\r\n\r\n\\begin{comment}\r\n[[code:moodle_cases]]\r\n\\end{comment}\r\n\r\n[[def:\r\ndef myrandom(num):\r\n    a = []\r\n    for i in range(num):\r\n        a.append(random.randrange(1,9,1)) # n_i\r\n    return a\r\n\r\ndef algorithm(A,oper,resto):\r\n    if oper == \'menor\':\r\n        return min(np.array(A)%resto)\r\n    else:\r\n        return max(np.array(A)%resto)\r\n\r\noper = \"maior\"  # aparece no texto\r\nresto = random.randrange(2, 5, 1)  # resto\r\nquantNumeros = 3\r\n\r\ninp = []\r\nout = []\r\nfor i in range(3): # casos de teste\r\n    A = myrandom(quantNumeros)\r\n    out.append(str(algorithm(A,oper,resto)))\r\n    inp.append(\'\\n\'.join(\'%d\' %x for x in A))\r\n\r\n# necessario para gerar os casos de teste, para mod_i/var_i\r\ncases = {}\r\ncases[\'input\']  = np.array(inp).tolist()\r\ncases[\'output\'] = np.array(out).tolist()\r\nimport json\r\nmoodle_cases = json.dumps(cases)\r\n\r\ncaso0_inp = \"\"\r\nfor i,x in enumerate(cases[\'input\'][0].split(\'\\n\')):\r\n    caso0_inp += \"n\"+str(i+1)+\" = \"+x+\"; \"\r\ncaso0_out=oper+\" resto = \"+cases[\'output\'][0]\r\n]]','QT','1','remember','yes','2020-02-14',1,2),(1380,'','if-menor resto de 4 int (2020.1.p1q1)','Elabore um programa para ler [[code:quantNumeros]] números inteiros. O programa deve imprimir apenas o \\textbf{[[code:oper]]} resto desses números por [[code:resto]].\r\n\r\n\\\r\n\r\n\\noindent\\textbf{Exemplo:}\\\\\r\nEntradas: [[code:caso0_inp]]\\\\\r\nSaída: [[code:caso0_out]]\\\\\r\n\r\n\\\r\n\r\n% necessario para gerar casos de testes no moodle ==> mude verbatim <==> comment apos finalizar a questao\r\n\r\n\\begin{comment}\r\n[[code:moodle_cases]]\r\n\\end{comment}\r\n\r\n[[def:\r\ndef myrandom(num):\r\n    a = []\r\n    for i in range(num):\r\n        a.append(random.randrange(1,9,1)) # n_i\r\n    return a\r\n\r\ndef algorithm(A,oper,resto):\r\n    if oper == \'menor\':\r\n        return min(np.array(A)%resto)\r\n    else:\r\n        return max(np.array(A)%resto)\r\n\r\noper = \"menor\"  # aparece no texto\r\nresto = random.randrange(2, 5, 1)  # resto\r\nquantNumeros = 4\r\n\r\ninp = []\r\nout = []\r\nfor i in range(3): # casos de teste\r\n    A = myrandom(quantNumeros)\r\n    out.append(str(algorithm(A,oper,resto)))\r\n    inp.append(\'\\n\'.join(\'%d\' %x for x in A))\r\n\r\n# necessario para gerar os casos de teste, para mod_i/var_i\r\ncases = {}\r\ncases[\'input\']  = np.array(inp).tolist()\r\ncases[\'output\'] = np.array(out).tolist()\r\nimport json\r\nmoodle_cases = json.dumps(cases)\r\n\r\ncaso0_inp = \"\"\r\nfor i,x in enumerate(cases[\'input\'][0].split(\'\\n\')):\r\n    caso0_inp += \"n\"+str(i+1)+\" = \"+x+\"; \"\r\ncaso0_out=oper+\" resto = \"+cases[\'output\'][0]\r\n]]','QT','2','remember','yes','2020-02-14',1,2),(1381,'','if-maior resto de 5 int (2020.1.p1q1)','Elabore um programa para ler [[code:quantNumeros]] números inteiros. O programa deve imprimir apenas o \\textbf{[[code:oper]]} resto desses números por [[code:resto]].\r\n\r\n\\\r\n\r\n\\noindent\\textbf{Exemplo:}\\\\\r\nEntradas: [[code:caso0_inp]]\\\\\r\nSaída: [[code:caso0_out]]\\\\\r\n\r\n\\\r\n\r\n% necessario para gerar casos de testes no moodle ==> mude verbatim <==> comment apos finalizar a questao\r\n\r\n\\begin{comment}\r\n[[code:moodle_cases]]\r\n\\end{comment}\r\n\r\n[[def:\r\ndef myrandom(num):\r\n    a = []\r\n    for i in range(num):\r\n        a.append(random.randrange(1,9,1)) # n_i\r\n    return a\r\n\r\ndef algorithm(A,oper,resto):\r\n    if oper == \'menor\':\r\n        return min(np.array(A)%resto)\r\n    else:\r\n        return max(np.array(A)%resto)\r\n\r\noper = \"maior\"  # aparece no texto\r\nresto = random.randrange(2, 5, 1)  # resto\r\nquantNumeros = 5\r\n\r\ninp = []\r\nout = []\r\nfor i in range(3): # casos de teste\r\n    A = myrandom(quantNumeros)\r\n    out.append(str(algorithm(A,oper,resto)))\r\n    inp.append(\'\\n\'.join(\'%d\' %x for x in A))\r\n\r\n# necessario para gerar os casos de teste, para mod_i/var_i\r\ncases = {}\r\ncases[\'input\']  = np.array(inp).tolist()\r\ncases[\'output\'] = np.array(out).tolist()\r\nimport json\r\nmoodle_cases = json.dumps(cases)\r\n\r\ncaso0_inp = \"\"\r\nfor i,x in enumerate(cases[\'input\'][0].split(\'\\n\')):\r\n    caso0_inp += \"n\"+str(i+1)+\" = \"+x+\"; \"\r\ncaso0_out=oper+\" resto = \"+cases[\'output\'][0]\r\n]]','QT','3','remember','yes','2020-02-18',1,2),(1382,'','Heitor - teste-5int','Elabore um programa para ler [[code:quantNumeros]] números inteiros. O programa deve imprimir apenas o \\textbf{[[code:oper]]} resto desses números por [[code:resto]].\r\n\r\n\\\r\n\r\n\\noindent\\textbf{Exemplo:}\\\\\r\nEntradas: [[code:caso0_inp]]\\\\\r\nSaída: [[code:caso0_out]]\\\\\r\n\r\n\\\r\n\r\n% necessario para gerar casos de testes no moodle ==> mude verbatim <==> comment apos finalizar a questao\r\n\r\n\\begin{comment}\r\n[[code:moodle_cases]]\r\n\\end{comment}\r\n\r\n[[def:\r\ndef myrandom(num):\r\n    a = []\r\n    for i in range(num):\r\n        a.append(random.randrange(1,9,1)) # n_i\r\n    return a\r\n\r\ndef algorithm(A,oper,resto):\r\n    if oper == \'menor\':\r\n        return min(np.array(A)%resto)\r\n    else:\r\n        return max(np.array(A)%resto)\r\n\r\noper = \"maior\"  # aparece no texto\r\nresto = random.randrange(2, 5, 1)  # resto\r\nquantNumeros = 5\r\n\r\ninp = []\r\nout = []\r\nfor i in range(3): # casos de teste\r\n    A = myrandom(quantNumeros)\r\n    out.append(str(algorithm(A,oper,resto)))\r\n    inp.append(\'\\n\'.join(\'%d\' %x for x in A))\r\n\r\n# necessario para gerar os casos de teste, para mod_i/var_i\r\ncases = {}\r\ncases[\'input\']  = np.array(inp).tolist()\r\ncases[\'output\'] = np.array(out).tolist()\r\nimport json\r\nmoodle_cases = json.dumps(cases)\r\n\r\ncaso0_inp = \"\"\r\nfor i,x in enumerate(cases[\'input\'][0].split(\'\\n\')):\r\n    caso0_inp += \"n\"+str(i+1)+\" = \"+x+\"; \"\r\ncaso0_out=oper+\" resto = \"+cases[\'output\'][0]\r\n]]','QT','1','remember','yes','2020-02-18',75,125),(1383,'','Heitor - teste-4int','Elabore um programa para ler [[code:quantNumeros]] números inteiros. O programa deve imprimir apenas o \\textbf{[[code:oper]]} resto desses números por [[code:resto]].\r\n\r\n\\\r\n\r\n\\noindent\\textbf{Exemplo:}\\\\\r\nEntradas: [[code:caso0_inp]]\\\\\r\nSaída: [[code:caso0_out]]\\\\\r\n\r\n\\\r\n\r\n% necessario para gerar casos de testes no moodle ==> mude verbatim <==> comment apos finalizar a questao\r\n\r\n\\begin{comment}\r\n[[code:moodle_cases]]\r\n\\end{comment}\r\n\r\n[[def:\r\ndef myrandom(num):\r\n    a = []\r\n    for i in range(num):\r\n        a.append(random.randrange(1,9,1)) # n_i\r\n    return a\r\n\r\ndef algorithm(A,oper,resto):\r\n    if oper == \'menor\':\r\n        return min(np.array(A)%resto)\r\n    else:\r\n        return max(np.array(A)%resto)\r\n\r\noper = \"maior\"  # aparece no texto\r\nresto = random.randrange(2, 5, 1)  # resto\r\nquantNumeros = 4\r\n\r\ninp = []\r\nout = []\r\nfor i in range(3): # casos de teste\r\n    A = myrandom(quantNumeros)\r\n    out.append(str(algorithm(A,oper,resto)))\r\n    inp.append(\'\\n\'.join(\'%d\' %x for x in A))\r\n\r\n# necessario para gerar os casos de teste, para mod_i/var_i\r\ncases = {}\r\ncases[\'input\']  = np.array(inp).tolist()\r\ncases[\'output\'] = np.array(out).tolist()\r\nimport json\r\nmoodle_cases = json.dumps(cases)\r\n\r\ncaso0_inp = \"\"\r\nfor i,x in enumerate(cases[\'input\'][0].split(\'\\n\')):\r\n    caso0_inp += \"n\"+str(i+1)+\" = \"+x+\"; \"\r\ncaso0_out=oper+\" resto = \"+cases[\'output\'][0]\r\n]]','QT','1','remember','yes','2020-02-18',75,125),(1384,'','if-promoção-cosmetico 2020.q1-p1q1','[\\textbf{Enviar código \"Q1.java\" no moodle}] Uma empresa de cosméticos pretende estimular a venda de algumas linhas de seus  produtos em determinadas regiões. As seguintes situações poderão ou não ocorrer dependendo das regras: (a) vendedor receberá bônus na comissão e/ou (b) cliente receberá desconto no pedido. O bônus e/ou desconto deve ser calculado sobre o valor do pedido.\r\n\r\nO usuário irá informar inicialmente o código da linha do produto e o valor do pedido. Apenas se a linha do produto for \\textbf{\"Top\"} o usuário irá digitar o código da região do pedido.\r\n\\begin{itemize}\r\n	\\item Para \\textbf{linha} do produto o usuário irá digitar um código, sendo \\textbf{[[code:a8]]} para Básica e \\textbf{[[code:a9]]} para Top.\r\n	\\item Para \\textbf{região} o usuário irá digitar um código, sendo \\textbf{[[code:a10]]} para Centro-Norte e \\textbf{[[code:a11]]} para Centro-Sul\r\n	\\item Nessa questão não é obrigatório fazer a validação de dados. Assuma que o usuário digitará valores válidos.\r\n\\end{itemize}\r\n\r\nAs regras são as seguintes:\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\begin{tabular}{|c|c|c|c|c|}\r\n\\hline\r\nLinha   & Valor Pedido                                                                  & Regiões            & Bônus Vendedor & Desconto Cliente \\\\ \\hline\r\nBásica & $\\ge$ [[code:a0]]  \\hspace{2}reais                             & -                       &  -                          & [[code:a2]]\\%           \\\\ \\hline\r\nBásica & \\textgreater [[code:a1]]  e \\textless [[code:a0]] reais  & -                      &  -                          & [[code:a3]]\\%           \\\\ \\hline\r\nTop      & -                                                                                      & Centro-Norte & [[code:a4]]\\%    & [[code:a6]]\\%           \\\\ \\hline\r\nTop      & -                                                                                      & Centro-Sul     & [[code:a5]]\\%    & [[code:a7]]\\%           \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\nCaso as entradas do usuário não se enquadrem nas condições da tabela acima, deve-se assumir Bonus Vendedor = 0 e/ou Desconto Cliente = 0.  Note que o Bonus Vendedor somente ser´a exibido se a linha for \\textbf{Top}.\r\n\r\n\\begin{itemize}\r\n	\\item ATENÇÃO 1 - É obrigatório o uso de seleção encadeada (se/senão/se...). Soluções “corretas” mas sem o uso de seleção encadeada terão conceito máximo igual a “B”.\r\n	\\item ATENÇÃO 2 - A ausência de endentação (recuos) no seu código poderá gerar \"descontos\" na atribuição do conceito nessa questão.\r\n	\\item ATENÇÃO 3 -  Nos \\textbf{CASOS DE TESTE} (exemplos abaixo)  a sequência da Entrada é : o primeiro valor é \\textbf{código da LINHA}, o segundo valor é \\textbf{VALOR (do pedido)} e o terceiro valor, quando existir, é \\textbf{códico da REGIÃO};\r\n	\\item ATENÇÃO 4 - Os \"textos\" (mensagens) usados nas \\textbf{SAÍDA DE DADOS} devem ser \\textbf{exatamente iguais aos \"modelos\"} apresentados nos casos de testes (exemplos) para que passem \\textbf{na Avaliação Automática}.\r\n\\end{itemize}\r\n\\newline\r\n\\subsection*{Exemplo 1}\r\n\\noindent\\textbf{Entradas:}\\vspace{-2mm}\r\n\\begin{verbatim}\r\n[[code:cases[\'input\'][0]]]\r\n\\end{verbatim}\r\n\\noindent\\textbf{Saída(s):}\\vspace{-2mm}\r\n\\begin{verbatim}\r\n[[code:cases[\'output\'][0]]]\r\n\\end{verbatim}\r\n\\newline\r\n\r\n\\subsection*{Exemplo 2}\r\n\r\n\\noindent\\textbf{Entradas:}\\vspace{-2mm}\r\n\\begin{verbatim}\r\n[[code:cases[\'input\'][1]]]\r\n\\end{verbatim}\r\n\\noindent\\textbf{Saída(s):}\\vspace{-2mm}\r\n\\begin{verbatim}\r\n[[code:cases[\'output\'][1]]]\r\n\\end{verbatim}\r\n\\newline\r\n\r\n\\\r\n\r\n% necessario para gerar casos de testes no moodle ==> mude verbatim <==> comment apos finalizar a questao\r\n\r\n\\begin{comment}\r\n[[code:moodle_cases]]\r\n\\end{comment}\r\n\r\nUse esse espaço como rascunho, não será utilizado para avaliação desta questão\r\n\\drawLines{23}\r\n\r\n\\newpage\r\n\r\n[[def:\r\nimport random\r\nimport numpy as np\r\n\r\ndef myRandom():\r\n    global a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, linhaTopAll\r\n    linhaBasicaAll = [1, 4, 7, 2]  # linha  basica\r\n    linhaTopAll = [3, 6, 9, 8]  # linha  top\r\n\r\n    regiaoNorteAll = [4, 7, 2, 1]  # regiao norte\r\n    regiaoSulAll = [6, 9, 8, 3]  # regiao sul\r\n\r\n    pedidoSupAll = [300, 400, 500, 600]  # valor pedido superior\r\n    pedidoInfAll = [100, 200, 300, 400]  # valor pedido inferior\r\n\r\n    bonusBasicoAll = [3, 5, 7, 9]  # bonus comissao Basico\r\n    bonusTopAll = [6, 8, 10, 12]  # bonus comissao Top\r\n\r\n    descontoBasicoNorteAll = [8, 10, 12, 6]  # desconto cliente basica\r\n    descontoBasicoSulAll = [5, 7, 9, 3]  # desconto cliente basica2\r\n\r\n    descontoTopNorteAll = [12, 6, 8, 10]  # desconto cliente basico Norte\r\n    descontoTopSulAll = [9, 3, 5, 7]  # desconto cliente top Sul\r\n\r\n    i0 = random.randrange(0, 4, 1)  # sorteia uma das 4 variacoes\r\n    #i0 = 0  # para testar a primeira variacao\r\n\r\n    a8 = linhaBasicaAll[i0]  # linha basica\r\n    a9 = linhaTopAll[i0]  # linha top\r\n\r\n    a10 = regiaoNorteAll[i0]  # regiao norte\r\n    a11 = regiaoSulAll[i0]  # regiao sul\r\n\r\n    a0 = pedidoSupAll[i0]  # valor pedido superior\r\n    a1 = pedidoInfAll[i0]  # valor pedido inferior\r\n\r\n    a2 = descontoBasicoNorteAll[i0]  # desconto cliente basica1\r\n    a3 = descontoBasicoSulAll[i0]  # desconto cliente basica2\r\n\r\n    a4 = bonusBasicoAll[i0]  # bonus comissao Norte\r\n    a5 = bonusTopAll[i0]  # bonus comissao Sul\r\n\r\n    a6 = descontoTopNorteAll[i0]  # desconto cliente top Norte\r\n    a7 = descontoTopSulAll[i0]  # desconto cliente top Sul\r\n\r\n    return [a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11]\r\n\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A, linha, pedido, regiao):\r\n    comis = 0.0\r\n    descli = 0.0\r\n    mystr = \'\'\r\n    #mystr = \"Entradas - Codigo Linha: %d   Valor Pedido: %d \" % (linha, pedido)\r\n    if (linha == A[8]):  # 1\r\n        if (pedido >= A[0]):  # 300\r\n            descli = A[2]  # 8\r\n        else:\r\n            if (pedido > A[1]):  # 100\r\n                descli = A[3]  # 5\r\n        desconto = pedido * descli / 100.0\r\n        mystr += \"Desconto Cliente: %4.1f\" % (desconto)\r\n    else:\r\n        # mystr += \"Codigo Regiao: %d\" % (regiao)\r\n        if (regiao == A[10]):  # 4\r\n            comis = A[4]  # 3\r\n            descli = A[6]  # 12\r\n        else:\r\n            comis = A[5]  # 6\r\n            descli = A[7]  # 9\r\n\r\n        desconto = float(pedido * descli / 100.0)\r\n        bonus = float(pedido * comis / 100.0)\r\n        mystr += \"Bonus Vendedor: %4.1f \\nDesconto Cliente: %4.1f\" % (bonus, desconto)\r\n\r\n    return str(mystr)\r\n\r\nnumCases = 4\r\ninp = []\r\nout = []\r\nA = myRandom()\r\nlinha = 0\r\nfor i in range(numCases):  # casos de teste\r\n    aux = random.choice([A[8], A[9]])\r\n    while linha == aux:\r\n        aux = random.choice([A[8], A[9]])\r\n    linha = aux\r\n    pedido = random.randrange(int(A[1] / 10) - 10, int(A[0] / 10) + 40, 1) * 10\r\n    regiao = random.choice([A[10], A[11]])\r\n\r\n    if linha in linhaTopAll:\r\n        mystr = \"%d\\n%d\\n%d\" % (linha, pedido, regiao)\r\n    else:\r\n        mystr = \"%d\\n%d\" % (linha, pedido)\r\n\r\n    inp.append(mystr)\r\n\r\n    mySimula = str(algorithm(A, linha, pedido, regiao))\r\n    out.append(mySimula)\r\n\r\n# necessario para gerar os casos de teste, para mod_i/var_i\r\ncases = {}\r\ncases[\'input\'] = np.array(inp).tolist()\r\ncases[\'output\'] = np.array(out).tolist()\r\nimport json\r\nmoodle_cases = json.dumps(cases)\r\n\r\n# para testar em https://repl.it/languages/python\r\n#print(\'Exemplos:\')\r\n#print(\'Entradas:\')\r\n#print(caso0_inp)\r\n#print(\'Saida(s):\')\r\n#print(caso0_out)\r\n]]','QT','1','remember','yes','2020-03-05',1,2),(1385,'','for-promoção-cosmetico 2020.q1-p1q2','[\\textbf{Enviar código \"Q2.java\" no moodle}] Uma empresa de cosméticos pretende estimular a venda de algumas linhas de seus produtos em determinadas regiões.  Escreva um programa para processar os dados coletados para \\textbf{cada pedido de vendas}.  O usuário irá informar inicialmente o código da linha do produto. Considere que a digitação será encerrada quando for digitado o código da linha do produto igual  a \\textbf{0} (zero) indicando que não há mais pedidos com dados a serem processados.\r\n\r\nApós ler o código da linha do produto o programa deverá solicitar o valor do pedido e em seguida o código da região. \r\n\r\n\\begin{itemize}\r\n	\\item Para \\textbf{linha} do produto o usuário irá digitar um código, sendo \\textbf{[[code:a8]]} para Básica e \\textbf{[[code:a9]]} para Top. \\textbf{Não é necessário fazer a validação de dados da linha do produto}.\r\n	\\item Para \\textbf{região} o usuário irá digitar um código, sendo \\textbf{[[code:a10]]} para Centro-Norte e \\textbf{[[code:a11]]} para Centro-Sul. \r\n\\textbf{Não é necessário fazer a validação de dados da região do produto}.\r\n\\end{itemize}\r\n\r\nAs seguintes situações poderão ou não ocorrer dependendo das regras: (a) vendedor receberá bônus na comissão e/ou (b) cliente receberá desconto no pedido. O bônus e/ou desconto deve ser calculado sobre o valor do pedido.\r\n\r\nAs regras são as seguintes:\r\n\r\n\\begin{table}[h]\r\n\\centering\r\n\\begin{tabular}{|c|c|c|c|c|}\r\n\\hline\r\nLinha   & Valor Pedido                                                                  & Regiões            & Bônus Vendedor & Desconto Cliente \\\\ \\hline\r\nBásica & $\\ge$ [[code:a0]]  \\hspace{2}reais                             &  Centro-Sul  &  -                          & [[code:a2]]\\%           \\\\ \\hline\r\nTop      & -                                                                                      & Centro-Norte & [[code:a4]]\\%    & [[code:a6]]\\%           \\\\ \\hline\r\nTop      & -                                                                                      & Centro-Sul     & [[code:a5]]\\%    & [[code:a7]]\\%           \\\\ \\hline\r\n\\end{tabular}\r\n\\end{table}\r\n\r\nCaso as entradas do usuário não se enquadrem nas condições da tabela acima, deve-se assumir Bonus Vendedor = 0 e/ou Desconto Cliente = 0. Note que o Bonus Vendedor somente será exibido se a linha for \\textbf{Top}.\r\n\r\n\\newline\r\n\r\nO programa deve imprimir \\textbf{para cada PEDIDO:} (a) A linha do produto; (b) o valor do pedido; (c) a região do produto (quando for o caso), o valor do desconto obtido (desconto = 0 se não obteve desconto), o valor do bônus da comissão (quando for o caso). \\textbf{Vide os casos de teste (exemplos)}.\r\n\r\nAo final, após encerrar a entrada de dados o programa deve imprimir \\textbf{(uma única vez)} - Vide os casos de teste (exemplos):\r\n\r\n\\begin{enumerate}[label=(\\alph*)]\r\n	\\item Quantidade total de pedidos;\r\n	\\item Valor médio dos pedidos entre \\textbf{[[code:a1]] reais} (inclusive) e \\textbf{[[code:a0]] reais} (inclusive), independentemente de região;\r\n       \\item Soma dos bônus das comissões  (dos pedidos) da região \\textbf{Centro-Norte};\r\n       \\item Quantidade de pedidos que não obtiveram descontos.\r\n\\end{enumerate}\r\n\r\n\\begin{itemize}\r\n	\\item ATENÇÃO 1: Caso você não faça a validação de dados do código da região, o conceito máximo atribuído para a sua solução será \"B\";\r\n	\\item ATENÇÃO 2: A ausência de endentação (recuos) no seu código poderá gerar \"descontos\" na atribuição do conceito nessa questão;\r\n	\\item ATENÇÃO 3 -  Nos \\textbf{CASOS DE TESTE} (exemplos abaixo)  a sequência da Entrada é : o primeiro valor é \\textbf{código da LINHA}, o segundo valor é \\textbf{VALOR (do pedido)} e o terceiro valor é \\textbf{código da REGIÃO}. Assim \\textbf{\"cada 3 linhas\"} refere-se a um pedido. \r\n\\item ATENCÃO 4 - Os \"textos\" (mensagens) usados nas \\textbf{SAÍDA DE DADOS} devem ser \\textbf{exatamente iguais aos \"modelos\"} apresentados nos casos de testes (exemplos) para que passem \\textbf{na Avaliação Automática}.\r\n\\end{itemize}\r\n\\newline\r\n\r\n\\subsection*{Exemplo}\r\n\r\n\\noindent\\textbf{Entradas:}\\vspace{-2mm}\r\n\\begin{verbatim}\r\n[[code:cases[\'input\'][0]]]\r\n\\end{verbatim}\r\n\\noindent\\textbf{Saída(s):}\\vspace{-2mm}\r\n\\begin{verbatim}\r\n[[code:cases[\'output\'][0]]]\r\n\\end{verbatim}\r\n\r\n\r\n\\\r\n\r\n% necessario para gerar casos de testes no moodle ==> mude verbatim <==> comment apos finalizar a questao\r\n\r\n\\begin{comment}\r\n[[code:moodle_cases]]\r\n\\end{comment}\r\n\r\n%Use esse espaço como rascunho, não será utilizado para avaliação desta questão\r\n%\\drawLines{7}\r\n\r\n\\newpage\r\n\r\n[[def:\r\nimport random\r\nimport numpy as np\r\n\r\ndef myRandom():\r\n    global a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, linhaTopAll\r\n    linhaBasicaAll = [1, 4, 7, 2]  # linha  basica\r\n    linhaTopAll = [3, 6, 9, 8]  # linha  top\r\n\r\n    regiaoNorteAll = [4, 7, 2, 1]  # regiao norte\r\n    regiaoSulAll = [6, 9, 8, 3]  # regiao sul\r\n\r\n    pedidoSupAll = [300, 400, 500, 600]  # valor pedido superior\r\n    pedidoInfAll = [100, 200, 300, 400]  # valor pedido inferior\r\n\r\n    bonusBasicoAll = [3, 5, 7, 9]  # bonus comissao Basico\r\n    bonusTopAll = [6, 8, 10, 12]  # bonus comissao Top\r\n\r\n    descontoBasicoNorteAll = [8, 10, 12, 6]  # desconto cliente basica\r\n    descontoBasicoSulAll = [5, 7, 9, 3]  # desconto cliente basica2\r\n\r\n    descontoTopNorteAll = [12, 6, 8, 10]  # desconto cliente basico Norte\r\n    descontoTopSulAll = [9, 3, 5, 7]  # desconto cliente top Sul\r\n\r\n    i0 = random.randrange(0, 4, 1)  # sorteia uma das 4 variacoes\r\n    #i0 = 0  # para testar a primeira variacao\r\n\r\n    a8 = linhaBasicaAll[i0]  # linha basica\r\n    a9 = linhaTopAll[i0]  # linha top\r\n\r\n    a10 = regiaoNorteAll[i0]  # regiao norte\r\n    a11 = regiaoSulAll[i0]  # regiao sul\r\n\r\n    a0 = pedidoSupAll[i0]  # valor pedido superior\r\n    a1 = pedidoInfAll[i0]  # valor pedido inferior\r\n\r\n    a2 = descontoBasicoNorteAll[i0]  # desconto cliente basica1\r\n    a3 = descontoBasicoSulAll[i0]  # desconto cliente basica2\r\n\r\n    a4 = bonusBasicoAll[i0]  # bonus comissao Norte\r\n    a5 = bonusTopAll[i0]  # bonus comissao Sul\r\n\r\n    a6 = descontoTopNorteAll[i0]  # desconto cliente top Norte\r\n    a7 = descontoTopSulAll[i0]  # desconto cliente top Sul\r\n\r\n    return [a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11]\r\n\r\n\r\n# para testar, rodar nos links acima e retirar # e as 3 aspas aqui e no final\r\ndef algorithm(A):\r\n    comis = 0.0\r\n    descli = 0.0\r\n    desconto = 0\r\n    bonus = 0\r\n    quant = 0\r\n    cont1 = 0\r\n    semdesc = 0\r\n    soma1 = 0.0\r\n    soma2 = 0.0\r\n    media = 0.0\r\n\r\n    mystrOut = \'\'\r\n    mystrInp = \'\'\r\n\r\n    linha = random.choice([A[8], A[9], 0])\r\n    mystrInp += \"\\n%d\" % (linha)\r\n    while linha != 0:\r\n        if mystrOut != \'\':\r\n            mystrOut += \"\\n\"\r\n        pedido = random.randrange(int(A[1] / 10) - 10, int(A[0] / 10) + 40, 1) * 10\r\n        regiao = random.choice([A[10], A[11]])\r\n        mystrInp += \"\\n%d\\n%d\" % (pedido, regiao)\r\n        if (pedido >= A[1] and pedido <= A[0]):  # 100 # 300\r\n            soma1 += pedido\r\n            cont1 += 1\r\n        if linha == A[8]:\r\n            if (pedido >= A[0] and regiao == A[11]):  # 300  e Região Centro-Sul\r\n                descli = A[2]  # 8\r\n            else:\r\n                descli = 0\r\n                semdesc += 1\r\n            desconto = float(pedido * descli / 100.0)\r\n\r\n            mystrOut += \"Linha: %d Pedido: %.1f Regiao: %d Desconto: %.1f\" % (linha, pedido, regiao, desconto)\r\n\r\n        else:\r\n            if regiao == A[10]:\r\n                bonus = pedido * A[4] / 100  # 3\r\n                desconto = pedido * A[6] / 100  # 12\r\n                soma2 = soma2 + bonus\r\n            else:\r\n                bonus = pedido * A[5] / 100  # 6\r\n                desconto = pedido * A[7] / 100  # 9\r\n\r\n            mystrOut += \"Linha: %d Pedido: %.1f Regiao: %d Desconto: %.1f Bonus: %.1f\" % (\r\n                linha, pedido, regiao, desconto, bonus)\r\n\r\n        quant += 1\r\n\r\n        linha = random.choice([A[8], A[9], 0])\r\n        mystrInp += \"\\n%d\" % (linha)\r\n\r\n    if cont1 > 0:\r\n        media = soma1 / cont1\r\n    else:\r\n        media = 0.0\r\n\r\n    mystrOut += \"\\nQuantidade de pedidos: %d\" % (quant)\r\n    mystrOut += \"\\nValor medio de pedidos entre %d e %d reais: %.1f\" % (A[1], A[0], media)\r\n    mystrOut += \"\\nSoma dos bonus de pedidos da regiao 4: %.1f\" % (soma2)\r\n    mystrOut += \"\\nQuandidade de pedidos sem descontos: %d\" % (semdesc)\r\n\r\n    return [mystrInp, mystrOut]\r\n\r\n\r\nnumCases = 2\r\ninp = []\r\nout = []\r\nA = myRandom()\r\n\r\nfor i in range(numCases):  # casos de teste\r\n    tam = 0\r\n    while tam < 500 or tam > 550:  # quantidade similar de linhas\r\n        [mySimulaInp, mySimulaOut] = algorithm(A)\r\n        tam = len(str(mySimulaInp) + str(mySimulaOut))\r\n\r\n    inp.append(str(mySimulaInp))\r\n    out.append(str(mySimulaOut))\r\n\r\n# necessario para gerar os casos de teste, para mod_i/var_i\r\ncases = {}\r\ncases[\'input\'] = np.array(inp).tolist()\r\ncases[\'output\'] = np.array(out).tolist()\r\nimport json\r\n\r\nmoodle_cases = json.dumps(cases)\r\n\r\n# para testar em https://repl.it/languages/python\r\n# print(\'Exemplos:\')\r\n# print(\'Entradas:\')\r\n# print(cases[\'input\'][0])\r\n# print(\'Saída(s):\')\r\n# print(cases[\'output\'][0])\r\n]]','QT','2','remember','yes','2020-03-06',1,3),(1386,'','seq-soma 2 int (2020.1.p1q1 - simul)','Escreva um programa para ler dois números e mostrar a(o) [[code:oper]].\r\n\r\n\\\r\n\\subsubsection*{Exemplo}\r\n\r\n\\noindent\\textbf{Entradas:}\\\\\\vspace{-5mm}\r\n\\begin{verbatim}\r\n[[code:caso0_inp]]\r\n\\end{verbatim}\r\n\r\n\\noindent\\textbf{Saída:}\\\\\\vspace{-5mm}\r\n\\begin{verbatim}\r\n[[code:caso0_out]]\r\n\\end{verbatim}\r\n\\\r\n\r\n% necessario para gerar casos de testes no moodle ==> mude verbatim <==> comment apos finalizar a questao\r\n\r\n\\begin{comment}\r\n[[code:moodle_cases]]\r\n\\end{comment}\r\n\r\n[[def:\r\nimport random\r\nimport numpy as np\r\n\r\ndef myrandom(num):\r\n    a = []\r\n    for i in range(num):\r\n        a.append(random.randrange(1,9,1)) # n_i\r\n    return a\r\n\r\ndef algorithm(A,oper):\r\n    if oper == \'soma\':\r\n        return np.sum(np.array(A))\r\n    else:\r\n        return np.subtract(np.array(A))\r\n\r\noper = \"soma\"  # aparece no texto\r\nquantNumeros = 2\r\n\r\ninp = []\r\nout = []\r\nfor i in range(3): # casos de teste\r\n    A = myrandom(quantNumeros)\r\n    out.append(\"Resultado = \" + str(algorithm(A,oper)))\r\n    inp.append(\'\\n\'.join(\'%d\' %x for x in A))\r\n\r\n# necessario para gerar os casos de teste, para mod_i/var_i\r\ncases = {}\r\ncases[\'input\']  = np.array(inp).tolist()\r\ncases[\'output\'] = np.array(out).tolist()\r\nimport json\r\nmoodle_cases = json.dumps(cases)\r\n\r\ncaso0_inp = \"\"\r\nfor i,x in enumerate(cases[\'input\'][0].split(\'\\n\')):\r\n    caso0_inp +=  x + \"\\n\"\r\ncaso0_out=cases[\'output\'][0]\r\n\r\n#print(caso0_inp)\r\n#print(caso0_out)\r\n]]','QT','1','remember','yes','2020-03-09',1,1),(1387,'','seq-prod 2 int (2020.1.p1q1 - simul)','Escreva um programa para ler dois números e mostrar a(o) [[code:oper]].\r\n\r\n\\\r\n\\subsubsection*{Exemplo}\r\n\r\n\\noindent\\textbf{Entradas:}\\\\\\vspace{-5mm}\r\n\\begin{verbatim}\r\n[[code:caso0_inp]]\r\n\\end{verbatim}\r\n\r\n\\noindent\\textbf{Saída:}\\\\\\vspace{-5mm}\r\n\\begin{verbatim}\r\n[[code:caso0_out]]\r\n\\end{verbatim}\r\n\\\r\n\r\n% necessario para gerar casos de testes no moodle ==> mude verbatim <==> comment apos finalizar a questao\r\n\r\n\\begin{comment}\r\n[[code:moodle_cases]]\r\n\\end{comment}\r\n\r\n[[def:\r\nimport random\r\nimport numpy as np\r\n\r\ndef myrandom(num):\r\n    a = []\r\n    for i in range(num):\r\n        a.append(random.randrange(1,9,1)) # n_i\r\n    return a\r\n\r\ndef algorithm(A,oper):\r\n    if oper == \'soma\':\r\n        return np.sum(np.array(A))\r\n    elif oper == \'diferença\':\r\n        return np.subtract(np.array(A))\r\n    else:\r\n        return np.prod(np.array(A))\r\n\r\n\r\noper = \"produto\"  # aparece no texto\r\nquantNumeros = 2\r\n\r\ninp = []\r\nout = []\r\nfor i in range(3): # casos de teste\r\n    A = myrandom(quantNumeros)\r\n    out.append(\"Resultado = \" + str(algorithm(A,oper)))\r\n    inp.append(\'\\n\'.join(\'%d\' %x for x in A))\r\n\r\n# necessario para gerar os casos de teste, para mod_i/var_i\r\ncases = {}\r\ncases[\'input\']  = np.array(inp).tolist()\r\ncases[\'output\'] = np.array(out).tolist()\r\nimport json\r\nmoodle_cases = json.dumps(cases)\r\n\r\ncaso0_inp = \"\"\r\nfor i,x in enumerate(cases[\'input\'][0].split(\'\\n\')):\r\n    caso0_inp +=  x + \"\\n\"\r\ncaso0_out=cases[\'output\'][0]\r\n\r\n#print(caso0_inp)\r\n#print(caso0_out)\r\n]]','QT','2','remember','yes','2020-03-09',1,1),(1388,'','erode/dilata 1D (moodle) - atividade2','Implemente a função \r\n$$[[code:oper1]]$$\r\nonde $x\\in \\mathbb{E}$, $f \\in K^\\mathbb{E}$ ou $f \\in [0,k]^\\mathbb{E}$,  $k$ é um inteiro positivo representando os níveis de cinza da imagem digital com domínio $\\mathbb{E}$, $b\\in \\mathbb{Z}^\\mathbb{B}$. {\\color{red} Considere \r\n$\\mathbb{E}=1D$ (imagem unidimensional/vetor)}. Considere também $b \\in \\mathbb{Z}^\\mathbb{B}$ a função estruturantes (vizinhança/kernel) com dimensão também 1D, conforme exemplo abaixo.\r\n\r\n\\vspace{5mm}\r\n\r\n\\noindent\\textbf{ATENÇÃO:}  Submeter o arquivo \\textbf{Q1.py} (com a resposta). O valor de \\texttt{b\\_origem} no exemplo é a origem da função estruturante, considerando o índice zero como início.\r\n\r\n\\vspace{5mm}\r\n\r\n\\noindent\\textbf{SUGESTÃO:} Fazer o código usando um vetor pequeno e depois de validado, submeter o código para correção.\r\n\r\n\\vspace{5mm}\\noindent\\textbf{Exemplo (considerar somente os números como elementos de entrada/saída para os casos de teste):}\r\n\\begin{verbatim}\r\n[[code:ex_inp]]\r\n[[code:ex_out]]\r\n\\end{verbatim}\r\n\r\n% necessario para gerar casos de testes no moodle ==> mude verbatim <==> comment apos finalizar a questao\r\n\\begin{comment}\r\n[[code:moodle_cases]]\r\n\\end{comment}\r\n\r\n[[def:\r\nimport random, numpy as np\r\n\r\na_tam   = random.randrange(0,5,1)\r\na_inicio = 25\r\na0=random.randrange(a_inicio, a_inicio+a_tam+1, 1)\r\n\r\nb0=random.randrange(4, 7, 1)\r\nbc=random.randrange(1, b0-1, 1)\r\nb1 = np.random.randint(3, size=b0)\r\nb2 = np.concatenate(([bc],b1), axis=0)\r\n\r\noper = [\"dil\",\"ero\"]        \r\na1=random.choice(oper) \r\n\r\nif a1==oper[0]: #max\r\n  oper1 = \'dil(f,b) = (f \\oplus b)(x) = \\\\delta_{b}(f)(x) = \\max \\{f(y) + b(y-x): y \\in \\mathbb{B}_x\\cap \\mathbb{E}\\}\'\r\nif a1==oper[1]: #min\r\n  oper1 = \'ero(f,b) = (f \\ominus b)(x) = \\\\varepsilon_{b}(f)(x) = \\min \\{f(y) - b(x-y): y \\in \\mathbb{B}_x\\cap \\mathbb{E}\\}\'\r\n\r\ndef algorithm(a1,oper,v1,b1,bc):\r\n  a0 = len(v1)\r\n  v2 = np.zeros(a0, dtype=\'int\')\r\n  for i in range(a0):\r\n    if a1==oper[0]: #dil\r\n      aux = 0\r\n      for j in range(len(b1)):\r\n        ioff = i+j-bc\r\n        if 0<=ioff<a0:  \r\n          if aux < v1[ioff]+b1[j]:\r\n            aux = v1[ioff]+b1[j]\r\n      v2[i] = aux\r\n\r\n    if a1==oper[1]: #ero\r\n      aux = 255\r\n      for j in range(len(b1)):\r\n        ioff = i+j-bc\r\n        if 0<=ioff<a0:  \r\n          if aux > v1[ioff]-b1[j]:\r\n            aux = v1[ioff]-b1[j]\r\n      v2[i] = aux\r\n\r\n  return(v2)\r\n\r\nnumCases = 4\r\ninp = []\r\nout = []\r\nlinha = 0\r\nfor i in range(numCases):  # casos de teste\r\n  v1 = np.random.randint(5, size=a0)+2\r\n  v2 = algorithm(a1,oper,v1,b1,bc)\r\n\r\n  inp.append(\'\\n\'.join([str(i) for i in np.concatenate((b2,v1), axis=0)]))\r\n  out.append(\'\\n\'.join([str(i) for i in v2]))\r\n\r\n# necessario para gerar os casos de teste, para mod_i/var_i\r\ncases = {}\r\ncases[\'input\'] = np.array(inp).tolist()\r\ncases[\'output\'] = np.array(out).tolist()\r\nimport json\r\nmoodle_cases = json.dumps(cases)\r\n\r\nex_inp = \'b_origem : \' + str(bc)\r\nex_inp += \'\\nb        : \'+ \' \'.join([str(i) for i in b1]).replace(\'\\n\', \' \')\r\nex_inp += \'\\nf        : \'+ inp[0][(len(b1)+1)*2:].replace(\'\\n\', \' \')\r\nex_out = a1+\'(f,b) : \'+ out[0].replace(\'\\n\', \' \')\r\n\r\n# para testar em https://repl.it/languages/python3\r\n]]','QT','1','remember','yes','2020-03-10',1,137),(1389,'','fuv2020 - exemplo simples x2','Resolva a equação abaixo:\r\n\r\n$$ x^2 +3x = [[code:x0]] $$\r\n\r\n[[def:\r\nimport random\r\n\r\nx0 = random.choice([3,4,5,6,7])\r\n\r\n]]','QM','1','remember','yes','2020-03-10',78,138),(1390,'','fuv2020 - exemplo simples x3','Resolva a equação abaixo:\r\n\r\n$$ x^3 +3x = 7 $$','QM','2','remember','no','2020-03-10',1,138),(1391,'','fuv2020 - exemplo simples x4','Resolva a equação abaixo:\r\n\r\n$$ x^4 +3x = 5 $$','QM','3','remember','no','2020-03-10',1,138),(1392,'','fuv2020 - exemplo simples - diss','Resolva a equação abaixo:\r\n\r\n$$ x^7 +3x = 5 $$','QT','1','remember','no','2020-03-10',1,138),(1393,'','fuv2020 - exemplo simples integral','% texto da questão\r\nQual é o resultado da equação:\r\n\r\n$$[[code:a0]]$$\r\n\r\n(Testando equação em latex com a biblioteca simbólica sympy, ver docs.sympy.org)\r\n\r\n[[def:\r\n# https://www.sympy.org/pt/index.html\r\n\r\nx = symbols(\'x\')\r\neq = np.random.randint(3,6)*x**2 + np.random.randint(3,6)*x + np.random.randint(3,6)\r\n\r\na0 = latex(Integral(eq, x))\r\n\r\na1 = latex(integrate(eq, x))    \r\na2 = latex(integrate(eq*x, x))\r\na3 = latex(integrate(eq/x, x))\r\na4 = latex(integrate(x**5 + x + 1, x))\r\na5 = latex(integrate(x**6 + x + 1, x))\r\n]]\r\n\r\n% alternativas','QM','4','remember','yes','2020-03-10',78,139),(1394,'Historia da Qualidade','Qualidade','Descreva a trajetória da Qualidade conforme sua história.','QT','3','remember','no','2020-03-20',80,153),(1395,'Ferramentas da Qualidade','Qualidade','Descreva sucintamente as 7 ferramentas tradicionais da qualidade','QT','3','remember','no','2020-03-20',80,153),(1396,'Desenvolvimento de Produto','Qualidade','O que é analisado no FMEA?','QM','1','remember','no','2020-03-20',80,153),(1397,'','erode/dilata 1D (moodle) - atividade1','Criar 2 vetores $ [[code:var1]] 1$ e $ [[code:var1]] 2$ de inteiros com $[[code:a0]]$ posições cada.\r\n\r\n%Solicitar ao usuário um valor $x$ (que deve estar entre $10$ e $[[code:a0]]$). Não é necessário validar.\r\n\r\nLer $[[code:a0]]$ elementos, armazenando-os no vetor $ [[code:var1]] 1$. \r\n\r\nPreencher o vetor $ [[code:var1]] 2$   a partir de $ [[code:var1]] 1$  com base na seguinte regra, considerando que  $[[code:var0]]$  é a variável índice que será usada para acessar os dois vetores (É OBRIGATÓRIO O USO DE LAÇOS para varrer o vetor):\r\n\r\n\\begin{itemize}\r\n\\item se $ [[code:var0]] = 0$,  \r\n$[[code:var1]] 2[ [[code:var0]] ]$   recebe o [[code:a1]]  elemento dentre  $\\{[[code:var1]] 1[ [[code:a0-1]] ], [[code:var1]] 1[0], [[code:var1]] 1[1]\\}$;\r\n\r\n\\item se $ [[code:var0]] = [[code:a0-1]]$, \r\n$[[code:var1]] 2[ [[code:var0]] ]$ recebe o [[code:a1]]  elemento dentre  $\\{[[code:var1]] 1[ [[code:a0-2]] ], [[code:var1]] 1[ [[code:a0-1]] ], [[code:var1]] 1[0]\\}$; \r\n\r\n\\item se $ [[code:var0]]$ está entre $1$ e  $[[code:a0-1]]$, ou seja, $1\\leq [[code:var0]] < [[code:a0-1]]$, \r\n$ [[code:var1]] 2[ [[code:var0]] ]$ recebe o [[code:a1]]  elemento dentre  $\\{ [[code:var1]] 1[ [[code:var0]] -1], [[code:var1]] 1[  [[code:var0]]  ], [[code:var1]] 1[  [[code:var0]]  +1]\\}$.\r\n\\end{itemize}\r\n\r\n\\noindent\\textbf{ATENÇÃO:}  Submeter o arquivo \\textbf{Q1.py} (com a resposta).\r\n\r\n\\vspace{5mm}\r\n\r\n\\noindent\\textbf{SUGESTÃO:} Fazer o código usando um vetor pequeno e depois de validado, submeter o código para correção.\r\n\r\n\\vspace{5mm}\\noindent\\textbf{Exemplo (considerar somente os números como elementos de entrada/saída para os casos de teste):}\r\n\\begin{verbatim}\r\n[[code:ex_inp]]\r\n[[code:ex_out]]\r\n\\end{verbatim}\r\n\r\n% necessario para gerar casos de testes no moodle ==> mude verbatim <==> comment apos finalizar a questao\r\n\\begin{comment}\r\n[[code:moodle_cases]]\r\n\\end{comment}\r\n\r\n\r\n[[def:\r\nimport random, numpy as np\r\n\r\na_tam   = 2 # random.randrange(0,3,1)\r\na_inicio = 20\r\na0=random.randrange(a_inicio, a_inicio+a_tam+1, 1)\r\noper = [\"maior\",\"menor\"]        \r\na1=random.choice(oper) \r\n\r\nletras = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\"]\r\n\r\nmodelo = letras[oper.index(a1)*(1+a_tam)+(a0-a_inicio)]\r\n\r\nvar0 = random.choice([\"i\",\"j\",\"x\",\"y\",\"w\",\"k\",\"p\"])\r\nvar1 = random.choice(letras)\r\n\r\ndef algorithm(a0,a1,v1,oper):\r\n  v2 = np.zeros(a0, dtype=\'int\')\r\n  for i in range(a0):\r\n    aux = [v1[(i-1)%a0], v1[i], v1[(i+1)%a0]]\r\n    if a1==oper[0]: #max\r\n      v2[i]= np.max(aux)\r\n\r\n    if a1==oper[1]: #min\r\n      v2[i]= np.min(aux)\r\n  return(v2)\r\n\r\nnumCases = 4\r\ninp = []\r\nout = []\r\nlinha = 0\r\nfor i in range(numCases):  # casos de teste\r\n  v1 = np.random.randint(9, size=a0)\r\n  v2 = algorithm(a0,a1,v1,oper)\r\n\r\n  inp.append(\'\\n\'.join([str(i) for i in v1]))\r\n  out.append(\'\\n\'.join([str(i) for i in v2]))\r\n\r\n# necessario para gerar os casos de teste, para mod_i/var_i\r\ncases = {}\r\ncases[\'input\'] = np.array(inp).tolist()\r\ncases[\'output\'] = np.array(out).tolist()\r\nimport json\r\nmoodle_cases = json.dumps(cases)\r\n\r\nex_inp = \'Entrada:\'+ inp[0].replace(\'\\n\', \' \')\r\nex_out = \'Saida  :\'+ out[0].replace(\'\\n\', \' \')\r\n\r\n# para testar em https://repl.it/languages/python3\r\n]]','QT','1','remember','yes','2020-04-10',1,137),(1398,'','distância 1D (moodle) - atividade3','Implemente a \\textbf{transformada de distância utilizando sucessivas erosões}, considerando o exemplo abaixo. Considere a erosão definida por:\r\n$$[[code:oper1]]$$\r\nonde $x\\in \\mathbb{E}$, $f \\in K^\\mathbb{E}$ ou $f \\in [0,k]^\\mathbb{E}$,  $k$ é um inteiro positivo representando os níveis de cinza da imagem digital com domínio $\\mathbb{E}$, $b\\in \\mathbb{Z}^\\mathbb{B}$. Considere também $b \\in \\mathbb{Z}^\\mathbb{B}$ a função estruturantes (vizinhança/kernel), conforme exemplo abaixo, com origem sendo o seu centro (neste exemplo, a imagem $f$ possui $[[code:a0]]$ pixels). \r\n\r\n\\vspace{5mm}\r\n\\noindent\\textbf{ATENÇÃO:}  Submeter o arquivo \\textbf{Q1.py} (com a resposta). \r\n\r\n\\vspace{5mm}\r\n\\noindent\\textbf{SUGESTÃO:} Fazer o código usando um vetor pequeno e depois de validado, submeter o código para correção.\r\n\r\n\\vspace{5mm}\r\n\\noindent\\textbf{OBSERVAÇÃO:} Esta atividade foi gerada utilizando as seguintes versões. Em alguns testes, o número de erosões (iterações) necessárias para convergir para a transformada de distância foi diferente nos servidores que validam esta atividade no moodle. Ignore se isso ocorreu em algum dos seus casos de teste. Acredito que o erro esteja neste comando \\texttt{np.array\\_equal} para comparar dois vetores do tipo \\textt{narray}.\r\n \r\n\\begin{verbatim}\r\n[[code:versao]]\r\n\\end{verbatim}\r\n\r\n\\vspace{5mm}\\noindent\\textbf{Exemplo (considerar somente os números como elementos de entrada/saída para os casos de teste):}\r\n\\begin{verbatim}\r\n[[code:ex_inp]]\r\n[[code:ex_out]]\r\n\\end{verbatim}\r\n\r\n% necessario para gerar casos de testes no moodle ==> mude verbatim <==> comment apos finalizar a questao\r\n\\begin{comment}\r\n[[code:moodle_cases]]\r\n\\end{comment}\r\n\r\n[[def:\r\nimport random, numpy as np\r\nfrom platform import python_version\r\n\r\nversao = \'Python, versão: \' + str(python_version())\r\nversao += \'\\nNumpy, versão: \' + str(np.version.version)\r\n\r\na_tam   = random.randrange(0,5,1)\r\na_inicio = 30\r\na0=random.randrange(a_inicio, a_inicio+a_tam+1, 1)\r\n\r\nb0=random.randrange(2, 4, 1)*2+1\r\nb1 = np.zeros(b0, dtype=\'int\')\r\nbc=int(len(b1)/2)\r\naux = random.randrange(0, 2, 1)\r\nfor i in range(bc):\r\n  b1[i]=b1[b0-i-1]=i-bc-aux\r\n\r\noper1 = \'ero(f,b) = (f \\ominus b)(x) = \\\\varepsilon_{b}(f)(x) = \\min \\{f(y) - b(x-y): y \\in \\mathbb{B}_x\\cap \\mathbb{E}\\}\'\r\n\r\ndef myErosion(v1,b1):\r\n  bc=int(len(b1)/2)\r\n  a0 = len(v1)\r\n  v2 = v1.copy()\r\n  for i in range(a0):\r\n      aux = 255\r\n      for j in range(len(b1)):\r\n        ioff = i+j-bc\r\n        if 0<=ioff<a0:  \r\n          if aux > v1[ioff]-b1[j]:\r\n            aux = v1[ioff]-b1[j]\r\n      v2[i] = aux\r\n  return v2\r\n\r\ndef algorithm(f,b):\r\n    global myErosion\r\n    g = f\r\n    cont = 0\r\n    while True:\r\n      cont += 1\r\n      f=g\r\n      g=myErosion(g,b)\r\n      eq = True\r\n      for i in range(len(f)):\r\n         if f[i]!=g[i]: eq = False\r\n      if eq: break\r\n      #if np.array_equal(f,g): break\r\n    return [cont,g]\r\n\r\nnumCases = 4\r\ninp = []\r\nout = []\r\nlinha = 0\r\ncontCases = 0\r\nwhile contCases < numCases:\r\n  v1 = (np.random.random((1, a0))+0.95)%10\r\n  v1 = v1[0].astype(int)*99\r\n\r\n  cont,v2 = algorithm(v1,b1)\r\n  if np.max(v2)<=9 and cont>1:\r\n    contCases += 1\r\n    v1[v1==99] = 9\r\n    inp.append(\'\\n\'.join([str(i) for i in np.concatenate((b1,v1), axis=0)]))\r\n    out.append(\'\\n\'.join([str(i) for i in np.concatenate((v2,[cont]), axis=0)]))\r\n\r\n# necessario para gerar os casos de teste, para mod_i/var_i\r\ncases = {}\r\ncases[\'input\'] = np.array(inp).tolist()\r\ncases[\'output\'] = np.array(out).tolist()\r\nimport json\r\nmoodle_cases = json.dumps(cases)\r\n\r\nex_inp  = \'b        : \'+ \' \'.join([str(i) for i in b1]).replace(\'\\n\', \' \')\r\nex_inp += \'\\nf        : \'+ inp[0][(len(b1))*3-1:].replace(\'\\n\', \' \')\r\nex_out  = \'dist(f,b): \'+ out[0][:-2].replace(\'\\n\', \' \')\r\nex_out += \'\\niteracoes: \' + out[0][-1:]\r\n\r\n# para testar em https://repl.it/languages/python3\r\n]]','QT','1','remember','yes','2020-04-16',1,137);
/*!40000 ALTER TABLE `topic_question` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `topic_topic`
--

DROP TABLE IF EXISTS `topic_topic`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `topic_topic` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `topic_text` varchar(50) NOT NULL,
  `topic_description` longtext NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=154 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `topic_topic`
--

LOCK TABLES `topic_topic` WRITE;
/*!40000 ALTER TABLE `topic_topic` DISABLE KEYS */;
INSERT INTO `topic_topic` VALUES (1,'1-sequencial',''),(2,'3-condicional',''),(3,'4-repetição',''),(4,'5-vetor',''),(5,'7-matriz',''),(6,'6-módulo-parte2',''),(7,'Aula01',''),(8,'Aula02',''),(9,'Aula03',''),(10,'Aula04',''),(11,'template','Equação em latex'),(12,'template-equação-paramétrica','Tópico para agrupar questões com valores aleatórios (paramétricos).'),(13,'template-figura','Tópico para agrupar questões que importam figuras de uma url.'),(14,'template-integral','Tópico para agrupar questões para cálculo automático de integral'),(15,'template-integral-fig','Tópico para agrupar questões com cálculo automático de integral e figura de equação.'),(16,'template-mru','Tópico para agrupar questões de Movimento Retilíneo Uniform'),(19,'nível 1',''),(20,'nível 1',''),(21,'nível 1',''),(22,'CMMI',''),(23,'OO',''),(24,'Padrão',''),(25,'UML',''),(26,'arquitetura',''),(27,'RUP',''),(28,'APF',''),(29,'Teste',''),(30,'Modelagem',''),(31,'SI',''),(32,'Requisito',''),(33,'Processo',''),(34,'ES',''),(35,'introducao',''),(36,'introducaoP2',''),(37,'IntroducaoREC',''),(38,'IT-2018-3Q',''),(39,'IT-2018-3QP2',''),(40,'graficos',''),(41,'medidas',''),(42,'correl',''),(43,'dados',''),(44,'desvio',''),(46,'repeticaoBC',''),(47,'RETA TANGENTE',''),(48,'RDA1P',''),(49,'APROXIMAÇÃO LINEAR',''),(50,'TAXAS RELACIONADAS',''),(51,'L\'HOSPITA',''),(52,'GRÁFICO',''),(53,'MÁXIMOS/MÍNIMOS',''),(54,'PROBLEMAS DE OTIMIZAÇÃO',''),(55,'ABERTAS',''),(56,'P2-INTEGRAL-SUBSTITUIÇÃO',''),(57,'P2-TFC-PARTE 1',''),(58,'P2-INTEGRAL-POR PARTES',''),(59,'P2-INTEGRAL-ÁREA',''),(60,'P2-INTEGRAL-VOLUME',''),(61,'P2-INTEGRAL-SUBSTITUIÇÃO TRIGONOMÉTRICA',''),(62,'natinf',''),(63,'NI',''),(64,'SistemasEnergia.old',''),(65,'Vetores',''),(66,'PMBOK',''),(67,'internet',''),(68,'projeto',''),(69,'geral',''),(70,'TecMult01',''),(71,'TecMult02',''),(72,'TecMult03',''),(73,'TecMult04',''),(74,'TecMult05',''),(75,'TecMult06',''),(76,'TecMult07',''),(77,'SisCor01',''),(78,'SisCor02',''),(79,'SisCor03',''),(80,'SisCor04',''),(81,'SisCor05',''),(82,'SisCor06',''),(83,'SisCor07',''),(84,'SisCor08',''),(85,'MetCient',''),(86,'ModDad',''),(87,'SoftLivre',''),(88,'SegInfoFixas',''),(89,'SegInfo4',''),(90,'SegInfo3',''),(91,'SegInfo2p1',''),(92,'SegInfo1',''),(93,'SegInfo2p2',''),(94,'CompMov1',''),(95,'CompMov2',''),(96,'CompMov3',''),(97,'CompMov4',''),(98,'CompMov5',''),(99,'CompMov6',''),(101,'CompMov7',''),(110,'ESTO013-17 Juros','Cálculo de Juros Compostos e equivalência de  Juros.'),(111,'ESTO013-17 VPL',''),(112,'SistemasEnergia',''),(113,'UFABC - TSI - Compiladores','- Fornecer para os alunos uma visão introdutória de Compiladores (na Teoria e na Prática).\r\n- Contribuir para que os próprios alunos realizem um projeto prático envolvendo Compilador.'),(114,'comp-topic1',''),(115,'ESTO013-17 VPL Conceitos','Questões conceituais sobre payback, TIR e VPL.'),(122,'ESTO013-17 Juros e Conceitos',''),(123,'7-matriz-desenv',''),(124,'5-vetor-desenv',''),(125,'1-sequencial-desenv',''),(126,'3-condicional-desenv',''),(127,'4-repetição-desenv',''),(128,'Sistemas Lineares',''),(129,'zeros de funções',''),(130,'Patentes',''),(131,'2-módulo-parte1-desenv',''),(132,'6-módulo-parte2-desenv',''),(133,'2-módulo-parte1',''),(134,'Desenho Autor Marca',''),(135,'Indicação Cultivar Geral',''),(136,'Marcas',''),(137,'Operadores Morfológicos',''),(138,'Derivadas',''),(139,'integral',''),(140,'SD-1fundamentos1','Fundamentos de Segurança da Informação'),(141,'SD-2fundamentos2','Fundamentos de Segurança da Informação'),(143,'SD-3cifrasclassicas2','Cifras Clássicas'),(144,'SD-4cifrasbloco','Cifras de Bloco'),(145,'SD-5hash','Hash criptográfico'),(146,'SD-6chavepublica','Criptografia de chave pública'),(147,'SD-7controleacesso1','Controle de acesso'),(148,'SD-8controleacesso2','Controle de acesso'),(149,'SD-9assinatura','Assinatura Digital'),(150,'SD-10certificado','Certificado Digital de Chave Pública'),(151,'SD-11cifrasclassicas1','Cifras clássicas'),(152,'SD-12integridade','Integridade'),(153,'QS-01-introducao','');
/*!40000 ALTER TABLE `topic_topic` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `topic_topic_course`
--

DROP TABLE IF EXISTS `topic_topic_course`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `topic_topic_course` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `topic_id` int(11) NOT NULL,
  `discipline_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `topic_topic_course_topic_id_discipline_id_1242b109_uniq` (`topic_id`,`discipline_id`),
  KEY `topic_topic_course_discipline_id_921e41cb_fk_course_di` (`discipline_id`),
  CONSTRAINT `topic_topic_course_discipline_id_921e41cb_fk_course_di` FOREIGN KEY (`discipline_id`) REFERENCES `course_discipline` (`id`),
  CONSTRAINT `topic_topic_course_topic_id_2b0bcc7c_fk_topic_topic_id` FOREIGN KEY (`topic_id`) REFERENCES `topic_topic` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `topic_topic_course`
--

LOCK TABLES `topic_topic_course` WRITE;
/*!40000 ALTER TABLE `topic_topic_course` DISABLE KEYS */;
INSERT INTO `topic_topic_course` VALUES (1,1,1),(2,2,1),(3,3,1),(4,4,1),(5,5,1),(6,6,1),(7,7,1),(8,8,1),(9,9,2),(10,10,2),(11,11,2),(12,12,2),(13,13,2),(14,14,2),(15,15,2);
/*!40000 ALTER TABLE `topic_topic_course` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `topic_topic_discipline`
--

DROP TABLE IF EXISTS `topic_topic_discipline`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `topic_topic_discipline` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `topic_id` int(11) NOT NULL,
  `discipline_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `topic_topic_discipline_topic_id_discipline_id_2180320d_uniq` (`topic_id`,`discipline_id`),
  KEY `topic_topic_discipli_discipline_id_7980c44d_fk_course_di` (`discipline_id`),
  CONSTRAINT `topic_topic_discipli_discipline_id_7980c44d_fk_course_di` FOREIGN KEY (`discipline_id`) REFERENCES `course_discipline` (`id`),
  CONSTRAINT `topic_topic_discipline_topic_id_80b689ef_fk_topic_topic_id` FOREIGN KEY (`topic_id`) REFERENCES `topic_topic` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=167 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `topic_topic_discipline`
--

LOCK TABLES `topic_topic_discipline` WRITE;
/*!40000 ALTER TABLE `topic_topic_discipline` DISABLE KEYS */;
INSERT INTO `topic_topic_discipline` VALUES (1,1,1),(2,2,1),(3,3,1),(4,4,1),(5,5,1),(6,6,1),(7,7,2),(8,8,2),(9,9,2),(10,10,2),(11,11,3),(12,12,3),(13,13,3),(14,14,3),(15,15,3),(16,16,3),(19,19,11),(20,20,12),(21,21,13),(22,22,14),(23,23,14),(24,24,14),(25,25,14),(26,26,14),(27,27,14),(28,28,14),(29,29,14),(30,30,14),(31,31,14),(32,32,14),(33,33,14),(34,34,14),(35,35,15),(36,36,15),(37,37,15),(38,38,16),(39,39,16),(40,40,17),(41,41,17),(42,42,17),(43,43,17),(44,44,17),(46,46,17),(48,47,18),(49,48,18),(50,49,18),(51,50,18),(52,51,18),(53,52,18),(54,53,18),(55,54,18),(56,55,18),(57,56,18),(58,57,18),(59,58,18),(60,59,18),(61,60,18),(62,61,18),(63,62,19),(64,63,19),(65,64,20),(66,65,21),(67,66,22),(68,67,23),(69,68,24),(70,69,25),(71,70,26),(72,71,26),(73,72,26),(74,73,26),(75,74,26),(76,75,26),(77,76,26),(78,77,27),(79,78,27),(80,79,27),(81,80,27),(82,81,27),(83,82,27),(84,83,27),(85,84,27),(86,85,28),(87,86,29),(88,87,30),(89,88,31),(90,89,31),(91,90,31),(92,91,31),(93,92,31),(94,93,31),(95,94,32),(96,95,32),(97,96,32),(98,97,32),(99,98,32),(100,99,32),(102,101,32),(122,110,33),(123,111,33),(124,112,20),(125,113,19),(126,114,34),(127,115,33),(135,122,33),(136,123,35),(137,124,35),(138,125,35),(139,126,35),(140,127,35),(141,128,36),(142,129,36),(143,130,37),(144,131,35),(145,132,35),(146,133,1),(147,134,37),(148,135,37),(149,136,37),(150,137,38),(151,138,18),(152,139,18),(153,140,39),(154,141,39),(156,143,39),(157,144,39),(158,145,39),(159,146,39),(160,147,39),(161,148,39),(162,149,39),(163,150,39),(164,151,39),(165,152,39),(166,153,40);
/*!40000 ALTER TABLE `topic_topic_discipline` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-04-17  3:00:02
