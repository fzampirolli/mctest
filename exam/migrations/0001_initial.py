# Generated by Django 2.2.4 on 2020-04-17 23:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('course', '0001_initial'),
        ('topic', '0001_initial'),
        ('student', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(help_text='Exam name, for example, Exam 1', max_length=20, null=True, verbose_name='Exam name')),
                ('exam_number_of_questions_var1', models.CharField(default=20, help_text='Number of questions with difficulty level x', max_length=3, verbose_name='Difficulty 1')),
                ('exam_number_of_questions_var2', models.CharField(default=0, max_length=3, verbose_name='Difficulty 2')),
                ('exam_number_of_questions_var3', models.CharField(default=0, max_length=3, verbose_name='Difficulty 3')),
                ('exam_number_of_questions_var4', models.CharField(default=0, max_length=3, verbose_name='Difficulty 4')),
                ('exam_number_of_questions_var5', models.CharField(default=0, max_length=3, verbose_name='Difficulty 5')),
                ('exam_number_of_anwsers_question', models.CharField(choices=[('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], default='5', help_text='Number of answers per question', max_length=2, verbose_name='Answers per question')),
                ('exam_number_of_questions_text', models.CharField(default=0, help_text='Number of textual questions', max_length=3, verbose_name='Textual')),
                ('exam_variations', models.CharField(default=2, help_text='Number of exam variations', max_length=3, verbose_name='Variations')),
                ('exam_max_questions_square', models.CharField(choices=[('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', '31'), ('32', '32'), ('33', '33'), ('34', '34'), ('35', '35'), ('36', '36'), ('37', '37'), ('38', '38'), ('39', '39'), ('40', '40'), ('41', '41'), ('42', '42'), ('43', '43'), ('44', '44'), ('45', '45'), ('46', '46'), ('47', '47'), ('48', '48'), ('49', '49'), ('50', '50')], default='10', help_text='Number of questions per block', max_length=2, verbose_name='Questions by block')),
                ('exam_max_squares_horizontal', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], default='1', help_text='Maximum number of blocks horizontally', max_length=2, verbose_name='Max blocks horiz.')),
                ('exam_stylesheet', models.CharField(choices=[('Hor', 'Horizontal'), ('Ver', 'Vertical')], default='Hor', help_text='Presentations of questions in stylesheet', max_length=3, verbose_name='Stylesheet')),
                ('exam_print', models.CharField(choices=[('answ', 'Answers'), ('ques', 'Questions'), ('both', 'Both')], default='answ', help_text='Generate answersheets; questions; both', max_length=4, verbose_name='Answersheets/Questions/Both')),
                ('exam_print_eco', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='yes', help_text='Ecological (reduce number of sheets)', max_length=3, verbose_name='Ecological')),
                ('exam_student_feedback', models.CharField(blank=True, choices=[('yes', 'Yes - feedback: Header and All Questions; *createPDF* >> SEND EMAIL TO STUDENT WITH YOUR EXAM'), ('no', 'No')], default='no', help_text='Send feedback to the student', max_length=3, verbose_name='Student Feedback')),
                ('exam_room', models.CharField(blank=True, help_text='Classroom where the exam will be held', max_length=20, null=True, verbose_name='Classroom/Lab.')),
                ('exam_hour', models.DateTimeField(help_text='Date/Hour of exam, format: DD/MM/YYYY HH:MM:SS', verbose_name='Date Hour')),
                ('exam_term', models.CharField(choices=[('t1', 'First term'), ('t2', 'Second term'), ('t3', 'Third term')], default='t1', help_text='Term of exam', max_length=2, verbose_name='Term')),
                ('exam_instructions', models.TextField(blank=True, default='\\item turning off the phone', help_text="Exam instructions, for example, '\\item turning off the phone'", verbose_name='Instructions')),
                ('classrooms', models.ManyToManyField(help_text='Choose the classrooms', related_name='exams2', to='course.Classroom', verbose_name='Classrooms')),
                ('exam_who_created', models.ForeignKey(help_text='Who created this exam', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Who created')),
                ('questions', models.ManyToManyField(blank=True, help_text='Choose the questions', related_name='exams2', to='topic.Question', verbose_name='Questions')),
            ],
            options={
                'ordering': ['classrooms__discipline__courses__institutes__institute_code', 'classrooms__discipline__discipline_code', 'classrooms__classroom_code', 'exam_name'],
            },
        ),
        migrations.CreateModel(
            name='StudentExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(max_length=20, verbose_name='Exam Grade')),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studentExams2', to='exam.Exam', verbose_name='Exam')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studentExams2', to='student.Student', verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentExamQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studentAnswer', models.CharField(max_length=2, verbose_name='Student Answer')),
                ('answersOrder', models.CharField(max_length=10, verbose_name='Answers Order')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studentExamQuestions2', to='topic.Question', verbose_name='Exam Question')),
                ('studentExam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studentExamQuestions2', to='exam.StudentExam', verbose_name='Student Exam')),
            ],
        ),
        migrations.CreateModel(
            name='ClassroomExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(max_length=20, verbose_name='Discipline Grade')),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classroomExams2', to='course.Classroom', verbose_name='Student')),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classroomExams2', to='exam.Exam', verbose_name='Exam')),
            ],
        ),
    ]
